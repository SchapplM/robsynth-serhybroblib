% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% palh1m2DE1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [4x1]
%   Generalized joint coordinates (joint angles)
% qJD [4x1]
%   Generalized joint velocities
% qJDD [4x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [22x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[AB,AM,BC,BE,BG,BL,DC,EP,GH,GP,HW,ML,OT2,T1D,T2A,T2T1,phi1,phi2,phi312,phi413,phi710,phi711]';
% 
% Output:
% tau_reg [4x(4*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2020-05-01 21:04
% Revision: 970157063c8b7bcb25458a457551a083b21abdbd (2020-04-26)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = palh1m2DE1_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(4,1),zeros(4,1),zeros(4,1),zeros(3,1),zeros(22,1)}
assert(isreal(qJ) && all(size(qJ) == [4 1]), ...
  'palh1m2DE1_invdynJ_fixb_reg2_slag_vp: qJ has to be [4x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [4 1]), ...
  'palh1m2DE1_invdynJ_fixb_reg2_slag_vp: qJD has to be [4x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [4 1]), ...
  'palh1m2DE1_invdynJ_fixb_reg2_slag_vp: qJDD has to be [4x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'palh1m2DE1_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [22 1]), ...
  'palh1m2DE1_invdynJ_fixb_reg2_slag_vp: pkin has to be [22x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2020-05-01 21:02:21
% EndTime: 2020-05-01 21:03:29
% DurationCPUTime: 14.48s
% Computational Cost: add. (3514->639), mult. (8464->1071), div. (0->0), fcn. (7477->24), ass. (0->489)
t295 = sin(qJ(2));
t301 = cos(qJ(2));
t287 = cos(pkin(20));
t297 = sin(pkin(18));
t303 = cos(pkin(18));
t573 = sin(pkin(20));
t165 = t303 * t287 + t297 * t573;
t294 = sin(qJ(3));
t229 = t303 * t573;
t531 = t297 * t287;
t160 = -t229 + t531;
t300 = cos(qJ(3));
t556 = t160 * t300;
t643 = -t294 * t165 + t556;
t553 = t165 * t300;
t557 = t160 * t294;
t86 = t553 + t557;
t372 = -t295 * t86 + t301 * t643;
t587 = pkin(5) * qJD(3);
t461 = t372 * t587;
t596 = pkin(5) * t294;
t235 = pkin(1) + t596;
t61 = -pkin(5) * t556 + t165 * t235;
t127 = pkin(5) * t553;
t62 = t160 * t235 + t127;
t28 = t295 * t62 + t301 * t61;
t567 = qJD(2) * t28;
t13 = -t461 + t567;
t296 = sin(qJ(1));
t592 = g(2) * t296;
t302 = cos(qJ(1));
t593 = g(1) * t302;
t186 = t592 + t593;
t284 = sin(pkin(19));
t288 = cos(pkin(19));
t118 = -t288 * g(3) + t186 * t284;
t119 = g(3) * t284 + t186 * t288;
t43 = -t118 * t294 + t119 * t300;
t581 = t295 * t43;
t308 = qJD(1) ^ 2;
t584 = pkin(15) * t308;
t637 = -t118 * t300 - t119 * t294;
t536 = t294 * t301;
t433 = t288 * t536;
t527 = t300 * t301;
t437 = t284 * t527;
t337 = -t433 - t437;
t535 = t295 * t300;
t434 = t288 * t535;
t537 = t294 * t295;
t338 = t284 * t537 - t434;
t67 = t337 + t338;
t661 = -t301 * t637 - t67 * t584 + t581;
t285 = cos(pkin(22));
t532 = t297 * t285;
t282 = sin(pkin(22));
t542 = t282 * t303;
t163 = -t532 + t542;
t283 = sin(pkin(21));
t162 = t297 * t282 + t285 * t303;
t286 = cos(pkin(21));
t554 = t162 * t286;
t80 = -t163 * t283 + t554;
t81 = t162 * t283 + t163 * t286;
t31 = t81 * t287 + t80 * t573;
t591 = g(2) * t302;
t594 = g(1) * t296;
t636 = -t594 + t591;
t660 = t636 * t31;
t277 = t303 ^ 2;
t453 = t277 / 0.2e1 - 0.1e1 / 0.4e1;
t170 = t535 + t536;
t654 = t527 - t537;
t69 = -t170 * t284 + t288 * t654;
t575 = t308 * t69;
t659 = pkin(15) * t575 + t295 * t637 + t301 * t43;
t459 = pkin(5) * t535;
t132 = t235 * t301 + t459;
t306 = qJD(4) ^ 2;
t266 = pkin(22) + pkin(21);
t245 = sin(t266);
t246 = cos(t266);
t55 = t160 * t245 + t165 * t246;
t344 = t308 * t55;
t27 = -t295 * t61 + t62 * t301;
t375 = t245 * t27 + t246 * t28;
t485 = (qJD(1) * qJD(4));
t658 = t375 * t306 + ((2 * t485) + t344) * t132;
t546 = t246 * t160;
t547 = t245 * t165;
t57 = t546 - t547;
t53 = t57 ^ 2;
t568 = qJD(2) * t27;
t154 = t170 * pkin(5);
t657 = t154 * t344;
t276 = t301 ^ 2;
t312 = pkin(5) ^ 2;
t618 = -0.2e1 * pkin(1);
t141 = (pkin(5) * t618 - 0.4e1 * t294 * t312) * t300 * t276;
t528 = t300 * t294;
t207 = 0.2e1 * t312 * t528;
t656 = t141 + t207;
t32 = t295 * t643 + t301 * t86;
t357 = t32 * t587;
t11 = t568 + t357;
t184 = -pkin(9) * t297 + pkin(11) * t303;
t185 = pkin(9) * t303 + pkin(11) * t297;
t410 = t573 * t185;
t103 = t184 * t287 + t410;
t411 = t573 * t184;
t104 = t185 * t287 - t411;
t190 = t295 * t235;
t222 = pkin(5) * t527;
t198 = t222 + pkin(15);
t126 = -t190 + t198;
t30 = t80 * t287 - t573 * t81;
t15 = t636 * t30;
t243 = t277 - 0.1e1 / 0.2e1;
t523 = t303 * t297;
t457 = pkin(11) * t523;
t157 = t243 * pkin(9) + t457;
t412 = t243 * pkin(11);
t458 = pkin(9) * t523;
t158 = t412 - t458;
t268 = t287 ^ 2;
t413 = t287 * t573;
t354 = t157 * t268 - t158 * t413;
t40 = -t303 * t185 / 0.2e1 + t354;
t470 = 0.2e1 * t126 * t245;
t561 = t126 * t165;
t234 = t246 ^ 2;
t210 = -t523 / 0.2e1;
t395 = t453 * pkin(9);
t38 = pkin(11) * t210 + t354 - t395;
t574 = t38 * t234;
t385 = t157 * t413;
t209 = t523 / 0.2e1;
t430 = pkin(9) * t209 - pkin(11) * t453;
t39 = t158 * t268 + t385 + t430;
t583 = t245 * t39;
t321 = t160 * t470 + t246 * (0.2e1 * t561 + 0.8e1 * t583) + 0.4e1 * t40 - 0.8e1 * t574;
t342 = t170 * qJD(3);
t502 = qJD(2) * t301;
t424 = t235 * t502;
t503 = qJD(2) * t300;
t427 = t295 * t503;
t71 = -t424 + (-t342 - t427) * pkin(5);
t521 = t71 * qJD(1);
t468 = 0.2e1 * t521;
t78 = qJD(2) * t132 + t170 * t587;
t653 = -(t71 + t78) * qJD(4) - (qJDD(4) * t103 + t160 * t468) * t245 - (-qJDD(4) * t104 + t165 * t468) * t246 - t126 * qJDD(4) + t15 - t321 * qJDD(1);
t298 = sin(pkin(17));
t304 = cos(pkin(17));
t169 = t297 * t304 - t303 * t298;
t522 = t303 * t304;
t530 = t297 * t298;
t171 = t522 + t530;
t642 = t169 * t295 + t171 * t301;
t74 = t642 * qJD(2);
t364 = t169 * t301 - t171 * t295;
t494 = qJDD(1) * t364;
t493 = qJDD(1) * t642;
t259 = g(3) * t295;
t525 = t301 * t302;
t533 = t296 * t301;
t429 = g(1) * t525 + g(2) * t533 + t259;
t269 = t288 ^ 2;
t251 = t269 / 0.2e1;
t225 = t251 - 0.1e1 / 0.4e1;
t237 = t269 - 0.1e1 / 0.2e1;
t272 = t294 ^ 2;
t275 = t300 ^ 2;
t191 = t237 * t275;
t539 = t288 * t284;
t394 = t528 * t539;
t336 = -0.2e1 * t394 + t191;
t511 = t272 - t275;
t534 = t295 * t301;
t441 = t237 * t528;
t625 = t511 * t539 - 0.2e1 * t441;
t652 = -t511 * t225 + t276 * (t237 * t272 - t336) - t534 * t625 - t394;
t473 = pkin(1) * t596;
t315 = pkin(1) ^ 2;
t508 = t312 + t315;
t544 = t275 * t312;
t166 = -0.2e1 * t473 - t508 + 0.2e1 * t544;
t651 = (-t166 * t295 - t198 * t235) * t301;
t650 = 0.2e1 * pkin(15);
t649 = -0.2e1 * qJD(1);
t648 = 0.2e1 * qJD(1);
t609 = 0.2e1 * qJDD(1);
t647 = pkin(2) * pkin(15);
t343 = t86 * qJD(3);
t66 = t643 * qJD(3);
t18 = qJD(2) * t372 - t295 * t343 + t301 * t66;
t59 = pkin(5) * t343;
t60 = pkin(5) * t66;
t4 = -t295 * t59 + t301 * t60 - t567;
t562 = t126 * t160;
t646 = -qJD(2) * t4 - qJDD(2) * t27 - (qJD(3) * t18 + qJDD(3) * t32) * pkin(5) - t308 * t562;
t499 = qJD(3) * t301;
t19 = t32 * qJD(2) + t66 * t295 + t86 * t499;
t5 = t295 * t60 + t301 * t59 + t568;
t645 = -qJD(2) * t5 - qJDD(2) * t28 - (qJD(3) * t19 - qJDD(3) * t372) * pkin(5) + t104 * t485 - (t561 + 0.4e1 * t583) * t308;
t270 = qJD(2) + qJD(3);
t25 = t270 * t69;
t590 = g(3) * t300;
t129 = -t294 * t186 + t590;
t377 = -g(3) * t294 - t186 * t300;
t572 = pkin(1) * qJDD(2);
t644 = t295 * t129 + t300 * t572 - t301 * t377;
t469 = -0.2e1 * t534;
t175 = t469 * t528;
t489 = t276 - 0.1e1 / 0.2e1;
t641 = -t511 * t489 + t175;
t242 = t275 - 0.1e1 / 0.2e1;
t273 = t295 ^ 2;
t510 = t273 - t276;
t640 = -t510 * t242 + t175;
t638 = -0.1e1 / 0.4e1 + t394 - t191;
t541 = t284 * t294;
t363 = -t288 * t300 + t541;
t635 = t363 * qJD(3);
t75 = t364 * qJD(2);
t613 = 0.4e1 * t308;
t633 = g(3) * t31 + t126 * t485 - t186 * t30 + t574 * t613;
t314 = pkin(2) ^ 2;
t465 = pkin(2) * t537;
t585 = pkin(15) * t288;
t123 = t237 * t465 - t585 / 0.2e1;
t436 = t275 * t539;
t600 = pkin(2) * t295;
t37 = t436 * t600 + t123 * t300 - t284 * (-pkin(15) * t294 + t288 * t600) / 0.2e1;
t99 = -t269 / 0.2e1 - t638;
t632 = -0.4e1 * t99 * t314 * t534 + 0.2e1 * t37 * t600 - t433 * t647;
t630 = t242 * t539 + t441;
t444 = qJD(3) * pkin(1) * qJD(2);
t215 = t300 * t444;
t629 = t294 * t572 - t295 * t377 + t215;
t374 = t245 * t32 - t246 * t372;
t627 = t170 * t485 + t306 * t374;
t258 = t295 * pkin(15);
t230 = t258 - pkin(1);
t604 = pkin(1) * t276;
t181 = -t230 - t604;
t262 = pkin(1) * t295;
t231 = t262 - pkin(15);
t549 = t231 * t295;
t378 = -t549 + t604;
t623 = qJD(2) * t378 - qJD(3) * t181;
t538 = t288 * t294;
t173 = -pkin(2) * t538 + t258;
t216 = (-0.2e1 * t269 + 0.1e1) * t314;
t622 = pkin(2) * t173 * t541 + 0.2e1 * t625 * t314 * t276 - t216 * t528 - t434 * t647;
t341 = t654 * qJD(3);
t70 = -qJD(2) * t190 + (t300 * t502 + t341) * pkin(5);
t95 = qJD(2) * t654 + t341;
t621 = -pkin(5) * (qJD(3) * t95 + qJDD(3) * t170) - t186 - qJD(2) * t70 - qJDD(2) * t132;
t228 = t276 * t288;
t435 = t288 * t534;
t438 = t284 * t534;
t577 = t301 * pkin(15);
t620 = -t577 + (-(-t273 * t288 + t228 - 0.2e1 * t438) * t300 - (t510 * t284 - 0.2e1 * t435) * t294) * pkin(2);
t616 = -0.2e1 * t198;
t615 = -0.2e1 * t301;
t614 = -0.2e1 * t308;
t611 = -0.8e1 * qJDD(1);
t610 = -0.2e1 * qJDD(1);
t608 = pkin(15) / 0.2e1;
t607 = t78 / 0.2e1;
t606 = -0.2e1 * t276;
t603 = pkin(1) * t294;
t602 = pkin(2) * t635;
t540 = t284 * t300;
t159 = t538 + t540;
t601 = pkin(2) * t159;
t599 = pkin(2) * t301;
t598 = pkin(4) * t283;
t597 = pkin(5) * (pkin(5) + t603);
t595 = pkin(5) * t300;
t260 = g(3) * t301;
t589 = t300 * pkin(1);
t586 = pkin(14) * t308;
t463 = t303 * t598;
t400 = t282 * t463;
t462 = pkin(4) * t532;
t52 = pkin(4) * t554 + t283 * t462 - pkin(15) - t400;
t47 = t262 + t52;
t582 = t270 * t47;
t576 = t308 * t53;
t571 = qJD(1) * t25;
t26 = t270 * (-t170 * t288 - t284 * t654);
t570 = qJD(1) * t26;
t569 = qJD(1) * t95;
t566 = t103 * t245;
t565 = t104 * t246;
t560 = t132 * t308;
t559 = t154 * t308;
t558 = t159 * t301;
t555 = t363 * t295;
t414 = t277 * t573;
t550 = (-t414 + t573 / 0.2e1) * t287;
t279 = qJ(3) + qJ(2);
t256 = cos(t279);
t545 = t256 * t308;
t310 = pkin(11) ^ 2;
t311 = pkin(9) ^ 2;
t264 = -t310 + t311;
t214 = t264 * t277;
t543 = t282 * t285;
t529 = t298 * t304;
t526 = t301 * t129;
t524 = t301 * t308;
t520 = -qJD(2) * t602 + qJDD(2) * t601;
t519 = t170 * t636;
t518 = t654 * t636;
t517 = qJDD(2) * t597 + t312 * qJDD(3);
t409 = pkin(9) * t457;
t516 = 0.2e1 * t409 + t214;
t255 = sin(t279);
t249 = t255 ^ 2;
t250 = t256 ^ 2;
t513 = t249 - t250;
t293 = sin(qJ(4));
t271 = t293 ^ 2;
t299 = cos(qJ(4));
t274 = t299 ^ 2;
t512 = t271 - t274;
t509 = t311 / 0.4e1 - t310 / 0.4e1;
t247 = -t311 / 0.2e1 + t310 / 0.2e1;
t507 = qJD(1) * t270;
t506 = qJD(1) * t293;
t505 = qJD(1) * t299;
t504 = qJD(2) * t270;
t500 = qJD(3) * t300;
t497 = qJD(4) * t299;
t496 = qJDD(1) * t67;
t495 = qJDD(1) * t69;
t491 = -qJD(2) - t270;
t490 = t234 - 0.1e1 / 0.2e1;
t488 = 0.2e1 * pkin(2);
t487 = qJD(1) * qJD(2);
t486 = qJD(1) * qJD(3);
t484 = qJDD(1) * t103;
t483 = qJDD(1) * t654;
t482 = qJDD(1) * t170;
t224 = qJDD(1) * t256;
t481 = qJDD(1) * t293;
t480 = qJDD(1) * t299;
t479 = qJDD(2) * t363;
t223 = t255 * qJDD(1);
t478 = t295 * qJDD(1);
t253 = t301 * qJDD(1);
t477 = 0.2e1 * t262;
t476 = -0.2e1 * t599;
t475 = 0.2e1 * pkin(14);
t472 = pkin(5) * t589;
t471 = pkin(15) * t591;
t466 = pkin(1) * t524;
t464 = pkin(2) * t535;
t460 = pkin(5) * t537;
t220 = g(2) * t525;
t455 = t67 * t575;
t454 = t642 * t308 * t364;
t452 = pkin(1) * t503;
t451 = pkin(1) * t502;
t450 = pkin(1) * t500;
t449 = t255 * t308 * t47;
t448 = t47 * t545;
t447 = 0.2e1 * t487;
t446 = pkin(1) * t253;
t445 = pkin(15) * t502;
t440 = t245 * (t229 * t531 + t243 * t268 - t453) * t246;
t267 = t285 ^ 2;
t439 = t267 * t523;
t432 = t308 * t170 * t654;
t426 = t295 * t502;
t431 = t656 * qJD(3) - 0.2e1 * t166 * t426;
t428 = t294 * t502;
t425 = t295 * t500;
t423 = -t547 / 0.4e1;
t421 = t295 * t487;
t420 = t301 * t487;
t418 = t299 * t485;
t208 = t523 / 0.4e1;
t94 = t268 * t523 + t210 + t550;
t23 = t94 * t234 - t440 + t268 * t210 - t550 / 0.2e1 + t208;
t331 = t490 * t94 - t440;
t352 = t546 / 0.4e1 + t423;
t406 = qJDD(4) * t352 + (t23 + t331) * qJDD(1);
t402 = pkin(1) * t445;
t399 = -0.2e1 * t425;
t397 = t491 * qJD(3);
t396 = t299 * t293 * t576;
t238 = 0.2e1 * t473;
t393 = (t238 + t508) * qJDD(2) + qJDD(3) * t597 + 0.2e1 * pkin(5) * t215 + qJD(3) ^ 2 * t472;
t392 = t429 * pkin(1) + t315 * qJDD(2);
t391 = t255 * t256 * t507;
t390 = pkin(15) * t594 - t471;
t389 = t295 * t420;
t388 = t293 * t418;
t387 = t636 * t295;
t117 = pkin(9) * t412 + t247 * t523;
t386 = t117 * t413;
t309 = pkin(15) ^ 2;
t380 = -t276 * t315 + t309 + t315;
t174 = (-pkin(15) + t477) * t301;
t379 = qJD(2) * t174 + t231 * t499;
t72 = -pkin(5) * t557 - t127;
t73 = t643 * pkin(5);
t376 = ((t295 * t72 + t301 * t73) * qJD(2) + t461) * t245 + ((t295 * t73 - t301 * t72) * qJD(2) + t357) * t246;
t265 = qJDD(2) + qJDD(3);
t373 = t25 * t270 - t265 * t67;
t22 = qJD(1) * t331 + qJD(4) * t352;
t50 = (t531 / 0.4e1 - t229 / 0.4e1) * t246 + t423;
t370 = qJD(1) * (qJD(4) * t50 - t22);
t369 = qJD(4) * (qJD(1) * t23 + t22);
t368 = t565 - t566;
t121 = t276 * t284 - t284 + t435;
t122 = t228 - t288 - t438;
t367 = t121 * t294 - t122 * t300;
t144 = t636 * t284;
t145 = t636 * t288;
t366 = -t144 * t294 + t145 * t300;
t361 = -t482 - t569;
t307 = qJD(2) ^ 2;
t180 = qJDD(2) * t301 - t295 * t307;
t358 = t265 * t589 + t644;
t355 = t40 * qJD(1) + t126 * qJD(4) / 0.2e1;
t348 = -t123 * t294 + t540 * t608;
t347 = t166 * t276 + t309 + t508 - t544;
t346 = t265 * t603 + t270 * t450 + t629;
t133 = t222 - t190;
t143 = t654 * t587;
t340 = -t132 * qJDD(1) + (qJD(2) * t133 + t143 - t70) * qJD(1);
t335 = t294 * t499 + t427;
t334 = -0.2e1 * qJDD(1) * t126 - 0.2e1 * t521;
t278 = t304 ^ 2;
t105 = t243 * t278 + t522 * t530 - t453;
t97 = -t243 * t529 + t278 * t523 + t210;
t333 = t510 * t105 + t97 * t469;
t100 = t251 + t638;
t332 = -t510 * t100 - t469 * t630;
t330 = t352 * t613;
t328 = -t294 * t444 + t504 * t603 + t644;
t327 = t300 * (t425 + t428);
t325 = -t270 * t452 - t526 + t629;
t322 = 0.2e1 * pkin(1) * t420 + t231 * t609 + t636;
t319 = -t374 * qJDD(4) + (-t18 * t245 - t19 * t246) * qJD(4) + t361;
t317 = -t375 * qJDD(4) + ((-t5 + t11) * t246 + (-t4 - t13) * t245) * qJD(4) + t340;
t316 = (t126 - t368) * t306 + t321 * t485 + t621;
t263 = t270 ^ 2;
t244 = t314 * t265;
t232 = t258 * t618;
t217 = t315 * t534;
t211 = t295 * t524;
t202 = t315 * t426;
t182 = t510 * t308;
t179 = -qJDD(2) * t295 - t301 * t307;
t176 = t255 * t545;
t167 = t460 + t231;
t156 = t513 * t308;
t155 = t222 - t460;
t153 = qJDD(1) * t276 - 0.2e1 * t389;
t152 = qJDD(1) * t273 + 0.2e1 * t389;
t151 = qJDD(1) * t309 + t390;
t139 = t159 * qJD(3);
t116 = t247 + t516;
t115 = -pkin(1) * t180 - t186;
t108 = -0.2e1 * t295 * t253 + 0.2e1 * t510 * t487;
t107 = t181 * t300 + t231 * t536;
t106 = t181 * t294 - t231 * t527;
t102 = t184 * t285 + t185 * t282;
t96 = -qJD(2) * t170 - t342;
t87 = qJD(2) * t155 + t143;
t83 = t636 * t171;
t82 = t636 * t169;
t63 = t144 * t300 + t145 * t294;
t58 = pkin(15) + (-t159 * t295 - t301 * t363) * pkin(2);
t49 = -(-pkin(1) * t577 + t217) * t308 + t392;
t48 = qJDD(1) * t55 + qJDD(4);
t42 = -g(3) * t169 + t171 * t186;
t41 = -g(3) * t171 - t169 * t186;
t36 = (t202 - t402) * t648 + (t232 + t380) * qJDD(1) + t636 * t231;
t35 = t482 + (-t270 * t654 + t95) * qJD(1);
t34 = t483 + (t170 * t270 + t96) * qJD(1);
t10 = t495 + (-t270 * t67 + t26) * qJD(1);
t6 = t496 * pkin(2);
t1 = [0, 0, 0, 0, 0, qJDD(1), -t636, t186, 0, 0, t153, t108, t180, t152, t179, 0, (-t420 - t478) * t650 + t387, -g(1) * t533 + t220 + (t421 - t253) * t650, -t186, t151, (t482 + 0.2e1 * t569) * t170, 0.4e1 * qJDD(1) * (t242 * t534 + t489 * t528) + 0.4e1 * t640 * t487 + 0.4e1 * t641 * t486, t170 * t265 + t270 * t95, (t648 * t96 + t483) * t654, t265 * t654 + t270 * t96, 0, (t379 * t294 - t300 * t623) * t648 + t106 * t609 - t518, (t294 * t623 + t379 * t300) * t648 + t107 * t609 + t519, t115, t36, qJDD(1) * t53, ((t243 * t413 + t209) * t234 + t440 + (-t414 / 0.2e1 + t573 / 0.4e1) * t287 + (-0.1e1 / 0.4e1 - t490 * t268) * t523) * t611, 0, qJDD(1) * t55 ^ 2, 0, 0, t334 * t55 + t15, -t334 * t57 + t660, t621, (-0.2e1 * t402 + t431) * qJD(1) + (t232 + t347) * qJDD(1) + t198 * t594 - t471 + t636 * t190 + (-t300 * t220 + (pkin(5) * t327 * t615 - 0.2e1 * pkin(15) * t428 - 0.2e1 * t230 * t500 + t452 * t606) * qJD(1) + (-t167 * t527 - t230 * t294) * t609 + t167 * t335 * t648) * pkin(5), (qJDD(1) * t274 - 0.2e1 * t388) * t53, 0.2e1 * (-t293 * t480 + t485 * t512) * t53, 0.4e1 * t293 * t369 - 0.4e1 * t299 * t406, (qJDD(1) * t271 + 0.2e1 * t388) * t53, 0.4e1 * t293 * t406 + 0.4e1 * t299 * t369, t48 * t55, t316 * t293 + t653 * t299, -t653 * t293 + t316 * t299, -0.8e1 * t352 * t521 + (t39 * t234 + (t38 * t245 + t562 / 0.4e1) * t246 + t126 * t423 + t430 * t268 - t385 / 0.2e1 - t458 / 0.4e1 + (-0.1e1 / 0.4e1 + t277 / 0.4e1) * pkin(11)) * t611 - t660, ((t117 * t268 + t116 * t413 / 0.2e1 + t509 * t523 - pkin(11) * t395) * t245 + t104 * t126 / 0.4e1) * t246 * t611 - 0.2e1 * t521 * t565 + t470 * t484 + t468 * t566 + (t424 * t616 + (t198 * t399 + 0.2e1 * t450 + (0.2e1 * t190 - t650) * t335) * pkin(5) + t431) * qJD(1) - t636 * (((t184 * t282 - t185 * t285) * t287 + t573 * t102) * t286 + (t102 * t287 - t282 * t411 + t285 * t410) * t283 + t126) + (0.4e1 * (t116 * t268 + t247 * t277 - 0.2e1 * t386 - t409 + t509) * t234 + t190 * t616 + t222 * t650 + t238 + (t264 - 0.4e1 * t409 - 0.2e1 * t214) * t268 + 0.4e1 * t386 + t310 + t347 + t516) * qJDD(1), (t364 * t447 + t493) * t642, 0.8e1 * qJDD(1) * (-t105 * t534 + t210 * t278 + t97 * t276 + t453 * t529 + t208) + 0.8e1 * t333 * t487, qJD(2) * t75 + qJDD(2) * t642, (-0.2e1 * t487 * t642 + t494) * t364, -qJD(2) * t74 + qJDD(2) * t364, 0, t295 * t83 - t301 * t82 + (qJD(1) * t74 - t494) * t475, t295 * t82 + t301 * t83 + (qJD(1) * t75 + t493) * t475, -t186, (pkin(14) * qJDD(1) + t636) * pkin(14), qJDD(1) * t163 ^ 2, -0.4e1 * qJDD(1) * (t243 * t543 + t209 - t439), 0, qJDD(1) * t162 ^ 2, 0, 0, t322 * t162, t322 * t163, t115, t36, (t496 - 0.2e1 * t571) * t67, -0.8e1 * qJDD(1) * (t100 * t534 + t225 * t528 - t630 * t276 + (t275 / 0.2e1 - 0.1e1 / 0.4e1) * t539) - 0.8e1 * t332 * t487 - 0.8e1 * t652 * t486, t373, (t495 + 0.2e1 * t570) * t69, t26 * t270 + t265 * t69, 0, t295 * t63 - t301 * t366 + (t495 + t570) * t650, t295 * t366 + t301 * t63 + (t496 - t571) * t650, -t186, t151, t153, t108, t180, t152, t179, 0, t258 * t610 + ((-t121 * t300 - t122 * t294) * qJDD(1) + t367 * t486) * t488 + t620 * t447 + t387, 0.2e1 * t58 * t421 + t220 + (t58 * t610 - t594) * t301 + (-t139 * t301 + t295 * t635 + (t555 - t558) * qJD(2)) * qJD(1) * t476, -pkin(2) * t373 - t186, (t216 * t275 + t309 + (0.4e1 * t276 * t99 + t269) * t314 + (-t173 * t540 + t37 * t615 - t537 * t585) * t488) * qJDD(1) - t366 * t599 + t144 * t464 + t145 * t465 + t390 + (((t237 * t327 + (t242 * t502 + t294 * t399) * t539) * t476 + (pkin(2) * t288 * t500 - t445) * t540) * pkin(2) + t632 * qJD(2) + (t348 * t476 + t622) * qJD(3)) * t648, qJDD(1) * t249 + 0.2e1 * t391, 0.2e1 * t223 * t256 - 0.2e1 * t507 * t513, t255 * t265 + t256 * t263, qJDD(1) * t250 - 0.2e1 * t391, -t255 * t263 + t256 * t265, 0, -0.2e1 * t47 * t224 + (t255 * t582 - t256 * t451) * t648 - t518, 0.2e1 * t47 * t223 + (t255 * t451 + t256 * t582) * t648 + t519, t115, (t451 * t52 + t202) * t648 + t636 * t47 + (t52 * t477 - 0.4e1 * pkin(4) * (-t439 * t598 + (t243 * t282 * t598 + t303 * t608) * t285 + t297 * (pkin(15) * t282 + t463) / 0.2e1) * t286 - 0.2e1 * (pkin(4) * t542 + pkin(15) * t283) * t462 + t400 * t650 + t380 + (0.4e1 * (t243 * t267 + t523 * t543 - t453) * t286 ^ 2 + (-0.2e1 * t277 + 0.1e1) * t267 + t277) * pkin(4) ^ 2) * qJDD(1); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t211, -t182, t253, -t211, -t478, qJDD(2), pkin(15) * t524 + t429, t260 + (-t186 - t584) * t295, 0, 0, -t432, t640 * t614, t35, t432, t34, t265, -(t174 * t294 - t300 * t378) * t308 - t526 + t346, -t174 * t300 * t308 + (t308 * t549 + (-t276 * t308 + t397) * pkin(1)) * t294 + t358, -t446, t49, 0, 0, 0, 0, 0, 0, -t55 * t560, t57 * t560, t340, -(t167 * t459 + t651) * t308 + (-pkin(5) * t590 + t186 * t235) * t301 + t459 * t593 - (-g(3) * t235 - t592 * t595) * t295 + t393, 0, 0, 0, 0, 0, 0, t317 * t293 - t299 * t658, t293 * t658 + t317 * t299, -t132 * t330, -(t651 + (t235 * t273 - t258) * t595) * t308 - t133 * g(3) - (t308 * t368 - t186) * t132 + t393, -t454, -0.4e1 * t308 * t333, t493, t454, t494, qJDD(2), -t295 * t41 + t301 * t42 - t586 * t642, -t295 * t42 - t301 * t41 - t364 * t586, 0, 0, 0, 0, 0, 0, 0, 0, -t162 * t466, -t163 * t466, -t446, t49, t455, t332 * t613, -t496, -t455, t10, t265, t661, t659, 0, 0, t211, -t182, t253, -t211, -t478, qJDD(2), t265 * t601 - t270 * t602 - t308 * t620 + t429 + t520, t260 + (-t308 * t58 - t186) * t295 + (t265 * t363 + t479 + (t337 + t555) * t524 - t491 * t139) * pkin(2), t6, t244 - (t314 * t606 * t630 + t632) * t308 + (t118 * t527 + t119 * t536 + t437 * t584 + t581) * pkin(2), -t176, t156, t223, t176, t224, t265, -t449 + (pkin(1) * t545 - t129) * t301 + t346, -t448 + (-t255 * t524 + t294 * t397) * pkin(1) + t358, -t446, -(pkin(1) * t301 * t52 + t217) * t308 + t392; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t432, t641 * t614, t35, t432, t34, t265, -t107 * t308 + t325, t106 * t308 + t328, 0, 0, 0, 0, 0, 0, 0, 0, -t55 * t559, t57 * t559, pkin(5) * t361 + t87 * qJD(1), -(t469 * t544 + t656) * t308 / 0.2e1 + ((t259 + (-t167 * t308 + t186) * t301) * t294 + (-pkin(1) * t307 + t186 * t295 + t230 * t308 - t260) * t300) * pkin(5) + t517, 0, 0, 0, 0, 0, 0, t87 * t506 - t299 * t657 + (-t154 * t505 + t293 * t376) * qJD(4) + (t319 * t293 - t299 * t627) * pkin(5), t87 * t505 + t293 * t657 + (t154 * t506 + t299 * t376) * qJD(4) + (t293 * t627 + t319 * t299) * pkin(5), -t154 * t330, -t307 * t472 - t155 * g(3) + t186 * t154 + (-t141 / 0.2e1 - t207 / 0.2e1 - t368 * t154 + ((t198 * t295 - pkin(1)) * t300 + (pkin(15) - t190) * t536) * pkin(5)) * t308 + t517, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t455, t652 * t613, -t496, -t455, t10, t265, t661, t659, 0, 0, 0, 0, 0, 0, 0, 0, (-t308 * t367 + t363 * t504) * pkin(2) + t520, (t479 + (t338 - t558) * t524 + (-t159 * t270 + t139) * qJD(2)) * pkin(2), t6, t244 - ((t336 * t600 + t348) * t476 + t314 * t436 + t622) * t308 - t637 * t599 - t118 * t465 + t119 * t464, -t176, t156, t223, t176, t224, t265, t325 - t449, t328 - t448, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t396, -t512 * t576, 0.4e1 * t293 * t370 - 0.4e1 * t480 * t50, -t396, 0.4e1 * t299 * t370 + 0.4e1 * t481 * t50, t48, -t126 * t480 - t71 * t505 + (t607 * t648 + t636) * t299 + (t104 * t480 + (-t104 * t506 - t13 * t299) * qJD(4) + t13 * t497) * t246 + (t645 * t246 - t355 * t648 + t633) * t293 + ((-qJD(4) * t11 - t484) * t299 + t11 * t497 + t646 * t293) * t245, t126 * t481 + t71 * t506 + (t607 * t649 - t636) * t293 + (t355 * t649 + t633) * t299 + ((-t418 - t481) * t104 + t645 * t299) * t246 + (t103 * t481 + t646 * t299) * t245, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
tau_reg = t1;
