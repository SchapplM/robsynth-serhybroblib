% Calculate inertial parameters regressor of joint inertia matrix for
% palh1m2DE1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [4x1]
%   Generalized joint coordinates (joint angles)
% pkin [22x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[AB,AM,BC,BE,BG,BL,DC,EP,GH,GP,HW,ML,OT2,T1D,T2A,T2T1,phi1,phi2,phi312,phi413,phi710,phi711]';
% 
% Output:
% MM_reg [((4+1)*4/2)x(4*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2020-05-01 21:04
% Revision: 970157063c8b7bcb25458a457551a083b21abdbd (2020-04-26)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = palh1m2DE1_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(4,1),zeros(22,1)}
assert(isreal(qJ) && all(size(qJ) == [4 1]), ...
  'palh1m2DE1_inertiaJ_reg2_slag_vp: qJ has to be [4x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [22 1]), ...
  'palh1m2DE1_inertiaJ_reg2_slag_vp: pkin has to be [22x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
t104 = sin(pkin(18));
t109 = cos(pkin(18));
t93 = sin(pkin(20));
t97 = cos(pkin(20));
t35 = t104 * t97 - t109 * t93;
t39 = t104 * t93 + t109 * t97;
t82 = pkin(22) + pkin(21);
t69 = sin(t82);
t70 = cos(t82);
t13 = t35 * t70 - t39 * t69;
t10 = t13 ^ 2;
t91 = sin(pkin(22));
t95 = cos(pkin(22));
t37 = t104 * t91 + t109 * t95;
t103 = sin(qJ(2));
t62 = pkin(1) * t103 - pkin(15);
t198 = t62 * t37;
t152 = t109 * t104;
t135 = pkin(11) * t152;
t127 = pkin(9) * t135;
t114 = pkin(11) ^ 2;
t115 = pkin(9) ^ 2;
t81 = -t114 + t115;
t89 = t109 ^ 2;
t57 = t81 * t89;
t126 = -0.2e1 * t57 - 0.4e1 * t127 + t81;
t84 = t97 ^ 2;
t197 = t126 * t84;
t108 = cos(qJ(2));
t153 = t108 * t103;
t151 = -t89 / 0.2e1 + 0.1e1 / 0.4e1;
t133 = t84 * t152;
t196 = 0.4e1 * t133 - 0.2e1 * t152;
t116 = pkin(5) ^ 2;
t119 = pkin(1) ^ 2;
t102 = sin(qJ(3));
t175 = pkin(5) * t102;
t50 = 0.2e1 * pkin(1) * t175 + t116 + t119;
t194 = 2 * pkin(14);
t193 = -0.2e1 * pkin(15);
t107 = cos(qJ(3));
t154 = t107 * t108;
t137 = pkin(5) * t154;
t66 = pkin(1) + t175;
t49 = t103 * t66;
t27 = t49 - t137;
t25 = -pkin(15) + t27;
t192 = -0.2e1 * t25;
t191 = 0.2e1 * t25;
t90 = qJ(3) + qJ(2);
t76 = sin(t90);
t190 = 0.2e1 * t76;
t189 = -0.2e1 * t89;
t188 = 0.4e1 * t89;
t101 = sin(qJ(4));
t187 = -0.2e1 * t101;
t186 = -0.2e1 * t108;
t88 = t108 ^ 2;
t185 = 0.4e1 * t88 - 0.2e1;
t184 = 0.8e1 * t88 - 0.4e1;
t183 = -0.8e1 * t89 + 0.4e1;
t182 = t189 + 0.1e1;
t181 = t188 - 0.2e1;
t94 = sin(pkin(19));
t163 = t107 * t94;
t98 = cos(pkin(19));
t166 = t102 * t98;
t32 = t163 + t166;
t180 = pkin(2) * t32;
t36 = -t102 * t94 + t107 * t98;
t179 = pkin(2) * t36;
t178 = pkin(9) * t89;
t159 = t94 * t103;
t33 = -t108 * t98 + t159;
t34 = t103 * t98 + t108 * t94;
t14 = -t102 * t33 + t107 * t34;
t177 = t14 * pkin(2);
t176 = pkin(5) * t101;
t106 = cos(qJ(4));
t174 = pkin(5) * t106;
t173 = pkin(15) * t94;
t172 = t108 * pkin(1);
t171 = t35 * t69;
t92 = sin(pkin(21));
t170 = t62 * t92;
t169 = t91 * t95;
t168 = t93 * t97;
t167 = 0.2e1 * t127 + t57;
t165 = t103 * pkin(15);
t164 = t104 * t95;
t162 = t109 * t91;
t87 = t107 ^ 2;
t161 = (0.4e1 * t87 - 0.2e1) * t153;
t160 = t87 * t116;
t158 = -t115 / 0.2e1 + t114 / 0.2e1;
t157 = t102 * t108;
t156 = t103 * t107;
t155 = t107 * t102;
t149 = t87 - 0.1e1 / 0.2e1;
t68 = t89 - 0.1e1 / 0.2e1;
t148 = t69 * t192;
t146 = -0.2e1 * t165;
t145 = -0.2e1 * t49;
t144 = -0.2e1 * t178 - 0.2e1 * t135 + pkin(9);
t143 = pkin(4) * t162;
t129 = t68 * pkin(11);
t136 = pkin(9) * t152;
t142 = (t129 - t136) * t168;
t141 = t69 * (t152 * t168 + t68 * t84 + t151) * t70;
t140 = (pkin(9) * t129 + t158 * t152) * t168;
t139 = (t68 * pkin(9) + t135) * t168;
t138 = pkin(2) * t156;
t134 = 0.4e1 * t178 + 0.4e1 * t135 - 0.2e1 * pkin(9);
t132 = t88 * t155;
t131 = -pkin(1) * t88 + pkin(1) - t165;
t130 = t39 * t70 + t171;
t128 = pkin(2) * t163 - t165;
t125 = (0.8e1 * t84 - 0.4e1) * t152;
t46 = -pkin(9) * t104 + pkin(11) * t109;
t47 = pkin(9) * t109 + pkin(11) * t104;
t124 = t46 * t97 + t47 * t93;
t123 = t102 * t34 + t107 * t33;
t105 = sin(pkin(17));
t110 = cos(pkin(17));
t42 = t104 * t110 - t105 * t109;
t44 = t104 * t105 + t109 * t110;
t16 = t103 * t44 - t108 * t42;
t38 = -t162 + t164;
t111 = pkin(15) ^ 2;
t29 = pkin(1) * t146 - t88 * t119 + t111 + t119;
t26 = pkin(5) * t156 + t108 * t66;
t122 = (t183 * t84 + t181) * pkin(11);
t121 = t111 + (0.2e1 * t160 - t50) * t88 + t50 - t160;
t120 = pkin(11) * t189 + (t181 * pkin(11) - 0.4e1 * t136) * t84 + 0.2e1 * t136 + 0.4e1 * t139;
t118 = pkin(2) ^ 2;
t96 = cos(pkin(21));
t86 = t103 ^ 2;
t85 = t98 ^ 2;
t83 = t95 ^ 2;
t80 = pkin(1) * t107;
t78 = pkin(1) * t102;
t77 = cos(t90);
t74 = 0.2e1 * t80;
t73 = 0.2e1 * t78;
t65 = t70 ^ 2;
t58 = -0.2e1 * t153;
t55 = pkin(5) * (t78 + pkin(5));
t43 = t156 + t157;
t41 = t102 * t103 - t154;
t22 = t88 * t149 - t153 * t155 - t87 / 0.2e1 + 0.1e1 / 0.4e1;
t21 = -t46 * t93 + t47 * t97;
t19 = t103 * t42 + t108 * t44;
t18 = -t104 * t41 - t109 * t43;
t17 = t104 * t43 - t109 * t41;
t9 = t130 ^ 2;
t8 = -t104 * t26 + t109 * t27;
t7 = t104 * t27 + t109 * t26;
t6 = (t37 * t96 + t38 * t92) * pkin(4) + t62;
t5 = -t124 * t69 + t21 * t70 + t25;
t4 = (t68 * t168 + (-t84 + 0.1e1 / 0.2e1) * t152) * t65 + t141 + t133 / 0.2e1 + t151 * t168 - t152 / 0.4e1;
t3 = (-t17 * t93 + t18 * t97) * t70 - t69 * (t17 * t97 + t18 * t93);
t2 = (t7 * t97 - t8 * t93) * t70 - (t7 * t93 + t8 * t97) * t69;
t1 = (t134 * t84 - 0.4e1 * t142 + t144) * t65 + ((-pkin(11) - t120) * t69 + t25 * t39) * t70 + t25 * t171 + t144 * t84 + 0.2e1 * t142 + t109 * t47;
t11 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t88, t58, 0, t86, 0, 0, t146, pkin(15) * t186, 0, t111, t43 ^ 2, t185 * t155 + t161, 0, t41 ^ 2, 0, 0, 0.2e1 * t131 * t102 - 0.2e1 * t62 * t154, 0.2e1 * t131 * t107 + 0.2e1 * t62 * t157, 0, t29, t10, (t183 * t168 + t125) * t65 - 0.8e1 * t141 + t181 * t168 - t196, 0, t9, 0, 0, -t130 * t192, -t13 * t191, 0, -0.2e1 * (t49 - pkin(15)) * t137 + pkin(15) * t145 + t121, t106 ^ 2 * t10, t106 * t10 * t187, 0.8e1 * t4 * t106, t101 ^ 2 * t10, -0.8e1 * t101 * t4, t9, 0.2e1 * t1 * t106, t1 * t187, (pkin(9) * t125 + t122 - 0.8e1 * t139) * t65 + (((t183 * pkin(9) - 0.8e1 * t135) * t84 + 0.8e1 * t142 + t134) * t69 + t35 * t191) * t70 + t39 * t148 + 0.2e1 * pkin(11) + t120, (-0.8e1 * t140 + t126 - 0.2e1 * t197) * t65 + (t21 * t191 + (-0.4e1 * (t158 + t167) * t168 + t196 * t81 + pkin(9) * t122) * t69) * t70 + t124 * t148 + t197 + 0.4e1 * t140 + (pkin(15) + t137) * t145 + 0.2e1 * pkin(15) * t137 + t114 + t121 + t167, t19 ^ 2, -t185 * t152 + t153 * t188 + t58 + (-0.8e1 * t105 * ((t88 - 0.1e1 / 0.2e1) * t89 + t152 * t153 - t88 / 0.2e1 + 0.1e1 / 0.4e1) + (t184 * t152 + t183 * t153) * t110) * t110, 0, t16 ^ 2, 0, 0, t16 * t194, t19 * t194, 0, pkin(14) ^ 2, t38 ^ 2, -t181 * t169 + (0.4e1 * t83 - 0.2e1) * t152, 0, t37 ^ 2, 0, 0, 0.2e1 * t198, -0.2e1 * t62 * t38, 0, t29, t14 ^ 2, ((0.8e1 * t87 - 0.4e1) * t153 + t184 * t155) * t85 + 0.8e1 * t22 * t94 * t98 - 0.4e1 * t132 - t161 + 0.2e1 * t155, 0, t123 ^ 2, 0, 0, t123 * t193, t14 * t193, 0, t111, t88, t58, 0, t86, 0, 0, 0.2e1 * (-t153 * t36 - t32 * t88 + t166) * pkin(2) + 0.2e1 * t128, (pkin(15) + (-t103 * t32 + t108 * t36) * pkin(2)) * t186, 0, -0.4e1 * pkin(2) * (pkin(2) * t94 * t132 + (-pkin(15) * t107 / 0.2e1 + t149 * pkin(2) * t159) * t108 - t102 * t128 / 0.2e1) * t98 + 0.2e1 * pkin(2) * (t138 - t173) * t157 - 0.2e1 * t138 * t173 + t111 + (0.4e1 * t22 * t85 + (-0.2e1 * t87 + 0.1e1) * t88 + t87) * t118, t76 ^ 2, t77 * t190, 0, t77 ^ 2, 0, 0, -0.2e1 * t6 * t77, t6 * t190, 0, -0.2e1 * t143 * t170 + t29 + 0.2e1 * ((t198 + (t182 * t169 + (0.2e1 * t83 - 0.1e1) * t152) * t92 * pkin(4)) * t96 + (-t143 + t170) * t164) * pkin(4) + (0.4e1 * (t152 * t169 + t68 * t83 + t151) * t96 ^ 2 + t182 * t83 + t89) * pkin(4) ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t108, 0, -t103, 0, 0, 0, 0, 0, 0, 0, t43, 0, -t41, 0, 0, 0, -t172, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t26, 0, 0, 0, 0, 0, 0, 0, -t26 * t101, -t106 * t26, 0, 0, 0, 0, t19, 0, -t16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t172, 0, 0, 0, t14, 0, -t123, 0, 0, 0, 0, 0, 0, 0, t108, 0, -t103, 0, 0, 0, -t177, 0, 0, 0, t76, 0, t77, 0, 0, 0, -t172, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, t73, t74, 0, t119, 0, 0, 0, 0, 0, 0, 0, 0, 0, t50, 0, 0, 0, 0, 0, 0, 0, 0, 0, t50, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t119, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * t180, -0.2e1 * t179, 0, t118, 0, 0, 0, 0, 0, 1, t73, t74, 0, t119; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t43, 0, -t41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -pkin(5) * t43, 0, 0, 0, 0, 0, 0, 0, -t43 * t176, -t43 * t174, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t14, 0, -t123, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t177, 0, 0, 0, t76, 0, t77, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, t78, t80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t55, 0, 0, 0, 0, 0, 0, 0, 0, 0, t55, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t180, -t179, 0, t118, 0, 0, 0, 0, 0, 1, t78, t80, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t116, 0, 0, 0, 0, 0, 0, 0, 0, 0, t116, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t118, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t106 * t13, 0, t101 * t13, t130, t5 * t106, -t101 * t5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2 * t101, -t106 * t2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3 * t176, t3 * t174, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MM_reg = t11;
