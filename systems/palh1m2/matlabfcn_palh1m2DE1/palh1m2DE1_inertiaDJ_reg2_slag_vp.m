% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% palh1m2DE1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [4x1]
%   Generalized joint coordinates (joint angles)
% qJD [4x1]
%   Generalized joint velocities
% pkin [22x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[AB,AM,BC,BE,BG,BL,DC,EP,GH,GP,HW,ML,OT2,T1D,T2A,T2T1,phi1,phi2,phi312,phi413,phi710,phi711]';
% 
% Output:
% MMD_reg [((4+1)*4/2)x(4*10)]
%   inertial parameter regressor of inertia matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2020-05-01 21:04
% Revision: 970157063c8b7bcb25458a457551a083b21abdbd (2020-04-26)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = palh1m2DE1_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(4,1),zeros(4,1),zeros(22,1)}
assert(isreal(qJ) && all(size(qJ) == [4 1]), ...
  'palh1m2DE1_inertiaDJ_reg2_slag_vp: qJ has to be [4x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [4 1]), ...
  'palh1m2DE1_inertiaDJ_reg2_slag_vp: qJD has to be [4x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [22 1]), ...
  'palh1m2DE1_inertiaDJ_reg2_slag_vp: pkin has to be [22x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2020-05-01 21:02:30
% EndTime: 2020-05-01 21:02:50
% DurationCPUTime: 3.13s
% Computational Cost: add. (865->227), mult. (2379->478), div. (0->0), fcn. (1863->22), ass. (0->189)
t115 = cos(qJ(3));
t116 = cos(qJ(2));
t178 = t115 * t116;
t110 = sin(qJ(3));
t111 = sin(qJ(2));
t183 = t111 * t110;
t51 = -t178 + t183;
t123 = t51 * qJD(3);
t172 = qJD(2) * t116;
t147 = t115 * t172;
t173 = qJD(2) * t111;
t195 = pkin(5) * t110;
t81 = pkin(1) + t195;
t224 = (t123 - t147) * pkin(5) + t81 * t173;
t103 = sin(pkin(20));
t107 = cos(pkin(20));
t112 = sin(pkin(18));
t117 = cos(pkin(18));
t46 = -t117 * t103 + t112 * t107;
t49 = t112 * t103 + t117 * t107;
t91 = pkin(22) + pkin(21);
t85 = sin(t91);
t86 = cos(t91);
t22 = t86 * t46 - t85 * t49;
t223 = t22 ^ 2;
t95 = t110 ^ 2;
t97 = t115 ^ 2;
t218 = t95 - t97;
t98 = t116 ^ 2;
t222 = t218 * t98;
t168 = t115 * qJD(3);
t148 = t111 * t168;
t57 = t81 * t172;
t191 = pkin(5) * t148 + t57;
t171 = qJD(3) * t110;
t149 = t116 * t171;
t122 = t115 * t173 + t149;
t219 = pkin(5) * t122;
t24 = t191 + t219;
t212 = 0.2e1 * t24;
t221 = t22 * t212;
t213 = -2 * pkin(15);
t96 = t111 ^ 2;
t190 = t96 - t98;
t108 = cos(pkin(19));
t104 = sin(pkin(19));
t181 = t115 * t104;
t125 = t110 * t108 + t181;
t217 = qJD(2) * t125;
t113 = sin(pkin(17));
t118 = cos(pkin(17));
t52 = t112 * t118 - t117 * t113;
t54 = t113 * t112 + t118 * t117;
t128 = t111 * t52 + t54 * t116;
t216 = t128 * qJD(2);
t94 = qJD(2) + qJD(3);
t101 = sin(pkin(22));
t105 = cos(pkin(22));
t126 = -t117 * t101 + t112 * t105;
t48 = t112 * t101 + t105 * t117;
t215 = (t126 * sin(pkin(21)) + cos(pkin(21)) * t48) * pkin(4);
t59 = -t112 * pkin(9) + t117 * pkin(11);
t60 = t117 * pkin(9) + t112 * pkin(11);
t214 = -(t103 * t60 + t59 * t107) * t85 + (-t103 * t59 + t60 * t107) * t86;
t184 = t104 * t111;
t44 = -t116 * t108 + t184;
t45 = t104 * t116 + t111 * t108;
t130 = t44 * t110 - t45 * t115;
t39 = t104 * t173 - t108 * t172;
t40 = t45 * qJD(2);
t11 = qJD(3) * t130 + t39 * t110 - t40 * t115;
t120 = pkin(2) ^ 2;
t129 = t111 * t54 - t116 * t52;
t25 = t129 * qJD(2);
t211 = -0.2e1 * t25;
t210 = 0.2e1 * t216;
t209 = 0.2e1 * t97;
t99 = t117 ^ 2;
t208 = -0.2e1 * t99;
t207 = 0.2e1 * t99;
t206 = 0.2e1 * qJD(2);
t205 = 0.4e1 * t97 - 0.2e1;
t204 = 0.8e1 * t97 - 0.4e1;
t201 = 0.4e1 * t99 - 0.2e1;
t131 = -t45 * t110 - t44 * t115;
t12 = qJD(3) * t131 - t40 * t110 - t39 * t115;
t200 = pkin(2) * t12;
t41 = t125 * qJD(3);
t199 = pkin(2) * t41;
t47 = -t110 * t104 + t115 * t108;
t42 = t47 * qJD(3);
t198 = pkin(2) * t42;
t196 = pkin(2) * t104;
t193 = t85 * t46;
t100 = qJ(3) + qJ(2);
t88 = sin(t100);
t192 = t94 * t88;
t89 = cos(t100);
t63 = t94 * t89;
t78 = pkin(1) * t111 - pkin(15);
t189 = t104 * pkin(15);
t187 = t111 * pkin(15);
t61 = t111 * t81;
t146 = t110 * t168;
t136 = t111 * t146;
t186 = (-t205 * t172 + 0.8e1 * t136) * t116;
t185 = t103 * t107;
t182 = t111 * t116;
t180 = t115 * t110;
t179 = t115 * t111;
t177 = t116 * t110;
t176 = t117 * t112;
t174 = t97 - 0.1e1 / 0.2e1;
t84 = t99 - 0.1e1 / 0.2e1;
t109 = sin(qJ(4));
t170 = qJD(4) * t109;
t114 = cos(qJ(4));
t169 = qJD(4) * t114;
t163 = -t99 / 0.2e1 + 0.1e1 / 0.4e1;
t80 = t86 ^ 2;
t92 = t107 ^ 2;
t167 = -0.8e1 * qJD(4) * ((t84 * t185 + (-t92 + 0.1e1 / 0.2e1) * t176) * t80 + t85 * (t176 * t185 + t84 * t92 + t163) * t86 + t92 * t176 / 0.2e1 + t163 * t185 - t176 / 0.4e1);
t160 = pkin(11) * t176;
t166 = pkin(9) * t208 + pkin(9) - 0.2e1 * t160;
t165 = t88 * t63;
t164 = 0.2e1 * t182;
t162 = pkin(5) * t178;
t161 = pkin(9) * t176;
t159 = pkin(1) * t172;
t158 = pkin(1) * t171;
t83 = pkin(1) * t168;
t157 = qJD(3) * t196;
t156 = (pkin(11) * t84 - t161) * t185;
t155 = pkin(15) * t173;
t153 = pkin(15) * t172;
t152 = t115 * t177;
t151 = t111 * t178;
t150 = pkin(1) * t98 - pkin(1) + t187;
t145 = t111 * t172;
t119 = pkin(5) ^ 2;
t121 = pkin(1) ^ 2;
t135 = t119 * t146;
t68 = -0.2e1 * t145;
t72 = pkin(5) * t83;
t71 = 0.2e1 * t72;
t144 = (-0.2e1 * pkin(1) * t195 + t119 * t209 - t119 - t121) * t68 + (-0.2e1 * t72 - 0.4e1 * t135) * t98 + 0.2e1 * t135 + t71;
t143 = t174 * t116;
t142 = -0.2e1 * t57;
t140 = t110 * t157;
t139 = t223 * t109 * t169;
t138 = t176 * t182;
t137 = t110 * t151;
t134 = t120 * t146;
t38 = t61 - t162;
t36 = -pkin(15) + t38;
t127 = qJD(2) * t137;
t53 = t177 + t179;
t6 = (t49 * t86 + t193) * t24;
t93 = t108 ^ 2;
t82 = pkin(1) * t173;
t74 = 0.2e1 * t83;
t73 = -0.2e1 * t158;
t67 = 0.2e1 * t145;
t65 = t121 * t145;
t64 = pkin(15) + t162;
t58 = t205 * t111;
t56 = t61 - pkin(15);
t50 = t190 * t206;
t37 = pkin(5) * t179 + t116 * t81;
t35 = -0.2e1 * pkin(1) * t153 + 0.2e1 * t65;
t30 = t94 * t53;
t29 = -qJD(2) * t51 - t123;
t28 = -t112 * t51 - t53 * t117;
t27 = t112 * t53 - t51 * t117;
t18 = -t37 * t112 + t38 * t117;
t17 = t112 * t38 + t37 * t117;
t16 = t215 + t78;
t15 = t112 * t29 - t30 * t117;
t14 = -t112 * t30 - t29 * t117;
t13 = (-0.2e1 * t111 * t143 + t180 * t190) * qJD(2) + (t218 * t182 + (-0.2e1 * t98 + 0.1e1) * t180) * qJD(3);
t10 = t112 * t224 + t24 * t117;
t9 = t112 * t24 - t117 * t224;
t8 = t214 + t36;
t5 = (-t27 * t103 + t28 * t107) * t86 - t85 * (t28 * t103 + t27 * t107);
t4 = (-t18 * t103 + t17 * t107) * t86 - t85 * (t17 * t103 + t18 * t107);
t3 = ((pkin(9) * t201 + 0.4e1 * t160) * t92 - 0.4e1 * t156 + t166) * t80 + (((-pkin(11) * t201 + 0.4e1 * t161) * t92 - 0.4e1 * (pkin(9) * t84 + t160) * t185 + pkin(11) * t207 - 0.2e1 * t161 - pkin(11)) * t85 + t36 * t49) * t86 + t36 * t193 + t166 * t92 + 0.2e1 * t156 + t117 * t60;
t2 = (-t15 * t103 + t14 * t107) * t86 - t85 * (t14 * t103 + t15 * t107);
t1 = (-t10 * t103 + t9 * t107) * t86 - t85 * (t10 * t107 + t9 * t103);
t7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t68, t50, 0, t67, 0, 0, -0.2e1 * t153, 0.2e1 * t155, 0, 0, 0.2e1 * t53 * t29, -t186 + (-t58 - 0.8e1 * t152) * t173 - t218 * qJD(3) * (0.4e1 * t98 - 0.2e1), 0, 0.2e1 * t51 * t30, 0, 0, 0.2e1 * (-t115 * t150 + t177 * t78) * qJD(3) + 0.2e1 * (-pkin(15) * t177 + t78 * t179 + (t110 * t164 - t98 * t115) * pkin(1)) * qJD(2), 0.2e1 * (t110 * t150 + t178 * t78) * qJD(3) + 0.2e1 * (-pkin(15) * t178 - t78 * t183 + (t98 * t110 + 0.2e1 * t151) * pkin(1)) * qJD(2), 0, t35, 0, 0, 0, 0, 0, 0, 0.2e1 * t6, -t221, 0, pkin(15) * t142 + 0.2e1 * (t56 * t149 + (-t191 * t116 + (-pkin(15) * qJD(3) + t56 * qJD(2)) * t111) * t115) * pkin(5) + t144, -0.2e1 * t139, 0.2e1 * (t109 ^ 2 - t114 ^ 2) * t223 * qJD(4), t109 * t167, 0.2e1 * t139, t114 * t167, 0, 0.2e1 * t6 * t114 - 0.2e1 * t170 * t3, -0.2e1 * t6 * t109 - 0.2e1 * t169 * t3, t221, t64 * t142 + 0.2e1 * (t122 * t61 - t148 * t64) * pkin(5) + t144 + t214 * t212 + t219 * t213, t128 * t211, (0.8e1 * t138 + (-0.8e1 * ((t208 + 0.1e1) * t182 - t190 * t176) * t113 + 0.4e1 * (t96 * t207 + t98 * t208 - 0.4e1 * t138 - t190) * t118) * t118 - t190 * t201) * qJD(2), 0, t129 * t210, 0, 0, pkin(14) * t210, pkin(14) * t211, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t48 * t159, -0.2e1 * t126 * t159, 0, t35, -0.2e1 * t130 * t12, (t204 * t98 + (-t204 * t111 - 0.16e2 * t152) * t111) * qJD(2) * t93 + 0.8e1 * t13 * t104 * t108 + 0.8e1 * t127 + t186 + t58 * t173 + (0.4e1 * t222 + (-0.16e2 * t137 - t218 * (0.8e1 * t98 - 0.4e1)) * t93 - 0.2e1 * t95 + t209) * qJD(3), 0, 0.2e1 * t131 * t11, 0, 0, -t11 * t213, t12 * t213, 0, 0, t68, t50, 0, t67, 0, 0, -0.2e1 * t153 + 0.2e1 * (t41 * t182 - t42 * t98 + t42 + (t125 * t164 + t190 * t47) * qJD(2)) * pkin(2), 0.2e1 * t155 + 0.2e1 * (-t96 * t217 + ((t41 + t217) * t116 + (t47 * t206 + t42) * t111) * t116) * pkin(2), 0, -0.4e1 * pkin(2) * (-0.2e1 * t127 * t196 + (pkin(15) * t171 / 0.2e1 + (qJD(2) * t143 - 0.2e1 * t136) * t196) * t116 - (-pkin(15) * t115 / 0.2e1 + t174 * pkin(2) * t184) * t173 - (pkin(2) * t181 - t187) * t168 / 0.2e1 - t110 * (-t140 - t153) / 0.2e1 - t157 * t222) * t108 + 0.4e1 * t98 * t134 + 0.2e1 * t140 * t187 - 0.2e1 * pkin(2) * t147 * t189 - 0.2e1 * t134 + 0.2e1 * (-t110 * t173 + t116 * t168) * pkin(2) * (pkin(2) * t179 - t189) + 0.2e1 * (0.2e1 * t13 * t93 - (-0.2e1 * t97 + 0.1e1) * t145 + (-t111 * t171 + t147) * t177) * t120, 0.2e1 * t165, 0.2e1 * (-t88 ^ 2 + t89 ^ 2) * t94, 0, -0.2e1 * t165, 0, 0, -0.2e1 * t159 * t89 + 0.2e1 * t16 * t192, 0.2e1 * t159 * t88 + 0.2e1 * t16 * t63, 0, 0.2e1 * t65 + 0.2e1 * (-pkin(15) + t215) * t159; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t173, 0, -t172, 0, 0, 0, 0, 0, 0, 0, t29, 0, -t30, 0, 0, 0, t82, 0, 0, 0, 0, 0, 0, 0, 0, 0, t224, 0, 0, 0, 0, 0, 0, 0, t109 * t224 - t169 * t37, t114 * t224 + t170 * t37, 0, 0, 0, 0, -t25, 0, -t216, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t82, 0, 0, 0, t12, 0, t11, 0, 0, 0, 0, 0, 0, 0, -t173, 0, -t172, 0, 0, 0, -t200, 0, 0, 0, t63, 0, -t192, 0, 0, 0, t82, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t74, t73, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t71, 0, 0, 0, 0, 0, 0, 0, 0, 0, t71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t198, 0.2e1 * t199, 0, 0, 0, 0, 0, 0, 0, 0, t74, t73, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t29, 0, -t30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -pkin(5) * t29, 0, 0, 0, 0, 0, 0, 0, (-t109 * t29 - t169 * t53) * pkin(5), (-t114 * t29 + t170 * t53) * pkin(5), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t12, 0, t11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t200, 0, 0, 0, t63, 0, -t192, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t83, -t158, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t72, 0, 0, 0, 0, 0, 0, 0, 0, 0, t72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t198, t199, 0, 0, 0, 0, 0, 0, 0, 0, t83, -t158, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t22 * t170, 0, t22 * t169, 0, t24 * t114 - t170 * t8, -t109 * t24 - t169 * t8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1 * t109 - t169 * t4, -t1 * t114 + t170 * t4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, (t109 * t2 + t169 * t5) * pkin(5), (t114 * t2 - t170 * t5) * pkin(5), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg = t7;
