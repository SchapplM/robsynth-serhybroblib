% Calculate inertial parameters regressor of coriolis joint torque vector for
% palh1m2DE1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [4x1]
%   Generalized joint coordinates (joint angles)
% qJD [4x1]
%   Generalized joint velocities
% pkin [22x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[AB,AM,BC,BE,BG,BL,DC,EP,GH,GP,HW,ML,OT2,T1D,T2A,T2T1,phi1,phi2,phi312,phi413,phi710,phi711]';
% 
% Output:
% tauc_reg [4x(4*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2020-05-01 21:04
% Revision: 970157063c8b7bcb25458a457551a083b21abdbd (2020-04-26)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = palh1m2DE1_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(4,1),zeros(4,1),zeros(22,1)}
assert(isreal(qJ) && all(size(qJ) == [4 1]), ...
  'palh1m2DE1_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [4x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [4 1]), ...
  'palh1m2DE1_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [4x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [22 1]), ...
  'palh1m2DE1_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [22x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2020-05-01 21:02:21
% EndTime: 2020-05-01 21:02:59
% DurationCPUTime: 6.34s
% Computational Cost: add. (2107->356), mult. (5509->699), div. (0->0), fcn. (4745->22), ass. (0->334)
t201 = qJD(2) ^ 2;
t196 = cos(qJ(3));
t405 = pkin(5) * t196;
t321 = pkin(1) * t405;
t448 = t201 * t321;
t192 = sin(qJ(2));
t197 = cos(qJ(2));
t188 = cos(pkin(20));
t193 = sin(pkin(18));
t198 = cos(pkin(18));
t386 = sin(pkin(20));
t111 = t198 * t188 + t193 * t386;
t191 = sin(qJ(3));
t150 = t198 * t386;
t354 = t193 * t188;
t107 = -t150 + t354;
t378 = t107 * t196;
t435 = -t191 * t111 + t378;
t376 = t111 * t196;
t379 = t107 * t191;
t63 = t376 + t379;
t244 = -t192 * t63 + t197 * t435;
t401 = pkin(5) * qJD(3);
t313 = t244 * t401;
t406 = pkin(5) * t191;
t155 = pkin(1) + t406;
t45 = -pkin(5) * t378 + t111 * t155;
t90 = pkin(5) * t376;
t46 = t107 * t155 + t90;
t23 = t192 * t46 + t197 * t45;
t383 = qJD(2) * t23;
t9 = -t313 + t383;
t189 = cos(pkin(19));
t362 = t189 * t191;
t186 = sin(pkin(19));
t365 = t186 * t196;
t106 = -t362 - t365;
t366 = t186 * t191;
t239 = -t189 * t196 + t366;
t223 = t239 * t192;
t211 = t106 * t197 + t223;
t202 = qJD(1) ^ 2;
t351 = t197 * t202;
t447 = t211 * t351;
t203 = pkin(5) ^ 2;
t358 = t191 * t203;
t140 = 0.2e1 * t196 * t358;
t180 = t197 ^ 2;
t440 = -0.2e1 * pkin(5);
t345 = pkin(1) * t440;
t98 = (t345 - 0.4e1 * t358) * t196 * t180;
t446 = t140 + t98;
t22 = -t192 * t45 + t46 * t197;
t445 = qJD(2) * t22;
t184 = sin(pkin(22));
t187 = cos(pkin(22));
t444 = -t184 * t198 + t187 * t193;
t171 = pkin(22) + pkin(21);
t161 = cos(t171);
t160 = sin(t171);
t380 = t107 * t160;
t39 = t111 * t161 + t380;
t438 = 2 * qJD(1);
t357 = t192 * t196;
t359 = t191 * t197;
t116 = t357 + t359;
t221 = t116 * qJD(3);
t334 = qJD(2) * t196;
t281 = t192 * t334;
t333 = qJD(2) * t197;
t282 = t155 * t333;
t52 = -t282 + (-t221 - t281) * pkin(5);
t311 = pkin(5) * t357;
t92 = t155 * t197 + t311;
t59 = qJD(2) * t92 + t116 * t401;
t443 = t59 * qJD(4) + (t39 * t438 + qJD(4)) * t52;
t173 = t189 ^ 2;
t156 = t173 - 0.1e1 / 0.2e1;
t164 = t173 / 0.2e1;
t176 = t191 ^ 2;
t179 = t196 ^ 2;
t132 = t156 * t179;
t360 = t191 * t196;
t363 = t189 * t186;
t259 = t360 * t363;
t219 = -0.2e1 * t259 + t132;
t340 = t176 - t179;
t356 = t192 * t197;
t292 = t156 * t360;
t424 = t340 * t363 - 0.2e1 * t292;
t442 = t180 * (t156 * t176 - t219) - t340 * (t164 - 0.1e1 / 0.4e1) - t424 * t356 - t259;
t205 = pkin(1) ^ 2;
t368 = t179 * t203;
t112 = t191 * t345 - t203 - t205 + 0.2e1 * t368;
t352 = t196 * t197;
t146 = pkin(5) * t352;
t137 = t146 + pkin(15);
t441 = (-t112 * t192 - t137 * t155) * t197;
t330 = qJD(3) * t197;
t216 = t191 * t330 + t281;
t439 = 0.2e1 * t216;
t437 = pkin(2) * pkin(15);
t24 = t192 * t435 + t197 * t63;
t48 = t435 * qJD(3);
t14 = t24 * qJD(2) + t48 * t192 + t63 * t330;
t323 = qJD(1) * qJD(4);
t128 = -pkin(9) * t193 + pkin(11) * t198;
t129 = pkin(9) * t198 + pkin(11) * t193;
t78 = -t386 * t128 + t129 * t188;
t283 = t78 * t323;
t181 = t198 ^ 2;
t159 = t181 - 0.1e1 / 0.2e1;
t350 = t198 * t193;
t104 = t159 * pkin(9) + pkin(11) * t350;
t310 = pkin(9) * t350;
t105 = t159 * pkin(11) - t310;
t172 = t188 ^ 2;
t270 = t188 * t386;
t428 = 0.1e1 / 0.4e1 - t181 / 0.2e1;
t398 = t160 * (t105 * t172 + t104 * t270 + t310 / 0.2e1 + t428 * pkin(11));
t373 = t155 * t192;
t265 = t146 - t373;
t89 = pkin(15) + t265;
t399 = t111 * t89;
t222 = t63 * qJD(3);
t43 = pkin(5) * t222;
t44 = pkin(5) * t48;
t4 = t192 * t44 + t197 * t43 + t445;
t436 = -qJD(2) * t4 - t14 * t401 + t283 - (0.4e1 * t398 + t399) * t202;
t174 = qJD(2) + qJD(3);
t361 = t191 * t192;
t238 = -t352 + t361;
t50 = -t116 * t186 - t238 * t189;
t20 = t174 * t50;
t235 = t24 * t401;
t194 = sin(pkin(17));
t199 = cos(pkin(17));
t115 = t193 * t199 - t198 * t194;
t349 = t198 * t199;
t353 = t193 * t194;
t117 = t349 + t353;
t240 = t115 * t192 + t117 * t197;
t241 = t115 * t197 - t117 * t192;
t434 = t240 * t241;
t200 = qJD(4) ^ 2;
t433 = (t160 * t24 - t161 * t244) * t200;
t316 = -0.2e1 * t356;
t120 = t316 * t360;
t432 = t120 - t340 * (t180 - 0.1e1 / 0.2e1);
t158 = t179 - 0.1e1 / 0.2e1;
t177 = t192 ^ 2;
t339 = t177 - t180;
t431 = -t339 * t158 + t120;
t429 = -0.1e1 / 0.4e1 + t259 - t132;
t55 = t240 * qJD(2);
t56 = t241 * qJD(2);
t204 = pkin(2) ^ 2;
t286 = t189 * t359;
t289 = t179 * t363;
t408 = pkin(2) * t192;
t85 = pkin(2) * t156 * t361 - pkin(15) * t189 / 0.2e1;
t427 = -t286 * t437 - 0.4e1 * (-t173 / 0.2e1 - t429) * t204 * t356 + 0.2e1 * (t289 * t408 + t85 * t196 - t186 * (-pkin(15) * t191 + t189 * t408) / 0.2e1) * t408;
t425 = t158 * t363 + t292;
t168 = t192 * pkin(15);
t151 = t168 - pkin(1);
t410 = pkin(1) * t180;
t123 = -t151 - t410;
t169 = pkin(1) * t192;
t152 = t169 - pkin(15);
t250 = -t152 * t192 + t410;
t423 = t250 * qJD(2) - qJD(3) * t123;
t287 = t189 * t357;
t422 = -t287 * t437 + pkin(2) * (-pkin(2) * t362 + t168) * t366 + (0.2e1 * t424 * t180 - (-0.2e1 * t173 + 0.1e1) * t360) * t204;
t13 = t244 * qJD(2) - t192 * t222 + t197 * t48;
t3 = -t192 * t43 + t197 * t44 - t383;
t377 = t107 * t202;
t141 = -t350 / 0.2e1;
t154 = t161 ^ 2;
t230 = t104 * t172 - t105 * t270;
t387 = (pkin(9) * t428 + pkin(11) * t141 + t230) * t154;
t417 = 0.4e1 * t202;
t421 = t387 * t417 + (-qJD(2) * t3 - t13 * t401 - t89 * t377) * t160;
t149 = t180 * t189;
t288 = t189 * t356;
t291 = t186 * t356;
t420 = -(-t177 * t189 + t149 - 0.2e1 * t291) * t196 - (t339 * t186 - 0.2e1 * t288) * t191;
t419 = -0.2e1 * t197;
t418 = -0.2e1 * t202;
t416 = -2 * qJD(1);
t414 = 4 * qJD(1);
t413 = t59 / 0.2e1;
t412 = -0.2e1 * t180;
t409 = pkin(1) * t197;
t220 = t238 * qJD(3);
t51 = -qJD(2) * t373 + (t196 * t333 - t220) * pkin(5);
t99 = t238 * t401;
t404 = t265 * qJD(2) - t51 - t99;
t403 = 0.2e1 * t92;
t400 = pkin(14) * t202;
t183 = qJ(3) + qJ(2);
t166 = sin(t183);
t109 = t184 * t193 + t187 * t198;
t36 = -pkin(15) + (cos(pkin(21)) * t109 + sin(pkin(21)) * t444) * pkin(4);
t33 = t169 + t36;
t397 = t166 * t33;
t396 = t174 * t20;
t395 = t174 * t33;
t391 = t197 * pkin(15);
t370 = t161 * t107;
t371 = t160 * t111;
t41 = t370 - t371;
t37 = t41 ^ 2;
t390 = t202 * t37;
t389 = t202 * t50;
t388 = t202 * t92;
t385 = qJD(1) * t52;
t102 = t116 * pkin(5);
t382 = t102 * t202;
t374 = t159 * t270;
t167 = cos(t183);
t369 = t167 * t202;
t355 = t192 * t202;
t348 = t201 * t192;
t347 = t201 * t197;
t295 = pkin(1) * qJD(2) * qJD(3);
t143 = t196 * t295;
t331 = qJD(3) * t196;
t302 = pkin(1) * t331;
t344 = t174 * t302 + t143;
t343 = qJD(3) ^ 2 * t321 + 0.2e1 * pkin(5) * t143;
t342 = t166 ^ 2 - t167 ^ 2;
t190 = sin(qJ(4));
t195 = cos(qJ(4));
t341 = t190 ^ 2 - t195 ^ 2;
t338 = qJD(1) * t174;
t337 = qJD(1) * t190;
t336 = qJD(1) * t195;
t335 = qJD(2) * t174;
t328 = qJD(4) * t195;
t326 = -qJD(2) - t174;
t324 = qJD(1) * qJD(2);
t322 = pkin(2) * t419;
t320 = pkin(14) * t438;
t319 = t20 * t416;
t21 = t174 * (-t116 * t189 + t238 * t186);
t318 = t21 * t438;
t317 = -0.2e1 * t385;
t314 = pkin(1) * t351;
t312 = pkin(5) * t361;
t290 = t186 * t352;
t49 = t186 * t361 - t286 - t287 - t290;
t309 = t202 * pkin(15) * t49;
t308 = t49 * t389;
t307 = t202 * t434;
t280 = t192 * t333;
t305 = t446 * qJD(3) - 0.2e1 * t112 * t280;
t304 = pkin(1) * t334;
t303 = pkin(1) * t333;
t300 = t160 * (t150 * t354 + t159 * t172 + t428) * t161;
t299 = t33 * t369;
t298 = pkin(15) * t351;
t297 = t39 * t382;
t296 = 0.2e1 * t324;
t294 = pkin(15) * t333;
t285 = t202 * t116 * t238;
t284 = qJD(4) * (-t3 - t9);
t279 = t192 * t331;
t278 = -t371 / 0.4e1;
t276 = qJD(4) * (t235 - t4 + t445);
t275 = t192 * t324;
t274 = t197 * t324;
t272 = t195 * t323;
t266 = -0.2e1 * t294;
t264 = pkin(1) * t294;
t262 = -0.2e1 * t279;
t261 = t326 * qJD(3);
t260 = t195 * t190 * t390;
t258 = t166 * t167 * t338;
t257 = t192 * t274;
t252 = 0.2e1 * pkin(1) * t274;
t119 = (-pkin(15) + 0.2e1 * t169) * t197;
t251 = qJD(2) * t119 + t152 * t330;
t53 = -pkin(5) * t379 - t90;
t54 = t435 * pkin(5);
t249 = ((t192 * t53 + t197 * t54) * qJD(2) + t313) * t160 + ((t192 * t54 - t197 * t53) * qJD(2) + t235) * t161;
t248 = -t13 * t160 - t14 * t161;
t246 = t160 * (t128 * t188 + t386 * t129) - t161 * t78;
t245 = t191 * (t180 * t186 - t186 + t288) - t196 * (t149 - t189 - t291);
t243 = t37 * t190 * t272;
t237 = -t174 * t304 + t143;
t236 = (pkin(1) * t335 - t295) * t191;
t226 = t370 / 0.4e1 + t278;
t69 = t172 * t350 + t141 - t374;
t15 = t226 * qJD(4) + (-t300 + (t154 - 0.1e1 / 0.2e1) * t69) * qJD(1);
t234 = (qJD(4) * ((t354 / 0.4e1 - t150 / 0.4e1) * t161 + t278) - t15) * t414;
t233 = 0.4e1 * qJD(4) * (qJD(1) * (t69 * t154 - t300 + t374 / 0.2e1 + (-t172 / 0.2e1 + 0.1e1 / 0.4e1) * t350) + t15);
t32 = -t198 * t129 / 0.2e1 + t230;
t231 = t32 * qJD(1) + t89 * qJD(4) / 0.2e1;
t229 = -t200 * t22 - t377 * t92;
t228 = -t111 * t388 - t200 * t23;
t225 = -t85 * t191 + pkin(15) * t365 / 0.2e1;
t182 = t199 ^ 2;
t218 = (-t159 * t194 * t199 + t182 * t350 + t141) * t316 + t339 * (t159 * t182 + t349 * t353 + t428);
t217 = -t425 * t316 - t339 * (t164 + t429);
t215 = t226 * t417;
t213 = t196 * (t191 * t333 + t279);
t70 = -t238 * qJD(2) - t220;
t26 = qJD(2) * t51 + t70 * t401;
t206 = -t26 + (t246 + t89) * t200 + (-0.8e1 * t387 + (0.8e1 * t398 + 0.2e1 * t399) * t161 + 0.2e1 * t89 * t380 + 0.4e1 * t32) * t323;
t170 = t174 ^ 2;
t157 = pkin(1) * t348;
t145 = t205 * t356;
t142 = t192 * t351;
t139 = t205 * t280;
t127 = -0.2e1 * t257;
t126 = 0.2e1 * t257;
t124 = t339 * t202;
t121 = t166 * t369;
t113 = t312 + t152;
t103 = t342 * t202;
t100 = t339 * t296;
t97 = t239 * qJD(3);
t96 = t106 * qJD(3);
t87 = (-pkin(1) * t391 + t145) * t202;
t82 = qJD(2) * pkin(2) * t97;
t81 = (t139 - t264) * t438;
t71 = -t116 * qJD(2) - t221;
t64 = (t146 - t312) * qJD(2) - t99;
t42 = pkin(15) + (t106 * t192 - t197 * t239) * pkin(2);
t38 = pkin(15) * t389;
t31 = (t116 * t174 + t71) * qJD(1);
t30 = (t174 * t238 + t70) * qJD(1);
t18 = (-t174 * t49 + t21) * qJD(1);
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t127, t100, -t348, t126, -t347, 0, qJD(1) * t266, 0.2e1 * pkin(15) * t275, 0, 0, t116 * t70 * t438, (t431 * qJD(2) + t432 * qJD(3)) * t414, t174 * t70, -t238 * t71 * t438, t174 * t71, 0, (t251 * t191 - t423 * t196) * t438, (t423 * t191 + t251 * t196) * t438, t157, t81, 0, 0, 0, 0, 0, 0, t39 * t317, -t41 * t317, -t26, (-0.2e1 * t264 + (pkin(5) * t213 * t419 + t113 * t439 - 0.2e1 * t151 * t331 + t191 * t266 + t304 * t412) * pkin(5) + t305) * qJD(1), -0.2e1 * t243, 0.2e1 * t341 * t37 * t323, t190 * t233, 0.2e1 * t243, t195 * t233, 0, t206 * t190 - t195 * t443, t190 * t443 + t206 * t195, -0.8e1 * t226 * t385, (-0.2e1 * t137 * t282 + t305 + (t137 * t262 + t373 * t439 + 0.2e1 * t302) * pkin(5) + pkin(15) * t216 * t440 + 0.2e1 * t246 * t52) * qJD(1), t296 * t434, 0.8e1 * t218 * t324, qJD(2) * t56, -0.2e1 * t324 * t434, -qJD(2) * t55, 0, t55 * t320, t56 * t320, 0, 0, 0, 0, 0, 0, 0, 0, t109 * t252, -t444 * t252, t157, t81, t49 * t319, -0.8e1 * qJD(1) * (t217 * qJD(2) + qJD(3) * t442), t396, t50 * t318, t174 * t21, 0, pkin(15) * t318, pkin(15) * t319, 0, 0, t127, t100, -t348, t126, -t347, 0, (t245 * qJD(3) * pkin(2) + (pkin(2) * t420 - t391) * qJD(2)) * t438, 0.2e1 * t42 * t275 - 0.2e1 * (qJD(2) * t211 + qJD(3) * t223 + t197 * t96) * t197 * pkin(2) * qJD(1), -pkin(2) * t396, (((t156 * t213 + (t158 * t333 + t191 * t262) * t363) * t322 + (pkin(2) * t189 * t331 - t294) * t365) * pkin(2) + t427 * qJD(2) + (t225 * t322 + t422) * qJD(3)) * t438, 0.2e1 * t258, -0.2e1 * t342 * t338, t170 * t167, -0.2e1 * t258, -t170 * t166, 0, (t166 * t395 - t167 * t303) * t438, (t166 * t303 + t167 * t395) * t438, t157, (t303 * t36 + t139) * t438; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t142, -t124, 0, -t142, 0, 0, t298, -pkin(15) * t355, 0, 0, t285, t431 * t418, t30, -t285, t31, 0, -(t119 * t191 - t196 * t250) * t202 + t344, -t119 * t196 * t202 + (t152 * t355 + (-t180 * t202 + t261) * pkin(1)) * t191, 0, -t87, 0, 0, 0, 0, 0, 0, -t39 * t388, t41 * t388, t404 * qJD(1), -(t113 * t311 + t441) * t202 + t343, 0, 0, 0, 0, 0, 0, (t190 * t276 + t195 * t228) * t161 + (t190 * t284 + t195 * t229) * t160 + (t190 * t404 - t328 * t403) * qJD(1), (-t190 * t228 + t195 * t276) * t161 + (-t190 * t229 + t195 * t284) * t160 + (qJD(4) * t190 * t403 + t195 * t404) * qJD(1), -t92 * t215, (-t441 - (t155 * t177 - t168) * t405 + t246 * t92) * t202 + t343, -t307, -0.4e1 * t202 * t218, 0, t307, 0, 0, -t240 * t400, -t241 * t400, 0, 0, 0, 0, 0, 0, 0, 0, -t109 * t314, t444 * t314, 0, -t87, t308, t217 * t417, 0, -t308, t18, 0, -t309, t38, 0, 0, t142, -t124, 0, -t142, 0, 0, t298 - t82 + (-t174 * t97 - t202 * t420) * pkin(2), -t42 * t355 + (t326 * t96 + t447) * pkin(2), 0, -(t204 * t412 * t425 - t290 * t437 + t427) * t202, -t121, t103, 0, t121, 0, 0, (t167 * t409 - t397) * t202 + t344, -t299 + (-t166 * t351 + t191 * t261) * pkin(1), 0, -(t36 * t409 + t145) * t202; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t285, t432 * t418, t30, -t285, t31, 0, -(t123 * t196 + t152 * t359) * t202 + t237, -(-t123 * t191 + t152 * t352) * t202 + t236, 0, 0, 0, 0, 0, 0, 0, 0, -t297, t41 * t382, (-pkin(5) * t70 + t64) * qJD(1), -t448 + (-(t113 * t406 - t192 * t368) * t197 - t446 / 0.2e1 + t151 * t405) * t202, 0, 0, 0, 0, 0, 0, t64 * t337 - t195 * t297 + (-t102 * t336 + t190 * t249) * qJD(4) + (-t70 * t337 - t195 * t433 + (-t116 * t336 + t190 * t248) * qJD(4)) * pkin(5), t64 * t336 + t190 * t297 + (t102 * t337 + t195 * t249) * qJD(4) + (-t70 * t336 + t190 * t433 + (t116 * t337 + t195 * t248) * qJD(4)) * pkin(5), -t102 * t215, -t448 + (-t140 / 0.2e1 - t98 / 0.2e1 + t246 * t102 + ((t137 * t192 - pkin(1)) * t196 + (pkin(15) - t373) * t359) * pkin(5)) * t202, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t308, t442 * t417, 0, -t308, t18, 0, -t309, t38, 0, 0, 0, 0, 0, 0, 0, 0, -t82 + (-t202 * t245 + t239 * t335) * pkin(2), (t447 + (t106 * t174 - t96) * qJD(2)) * pkin(2), 0, -((t219 * t408 + t225) * t322 + t204 * t289 + t422) * t202, -t121, t103, 0, t121, 0, 0, -t202 * t397 + t237, t236 - t299, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t260, -t341 * t390, t190 * t234, -t260, t195 * t234, 0, t195 * t413 * t438 - t52 * t336 + ((-t195 * t9 - t337 * t78) * qJD(4) + t328 * t9) * t161 + (t436 * t161 - t231 * t438 + t89 * t323 + t421) * t190, t190 * t413 * t416 + t89 * t272 + t52 * t337 + (t231 * t416 + (-t283 + t436) * t161 + t421) * t195, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
tauc_reg = t1;
