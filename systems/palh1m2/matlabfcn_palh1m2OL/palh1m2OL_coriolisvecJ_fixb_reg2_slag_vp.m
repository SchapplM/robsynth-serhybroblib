% Calculate inertial parameters regressor of coriolis joint torque vector for
% palh1m2OL
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [13x1]
%   Generalized joint coordinates (joint angles)
% qJD [13x1]
%   Generalized joint velocities
% pkin [20x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[AB,AM,BC,BE,BG,BL,DC,EP,GH,GP,HW,ML,OT2,T1D,T2A,T2T1,phi312,phi413,phi710,phi711]';
% 
% Output:
% tauc_reg [13x(13*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2020-05-02 23:30
% Revision: 702b02ffee4f47164fa6a11b998f1d39ead3f7a6 (2020-05-02)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = palh1m2OL_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(13,1),zeros(13,1),zeros(20,1)}
assert(isreal(qJ) && all(size(qJ) == [13 1]), ...
  'palh1m2OL_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [13x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [13 1]), ...
  'palh1m2OL_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [13x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [20 1]), ...
  'palh1m2OL_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [20x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2020-05-02 21:46:57
% EndTime: 2020-05-02 21:48:12
% DurationCPUTime: 11.14s
% Computational Cost: add. (8197->553), mult. (21115->839), div. (0->0), fcn. (17727->20), ass. (0->331)
t249 = sin(qJ(2));
t436 = sin(qJ(8));
t341 = t436 * t249;
t306 = qJD(1) * t341;
t251 = cos(qJ(8));
t255 = cos(qJ(2));
t378 = qJD(1) * t255;
t336 = t251 * t378;
t174 = t306 - t336;
t189 = -t251 * t249 - t436 * t255;
t175 = t189 * qJD(1);
t245 = sin(qJ(9));
t250 = cos(qJ(9));
t114 = t174 * t245 + t175 * t250;
t237 = qJD(2) + qJD(8);
t235 = qJD(9) + t237;
t144 = t237 * t189;
t126 = qJD(1) * t144;
t389 = t251 * t255;
t296 = t237 * t389;
t384 = t237 * t306;
t127 = qJD(1) * t296 - t384;
t373 = qJD(9) * t245;
t43 = t245 * t127 - t174 * t373 + (-qJD(9) * t175 - t126) * t250;
t26 = t114 * t235 + t43;
t284 = -t174 * t250 + t175 * t245;
t372 = qJD(9) * t250;
t44 = t245 * t126 + t127 * t250 - t174 * t372 + t175 * t373;
t27 = -t235 * t284 + t44;
t254 = cos(qJ(5));
t438 = sin(qJ(3));
t334 = qJD(1) * t438;
t440 = cos(qJ(3));
t335 = qJD(1) * t440;
t178 = t249 * t335 + t255 * t334;
t180 = -t249 * t334 + t255 * t335;
t248 = sin(qJ(4));
t439 = cos(qJ(4));
t279 = t439 * t178 + t248 * t180;
t365 = qJD(3) + qJD(4);
t325 = qJD(2) + t365;
t291 = t254 * t325;
t247 = sin(qJ(5));
t375 = qJD(5) * t247;
t346 = t440 * t255;
t278 = -t438 * t249 + t346;
t272 = t278 * qJD(2);
t262 = t278 * qJD(3) + t272;
t130 = qJD(1) * t262;
t344 = t438 * t255;
t347 = t440 * t249;
t191 = t344 + t347;
t239 = qJD(2) + qJD(3);
t263 = t239 * t191;
t261 = t263 * qJD(1);
t332 = qJD(4) * t439;
t376 = qJD(4) * t248;
t45 = -t439 * t130 + t178 * t376 - t180 * t332 + t248 * t261;
t22 = -qJD(5) * t291 + t254 * t45 + t279 * t375;
t19 = t22 * t247;
t374 = qJD(5) * t254;
t111 = t178 * t248 - t439 * t180;
t462 = t111 * t254;
t84 = t247 * t325 + t254 * t279;
t8 = -t19 + (t374 + t462) * t84;
t260 = t439 * t263;
t321 = qJD(1) * t260 + t248 * t130;
t46 = qJD(4) * t279 + t321;
t38 = t247 * t46;
t458 = qJD(5) + t111;
t429 = t374 * t458 + t38;
t7 = -t279 * t84 + t458 * t462 + t429;
t362 = pkin(1) * t440;
t437 = sin(qJ(7));
t342 = t437 * t249;
t307 = qJD(1) * t342;
t252 = cos(qJ(7));
t340 = t252 * t378;
t179 = -t307 + t340;
t244 = sin(pkin(19));
t410 = cos(pkin(19));
t426 = sin(qJ(10));
t427 = cos(qJ(10));
t187 = t244 * t426 + t410 * t427;
t270 = -t244 * t427 + t410 * t426;
t190 = t252 * t249 + t437 * t255;
t379 = qJD(1) * t190;
t283 = t179 * t270 + t187 * t379;
t68 = -t179 * t187 + t270 * t379;
t463 = t68 * t283;
t348 = t440 * t248;
t226 = pkin(1) * t348;
t360 = t438 * pkin(1);
t230 = t360 + pkin(5);
t171 = t230 * t439 + t226;
t361 = pkin(5) * t439;
t150 = t171 * qJD(2) + qJD(3) * t361;
t143 = -pkin(9) * t325 - t150;
t397 = t111 * t143;
t461 = t111 * t279;
t459 = t284 * t114;
t224 = pkin(5) * t347;
t183 = pkin(5) * t344 + t224;
t238 = qJD(2) + qJD(7);
t13 = -t283 ^ 2 + t68 ^ 2;
t31 = -t111 ^ 2 + t279 ^ 2;
t30 = -t114 ^ 2 + t284 ^ 2;
t167 = t187 * qJD(10);
t168 = t270 * qJD(10);
t328 = t437 * qJD(2);
t313 = pkin(1) * t328;
t433 = t244 * pkin(4);
t184 = t238 * t433 + t313;
t349 = t410 * pkin(4);
t425 = pkin(1) * qJD(2);
t359 = t252 * t425;
t185 = t238 * t349 + t359;
t287 = qJD(7) * t313;
t311 = qJD(7) * t359;
t50 = t167 * t184 + t168 * t185 + t187 * t287 + t270 * t311;
t228 = t249 * pkin(1) - pkin(15);
t369 = t228 * qJD(1);
t88 = t369 + (-t179 * t244 + t379 * t410) * pkin(4);
t266 = -t68 * t88 + t50;
t457 = pkin(9) * t279 + pkin(11) * t111;
t234 = qJD(10) + t238;
t146 = t238 * t190;
t128 = qJD(1) * t146;
t388 = t252 * t255;
t297 = t238 * t388;
t383 = t238 * t307;
t129 = qJD(1) * t297 - t383;
t25 = -t128 * t270 + t187 * t129 + t167 * t179 - t168 * t379;
t15 = t234 * t68 + t25;
t28 = t111 * t325 - t45;
t82 = t247 * t279 - t291;
t292 = t247 * t84 + t254 * t82;
t447 = -t22 * t254 - t84 * t375;
t408 = qJD(5) * t84;
t23 = -t247 * t45 + t408;
t448 = t247 * t23 + t82 * t374;
t1 = -t111 * t292 + t447 - t448;
t409 = qJD(1) * pkin(15);
t151 = -pkin(2) * t175 - t409;
t435 = pkin(2) * t237;
t358 = qJD(9) * t435;
t456 = t151 * t114 + t250 * t358;
t455 = -0.2e1 * pkin(15);
t451 = 0.2e1 * t228;
t225 = t439 * t362;
t170 = t230 * t248 - t225;
t434 = pkin(5) * t248;
t233 = qJD(3) * t434;
t148 = t170 * qJD(2) + t233;
t142 = pkin(11) * t325 + t148;
t229 = t438 * pkin(5) + pkin(1);
t163 = -pkin(5) * t346 + t229 * t249 - pkin(15);
t380 = qJD(1) * t163;
t55 = pkin(9) * t111 - pkin(11) * t279 + t380;
t35 = t142 * t254 + t247 * t55;
t377 = qJD(2) * t255;
t125 = qJD(2) * t224 + t183 * qJD(3) + t229 * t377;
t11 = pkin(9) * t46 + pkin(11) * t45 + qJD(1) * t125;
t308 = t438 * t439;
t123 = t230 * t332 + (qJD(4) * t348 + (t348 + t308) * qJD(3)) * pkin(1);
t302 = qJD(3) * t332;
t286 = pkin(5) * t302;
t95 = t123 * qJD(2) + t286;
t4 = -qJD(5) * t35 + t254 * t11 - t247 * t95;
t449 = -t35 * t458 - t4;
t407 = t458 * t279;
t327 = t437 * qJD(7);
t444 = t328 + t327;
t181 = -t248 * t360 + t225;
t371 = t181 * qJD(2);
t281 = pkin(5) * t376 + t371;
t288 = t142 * t247 - t254 * t55;
t293 = t247 * t288 + t254 * t35;
t40 = t254 * t46;
t443 = t279 * t82 + t40;
t24 = t128 * t187 + t129 * t270 + t167 * t379 + t168 * t179;
t14 = -t234 * t283 + t24;
t267 = t167 * t185 - t168 * t184 + t187 * t311 - t270 * t287;
t265 = -t283 * t88 + t267;
t329 = t438 * qJD(3);
t314 = pkin(1) * t329;
t124 = t365 * t225 - t230 * t376 - t248 * t314;
t222 = qJD(4) * t233;
t96 = t124 * qJD(2) - t222;
t282 = t143 * t375 + t96 * t254 + t279 * t288;
t303 = t143 * t374 - t96 * t247 + t35 * t279;
t441 = t151 * t284 + t245 * t358;
t29 = t279 * t239 - t321;
t3 = -qJD(5) * t288 + t247 * t11 + t254 * t95;
t2 = t3 * t254;
t430 = t84 * t82;
t424 = pkin(15) * t249;
t269 = t439 * t278;
t137 = t191 * t248 - t269;
t423 = t137 * t46;
t273 = t248 * t278;
t139 = t439 * t191 + t273;
t422 = t139 * t96;
t21 = t23 * t254;
t420 = t247 * t35;
t418 = t247 * t82;
t416 = t254 * t84;
t415 = t288 * t458;
t276 = pkin(1) * (t437 * t187 + t252 * t270);
t413 = qJD(2) * t276 - (t167 * t244 + t410 * t168) * pkin(4);
t277 = pkin(1) * (-t187 * t252 + t270 * t437);
t412 = qJD(2) * t277 - (-t410 * t167 + t168 * t244) * pkin(4);
t406 = t458 * t247;
t401 = t279 * t163;
t396 = t111 * t163;
t258 = qJD(1) ^ 2;
t394 = t163 * t258;
t393 = t175 * t174;
t391 = t178 * t180;
t390 = t179 * t379;
t253 = cos(qJ(6));
t387 = t253 * t258;
t386 = t255 * t258;
t246 = sin(qJ(6));
t382 = t246 ^ 2 - t253 ^ 2;
t381 = t249 ^ 2 - t255 ^ 2;
t182 = pkin(1) * t308 + t226;
t370 = t182 * qJD(2);
t367 = qJD(1) * qJD(2);
t366 = qJD(1) * qJD(6);
t364 = -t111 * t420 + t288 * t462 + t2;
t363 = t235 * t435;
t356 = pkin(1) * t377;
t355 = pkin(1) * t378;
t354 = 0.2e1 * t367;
t353 = 0.2e1 * t366;
t352 = t246 * t387;
t351 = t249 * t386;
t345 = t438 * t239;
t343 = t437 * t238;
t339 = t379 * t369;
t338 = t179 * t369;
t337 = t180 * t369;
t333 = qJD(3) * t440;
t330 = t438 * qJD(2);
t326 = t255 * t367;
t324 = 0.2e1 * qJD(2) + t365;
t164 = pkin(11) + t170;
t169 = t229 * t255 + t224;
t56 = qJD(1) * t169 + t457;
t322 = qJD(5) * t164 + t56;
t320 = t228 * pkin(1) * t386;
t319 = pkin(14) * t353;
t317 = qJD(2) * t362;
t316 = pkin(1) * t330;
t315 = pkin(1) * t333;
t312 = pkin(5) * t332;
t310 = pkin(1) * t326;
t305 = t246 * t253 * t366;
t304 = t249 * t326;
t69 = t184 * t270 - t185 * t187;
t70 = t184 * t187 + t185 * t270;
t300 = t283 * t69 - t68 * t70;
t223 = qJD(2) * t315;
t298 = -t178 * t369 + t223;
t294 = -t254 * t288 + t420;
t290 = -t164 * t46 + t397;
t231 = pkin(11) + t434;
t289 = -t231 * t46 + t397;
t285 = -t111 * t150 + t148 * t279;
t192 = -t341 + t389;
t136 = -t189 * t250 + t192 * t245;
t138 = t189 * t245 + t192 * t250;
t100 = (t410 * t179 + t244 * t379) * pkin(4);
t53 = -qJD(4) * t269 + t191 * t376 + t248 * t263 - t439 * t262;
t54 = qJD(4) * t273 + t191 * t332 + t248 * t262 + t260;
t12 = pkin(9) * t54 + pkin(11) * t53 + t125;
t61 = t137 * pkin(9) - t139 * pkin(11) + t163;
t275 = qJD(5) * t139 * t143 + t12 * t458 + t46 * t61;
t274 = -qJD(5) * t458 * t61 - t143 * t53 - t422;
t268 = -qJD(5) * t294 - t4 * t247 + t2;
t259 = t263 * t362;
t257 = qJD(2) ^ 2;
t256 = qJD(6) ^ 2;
t232 = -t361 - pkin(9);
t198 = pkin(1) * t252 + t349;
t197 = pkin(1) * t437 + t433;
t193 = -t342 + t388;
t188 = t310 * t451;
t172 = -pkin(2) * t189 - pkin(15);
t165 = -pkin(9) - t171;
t162 = t174 * t409;
t161 = t175 * t409;
t147 = -t444 * t249 + t297;
t145 = -t237 * t341 + t296;
t120 = (-t187 * t244 - t270 * t410) * pkin(4);
t119 = (-t410 * t187 + t244 * t270) * pkin(4);
t118 = t151 * t174 * pkin(2);
t101 = (t410 * t190 - t193 * t244) * pkin(4) + t228;
t94 = t100 + t355;
t93 = t178 ^ 2 - t180 ^ 2;
t92 = t179 ^ 2 - t379 ^ 2;
t91 = t174 ^ 2 - t175 ^ 2;
t90 = -t187 * t197 - t198 * t270;
t89 = -t187 * t198 + t197 * t270;
t81 = -t187 * t193 + t190 * t270;
t80 = t187 * t190 + t193 * t270;
t77 = -t180 * t239 + t130;
t76 = t178 * t239 - t261;
t75 = t383 + (t179 - t340) * t238;
t73 = t384 + (-t174 - t336) * t237;
t72 = -t175 * t237 + t126;
t63 = t356 + (t146 * t244 + t410 * t147) * pkin(4);
t60 = t310 + (t128 * t244 + t410 * t129) * pkin(4);
t59 = qJD(7) * t276 + t167 * t197 + t168 * t198;
t58 = qJD(7) * t277 - t167 * t198 + t168 * t197;
t57 = qJD(1) * t183 + t457;
t52 = qJD(9) * t138 + t245 * t144 + t250 * t145;
t51 = qJD(9) * t136 - t250 * t144 + t245 * t145;
t48 = t150 * t254 + t247 * t457;
t47 = -t150 * t247 + t254 * t457;
t42 = t247 * t57 + t254 * t370;
t41 = -t247 * t370 + t254 * t57;
t37 = (-t174 * t284 + t235 * t372) * pkin(2) + t456;
t36 = (t114 * t174 + t235 * t373) * pkin(2) + t441;
t33 = -t146 * t270 + t147 * t187 + t167 * t193 - t168 * t190;
t32 = t146 * t187 + t147 * t270 + t167 * t190 + t168 * t193;
t9 = t418 * t458 - t21;
t6 = -t406 * t458 + t443;
t5 = (-t27 * t245 + t26 * t250) * pkin(2);
t10 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t304, t381 * t354, -t257 * t249, 0.2e1 * t304, -t257 * t255, 0, t326 * t455, t354 * t424, 0, 0, t130 * t191 + t178 * t262, t130 * t278 - t191 * t261 + t239 * (-t178 * t191 + t180 * t278), t262 * t239, -t180 * t263 - t261 * t278, -t263 * t239, 0, -t180 * t356 + 0.2e1 * t369 * t263 - t272 * t355, t130 * t451 + t178 * t356 + t191 * t310, qJD(2) * t259 - t191 * t223 - t272 * t316, t188, -t139 * t45 - t279 * t53, t111 * t53 + t137 * t45 - t139 * t46 - t279 * t54, -t53 * t325, t111 * t54 + t423, -t54 * t325, 0, t125 * t111 + t163 * t46 + (t125 * t137 + t163 * t54) * qJD(1), t125 * t279 - t163 * t45 + (t125 * t139 - t163 * t53) * qJD(1), -t137 * t95 - t148 * t54 + t150 * t53 - t422, 0.2e1 * t125 * t380, t139 * t447 - t53 * t416, t292 * t53 + (t19 - t21 + (-t416 + t418) * qJD(5)) * t139, t139 * t40 - t22 * t137 + t84 * t54 + (-t139 * t375 - t254 * t53) * t458, t139 * t448 - t53 * t418, -t139 * t38 - t23 * t137 - t82 * t54 + (-t139 * t374 + t247 * t53) * t458, t458 * t54 + t423, t4 * t137 + t247 * t274 + t254 * t275 - t288 * t54, -t3 * t137 - t247 * t275 + t254 * t274 - t35 * t54, (-t12 * t84 - t139 * t4 + t22 * t61 - t288 * t53 + (-t139 * t35 - t61 * t82) * qJD(5)) * t254 + (-t12 * t82 - t139 * t3 - t23 * t61 + t35 * t53 + (-t139 * t288 + t61 * t84) * qJD(5)) * t247, t294 * t12 + (qJD(5) * t293 + t247 * t3 + t254 * t4) * t61, 0.2e1 * t305, -t382 * t353, t256 * t253, -0.2e1 * t305, -t256 * t246, 0, t246 * t319, t253 * t319, 0, 0, -t128 * t193 - t146 * t179, t128 * t190 - t129 * t193 + t146 * t379 - t147 * t179, -t146 * t238, t129 * t190 + t147 * t379, -t147 * t238, 0, (qJD(1) * t147 + t129) * t228 + 0.2e1 * t379 * t356, -0.2e1 * t228 * t128 + (qJD(1) * t193 + t179) * t356, (-t437 * t147 + t146 * t252 + (-t190 * t252 + t437 * t193) * qJD(7)) * t425, t188, t126 * t192 - t144 * t174, t126 * t189 - t127 * t192 + t144 * t175 + t145 * t174, t144 * t237, -t127 * t189 - t145 * t175, -t145 * t237, 0, (-qJD(1) * t145 - t127) * pkin(15), t126 * t455, 0, 0, -t138 * t43 - t284 * t51, -t114 * t51 + t136 * t43 - t138 * t44 - t284 * t52, t51 * t235, -t114 * t52 + t136 * t44, t52 * t235, 0, -t151 * t52 - t172 * t44 + (t114 * t145 - t127 * t136) * pkin(2), t151 * t51 + t172 * t43 + (-t127 * t138 - t145 * t284) * pkin(2), (-t245 * t52 + t250 * t51 + (-t136 * t250 + t138 * t245) * qJD(9)) * t435, (t127 * t172 + t145 * t151) * pkin(2), t24 * t81 + t32 * t68, t24 * t80 + t25 * t81 + t283 * t32 + t33 * t68, t234 * t32, t25 * t80 + t283 * t33, t234 * t33, 0, -t101 * t25 - t283 * t63 - t33 * t88 - t60 * t80, t101 * t24 + t32 * t88 + t60 * t81 + t63 * t68, -t267 * t80 - t32 * t69 - t33 * t70 - t50 * t81, t101 * t60 + t63 * t88; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t351, -t381 * t258, 0, -t351, 0, 0, pkin(15) * t386, -t258 * t424, 0, 0, -t391, t93, t77, t391, t76, 0, (t180 * t378 + t239 * t333) * pkin(1) + t298, -t337 + (-t178 * t378 + (-t330 - t345) * qJD(3)) * pkin(1), qJD(1) * t259 - t130 * t360 + (t314 + t316) * t180 + (-t315 - t317) * t178, -t320, t461, t31, t28, -t461, t29, 0, -t222 + t324 * t124 + (-t111 * t169 - t401) * qJD(1), -t286 - t324 * t123 + (-t169 * t279 + t396) * qJD(1), -t111 * t123 - t124 * t279 - t170 * t46 + t171 * t45 + t285, t123 * t148 + t124 * t150 - t169 * t394 + t170 * t95 + t171 * t96, t8, t1, t7, t9, t6, -t407, -t124 * t82 + t165 * t23 + t290 * t247 + (-t123 * t247 - t254 * t322) * t458 + t282, -t124 * t84 - t165 * t22 + t290 * t254 + (-t123 * t254 + t247 * t322) * t458 + t303, (-t123 * t82 - t164 * t23 + t56 * t84 + (t164 * t84 + t288) * qJD(5)) * t254 + (t123 * t84 - t164 * t22 + t56 * t82 - t4 + (t164 * t82 - t35) * qJD(5)) * t247 + t364, t123 * t293 - t143 * t124 + t164 * t268 - t96 * t165 - t294 * t56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t390, t92, 0, -t390, t75, 0, -t338 + (-t379 * t378 + (-t328 - t343) * qJD(7)) * pkin(1), t339 + (-t179 * t378 + (-qJD(2) - t238) * t252 * qJD(7)) * pkin(1), (-t437 * t129 + t444 * t179 + (-t238 * t379 + t128) * t252) * pkin(1), -t320, t393, t91, t72, -t393, t73, 0, -t162, t161, 0, 0, -t459, t30, t26, t459, t27, 0, t36, t37, t5, t118, -t463, t13, t14, t463, t15, 0, t59 * t234 + t283 * t94 + t266, -t234 * t58 - t68 * t94 + t265, -t24 * t89 + t25 * t90 + t283 * t58 - t59 * t68 + t300, -t267 * t90 + t50 * t89 - t58 * t70 + t59 * t69 - t88 * t94; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t391, t93, t77, t391, t76, 0, -t239 * t317 + t298, -t337 + (-t329 + t345) * t425, 0, 0, t461, t31, t28, -t461, t29, 0, (-t111 * t183 - t401) * qJD(1) + t96 - t281 * t325, (t182 * t325 - t123) * qJD(2) + (-t183 * t279 + t396) * qJD(1) + (-t325 * t332 - t302) * pkin(5), (t111 * t182 + t181 * t279) * qJD(2) + (t439 * t45 - t248 * t46 + (-t439 * t111 + t248 * t279) * qJD(4)) * pkin(5) + t285, -t183 * t394 + (-t148 * t182 - t150 * t181) * qJD(2) + (t439 * t96 + t248 * t95 + (t439 * t148 - t150 * t248) * qJD(4)) * pkin(5), t8, t1, t7, t9, t6, -t407, t232 * t23 + t281 * t82 + t289 * t247 + (-t231 * t374 - t247 * t312 - t41) * t458 + t282, -t232 * t22 + t281 * t84 + t289 * t254 + (t231 * t375 - t254 * t312 + t42) * t458 + t303, t41 * t84 + t42 * t82 + (-t82 * t312 - t23 * t231 + (t231 * t84 + t288) * qJD(5)) * t254 + (t84 * t312 - t22 * t231 - t4 + (t231 * t82 - t35) * qJD(5)) * t247 + t364, t143 * t371 - t96 * t232 + t288 * t41 - t35 * t42 + (t143 * t248 + t293 * t439) * qJD(4) * pkin(5) + t268 * t231, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t461, t31, t28, -t461, t29, 0, t148 * t325 - t279 * t380 + t96, t111 * t380 + t150 * t325 - t95, 0, 0, t8, t1, t7, t406 * t82 - t21, -t247 * t458 ^ 2 + t443, -t407, -pkin(9) * t23 - pkin(11) * t429 - t148 * t82 + t247 * t397 - t458 * t47 + t282, t143 * t462 + pkin(9) * t22 + t48 * t458 - t148 * t84 + (t375 * t458 - t40) * pkin(11) + t303, t47 * t84 + t48 * t82 + t2 + (t415 + (-t23 + t408) * pkin(11)) * t254 + ((qJD(5) * t82 - t22) * pkin(11) + t449) * t247, t96 * pkin(9) + pkin(11) * t268 - t143 * t148 + t288 * t47 - t35 * t48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t430, -t82 ^ 2 + t84 ^ 2, t458 * t82 - t22, -t430, t458 * t84 - t23, t46, -t143 * t84 - t449, t143 * t82 - t3 - t415, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t352, t382 * t258, 0, t352, 0, 0, -pkin(14) * t258 * t246, -pkin(14) * t387, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t390, t92, 0, -t390, t75, 0, -t338 + (-t327 + t343) * t425, t339 + (-qJD(7) + t238) * t359, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t463, t13, t14, t463, t15, 0, t100 * t283 - t234 * t413 + t266, -t100 * t68 + t234 * t412 + t265, -t119 * t24 + t120 * t25 - t283 * t412 + t413 * t68 + t300, -t88 * t100 + t50 * t119 - t120 * t267 + t412 * t70 - t413 * t69; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t393, t91, t72, -t393, t73, 0, -t162, t161, 0, 0, -t459, t30, t26, t459, t27, 0, t36, t37, t5, t118, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t459, t30, t26, t459, t27, 0, -t245 * t363 + t441, -t250 * t363 + t456, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t463, t13, t14, t463, t15, 0, -t70 * t234 + t266, t234 * t69 + t265, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
tauc_reg = t10;
