% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% palh1m2DE2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [4x1]
%   Generalized joint coordinates (joint angles)
% qJD [4x1]
%   Generalized joint velocities
% pkin [22x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[AB,AM,BC,BE,BG,BL,DC,EP,GH,GP,HW,ML,OT2,T1D,T2A,T2T1,phi1,phi2,phi312,phi413,phi710,phi711]';
% 
% Output:
% MMD_reg [((4+1)*4/2)x(4*10)]
%   inertial parameter regressor of inertia matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2020-05-02 21:08
% Revision: 702b02ffee4f47164fa6a11b998f1d39ead3f7a6 (2020-05-02)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = palh1m2DE2_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(4,1),zeros(4,1),zeros(22,1)}
assert(isreal(qJ) && all(size(qJ) == [4 1]), ...
  'palh1m2DE2_inertiaDJ_reg2_slag_vp: qJ has to be [4x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [4 1]), ...
  'palh1m2DE2_inertiaDJ_reg2_slag_vp: qJD has to be [4x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [22 1]), ...
  'palh1m2DE2_inertiaDJ_reg2_slag_vp: pkin has to be [22x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2020-05-02 21:06:33
% EndTime: 2020-05-02 21:06:54
% DurationCPUTime: 3.07s
% Computational Cost: add. (865->228), mult. (2379->479), div. (0->0), fcn. (1863->22), ass. (0->192)
t117 = cos(qJ(3));
t118 = cos(qJ(2));
t181 = t118 * t117;
t112 = sin(qJ(3));
t113 = sin(qJ(2));
t187 = t113 * t112;
t51 = -t181 + t187;
t125 = t51 * qJD(3);
t177 = qJD(2) * t118;
t153 = t117 * t177;
t178 = qJD(2) * t113;
t200 = pkin(5) * t112;
t83 = pkin(1) + t200;
t230 = (t125 - t153) * pkin(5) + t83 * t178;
t105 = sin(pkin(20));
t109 = cos(pkin(20));
t114 = sin(pkin(18));
t119 = cos(pkin(18));
t46 = -t119 * t105 + t114 * t109;
t49 = t114 * t105 + t119 * t109;
t93 = pkin(22) + pkin(21);
t87 = sin(t93);
t88 = cos(t93);
t22 = t88 * t46 - t87 * t49;
t229 = t22 ^ 2;
t97 = t112 ^ 2;
t99 = t117 ^ 2;
t195 = t97 - t99;
t172 = t117 * qJD(3);
t152 = t113 * t172;
t57 = t83 * t177;
t196 = pkin(5) * t152 + t57;
t171 = t118 * qJD(3);
t149 = t112 * t171;
t124 = t117 * t178 + t149;
t226 = t124 * pkin(5);
t24 = t196 + t226;
t218 = 0.2e1 * t24;
t228 = t22 * t218;
t100 = t118 ^ 2;
t147 = t195 * t100;
t219 = -2 * pkin(15);
t98 = t113 ^ 2;
t225 = t100 - t98;
t224 = 0.4e1 * t195;
t110 = cos(pkin(19));
t106 = sin(pkin(19));
t184 = t117 * t106;
t127 = t112 * t110 + t184;
t223 = qJD(2) * t127;
t115 = sin(pkin(17));
t120 = cos(pkin(17));
t53 = t114 * t120 - t119 * t115;
t54 = t115 * t114 + t120 * t119;
t130 = t113 * t53 + t54 * t118;
t222 = t130 * qJD(2);
t96 = qJD(2) + qJD(3);
t103 = sin(pkin(22));
t107 = cos(pkin(22));
t128 = -t119 * t103 + t114 * t107;
t48 = t114 * t103 + t107 * t119;
t221 = (t128 * sin(pkin(21)) + cos(pkin(21)) * t48) * pkin(4);
t59 = -t114 * pkin(9) + t119 * pkin(11);
t60 = t119 * pkin(9) + t114 * pkin(11);
t220 = -(t105 * t60 + t59 * t109) * t87 + (-t105 * t59 + t60 * t109) * t88;
t188 = t106 * t113;
t44 = -t118 * t110 + t188;
t45 = t106 * t118 + t113 * t110;
t132 = t44 * t112 - t45 * t117;
t39 = t106 * t178 - t110 * t177;
t40 = t45 * qJD(2);
t11 = t132 * qJD(3) + t39 * t112 - t40 * t117;
t122 = pkin(2) ^ 2;
t131 = t113 * t54 - t118 * t53;
t25 = t131 * qJD(2);
t217 = -0.2e1 * t25;
t216 = 0.2e1 * t222;
t213 = -0.2e1 * t99;
t212 = 0.2e1 * t99;
t101 = t119 ^ 2;
t211 = -0.2e1 * t101;
t210 = 0.2e1 * t101;
t209 = 0.2e1 * qJD(2);
t208 = 0.4e1 * t99 - 0.2e1;
t207 = 0.8e1 * t99 - 0.4e1;
t133 = -t45 * t112 - t44 * t117;
t12 = t133 * qJD(3) - t40 * t112 - t39 * t117;
t206 = pkin(2) * t12;
t41 = t127 * qJD(3);
t205 = pkin(2) * t41;
t47 = -t112 * t106 + t117 * t110;
t42 = t47 * qJD(3);
t204 = pkin(2) * t42;
t202 = 0.4e1 * t101 - 0.2e1;
t201 = pkin(2) * t106;
t198 = t87 * t46;
t102 = qJ(2) + qJ(3);
t90 = sin(t102);
t197 = t96 * t90;
t91 = cos(t102);
t63 = t96 * t91;
t78 = t113 * pkin(1) - pkin(15);
t194 = t106 * pkin(15);
t192 = t113 * pkin(15);
t61 = t113 * t83;
t151 = t112 * t172;
t138 = t113 * t151;
t191 = (-t208 * t177 + 0.8e1 * t138) * t118;
t189 = t105 * t109;
t186 = t113 * t117;
t185 = t113 * t118;
t183 = t117 * t112;
t182 = t118 * t112;
t180 = t119 * t114;
t179 = t99 - 0.1e1 / 0.2e1;
t176 = qJD(3) * t112;
t111 = sin(qJ(4));
t175 = qJD(4) * t111;
t116 = cos(qJ(4));
t174 = qJD(4) * t116;
t86 = t101 - 0.1e1 / 0.2e1;
t163 = -t101 / 0.2e1 + 0.1e1 / 0.4e1;
t82 = t88 ^ 2;
t94 = t109 ^ 2;
t170 = -0.8e1 * qJD(4) * ((t86 * t189 + (-t94 + 0.1e1 / 0.2e1) * t180) * t82 + t87 * (t180 * t189 + t86 * t94 + t163) * t88 + t94 * t180 / 0.2e1 + t163 * t189 - t180 / 0.4e1);
t164 = pkin(11) * t180;
t169 = pkin(9) * t211 + pkin(9) - 0.2e1 * t164;
t168 = t90 * t63;
t167 = 0.2e1 * t185;
t166 = pkin(5) * t181;
t165 = pkin(9) * t180;
t162 = pkin(1) * t177;
t161 = pkin(1) * t176;
t85 = pkin(1) * t172;
t160 = qJD(3) * t201;
t159 = (t86 * pkin(11) - t165) * t189;
t158 = pkin(15) * t178;
t156 = pkin(15) * t177;
t155 = t112 * t181;
t154 = t113 * t181;
t150 = t113 * t177;
t148 = pkin(1) * t100 - pkin(1) + t192;
t121 = pkin(5) ^ 2;
t123 = pkin(1) ^ 2;
t137 = t121 * t151;
t68 = -0.2e1 * t150;
t72 = pkin(5) * t85;
t71 = 0.2e1 * t72;
t146 = (-0.2e1 * pkin(1) * t200 + t121 * t212 - t121 - t123) * t68 + (-0.2e1 * t72 - 0.4e1 * t137) * t100 + 0.2e1 * t137 + t71;
t145 = t179 * t118;
t144 = -0.2e1 * t57;
t143 = t112 * t160;
t141 = t180 * t185;
t140 = t112 * t154;
t139 = t229 * t111 * t174;
t136 = t122 * t151;
t38 = t61 - t166;
t36 = -pkin(15) + t38;
t129 = qJD(2) * t140;
t52 = -t182 - t186;
t6 = (t49 * t88 + t198) * t24;
t95 = t110 ^ 2;
t84 = pkin(1) * t178;
t74 = 0.2e1 * t85;
t73 = -0.2e1 * t161;
t67 = 0.2e1 * t150;
t65 = t123 * t150;
t64 = pkin(15) + t166;
t58 = t208 * t113;
t56 = t61 - pkin(15);
t50 = t225 * t209;
t37 = pkin(5) * t186 + t118 * t83;
t35 = -0.2e1 * pkin(1) * t156 + 0.2e1 * t65;
t30 = t96 * t52;
t29 = -t51 * qJD(2) - t125;
t28 = -t114 * t52 - t51 * t119;
t27 = -t114 * t51 + t52 * t119;
t18 = -t114 * t37 + t38 * t119;
t17 = t38 * t114 + t37 * t119;
t16 = t221 + t78;
t15 = t114 * t30 - t29 * t119;
t14 = t114 * t29 + t30 * t119;
t13 = (-0.2e1 * t113 * t145 - t183 * t225) * qJD(2) + (t195 * t185 + (-0.2e1 * t100 + 0.1e1) * t183) * qJD(3);
t10 = t114 * t230 + t24 * t119;
t9 = t24 * t114 - t119 * t230;
t8 = t220 + t36;
t5 = (-t105 * t28 + t27 * t109) * t88 - t87 * (t105 * t27 + t28 * t109);
t4 = (-t18 * t105 + t17 * t109) * t88 - (t17 * t105 + t18 * t109) * t87;
t3 = ((t202 * pkin(9) + 0.4e1 * t164) * t94 - 0.4e1 * t159 + t169) * t82 + (((-t202 * pkin(11) + 0.4e1 * t165) * t94 - 0.4e1 * (t86 * pkin(9) + t164) * t189 + pkin(11) * t210 - 0.2e1 * t165 - pkin(11)) * t87 + t49 * t36) * t88 + t36 * t198 + t169 * t94 + 0.2e1 * t159 + t119 * t60;
t2 = (-t105 * t14 + t15 * t109) * t88 - t87 * (t105 * t15 + t14 * t109);
t1 = (-t10 * t105 + t9 * t109) * t88 - (t10 * t109 + t9 * t105) * t87;
t7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t68, -t50, 0, t67, 0, 0, -0.2e1 * t156, 0.2e1 * t158, 0, 0, -0.2e1 * t52 * t29, -t191 + (-t58 - 0.8e1 * t155) * t178 + (-0.4e1 * t147 + t213 + 0.2e1 * t97) * qJD(3), 0, -0.2e1 * t51 * t30, 0, 0, 0.2e1 * (-t148 * t117 + t78 * t182) * qJD(3) + 0.2e1 * (-pkin(15) * t182 + t78 * t186 + (-t100 * t117 + t112 * t167) * pkin(1)) * qJD(2), 0.2e1 * (t148 * t112 + t78 * t181) * qJD(3) + 0.2e1 * (-pkin(15) * t181 - t78 * t187 + (t100 * t112 + 0.2e1 * t154) * pkin(1)) * qJD(2), 0, t35, 0, 0, 0, 0, 0, 0, 0.2e1 * t6, -t228, 0, pkin(15) * t144 + 0.2e1 * (t56 * t149 + (-t196 * t118 + (-pkin(15) * qJD(3) + t56 * qJD(2)) * t113) * t117) * pkin(5) + t146, -0.2e1 * t139, 0.2e1 * (t111 ^ 2 - t116 ^ 2) * t229 * qJD(4), t111 * t170, 0.2e1 * t139, t116 * t170, 0, 0.2e1 * t6 * t116 - 0.2e1 * t3 * t175, -0.2e1 * t111 * t6 - 0.2e1 * t174 * t3, t228, t64 * t144 + 0.2e1 * (t124 * t61 - t152 * t64) * pkin(5) + t146 + t220 * t218 + t226 * t219, t130 * t217, (0.8e1 * t141 + (-0.8e1 * ((t211 + 0.1e1) * t185 + t225 * t180) * t115 + 0.4e1 * (t100 * t211 + t98 * t210 - 0.4e1 * t141 + t225) * t120) * t120 + t225 * t202) * qJD(2), 0, t131 * t216, 0, 0, pkin(14) * t216, pkin(14) * t217, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t48 * t162, -0.2e1 * t128 * t162, 0, t35, -0.2e1 * t132 * t12, (t207 * t100 + (-t207 * t113 - 0.16e2 * t155) * t113) * qJD(2) * t95 + 0.8e1 * t106 * t13 * t110 + 0.8e1 * t129 + t191 + t58 * t178 + (t224 * t100 + (-0.16e2 * t140 - 0.8e1 * t147 + t224) * t95 - 0.2e1 * t97 + t212) * qJD(3), 0, 0.2e1 * t133 * t11, 0, 0, -t11 * t219, t12 * t219, 0, 0, t68, -t50, 0, t67, 0, 0, -0.2e1 * t156 + 0.2e1 * (t41 * t185 - t42 * t100 + t42 + (t127 * t167 - t225 * t47) * qJD(2)) * pkin(2), 0.2e1 * t158 + 0.2e1 * (-t98 * t223 + ((t41 + t223) * t118 + (t47 * t209 + t42) * t113) * t118) * pkin(2), 0, -0.4e1 * pkin(2) * (-0.2e1 * t129 * t201 + (pkin(15) * t176 / 0.2e1 + (qJD(2) * t145 - 0.2e1 * t138) * t201) * t118 - (-pkin(15) * t117 / 0.2e1 + t179 * pkin(2) * t188) * t178 - (pkin(2) * t184 - t192) * t172 / 0.2e1 - t112 * (-t143 - t156) / 0.2e1 - t160 * t147) * t110 + 0.4e1 * t100 * t136 - 0.2e1 * pkin(2) * t153 * t194 + 0.2e1 * t143 * t192 - 0.2e1 * t136 + 0.2e1 * (-t112 * t178 + t117 * t171) * pkin(2) * (pkin(2) * t186 - t194) + 0.2e1 * (0.2e1 * t13 * t95 - (t213 + 0.1e1) * t150 + (-t113 * t176 + t153) * t182) * t122, 0.2e1 * t168, 0.2e1 * (-t90 ^ 2 + t91 ^ 2) * t96, 0, -0.2e1 * t168, 0, 0, 0.2e1 * t16 * t197 - 0.2e1 * t162 * t91, 0.2e1 * t16 * t63 + 0.2e1 * t162 * t90, 0, 0.2e1 * t65 + 0.2e1 * (-pkin(15) + t221) * t162; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t178, 0, -t177, 0, 0, 0, 0, 0, 0, 0, t29, 0, t30, 0, 0, 0, t84, 0, 0, 0, 0, 0, 0, 0, 0, 0, t230, 0, 0, 0, 0, 0, 0, 0, t111 * t230 - t174 * t37, t116 * t230 + t175 * t37, 0, 0, 0, 0, -t25, 0, -t222, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t84, 0, 0, 0, t12, 0, t11, 0, 0, 0, 0, 0, 0, 0, -t178, 0, -t177, 0, 0, 0, -t206, 0, 0, 0, t63, 0, -t197, 0, 0, 0, t84, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t74, t73, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t71, 0, 0, 0, 0, 0, 0, 0, 0, 0, t71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t204, 0.2e1 * t205, 0, 0, 0, 0, 0, 0, 0, 0, t74, t73, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t29, 0, t30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -pkin(5) * t29, 0, 0, 0, 0, 0, 0, 0, (-t111 * t29 + t174 * t52) * pkin(5), (-t116 * t29 - t175 * t52) * pkin(5), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t12, 0, t11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t206, 0, 0, 0, t63, 0, -t197, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t85, -t161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t72, 0, 0, 0, 0, 0, 0, 0, 0, 0, t72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t204, t205, 0, 0, 0, 0, 0, 0, 0, 0, t85, -t161, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t22 * t175, 0, t22 * t174, 0, t24 * t116 - t175 * t8, -t111 * t24 - t174 * t8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1 * t111 - t174 * t4, -t116 * t1 + t175 * t4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, (t111 * t2 + t174 * t5) * pkin(5), (t116 * t2 - t175 * t5) * pkin(5), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg = t7;
