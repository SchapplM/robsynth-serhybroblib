% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% palh1m2DE2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [4x1]
%   Generalized joint coordinates (joint angles)
% qJD [4x1]
%   Generalized joint velocities
% qJDD [4x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [22x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[AB,AM,BC,BE,BG,BL,DC,EP,GH,GP,HW,ML,OT2,T1D,T2A,T2T1,phi1,phi2,phi312,phi413,phi710,phi711]';
% 
% Output:
% tau_reg [4x(4*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2020-05-02 21:08
% Revision: 702b02ffee4f47164fa6a11b998f1d39ead3f7a6 (2020-05-02)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = palh1m2DE2_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(4,1),zeros(4,1),zeros(4,1),zeros(3,1),zeros(22,1)}
assert(isreal(qJ) && all(size(qJ) == [4 1]), ...
  'palh1m2DE2_invdynJ_fixb_reg2_slag_vp: qJ has to be [4x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [4 1]), ...
  'palh1m2DE2_invdynJ_fixb_reg2_slag_vp: qJD has to be [4x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [4 1]), ...
  'palh1m2DE2_invdynJ_fixb_reg2_slag_vp: qJDD has to be [4x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'palh1m2DE2_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [22 1]), ...
  'palh1m2DE2_invdynJ_fixb_reg2_slag_vp: pkin has to be [22x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2020-05-02 21:06:26
% EndTime: 2020-05-02 21:07:38
% DurationCPUTime: 16.81s
% Computational Cost: add. (4882->663), mult. (8632->1087), div. (239->4), fcn. (7945->50), ass. (0->510)
t323 = cos(pkin(18));
t324 = cos(pkin(17));
t546 = t323 * t324;
t317 = sin(pkin(18));
t318 = sin(pkin(17));
t556 = t317 * t318;
t182 = t546 + t556;
t315 = sin(qJ(2));
t321 = cos(qJ(2));
t675 = -t317 * t324 + t323 * t318;
t81 = -t182 * t321 + t315 * t675;
t518 = qJDD(1) * t81;
t316 = sin(qJ(1));
t629 = g(2) * t316;
t322 = cos(qJ(1));
t630 = g(1) * t322;
t200 = t629 + t630;
t328 = qJD(1) ^ 2;
t304 = sin(pkin(19));
t308 = cos(pkin(19));
t320 = cos(qJ(3));
t552 = t320 * t321;
t314 = sin(qJ(3));
t561 = t314 * t315;
t386 = -t552 + t561;
t551 = t321 * t314;
t560 = t315 * t320;
t387 = t551 + t560;
t74 = -t304 * t387 - t308 * t386;
t607 = t328 * t74;
t564 = t308 * t314;
t567 = t304 * t320;
t167 = t564 + t567;
t562 = t314 * t304;
t388 = -t308 * t320 + t562;
t103 = qJ(2) + atan2(t388, t167);
t98 = sin(t103);
t99 = cos(t103);
t701 = pkin(15) * t607 + g(3) * t99 - t200 * t98;
t405 = g(3) * t98 + t200 * t99;
t618 = pkin(15) * t328;
t359 = -t304 * t552 - t308 * t551;
t457 = t308 * t560;
t360 = t304 * t561 - t457;
t72 = t359 + t360;
t700 = -t72 * t618 + t405;
t307 = cos(pkin(20));
t605 = sin(pkin(20));
t175 = t323 * t307 + t317 * t605;
t246 = t323 * t605;
t557 = t317 * t307;
t169 = -t246 + t557;
t585 = t169 * t320;
t681 = -t314 * t175 + t585;
t583 = t175 * t320;
t586 = t169 * t314;
t90 = t583 + t586;
t397 = -t315 * t90 + t321 * t681;
t621 = pkin(5) * qJD(3);
t487 = t397 * t621;
t633 = pkin(5) * t314;
t256 = pkin(1) + t633;
t68 = -pkin(5) * t585 + t175 * t256;
t136 = pkin(5) * t583;
t69 = t169 * t256 + t136;
t28 = t315 * t69 + t321 * t68;
t600 = qJD(2) * t28;
t13 = -t487 + t600;
t297 = t323 ^ 2;
t478 = t297 / 0.2e1 - 0.1e1 / 0.4e1;
t485 = pkin(5) * t560;
t141 = t256 * t321 + t485;
t326 = qJD(4) ^ 2;
t285 = pkin(22) + pkin(21);
t266 = sin(t285);
t267 = cos(t285);
t61 = t169 * t266 + t175 * t267;
t367 = t328 * t61;
t27 = -t315 * t68 + t69 * t321;
t399 = t266 * t27 + t267 * t28;
t511 = (qJD(1) * qJD(4));
t699 = t399 * t326 + ((2 * t511) + t367) * t141;
t572 = t266 * t175;
t587 = t169 * t267;
t63 = -t572 + t587;
t55 = t63 ^ 2;
t601 = qJD(2) * t27;
t159 = t387 * pkin(5);
t697 = t159 * t367;
t296 = t321 ^ 2;
t332 = pkin(5) ^ 2;
t661 = -0.2e1 * pkin(1);
t150 = (pkin(5) * t661 - 0.4e1 * t314 * t332) * t320 * t296;
t553 = t320 * t314;
t227 = 0.2e1 * t332 * t553;
t696 = t150 + t227;
t29 = t315 * t681 + t90 * t321;
t381 = t29 * t621;
t11 = t601 + t381;
t627 = g(2) * t322;
t631 = g(1) * t316;
t694 = t627 - t631;
t197 = -pkin(9) * t317 + pkin(11) * t323;
t198 = pkin(9) * t323 + pkin(11) * t317;
t113 = t197 * t307 + t605 * t198;
t114 = -t605 * t197 + t198 * t307;
t236 = pkin(5) * t552;
t574 = t256 * t315;
t142 = t236 - t574;
t135 = pkin(15) + t142;
t264 = t297 - 0.1e1 / 0.2e1;
t435 = t264 * pkin(11);
t548 = t323 * t317;
t484 = pkin(9) * t548;
t165 = t435 - t484;
t483 = pkin(11) * t548;
t166 = pkin(9) * t264 + t483;
t287 = t307 ^ 2;
t436 = t307 * t605;
t377 = -t165 * t436 + t166 * t287;
t41 = -t323 * t198 / 0.2e1 + t377;
t495 = 0.2e1 * t135 * t266;
t596 = t135 * t175;
t255 = t267 ^ 2;
t230 = -t548 / 0.2e1;
t421 = t478 * pkin(9);
t40 = pkin(11) * t230 + t377 - t421;
t606 = t40 * t255;
t410 = t166 * t436;
t229 = t548 / 0.2e1;
t452 = pkin(9) * t229 - pkin(11) * t478;
t39 = t165 * t287 + t410 + t452;
t615 = t266 * t39;
t343 = t169 * t495 + t267 * (0.2e1 * t596 + 0.8e1 * t615) + 0.4e1 * t41 - 0.8e1 * t606;
t365 = t387 * qJD(3);
t528 = qJD(2) * t320;
t449 = t315 * t528;
t527 = qJD(2) * t321;
t451 = t256 * t527;
t76 = -t451 + (-t365 - t449) * pkin(5);
t545 = t76 * qJD(1);
t492 = 0.2e1 * t545;
t429 = pkin(18) - t285;
t241 = -pkin(20) + t429;
t221 = cos(t241);
t577 = t694 * t221;
t84 = qJD(2) * t141 + t387 * t621;
t693 = -(t76 + t84) * qJD(4) - (qJDD(4) * t113 + t169 * t492) * t266 - (-qJDD(4) * t114 + t175 * t492) * t267 - t135 * qJDD(4) + t577 - qJDD(1) * t343;
t79 = t81 * qJD(2);
t390 = -t182 * t315 - t321 * t675;
t519 = qJDD(1) * t390;
t288 = t308 ^ 2;
t272 = t288 / 0.2e1;
t242 = t272 - 0.1e1 / 0.4e1;
t258 = t288 - 0.1e1 / 0.2e1;
t292 = t314 ^ 2;
t295 = t320 ^ 2;
t203 = t258 * t295;
t565 = t308 * t304;
t420 = t553 * t565;
t358 = -0.2e1 * t420 + t203;
t537 = t292 - t295;
t559 = t315 * t321;
t463 = t258 * t553;
t668 = t537 * t565 - 0.2e1 * t463;
t691 = -t537 * t242 + t296 * (t258 * t292 - t358) - t559 * t668 - t420;
t498 = pkin(1) * t633;
t335 = pkin(1) ^ 2;
t534 = t332 + t335;
t570 = t295 * t332;
t176 = -0.2e1 * t498 - t534 + 0.2e1 * t570;
t212 = t236 + pkin(15);
t690 = (-t176 * t315 - t212 * t256) * t321;
t689 = 0.2e1 * pkin(15);
t688 = -0.2e1 * qJD(1);
t687 = 0.2e1 * qJD(1);
t686 = 0.2e1 * qJDD(1);
t366 = t90 * qJD(3);
t71 = t681 * qJD(3);
t17 = qJD(2) * t397 - t315 * t366 + t71 * t321;
t65 = pkin(5) * t366;
t66 = pkin(5) * t71;
t4 = -t315 * t65 + t321 * t66 - t600;
t597 = t135 * t169;
t685 = -qJD(2) * t4 - qJDD(2) * t27 - (qJD(3) * t17 + qJDD(3) * t29) * pkin(5) - t328 * t597;
t524 = qJD(3) * t321;
t18 = qJD(2) * t29 + t71 * t315 + t90 * t524;
t5 = t315 * t66 + t321 * t65 + t601;
t684 = -qJD(2) * t5 - qJDD(2) * t28 - (qJD(3) * t18 - qJDD(3) * t397) * pkin(5) + t114 * t511 - (t596 + 0.4e1 * t615) * t328;
t289 = qJD(2) + qJD(3);
t25 = t289 * t74;
t137 = g(3) * t314 + t200 * t320;
t624 = g(3) * t320;
t138 = -t200 * t314 + t624;
t682 = t137 * t321 + t138 * t315;
t493 = -0.2e1 * t552;
t185 = t493 * t561;
t514 = t296 - 0.1e1 / 0.2e1;
t679 = -t537 * t514 + t185;
t263 = t295 - 0.1e1 / 0.2e1;
t293 = t315 ^ 2;
t536 = t293 - t296;
t678 = -t536 * t263 + t185;
t676 = -0.1e1 / 0.4e1 + t420 - t203;
t674 = t137 * t315 - t138 * t321;
t673 = t388 * qJD(3);
t80 = t390 * qJD(2);
t671 = t263 * t565 + t463;
t398 = t266 * t29 - t267 * t397;
t670 = t326 * t398 + t387 * t511;
t279 = t315 * pkin(15);
t249 = t279 - pkin(1);
t643 = pkin(1) * t296;
t191 = -t249 - t643;
t280 = t315 * pkin(1);
t250 = t280 - pkin(15);
t402 = -t250 * t315 + t643;
t666 = qJD(2) * t402 - qJD(3) * t191;
t220 = sin(t241);
t655 = 0.4e1 * t328;
t665 = -g(3) * t220 + t135 * t511 - t200 * t221 + t606 * t655;
t364 = t386 * qJD(3);
t101 = -qJD(2) * t386 - t364;
t75 = -qJD(2) * t574 + (t320 * t527 - t364) * pkin(5);
t664 = -pkin(5) * (qJD(3) * t101 + qJDD(3) * t387) - t200 - qJD(2) * t75 - qJDD(2) * t141;
t245 = t296 * t308;
t458 = t308 * t559;
t459 = t304 * t559;
t609 = t321 * pkin(15);
t663 = -t609 + (-(-t293 * t308 + t245 - 0.2e1 * t459) * t320 - (t304 * t536 - 0.2e1 * t458) * t314) * pkin(2);
t334 = pkin(2) ^ 2;
t658 = -0.2e1 * t212;
t657 = -0.2e1 * t321;
t656 = -0.2e1 * t328;
t653 = -0.8e1 * qJDD(1);
t652 = -0.2e1 * qJDD(1);
t650 = pkin(15) / 0.2e1;
t290 = pkin(18) - pkin(22);
t275 = -qJ(2) + t290;
t247 = sin(t275);
t248 = cos(t275);
t140 = pkin(21) - atan2(t248, -t247);
t133 = -qJ(2) + t140;
t299 = qJ(2) + qJ(3);
t226 = t429 - t299;
t204 = sin(t226);
t205 = cos(t226);
t67 = -atan2(-t204, t205) + t133;
t59 = qJ(1) + t67;
t649 = sin(t59) / 0.2e1;
t60 = -qJ(1) + t67;
t648 = cos(t60) / 0.2e1;
t647 = t84 / 0.2e1;
t575 = 0.1e1 / t247 ^ 2 * t248 ^ 2;
t153 = 0.1e1 / (0.1e1 + t575);
t491 = t153 * t575 + t153 - 0.1e1;
t645 = -0.2e1 * t296;
t642 = pkin(1) * t314;
t641 = pkin(1) * t321;
t640 = pkin(2) * t673;
t639 = pkin(2) * t167;
t638 = pkin(2) * t258;
t637 = pkin(2) * t315;
t303 = sin(pkin(21));
t636 = pkin(4) * t303;
t306 = cos(pkin(21));
t635 = pkin(4) * t306;
t634 = pkin(5) * (pkin(5) + t642);
t632 = pkin(5) * t320;
t628 = g(2) * t320;
t625 = g(3) * t315;
t623 = g(3) * t321;
t620 = pkin(14) * t328;
t619 = pkin(15) * t308;
t617 = t694 * t98;
t277 = sin(t299);
t302 = sin(pkin(22));
t305 = cos(pkin(22));
t172 = t317 * t302 + t305 * t323;
t481 = t302 * t636;
t424 = t323 * t481;
t566 = t305 * t317;
t488 = pkin(4) * t566;
t54 = t172 * t635 + t303 * t488 - pkin(15) - t424;
t44 = t280 + t54;
t614 = t277 * t44;
t613 = t289 * t44;
t608 = t328 * t55;
t604 = pkin(1) * qJDD(2);
t603 = qJD(1) * t25;
t26 = t289 * (t304 * t386 - t308 * t387);
t602 = qJD(1) * t26;
t599 = t113 * t266;
t598 = t114 * t267;
t592 = t141 * t328;
t591 = t159 * t328;
t588 = t167 * t321;
t584 = t388 * t315;
t434 = t605 * t297;
t580 = (-t434 + t605 / 0.2e1) * t307;
t579 = t204 ^ 2 / t205 ^ 2;
t578 = t220 * t694;
t278 = cos(t299);
t571 = t278 * t328;
t330 = pkin(11) ^ 2;
t331 = pkin(9) ^ 2;
t283 = -t330 + t331;
t232 = t283 * t297;
t569 = t302 * t305;
t568 = t302 * t323;
t563 = t308 * t315;
t558 = t315 * t328;
t554 = t318 * t324;
t550 = t321 * t322;
t549 = t321 * t328;
t544 = -qJD(2) * t640 + qJDD(2) * t639;
t543 = qJDD(2) * t634 + t332 * qJDD(3);
t433 = pkin(9) * t483;
t542 = 0.2e1 * t433 + t232;
t260 = t320 * t604;
t284 = qJDD(2) + qJDD(3);
t541 = t320 * pkin(1) * t284 + t260;
t467 = pkin(1) * qJD(2) * qJD(3);
t233 = t320 * t467;
t540 = t314 * t604 + t233;
t270 = t277 ^ 2;
t271 = t278 ^ 2;
t539 = t270 - t271;
t313 = sin(qJ(4));
t291 = t313 ^ 2;
t319 = cos(qJ(4));
t294 = t319 ^ 2;
t538 = t291 - t294;
t535 = t331 / 0.4e1 - t330 / 0.4e1;
t268 = -t331 / 0.2e1 + t330 / 0.2e1;
t533 = qJD(1) * t101;
t532 = qJD(1) * t289;
t531 = qJD(1) * t313;
t530 = qJD(1) * t319;
t529 = qJD(2) * t289;
t525 = qJD(3) * t320;
t522 = qJD(4) * t319;
t521 = qJDD(1) * t72;
t520 = qJDD(1) * t74;
t516 = -qJD(2) - t289;
t515 = t255 - 0.1e1 / 0.2e1;
t513 = qJD(1) * qJD(2);
t512 = qJD(1) * qJD(3);
t510 = qJDD(1) * t113;
t509 = qJDD(1) * t387;
t508 = qJDD(1) * t386;
t238 = qJDD(1) * t278;
t507 = qJDD(1) * t319;
t506 = qJDD(2) * t388;
t237 = t277 * qJDD(1);
t505 = t313 * qJDD(1);
t504 = t315 * qJDD(1);
t274 = t321 * qJDD(1);
t503 = pkin(2) * t657;
t502 = 0.2e1 * t280;
t501 = 0.2e1 * pkin(14);
t499 = pkin(1) * t632;
t129 = t561 * t638 - t619 / 0.2e1;
t460 = t295 * t565;
t38 = t460 * t637 + t129 * t320 - t304 * (pkin(2) * t563 - pkin(15) * t314) / 0.2e1;
t497 = 0.2e1 * t315 * t38;
t496 = pkin(15) * t627;
t494 = -0.2e1 * t559;
t489 = pkin(1) * t549;
t486 = pkin(5) * t561;
t480 = t72 * t607;
t479 = t390 * t328 * t81;
t476 = pkin(1) * t528;
t475 = pkin(1) * t527;
t474 = pkin(1) * t525;
t473 = t44 * t571;
t472 = -0.2e1 * t513;
t51 = sin(t60);
t471 = -t51 / 0.2e1 + t649;
t470 = t51 / 0.2e1 + t649;
t52 = cos(t59);
t469 = t648 - t52 / 0.2e1;
t468 = t648 + t52 / 0.2e1;
t466 = pkin(1) * t274;
t465 = pkin(15) * t527;
t462 = t266 * (t246 * t557 + t264 * t287 - t478) * t267;
t286 = t305 ^ 2;
t461 = t286 * t548;
t454 = t328 * t386 * t387;
t448 = t315 * t527;
t453 = t696 * qJD(3) - 0.2e1 * t176 * t448;
t450 = t314 * t527;
t447 = t314 * t524;
t446 = t315 * t525;
t445 = -t572 / 0.4e1;
t444 = 0.1e1 + t579;
t443 = t315 * t513;
t442 = t321 * t513;
t439 = t319 * t511;
t430 = -0.2e1 * t465;
t100 = t287 * t548 + t230 + t580;
t228 = t548 / 0.4e1;
t21 = t100 * t255 - t462 + t287 * t230 - t580 / 0.2e1 + t228;
t352 = t100 * t515 - t462;
t375 = t587 / 0.4e1 + t445;
t428 = qJDD(4) * t375 + (t21 + t352) * qJDD(1);
t425 = pkin(1) * t465;
t423 = t516 * qJD(3);
t422 = t313 * t319 * t608;
t259 = 0.2e1 * t498;
t419 = (t259 + t534) * qJDD(2) + qJDD(3) * t634 + 0.2e1 * pkin(5) * t233 + qJD(3) ^ 2 * t499;
t418 = t284 * t642 + t289 * t474 + t540;
t417 = g(1) * pkin(1) * t550 + g(3) * t280 + t335 * qJDD(2) + t629 * t641;
t416 = t277 * t278 * t532;
t415 = pkin(15) * t631 - t496;
t414 = t315 * t442;
t413 = t313 * t439;
t412 = t694 * t250;
t125 = pkin(9) * t435 + t268 * t548;
t411 = t125 * t436;
t329 = pkin(15) ^ 2;
t404 = -t296 * t335 + t329 + t335;
t184 = (-pkin(15) + t502) * t321;
t403 = qJD(2) * t184 + t250 * t524;
t77 = -pkin(5) * t586 - t136;
t78 = t681 * pkin(5);
t401 = ((t315 * t77 + t321 * t78) * qJD(2) + t487) * t266 + ((t315 * t78 - t321 * t77) * qJD(2) + t381) * t267;
t400 = t25 * t289 - t284 * t72;
t20 = qJD(1) * t352 + qJD(4) * t375;
t48 = (t557 / 0.4e1 - t246 / 0.4e1) * t267 + t445;
t395 = qJD(1) * (qJD(4) * t48 - t20);
t394 = qJD(4) * (qJD(1) * t21 + t20);
t393 = t598 - t599;
t127 = t296 * t304 - t304 + t458;
t128 = t245 - t308 - t459;
t392 = t127 * t314 - t128 * t320;
t327 = qJD(2) ^ 2;
t190 = qJDD(2) * t321 - t315 * t327;
t383 = -t509 - t533;
t379 = t41 * qJD(1) + t135 * qJD(4) / 0.2e1;
t372 = -t289 * t476 + t540;
t370 = -t314 * t467 + t529 * t642 + t260;
t369 = t176 * t296 + t329 + t534 - t570;
t152 = t386 * t621;
t363 = -t141 * qJDD(1) + (qJD(2) * t142 - t152 - t75) * qJD(1);
t361 = t200 + t618;
t357 = pkin(15) * t652 + t694;
t356 = t447 + t449;
t355 = -0.2e1 * qJDD(1) * t135 - 0.2e1 * t545;
t298 = t324 ^ 2;
t106 = -t264 * t554 + t298 * t548 + t230;
t115 = t264 * t298 + t546 * t556 - t478;
t354 = t106 * t494 + t115 * t536;
t110 = t272 + t676;
t353 = -t110 * t536 - t494 * t671;
t351 = t375 * t655;
t348 = 0.2e1 * pkin(1) * t442 + 0.2e1 * qJDD(1) * t250;
t347 = (t446 + t450) * t493;
t345 = g(1) * t468 + g(2) * t471 - sin(t67) * g(3);
t344 = g(1) * t470 + g(2) * t469 + cos(t67) * g(3);
t234 = (-0.2e1 * t288 + 0.1e1) * t334;
t341 = 0.2e1 * t296 * t334 * t668 - t234 * t553;
t340 = -t398 * qJDD(4) + (-t17 * t266 - t18 * t267) * qJD(4) + t383;
t338 = -t399 * qJDD(4) + ((-t5 + t11) * t267 + (-t4 - t13) * t266) * qJD(4) + t363;
t337 = (t135 - t393) * t326 + t343 * t511 + t664;
t282 = t289 ^ 2;
t265 = t334 * t284;
t251 = t279 * t661;
t235 = t335 * t559;
t231 = t315 * t549;
t219 = t335 * t448;
t192 = t536 * t328;
t189 = -qJDD(2) * t315 - t321 * t327;
t186 = t277 * t571;
t183 = -pkin(2) * t564 + t279;
t177 = t486 + t250;
t173 = -t566 + t568;
t161 = t539 * t328;
t160 = t236 - t486;
t158 = qJDD(1) * t296 - 0.2e1 * t414;
t157 = qJDD(1) * t293 + 0.2e1 * t414;
t156 = qJDD(1) * t329 + t415;
t148 = t167 * qJD(3);
t124 = t268 + t542;
t122 = -pkin(1) * t190 - t200;
t121 = 0.1e1 / t444;
t118 = -0.2e1 * t274 * t315 + 0.2e1 * t513 * t536;
t117 = t191 * t320 + t250 * t551;
t116 = t191 * t314 - t250 * t552;
t109 = -t288 / 0.2e1 - t676;
t102 = -qJD(2) * t387 - t365;
t91 = qJD(2) * t160 - t152;
t87 = t694 * t182;
t86 = t694 * t675;
t64 = pkin(15) + (-t167 * t315 - t321 * t388) * pkin(2);
t47 = -(-pkin(1) * t609 + t235) * t328 + t417;
t45 = qJDD(1) * t61 + qJDD(4);
t43 = g(3) * t675 + t182 * t200;
t42 = -g(3) * t182 + t200 * t675;
t37 = (t219 - t425) * t687 + (t251 + t404) * qJDD(1) + t412;
t36 = atan2(t388, -t167) + t103;
t35 = cos(t36);
t34 = sin(t36);
t33 = t444 * t121;
t32 = -t508 + (t289 * t387 + t102) * qJD(1);
t31 = t509 + (t289 * t386 + t101) * qJD(1);
t23 = -t121 * t579 - t121 + t491;
t10 = t520 + (-t289 * t72 + t26) * qJD(1);
t6 = t521 * pkin(2);
t1 = [0, 0, 0, 0, 0, qJDD(1), -t694, t200, 0, 0, t158, t118, t190, t157, t189, 0, qJD(1) * t430 + t315 * t357, t321 * t357 + t443 * t689, -t200, t156, -(-t509 - 0.2e1 * t533) * t387, 0.4e1 * qJDD(1) * (t263 * t559 + t514 * t553) + 0.4e1 * t678 * t513 + 0.4e1 * t679 * t512, t101 * t289 + t284 * t387, -(t102 * t687 - t508) * t386, t102 * t289 - t284 * t386, 0, (t403 * t314 - t320 * t666) * t687 + t116 * t686 + t386 * t694, (t314 * t666 + t403 * t320) * t687 + t117 * t686 + t387 * t694, t122, t37, t55 * qJDD(1), ((t264 * t436 + t229) * t255 + t462 + (-t434 / 0.2e1 + t605 / 0.4e1) * t307 + (-0.1e1 / 0.4e1 - t515 * t287) * t548) * t653, 0, t61 ^ 2 * qJDD(1), 0, 0, t355 * t61 + t577, -t355 * t63 - t578, t664, (-0.2e1 * t425 + t453) * qJD(1) + (t251 + t369) * qJDD(1) + t212 * t631 - t496 + t694 * t574 + ((-t177 * t552 - t249 * t314) * t686 - t550 * t628 + (pkin(5) * t347 + 0.2e1 * t177 * t356 - 0.2e1 * t249 * t525 + t314 * t430 + t476 * t645) * qJD(1)) * pkin(5), (qJDD(1) * t294 - 0.2e1 * t413) * t55, 0.2e1 * (-t319 * t505 + t511 * t538) * t55, 0.4e1 * t313 * t394 - 0.4e1 * t319 * t428, (qJDD(1) * t291 + 0.2e1 * t413) * t55, 0.4e1 * t313 * t428 + 0.4e1 * t319 * t394, t45 * t61, t337 * t313 + t693 * t319, -t693 * t313 + t337 * t319, (t39 * t255 + (t40 * t266 + t597 / 0.4e1) * t267 + t135 * t445 + t452 * t287 - t410 / 0.2e1 - t484 / 0.4e1 + (-0.1e1 / 0.4e1 + t297 / 0.4e1) * pkin(11)) * t653 - 0.8e1 * t375 * t545 + t578, ((t125 * t287 + t124 * t436 / 0.2e1 + t535 * t548 - pkin(11) * t421) * t266 + t135 * t114 / 0.4e1) * t267 * t653 - 0.2e1 * t545 * t598 + t492 * t599 + t495 * t510 + (t451 * t658 + (t446 * t658 + 0.2e1 * t474 + (-t689 + 0.2e1 * t574) * t356) * pkin(5) + t453) * qJD(1) + t135 * t631 - t135 * t627 - (-t221 * pkin(9) - t220 * pkin(11)) * t694 + (0.4e1 * (t124 * t287 + t268 * t297 - 0.2e1 * t411 - t433 + t535) * t255 + t574 * t658 + t236 * t689 + t259 + (t283 - 0.4e1 * t433 - 0.2e1 * t232) * t287 + 0.4e1 * t411 + t330 + t369 + t542) * qJDD(1), (t390 * t472 + t518) * t81, 0.8e1 * qJDD(1) * (t106 * t296 - t115 * t559 + t230 * t298 + t478 * t554 + t228) + 0.8e1 * t354 * t513, qJD(2) * t80 - qJDD(2) * t81, (-t472 * t81 + t519) * t390, qJD(2) * t79 + qJDD(2) * t390, 0, t315 * t87 + t321 * t86 + (-qJD(1) * t79 - t519) * t501, -t315 * t86 + t321 * t87 + (qJD(1) * t80 - t518) * t501, -t200, (qJDD(1) * pkin(14) + t694) * pkin(14), qJDD(1) * t173 ^ 2, -0.4e1 * qJDD(1) * (t264 * t569 + t229 - t461), 0, qJDD(1) * t172 ^ 2, 0, 0, t694 * cos(t290) + t172 * t348, -t694 * sin(t290) + t173 * t348, t122, t37, (t521 - 0.2e1 * t603) * t72, -0.8e1 * (t110 * t559 + t242 * t553 - t671 * t296 + (t295 / 0.2e1 - 0.1e1 / 0.4e1) * t565) * qJDD(1) - 0.8e1 * t353 * t513 - 0.8e1 * t691 * t512, t400, (t520 + 0.2e1 * t602) * t74, t26 * t289 + t284 * t74, 0, t617 + (t520 + t602) * t689, t694 * t99 + (t521 - t603) * t689, -t200, t156, t158, t118, t190, t157, t189, 0, t279 * t652 - t694 * t34 + 0.2e1 * ((-t127 * t320 - t128 * t314) * qJDD(1) + t392 * t512) * pkin(2) + 0.2e1 * t663 * t513, -t694 * t35 + 0.2e1 * (t443 - t274) * t64 + (-t148 * t321 + t315 * t673 + (t584 - t588) * qJD(2)) * qJD(1) * t503, -pkin(2) * t400 - t200, (t234 * t295 + t329) * qJDD(1) + (-0.8e1 * t109 * t414 + (0.4e1 * t109 * t296 + t288) * qJDD(1)) * t334 + 0.2e1 * t341 * t512 + ((-t183 * t567 + t38 * t657 - t561 * t619) * t686 + t617 + (0.2e1 * t129 * t447 + qJD(2) * t497 + t347 * t638 + (t183 * qJD(3) * t314 + (qJD(3) * t295 + (0.4e1 * t314 * t446 + (-0.2e1 * t295 + 0.1e1) * t527) * t321) * pkin(2) * t308) * t304 + (-t308 * t450 + (-t304 * t527 + (-t304 * t321 - t563) * qJD(3)) * t320) * pkin(15)) * t687) * pkin(2) + t415, qJDD(1) * t270 + 0.2e1 * t416, 0.2e1 * t237 * t278 - 0.2e1 * t532 * t539, t277 * t284 + t278 * t282, qJDD(1) * t271 - 0.2e1 * t416, -t277 * t282 + t278 * t284, 0, -0.2e1 * t44 * t238 + (t277 * t613 - t278 * t475) * t687 + t470 * g(2) - t469 * g(1), 0.2e1 * t44 * t237 + (t277 * t475 + t278 * t613) * t687 - t468 * g(2) + t471 * g(1), t122, (t475 * t54 + t219) * t687 - pkin(4) * t694 * sin(t133) + t412 + (t54 * t502 - 0.4e1 * (-t461 * t636 + (t264 * t481 + t323 * t650) * t305 + t317 * (pkin(15) * t302 + t323 * t636) / 0.2e1) * t635 - 0.2e1 * (pkin(4) * t568 + pkin(15) * t303) * t488 + t424 * t689 + t404 + (0.4e1 * (t264 * t286 + t548 * t569 - t478) * t306 ^ 2 + (-0.2e1 * t297 + 0.1e1) * t286 + t297) * pkin(4) ^ 2) * qJDD(1); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t231, -t192, t274, -t231, -t504, qJDD(2), t321 * t361 + t625, -t315 * t361 + t623, 0, 0, t454, t678 * t656, t31, -t454, t32, t284, -(t184 * t314 - t320 * t402) * t328 + t418 + t674, -t184 * t320 * t328 + (t250 * t558 + (-t296 * t328 + t423) * pkin(1)) * t314 + t541 + t682, -t466, t47, 0, 0, 0, 0, 0, 0, -t61 * t592, t63 * t592, t363, -(t177 * t485 + t690) * t328 + (-pkin(5) * t624 + t200 * t256) * t321 + t485 * t630 - (-pkin(5) * t316 * t628 - g(3) * t256) * t315 + t419, 0, 0, 0, 0, 0, 0, t338 * t313 - t699 * t319, t699 * t313 + t338 * t319, -t141 * t351, -(t690 + (t256 * t293 - t279) * t632) * t328 - t142 * g(3) - (t328 * t393 - t200) * t141 + t419, t479, -0.4e1 * t328 * t354, -t518, -t479, t519, qJDD(2), -t315 * t42 + t321 * t43 + t620 * t81, -t315 * t43 - t321 * t42 - t390 * t620, 0, 0, 0, 0, 0, 0, 0, 0, -t172 * t489, -t173 * t489, -t466, t47, t480, t353 * t655, -t521, -t480, t10, t284, t700, t701, 0, 0, t231, -t192, t274, -t231, -t504, qJDD(2), -g(3) * t34 - t200 * t35 + t284 * t639 - t289 * t640 - t328 * t663 + t544, -t64 * t558 + (t284 * t388 + t506 + (t359 + t584) * t549 - t516 * t148) * pkin(2) - g(3) * t35 + t200 * t34, t6, t265 - (-0.4e1 * t109 * t559 + t645 * t671) * t328 * t334 + (-(t359 * pkin(15) + t497) * t328 + t405) * pkin(2), -t186, t161, t237, t186, t238, t284, (t278 * t641 - t614) * t328 + t345 * t23 + t418, -t473 + (-t277 * t549 + t314 * t423) * pkin(1) + t344 * t23 + t541, -t466, -(t54 * t641 + t235) * t328 + (-t200 * cos(t133) + (-cos(t140) * t315 + sin(t140) * t321) * g(3)) * t491 * pkin(4) + t417; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t454, t679 * t656, t31, -t454, t32, t284, -t117 * t328 + t372 + t674, t116 * t328 + t370 + t682, 0, 0, 0, 0, 0, 0, 0, 0, -t61 * t591, t63 * t591, pkin(5) * t383 + t91 * qJD(1), -(t494 * t570 + t696) * t328 / 0.2e1 + ((t625 + (-t177 * t328 + t200) * t321) * t314 + (-pkin(1) * t327 + t200 * t315 + t249 * t328 - t623) * t320) * pkin(5) + t543, 0, 0, 0, 0, 0, 0, t91 * t531 - t319 * t697 + (-t159 * t530 + t313 * t401) * qJD(4) + (t340 * t313 - t319 * t670) * pkin(5), t91 * t530 + t313 * t697 + (t159 * t531 + t319 * t401) * qJD(4) + (t313 * t670 + t340 * t319) * pkin(5), -t159 * t351, -t327 * t499 - t160 * g(3) + t200 * t159 + (-t150 / 0.2e1 - t227 / 0.2e1 - t393 * t159 + ((t212 * t315 - pkin(1)) * t320 + (pkin(15) - t574) * t551) * pkin(5)) * t328 + t543, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t480, t691 * t655, -t521, -t480, t10, t284, t700, t701, 0, 0, 0, 0, 0, 0, 0, 0, (-t328 * t392 + t388 * t529) * pkin(2) + t544, (t506 + (t360 - t588) * t549 + (-t167 * t289 + t148) * qJD(2)) * pkin(2), t6, t265 - ((-t129 * t314 + t358 * t637 + t567 * t650) * t503 + t334 * t460 + t341) * t328 + (-(-pkin(15) * t457 + t183 * t562) * t328 + t405) * pkin(2), -t186, t161, t237, t186, t238, t284, -t328 * t614 - t33 * t345 + t372, -t33 * t344 + t370 - t473, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t422, -t538 * t608, 0.4e1 * t313 * t395 - 0.4e1 * t48 * t507, -t422, 0.4e1 * t319 * t395 + 0.4e1 * t48 * t505, t45, -t135 * t507 - t76 * t530 + (t647 * t687 + t694) * t319 + (t114 * t507 + (-t114 * t531 - t13 * t319) * qJD(4) + t13 * t522) * t267 + ((-qJD(4) * t11 - t510) * t319 + t11 * t522) * t266 + (t266 * t685 + t267 * t684 - t379 * t687 + t665) * t313, t135 * t505 + t76 * t531 + (t647 * t688 - t694) * t313 + (t379 * t688 + t665) * t319 + ((-t439 - t505) * t114 + t684 * t319) * t267 + (t113 * t505 + t319 * t685) * t266, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
tau_reg = t1;
