% Calculate inertial parameters regressor of joint inertia matrix for
% palh1m2TE
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [4x1]
%   Generalized joint coordinates (joint angles)
% pkin [22x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[AB,AM,BC,BE,BG,BL,DC,EP,GH,GP,HW,ML,OT2,T1D,T2A,T2T1,phi1,phi2,phi312,phi413,phi710,phi711]';
% 
% Output:
% MM_reg [((4+1)*4/2)x(4*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2020-05-01 20:48
% Revision: 970157063c8b7bcb25458a457551a083b21abdbd (2020-04-26)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = palh1m2TE_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(4,1),zeros(22,1)}
assert(isreal(qJ) && all(size(qJ) == [4 1]), ...
  'palh1m2TE_inertiaJ_reg2_slag_vp: qJ has to be [4x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [22 1]), ...
  'palh1m2TE_inertiaJ_reg2_slag_vp: pkin has to be [22x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
t79 = sin(pkin(20));
t82 = cos(pkin(20));
t87 = sin(pkin(18));
t92 = cos(pkin(18));
t35 = t87 * t79 + t92 * t82;
t70 = pkin(22) + pkin(21);
t59 = sin(t70);
t123 = t59 * t35;
t31 = -t92 * t79 + t87 * t82;
t60 = cos(t70);
t13 = t31 * t60 - t123;
t10 = t13 ^ 2;
t85 = sin(qJ(3));
t90 = cos(qJ(3));
t118 = t90 * t85;
t86 = sin(qJ(2));
t91 = cos(qJ(2));
t119 = t86 * t91;
t74 = t91 ^ 2;
t140 = 0.4e1 * t74 - 0.2e1;
t73 = t90 ^ 2;
t150 = t140 * t118 + (0.4e1 * t73 - 0.2e1) * t119;
t80 = sin(pkin(19));
t83 = cos(pkin(19));
t28 = t90 * t80 + t85 * t83;
t32 = -t85 * t80 + t90 * t83;
t149 = pkin(15) + (-t28 * t86 + t32 * t91) * pkin(2);
t148 = 2 * pkin(14);
t147 = -0.2e1 * pkin(15);
t116 = t90 * t91;
t131 = pkin(5) * t85;
t57 = pkin(1) + t131;
t24 = -pkin(5) * t116 + t57 * t86;
t23 = -pkin(15) + t24;
t146 = -0.2e1 * t23;
t145 = 0.2e1 * t23;
t76 = qJ(3) + qJ(2);
t65 = sin(t76);
t144 = 0.2e1 * t65;
t75 = t92 ^ 2;
t143 = 0.4e1 * t75;
t84 = sin(qJ(4));
t142 = -0.2e1 * t84;
t141 = -0.2e1 * t91;
t139 = 0.8e1 * t74 - 0.4e1;
t138 = -0.8e1 * t75 + 0.4e1;
t137 = t143 - 0.2e1;
t136 = pkin(1) * t91;
t29 = t80 * t86 - t91 * t83;
t30 = t80 * t91 + t86 * t83;
t15 = -t29 * t85 + t30 * t90;
t135 = pkin(2) * t15;
t134 = pkin(2) * t28;
t133 = pkin(2) * t32;
t132 = pkin(5) * t84;
t89 = cos(qJ(4));
t130 = pkin(5) * t89;
t129 = pkin(9) * t75;
t128 = pkin(15) * t86;
t126 = t31 * t59;
t122 = t79 * t82;
t121 = t85 * t86;
t120 = t85 * t91;
t117 = t90 * t86;
t115 = t92 * t87;
t55 = pkin(1) * t86 - pkin(15);
t58 = t75 - 0.1e1 / 0.2e1;
t114 = pkin(9) * t115;
t113 = pkin(11) * t115;
t112 = -0.2e1 * t129 - 0.2e1 * t113 + pkin(9);
t107 = -t75 / 0.2e1 + 0.1e1 / 0.4e1;
t71 = t82 ^ 2;
t111 = (t115 * t122 + t58 * t71 + t107) * t59 * t60;
t110 = (t58 * pkin(11) - t114) * t122;
t109 = (t58 * pkin(9) + t113) * t122;
t108 = t71 * t115;
t106 = 0.4e1 * t129 + 0.4e1 * t113 - 0.2e1 * pkin(9);
t105 = -pkin(1) * t74 + pkin(1) - t128;
t104 = t35 * t60 + t126;
t103 = (0.8e1 * t71 - 0.4e1) * t115;
t102 = t29 * t90 + t85 * t30;
t88 = sin(pkin(17));
t93 = cos(pkin(17));
t38 = t87 * t93 - t92 * t88;
t41 = t88 * t87 + t93 * t92;
t101 = t91 * t38 - t86 * t41;
t77 = sin(pkin(22));
t81 = cos(pkin(22));
t34 = -t92 * t77 + t87 * t81;
t25 = pkin(5) * t117 + t57 * t91;
t100 = -0.2e1 * pkin(11) * t75 + (t137 * pkin(11) - 0.4e1 * t114) * t71 + 0.4e1 * t109 + 0.2e1 * t114;
t99 = pkin(1) ^ 2;
t98 = pkin(2) ^ 2;
t97 = pkin(5) ^ 2;
t94 = pkin(15) ^ 2;
t72 = t86 ^ 2;
t69 = pkin(1) * t90;
t67 = pkin(1) * t85;
t66 = cos(t76);
t64 = 0.2e1 * t69;
t63 = 0.2e1 * t67;
t56 = t60 ^ 2;
t51 = t55 ^ 2;
t50 = -0.2e1 * t119;
t49 = pkin(5) * (t67 + pkin(5));
t46 = 0.2e1 * pkin(1) * t131 + t97 + t99;
t44 = t92 * pkin(9) + t87 * pkin(11);
t43 = -t87 * pkin(9) + t92 * pkin(11);
t39 = t116 - t121;
t37 = t117 + t120;
t33 = t87 * t77 + t81 * t92;
t20 = t86 * t38 + t41 * t91;
t19 = t87 * t37 + t39 * t92;
t18 = -t37 * t92 + t87 * t39;
t14 = pkin(15) + (-t37 * t80 + t39 * t83) * pkin(2);
t9 = t104 ^ 2;
t8 = t87 * t24 + t25 * t92;
t7 = t24 * t92 - t87 * t25;
t6 = (cos(pkin(21)) * t33 + t34 * sin(pkin(21))) * pkin(4) + t55;
t5 = (-t79 * t43 + t44 * t82) * t60 + (-t43 * t82 - t79 * t44) * t59 + t23;
t4 = (t58 * t122 + (-t71 + 0.1e1 / 0.2e1) * t115) * t56 + t111 + t108 / 0.2e1 + t107 * t122 - t115 / 0.4e1;
t3 = (t18 * t82 - t19 * t79) * t60 - t59 * (t18 * t79 + t19 * t82);
t2 = (-t79 * t7 + t8 * t82) * t60 - t59 * (t7 * t82 + t8 * t79);
t1 = (t106 * t71 - 0.4e1 * t110 + t112) * t56 + ((-pkin(11) - t100) * t59 + t23 * t35) * t60 + t23 * t126 + t112 * t71 + 0.2e1 * t110 + t92 * t44;
t11 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t74, t50, 0, t72, 0, 0, -0.2e1 * t128, pkin(15) * t141, 0, t94, t37 ^ 2, t150, 0, t39 ^ 2, 0, 0, 0.2e1 * t105 * t85 - 0.2e1 * t55 * t116, 0.2e1 * t105 * t90 + 0.2e1 * t55 * t120, 0, t51, t10, (t138 * t122 + t103) * t56 - 0.8e1 * t111 - 0.4e1 * t108 + t137 * t122 + 0.2e1 * t115, 0, t9, 0, 0, -t104 * t146, -t13 * t145, 0, t23 ^ 2, t89 ^ 2 * t10, t10 * t89 * t142, 0.8e1 * t89 * t4, t84 ^ 2 * t10, -0.8e1 * t84 * t4, t9, 0.2e1 * t89 * t1, t1 * t142, (-0.8e1 * t109 + pkin(9) * t103 + (t138 * t71 + t137) * pkin(11)) * t56 + (((t138 * pkin(9) - 0.8e1 * t113) * t71 + 0.8e1 * t110 + t106) * t59 + t31 * t145) * t60 + t123 * t146 + 0.2e1 * pkin(11) + t100, t5 ^ 2, t20 ^ 2, -t140 * t115 + t119 * t143 + t50 + (-0.8e1 * t88 * ((t74 - 0.1e1 / 0.2e1) * t75 + t115 * t119 - t74 / 0.2e1 + 0.1e1 / 0.4e1) + (t139 * t115 + t138 * t119) * t93) * t93, 0, t101 ^ 2, 0, 0, -t101 * t148, t20 * t148, 0, pkin(14) ^ 2, t34 ^ 2, (0.4e1 * t81 ^ 2 - 0.2e1) * t115 - t137 * t81 * t77, 0, t33 ^ 2, 0, 0, 0.2e1 * t55 * t33, -0.2e1 * t55 * t34, 0, t51, t15 ^ 2, (0.8e1 * ((t73 - 0.1e1 / 0.2e1) * t74 - t116 * t121 - t73 / 0.2e1 + 0.1e1 / 0.4e1) * t80 + ((0.8e1 * t73 - 0.4e1) * t119 + t139 * t118) * t83) * t83 - t150, 0, t102 ^ 2, 0, 0, t102 * t147, t15 * t147, 0, t94, t74, t50, 0, t72, 0, 0, -0.2e1 * t86 * t149, t149 * t141, 0, t14 ^ 2, t65 ^ 2, t66 * t144, 0, t66 ^ 2, 0, 0, -0.2e1 * t6 * t66, t6 * t144, 0, t6 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t91, 0, -t86, 0, 0, 0, 0, 0, 0, 0, t37, 0, t39, 0, 0, 0, -t136, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t25, 0, 0, 0, 0, 0, 0, 0, -t84 * t25, -t89 * t25, 0, 0, 0, 0, t20, 0, t101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t136, 0, 0, 0, t15, 0, -t102, 0, 0, 0, 0, 0, 0, 0, t91, 0, -t86, 0, 0, 0, -t135, 0, 0, 0, t65, 0, t66, 0, 0, 0, -t136, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, t63, t64, 0, t99, 0, 0, 0, 0, 0, 0, 0, 0, 0, t46, 0, 0, 0, 0, 0, 0, 0, 0, 0, t46, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t99, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * t134, -0.2e1 * t133, 0, t98, 0, 0, 0, 0, 0, 1, t63, t64, 0, t99; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t37, 0, t39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -pkin(5) * t37, 0, 0, 0, 0, 0, 0, 0, -t37 * t132, -t37 * t130, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t15, 0, -t102, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t135, 0, 0, 0, t65, 0, t66, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, t67, t69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t49, 0, 0, 0, 0, 0, 0, 0, 0, 0, t49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t134, -t133, 0, t98, 0, 0, 0, 0, 0, 1, t67, t69, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t97, 0, 0, 0, 0, 0, 0, 0, 0, 0, t97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t98, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t89 * t13, 0, t84 * t13, t104, t5 * t89, -t84 * t5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t84 * t2, -t89 * t2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3 * t132, t3 * t130, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MM_reg = t11;
