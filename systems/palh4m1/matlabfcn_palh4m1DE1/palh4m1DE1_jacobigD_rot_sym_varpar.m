% Zeitableitung der rotatorischen Teilmatrix der geometrischen Jacobi-Matrix für beliebiges Segment von
% palh4m1DE1
% Use Code from Maple symbolic Code Generation
%
% Geometrische Jacobi-Matrix: Differentieller Zusammenhang zwischen
% Endeffektorgeschwindigkeit und Geschw. der verallgemeinerten Koordinaten.
% 
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% link_index [1x1 uint8]
%   Index des Segmentes, auf dem der Punkt C liegt. (0=Basis).
%   Siehe auch: bsp_3T1R_fkine_fixb_rotmat_mdh_sym_varpar.m
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[AB,AD,CB,CE,EP,HC,OT,TA,TD]';
% 
% Output:
% JgD_rot [3x5]
%   Zeitableitung der rotatorischen Teilmatrix der geometrischen Jacobi-Matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2020-04-11 22:26
% Revision: 6ae2d958c5b90587a0d08029b131cb7b66342a68 (2020-04-11)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function JgD_rot = palh4m1DE1_jacobigD_rot_sym_varpar(qJ, qJD, link_index, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),uint8(0),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'palh4m1DE1_jacobigD_rot_sym_varpar: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'palh4m1DE1_jacobigD_rot_sym_varpar: qJD has to be [5x1] (double)');
assert(isa(link_index,'uint8') && all(size(link_index) == [1 1]), ...
	'palh4m1DE1_jacobigD_rot_sym_varpar: link_index has to be [1x1] uint8');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'palh4m1DE1_jacobigD_rot_sym_varpar: pkin has to be [9x1] (double)');
if link_index == 0
	%% Symbolic Calculation
	% From jacobigD_rot_0_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-04-11 22:24:49
	% EndTime: 2020-04-11 22:24:49
	% DurationCPUTime: 0.01s
	% Computational Cost: add. (0->0), mult. (0->0), div. (0->0), fcn. (0->0), ass. (0->15)
	unknown=NaN(3,5);
	unknown(1,1) = 0;
	unknown(1,2) = 0;
	unknown(1,3) = 0;
	unknown(1,4) = 0;
	unknown(1,5) = 0;
	unknown(2,1) = 0;
	unknown(2,2) = 0;
	unknown(2,3) = 0;
	unknown(2,4) = 0;
	unknown(2,5) = 0;
	unknown(3,1) = 0;
	unknown(3,2) = 0;
	unknown(3,3) = 0;
	unknown(3,4) = 0;
	unknown(3,5) = 0;
	JgD_rot = unknown;
elseif link_index == 1
	%% Symbolic Calculation
	% From jacobigD_rot_1_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-04-11 22:24:49
	% EndTime: 2020-04-11 22:24:49
	% DurationCPUTime: 0.01s
	% Computational Cost: add. (0->0), mult. (0->0), div. (0->0), fcn. (0->0), ass. (0->15)
	unknown=NaN(3,5);
	unknown(1,1) = 0;
	unknown(1,2) = 0;
	unknown(1,3) = 0;
	unknown(1,4) = 0;
	unknown(1,5) = 0;
	unknown(2,1) = 0;
	unknown(2,2) = 0;
	unknown(2,3) = 0;
	unknown(2,4) = 0;
	unknown(2,5) = 0;
	unknown(3,1) = 0;
	unknown(3,2) = 0;
	unknown(3,3) = 0;
	unknown(3,4) = 0;
	unknown(3,5) = 0;
	JgD_rot = unknown;
elseif link_index == 2
	%% Symbolic Calculation
	% From jacobigD_rot_2_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-04-11 22:24:50
	% EndTime: 2020-04-11 22:24:51
	% DurationCPUTime: 0.23s
	% Computational Cost: add. (14840->137), mult. (15196->348), div. (452->17), fcn. (3934->6), ass. (0->145)
	unknown=NaN(3,5);
	t1 = cos(qJ(5));
	t2 = t1 * qJD(5);
	t3 = sin(qJ(5));
	t4 = pkin(1) * t3;
	t5 = pkin(2) * t4;
	t6 = 0.2e1 * t5;
	t7 = pkin(1) ^ 2;
	t8 = pkin(2) + qJ(2) + pkin(6) + pkin(3);
	t9 = pkin(2) - qJ(2) - pkin(6) - pkin(3);
	t11 = t9 * t8 - t6 + t7;
	t12 = pkin(2) + qJ(2) + pkin(6) - pkin(3);
	t13 = pkin(2) - qJ(2) - pkin(6) + pkin(3);
	t15 = t13 * t12 - t6 + t7;
	t16 = t15 * t11;
	t17 = sqrt(-t16);
	t18 = 0.1e1 / t17;
	t19 = t18 * pkin(1);
	t20 = -qJ(2) - pkin(6) - pkin(3);
	t22 = -qJ(2) - pkin(6) + pkin(3);
	t24 = -0.2e1 * t22 * t11 - 0.2e1 * t15 * t20;
	t25 = t24 * t19;
	t28 = -t4 + pkin(2);
	t30 = -0.1e1 / t17 / t16;
	t31 = t30 * t28;
	t32 = pkin(1) * pkin(2);
	t33 = t32 * t2;
	t34 = 0.2e1 * t33;
	t37 = -qJD(2) * t8 + t9 * qJD(2) - t34;
	t41 = -qJD(2) * t12 + t13 * qJD(2) - t34;
	t43 = -t41 * t11 - t15 * t37;
	t47 = t18 * t28;
	t54 = 0.2e1 * qJD(2) * t11 + 0.2e1 * t15 * qJD(2) - 0.2e1 * t41 * t20 - 0.2e1 * t22 * t37;
	t57 = pkin(1) * qJD(5);
	t58 = qJ(2) + pkin(6);
	t61 = t1 * pkin(1);
	t65 = 0.1e1 / t58;
	t67 = pkin(2) ^ 2;
	t68 = -t6 + t7 + t67;
	t69 = 0.1e1 / t68;
	t74 = t24 * t47 / 0.2e1 + 0.2e1 * t58 * t61;
	t75 = t58 ^ 2;
	t76 = 0.1e1 / t75;
	t78 = qJD(2) * t69;
	t80 = t65 * t74;
	t81 = t68 ^ 2;
	t82 = 0.1e1 / t81;
	t86 = t17 * pkin(1);
	t87 = t86 * t2;
	t90 = pkin(3) ^ 2;
	t91 = -t6 + t7 + t67 + t75 - t90;
	t93 = t91 * t3 * t57;
	t95 = qJD(2) * t58 - t33;
	t96 = 0.2e1 * t95 * t61;
	t97 = -t87 + t43 * t47 / 0.2e1 - t93 + t96;
	t101 = t91 * t61;
	t102 = t17 * t28 + t101;
	t104 = 0.1e1 / t75 / t58;
	t108 = t76 * t102;
	t109 = t82 * t108;
	t114 = pkin(1) * t17 * t1;
	t116 = t91 * t28 - t114;
	t117 = 0.1e1 / t116;
	t120 = t102 ^ 2;
	t121 = t116 ^ 2;
	t122 = 0.1e1 / t121;
	t124 = t122 * t120 + 0.1e1;
	t125 = 0.1e1 / t124;
	t126 = t125 * t68 * t58;
	t130 = -t69 * t108 + t69 * t80;
	t134 = t3 * qJD(5);
	t135 = t86 * t134;
	t136 = t18 * t1;
	t137 = t43 * pkin(1);
	t139 = t137 * t136 / 0.2e1;
	t141 = t91 * pkin(1) * t2;
	t143 = 0.2e1 * t95 * t28 + t135 - t139 - t141;
	t144 = t143 * t125 * t68;
	t146 = t117 * t130;
	t148 = t125 * t68 * qJD(2);
	t150 = qJD(5) * t58;
	t153 = t125 * pkin(2) * t61;
	t157 = t124 ^ 2;
	t158 = 0.1e1 / t157;
	t163 = 0.1e1 / t121 / t116;
	t166 = t97 * t122 * t102 - t143 * t163 * t120;
	t167 = 0.2e1 * t166 * t158 * t68;
	t171 = t30 * t1;
	t172 = t24 * pkin(1);
	t189 = -t172 * t136 / 0.2e1 + 0.2e1 * t58 * t28;
	t192 = t65 * t189;
	t201 = t76 * t116;
	t202 = t82 * t201;
	t208 = t122 * t68;
	t209 = t125 * t208;
	t213 = t69 * t192 - t69 * t201;
	t217 = t102 * t213;
	t223 = t125 * t122 * pkin(2) * t61;
	t226 = t58 * t217;
	t229 = t143 * t125 * t163 * t68;
	t233 = 0.2e1 * t166 * t158 * t208;
	t235 = t126 * t117 * (t69 * t65 * (-t25 * t2 / 0.2e1 - t43 * t24 * t31 / 0.4e1 + t54 * t47 / 0.2e1 - 0.2e1 * t58 * t3 * t57 + 0.2e1 * qJD(2) * t61) - t78 * t76 * t74 + 0.2e1 * t33 * t82 * t80 - t69 * t76 * t97 + 0.2e1 * t78 * t104 * t102 - 0.2e1 * t33 * t109) - t144 * t58 * t122 * t130 + t148 * t146 - 0.2e1 * t153 * t150 * t146 - t167 * t58 * t146 - t209 * t58 * t102 * (t69 * t65 * (t25 * t134 / 0.2e1 + t43 * t172 * t171 / 0.4e1 - t54 * pkin(1) * t136 / 0.2e1 - 0.2e1 * t58 * pkin(1) * t2 + 0.2e1 * qJD(2) * t28) - t78 * t76 * t189 + 0.2e1 * t33 * t82 * t192 - t69 * t76 * t143 + 0.2e1 * t78 * t104 * t116 - 0.2e1 * t33 * t202) - t209 * t58 * t97 * t213 - t209 * qJD(2) * t217 + 0.2e1 * t223 * t150 * t217 + 0.2e1 * t229 * t226 + t233 * t226;
	t236 = sin(qJ(1));
	t241 = qJD(1) * (t126 * t146 - t209 * t226);
	t242 = cos(qJ(1));
	t249 = t15 * pkin(2) * t61 + t32 * t1 * t11;
	t250 = 0.2e1 * t249 * t19;
	t264 = t41 * pkin(2) * t61 - t5 * qJD(5) * t11 + t32 * t1 * t37 - t15 * t32 * t134;
	t279 = t1 ^ 2;
	t280 = t279 * t7;
	t283 = -0.2e1 * pkin(2) * t280 + t249 * t47 - t91 * t4 - t114;
	t286 = t65 * t283;
	t292 = pkin(2) * t61;
	t296 = pkin(2) * qJD(2) * t61;
	t299 = t65 * t102;
	t301 = 0.1e1 / t81 / t68;
	t304 = qJD(5) * t67 * t280;
	t307 = t82 * t299;
	t308 = t32 * t134;
	t317 = t69 * t286 + 0.2e1 * t292 * t307;
	t321 = t117 * t317;
	t333 = 0.2e1 * t249 * pkin(1);
	t357 = pkin(1) * t17 * t3 - t333 * t136 / 0.2e1 - t101 - 0.2e1 * t32 * t1 * t28;
	t360 = t65 * t357;
	t370 = t65 * t116;
	t374 = t82 * t370;
	t384 = 0.2e1 * t292 * t374 + t69 * t360;
	t388 = t102 * t384;
	t394 = t58 * t388;
	t398 = t126 * t117 * (t69 * t65 * (t135 - t139 - t250 * t2 / 0.2e1 - t43 * t249 * t31 / 0.2e1 + t264 * t47 - t141 - 0.2e1 * t95 * t4 + 0.4e1 * t3 * qJD(5) * pkin(2) * t1 * t7) - t78 * t76 * t283 + 0.2e1 * t33 * t82 * t286 + 0.2e1 * t292 * t82 * t65 * t97 - 0.2e1 * t296 * t109 + 0.8e1 * t304 * t301 * t299 - 0.2e1 * t308 * t307) - t144 * t58 * t122 * t317 + t148 * t321 - 0.2e1 * t153 * t150 * t321 - t167 * t58 * t321 - t209 * t58 * t102 * (t69 * t65 * (t87 + t137 * t18 * t3 / 0.2e1 + t250 * t134 / 0.2e1 + t43 * t333 * t171 / 0.4e1 - t264 * pkin(1) * t136 + t93 - t96 + 0.2e1 * pkin(2) * t7 * t279 * qJD(5) + 0.2e1 * t5 * qJD(5) * t28) - t78 * t76 * t357 + 0.2e1 * t33 * t82 * t360 + 0.2e1 * t292 * t82 * t65 * t143 - 0.2e1 * t296 * t202 + 0.8e1 * t304 * t301 * t370 - 0.2e1 * t308 * t374) - t209 * t58 * t97 * t384 - t209 * qJD(2) * t388 + 0.2e1 * t223 * t150 * t388 + 0.2e1 * t229 * t394 + t233 * t394;
	t403 = qJD(1) * (t126 * t321 - t209 * t394);
	unknown(1,1) = 0;
	unknown(1,2) = (t236 * t235 + t242 * t241);
	unknown(1,3) = 0;
	unknown(1,4) = 0;
	unknown(1,5) = (t236 * t398 + t242 * t403);
	unknown(2,1) = 0;
	unknown(2,2) = (-t242 * t235 + t236 * t241);
	unknown(2,3) = 0;
	unknown(2,4) = 0;
	unknown(2,5) = (t236 * t403 - t242 * t398);
	unknown(3,1) = 0;
	unknown(3,2) = 0;
	unknown(3,3) = 0;
	unknown(3,4) = 0;
	unknown(3,5) = 0;
	JgD_rot = unknown;
elseif link_index == 3
	%% Symbolic Calculation
	% From jacobigD_rot_3_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-04-11 22:24:51
	% EndTime: 2020-04-11 22:24:51
	% DurationCPUTime: 0.24s
	% Computational Cost: add. (14840->137), mult. (15196->348), div. (452->17), fcn. (3934->6), ass. (0->145)
	unknown=NaN(3,5);
	t1 = cos(qJ(5));
	t2 = t1 * qJD(5);
	t3 = sin(qJ(5));
	t4 = pkin(1) * t3;
	t5 = pkin(2) * t4;
	t6 = 0.2e1 * t5;
	t7 = pkin(1) ^ 2;
	t8 = pkin(2) + qJ(2) + pkin(6) + pkin(3);
	t9 = pkin(2) - qJ(2) - pkin(6) - pkin(3);
	t11 = t9 * t8 - t6 + t7;
	t12 = pkin(2) + qJ(2) + pkin(6) - pkin(3);
	t13 = pkin(2) - qJ(2) - pkin(6) + pkin(3);
	t15 = t13 * t12 - t6 + t7;
	t16 = t15 * t11;
	t17 = sqrt(-t16);
	t18 = 0.1e1 / t17;
	t19 = t18 * pkin(1);
	t20 = -qJ(2) - pkin(6) - pkin(3);
	t22 = -qJ(2) - pkin(6) + pkin(3);
	t24 = -0.2e1 * t22 * t11 - 0.2e1 * t15 * t20;
	t25 = t24 * t19;
	t28 = -t4 + pkin(2);
	t30 = -0.1e1 / t17 / t16;
	t31 = t30 * t28;
	t32 = pkin(1) * pkin(2);
	t33 = t32 * t2;
	t34 = 0.2e1 * t33;
	t37 = -qJD(2) * t8 + t9 * qJD(2) - t34;
	t41 = -qJD(2) * t12 + t13 * qJD(2) - t34;
	t43 = -t41 * t11 - t15 * t37;
	t47 = t18 * t28;
	t54 = 0.2e1 * qJD(2) * t11 + 0.2e1 * t15 * qJD(2) - 0.2e1 * t41 * t20 - 0.2e1 * t22 * t37;
	t57 = pkin(1) * qJD(5);
	t58 = qJ(2) + pkin(6);
	t61 = t1 * pkin(1);
	t65 = 0.1e1 / t58;
	t67 = pkin(2) ^ 2;
	t68 = -t6 + t7 + t67;
	t69 = 0.1e1 / t68;
	t74 = t24 * t47 / 0.2e1 + 0.2e1 * t58 * t61;
	t75 = t58 ^ 2;
	t76 = 0.1e1 / t75;
	t78 = qJD(2) * t69;
	t80 = t65 * t74;
	t81 = t68 ^ 2;
	t82 = 0.1e1 / t81;
	t86 = t17 * pkin(1);
	t87 = t86 * t2;
	t90 = pkin(3) ^ 2;
	t91 = -t6 + t7 + t67 + t75 - t90;
	t93 = t91 * t3 * t57;
	t95 = qJD(2) * t58 - t33;
	t96 = 0.2e1 * t95 * t61;
	t97 = -t87 + t43 * t47 / 0.2e1 - t93 + t96;
	t101 = t91 * t61;
	t102 = t17 * t28 + t101;
	t104 = 0.1e1 / t75 / t58;
	t108 = t76 * t102;
	t109 = t82 * t108;
	t114 = pkin(1) * t17 * t1;
	t116 = t91 * t28 - t114;
	t117 = 0.1e1 / t116;
	t120 = t102 ^ 2;
	t121 = t116 ^ 2;
	t122 = 0.1e1 / t121;
	t124 = t122 * t120 + 0.1e1;
	t125 = 0.1e1 / t124;
	t126 = t125 * t68 * t58;
	t130 = -t69 * t108 + t69 * t80;
	t134 = t3 * qJD(5);
	t135 = t86 * t134;
	t136 = t18 * t1;
	t137 = t43 * pkin(1);
	t139 = t137 * t136 / 0.2e1;
	t141 = t91 * pkin(1) * t2;
	t143 = 0.2e1 * t95 * t28 + t135 - t139 - t141;
	t144 = t143 * t125 * t68;
	t146 = t117 * t130;
	t148 = t125 * t68 * qJD(2);
	t150 = qJD(5) * t58;
	t153 = t125 * pkin(2) * t61;
	t157 = t124 ^ 2;
	t158 = 0.1e1 / t157;
	t163 = 0.1e1 / t121 / t116;
	t166 = t97 * t122 * t102 - t143 * t163 * t120;
	t167 = 0.2e1 * t166 * t158 * t68;
	t171 = t30 * t1;
	t172 = t24 * pkin(1);
	t189 = -t172 * t136 / 0.2e1 + 0.2e1 * t58 * t28;
	t192 = t65 * t189;
	t201 = t76 * t116;
	t202 = t82 * t201;
	t208 = t122 * t68;
	t209 = t125 * t208;
	t213 = t69 * t192 - t69 * t201;
	t217 = t102 * t213;
	t223 = t125 * t122 * pkin(2) * t61;
	t226 = t58 * t217;
	t229 = t143 * t125 * t163 * t68;
	t233 = 0.2e1 * t166 * t158 * t208;
	t235 = t126 * t117 * (t69 * t65 * (-t25 * t2 / 0.2e1 - t43 * t24 * t31 / 0.4e1 + t54 * t47 / 0.2e1 - 0.2e1 * t58 * t3 * t57 + 0.2e1 * qJD(2) * t61) - t78 * t76 * t74 + 0.2e1 * t33 * t82 * t80 - t69 * t76 * t97 + 0.2e1 * t78 * t104 * t102 - 0.2e1 * t33 * t109) - t144 * t58 * t122 * t130 + t148 * t146 - 0.2e1 * t153 * t150 * t146 - t167 * t58 * t146 - t209 * t58 * t102 * (t69 * t65 * (t25 * t134 / 0.2e1 + t43 * t172 * t171 / 0.4e1 - t54 * pkin(1) * t136 / 0.2e1 - 0.2e1 * t58 * pkin(1) * t2 + 0.2e1 * qJD(2) * t28) - t78 * t76 * t189 + 0.2e1 * t33 * t82 * t192 - t69 * t76 * t143 + 0.2e1 * t78 * t104 * t116 - 0.2e1 * t33 * t202) - t209 * t58 * t97 * t213 - t209 * qJD(2) * t217 + 0.2e1 * t223 * t150 * t217 + 0.2e1 * t229 * t226 + t233 * t226;
	t236 = sin(qJ(1));
	t241 = qJD(1) * (t126 * t146 - t209 * t226);
	t242 = cos(qJ(1));
	t249 = t15 * pkin(2) * t61 + t32 * t1 * t11;
	t250 = 0.2e1 * t249 * t19;
	t264 = t41 * pkin(2) * t61 - t5 * qJD(5) * t11 + t32 * t1 * t37 - t15 * t32 * t134;
	t279 = t1 ^ 2;
	t280 = t279 * t7;
	t283 = -0.2e1 * pkin(2) * t280 + t249 * t47 - t91 * t4 - t114;
	t286 = t65 * t283;
	t292 = pkin(2) * t61;
	t296 = pkin(2) * qJD(2) * t61;
	t299 = t65 * t102;
	t301 = 0.1e1 / t81 / t68;
	t304 = qJD(5) * t67 * t280;
	t307 = t82 * t299;
	t308 = t32 * t134;
	t317 = t69 * t286 + 0.2e1 * t292 * t307;
	t321 = t117 * t317;
	t333 = 0.2e1 * t249 * pkin(1);
	t357 = pkin(1) * t17 * t3 - t333 * t136 / 0.2e1 - t101 - 0.2e1 * t32 * t1 * t28;
	t360 = t65 * t357;
	t370 = t65 * t116;
	t374 = t82 * t370;
	t384 = 0.2e1 * t292 * t374 + t69 * t360;
	t388 = t102 * t384;
	t394 = t58 * t388;
	t398 = t126 * t117 * (t69 * t65 * (t135 - t139 - t250 * t2 / 0.2e1 - t43 * t249 * t31 / 0.2e1 + t264 * t47 - t141 - 0.2e1 * t95 * t4 + 0.4e1 * t3 * qJD(5) * pkin(2) * t1 * t7) - t78 * t76 * t283 + 0.2e1 * t33 * t82 * t286 + 0.2e1 * t292 * t82 * t65 * t97 - 0.2e1 * t296 * t109 + 0.8e1 * t304 * t301 * t299 - 0.2e1 * t308 * t307) - t144 * t58 * t122 * t317 + t148 * t321 - 0.2e1 * t153 * t150 * t321 - t167 * t58 * t321 - t209 * t58 * t102 * (t69 * t65 * (t87 + t137 * t18 * t3 / 0.2e1 + t250 * t134 / 0.2e1 + t43 * t333 * t171 / 0.4e1 - t264 * pkin(1) * t136 + t93 - t96 + 0.2e1 * pkin(2) * t7 * t279 * qJD(5) + 0.2e1 * t5 * qJD(5) * t28) - t78 * t76 * t357 + 0.2e1 * t33 * t82 * t360 + 0.2e1 * t292 * t82 * t65 * t143 - 0.2e1 * t296 * t202 + 0.8e1 * t304 * t301 * t370 - 0.2e1 * t308 * t374) - t209 * t58 * t97 * t384 - t209 * qJD(2) * t388 + 0.2e1 * t223 * t150 * t388 + 0.2e1 * t229 * t394 + t233 * t394;
	t403 = qJD(1) * (t126 * t321 - t209 * t394);
	unknown(1,1) = 0;
	unknown(1,2) = (t236 * t235 + t242 * t241);
	unknown(1,3) = 0;
	unknown(1,4) = 0;
	unknown(1,5) = (t236 * t398 + t242 * t403);
	unknown(2,1) = 0;
	unknown(2,2) = (-t242 * t235 + t236 * t241);
	unknown(2,3) = 0;
	unknown(2,4) = 0;
	unknown(2,5) = (t236 * t403 - t242 * t398);
	unknown(3,1) = 0;
	unknown(3,2) = 0;
	unknown(3,3) = 0;
	unknown(3,4) = 0;
	unknown(3,5) = 0;
	JgD_rot = unknown;
elseif link_index == 4
	%% Symbolic Calculation
	% From jacobigD_rot_4_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-04-11 22:24:51
	% EndTime: 2020-04-11 22:24:52
	% DurationCPUTime: 0.38s
	% Computational Cost: add. (18600->179), mult. (18718->480), div. (710->24), fcn. (4574->6), ass. (0->181)
	unknown=NaN(3,5);
	t1 = cos(qJ(5));
	t2 = t1 * qJD(5);
	t3 = sin(qJ(5));
	t4 = pkin(1) * t3;
	t5 = pkin(2) * t4;
	t6 = 0.2e1 * t5;
	t7 = pkin(1) ^ 2;
	t8 = pkin(2) + qJ(2) + pkin(6) + pkin(3);
	t9 = pkin(2) - qJ(2) - pkin(6) - pkin(3);
	t11 = t9 * t8 - t6 + t7;
	t12 = pkin(2) + qJ(2) + pkin(6) - pkin(3);
	t13 = pkin(2) - qJ(2) - pkin(6) + pkin(3);
	t15 = t13 * t12 - t6 + t7;
	t16 = t15 * t11;
	t17 = sqrt(-t16);
	t18 = 0.1e1 / t17;
	t19 = t18 * pkin(1);
	t20 = -qJ(2) - pkin(6) - pkin(3);
	t22 = -qJ(2) - pkin(6) + pkin(3);
	t24 = -0.2e1 * t22 * t11 - 0.2e1 * t15 * t20;
	t25 = t24 * t19;
	t28 = -t4 + pkin(2);
	t30 = -0.1e1 / t17 / t16;
	t31 = t30 * t28;
	t32 = pkin(1) * pkin(2);
	t33 = t32 * t2;
	t34 = 0.2e1 * t33;
	t37 = -qJD(2) * t8 + t9 * qJD(2) - t34;
	t38 = t15 * t37;
	t41 = -qJD(2) * t12 + t13 * qJD(2) - t34;
	t42 = t41 * t11;
	t43 = -t38 - t42;
	t47 = t18 * t28;
	t54 = 0.2e1 * qJD(2) * t11 + 0.2e1 * t15 * qJD(2) - 0.2e1 * t41 * t20 - 0.2e1 * t22 * t37;
	t57 = pkin(1) * qJD(5);
	t58 = qJ(2) + pkin(6);
	t61 = t1 * pkin(1);
	t65 = 0.1e1 / t58;
	t67 = pkin(2) ^ 2;
	t68 = -t6 + t7 + t67;
	t69 = 0.1e1 / t68;
	t74 = t24 * t47 / 0.2e1 + 0.2e1 * t58 * t61;
	t75 = t58 ^ 2;
	t76 = 0.1e1 / t75;
	t78 = qJD(2) * t69;
	t80 = t65 * t74;
	t81 = t68 ^ 2;
	t82 = 0.1e1 / t81;
	t86 = t17 * pkin(1);
	t87 = t86 * t2;
	t90 = pkin(3) ^ 2;
	t91 = -t6 + t7 + t67 + t75 - t90;
	t93 = t91 * t3 * t57;
	t94 = qJD(2) * t58;
	t95 = -t33 + t94;
	t96 = 0.2e1 * t95 * t61;
	t97 = -t87 + t43 * t47 / 0.2e1 - t93 + t96;
	t101 = t91 * t61;
	t102 = t17 * t28 + t101;
	t104 = 0.1e1 / t75 / t58;
	t108 = t76 * t102;
	t109 = t82 * t108;
	t114 = pkin(1) * t17 * t1;
	t116 = t91 * t28 - t114;
	t117 = 0.1e1 / t116;
	t120 = t102 ^ 2;
	t121 = t116 ^ 2;
	t122 = 0.1e1 / t121;
	t124 = t122 * t120 + 0.1e1;
	t125 = 0.1e1 / t124;
	t126 = t125 * t68 * t58;
	t130 = -t69 * t108 + t69 * t80;
	t134 = t3 * qJD(5);
	t135 = t86 * t134;
	t136 = t18 * t1;
	t137 = t43 * pkin(1);
	t139 = t137 * t136 / 0.2e1;
	t141 = t91 * pkin(1) * t2;
	t143 = 0.2e1 * t95 * t28 + t135 - t139 - t141;
	t144 = t143 * t125 * t68;
	t146 = t117 * t130;
	t148 = t125 * t68 * qJD(2);
	t150 = qJD(5) * t58;
	t153 = t125 * pkin(2) * t61;
	t157 = t124 ^ 2;
	t158 = 0.1e1 / t157;
	t163 = 0.1e1 / t121 / t116;
	t166 = t97 * t122 * t102 - t143 * t163 * t120;
	t167 = 0.2e1 * t166 * t158 * t68;
	t171 = t30 * t1;
	t172 = t24 * pkin(1);
	t189 = -t172 * t136 / 0.2e1 + 0.2e1 * t58 * t28;
	t192 = t65 * t189;
	t201 = t76 * t116;
	t202 = t82 * t201;
	t208 = t122 * t68;
	t209 = t125 * t208;
	t213 = t69 * t192 - t69 * t201;
	t217 = t102 * t213;
	t223 = t125 * t122 * pkin(2) * t61;
	t226 = t58 * t217;
	t229 = t143 * t125 * t163 * t68;
	t233 = 0.2e1 * t166 * t158 * t208;
	t235 = t126 * t117 * (t69 * t65 * (-t25 * t2 / 0.2e1 - t43 * t24 * t31 / 0.4e1 + t54 * t47 / 0.2e1 - 0.2e1 * t58 * t3 * t57 + 0.2e1 * qJD(2) * t61) - t78 * t76 * t74 + 0.2e1 * t33 * t82 * t80 - t69 * t76 * t97 + 0.2e1 * t78 * t104 * t102 - 0.2e1 * t33 * t109) - t144 * t58 * t122 * t130 + t148 * t146 - 0.2e1 * t153 * t150 * t146 - t167 * t58 * t146 - t209 * t58 * t102 * (t69 * t65 * (t25 * t134 / 0.2e1 + t43 * t172 * t171 / 0.4e1 - t54 * pkin(1) * t136 / 0.2e1 - 0.2e1 * t58 * pkin(1) * t2 + 0.2e1 * qJD(2) * t28) - t78 * t76 * t189 + 0.2e1 * t33 * t82 * t192 - t69 * t76 * t143 + 0.2e1 * t78 * t104 * t116 - 0.2e1 * t33 * t202) - t209 * t58 * t97 * t213 - t209 * qJD(2) * t217 + 0.2e1 * t223 * t150 * t217 + 0.2e1 * t229 * t226 + t233 * t226;
	t236 = sin(qJ(1));
	t241 = qJD(1) * (t126 * t146 - t209 * t226);
	t242 = cos(qJ(1));
	t244 = 0.1e1 / pkin(3);
	t249 = t244 * t76;
	t253 = t24 * t18;
	t257 = t244 * t65;
	t266 = t6 - t7 - t67 + t75 + t90;
	t267 = 0.1e1 / t266;
	t270 = t266 ^ 2;
	t271 = 0.1e1 / t270;
	t273 = -t271 * t16 + 0.1e1;
	t274 = 0.1e1 / t273;
	t275 = t274 * pkin(3) * t58;
	t280 = -t17 * t249 + t253 * t257 / 0.2e1;
	t284 = t33 + t94;
	t287 = t267 * t280;
	t292 = t273 ^ 2;
	t293 = 0.1e1 / t292;
	t298 = 0.1e1 / t270 / t266;
	t302 = 0.4e1 * t284 * t298 * t16 - t271 * t38 - t271 * t42;
	t309 = qJD(2) * t244;
	t319 = t271 * t17;
	t320 = t274 * t319;
	t326 = -t244 * t76 * t266 + 0.2e1 * t244 * t65 * t58;
	t331 = pkin(3) * t58 * t326;
	t334 = t43 * t274 * t271 * t18;
	t339 = 0.2e1 * t284 * t274 * t298 * t17;
	t343 = t302 * t293 * t319;
	t345 = t275 * t267 * (0.2e1 * qJD(2) * t17 * t244 * t104 - t43 * t18 * t249 / 0.2e1 - qJD(2) * t253 * t249 / 0.2e1 - t43 * t24 * t30 * t257 / 0.4e1 + t54 * t18 * t257 / 0.2e1) - 0.2e1 * t284 * t274 * pkin(3) * t58 * t271 * t280 + t274 * pkin(3) * qJD(2) * t287 - t302 * t293 * pkin(3) * t58 * t287 - t320 * pkin(3) * t58 * (0.2e1 * t244 * t65 * qJD(2) + 0.2e1 * t309 * t104 * t266 - 0.2e1 * t244 * t76 * t284 - 0.2e1 * t309 * t76 * t58) - t320 * pkin(3) * qJD(2) * t326 - t334 * t331 / 0.2e1 + 0.2e1 * t339 * t331 + t343 * t331;
	t350 = qJD(1) * (t275 * t287 - t320 * t331);
	t357 = t15 * pkin(2) * t61 + t32 * t1 * t11;
	t358 = 0.2e1 * t357 * t19;
	t372 = t41 * pkin(2) * t61 - t5 * qJD(5) * t11 + t32 * t1 * t37 - t15 * t32 * t134;
	t387 = t1 ^ 2;
	t388 = t387 * t7;
	t391 = -0.2e1 * pkin(2) * t388 + t357 * t47 - t91 * t4 - t114;
	t394 = t65 * t391;
	t400 = pkin(2) * t61;
	t404 = pkin(2) * qJD(2) * t61;
	t407 = t65 * t102;
	t409 = 0.1e1 / t81 / t68;
	t412 = qJD(5) * t67 * t388;
	t415 = t82 * t407;
	t416 = t32 * t134;
	t425 = t69 * t394 + 0.2e1 * t400 * t415;
	t429 = t117 * t425;
	t441 = 0.2e1 * t357 * pkin(1);
	t465 = pkin(1) * t17 * t3 - t441 * t136 / 0.2e1 - t101 - 0.2e1 * t32 * t1 * t28;
	t468 = t65 * t465;
	t478 = t65 * t116;
	t482 = t82 * t478;
	t492 = 0.2e1 * t400 * t482 + t69 * t468;
	t496 = t102 * t492;
	t502 = t58 * t496;
	t506 = t126 * t117 * (t69 * t65 * (t135 - t139 - t358 * t2 / 0.2e1 - t43 * t357 * t31 / 0.2e1 + t372 * t47 - t141 - 0.2e1 * t95 * t4 + 0.4e1 * t3 * qJD(5) * pkin(2) * t1 * t7) - t78 * t76 * t391 + 0.2e1 * t33 * t82 * t394 + 0.2e1 * t400 * t82 * t65 * t97 - 0.2e1 * t404 * t109 + 0.8e1 * t412 * t409 * t407 - 0.2e1 * t416 * t415) - t144 * t58 * t122 * t425 + t148 * t429 - 0.2e1 * t153 * t150 * t429 - t167 * t58 * t429 - t209 * t58 * t102 * (t69 * t65 * (t87 + t137 * t18 * t3 / 0.2e1 + t358 * t134 / 0.2e1 + t43 * t441 * t171 / 0.4e1 - t372 * pkin(1) * t136 + t93 - t96 + 0.2e1 * pkin(2) * t7 * t387 * qJD(5) + 0.2e1 * t5 * qJD(5) * t28) - t78 * t76 * t465 + 0.2e1 * t33 * t82 * t468 + 0.2e1 * t400 * t82 * t65 * t143 - 0.2e1 * t404 * t202 + 0.8e1 * t412 * t409 * t478 - 0.2e1 * t416 * t482) - t209 * t58 * t97 * t492 - t209 * qJD(2) * t496 + 0.2e1 * t223 * t150 * t496 + 0.2e1 * t229 * t502 + t233 * t502;
	t511 = qJD(1) * (t126 * t429 - t209 * t502);
	t514 = t274 * t267;
	t521 = 0.2e1 * t357 * t18;
	t522 = t274 * t271;
	t540 = -t43 * t514 * t357 * t30 / 0.2e1 + t514 * t372 * t18 - t284 * t522 * t521 - t302 * t293 * t267 * t521 / 0.2e1 + 0.2e1 * t522 * t17 * pkin(2) * pkin(1) * t134 - t334 * t400 + 0.4e1 * t339 * t400 + 0.2e1 * t343 * t400;
	t547 = qJD(1) * (t514 * t521 / 0.2e1 - 0.2e1 * t320 * t400);
	unknown(1,1) = 0;
	unknown(1,2) = (t236 * t235 + t236 * t345 + t242 * t241 + t242 * t350);
	unknown(1,3) = 0;
	unknown(1,4) = 0;
	unknown(1,5) = (t236 * t506 + t236 * t540 + t242 * t511 + t242 * t547);
	unknown(2,1) = 0;
	unknown(2,2) = (-t242 * t235 + t236 * t241 + t236 * t350 - t242 * t345);
	unknown(2,3) = 0;
	unknown(2,4) = 0;
	unknown(2,5) = (t236 * t511 + t236 * t547 - t242 * t506 - t242 * t540);
	unknown(3,1) = 0;
	unknown(3,2) = 0;
	unknown(3,3) = 0;
	unknown(3,4) = 0;
	unknown(3,5) = 0;
	JgD_rot = unknown;
elseif link_index == 5
	%% Symbolic Calculation
	% From jacobigD_rot_5_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-04-11 22:24:52
	% EndTime: 2020-04-11 22:24:52
	% DurationCPUTime: 0.36s
	% Computational Cost: add. (18600->179), mult. (18720->482), div. (710->24), fcn. (4576->6), ass. (0->181)
	unknown=NaN(3,5);
	t1 = cos(qJ(5));
	t2 = t1 * qJD(5);
	t3 = sin(qJ(5));
	t4 = pkin(1) * t3;
	t5 = pkin(2) * t4;
	t6 = 0.2e1 * t5;
	t7 = pkin(1) ^ 2;
	t8 = pkin(2) + qJ(2) + pkin(6) + pkin(3);
	t9 = pkin(2) - qJ(2) - pkin(6) - pkin(3);
	t11 = t9 * t8 - t6 + t7;
	t12 = pkin(2) + qJ(2) + pkin(6) - pkin(3);
	t13 = pkin(2) - qJ(2) - pkin(6) + pkin(3);
	t15 = t13 * t12 - t6 + t7;
	t16 = t15 * t11;
	t17 = sqrt(-t16);
	t18 = 0.1e1 / t17;
	t19 = t18 * pkin(1);
	t20 = -qJ(2) - pkin(6) - pkin(3);
	t22 = -qJ(2) - pkin(6) + pkin(3);
	t24 = -0.2e1 * t22 * t11 - 0.2e1 * t15 * t20;
	t25 = t24 * t19;
	t28 = -t4 + pkin(2);
	t30 = -0.1e1 / t17 / t16;
	t31 = t30 * t28;
	t32 = pkin(1) * pkin(2);
	t33 = t32 * t2;
	t34 = 0.2e1 * t33;
	t37 = -qJD(2) * t8 + t9 * qJD(2) - t34;
	t38 = t15 * t37;
	t41 = -qJD(2) * t12 + t13 * qJD(2) - t34;
	t42 = t41 * t11;
	t43 = -t38 - t42;
	t47 = t18 * t28;
	t54 = 0.2e1 * qJD(2) * t11 + 0.2e1 * t15 * qJD(2) - 0.2e1 * t41 * t20 - 0.2e1 * t22 * t37;
	t57 = pkin(1) * qJD(5);
	t58 = qJ(2) + pkin(6);
	t61 = t1 * pkin(1);
	t65 = 0.1e1 / t58;
	t67 = pkin(2) ^ 2;
	t68 = -t6 + t7 + t67;
	t69 = 0.1e1 / t68;
	t74 = t24 * t47 / 0.2e1 + 0.2e1 * t58 * t61;
	t75 = t58 ^ 2;
	t76 = 0.1e1 / t75;
	t78 = qJD(2) * t69;
	t80 = t65 * t74;
	t81 = t68 ^ 2;
	t82 = 0.1e1 / t81;
	t86 = t17 * pkin(1);
	t87 = t86 * t2;
	t90 = pkin(3) ^ 2;
	t91 = -t6 + t7 + t67 + t75 - t90;
	t93 = t91 * t3 * t57;
	t94 = qJD(2) * t58;
	t95 = -t33 + t94;
	t96 = 0.2e1 * t95 * t61;
	t97 = -t87 + t43 * t47 / 0.2e1 - t93 + t96;
	t101 = t91 * t61;
	t102 = t17 * t28 + t101;
	t104 = 0.1e1 / t75 / t58;
	t108 = t76 * t102;
	t109 = t82 * t108;
	t114 = pkin(1) * t17 * t1;
	t116 = t91 * t28 - t114;
	t117 = 0.1e1 / t116;
	t120 = t102 ^ 2;
	t121 = t116 ^ 2;
	t122 = 0.1e1 / t121;
	t124 = t122 * t120 + 0.1e1;
	t125 = 0.1e1 / t124;
	t126 = t125 * t68 * t58;
	t130 = -t69 * t108 + t69 * t80;
	t134 = t3 * qJD(5);
	t135 = t86 * t134;
	t136 = t18 * t1;
	t137 = t43 * pkin(1);
	t139 = t137 * t136 / 0.2e1;
	t141 = t91 * pkin(1) * t2;
	t143 = 0.2e1 * t95 * t28 + t135 - t139 - t141;
	t144 = t143 * t125 * t68;
	t146 = t117 * t130;
	t148 = t125 * t68 * qJD(2);
	t150 = qJD(5) * t58;
	t153 = t125 * pkin(2) * t61;
	t157 = t124 ^ 2;
	t158 = 0.1e1 / t157;
	t163 = 0.1e1 / t121 / t116;
	t166 = t97 * t122 * t102 - t143 * t163 * t120;
	t167 = 0.2e1 * t166 * t158 * t68;
	t171 = t30 * t1;
	t172 = t24 * pkin(1);
	t189 = -t172 * t136 / 0.2e1 + 0.2e1 * t58 * t28;
	t192 = t65 * t189;
	t201 = t76 * t116;
	t202 = t82 * t201;
	t208 = t122 * t68;
	t209 = t125 * t208;
	t213 = t69 * t192 - t69 * t201;
	t217 = t102 * t213;
	t223 = t125 * t122 * pkin(2) * t61;
	t226 = t58 * t217;
	t229 = t143 * t125 * t163 * t68;
	t233 = 0.2e1 * t166 * t158 * t208;
	t235 = t126 * t117 * (t69 * t65 * (-t25 * t2 / 0.2e1 - t43 * t24 * t31 / 0.4e1 + t54 * t47 / 0.2e1 - 0.2e1 * t58 * t3 * t57 + 0.2e1 * qJD(2) * t61) - t78 * t76 * t74 + 0.2e1 * t33 * t82 * t80 - t69 * t76 * t97 + 0.2e1 * t78 * t104 * t102 - 0.2e1 * t33 * t109) - t144 * t58 * t122 * t130 + t148 * t146 - 0.2e1 * t153 * t150 * t146 - t167 * t58 * t146 - t209 * t58 * t102 * (t69 * t65 * (t25 * t134 / 0.2e1 + t43 * t172 * t171 / 0.4e1 - t54 * pkin(1) * t136 / 0.2e1 - 0.2e1 * t58 * pkin(1) * t2 + 0.2e1 * qJD(2) * t28) - t78 * t76 * t189 + 0.2e1 * t33 * t82 * t192 - t69 * t76 * t143 + 0.2e1 * t78 * t104 * t116 - 0.2e1 * t33 * t202) - t209 * t58 * t97 * t213 - t209 * qJD(2) * t217 + 0.2e1 * t223 * t150 * t217 + 0.2e1 * t229 * t226 + t233 * t226;
	t236 = sin(qJ(1));
	t241 = qJD(1) * (t126 * t146 - t209 * t226);
	t242 = cos(qJ(1));
	t244 = 0.1e1 / pkin(3);
	t249 = t244 * t76;
	t253 = t24 * t18;
	t257 = t244 * t65;
	t266 = t6 - t7 - t67 + t75 + t90;
	t267 = 0.1e1 / t266;
	t270 = t266 ^ 2;
	t271 = 0.1e1 / t270;
	t273 = -t271 * t16 + 0.1e1;
	t274 = 0.1e1 / t273;
	t275 = t274 * pkin(3) * t58;
	t280 = -t17 * t249 + t253 * t257 / 0.2e1;
	t284 = t33 + t94;
	t287 = t267 * t280;
	t292 = t273 ^ 2;
	t293 = 0.1e1 / t292;
	t298 = 0.1e1 / t270 / t266;
	t302 = 0.4e1 * t284 * t298 * t16 - t271 * t38 - t271 * t42;
	t309 = qJD(2) * t244;
	t319 = t271 * t17;
	t320 = t274 * t319;
	t326 = -t244 * t76 * t266 + 0.2e1 * t244 * t65 * t58;
	t331 = pkin(3) * t58 * t326;
	t334 = t43 * t274 * t271 * t18;
	t339 = 0.2e1 * t284 * t274 * t298 * t17;
	t343 = t302 * t293 * t319;
	t345 = t275 * t267 * (0.2e1 * qJD(2) * t17 * t244 * t104 - t43 * t18 * t249 / 0.2e1 - qJD(2) * t253 * t249 / 0.2e1 - t43 * t24 * t30 * t257 / 0.4e1 + t54 * t18 * t257 / 0.2e1) - 0.2e1 * t284 * t274 * pkin(3) * t58 * t271 * t280 + t274 * pkin(3) * qJD(2) * t287 - t302 * t293 * pkin(3) * t58 * t287 - t320 * pkin(3) * t58 * (0.2e1 * t244 * t65 * qJD(2) + 0.2e1 * t309 * t104 * t266 - 0.2e1 * t244 * t76 * t284 - 0.2e1 * t309 * t76 * t58) - t320 * pkin(3) * qJD(2) * t326 - t334 * t331 / 0.2e1 + 0.2e1 * t339 * t331 + t343 * t331;
	t350 = qJD(1) * (t275 * t287 - t320 * t331);
	t358 = t15 * pkin(2) * t61 + t32 * t1 * t11;
	t359 = 0.2e1 * t358 * t19;
	t373 = t41 * pkin(2) * t61 - t5 * qJD(5) * t11 + t32 * t1 * t37 - t15 * t32 * t134;
	t388 = t1 ^ 2;
	t389 = t388 * t7;
	t392 = -0.2e1 * pkin(2) * t389 + t358 * t47 - t91 * t4 - t114;
	t395 = t65 * t392;
	t401 = pkin(2) * t61;
	t405 = pkin(2) * qJD(2) * t61;
	t408 = t65 * t102;
	t410 = 0.1e1 / t81 / t68;
	t413 = qJD(5) * t67 * t389;
	t416 = t82 * t408;
	t417 = t32 * t134;
	t426 = t69 * t395 + 0.2e1 * t401 * t416;
	t430 = t117 * t426;
	t442 = 0.2e1 * t358 * pkin(1);
	t466 = pkin(1) * t17 * t3 - t442 * t136 / 0.2e1 - t101 - 0.2e1 * t32 * t1 * t28;
	t469 = t65 * t466;
	t479 = t65 * t116;
	t483 = t82 * t479;
	t493 = 0.2e1 * t401 * t483 + t69 * t469;
	t497 = t102 * t493;
	t503 = t58 * t497;
	t507 = t126 * t117 * (t69 * t65 * (t135 - t139 - t359 * t2 / 0.2e1 - t43 * t358 * t31 / 0.2e1 + t373 * t47 - t141 - 0.2e1 * t95 * t4 + 0.4e1 * t3 * qJD(5) * pkin(2) * t1 * t7) - t78 * t76 * t392 + 0.2e1 * t33 * t82 * t395 + 0.2e1 * t401 * t82 * t65 * t97 - 0.2e1 * t405 * t109 + 0.8e1 * t413 * t410 * t408 - 0.2e1 * t417 * t416) - t144 * t58 * t122 * t426 + t148 * t430 - 0.2e1 * t153 * t150 * t430 - t167 * t58 * t430 - t209 * t58 * t102 * (t69 * t65 * (t87 + t137 * t18 * t3 / 0.2e1 + t359 * t134 / 0.2e1 + t43 * t442 * t171 / 0.4e1 - t373 * pkin(1) * t136 + t93 - t96 + 0.2e1 * pkin(2) * t7 * t388 * qJD(5) + 0.2e1 * t5 * qJD(5) * t28) - t78 * t76 * t466 + 0.2e1 * t33 * t82 * t469 + 0.2e1 * t401 * t82 * t65 * t143 - 0.2e1 * t405 * t202 + 0.8e1 * t413 * t410 * t479 - 0.2e1 * t417 * t483) - t209 * t58 * t97 * t493 - t209 * qJD(2) * t497 + 0.2e1 * t223 * t150 * t497 + 0.2e1 * t229 * t503 + t233 * t503;
	t512 = qJD(1) * (t126 * t430 - t209 * t503);
	t515 = t274 * t267;
	t522 = 0.2e1 * t358 * t18;
	t523 = t274 * t271;
	t541 = -t43 * t515 * t358 * t30 / 0.2e1 + t515 * t373 * t18 - t284 * t523 * t522 - t302 * t293 * t267 * t522 / 0.2e1 + 0.2e1 * t523 * t17 * pkin(2) * pkin(1) * t134 - t334 * t401 + 0.4e1 * t339 * t401 + 0.2e1 * t343 * t401;
	t548 = qJD(1) * (t515 * t522 / 0.2e1 - 0.2e1 * t320 * t401);
	unknown(1,1) = 0;
	unknown(1,2) = (t236 * t235 + t236 * t345 + t242 * t241 + t242 * t350);
	unknown(1,3) = (t242 * qJD(1));
	unknown(1,4) = 0;
	unknown(1,5) = (t236 * t507 + t236 * t541 + t242 * t512 + t242 * t548);
	unknown(2,1) = 0;
	unknown(2,2) = (-t242 * t235 + t236 * t241 + t236 * t350 - t242 * t345);
	unknown(2,3) = (t236 * qJD(1));
	unknown(2,4) = 0;
	unknown(2,5) = (t236 * t512 + t236 * t548 - t242 * t507 - t242 * t541);
	unknown(3,1) = 0;
	unknown(3,2) = 0;
	unknown(3,3) = 0;
	unknown(3,4) = 0;
	unknown(3,5) = 0;
	JgD_rot = unknown;
elseif link_index == 6
	%% Symbolic Calculation
	% From jacobigD_rot_6_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-04-11 22:24:56
	% EndTime: 2020-04-11 22:24:57
	% DurationCPUTime: 0.72s
	% Computational Cost: add. (34985->279), mult. (36650->789), div. (1986->31), fcn. (9042->12), ass. (0->280)
	unknown=NaN(3,5);
	t1 = cos(qJ(5));
	t2 = t1 * qJD(5);
	t3 = sin(qJ(5));
	t4 = pkin(1) * t3;
	t5 = pkin(2) * t4;
	t6 = 0.2e1 * t5;
	t7 = pkin(1) ^ 2;
	t8 = pkin(2) + qJ(2) + pkin(6) + pkin(3);
	t9 = pkin(2) - qJ(2) - pkin(6) - pkin(3);
	t11 = t9 * t8 - t6 + t7;
	t12 = pkin(2) + qJ(2) + pkin(6) - pkin(3);
	t13 = pkin(2) - qJ(2) - pkin(6) + pkin(3);
	t15 = t13 * t12 - t6 + t7;
	t16 = t15 * t11;
	t17 = sqrt(-t16);
	t18 = 0.1e1 / t17;
	t19 = t18 * pkin(1);
	t20 = -qJ(2) - pkin(6) - pkin(3);
	t22 = -qJ(2) - pkin(6) + pkin(3);
	t24 = -0.2e1 * t22 * t11 - 0.2e1 * t15 * t20;
	t25 = t24 * t19;
	t28 = -t4 + pkin(2);
	t30 = -0.1e1 / t17 / t16;
	t31 = t30 * t28;
	t32 = pkin(1) * pkin(2);
	t33 = t32 * t2;
	t34 = 0.2e1 * t33;
	t37 = -qJD(2) * t8 + t9 * qJD(2) - t34;
	t38 = t15 * t37;
	t41 = -qJD(2) * t12 + t13 * qJD(2) - t34;
	t42 = t41 * t11;
	t43 = -t38 - t42;
	t47 = t18 * t28;
	t54 = 0.2e1 * qJD(2) * t11 + 0.2e1 * t15 * qJD(2) - 0.2e1 * t41 * t20 - 0.2e1 * t22 * t37;
	t57 = pkin(1) * qJD(5);
	t58 = qJ(2) + pkin(6);
	t61 = t1 * pkin(1);
	t65 = 0.1e1 / t58;
	t67 = pkin(2) ^ 2;
	t68 = -t6 + t7 + t67;
	t69 = 0.1e1 / t68;
	t74 = t24 * t47 / 0.2e1 + 0.2e1 * t58 * t61;
	t75 = t58 ^ 2;
	t76 = 0.1e1 / t75;
	t78 = qJD(2) * t69;
	t80 = t65 * t74;
	t81 = t68 ^ 2;
	t82 = 0.1e1 / t81;
	t86 = t17 * pkin(1);
	t87 = t86 * t2;
	t90 = pkin(3) ^ 2;
	t91 = -t6 + t7 + t67 + t75 - t90;
	t93 = t91 * t3 * t57;
	t94 = qJD(2) * t58;
	t95 = -t33 + t94;
	t96 = 0.2e1 * t95 * t61;
	t97 = -t87 + t43 * t47 / 0.2e1 - t93 + t96;
	t99 = t69 * t76 * t97;
	t101 = t91 * t61;
	t102 = t17 * t28 + t101;
	t104 = 0.1e1 / t75 / t58;
	t105 = t104 * t102;
	t108 = t76 * t102;
	t109 = t82 * t108;
	t114 = pkin(1) * t17 * t1;
	t116 = t91 * t28 - t114;
	t117 = 0.1e1 / t116;
	t120 = t102 ^ 2;
	t121 = t116 ^ 2;
	t122 = 0.1e1 / t121;
	t124 = t122 * t120 + 0.1e1;
	t125 = 0.1e1 / t124;
	t126 = t125 * t68 * t58;
	t129 = t69 * t108;
	t130 = t69 * t80 - t129;
	t134 = t3 * qJD(5);
	t135 = t86 * t134;
	t136 = t18 * t1;
	t137 = t43 * pkin(1);
	t139 = t137 * t136 / 0.2e1;
	t141 = t91 * pkin(1) * t2;
	t143 = 0.2e1 * t95 * t28 + t135 - t139 - t141;
	t144 = t143 * t125 * t68;
	t146 = t117 * t130;
	t148 = t125 * t68 * qJD(2);
	t150 = qJD(5) * t58;
	t153 = t125 * pkin(2) * t61;
	t157 = t124 ^ 2;
	t158 = 0.1e1 / t157;
	t163 = 0.1e1 / t121 / t116;
	t166 = t97 * t122 * t102 - t143 * t163 * t120;
	t167 = 0.2e1 * t166 * t158 * t68;
	t171 = t30 * t1;
	t172 = t24 * pkin(1);
	t189 = -t172 * t136 / 0.2e1 + 0.2e1 * t58 * t28;
	t192 = t65 * t189;
	t197 = t69 * t76 * t143;
	t198 = t104 * t116;
	t201 = t76 * t116;
	t202 = t82 * t201;
	t208 = t122 * t68;
	t209 = t125 * t208;
	t212 = t69 * t201;
	t213 = t69 * t192 - t212;
	t217 = t102 * t213;
	t223 = t125 * t122 * pkin(2) * t61;
	t226 = t58 * t217;
	t229 = t143 * t125 * t163 * t68;
	t233 = 0.2e1 * t166 * t158 * t208;
	t235 = t126 * t117 * (t69 * t65 * (-t25 * t2 / 0.2e1 - t43 * t24 * t31 / 0.4e1 + t54 * t47 / 0.2e1 - 0.2e1 * t58 * t3 * t57 + 0.2e1 * qJD(2) * t61) - t78 * t76 * t74 + 0.2e1 * t33 * t82 * t80 - t99 + 0.2e1 * t78 * t105 - 0.2e1 * t33 * t109) - t144 * t58 * t122 * t130 + t148 * t146 - 0.2e1 * t153 * t150 * t146 - t167 * t58 * t146 - t209 * t58 * t102 * (t69 * t65 * (t25 * t134 / 0.2e1 + t43 * t172 * t171 / 0.4e1 - t54 * pkin(1) * t136 / 0.2e1 - 0.2e1 * t58 * pkin(1) * t2 + 0.2e1 * qJD(2) * t28) - t78 * t76 * t189 + 0.2e1 * t33 * t82 * t192 - t197 + 0.2e1 * t78 * t198 - 0.2e1 * t33 * t202) - t209 * t58 * t97 * t213 - t209 * qJD(2) * t217 + 0.2e1 * t223 * t150 * t217 + 0.2e1 * t229 * t226 + t233 * t226;
	t236 = sin(qJ(1));
	t241 = qJD(1) * (t126 * t146 - t209 * t226);
	t242 = cos(qJ(1));
	t244 = 0.1e1 / pkin(3);
	t249 = t244 * t76;
	t253 = t24 * t18;
	t257 = t244 * t65;
	t266 = t6 - t7 - t67 + t75 + t90;
	t267 = 0.1e1 / t266;
	t270 = t266 ^ 2;
	t271 = 0.1e1 / t270;
	t273 = -t271 * t16 + 0.1e1;
	t274 = 0.1e1 / t273;
	t275 = t274 * pkin(3) * t58;
	t280 = -t17 * t249 + t253 * t257 / 0.2e1;
	t284 = t33 + t94;
	t287 = t267 * t280;
	t292 = t273 ^ 2;
	t293 = 0.1e1 / t292;
	t298 = 0.1e1 / t270 / t266;
	t302 = 0.4e1 * t284 * t298 * t16 - t271 * t38 - t271 * t42;
	t309 = qJD(2) * t244;
	t319 = t271 * t17;
	t320 = t274 * t319;
	t324 = t76 * t266;
	t326 = 0.2e1 * t244 * t65 * t58 - t244 * t324;
	t331 = pkin(3) * t58 * t326;
	t334 = t43 * t274 * t271 * t18;
	t339 = 0.2e1 * t284 * t274 * t298 * t17;
	t343 = t302 * t293 * t319;
	t345 = t275 * t267 * (0.2e1 * qJD(2) * t17 * t244 * t104 - t43 * t18 * t249 / 0.2e1 - qJD(2) * t253 * t249 / 0.2e1 - t43 * t24 * t30 * t257 / 0.4e1 + t54 * t18 * t257 / 0.2e1) - 0.2e1 * t284 * t274 * pkin(3) * t58 * t271 * t280 + t274 * pkin(3) * qJD(2) * t287 - t302 * t293 * pkin(3) * t58 * t287 - t320 * pkin(3) * t58 * (0.2e1 * t244 * t65 * qJD(2) + 0.2e1 * t309 * t104 * t266 - 0.2e1 * t244 * t76 * t284 - 0.2e1 * t309 * t76 * t58) - t320 * pkin(3) * qJD(2) * t326 - t334 * t331 / 0.2e1 + 0.2e1 * t339 * t331 + t343 * t331;
	t350 = qJD(1) * (t275 * t287 - t320 * t331);
	t353 = t242 * qJD(1);
	t354 = t236 * qJD(1);
	t355 = t108 * t354;
	t356 = t76 * t120;
	t358 = t76 * t121;
	t360 = t82 * t356 + t82 * t358;
	t361 = sqrt(t360);
	t362 = 0.1e1 / t361;
	t363 = t362 * t69;
	t364 = t17 * t244;
	t365 = 0.1e1 / t90;
	t366 = t365 * t76;
	t370 = t365 * t76 * t270 - t16 * t366;
	t371 = sqrt(t370);
	t372 = 0.1e1 / t371;
	t374 = t372 * t364 * t363;
	t377 = t69 * t76;
	t378 = t377 * t97 * t242;
	t379 = t244 * t362;
	t380 = t372 * t17;
	t381 = t380 * t379;
	t383 = t102 * t242;
	t384 = t69 * t104;
	t385 = t384 * t383;
	t387 = qJD(2) * t380 * t379;
	t390 = t76 * t383;
	t391 = t362 * t82;
	t392 = t244 * t391;
	t395 = pkin(2) * t61;
	t396 = t395 * qJD(5) * t380;
	t399 = t377 * t383;
	t401 = 0.1e1 / t361 / t360;
	t407 = qJD(2) * t82;
	t411 = 0.1e1 / t81 / t68;
	t424 = -0.2e1 * t407 * t104 * t120 - 0.2e1 * t407 * t104 * t121 + 0.2e1 * t97 * t82 * t108 + 0.2e1 * t143 * t82 * t201 + 0.4e1 * t33 * t411 * t356 + 0.4e1 * t33 * t411 * t358;
	t426 = t424 * t380 * t244 * t401;
	t431 = t43 * t372 * t18 * t379;
	t435 = 0.1e1 / t371 / t370;
	t450 = 0.2e1 * qJD(2) * t16 * t365 * t104 - 0.2e1 * qJD(2) * t365 * t104 * t270 + 0.4e1 * t284 * t365 * t324 - t38 * t366 - t42 * t366;
	t452 = t450 * t435 * t17 * t379;
	t455 = t201 * t354;
	t456 = t244 * t266;
	t458 = t372 * t456 * t363;
	t461 = t377 * t143 * t242;
	t462 = t266 * t362;
	t463 = t372 * t244;
	t464 = t463 * t462;
	t466 = t116 * t242;
	t467 = t384 * t466;
	t469 = qJD(2) * t463 * t462;
	t472 = t76 * t466;
	t473 = t266 * t391;
	t476 = t395 * qJD(5) * t463;
	t479 = t377 * t466;
	t482 = t424 * t463 * t266 * t401;
	t486 = 0.2e1 * t463 * t284 * t362;
	t490 = t450 * t435 * t244 * t462;
	t493 = t374 * t355 - t381 * t378 + 0.2e1 * t387 * t385 - 0.2e1 * t396 * t392 * t390 + t426 * t399 / 0.2e1 - t431 * t399 / 0.2e1 + t452 * t399 / 0.2e1 - t458 * t455 + t464 * t461 - 0.2e1 * t469 * t467 + 0.2e1 * t476 * t473 * t472 - t482 * t479 / 0.2e1 + t486 * t479 - t490 * t479 / 0.2e1;
	t494 = cos(qJ(3));
	t500 = sin(qJ(3));
	t527 = t458 * t355 - t464 * t378 + 0.2e1 * t469 * t385 - 0.2e1 * t476 * t473 * t390 + t482 * t399 / 0.2e1 - t486 * t399 + t490 * t399 / 0.2e1 + t374 * t455 - t381 * t461 + 0.2e1 * t387 * t467 - 0.2e1 * t396 * t392 * t472 + t426 * t479 / 0.2e1 - t431 * t479 / 0.2e1 + t452 * t479 / 0.2e1;
	t539 = t15 * pkin(2) * t61 + t32 * t1 * t11;
	t540 = 0.2e1 * t539 * t19;
	t554 = t41 * pkin(2) * t61 - t5 * qJD(5) * t11 + t32 * t1 * t37 - t15 * t32 * t134;
	t569 = t1 ^ 2;
	t570 = t569 * t7;
	t573 = -0.2e1 * pkin(2) * t570 - t91 * t4 + t539 * t47 - t114;
	t576 = t65 * t573;
	t585 = pkin(2) * qJD(2) * t61;
	t588 = t65 * t102;
	t591 = qJD(5) * t67 * t570;
	t594 = t82 * t588;
	t595 = t32 * t134;
	t604 = 0.2e1 * t395 * t594 + t69 * t576;
	t608 = t117 * t604;
	t620 = 0.2e1 * t539 * pkin(1);
	t644 = pkin(1) * t17 * t3 - t620 * t136 / 0.2e1 - t101 - 0.2e1 * t32 * t1 * t28;
	t647 = t65 * t644;
	t657 = t65 * t116;
	t661 = t82 * t657;
	t671 = 0.2e1 * t395 * t661 + t69 * t647;
	t675 = t102 * t671;
	t681 = t58 * t675;
	t685 = t126 * t117 * (t69 * t65 * (t135 - t139 - t540 * t2 / 0.2e1 - t43 * t539 * t31 / 0.2e1 + t554 * t47 - t141 - 0.2e1 * t95 * t4 + 0.4e1 * t3 * qJD(5) * pkin(2) * t1 * t7) - t78 * t76 * t573 + 0.2e1 * t33 * t82 * t576 + 0.2e1 * t395 * t82 * t65 * t97 - 0.2e1 * t585 * t109 + 0.8e1 * t591 * t411 * t588 - 0.2e1 * t595 * t594) - t144 * t58 * t122 * t604 + t148 * t608 - 0.2e1 * t153 * t150 * t608 - t167 * t58 * t608 - t209 * t58 * t102 * (t69 * t65 * (t87 + t137 * t18 * t3 / 0.2e1 + t540 * t134 / 0.2e1 + t43 * t620 * t171 / 0.4e1 - t554 * pkin(1) * t136 + t93 - t96 + 0.2e1 * pkin(2) * t7 * t569 * qJD(5) + 0.2e1 * t5 * qJD(5) * t28) - t78 * t76 * t644 + 0.2e1 * t33 * t82 * t647 + 0.2e1 * t395 * t82 * t65 * t143 - 0.2e1 * t585 * t202 + 0.8e1 * t591 * t411 * t657 - 0.2e1 * t595 * t661) - t209 * t58 * t97 * t671 - t209 * qJD(2) * t675 + 0.2e1 * t223 * t150 * t675 + 0.2e1 * t229 * t681 + t233 * t681;
	t690 = qJD(1) * (t126 * t608 - t209 * t681);
	t693 = t274 * t267;
	t700 = 0.2e1 * t539 * t18;
	t701 = t274 * t271;
	t719 = -t43 * t693 * t539 * t30 / 0.2e1 + t693 * t554 * t18 - t284 * t701 * t700 - t302 * t293 * t267 * t700 / 0.2e1 + 0.2e1 * t701 * t17 * pkin(2) * pkin(1) * t134 - t334 * t395 + 0.4e1 * t339 * t395 + 0.2e1 * t343 * t395;
	t726 = qJD(1) * (t693 * t700 / 0.2e1 - 0.2e1 * t320 * t395);
	t734 = t108 * t353;
	t737 = t377 * t97 * t236;
	t739 = t102 * t236;
	t740 = t384 * t739;
	t743 = t76 * t739;
	t747 = t377 * t739;
	t754 = t201 * t353;
	t757 = t377 * t143 * t236;
	t759 = t116 * t236;
	t760 = t384 * t759;
	t763 = t76 * t759;
	t767 = t377 * t759;
	t773 = -t374 * t734 - t381 * t737 + 0.2e1 * t387 * t740 - 0.2e1 * t396 * t392 * t743 + t426 * t747 / 0.2e1 - t431 * t747 / 0.2e1 + t452 * t747 / 0.2e1 + t458 * t754 + t464 * t757 - 0.2e1 * t469 * t760 + 0.2e1 * t476 * t473 * t763 - t482 * t767 / 0.2e1 + t486 * t767 - t490 * t767 / 0.2e1;
	t805 = -t458 * t734 - t464 * t737 + 0.2e1 * t469 * t740 - 0.2e1 * t476 * t473 * t743 + t482 * t747 / 0.2e1 - t486 * t747 + t490 * t747 / 0.2e1 - t374 * t754 - t381 * t757 + 0.2e1 * t387 * t760 - 0.2e1 * t396 * t392 * t763 + t426 * t767 / 0.2e1 - t431 * t767 / 0.2e1 + t452 * t767 / 0.2e1;
	t819 = t363 * t198;
	t820 = qJD(2) * t372;
	t821 = t820 * t364;
	t827 = t401 * t69;
	t828 = t827 * t201;
	t829 = t424 * t372;
	t830 = t829 * t364;
	t833 = t363 * t201;
	t836 = t43 * t372 * t18 * t244;
	t839 = t450 * t435;
	t840 = t839 * t364;
	t844 = t363 * t105;
	t845 = t820 * t456;
	t851 = t827 * t108;
	t852 = t829 * t456;
	t856 = t363 * t108;
	t857 = t839 * t456;
	t860 = t381 * t197 - 0.2e1 * t821 * t819 + 0.2e1 * t396 * t392 * t201 - t830 * t828 / 0.2e1 + t836 * t833 / 0.2e1 - t840 * t833 / 0.2e1 + t464 * t99 - 0.2e1 * t845 * t844 + 0.2e1 * t476 * t473 * t108 - t852 * t851 / 0.2e1 + t486 * t129 - t857 * t856 / 0.2e1;
	t890 = t464 * t197 - 0.2e1 * t845 * t819 + 0.2e1 * t476 * t473 * t201 - t852 * t828 / 0.2e1 + t486 * t212 - t857 * t833 / 0.2e1 - t381 * t99 + 0.2e1 * t821 * t844 - 0.2e1 * t396 * t392 * t108 + t830 * t851 / 0.2e1 - t836 * t856 / 0.2e1 + t840 * t856 / 0.2e1;
	unknown(1,1) = 0;
	unknown(1,2) = (t236 * t235 + t236 * t345 + t242 * t241 + t242 * t350);
	unknown(1,3) = t353;
	unknown(1,4) = (t494 * t493 - t500 * qJD(3) * (-t381 * t399 + t464 * t479) + t500 * t527 + t494 * qJD(3) * (-t381 * t479 - t464 * t399));
	unknown(1,5) = (t236 * t685 + t236 * t719 + t242 * t690 + t242 * t726);
	unknown(2,1) = 0;
	unknown(2,2) = (-t242 * t235 + t236 * t241 + t236 * t350 - t242 * t345);
	unknown(2,3) = t354;
	unknown(2,4) = (t494 * t773 - t500 * qJD(3) * (-t381 * t747 + t464 * t767) + t500 * t805 + t494 * qJD(3) * (-t381 * t767 - t464 * t747));
	unknown(2,5) = (t236 * t690 + t236 * t726 - t242 * t685 - t242 * t719);
	unknown(3,1) = 0;
	unknown(3,2) = 0;
	unknown(3,3) = 0;
	unknown(3,4) = (t494 * t860 - t500 * qJD(3) * (t464 * t129 + t381 * t212) + t500 * t890 + t494 * qJD(3) * (-t381 * t129 + t464 * t212));
	unknown(3,5) = 0;
	JgD_rot = unknown;
elseif link_index == 7
	%% Symbolic Calculation
	% From jacobigD_rot_7_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-04-11 22:24:49
	% EndTime: 2020-04-11 22:24:49
	% DurationCPUTime: 0.01s
	% Computational Cost: add. (0->0), mult. (2->2), div. (0->0), fcn. (2->2), ass. (0->17)
	unknown=NaN(3,5);
	t1 = cos(qJ(1));
	t3 = sin(qJ(1));
	unknown(1,1) = 0;
	unknown(1,2) = 0;
	unknown(1,3) = 0;
	unknown(1,4) = 0;
	unknown(1,5) = (qJD(1) * t1);
	unknown(2,1) = 0;
	unknown(2,2) = 0;
	unknown(2,3) = 0;
	unknown(2,4) = 0;
	unknown(2,5) = (qJD(1) * t3);
	unknown(3,1) = 0;
	unknown(3,2) = 0;
	unknown(3,3) = 0;
	unknown(3,4) = 0;
	unknown(3,5) = 0;
	JgD_rot = unknown;
else
	JgD_rot=NaN(3,5);
end