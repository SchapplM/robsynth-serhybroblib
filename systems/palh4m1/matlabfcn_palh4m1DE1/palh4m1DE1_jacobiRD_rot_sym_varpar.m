% Zeitableitung der Rotationsmatrix-Jacobi-Matrix für beliebiges Segment von
% palh4m1DE1
% Use Code from Maple symbolic Code Generation
% 
% Rotationsmatrix-Jacobi-Matrix: Differentieller Zusammenhang zwischen
% gestapelter Endeffektor-Rotationsmatrix und verallgemeinerten Koordinaten.
% Zeitableitung: Die Gradientenmatrix wird nochmal nach der Zeit abgeleitet.
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% link_index [1x1 uint8]
%   Index des Segmentes, auf dem der Punkt C liegt. (0=Basis).
%   Siehe auch: bsp_3T1R_fkine_fixb_rotmat_mdh_sym_varpar.m
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[AB,AD,CB,CE,EP,HC,OT,TA,TD]';
% 
% Output:
% JRD_rot [9x5]
%   Zeitableitung der Jacobi-Matrix der Endeffektor-Rotationsmatrix

% Quelle: HybrDyn-Toolbox
% Datum: 2020-04-11 22:26
% Revision: 6ae2d958c5b90587a0d08029b131cb7b66342a68 (2020-04-11)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function JRD_rot = palh4m1DE1_jacobiRD_rot_sym_varpar(qJ, qJD, link_index, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),uint8(0),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'palh4m1DE1_jacobiRD_rot_sym_varpar: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'palh4m1DE1_jacobiRD_rot_sym_varpar: qJD has to be [5x1] (double)');
assert(isa(link_index,'uint8') && all(size(link_index) == [1 1]), ...
	'palh4m1DE1_jacobiRD_rot_sym_varpar: link_index has to be [1x1] uint8');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'palh4m1DE1_jacobiRD_rot_sym_varpar: pkin has to be [9x1] (double)');
if link_index == 0
	%% Symbolic Calculation
	% From jacobiRD_rot_0_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-04-11 22:24:49
	% EndTime: 2020-04-11 22:24:49
	% DurationCPUTime: 0.02s
	% Computational Cost: add. (0->0), mult. (0->0), div. (0->0), fcn. (0->0), ass. (0->45)
	unknown=NaN(9,5);
	unknown(1,1) = 0;
	unknown(1,2) = 0;
	unknown(1,3) = 0;
	unknown(1,4) = 0;
	unknown(1,5) = 0;
	unknown(2,1) = 0;
	unknown(2,2) = 0;
	unknown(2,3) = 0;
	unknown(2,4) = 0;
	unknown(2,5) = 0;
	unknown(3,1) = 0;
	unknown(3,2) = 0;
	unknown(3,3) = 0;
	unknown(3,4) = 0;
	unknown(3,5) = 0;
	unknown(4,1) = 0;
	unknown(4,2) = 0;
	unknown(4,3) = 0;
	unknown(4,4) = 0;
	unknown(4,5) = 0;
	unknown(5,1) = 0;
	unknown(5,2) = 0;
	unknown(5,3) = 0;
	unknown(5,4) = 0;
	unknown(5,5) = 0;
	unknown(6,1) = 0;
	unknown(6,2) = 0;
	unknown(6,3) = 0;
	unknown(6,4) = 0;
	unknown(6,5) = 0;
	unknown(7,1) = 0;
	unknown(7,2) = 0;
	unknown(7,3) = 0;
	unknown(7,4) = 0;
	unknown(7,5) = 0;
	unknown(8,1) = 0;
	unknown(8,2) = 0;
	unknown(8,3) = 0;
	unknown(8,4) = 0;
	unknown(8,5) = 0;
	unknown(9,1) = 0;
	unknown(9,2) = 0;
	unknown(9,3) = 0;
	unknown(9,4) = 0;
	unknown(9,5) = 0;
	JRD_rot = unknown;
elseif link_index == 1
	%% Symbolic Calculation
	% From jacobiRD_rot_1_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-04-11 22:24:49
	% EndTime: 2020-04-11 22:24:49
	% DurationCPUTime: 0.02s
	% Computational Cost: add. (3->3), mult. (4->2), div. (0->0), fcn. (4->2), ass. (0->49)
	unknown=NaN(9,5);
	t1 = cos(qJ(1));
	t2 = qJD(1) * t1;
	t3 = sin(qJ(1));
	t4 = qJD(1) * t3;
	unknown(1,1) = -t2;
	unknown(1,2) = 0.0e0;
	unknown(1,3) = 0.0e0;
	unknown(1,4) = 0.0e0;
	unknown(1,5) = 0.0e0;
	unknown(2,1) = -t4;
	unknown(2,2) = 0.0e0;
	unknown(2,3) = 0.0e0;
	unknown(2,4) = 0.0e0;
	unknown(2,5) = 0.0e0;
	unknown(3,1) = 0.0e0;
	unknown(3,2) = 0.0e0;
	unknown(3,3) = 0.0e0;
	unknown(3,4) = 0.0e0;
	unknown(3,5) = 0.0e0;
	unknown(4,1) = t4;
	unknown(4,2) = 0.0e0;
	unknown(4,3) = 0.0e0;
	unknown(4,4) = 0.0e0;
	unknown(4,5) = 0.0e0;
	unknown(5,1) = -t2;
	unknown(5,2) = 0.0e0;
	unknown(5,3) = 0.0e0;
	unknown(5,4) = 0.0e0;
	unknown(5,5) = 0.0e0;
	unknown(6,1) = 0.0e0;
	unknown(6,2) = 0.0e0;
	unknown(6,3) = 0.0e0;
	unknown(6,4) = 0.0e0;
	unknown(6,5) = 0.0e0;
	unknown(7,1) = 0.0e0;
	unknown(7,2) = 0.0e0;
	unknown(7,3) = 0.0e0;
	unknown(7,4) = 0.0e0;
	unknown(7,5) = 0.0e0;
	unknown(8,1) = 0.0e0;
	unknown(8,2) = 0.0e0;
	unknown(8,3) = 0.0e0;
	unknown(8,4) = 0.0e0;
	unknown(8,5) = 0.0e0;
	unknown(9,1) = 0.0e0;
	unknown(9,2) = 0.0e0;
	unknown(9,3) = 0.0e0;
	unknown(9,4) = 0.0e0;
	unknown(9,5) = 0.0e0;
	JRD_rot = unknown;
elseif link_index == 2
	%% Symbolic Calculation
	% From jacobiRD_rot_2_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-04-11 22:24:52
	% EndTime: 2020-04-11 22:24:53
	% DurationCPUTime: 0.98s
	% Computational Cost: add. (72789->214), mult. (75922->591), div. (2692->20), fcn. (19906->8), ass. (0->224)
	unknown=NaN(9,5);
	t1 = cos(qJ(1));
	t2 = t1 * qJD(1);
	t3 = cos(qJ(5));
	t4 = sin(qJ(5));
	t5 = pkin(1) * t4;
	t6 = pkin(2) * t5;
	t7 = 0.2e1 * t6;
	t8 = pkin(1) ^ 2;
	t9 = pkin(2) + qJ(2) + pkin(6) + pkin(3);
	t10 = pkin(2) - qJ(2) - pkin(6) - pkin(3);
	t12 = t10 * t9 - t7 + t8;
	t13 = pkin(2) + qJ(2) + pkin(6) - pkin(3);
	t14 = pkin(2) - qJ(2) - pkin(6) + pkin(3);
	t16 = t14 * t13 - t7 + t8;
	t17 = t16 * t12;
	t18 = sqrt(-t17);
	t20 = pkin(1) * t18 * t3;
	t21 = t5 - pkin(2);
	t22 = pkin(2) ^ 2;
	t23 = qJ(2) + pkin(6);
	t24 = t23 ^ 2;
	t25 = pkin(3) ^ 2;
	t26 = -t7 + t8 + t22 + t24 - t25;
	t28 = -t26 * t21 - t20;
	t30 = 0.1e1 / t23;
	t31 = -t7 + t8 + t22;
	t32 = 0.1e1 / t31;
	t33 = t32 * t30;
	t35 = t3 * pkin(1);
	t36 = t26 * t35;
	t37 = -t18 * t21 + t36;
	t38 = t37 ^ 2;
	t39 = 0.1e1 / t24;
	t40 = t39 * t38;
	t41 = t31 ^ 2;
	t42 = 0.1e1 / t41;
	t44 = t28 ^ 2;
	t45 = t39 * t44;
	t47 = t42 * t40 + t42 * t45;
	t48 = sqrt(t47);
	t49 = 0.1e1 / t48;
	t50 = t49 * t33;
	t52 = sin(qJ(1));
	t53 = t4 * qJD(5);
	t54 = pkin(1) * t18;
	t55 = t54 * t53;
	t56 = 0.1e1 / t18;
	t57 = t56 * t3;
	t58 = t3 * qJD(5);
	t59 = pkin(1) * pkin(2);
	t60 = t59 * t58;
	t61 = 0.2e1 * t60;
	t64 = t10 * qJD(2) - qJD(2) * t9 - t61;
	t68 = -qJD(2) * t13 + t14 * qJD(2) - t61;
	t70 = -t68 * t12 - t16 * t64;
	t71 = t70 * pkin(1);
	t73 = t71 * t57 / 0.2e1;
	t75 = t26 * pkin(1) * t58;
	t77 = qJD(2) * t23 - t60;
	t79 = -0.2e1 * t77 * t21 + t55 - t73 - t75;
	t82 = t28 * t52;
	t84 = t49 * t32;
	t85 = qJD(2) * t84;
	t87 = t42 * t30;
	t90 = pkin(2) * t35;
	t91 = t90 * qJD(5) * t49;
	t96 = 0.1e1 / t48 / t47;
	t98 = t39 * t37;
	t99 = t54 * t58;
	t100 = -t56 * t21;
	t103 = pkin(1) * qJD(5);
	t105 = t26 * t4 * t103;
	t106 = 0.2e1 * t77 * t35;
	t107 = -t99 + t70 * t100 / 0.2e1 - t105 + t106;
	t112 = 0.1e1 / t24 / t23;
	t114 = qJD(2) * t42;
	t118 = 0.1e1 / t41 / t31;
	t122 = t39 * t28;
	t132 = 0.2e1 * t107 * t42 * t98 - 0.2e1 * t114 * t112 * t38 - 0.2e1 * t114 * t112 * t44 + 0.4e1 * t60 * t118 * t40 + 0.4e1 * t60 * t118 * t45 + 0.2e1 * t79 * t42 * t122;
	t133 = t132 * t96 * t32;
	t137 = t52 * qJD(1);
	t138 = -qJ(2) - pkin(6) - pkin(3);
	t140 = -qJ(2) - pkin(6) + pkin(3);
	t142 = -0.2e1 * t140 * t12 - 0.2e1 * t16 * t138;
	t146 = t142 * t100 / 0.2e1 + 0.2e1 * t23 * t35;
	t147 = t30 * t146;
	t150 = t32 * t147 - t32 * t98;
	t151 = 0.1e1 / t28;
	t152 = t151 * t150;
	t154 = 0.1e1 / t44;
	t156 = t154 * t38 + 0.1e1;
	t157 = 0.1e1 / t156;
	t158 = t157 * t31 * t23;
	t160 = t142 * pkin(1);
	t164 = -t160 * t57 / 0.2e1 - 0.2e1 * t23 * t21;
	t165 = t30 * t164;
	t168 = -t32 * t122 + t32 * t165;
	t169 = t37 * t168;
	t170 = t23 * t169;
	t171 = t154 * t31;
	t172 = t157 * t171;
	t174 = t158 * t152 - t172 * t170;
	t175 = t174 * t137;
	t176 = t30 * t37;
	t177 = t84 * t176;
	t179 = t56 * pkin(1);
	t180 = t142 * t179;
	t184 = -0.1e1 / t18 / t17;
	t185 = -t184 * t21;
	t195 = 0.2e1 * qJD(2) * t12 + 0.2e1 * t16 * qJD(2) - 0.2e1 * t68 * t138 - 0.2e1 * t140 * t64;
	t206 = qJD(2) * t32;
	t216 = t42 * t98;
	t225 = t79 * t157 * t31;
	t228 = t157 * t31 * qJD(2);
	t230 = qJD(5) * t23;
	t233 = t157 * pkin(2) * t35;
	t237 = t156 ^ 2;
	t238 = 0.1e1 / t237;
	t243 = 0.1e1 / t44 / t28;
	t246 = t107 * t154 * t37 - t79 * t243 * t38;
	t247 = 0.2e1 * t246 * t238 * t31;
	t251 = t184 * t3;
	t275 = t42 * t122;
	t290 = t157 * t154 * pkin(2) * t35;
	t295 = t79 * t157 * t243 * t31;
	t299 = 0.2e1 * t246 * t238 * t171;
	t301 = t158 * t151 * (t32 * t30 * (-t180 * t58 / 0.2e1 - t70 * t142 * t185 / 0.4e1 + t195 * t100 / 0.2e1 - 0.2e1 * t23 * t4 * t103 + 0.2e1 * qJD(2) * t35) - t206 * t39 * t146 + 0.2e1 * t60 * t42 * t147 - t32 * t39 * t107 + 0.2e1 * t206 * t112 * t37 - 0.2e1 * t60 * t216) - t225 * t23 * t154 * t150 + t228 * t152 - 0.2e1 * t233 * t230 * t152 - t247 * t23 * t152 - t172 * t23 * t37 * (t32 * t30 * (t180 * t53 / 0.2e1 + t70 * t160 * t251 / 0.4e1 - t195 * pkin(1) * t57 / 0.2e1 - 0.2e1 * t23 * pkin(1) * t58 - 0.2e1 * qJD(2) * t21) - t206 * t39 * t164 + 0.2e1 * t60 * t42 * t165 - t32 * t39 * t79 + 0.2e1 * t206 * t112 * t28 - 0.2e1 * t60 * t275) - t172 * t23 * t107 * t168 - t172 * qJD(2) * t169 + 0.2e1 * t290 * t230 * t169 + 0.2e1 * t295 * t170 + t299 * t170;
	t302 = t301 * t1;
	t305 = t174 * t1;
	t308 = t37 * t305;
	t311 = qJD(2) * t49 * t32 * t39;
	t313 = t42 * t176;
	t318 = t132 * t96 * t33;
	t326 = t16 * pkin(2) * t35 + t59 * t3 * t12;
	t330 = t3 ^ 2;
	t331 = t330 * t8;
	t334 = -0.2e1 * pkin(2) * t331 + t326 * t100 - t26 * t5 - t20;
	t335 = t30 * t334;
	t339 = 0.2e1 * t90 * t313 + t32 * t335;
	t340 = t151 * t339;
	t344 = 0.2e1 * t326 * pkin(1);
	t350 = pkin(1) * t18 * t4 - t344 * t57 / 0.2e1 - t36 + 0.2e1 * t59 * t3 * t21;
	t351 = t30 * t350;
	t353 = t30 * t28;
	t354 = t42 * t353;
	t357 = t32 * t351 + 0.2e1 * t90 * t354;
	t358 = t37 * t357;
	t359 = t23 * t358;
	t361 = t158 * t340 - t172 * t359;
	t362 = t361 * t137;
	t364 = 0.2e1 * t326 * t179;
	t378 = t68 * pkin(2) * t35 - t6 * qJD(5) * t12 - t16 * t59 * t53 + t59 * t3 * t64;
	t400 = pkin(2) * qJD(2) * t35;
	t405 = qJD(5) * t22 * t331;
	t408 = t59 * t53;
	t475 = t158 * t151 * (t32 * t30 * (t55 - t73 - t364 * t58 / 0.2e1 - t70 * t326 * t185 / 0.2e1 + t378 * t100 - t75 - 0.2e1 * t77 * t5 + 0.4e1 * t4 * qJD(5) * pkin(2) * t3 * t8) - t206 * t39 * t334 + 0.2e1 * t60 * t42 * t335 + 0.2e1 * t90 * t42 * t30 * t107 - 0.2e1 * t400 * t216 + 0.8e1 * t405 * t118 * t176 - 0.2e1 * t408 * t313) - t225 * t23 * t154 * t339 + t228 * t340 - 0.2e1 * t233 * t230 * t340 - t247 * t23 * t340 - t172 * t23 * t37 * (t32 * t30 * (t99 + t71 * t56 * t4 / 0.2e1 + t364 * t53 / 0.2e1 + t70 * t344 * t251 / 0.4e1 - t378 * pkin(1) * t57 + t105 - t106 + 0.2e1 * pkin(2) * t8 * t330 * qJD(5) - 0.2e1 * t6 * qJD(5) * t21) - t206 * t39 * t350 + 0.2e1 * t60 * t42 * t351 + 0.2e1 * t90 * t42 * t30 * t79 - 0.2e1 * t400 * t275 + 0.8e1 * t405 * t118 * t353 - 0.2e1 * t408 * t354) - t172 * t23 * t107 * t357 - t172 * qJD(2) * t358 + 0.2e1 * t290 * t230 * t358 + 0.2e1 * t295 * t359 + t299 * t359;
	t476 = t475 * t1;
	t479 = t361 * t1;
	t482 = t37 * t479;
	t494 = t28 * t1;
	t504 = t174 * t2;
	t506 = t301 * t52;
	t509 = t174 * t52;
	t512 = t37 * t509;
	t520 = t361 * t2;
	t522 = t475 * t52;
	t525 = t361 * t52;
	t528 = t37 * t525;
	t540 = t28 * t174;
	t554 = t28 * t361;
	t568 = t37 * t52;
	t578 = t84 * t353;
	t584 = t28 * t305;
	t597 = t28 * t479;
	t609 = t37 * t1;
	t624 = t28 * t509;
	t637 = t28 * t525;
	t649 = t37 * t174;
	t663 = t37 * t361;
	unknown(1,1) = -t50 * t28 * t2 - t50 * t79 * t52 + t85 * t39 * t82 - 0.2e1 * t91 * t87 * t82 + t133 * t30 * t82 / 0.2e1;
	unknown(1,2) = t177 * t175 - t50 * t37 * t302 - t50 * t107 * t305 + t311 * t308 - 0.2e1 * t91 * t313 * t305 + t318 * t308 / 0.2e1;
	unknown(1,3) = 0.0e0;
	unknown(1,4) = 0.0e0;
	unknown(1,5) = t177 * t362 - t50 * t37 * t476 - t50 * t107 * t479 + t311 * t482 - 0.2e1 * t91 * t313 * t479 + t318 * t482 / 0.2e1;
	unknown(2,1) = -t50 * t28 * t137 + t50 * t79 * t1 - t85 * t39 * t494 + 0.2e1 * t91 * t87 * t494 - t133 * t30 * t494 / 0.2e1;
	unknown(2,2) = -t177 * t504 - t50 * t37 * t506 - t50 * t107 * t509 + t311 * t512 - 0.2e1 * t91 * t313 * t509 + t318 * t512 / 0.2e1;
	unknown(2,3) = 0.0e0;
	unknown(2,4) = 0.0e0;
	unknown(2,5) = -t177 * t520 - t50 * t37 * t522 - t50 * t107 * t525 + t311 * t528 - 0.2e1 * t91 * t313 * t525 + t318 * t528 / 0.2e1;
	unknown(3,1) = 0.0e0;
	unknown(3,2) = t50 * t28 * t301 + t50 * t79 * t174 - t85 * t39 * t540 + 0.2e1 * t91 * t87 * t540 - t133 * t30 * t540 / 0.2e1;
	unknown(3,3) = 0.0e0;
	unknown(3,4) = 0.0e0;
	unknown(3,5) = t50 * t28 * t475 + t50 * t79 * t361 - t85 * t39 * t554 + 0.2e1 * t91 * t87 * t554 - t133 * t30 * t554 / 0.2e1;
	unknown(4,1) = t50 * t37 * t2 + t50 * t107 * t52 - t85 * t39 * t568 + 0.2e1 * t91 * t87 * t568 - t133 * t30 * t568 / 0.2e1;
	unknown(4,2) = t578 * t175 - t50 * t28 * t302 - t50 * t79 * t305 + t311 * t584 - 0.2e1 * t91 * t354 * t305 + t318 * t584 / 0.2e1;
	unknown(4,3) = 0.0e0;
	unknown(4,4) = 0.0e0;
	unknown(4,5) = t578 * t362 - t50 * t28 * t476 - t50 * t79 * t479 + t311 * t597 - 0.2e1 * t91 * t354 * t479 + t318 * t597 / 0.2e1;
	unknown(5,1) = t50 * t37 * t137 - t50 * t107 * t1 + t85 * t39 * t609 - 0.2e1 * t91 * t87 * t609 + t133 * t30 * t609 / 0.2e1;
	unknown(5,2) = -t578 * t504 - t50 * t28 * t506 - t50 * t79 * t509 + t311 * t624 - 0.2e1 * t91 * t354 * t509 + t318 * t624 / 0.2e1;
	unknown(5,3) = 0.0e0;
	unknown(5,4) = 0.0e0;
	unknown(5,5) = -t578 * t520 - t50 * t28 * t522 - t50 * t79 * t525 + t311 * t637 - 0.2e1 * t91 * t354 * t525 + t318 * t637 / 0.2e1;
	unknown(6,1) = 0.0e0;
	unknown(6,2) = -t50 * t37 * t301 - t50 * t107 * t174 + t85 * t39 * t649 - 0.2e1 * t91 * t87 * t649 + t133 * t30 * t649 / 0.2e1;
	unknown(6,3) = 0.0e0;
	unknown(6,4) = 0.0e0;
	unknown(6,5) = -t50 * t37 * t475 - t50 * t107 * t361 + t85 * t39 * t663 - 0.2e1 * t91 * t87 * t663 + t133 * t30 * t663 / 0.2e1;
	unknown(7,1) = -t137;
	unknown(7,2) = 0.0e0;
	unknown(7,3) = 0.0e0;
	unknown(7,4) = 0.0e0;
	unknown(7,5) = 0.0e0;
	unknown(8,1) = t2;
	unknown(8,2) = 0.0e0;
	unknown(8,3) = 0.0e0;
	unknown(8,4) = 0.0e0;
	unknown(8,5) = 0.0e0;
	unknown(9,1) = 0.0e0;
	unknown(9,2) = 0.0e0;
	unknown(9,3) = 0.0e0;
	unknown(9,4) = 0.0e0;
	unknown(9,5) = 0.0e0;
	JRD_rot = unknown;
elseif link_index == 3
	%% Symbolic Calculation
	% From jacobiRD_rot_3_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-04-11 22:25:00
	% EndTime: 2020-04-11 22:25:01
	% DurationCPUTime: 0.96s
	% Computational Cost: add. (72789->212), mult. (75922->591), div. (2692->20), fcn. (19906->8), ass. (0->224)
	unknown=NaN(9,5);
	t1 = cos(qJ(1));
	t2 = t1 * qJD(1);
	t3 = sin(qJ(5));
	t4 = pkin(1) * t3;
	t5 = -t4 + pkin(2);
	t6 = pkin(2) * t4;
	t7 = 0.2e1 * t6;
	t8 = pkin(1) ^ 2;
	t9 = pkin(2) + qJ(2) + pkin(6) + pkin(3);
	t10 = pkin(2) - qJ(2) - pkin(6) - pkin(3);
	t12 = t10 * t9 - t7 + t8;
	t13 = pkin(2) + qJ(2) + pkin(6) - pkin(3);
	t14 = pkin(2) - qJ(2) - pkin(6) + pkin(3);
	t16 = t13 * t14 - t7 + t8;
	t17 = t16 * t12;
	t18 = sqrt(-t17);
	t20 = cos(qJ(5));
	t21 = t20 * pkin(1);
	t22 = pkin(2) ^ 2;
	t23 = qJ(2) + pkin(6);
	t24 = t23 ^ 2;
	t25 = pkin(3) ^ 2;
	t26 = -t7 + t8 + t22 + t24 - t25;
	t27 = t26 * t21;
	t28 = t18 * t5 + t27;
	t30 = 0.1e1 / t23;
	t31 = -t7 + t8 + t22;
	t32 = 0.1e1 / t31;
	t33 = t32 * t30;
	t34 = t28 ^ 2;
	t35 = 0.1e1 / t24;
	t36 = t35 * t34;
	t37 = t31 ^ 2;
	t38 = 0.1e1 / t37;
	t41 = pkin(1) * t18 * t20;
	t43 = t26 * t5 - t41;
	t44 = t43 ^ 2;
	t45 = t35 * t44;
	t47 = t36 * t38 + t38 * t45;
	t48 = sqrt(t47);
	t49 = 0.1e1 / t48;
	t50 = t49 * t33;
	t52 = sin(qJ(1));
	t53 = t20 * qJD(5);
	t54 = t18 * pkin(1);
	t55 = t54 * t53;
	t56 = 0.1e1 / t18;
	t57 = t56 * t5;
	t58 = pkin(1) * pkin(2);
	t59 = t58 * t53;
	t60 = 0.2e1 * t59;
	t63 = qJD(2) * t10 - qJD(2) * t9 - t60;
	t67 = -qJD(2) * t13 + qJD(2) * t14 - t60;
	t69 = -t12 * t67 - t16 * t63;
	t72 = pkin(1) * qJD(5);
	t74 = t26 * t3 * t72;
	t76 = qJD(2) * t23 - t59;
	t77 = 0.2e1 * t76 * t21;
	t78 = -t55 + t69 * t57 / 0.2e1 - t74 + t77;
	t81 = t28 * t52;
	t83 = t49 * t32;
	t84 = qJD(2) * t83;
	t86 = t38 * t30;
	t89 = pkin(2) * t21;
	t90 = t89 * qJD(5) * t49;
	t95 = 0.1e1 / t48 / t47;
	t97 = t35 * t28;
	t102 = 0.1e1 / t24 / t23;
	t104 = qJD(2) * t38;
	t108 = 0.1e1 / t37 / t31;
	t112 = t35 * t43;
	t113 = t3 * qJD(5);
	t114 = t54 * t113;
	t115 = t56 * t20;
	t116 = t69 * pkin(1);
	t118 = t116 * t115 / 0.2e1;
	t120 = t26 * pkin(1) * t53;
	t122 = 0.2e1 * t5 * t76 + t114 - t118 - t120;
	t132 = -0.2e1 * t102 * t104 * t34 - 0.2e1 * t102 * t104 * t44 + 0.4e1 * t108 * t36 * t59 + 0.4e1 * t108 * t45 * t59 + 0.2e1 * t112 * t122 * t38 + 0.2e1 * t38 * t78 * t97;
	t133 = t132 * t95 * t32;
	t137 = t52 * qJD(1);
	t138 = -qJ(2) - pkin(6) - pkin(3);
	t140 = -qJ(2) - pkin(6) + pkin(3);
	t142 = -0.2e1 * t12 * t140 - 0.2e1 * t138 * t16;
	t146 = t142 * t57 / 0.2e1 + 0.2e1 * t23 * t21;
	t147 = t30 * t146;
	t150 = t147 * t32 - t32 * t97;
	t151 = 0.1e1 / t43;
	t152 = t151 * t150;
	t154 = 0.1e1 / t44;
	t156 = t154 * t34 + 0.1e1;
	t157 = 0.1e1 / t156;
	t158 = t157 * t31 * t23;
	t160 = t142 * pkin(1);
	t164 = -t160 * t115 / 0.2e1 + 0.2e1 * t23 * t5;
	t165 = t30 * t164;
	t168 = -t112 * t32 + t165 * t32;
	t169 = t28 * t168;
	t170 = t23 * t169;
	t171 = t154 * t31;
	t172 = t157 * t171;
	t174 = t152 * t158 - t170 * t172;
	t175 = t174 * t137;
	t176 = t30 * t43;
	t177 = t83 * t176;
	t179 = t56 * pkin(1);
	t180 = t142 * t179;
	t184 = -0.1e1 / t18 / t17;
	t185 = t184 * t5;
	t195 = 0.2e1 * qJD(2) * t12 + 0.2e1 * qJD(2) * t16 - 0.2e1 * t138 * t67 - 0.2e1 * t140 * t63;
	t206 = qJD(2) * t32;
	t216 = t38 * t97;
	t225 = t122 * t157 * t31;
	t228 = t157 * t31 * qJD(2);
	t230 = qJD(5) * t23;
	t233 = t157 * pkin(2) * t21;
	t237 = t156 ^ 2;
	t238 = 0.1e1 / t237;
	t243 = 0.1e1 / t44 / t43;
	t246 = -t122 * t243 * t34 + t154 * t28 * t78;
	t247 = 0.2e1 * t246 * t238 * t31;
	t251 = t184 * t20;
	t275 = t38 * t112;
	t290 = t157 * t154 * pkin(2) * t21;
	t295 = t122 * t157 * t243 * t31;
	t299 = 0.2e1 * t246 * t238 * t171;
	t301 = t158 * t151 * (t32 * t30 * (-t180 * t53 / 0.2e1 - t69 * t142 * t185 / 0.4e1 + t195 * t57 / 0.2e1 - 0.2e1 * t23 * t3 * t72 + 0.2e1 * qJD(2) * t21) - t206 * t35 * t146 + 0.2e1 * t59 * t38 * t147 - t32 * t35 * t78 + 0.2e1 * t206 * t102 * t28 - 0.2e1 * t59 * t216) - t225 * t23 * t154 * t150 + t228 * t152 - 0.2e1 * t233 * t230 * t152 - t247 * t23 * t152 - t172 * t23 * t28 * (t32 * t30 * (t180 * t113 / 0.2e1 + t69 * t160 * t251 / 0.4e1 - t195 * pkin(1) * t115 / 0.2e1 - 0.2e1 * t23 * pkin(1) * t53 + 0.2e1 * qJD(2) * t5) - t206 * t35 * t164 + 0.2e1 * t59 * t38 * t165 - t32 * t35 * t122 + 0.2e1 * t206 * t102 * t43 - 0.2e1 * t59 * t275) - t172 * t23 * t78 * t168 - t172 * qJD(2) * t169 + 0.2e1 * t290 * t230 * t169 + 0.2e1 * t295 * t170 + t299 * t170;
	t302 = t301 * t1;
	t305 = t174 * t1;
	t308 = t43 * t305;
	t311 = qJD(2) * t49 * t32 * t35;
	t313 = t38 * t176;
	t318 = t132 * t95 * t33;
	t326 = pkin(2) * t16 * t21 + t12 * t20 * t58;
	t330 = t20 ^ 2;
	t331 = t330 * t8;
	t334 = -0.2e1 * pkin(2) * t331 - t26 * t4 + t326 * t57 - t41;
	t335 = t30 * t334;
	t337 = t30 * t28;
	t338 = t38 * t337;
	t341 = t32 * t335 + 0.2e1 * t338 * t89;
	t342 = t151 * t341;
	t346 = 0.2e1 * t326 * pkin(1);
	t352 = pkin(1) * t18 * t3 - t346 * t115 / 0.2e1 - t27 - 0.2e1 * t58 * t20 * t5;
	t353 = t30 * t352;
	t357 = 0.2e1 * t313 * t89 + t32 * t353;
	t358 = t28 * t357;
	t359 = t23 * t358;
	t361 = t158 * t342 - t172 * t359;
	t362 = t361 * t137;
	t364 = 0.2e1 * t326 * t179;
	t378 = pkin(2) * t21 * t67 - qJD(5) * t12 * t6 - t113 * t16 * t58 + t20 * t58 * t63;
	t400 = pkin(2) * qJD(2) * t21;
	t405 = qJD(5) * t22 * t331;
	t408 = t58 * t113;
	t475 = t158 * t151 * (t32 * t30 * (t114 - t118 - t364 * t53 / 0.2e1 - t69 * t326 * t185 / 0.2e1 + t378 * t57 - t120 - 0.2e1 * t76 * t4 + 0.4e1 * t3 * qJD(5) * pkin(2) * t20 * t8) - t206 * t35 * t334 + 0.2e1 * t59 * t38 * t335 + 0.2e1 * t89 * t38 * t30 * t78 - 0.2e1 * t400 * t216 + 0.8e1 * t405 * t108 * t337 - 0.2e1 * t408 * t338) - t225 * t23 * t154 * t341 + t228 * t342 - 0.2e1 * t233 * t230 * t342 - t247 * t23 * t342 - t172 * t23 * t28 * (t32 * t30 * (t55 + t116 * t56 * t3 / 0.2e1 + t364 * t113 / 0.2e1 + t69 * t346 * t251 / 0.4e1 - t378 * pkin(1) * t115 + t74 - t77 + 0.2e1 * pkin(2) * t8 * t330 * qJD(5) + 0.2e1 * t6 * qJD(5) * t5) - t206 * t35 * t352 + 0.2e1 * t59 * t38 * t353 + 0.2e1 * t89 * t38 * t30 * t122 - 0.2e1 * t400 * t275 + 0.8e1 * t405 * t108 * t176 - 0.2e1 * t408 * t313) - t172 * t23 * t78 * t357 - t172 * qJD(2) * t358 + 0.2e1 * t290 * t230 * t358 + 0.2e1 * t295 * t359 + t299 * t359;
	t476 = t475 * t1;
	t479 = t361 * t1;
	t482 = t43 * t479;
	t494 = t28 * t1;
	t504 = t174 * t2;
	t506 = t301 * t52;
	t509 = t174 * t52;
	t512 = t43 * t509;
	t520 = t361 * t2;
	t522 = t475 * t52;
	t525 = t361 * t52;
	t528 = t43 * t525;
	t540 = t28 * t174;
	t554 = t28 * t361;
	t568 = t43 * t52;
	t578 = t83 * t337;
	t584 = t28 * t305;
	t597 = t28 * t479;
	t609 = t43 * t1;
	t624 = t28 * t509;
	t637 = t28 * t525;
	t649 = t43 * t174;
	t663 = t43 * t361;
	unknown(1,1) = -t50 * t28 * t2 - t50 * t78 * t52 + t84 * t35 * t81 - 0.2e1 * t90 * t86 * t81 + t133 * t30 * t81 / 0.2e1;
	unknown(1,2) = -t177 * t175 + t50 * t43 * t302 + t50 * t122 * t305 - t311 * t308 + 0.2e1 * t90 * t313 * t305 - t318 * t308 / 0.2e1;
	unknown(1,3) = 0.0e0;
	unknown(1,4) = 0.0e0;
	unknown(1,5) = -t177 * t362 + t50 * t43 * t476 + t50 * t122 * t479 - t311 * t482 + 0.2e1 * t90 * t313 * t479 - t318 * t482 / 0.2e1;
	unknown(2,1) = -t50 * t28 * t137 + t50 * t78 * t1 - t84 * t35 * t494 + 0.2e1 * t90 * t86 * t494 - t133 * t30 * t494 / 0.2e1;
	unknown(2,2) = t177 * t504 + t50 * t43 * t506 + t50 * t122 * t509 - t311 * t512 + 0.2e1 * t90 * t313 * t509 - t318 * t512 / 0.2e1;
	unknown(2,3) = 0.0e0;
	unknown(2,4) = 0.0e0;
	unknown(2,5) = t177 * t520 + t50 * t43 * t522 + t50 * t122 * t525 - t311 * t528 + 0.2e1 * t90 * t313 * t525 - t318 * t528 / 0.2e1;
	unknown(3,1) = 0.0e0;
	unknown(3,2) = t50 * t28 * t301 + t50 * t78 * t174 - t84 * t35 * t540 + 0.2e1 * t90 * t86 * t540 - t133 * t30 * t540 / 0.2e1;
	unknown(3,3) = 0.0e0;
	unknown(3,4) = 0.0e0;
	unknown(3,5) = t50 * t28 * t475 + t50 * t78 * t361 - t84 * t35 * t554 + 0.2e1 * t90 * t86 * t554 - t133 * t30 * t554 / 0.2e1;
	unknown(4,1) = t137;
	unknown(4,2) = 0.0e0;
	unknown(4,3) = 0.0e0;
	unknown(4,4) = 0.0e0;
	unknown(4,5) = 0.0e0;
	unknown(5,1) = -t2;
	unknown(5,2) = 0.0e0;
	unknown(5,3) = 0.0e0;
	unknown(5,4) = 0.0e0;
	unknown(5,5) = 0.0e0;
	unknown(6,1) = 0.0e0;
	unknown(6,2) = 0.0e0;
	unknown(6,3) = 0.0e0;
	unknown(6,4) = 0.0e0;
	unknown(6,5) = 0.0e0;
	unknown(7,1) = -t50 * t43 * t2 - t50 * t122 * t52 + t84 * t35 * t568 - 0.2e1 * t90 * t86 * t568 + t133 * t30 * t568 / 0.2e1;
	unknown(7,2) = t578 * t175 - t50 * t28 * t302 - t50 * t78 * t305 + t311 * t584 - 0.2e1 * t90 * t338 * t305 + t318 * t584 / 0.2e1;
	unknown(7,3) = 0.0e0;
	unknown(7,4) = 0.0e0;
	unknown(7,5) = t578 * t362 - t50 * t28 * t476 - t50 * t78 * t479 + t311 * t597 - 0.2e1 * t90 * t338 * t479 + t318 * t597 / 0.2e1;
	unknown(8,1) = -t50 * t43 * t137 + t50 * t122 * t1 - t84 * t35 * t609 + 0.2e1 * t90 * t86 * t609 - t133 * t30 * t609 / 0.2e1;
	unknown(8,2) = -t578 * t504 - t50 * t28 * t506 - t50 * t78 * t509 + t311 * t624 - 0.2e1 * t90 * t338 * t509 + t318 * t624 / 0.2e1;
	unknown(8,3) = 0.0e0;
	unknown(8,4) = 0.0e0;
	unknown(8,5) = -t578 * t520 - t50 * t28 * t522 - t50 * t78 * t525 + t311 * t637 - 0.2e1 * t90 * t338 * t525 + t318 * t637 / 0.2e1;
	unknown(9,1) = 0.0e0;
	unknown(9,2) = t50 * t43 * t301 + t50 * t122 * t174 - t84 * t35 * t649 + 0.2e1 * t90 * t86 * t649 - t133 * t30 * t649 / 0.2e1;
	unknown(9,3) = 0.0e0;
	unknown(9,4) = 0.0e0;
	unknown(9,5) = t50 * t43 * t475 + t50 * t122 * t361 - t84 * t35 * t663 + 0.2e1 * t90 * t86 * t663 - t133 * t30 * t663 / 0.2e1;
	JRD_rot = unknown;
elseif link_index == 4
	%% Symbolic Calculation
	% From jacobiRD_rot_4_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-04-11 22:24:56
	% EndTime: 2020-04-11 22:25:00
	% DurationCPUTime: 3.44s
	% Computational Cost: add. (250397->587), mult. (258830->1480), div. (13420->31), fcn. (63950->10), ass. (0->491)
	unknown=NaN(9,5);
	t1 = cos(qJ(1));
	t2 = t1 * qJD(1);
	t3 = sin(qJ(5));
	t4 = pkin(1) * t3;
	t5 = -t4 + pkin(2);
	t6 = pkin(2) * t4;
	t7 = 0.2e1 * t6;
	t8 = pkin(1) ^ 2;
	t9 = pkin(2) + qJ(2) + pkin(6) + pkin(3);
	t10 = pkin(2) - qJ(2) - pkin(6) - pkin(3);
	t12 = t10 * t9 - t7 + t8;
	t13 = pkin(2) + qJ(2) + pkin(6) - pkin(3);
	t14 = pkin(2) - qJ(2) - pkin(6) + pkin(3);
	t16 = t14 * t13 - t7 + t8;
	t17 = t16 * t12;
	t18 = sqrt(-t17);
	t20 = cos(qJ(5));
	t21 = t20 * pkin(1);
	t22 = pkin(2) ^ 2;
	t23 = qJ(2) + pkin(6);
	t24 = t23 ^ 2;
	t25 = pkin(3) ^ 2;
	t26 = -t7 + t8 + t22 + t24 - t25;
	t27 = t26 * t21;
	t28 = t18 * t5 + t27;
	t29 = 0.1e1 / t24;
	t30 = t29 * t28;
	t31 = t30 * t2;
	t32 = -t7 + t8 + t22;
	t33 = 0.1e1 / t32;
	t34 = t28 ^ 2;
	t35 = t29 * t34;
	t36 = t32 ^ 2;
	t37 = 0.1e1 / t36;
	t40 = pkin(1) * t18 * t20;
	t42 = t26 * t5 - t40;
	t43 = t42 ^ 2;
	t44 = t29 * t43;
	t46 = t37 * t35 + t37 * t44;
	t47 = sqrt(t46);
	t48 = 0.1e1 / t47;
	t49 = t48 * t33;
	t50 = 0.1e1 / pkin(3);
	t52 = 0.1e1 / t25;
	t53 = t52 * t29;
	t55 = t7 - t8 - t22 + t24 + t25;
	t56 = t55 ^ 2;
	t59 = t52 * t29 * t56 - t17 * t53;
	t60 = sqrt(t59);
	t61 = 0.1e1 / t60;
	t62 = t61 * t18 * t50;
	t63 = t62 * t49;
	t65 = sin(qJ(1));
	t66 = t20 * qJD(5);
	t67 = t18 * pkin(1);
	t68 = t67 * t66;
	t69 = 0.1e1 / t18;
	t70 = t69 * t5;
	t71 = pkin(1) * pkin(2);
	t72 = t71 * t66;
	t73 = 0.2e1 * t72;
	t76 = t10 * qJD(2) - qJD(2) * t9 - t73;
	t77 = t16 * t76;
	t80 = -qJD(2) * t13 + t14 * qJD(2) - t73;
	t81 = t80 * t12;
	t82 = -t77 - t81;
	t85 = pkin(1) * qJD(5);
	t87 = t26 * t3 * t85;
	t88 = qJD(2) * t23;
	t89 = -t72 + t88;
	t90 = 0.2e1 * t89 * t21;
	t91 = -t68 + t82 * t70 / 0.2e1 - t87 + t90;
	t93 = t33 * t29;
	t94 = t93 * t91 * t65;
	t95 = t50 * t48;
	t96 = t61 * t18;
	t97 = t96 * t95;
	t99 = t28 * t65;
	t101 = 0.1e1 / t24 / t23;
	t102 = t33 * t101;
	t103 = t102 * t99;
	t104 = qJD(2) * t96;
	t105 = t104 * t95;
	t108 = t29 * t99;
	t109 = t48 * t37;
	t110 = t50 * t109;
	t113 = pkin(2) * t21;
	t114 = t113 * qJD(5) * t96;
	t117 = t93 * t99;
	t119 = 0.1e1 / t47 / t46;
	t125 = qJD(2) * t37;
	t129 = 0.1e1 / t36 / t32;
	t133 = t29 * t42;
	t134 = t3 * qJD(5);
	t135 = t67 * t134;
	t136 = t69 * t20;
	t137 = t82 * pkin(1);
	t139 = t137 * t136 / 0.2e1;
	t141 = t26 * pkin(1) * t66;
	t143 = 0.2e1 * t89 * t5 + t135 - t139 - t141;
	t153 = -0.2e1 * t125 * t101 * t34 - 0.2e1 * t125 * t101 * t43 + 0.4e1 * t72 * t129 * t35 + 0.4e1 * t72 * t129 * t44 + 0.2e1 * t143 * t37 * t133 + 0.2e1 * t91 * t37 * t30;
	t154 = t153 * t96;
	t155 = t154 * t50 * t119;
	t159 = t82 * t61 * t69;
	t160 = t159 * t95;
	t164 = 0.1e1 / t60 / t59;
	t172 = t29 * t55;
	t173 = t72 + t88;
	t181 = 0.2e1 * qJD(2) * t17 * t52 * t101 - 0.2e1 * qJD(2) * t52 * t101 * t56 + 0.4e1 * t173 * t52 * t172 - t77 * t53 - t81 * t53;
	t182 = t181 * t164 * t18;
	t183 = t182 * t95;
	t186 = t133 * t2;
	t188 = t61 * t50 * t55;
	t189 = t188 * t49;
	t192 = t93 * t143 * t65;
	t193 = t55 * t48;
	t194 = t61 * t50;
	t195 = t194 * t193;
	t197 = t42 * t65;
	t198 = t102 * t197;
	t199 = qJD(2) * t194;
	t200 = t199 * t193;
	t203 = t29 * t197;
	t204 = t55 * t109;
	t207 = t113 * qJD(5) * t194;
	t210 = t93 * t197;
	t212 = t153 * t194;
	t213 = t212 * t55 * t119;
	t217 = 0.2e1 * t194 * t173 * t48;
	t220 = t181 * t164 * t50;
	t221 = t220 * t193;
	t224 = t63 * t31 + t97 * t94 - 0.2e1 * t105 * t103 + 0.2e1 * t114 * t110 * t108 - t155 * t117 / 0.2e1 + t160 * t117 / 0.2e1 - t183 * t117 / 0.2e1 - t189 * t186 - t195 * t192 + 0.2e1 * t200 * t198 - 0.2e1 * t207 * t204 * t203 + t213 * t210 / 0.2e1 - t217 * t210 + t221 * t210 / 0.2e1;
	t225 = -qJ(2) - pkin(6) - pkin(3);
	t227 = -qJ(2) - pkin(6) + pkin(3);
	t229 = -0.2e1 * t227 * t12 - 0.2e1 * t16 * t225;
	t233 = t229 * t70 / 0.2e1 + 0.2e1 * t23 * t21;
	t234 = 0.1e1 / t23;
	t235 = t234 * t233;
	t237 = t33 * t30;
	t238 = t33 * t235 - t237;
	t239 = 0.1e1 / t42;
	t240 = t239 * t238;
	t242 = 0.1e1 / t43;
	t244 = t242 * t34 + 0.1e1;
	t245 = 0.1e1 / t244;
	t246 = t245 * t32 * t23;
	t248 = t229 * pkin(1);
	t252 = -t248 * t136 / 0.2e1 + 0.2e1 * t23 * t5;
	t253 = t234 * t252;
	t255 = t33 * t133;
	t256 = t33 * t253 - t255;
	t257 = t28 * t256;
	t258 = t23 * t257;
	t259 = t242 * t32;
	t260 = t245 * t259;
	t262 = t246 * t240 - t260 * t258;
	t263 = t262 * t1;
	t264 = t29 * t143;
	t265 = t264 * t263;
	t268 = t93 * t91 * t1;
	t269 = t50 * t29;
	t271 = t50 * t234;
	t272 = t229 * t69;
	t275 = -t18 * t269 + t272 * t271 / 0.2e1;
	t276 = 0.1e1 / t55;
	t277 = t276 * t275;
	t279 = 0.1e1 / t56;
	t281 = -t279 * t17 + 0.1e1;
	t282 = 0.1e1 / t281;
	t283 = t282 * pkin(3) * t23;
	t288 = 0.2e1 * t50 * t234 * t23 - t50 * t172;
	t290 = pkin(3) * t23 * t288;
	t291 = t279 * t18;
	t292 = t282 * t291;
	t294 = t283 * t277 - t292 * t290;
	t295 = t294 * t48;
	t296 = t188 * t295;
	t298 = t28 * t1;
	t299 = t93 * t298;
	t311 = -0.1e1 / t18 / t17;
	t322 = 0.2e1 * qJD(2) * t12 + 0.2e1 * t16 * qJD(2) - 0.2e1 * t80 * t225 - 0.2e1 * t227 * t76;
	t338 = t281 ^ 2;
	t339 = 0.1e1 / t338;
	t344 = 0.1e1 / t56 / t55;
	t348 = 0.4e1 * t173 * t344 * t17 - t279 * t77 - t279 * t81;
	t355 = qJD(2) * t50;
	t371 = t82 * t282 * t279 * t69;
	t376 = 0.2e1 * t173 * t282 * t344 * t18;
	t380 = t348 * t339 * t291;
	t382 = t283 * t276 * (0.2e1 * qJD(2) * t18 * t50 * t101 - t82 * t69 * t269 / 0.2e1 - qJD(2) * t272 * t269 / 0.2e1 - t82 * t229 * t311 * t271 / 0.4e1 + t322 * t69 * t271 / 0.2e1) - 0.2e1 * t173 * t282 * pkin(3) * t23 * t279 * t275 + t282 * pkin(3) * qJD(2) * t277 - t348 * t339 * pkin(3) * t23 * t277 - t292 * pkin(3) * t23 * (0.2e1 * t50 * t234 * qJD(2) + 0.2e1 * t355 * t101 * t55 - 0.2e1 * t50 * t29 * t173 - 0.2e1 * t355 * t29 * t23) - t292 * pkin(3) * qJD(2) * t288 - t371 * t290 / 0.2e1 + 0.2e1 * t376 * t290 + t380 * t290;
	t383 = t382 * t48;
	t384 = t188 * t383;
	t387 = 0.2e1 * t61 * t50 * t173;
	t388 = t387 * t295;
	t390 = t69 * pkin(1);
	t391 = t229 * t390;
	t394 = t311 * t5;
	t408 = qJD(2) * t33;
	t413 = t29 * t91;
	t415 = t101 * t28;
	t418 = t37 * t30;
	t427 = t143 * t245 * t32;
	t430 = t245 * t32 * qJD(2);
	t432 = qJD(5) * t23;
	t435 = t245 * pkin(2) * t21;
	t439 = t244 ^ 2;
	t440 = 0.1e1 / t439;
	t445 = 0.1e1 / t43 / t42;
	t448 = -t143 * t445 * t34 + t91 * t242 * t28;
	t449 = 0.2e1 * t448 * t440 * t32;
	t453 = t311 * t20;
	t473 = t101 * t42;
	t476 = t37 * t133;
	t491 = t245 * t242 * pkin(2) * t21;
	t496 = t143 * t245 * t445 * t32;
	t500 = 0.2e1 * t448 * t440 * t259;
	t502 = t246 * t239 * (t33 * t234 * (-t391 * t66 / 0.2e1 - t82 * t229 * t394 / 0.4e1 + t322 * t70 / 0.2e1 - 0.2e1 * t23 * t3 * t85 + 0.2e1 * qJD(2) * t21) - t408 * t29 * t233 + 0.2e1 * t72 * t37 * t235 - t33 * t413 + 0.2e1 * t408 * t415 - 0.2e1 * t72 * t418) - t427 * t23 * t242 * t238 + t430 * t240 - 0.2e1 * t435 * t432 * t240 - t449 * t23 * t240 - t260 * t23 * t28 * (t33 * t234 * (t391 * t134 / 0.2e1 + t82 * t248 * t453 / 0.4e1 - t322 * pkin(1) * t136 / 0.2e1 - 0.2e1 * t23 * pkin(1) * t66 + 0.2e1 * qJD(2) * t5) - t408 * t29 * t252 + 0.2e1 * t72 * t37 * t253 - t33 * t264 + 0.2e1 * t408 * t473 - 0.2e1 * t72 * t476) - t260 * t23 * t91 * t256 - t260 * qJD(2) * t257 + 0.2e1 * t491 * t432 * t257 + 0.2e1 * t496 * t258 + t500 * t258;
	t503 = t502 * t1;
	t504 = t30 * t503;
	t506 = t413 * t263;
	t509 = t387 * t49;
	t512 = t93 * t143 * t1;
	t513 = t62 * t295;
	t515 = t42 * t1;
	t516 = t93 * t515;
	t517 = t62 * t383;
	t519 = t133 * t503;
	t521 = t48 * t93;
	t522 = t521 * t298;
	t523 = t55 * t294;
	t524 = t220 * t523;
	t527 = t237 * t263;
	t532 = t119 * t93;
	t533 = t532 * t515;
	t534 = t50 * t294;
	t535 = t154 * t534;
	t538 = t521 * t515;
	t539 = t159 * t534;
	t542 = t29 * t298;
	t543 = t294 * t109;
	t544 = t543 * t542;
	t545 = t72 * t188;
	t548 = -t63 * t265 - t296 * t268 - t384 * t299 - t388 * t299 - t189 * t504 - t189 * t506 - t509 * t30 * t263 - t513 * t512 - t517 * t516 - t63 * t519 + t524 * t522 / 0.2e1 + t213 * t527 / 0.2e1 + t221 * t527 / 0.2e1 + t535 * t533 / 0.2e1 - t539 * t538 / 0.2e1 - 0.2e1 * t545 * t544;
	t551 = t48 * t37 * t29;
	t552 = t551 * t28 * t263;
	t555 = t29 * t515;
	t556 = t543 * t555;
	t557 = t72 * t62;
	t561 = t551 * t42 * t263;
	t564 = t65 * qJD(1);
	t565 = t28 * t262;
	t566 = t29 * t565;
	t567 = t566 * t564;
	t569 = t33 * t473;
	t570 = t569 * t263;
	t573 = t48 * t102;
	t574 = t573 * t298;
	t575 = t199 * t523;
	t578 = t33 * t415;
	t579 = t578 * t263;
	t582 = t573 * t515;
	t583 = t104 * t534;
	t586 = t182 * t534;
	t589 = t255 * t263;
	t596 = t532 * t298;
	t597 = t212 * t523;
	t600 = t255 * t564;
	t602 = t42 * t262;
	t603 = t29 * t602;
	t604 = t603 * t564;
	t606 = t237 * t564;
	t608 = -0.2e1 * t545 * t552 - 0.2e1 * t557 * t556 - 0.2e1 * t557 * t561 + t189 * t567 + 0.2e1 * t105 * t570 + 0.2e1 * t575 * t574 + 0.2e1 * t200 * t579 + 0.2e1 * t583 * t582 + t586 * t538 / 0.2e1 + t155 * t589 / 0.2e1 - t160 * t589 / 0.2e1 + t183 * t589 / 0.2e1 + t597 * t596 / 0.2e1 + t513 * t600 + t63 * t604 + t296 * t606;
	t614 = t16 * pkin(2) * t21 + t71 * t20 * t12;
	t615 = 0.2e1 * t614 * t390;
	t629 = t80 * pkin(2) * t21 - t6 * qJD(5) * t12 - t16 * t71 * t134 + t71 * t20 * t76;
	t644 = t20 ^ 2;
	t645 = t644 * t8;
	t648 = -0.2e1 * pkin(2) * t645 - t26 * t4 + t614 * t70 - t40;
	t651 = t234 * t648;
	t660 = pkin(2) * qJD(2) * t21;
	t663 = t234 * t28;
	t666 = qJD(5) * t22 * t645;
	t669 = t37 * t663;
	t670 = t71 * t134;
	t679 = 0.2e1 * t113 * t669 + t33 * t651;
	t683 = t239 * t679;
	t695 = 0.2e1 * t614 * pkin(1);
	t719 = pkin(1) * t18 * t3 - t695 * t136 / 0.2e1 - t27 - 0.2e1 * t71 * t20 * t5;
	t722 = t234 * t719;
	t732 = t234 * t42;
	t736 = t37 * t732;
	t746 = 0.2e1 * t113 * t736 + t33 * t722;
	t750 = t28 * t746;
	t756 = t23 * t750;
	t760 = t246 * t239 * (t33 * t234 * (t135 - t139 - t615 * t66 / 0.2e1 - t82 * t614 * t394 / 0.2e1 + t629 * t70 - t141 - 0.2e1 * t89 * t4 + 0.4e1 * t3 * qJD(5) * pkin(2) * t20 * t8) - t408 * t29 * t648 + 0.2e1 * t72 * t37 * t651 + 0.2e1 * t113 * t37 * t234 * t91 - 0.2e1 * t660 * t418 + 0.8e1 * t666 * t129 * t663 - 0.2e1 * t670 * t669) - t427 * t23 * t242 * t679 + t430 * t683 - 0.2e1 * t435 * t432 * t683 - t449 * t23 * t683 - t260 * t23 * t28 * (t33 * t234 * (t68 + t137 * t69 * t3 / 0.2e1 + t615 * t134 / 0.2e1 + t82 * t695 * t453 / 0.4e1 - t629 * pkin(1) * t136 + t87 - t90 + 0.2e1 * pkin(2) * t8 * t644 * qJD(5) + 0.2e1 * t6 * qJD(5) * t5) - t408 * t29 * t719 + 0.2e1 * t72 * t37 * t722 + 0.2e1 * t113 * t37 * t234 * t143 - 0.2e1 * t660 * t476 + 0.8e1 * t666 * t129 * t732 - 0.2e1 * t670 * t736) - t260 * t23 * t91 * t746 - t260 * qJD(2) * t750 + 0.2e1 * t491 * t432 * t750 + 0.2e1 * t496 * t756 + t500 * t756;
	t761 = t760 * t1;
	t762 = t133 * t761;
	t766 = t246 * t683 - t260 * t756;
	t767 = t766 * t1;
	t768 = t264 * t767;
	t770 = 0.2e1 * t614 * t69;
	t771 = t282 * t276;
	t776 = t771 * t770 / 0.2e1 - 0.2e1 * t292 * t113;
	t777 = t776 * t48;
	t778 = t188 * t777;
	t787 = t282 * t279;
	t805 = -t82 * t771 * t614 * t311 / 0.2e1 + t771 * t629 * t69 - t173 * t787 * t770 - t348 * t339 * t276 * t770 / 0.2e1 + 0.2e1 * t787 * t18 * pkin(2) * pkin(1) * t134 - t371 * t113 + 0.4e1 * t376 * t113 + 0.2e1 * t380 * t113;
	t806 = t805 * t48;
	t807 = t188 * t806;
	t809 = t387 * t777;
	t811 = t30 * t761;
	t813 = t413 * t767;
	t817 = t62 * t777;
	t819 = t62 * t806;
	t821 = t569 * t767;
	t824 = t55 * t776;
	t825 = t199 * t824;
	t828 = t578 * t767;
	t831 = t50 * t776;
	t832 = t104 * t831;
	t835 = t255 * t767;
	t840 = -t63 * t762 - t63 * t768 - t778 * t268 - t807 * t299 - t809 * t299 - t189 * t811 - t189 * t813 - t509 * t30 * t767 - t817 * t512 - t819 * t516 + 0.2e1 * t105 * t821 + 0.2e1 * t825 * t574 + 0.2e1 * t200 * t828 + 0.2e1 * t832 * t582 + t155 * t835 / 0.2e1 - t160 * t835 / 0.2e1;
	t843 = t212 * t824;
	t846 = t220 * t824;
	t849 = t237 * t767;
	t854 = t154 * t831;
	t857 = t159 * t831;
	t860 = t182 * t831;
	t863 = t42 * t766;
	t864 = t29 * t863;
	t865 = t864 * t564;
	t868 = t28 * t766;
	t869 = t29 * t868;
	t870 = t869 * t564;
	t873 = t776 * t109;
	t874 = t873 * t542;
	t878 = t551 * t28 * t767;
	t881 = t873 * t555;
	t885 = t551 * t42 * t767;
	t888 = t183 * t835 / 0.2e1 + t843 * t596 / 0.2e1 + t846 * t522 / 0.2e1 + t213 * t849 / 0.2e1 + t221 * t849 / 0.2e1 + t854 * t533 / 0.2e1 - t857 * t538 / 0.2e1 + t860 * t538 / 0.2e1 + t63 * t865 + t778 * t606 + t189 * t870 + t817 * t600 - 0.2e1 * t545 * t874 - 0.2e1 * t545 * t878 - 0.2e1 * t557 * t881 - 0.2e1 * t557 * t885;
	t890 = t30 * t564;
	t893 = t102 * t298;
	t905 = t133 * t564;
	t908 = t102 * t515;
	t919 = t63 * t890 - t97 * t268 + 0.2e1 * t105 * t893 - 0.2e1 * t114 * t110 * t542 + t155 * t299 / 0.2e1 - t160 * t299 / 0.2e1 + t183 * t299 / 0.2e1 - t189 * t905 + t195 * t512 - 0.2e1 * t200 * t908 + 0.2e1 * t207 * t204 * t555 - t213 * t516 / 0.2e1 + t217 * t516 - t221 * t516 / 0.2e1;
	t920 = t262 * t65;
	t921 = t264 * t920;
	t926 = t502 * t65;
	t927 = t30 * t926;
	t929 = t413 * t920;
	t935 = t133 * t926;
	t937 = t566 * t2;
	t939 = t255 * t2;
	t941 = t603 * t2;
	t943 = t237 * t2;
	t945 = t573 * t197;
	t948 = t569 * t920;
	t951 = -t509 * t30 * t920 + 0.2e1 * t105 * t948 - t384 * t117 - t388 * t117 - t189 * t927 - t189 * t929 - t189 * t937 - t513 * t192 - t517 * t210 - t296 * t94 - t296 * t943 - t513 * t939 + 0.2e1 * t583 * t945 - t63 * t921 - t63 * t935 - t63 * t941;
	t952 = t532 * t99;
	t955 = t521 * t99;
	t958 = t237 * t920;
	t963 = t532 * t197;
	t966 = t521 * t197;
	t971 = t255 * t920;
	t978 = t573 * t99;
	t981 = t578 * t920;
	t984 = t543 * t108;
	t988 = t551 * t28 * t920;
	t991 = t543 * t203;
	t995 = t551 * t42 * t920;
	t998 = t597 * t952 / 0.2e1 + t524 * t955 / 0.2e1 + t213 * t958 / 0.2e1 + t221 * t958 / 0.2e1 + t535 * t963 / 0.2e1 - t539 * t966 / 0.2e1 + t586 * t966 / 0.2e1 + t155 * t971 / 0.2e1 - t160 * t971 / 0.2e1 + t183 * t971 / 0.2e1 + 0.2e1 * t575 * t978 + 0.2e1 * t200 * t981 - 0.2e1 * t545 * t984 - 0.2e1 * t545 * t988 - 0.2e1 * t557 * t991 - 0.2e1 * t557 * t995;
	t1001 = t760 * t65;
	t1002 = t30 * t1001;
	t1004 = t766 * t65;
	t1005 = t413 * t1004;
	t1011 = t133 * t1001;
	t1013 = t264 * t1004;
	t1017 = t237 * t1004;
	t1026 = t255 * t1004;
	t1031 = -t809 * t117 - t189 * t1002 - t189 * t1005 - t509 * t30 * t1004 - t817 * t192 - t819 * t210 - t63 * t1011 - t63 * t1013 - t778 * t94 - t807 * t117 + t221 * t1017 / 0.2e1 + t854 * t963 / 0.2e1 - t857 * t966 / 0.2e1 + t860 * t966 / 0.2e1 + t155 * t1026 / 0.2e1 - t160 * t1026 / 0.2e1;
	t1036 = t864 * t2;
	t1039 = t869 * t2;
	t1042 = t569 * t1004;
	t1047 = t578 * t1004;
	t1056 = t873 * t203;
	t1060 = t551 * t42 * t1004;
	t1063 = t873 * t108;
	t1067 = t551 * t28 * t1004;
	t1070 = t183 * t1026 / 0.2e1 + t843 * t952 / 0.2e1 - t63 * t1036 - t778 * t943 - t189 * t1039 - t817 * t939 + 0.2e1 * t105 * t1042 + 0.2e1 * t825 * t978 + 0.2e1 * t200 * t1047 + 0.2e1 * t832 * t945 + t846 * t955 / 0.2e1 + t213 * t1017 / 0.2e1 - 0.2e1 * t557 * t1056 - 0.2e1 * t557 * t1060 - 0.2e1 * t545 * t1063 - 0.2e1 * t545 * t1067;
	t1072 = t50 * t295;
	t1076 = t93 * t602;
	t1079 = t119 * t33;
	t1080 = t1079 * t30;
	t1083 = t49 * t30;
	t1088 = t49 * t473;
	t1091 = t102 * t602;
	t1094 = t49 * t415;
	t1097 = t93 * t565;
	t1104 = t1079 * t133;
	t1107 = t49 * t133;
	t1112 = -0.2e1 * t114 * t1072 * t418 - t221 * t1076 / 0.2e1 + t535 * t1080 / 0.2e1 - t539 * t1083 / 0.2e1 + t586 * t1083 / 0.2e1 - 0.2e1 * t575 * t1088 - 0.2e1 * t200 * t1091 + 0.2e1 * t583 * t1094 + t155 * t1097 / 0.2e1 - t160 * t1097 / 0.2e1 + t183 * t1097 / 0.2e1 - t597 * t1104 / 0.2e1 - t524 * t1107 / 0.2e1 - t213 * t1076 / 0.2e1;
	t1113 = t102 * t565;
	t1117 = t93 * t143 * t262;
	t1120 = t49 * t413;
	t1121 = t96 * t534;
	t1124 = t96 * t50 * t382;
	t1127 = t93 * t42 * t502;
	t1130 = t93 * t28 * t502;
	t1133 = t93 * t91 * t262;
	t1135 = t49 * t264;
	t1136 = t194 * t523;
	t1139 = t194 * t55 * t382;
	t1142 = 0.2e1 * t194 * t173 * t294;
	t1147 = t55 * t295;
	t1154 = -0.2e1 * t114 * t110 * t566 + 0.2e1 * t207 * t1147 * t476 + 0.2e1 * t207 * t204 * t603 + 0.2e1 * t105 * t1113 + t217 * t1076 - t1124 * t1083 + t1139 * t1107 + t1142 * t1107 + t195 * t1117 - t1121 * t1120 + t195 * t1127 - t97 * t1130 - t97 * t1133 + t1136 * t1135;
	t1156 = t93 * t868;
	t1165 = t93 * t863;
	t1176 = t102 * t868;
	t1181 = t102 * t863;
	t1188 = -t160 * t1156 / 0.2e1 + t183 * t1156 / 0.2e1 - t843 * t1104 / 0.2e1 - t846 * t1107 / 0.2e1 - t213 * t1165 / 0.2e1 - t221 * t1165 / 0.2e1 + t854 * t1080 / 0.2e1 - t857 * t1083 / 0.2e1 + t860 * t1083 / 0.2e1 + 0.2e1 * t105 * t1176 - 0.2e1 * t825 * t1088 - 0.2e1 * t200 * t1181 + 0.2e1 * t832 * t1094 + t155 * t1156 / 0.2e1;
	t1189 = t96 * t831;
	t1192 = t96 * t50 * t805;
	t1195 = t93 * t28 * t760;
	t1198 = t93 * t91 * t766;
	t1200 = t194 * t824;
	t1203 = t194 * t55 * t805;
	t1206 = 0.2e1 * t194 * t173 * t776;
	t1209 = t93 * t42 * t760;
	t1212 = t93 * t143 * t766;
	t1218 = t55 * t777;
	t1225 = t50 * t777;
	t1229 = -0.2e1 * t114 * t110 * t869 - 0.2e1 * t114 * t1225 * t418 + 0.2e1 * t207 * t1218 * t476 + 0.2e1 * t207 * t204 * t864 - t1192 * t1083 + t1203 * t1107 + t1206 * t1107 - t1189 * t1120 + t1200 * t1135 + t217 * t1165 - t97 * t1195 - t97 * t1198 + t195 * t1209 + t195 * t1212;
	t1256 = t189 * t31 + t195 * t94 - 0.2e1 * t200 * t103 + 0.2e1 * t207 * t204 * t108 - t213 * t117 / 0.2e1 + t217 * t117 - t221 * t117 / 0.2e1 + t63 * t186 + t97 * t192 - 0.2e1 * t105 * t198 + 0.2e1 * t114 * t110 * t203 - t155 * t210 / 0.2e1 + t160 * t210 / 0.2e1 - t183 * t210 / 0.2e1;
	t1279 = -t509 * t133 * t263 - t189 * t265 - t189 * t519 + t513 * t268 - t296 * t512 + t517 * t299 - t384 * t516 - t388 * t516 + t63 * t504 + t63 * t506 - t513 * t606 + 0.2e1 * t557 * t544 - 0.2e1 * t545 * t556 - 0.2e1 * t545 * t561 + 0.2e1 * t557 * t552 - 0.2e1 * t583 * t574;
	t1309 = -t63 * t567 + t296 * t600 + t189 * t604 - 0.2e1 * t105 * t579 + t524 * t538 / 0.2e1 + t213 * t589 / 0.2e1 + t221 * t589 / 0.2e1 - t535 * t596 / 0.2e1 + t539 * t522 / 0.2e1 - t586 * t522 / 0.2e1 + 0.2e1 * t575 * t582 + 0.2e1 * t200 * t570 - t155 * t527 / 0.2e1 + t160 * t527 / 0.2e1 - t183 * t527 / 0.2e1 + t597 * t533 / 0.2e1;
	t1334 = -t189 * t762 - t189 * t768 - t509 * t133 * t767 + t817 * t268 + t819 * t299 + t63 * t811 + t63 * t813 - t778 * t512 - t807 * t516 - t809 * t516 + t213 * t835 / 0.2e1 + t221 * t835 / 0.2e1 - t854 * t596 / 0.2e1 + t857 * t522 / 0.2e1 - t860 * t522 / 0.2e1 - 0.2e1 * t545 * t881;
	t1363 = -0.2e1 * t545 * t885 + 0.2e1 * t557 * t874 + 0.2e1 * t557 * t878 + t189 * t865 - t817 * t606 - t63 * t870 + t778 * t600 + 0.2e1 * t200 * t821 - 0.2e1 * t832 * t574 - 0.2e1 * t105 * t828 + 0.2e1 * t825 * t582 - t155 * t849 / 0.2e1 + t160 * t849 / 0.2e1 - t183 * t849 / 0.2e1 + t843 * t533 / 0.2e1 + t846 * t538 / 0.2e1;
	t1390 = t189 * t890 - t195 * t268 + 0.2e1 * t200 * t893 - 0.2e1 * t207 * t204 * t542 + t213 * t299 / 0.2e1 - t217 * t299 + t221 * t299 / 0.2e1 + t63 * t905 - t97 * t512 + 0.2e1 * t105 * t908 - 0.2e1 * t114 * t110 * t555 + t155 * t516 / 0.2e1 - t160 * t516 / 0.2e1 + t183 * t516 / 0.2e1;
	t1418 = -t296 * t192 - t384 * t210 - t388 * t210 - 0.2e1 * t545 * t995 + 0.2e1 * t557 * t984 + 0.2e1 * t557 * t988 - 0.2e1 * t545 * t991 - t189 * t935 - t189 * t921 - t509 * t133 * t920 + 0.2e1 * t575 * t945 + 0.2e1 * t200 * t948 + t213 * t971 / 0.2e1 + t221 * t971 / 0.2e1 - t535 * t952 / 0.2e1 + t539 * t955 / 0.2e1;
	t1443 = -t586 * t955 / 0.2e1 - t155 * t958 / 0.2e1 + t160 * t958 / 0.2e1 - t183 * t958 / 0.2e1 + t597 * t963 / 0.2e1 + t524 * t966 / 0.2e1 + t513 * t943 + t63 * t937 - t296 * t939 - t189 * t941 - 0.2e1 * t583 * t978 - 0.2e1 * t105 * t981 + t513 * t94 + t517 * t117 + t63 * t927 + t63 * t929;
	t1468 = -t189 * t1011 - t189 * t1013 - t509 * t133 * t1004 + t817 * t94 + t819 * t117 + t63 * t1002 + t63 * t1005 - t778 * t192 - t807 * t210 - t809 * t210 + 0.2e1 * t557 * t1063 + 0.2e1 * t557 * t1067 - 0.2e1 * t545 * t1056 - 0.2e1 * t545 * t1060 + t843 * t963 / 0.2e1 + t846 * t966 / 0.2e1;
	t1497 = -t189 * t1036 + t817 * t943 + t63 * t1039 - t778 * t939 + 0.2e1 * t200 * t1042 - 0.2e1 * t832 * t978 - 0.2e1 * t105 * t1047 + 0.2e1 * t825 * t945 + t213 * t1026 / 0.2e1 + t221 * t1026 / 0.2e1 - t854 * t952 / 0.2e1 + t857 * t955 / 0.2e1 - t860 * t955 / 0.2e1 - t155 * t1017 / 0.2e1 + t160 * t1017 / 0.2e1 - t183 * t1017 / 0.2e1;
	t1518 = 0.2e1 * t200 * t1113 + 0.2e1 * t583 * t1088 + 0.2e1 * t105 * t1091 + 0.2e1 * t575 * t1094 + t213 * t1097 / 0.2e1 - t1139 * t1083 - t1142 * t1083 - t1121 * t1135 - t1124 * t1107 - t97 * t1127 - t97 * t1117 - t1136 * t1120 - t195 * t1130 - t195 * t1133;
	t1550 = -t217 * t1097 - 0.2e1 * t207 * t1147 * t418 - 0.2e1 * t207 * t204 * t566 - 0.2e1 * t114 * t1072 * t476 - 0.2e1 * t114 * t110 * t603 + t221 * t1097 / 0.2e1 + t535 * t1104 / 0.2e1 - t539 * t1107 / 0.2e1 + t586 * t1107 / 0.2e1 + t155 * t1076 / 0.2e1 - t160 * t1076 / 0.2e1 + t183 * t1076 / 0.2e1 + t597 * t1080 / 0.2e1 + t524 * t1083 / 0.2e1;
	t1580 = t221 * t1156 / 0.2e1 + t854 * t1104 / 0.2e1 - t857 * t1107 / 0.2e1 + t860 * t1107 / 0.2e1 + t155 * t1165 / 0.2e1 - t160 * t1165 / 0.2e1 + t183 * t1165 / 0.2e1 + t843 * t1080 / 0.2e1 + t846 * t1083 / 0.2e1 + 0.2e1 * t200 * t1176 + 0.2e1 * t832 * t1088 + 0.2e1 * t105 * t1181 + 0.2e1 * t825 * t1094 + t213 * t1156 / 0.2e1;
	t1603 = -0.2e1 * t114 * t110 * t864 - 0.2e1 * t114 * t1225 * t476 - 0.2e1 * t207 * t1218 * t418 - 0.2e1 * t207 * t204 * t869 - t1203 * t1083 - t1206 * t1083 - t1192 * t1107 - t1200 * t1120 - t1189 * t1135 - t217 * t1156 - t195 * t1195 - t195 * t1198 - t97 * t1209 - t97 * t1212;
	unknown(1,1) = t224;
	unknown(1,2) = t608 + t548;
	unknown(1,3) = 0.0e0;
	unknown(1,4) = 0.0e0;
	unknown(1,5) = t888 + t840;
	unknown(2,1) = t919;
	unknown(2,2) = t998 + t951;
	unknown(2,3) = 0.0e0;
	unknown(2,4) = 0.0e0;
	unknown(2,5) = t1070 + t1031;
	unknown(3,1) = 0.0e0;
	unknown(3,2) = t1154 + t1112;
	unknown(3,3) = 0.0e0;
	unknown(3,4) = 0.0e0;
	unknown(3,5) = t1229 + t1188;
	unknown(4,1) = t1256;
	unknown(4,2) = t1309 + t1279;
	unknown(4,3) = 0.0e0;
	unknown(4,4) = 0.0e0;
	unknown(4,5) = t1363 + t1334;
	unknown(5,1) = t1390;
	unknown(5,2) = t1443 + t1418;
	unknown(5,3) = 0.0e0;
	unknown(5,4) = 0.0e0;
	unknown(5,5) = t1497 + t1468;
	unknown(6,1) = 0.0e0;
	unknown(6,2) = t1550 + t1518;
	unknown(6,3) = 0.0e0;
	unknown(6,4) = 0.0e0;
	unknown(6,5) = t1603 + t1580;
	unknown(7,1) = -t564;
	unknown(7,2) = 0.0e0;
	unknown(7,3) = 0.0e0;
	unknown(7,4) = 0.0e0;
	unknown(7,5) = 0.0e0;
	unknown(8,1) = t2;
	unknown(8,2) = 0.0e0;
	unknown(8,3) = 0.0e0;
	unknown(8,4) = 0.0e0;
	unknown(8,5) = 0.0e0;
	unknown(9,1) = 0.0e0;
	unknown(9,2) = 0.0e0;
	unknown(9,3) = 0.0e0;
	unknown(9,4) = 0.0e0;
	unknown(9,5) = 0.0e0;
	JRD_rot = unknown;
elseif link_index == 5
	%% Symbolic Calculation
	% From jacobiRD_rot_5_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-04-11 22:25:02
	% EndTime: 2020-04-11 22:25:09
	% DurationCPUTime: 6.83s
	% Computational Cost: add. (569043->714), mult. (590550->1698), div. (31776->31), fcn. (146366->12), ass. (0->553)
	unknown=NaN(9,5);
	t1 = cos(qJ(1));
	t2 = t1 * qJD(1);
	t3 = sin(qJ(5));
	t4 = pkin(1) * t3;
	t5 = -t4 + pkin(2);
	t6 = pkin(2) * t4;
	t7 = 0.2e1 * t6;
	t8 = pkin(1) ^ 2;
	t9 = pkin(2) + qJ(2) + pkin(6) + pkin(3);
	t10 = pkin(2) - qJ(2) - pkin(6) - pkin(3);
	t12 = t10 * t9 - t7 + t8;
	t13 = pkin(2) + qJ(2) + pkin(6) - pkin(3);
	t14 = pkin(2) - qJ(2) - pkin(6) + pkin(3);
	t16 = t14 * t13 - t7 + t8;
	t17 = t16 * t12;
	t18 = sqrt(-t17);
	t20 = cos(qJ(5));
	t21 = t20 * pkin(1);
	t22 = pkin(2) ^ 2;
	t23 = qJ(2) + pkin(6);
	t24 = t23 ^ 2;
	t25 = pkin(3) ^ 2;
	t26 = -t7 + t8 + t22 + t24 - t25;
	t27 = t26 * t21;
	t28 = t18 * t5 + t27;
	t29 = 0.1e1 / t24;
	t30 = t29 * t28;
	t31 = t30 * t2;
	t32 = -t7 + t8 + t22;
	t33 = 0.1e1 / t32;
	t34 = t28 ^ 2;
	t35 = t29 * t34;
	t36 = t32 ^ 2;
	t37 = 0.1e1 / t36;
	t40 = pkin(1) * t18 * t20;
	t42 = t26 * t5 - t40;
	t43 = t42 ^ 2;
	t44 = t29 * t43;
	t46 = t37 * t35 + t37 * t44;
	t47 = sqrt(t46);
	t48 = 0.1e1 / t47;
	t49 = t48 * t33;
	t50 = 0.1e1 / pkin(3);
	t51 = t18 * t50;
	t52 = 0.1e1 / t25;
	t53 = t52 * t29;
	t55 = t7 - t8 - t22 + t24 + t25;
	t56 = t55 ^ 2;
	t59 = t52 * t29 * t56 - t17 * t53;
	t60 = sqrt(t59);
	t61 = 0.1e1 / t60;
	t62 = t61 * t51;
	t63 = t62 * t49;
	t65 = sin(qJ(1));
	t66 = t20 * qJD(5);
	t67 = t18 * pkin(1);
	t68 = t67 * t66;
	t69 = 0.1e1 / t18;
	t70 = t69 * t5;
	t71 = pkin(1) * pkin(2);
	t72 = t71 * t66;
	t73 = 0.2e1 * t72;
	t76 = t10 * qJD(2) - qJD(2) * t9 - t73;
	t77 = t16 * t76;
	t80 = -qJD(2) * t13 + t14 * qJD(2) - t73;
	t81 = t80 * t12;
	t82 = -t77 - t81;
	t85 = pkin(1) * qJD(5);
	t87 = t26 * t3 * t85;
	t88 = qJD(2) * t23;
	t89 = -t72 + t88;
	t90 = 0.2e1 * t89 * t21;
	t91 = -t68 + t82 * t70 / 0.2e1 - t87 + t90;
	t93 = t33 * t29;
	t94 = t93 * t91 * t65;
	t95 = t50 * t48;
	t96 = t61 * t18;
	t97 = t96 * t95;
	t99 = t28 * t65;
	t101 = 0.1e1 / t24 / t23;
	t102 = t33 * t101;
	t103 = t102 * t99;
	t104 = qJD(2) * t96;
	t105 = t104 * t95;
	t108 = t29 * t99;
	t109 = t48 * t37;
	t110 = t50 * t109;
	t113 = pkin(2) * t21;
	t114 = t113 * qJD(5) * t96;
	t117 = t93 * t99;
	t119 = 0.1e1 / t47 / t46;
	t125 = qJD(2) * t37;
	t129 = 0.1e1 / t36 / t32;
	t133 = t29 * t42;
	t134 = t3 * qJD(5);
	t135 = t67 * t134;
	t136 = t69 * t20;
	t137 = t82 * pkin(1);
	t139 = t137 * t136 / 0.2e1;
	t141 = t26 * pkin(1) * t66;
	t143 = 0.2e1 * t89 * t5 + t135 - t139 - t141;
	t153 = -0.2e1 * t125 * t101 * t34 - 0.2e1 * t125 * t101 * t43 + 0.4e1 * t72 * t129 * t35 + 0.4e1 * t72 * t129 * t44 + 0.2e1 * t143 * t37 * t133 + 0.2e1 * t91 * t37 * t30;
	t154 = t153 * t96;
	t155 = t154 * t50 * t119;
	t159 = t82 * t61 * t69;
	t160 = t159 * t95;
	t164 = 0.1e1 / t60 / t59;
	t172 = t29 * t55;
	t173 = t72 + t88;
	t181 = 0.2e1 * qJD(2) * t17 * t52 * t101 - 0.2e1 * qJD(2) * t52 * t101 * t56 + 0.4e1 * t173 * t52 * t172 - t77 * t53 - t81 * t53;
	t182 = t181 * t164 * t18;
	t183 = t182 * t95;
	t186 = t133 * t2;
	t187 = t50 * t55;
	t188 = t61 * t187;
	t189 = t188 * t49;
	t192 = t93 * t143 * t65;
	t193 = t55 * t48;
	t194 = t61 * t50;
	t195 = t194 * t193;
	t197 = t42 * t65;
	t198 = t102 * t197;
	t199 = qJD(2) * t194;
	t200 = t199 * t193;
	t203 = t29 * t197;
	t204 = t55 * t109;
	t207 = t113 * qJD(5) * t194;
	t210 = t93 * t197;
	t212 = t153 * t194;
	t213 = t212 * t55 * t119;
	t217 = 0.2e1 * t194 * t173 * t48;
	t220 = t181 * t164 * t50;
	t221 = t220 * t193;
	t224 = t63 * t31 + t97 * t94 - 0.2e1 * t105 * t103 + 0.2e1 * t114 * t110 * t108 - t155 * t117 / 0.2e1 + t160 * t117 / 0.2e1 - t183 * t117 / 0.2e1 - t189 * t186 - t195 * t192 + 0.2e1 * t200 * t198 - 0.2e1 * t207 * t204 * t203 + t213 * t210 / 0.2e1 - t217 * t210 + t221 * t210 / 0.2e1;
	t225 = cos(qJ(3));
	t229 = t97 * t117 - t195 * t210;
	t230 = qJD(3) * t229;
	t231 = sin(qJ(3));
	t258 = t189 * t31 + t195 * t94 - 0.2e1 * t200 * t103 + 0.2e1 * t207 * t204 * t108 - t213 * t117 / 0.2e1 + t217 * t117 - t221 * t117 / 0.2e1 + t63 * t186 + t97 * t192 - 0.2e1 * t105 * t198 + 0.2e1 * t114 * t110 * t203 - t155 * t210 / 0.2e1 + t160 * t210 / 0.2e1 - t183 * t210 / 0.2e1;
	t262 = t195 * t117 + t97 * t210;
	t263 = qJD(3) * t262;
	t266 = -qJ(2) - pkin(6) - pkin(3);
	t268 = -qJ(2) - pkin(6) + pkin(3);
	t270 = -0.2e1 * t268 * t12 - 0.2e1 * t16 * t266;
	t274 = t270 * t70 / 0.2e1 + 0.2e1 * t23 * t21;
	t275 = 0.1e1 / t23;
	t276 = t275 * t274;
	t278 = t33 * t30;
	t279 = t33 * t276 - t278;
	t280 = 0.1e1 / t42;
	t281 = t280 * t279;
	t283 = 0.1e1 / t43;
	t285 = t283 * t34 + 0.1e1;
	t286 = 0.1e1 / t285;
	t287 = t286 * t32 * t23;
	t289 = t270 * pkin(1);
	t293 = -t289 * t136 / 0.2e1 + 0.2e1 * t23 * t5;
	t294 = t275 * t293;
	t296 = t33 * t133;
	t297 = t33 * t294 - t296;
	t298 = t28 * t297;
	t299 = t23 * t298;
	t300 = t283 * t32;
	t301 = t286 * t300;
	t303 = t287 * t281 - t301 * t299;
	t304 = t303 * t1;
	t305 = t29 * t143;
	t306 = t305 * t304;
	t309 = t93 * t91 * t1;
	t310 = t50 * t29;
	t312 = t50 * t275;
	t313 = t270 * t69;
	t316 = -t18 * t310 + t313 * t312 / 0.2e1;
	t317 = 0.1e1 / t55;
	t318 = t317 * t316;
	t320 = 0.1e1 / t56;
	t322 = -t320 * t17 + 0.1e1;
	t323 = 0.1e1 / t322;
	t324 = t323 * pkin(3) * t23;
	t329 = 0.2e1 * t50 * t275 * t23 - t50 * t172;
	t331 = pkin(3) * t23 * t329;
	t332 = t320 * t18;
	t333 = t323 * t332;
	t335 = t324 * t318 - t333 * t331;
	t336 = t335 * t48;
	t337 = t188 * t336;
	t339 = t28 * t1;
	t340 = t93 * t339;
	t352 = -0.1e1 / t18 / t17;
	t363 = 0.2e1 * qJD(2) * t12 + 0.2e1 * t16 * qJD(2) - 0.2e1 * t80 * t266 - 0.2e1 * t268 * t76;
	t379 = t322 ^ 2;
	t380 = 0.1e1 / t379;
	t385 = 0.1e1 / t56 / t55;
	t389 = 0.4e1 * t173 * t385 * t17 - t320 * t77 - t320 * t81;
	t396 = qJD(2) * t50;
	t412 = t82 * t323 * t320 * t69;
	t417 = 0.2e1 * t173 * t323 * t385 * t18;
	t421 = t389 * t380 * t332;
	t423 = t324 * t317 * (0.2e1 * qJD(2) * t18 * t50 * t101 - t82 * t69 * t310 / 0.2e1 - qJD(2) * t313 * t310 / 0.2e1 - t82 * t270 * t352 * t312 / 0.4e1 + t363 * t69 * t312 / 0.2e1) - 0.2e1 * t173 * t323 * pkin(3) * t23 * t320 * t316 + t323 * pkin(3) * qJD(2) * t318 - t389 * t380 * pkin(3) * t23 * t318 - t333 * pkin(3) * t23 * (0.2e1 * t50 * t275 * qJD(2) + 0.2e1 * t396 * t101 * t55 - 0.2e1 * t50 * t29 * t173 - 0.2e1 * t396 * t29 * t23) - t333 * pkin(3) * qJD(2) * t329 - t412 * t331 / 0.2e1 + 0.2e1 * t417 * t331 + t421 * t331;
	t424 = t423 * t48;
	t425 = t188 * t424;
	t428 = 0.2e1 * t61 * t50 * t173;
	t429 = t428 * t336;
	t431 = t69 * pkin(1);
	t432 = t270 * t431;
	t435 = t352 * t5;
	t449 = qJD(2) * t33;
	t454 = t29 * t91;
	t455 = t33 * t454;
	t456 = t101 * t28;
	t459 = t37 * t30;
	t468 = t143 * t286 * t32;
	t471 = t286 * t32 * qJD(2);
	t473 = qJD(5) * t23;
	t476 = t286 * pkin(2) * t21;
	t480 = t285 ^ 2;
	t481 = 0.1e1 / t480;
	t486 = 0.1e1 / t43 / t42;
	t489 = -t143 * t486 * t34 + t91 * t283 * t28;
	t490 = 0.2e1 * t489 * t481 * t32;
	t494 = t352 * t20;
	t513 = t33 * t305;
	t514 = t101 * t42;
	t517 = t37 * t133;
	t532 = t286 * t283 * pkin(2) * t21;
	t537 = t143 * t286 * t486 * t32;
	t541 = 0.2e1 * t489 * t481 * t300;
	t543 = t287 * t280 * (t33 * t275 * (-t432 * t66 / 0.2e1 - t82 * t270 * t435 / 0.4e1 + t363 * t70 / 0.2e1 - 0.2e1 * t23 * t3 * t85 + 0.2e1 * qJD(2) * t21) - t449 * t29 * t274 + 0.2e1 * t72 * t37 * t276 - t455 + 0.2e1 * t449 * t456 - 0.2e1 * t72 * t459) - t468 * t23 * t283 * t279 + t471 * t281 - 0.2e1 * t476 * t473 * t281 - t490 * t23 * t281 - t301 * t23 * t28 * (t33 * t275 * (t432 * t134 / 0.2e1 + t82 * t289 * t494 / 0.4e1 - t363 * pkin(1) * t136 / 0.2e1 - 0.2e1 * t23 * pkin(1) * t66 + 0.2e1 * qJD(2) * t5) - t449 * t29 * t293 + 0.2e1 * t72 * t37 * t294 - t513 + 0.2e1 * t449 * t514 - 0.2e1 * t72 * t517) - t301 * t23 * t91 * t297 - t301 * qJD(2) * t298 + 0.2e1 * t532 * t473 * t298 + 0.2e1 * t537 * t299 + t541 * t299;
	t544 = t543 * t1;
	t545 = t30 * t544;
	t547 = t454 * t304;
	t549 = t30 * t304;
	t550 = t428 * t49;
	t553 = t93 * t143 * t1;
	t554 = t62 * t336;
	t556 = t42 * t1;
	t557 = t93 * t556;
	t558 = t62 * t424;
	t560 = t133 * t544;
	t562 = t48 * t102;
	t563 = t562 * t339;
	t564 = t55 * t335;
	t565 = t199 * t564;
	t568 = t48 * t93;
	t569 = t568 * t339;
	t570 = t220 * t564;
	t573 = t278 * t304;
	t578 = t119 * t93;
	t579 = t578 * t556;
	t580 = t50 * t335;
	t581 = t154 * t580;
	t584 = t568 * t556;
	t585 = t159 * t580;
	t588 = -t63 * t306 - t337 * t309 - t425 * t340 - t429 * t340 - t189 * t545 - t189 * t547 - t550 * t549 - t554 * t553 - t558 * t557 - t63 * t560 + 0.2e1 * t565 * t563 + t570 * t569 / 0.2e1 + t213 * t573 / 0.2e1 + t221 * t573 / 0.2e1 + t581 * t579 / 0.2e1 - t585 * t584 / 0.2e1;
	t589 = t182 * t580;
	t592 = t296 * t304;
	t599 = t578 * t339;
	t600 = t212 * t564;
	t603 = t33 * t456;
	t604 = t603 * t304;
	t607 = t65 * qJD(1);
	t608 = t278 * t607;
	t610 = t562 * t556;
	t611 = t104 * t580;
	t614 = t33 * t514;
	t615 = t614 * t304;
	t618 = t28 * t303;
	t619 = t29 * t618;
	t620 = t619 * t607;
	t622 = t296 * t607;
	t624 = t42 * t303;
	t625 = t29 * t624;
	t626 = t625 * t607;
	t630 = t48 * t37 * t29;
	t631 = t630 * t42 * t304;
	t632 = t72 * t62;
	t635 = t29 * t339;
	t636 = t335 * t109;
	t637 = t636 * t635;
	t638 = t72 * t188;
	t642 = t630 * t28 * t304;
	t645 = t29 * t556;
	t646 = t636 * t645;
	t649 = t589 * t584 / 0.2e1 + t155 * t592 / 0.2e1 - t160 * t592 / 0.2e1 + t183 * t592 / 0.2e1 + t600 * t599 / 0.2e1 + 0.2e1 * t200 * t604 + t337 * t608 + 0.2e1 * t611 * t610 + 0.2e1 * t105 * t615 + t189 * t620 + t554 * t622 + t63 * t626 - 0.2e1 * t632 * t631 - 0.2e1 * t638 * t637 - 0.2e1 * t638 * t642 - 0.2e1 * t632 * t646;
	t650 = t649 + t588;
	t652 = t133 * t304;
	t658 = qJD(3) * (-t189 * t549 - t337 * t340 - t554 * t557 - t63 * t652);
	t682 = t558 * t340 + t63 * t545 + t63 * t547 - t337 * t553 - t425 * t557 - t429 * t557 - 0.2e1 * t638 * t631 + t554 * t309 - t189 * t560 - t189 * t306 - t550 * t652 + t160 * t573 / 0.2e1 - t183 * t573 / 0.2e1 + t600 * t579 / 0.2e1 + 0.2e1 * t565 * t610 + 0.2e1 * t200 * t615;
	t711 = -t554 * t608 - t63 * t620 + t337 * t622 + t189 * t626 - 0.2e1 * t611 * t563 + 0.2e1 * t632 * t637 + 0.2e1 * t632 * t642 - 0.2e1 * t638 * t646 - 0.2e1 * t105 * t604 + t570 * t584 / 0.2e1 + t213 * t592 / 0.2e1 + t221 * t592 / 0.2e1 - t581 * t599 / 0.2e1 + t585 * t569 / 0.2e1 - t589 * t569 / 0.2e1 - t155 * t573 / 0.2e1;
	t712 = t711 + t682;
	t719 = qJD(3) * (-t189 * t652 - t337 * t557 + t554 * t340 + t63 * t549);
	t722 = t30 * t607;
	t725 = t102 * t339;
	t737 = t133 * t607;
	t740 = t102 * t556;
	t751 = t63 * t722 - t97 * t309 + 0.2e1 * t105 * t725 - 0.2e1 * t114 * t110 * t635 + t155 * t340 / 0.2e1 - t160 * t340 / 0.2e1 + t183 * t340 / 0.2e1 - t189 * t737 + t195 * t553 - 0.2e1 * t200 * t740 + 0.2e1 * t207 * t204 * t645 - t213 * t557 / 0.2e1 + t217 * t557 - t221 * t557 / 0.2e1;
	t756 = qJD(3) * (t195 * t557 - t97 * t340);
	t783 = t189 * t722 - t195 * t309 + 0.2e1 * t200 * t725 - 0.2e1 * t207 * t204 * t635 + t213 * t340 / 0.2e1 - t217 * t340 + t221 * t340 / 0.2e1 + t63 * t737 - t97 * t553 + 0.2e1 * t105 * t740 - 0.2e1 * t114 * t110 * t645 + t155 * t557 / 0.2e1 - t160 * t557 / 0.2e1 + t183 * t557 / 0.2e1;
	t788 = qJD(3) * (-t195 * t340 - t97 * t557);
	t790 = -t225 * t756 + t225 * t783 - t231 * t751 - t231 * t788;
	t795 = t16 * pkin(2) * t21 + t71 * t20 * t12;
	t796 = 0.2e1 * t795 * t69;
	t797 = t323 * t317;
	t802 = t797 * t796 / 0.2e1 - 0.2e1 * t333 * t113;
	t803 = t802 * t48;
	t804 = t428 * t803;
	t806 = 0.2e1 * t795 * t431;
	t820 = t80 * pkin(2) * t21 - t6 * qJD(5) * t12 - t16 * t71 * t134 + t71 * t20 * t76;
	t835 = t20 ^ 2;
	t836 = t835 * t8;
	t839 = -0.2e1 * pkin(2) * t836 - t26 * t4 + t795 * t70 - t40;
	t842 = t275 * t839;
	t851 = pkin(2) * qJD(2) * t21;
	t854 = t275 * t28;
	t857 = qJD(5) * t22 * t836;
	t860 = t37 * t854;
	t861 = t71 * t134;
	t870 = 0.2e1 * t113 * t860 + t33 * t842;
	t874 = t280 * t870;
	t886 = 0.2e1 * t795 * pkin(1);
	t910 = pkin(1) * t18 * t3 - t886 * t136 / 0.2e1 - t27 - 0.2e1 * t71 * t20 * t5;
	t913 = t275 * t910;
	t923 = t275 * t42;
	t927 = t37 * t923;
	t937 = 0.2e1 * t113 * t927 + t33 * t913;
	t941 = t28 * t937;
	t947 = t23 * t941;
	t951 = t287 * t280 * (t33 * t275 * (t135 - t139 - t806 * t66 / 0.2e1 - t82 * t795 * t435 / 0.2e1 + t820 * t70 - t141 - 0.2e1 * t89 * t4 + 0.4e1 * t3 * qJD(5) * pkin(2) * t20 * t8) - t449 * t29 * t839 + 0.2e1 * t72 * t37 * t842 + 0.2e1 * t113 * t37 * t275 * t91 - 0.2e1 * t851 * t459 + 0.8e1 * t857 * t129 * t854 - 0.2e1 * t861 * t860) - t468 * t23 * t283 * t870 + t471 * t874 - 0.2e1 * t476 * t473 * t874 - t490 * t23 * t874 - t301 * t23 * t28 * (t33 * t275 * (t68 + t137 * t69 * t3 / 0.2e1 + t806 * t134 / 0.2e1 + t82 * t886 * t494 / 0.4e1 - t820 * pkin(1) * t136 + t87 - t90 + 0.2e1 * pkin(2) * t8 * t835 * qJD(5) + 0.2e1 * t6 * qJD(5) * t5) - t449 * t29 * t910 + 0.2e1 * t72 * t37 * t913 + 0.2e1 * t113 * t37 * t275 * t143 - 0.2e1 * t851 * t517 + 0.8e1 * t857 * t129 * t923 - 0.2e1 * t861 * t927) - t301 * t23 * t91 * t937 - t301 * qJD(2) * t941 + 0.2e1 * t532 * t473 * t941 + 0.2e1 * t537 * t947 + t541 * t947;
	t952 = t951 * t1;
	t953 = t30 * t952;
	t957 = t287 * t874 - t301 * t947;
	t958 = t957 * t1;
	t959 = t454 * t958;
	t961 = t30 * t958;
	t963 = t62 * t803;
	t972 = t323 * t320;
	t990 = -t82 * t797 * t795 * t352 / 0.2e1 + t797 * t820 * t69 - t173 * t972 * t796 - t389 * t380 * t317 * t796 / 0.2e1 + 0.2e1 * t972 * t18 * pkin(2) * pkin(1) * t134 - t412 * t113 + 0.4e1 * t417 * t113 + 0.2e1 * t421 * t113;
	t991 = t990 * t48;
	t992 = t62 * t991;
	t994 = t133 * t952;
	t996 = t305 * t958;
	t998 = t188 * t803;
	t1000 = t188 * t991;
	t1003 = t630 * t42 * t958;
	t1006 = t802 * t109;
	t1007 = t1006 * t635;
	t1011 = t630 * t28 * t958;
	t1014 = t1006 * t645;
	t1017 = t278 * t958;
	t1022 = -t804 * t340 - t189 * t953 - t189 * t959 - t550 * t961 - t963 * t553 - t992 * t557 - t63 * t994 - t63 * t996 - t998 * t309 - t1000 * t340 - 0.2e1 * t632 * t1003 - 0.2e1 * t638 * t1007 - 0.2e1 * t638 * t1011 - 0.2e1 * t632 * t1014 + t213 * t1017 / 0.2e1 + t221 * t1017 / 0.2e1;
	t1023 = t50 * t802;
	t1024 = t154 * t1023;
	t1027 = t159 * t1023;
	t1030 = t182 * t1023;
	t1033 = t296 * t958;
	t1038 = t55 * t802;
	t1039 = t199 * t1038;
	t1042 = t614 * t958;
	t1047 = t212 * t1038;
	t1050 = t220 * t1038;
	t1053 = t28 * t957;
	t1054 = t29 * t1053;
	t1055 = t1054 * t607;
	t1058 = t42 * t957;
	t1059 = t29 * t1058;
	t1060 = t1059 * t607;
	t1063 = t603 * t958;
	t1066 = t104 * t1023;
	t1069 = t1024 * t579 / 0.2e1 - t1027 * t584 / 0.2e1 + t1030 * t584 / 0.2e1 + t155 * t1033 / 0.2e1 - t160 * t1033 / 0.2e1 + 0.2e1 * t1039 * t563 + 0.2e1 * t105 * t1042 + t183 * t1033 / 0.2e1 + t1047 * t599 / 0.2e1 + t1050 * t569 / 0.2e1 + t189 * t1055 + t963 * t622 + t63 * t1060 + t998 * t608 + 0.2e1 * t200 * t1063 + 0.2e1 * t1066 * t610;
	t1070 = t1069 + t1022;
	t1072 = t133 * t958;
	t1078 = qJD(3) * (-t63 * t1072 - t189 * t961 - t998 * t340 - t963 * t557);
	t1098 = -t1000 * t557 - t804 * t557 - t189 * t994 - t189 * t996 - t550 * t1072 + t963 * t309 + t992 * t340 + t63 * t953 + t63 * t959 - t998 * t553 + t189 * t1060 - t963 * t608 - t63 * t1055 + t998 * t622 + 0.2e1 * t1039 * t610 - t1030 * t569 / 0.2e1;
	t1131 = -t155 * t1017 / 0.2e1 + t160 * t1017 / 0.2e1 - t183 * t1017 / 0.2e1 + t1047 * t579 / 0.2e1 + t1050 * t584 / 0.2e1 + t213 * t1033 / 0.2e1 - 0.2e1 * t1066 * t563 - 0.2e1 * t105 * t1063 + 0.2e1 * t200 * t1042 + t221 * t1033 / 0.2e1 - t1024 * t599 / 0.2e1 + t1027 * t569 / 0.2e1 + 0.2e1 * t632 * t1007 + 0.2e1 * t632 * t1011 - 0.2e1 * t638 * t1014 - 0.2e1 * t638 * t1003;
	t1132 = t1131 + t1098;
	t1139 = qJD(3) * (-t189 * t1072 + t963 * t340 - t998 * t557 + t63 * t961);
	t1146 = t225 * t751 + t225 * t788 - t231 * t756 + t231 * t783;
	t1147 = t543 * t65;
	t1148 = t30 * t1147;
	t1150 = t303 * t65;
	t1151 = t454 * t1150;
	t1153 = t30 * t1150;
	t1157 = t133 * t1147;
	t1159 = t305 * t1150;
	t1164 = t578 * t99;
	t1167 = t568 * t99;
	t1170 = t278 * t1150;
	t1175 = t578 * t197;
	t1178 = t568 * t197;
	t1181 = -t189 * t1148 - t189 * t1151 - t550 * t1153 - t554 * t192 - t558 * t210 - t63 * t1157 - t63 * t1159 - t337 * t94 - t425 * t117 - t429 * t117 + t600 * t1164 / 0.2e1 + t570 * t1167 / 0.2e1 + t213 * t1170 / 0.2e1 + t221 * t1170 / 0.2e1 + t581 * t1175 / 0.2e1 - t585 * t1178 / 0.2e1;
	t1184 = t296 * t1150;
	t1191 = t278 * t2;
	t1193 = t619 * t2;
	t1195 = t296 * t2;
	t1197 = t562 * t197;
	t1200 = t614 * t1150;
	t1203 = t562 * t99;
	t1206 = t603 * t1150;
	t1209 = t625 * t2;
	t1211 = t636 * t108;
	t1215 = t630 * t28 * t1150;
	t1218 = t636 * t203;
	t1222 = t630 * t42 * t1150;
	t1225 = t589 * t1178 / 0.2e1 + t155 * t1184 / 0.2e1 - t160 * t1184 / 0.2e1 + t183 * t1184 / 0.2e1 - t337 * t1191 - t189 * t1193 - t554 * t1195 + 0.2e1 * t611 * t1197 + 0.2e1 * t105 * t1200 + 0.2e1 * t565 * t1203 + 0.2e1 * t200 * t1206 - t63 * t1209 - 0.2e1 * t638 * t1211 - 0.2e1 * t638 * t1215 - 0.2e1 * t632 * t1218 - 0.2e1 * t632 * t1222;
	t1226 = t1225 + t1181;
	t1228 = t133 * t1150;
	t1234 = qJD(3) * (-t189 * t1153 - t337 * t117 - t63 * t1228 - t554 * t210);
	t1258 = -t189 * t1159 - t550 * t1228 + t554 * t94 + t558 * t117 + t63 * t1148 + t63 * t1151 - t337 * t192 - t425 * t210 - t429 * t210 - t189 * t1157 + t160 * t1170 / 0.2e1 - t183 * t1170 / 0.2e1 + t600 * t1175 / 0.2e1 + t570 * t1178 / 0.2e1 + t213 * t1184 / 0.2e1 - 0.2e1 * t611 * t1203;
	t1287 = -0.2e1 * t105 * t1206 + 0.2e1 * t565 * t1197 + 0.2e1 * t200 * t1200 + t63 * t1193 - t337 * t1195 - t189 * t1209 + t554 * t1191 + t221 * t1184 / 0.2e1 - t581 * t1164 / 0.2e1 + t585 * t1167 / 0.2e1 - t589 * t1167 / 0.2e1 - t155 * t1170 / 0.2e1 + 0.2e1 * t632 * t1211 + 0.2e1 * t632 * t1215 - 0.2e1 * t638 * t1218 - 0.2e1 * t638 * t1222;
	t1288 = t1287 + t1258;
	t1295 = qJD(3) * (t63 * t1153 + t554 * t117 - t189 * t1228 - t337 * t210);
	t1299 = -qJD(3) * t229;
	t1302 = -qJD(3) * t262;
	t1305 = t957 * t65;
	t1306 = t30 * t1305;
	t1310 = t951 * t65;
	t1311 = t133 * t1310;
	t1313 = t305 * t1305;
	t1318 = t30 * t1310;
	t1320 = t454 * t1305;
	t1322 = t296 * t1305;
	t1331 = t278 * t1305;
	t1336 = -t550 * t1306 - t963 * t192 - t992 * t210 - t63 * t1311 - t63 * t1313 - t998 * t94 - t1000 * t117 - t804 * t117 - t189 * t1318 - t189 * t1320 - t160 * t1322 / 0.2e1 + t183 * t1322 / 0.2e1 + t1047 * t1164 / 0.2e1 + t1050 * t1167 / 0.2e1 + t213 * t1331 / 0.2e1 + t221 * t1331 / 0.2e1;
	t1346 = t1054 * t2;
	t1351 = t603 * t1305;
	t1356 = t614 * t1305;
	t1359 = t1059 * t2;
	t1361 = t1006 * t108;
	t1365 = t630 * t28 * t1305;
	t1368 = t1006 * t203;
	t1372 = t630 * t42 * t1305;
	t1375 = t1024 * t1175 / 0.2e1 - t1027 * t1178 / 0.2e1 + t1030 * t1178 / 0.2e1 + t155 * t1322 / 0.2e1 - t998 * t1191 - t189 * t1346 - t963 * t1195 + 0.2e1 * t1039 * t1203 + 0.2e1 * t200 * t1351 + 0.2e1 * t1066 * t1197 + 0.2e1 * t105 * t1356 - t63 * t1359 - 0.2e1 * t638 * t1361 - 0.2e1 * t638 * t1365 - 0.2e1 * t632 * t1368 - 0.2e1 * t632 * t1372;
	t1376 = t1375 + t1336;
	t1378 = t133 * t1305;
	t1384 = qJD(3) * (-t998 * t117 - t189 * t1306 - t63 * t1378 - t963 * t210);
	t1408 = -t804 * t210 - t189 * t1311 - t189 * t1313 - t550 * t1378 + t963 * t94 + t992 * t117 + t63 * t1318 + t63 * t1320 - t998 * t192 - t1000 * t210 + t1047 * t1175 / 0.2e1 + t1050 * t1178 / 0.2e1 + t213 * t1322 / 0.2e1 + t221 * t1322 / 0.2e1 - t1024 * t1164 / 0.2e1 + 0.2e1 * t1039 * t1197;
	t1437 = 0.2e1 * t200 * t1356 - 0.2e1 * t1066 * t1203 - 0.2e1 * t105 * t1351 - t998 * t1195 - t189 * t1359 + t963 * t1191 + t63 * t1346 + t1027 * t1167 / 0.2e1 - t1030 * t1167 / 0.2e1 - t155 * t1331 / 0.2e1 + t160 * t1331 / 0.2e1 - t183 * t1331 / 0.2e1 + 0.2e1 * t632 * t1361 + 0.2e1 * t632 * t1365 - 0.2e1 * t638 * t1368 - 0.2e1 * t638 * t1372;
	t1438 = t1437 + t1408;
	t1445 = qJD(3) * (t963 * t117 + t63 * t1306 - t189 * t1378 - t998 * t210);
	t1451 = t55 * t336;
	t1458 = t50 * t336;
	t1462 = t119 * t33;
	t1463 = t1462 * t133;
	t1466 = t49 * t456;
	t1469 = t102 * t618;
	t1472 = t49 * t514;
	t1475 = t49 * t133;
	t1478 = t93 * t624;
	t1483 = t1462 * t30;
	t1486 = t49 * t30;
	t1491 = -0.2e1 * t114 * t110 * t619 + 0.2e1 * t207 * t1451 * t517 + 0.2e1 * t207 * t204 * t625 - 0.2e1 * t114 * t1458 * t459 - t600 * t1463 / 0.2e1 + 0.2e1 * t611 * t1466 + 0.2e1 * t105 * t1469 - 0.2e1 * t565 * t1472 - t570 * t1475 / 0.2e1 - t213 * t1478 / 0.2e1 - t221 * t1478 / 0.2e1 + t581 * t1483 / 0.2e1 - t585 * t1486 / 0.2e1 + t589 * t1486 / 0.2e1;
	t1492 = t93 * t618;
	t1499 = t102 * t624;
	t1502 = t49 * t454;
	t1503 = t96 * t580;
	t1506 = t96 * t50 * t423;
	t1509 = t93 * t28 * t543;
	t1512 = t93 * t91 * t303;
	t1514 = t49 * t305;
	t1515 = t194 * t564;
	t1518 = t194 * t55 * t423;
	t1521 = 0.2e1 * t194 * t173 * t335;
	t1524 = t93 * t42 * t543;
	t1527 = t93 * t143 * t303;
	t1530 = t155 * t1492 / 0.2e1 - t160 * t1492 / 0.2e1 + t183 * t1492 / 0.2e1 - 0.2e1 * t200 * t1499 - t1503 * t1502 - t1506 * t1486 - t97 * t1509 - t97 * t1512 + t1515 * t1514 + t1518 * t1475 + t1521 * t1475 + t195 * t1524 + t195 * t1527 + t217 * t1478;
	t1531 = t1530 + t1491;
	t1538 = qJD(3) * (t1515 * t1475 + t195 * t1478 - t1503 * t1486 - t97 * t1492);
	t1572 = -0.2e1 * t207 * t204 * t619 - 0.2e1 * t114 * t1458 * t517 - 0.2e1 * t114 * t110 * t625 - 0.2e1 * t207 * t1451 * t459 + t600 * t1483 / 0.2e1 + t570 * t1486 / 0.2e1 + t213 * t1492 / 0.2e1 + t221 * t1492 / 0.2e1 + 0.2e1 * t611 * t1472 + 0.2e1 * t105 * t1499 + 0.2e1 * t565 * t1466 + 0.2e1 * t200 * t1469 + t581 * t1463 / 0.2e1 - t585 * t1475 / 0.2e1;
	t1591 = t589 * t1475 / 0.2e1 + t155 * t1478 / 0.2e1 - t160 * t1478 / 0.2e1 + t183 * t1478 / 0.2e1 - t1503 * t1514 - t1506 * t1475 - t97 * t1524 - t97 * t1527 - t1515 * t1502 - t1518 * t1486 - t1521 * t1486 - t195 * t1509 - t195 * t1512 - t217 * t1492;
	t1592 = t1591 + t1572;
	t1599 = qJD(3) * (-t1503 * t1475 - t97 * t1478 - t1515 * t1486 - t195 * t1492);
	t1603 = qJD(2) * t61;
	t1604 = t1603 * t51;
	t1610 = t153 * t61;
	t1611 = t1610 * t51;
	t1616 = t82 * t61 * t69 * t50;
	t1619 = t181 * t164;
	t1620 = t1619 * t51;
	t1624 = t1603 * t187;
	t1630 = t1610 * t187;
	t1634 = t1619 * t187;
	t1637 = t97 * t513 - 0.2e1 * t1604 * t1472 + 0.2e1 * t114 * t110 * t133 - t1611 * t1463 / 0.2e1 + t1616 * t1475 / 0.2e1 - t1620 * t1475 / 0.2e1 + t195 * t455 - 0.2e1 * t1624 * t1466 + 0.2e1 * t207 * t204 * t30 - t1630 * t1483 / 0.2e1 + t217 * t278 - t1634 * t1486 / 0.2e1;
	t1642 = qJD(3) * (t195 * t278 + t97 * t296);
	t1667 = t195 * t513 - 0.2e1 * t1624 * t1472 + 0.2e1 * t207 * t204 * t133 - t1630 * t1463 / 0.2e1 + t217 * t296 - t1634 * t1475 / 0.2e1 - t97 * t455 + 0.2e1 * t1604 * t1466 - 0.2e1 * t114 * t110 * t30 + t1611 * t1483 / 0.2e1 - t1616 * t1486 / 0.2e1 + t1620 * t1486 / 0.2e1;
	t1672 = qJD(3) * (t195 * t296 - t97 * t278);
	t1678 = t55 * t803;
	t1685 = t50 * t803;
	t1689 = t93 * t1058;
	t1691 = t96 * t1023;
	t1694 = t96 * t50 * t990;
	t1697 = t93 * t28 * t951;
	t1700 = t93 * t91 * t957;
	t1702 = t194 * t1038;
	t1705 = t194 * t55 * t990;
	t1708 = 0.2e1 * t194 * t173 * t802;
	t1711 = t93 * t42 * t951;
	t1714 = t93 * t143 * t957;
	t1716 = -0.2e1 * t114 * t110 * t1054 + 0.2e1 * t207 * t204 * t1059 - 0.2e1 * t114 * t1685 * t459 + 0.2e1 * t207 * t1678 * t517 + t1705 * t1475 + t1708 * t1475 - t1694 * t1486 - t1691 * t1502 + t1702 * t1514 + t217 * t1689 - t97 * t1697 - t97 * t1700 + t195 * t1711 + t195 * t1714;
	t1717 = t102 * t1058;
	t1722 = t93 * t1053;
	t1743 = t102 * t1053;
	t1748 = -0.2e1 * t200 * t1717 + 0.2e1 * t1066 * t1466 + t155 * t1722 / 0.2e1 - t160 * t1722 / 0.2e1 + t183 * t1722 / 0.2e1 - t1047 * t1463 / 0.2e1 - t1050 * t1475 / 0.2e1 - t213 * t1689 / 0.2e1 - t221 * t1689 / 0.2e1 + t1024 * t1483 / 0.2e1 - t1027 * t1486 / 0.2e1 + t1030 * t1486 / 0.2e1 + 0.2e1 * t105 * t1743 - 0.2e1 * t1039 * t1472;
	t1749 = t1748 + t1716;
	t1756 = qJD(3) * (t1702 * t1475 - t1691 * t1486 + t195 * t1689 - t97 * t1722);
	t1780 = -0.2e1 * t207 * t204 * t1054 - 0.2e1 * t114 * t110 * t1059 - 0.2e1 * t114 * t1685 * t517 - 0.2e1 * t207 * t1678 * t459 - t1694 * t1475 - t1705 * t1486 - t1708 * t1486 - t1702 * t1502 - t1691 * t1514 - t195 * t1697 - t195 * t1700 - t97 * t1711 - t97 * t1714 - t217 * t1722;
	t1809 = 0.2e1 * t1039 * t1466 + 0.2e1 * t200 * t1743 + t1024 * t1463 / 0.2e1 - t1027 * t1475 / 0.2e1 + t1030 * t1475 / 0.2e1 + t155 * t1689 / 0.2e1 - t160 * t1689 / 0.2e1 + t183 * t1689 / 0.2e1 + t1047 * t1483 / 0.2e1 + t1050 * t1486 / 0.2e1 + t213 * t1722 / 0.2e1 + t221 * t1722 / 0.2e1 + 0.2e1 * t1066 * t1472 + 0.2e1 * t105 * t1717;
	t1810 = t1809 + t1780;
	t1817 = qJD(3) * (-t1691 * t1475 - t1702 * t1486 - t97 * t1689 - t195 * t1722);
	unknown(1,1) = t225 * t224 + t225 * t263 - t231 * t230 + t231 * t258;
	unknown(1,2) = t225 * t650 + t225 * t719 - t231 * t658 + t231 * t712;
	unknown(1,3) = t790;
	unknown(1,4) = 0.0e0;
	unknown(1,5) = t225 * t1070 - t231 * t1078 + t231 * t1132 + t225 * t1139;
	unknown(2,1) = t1146;
	unknown(2,2) = t225 * t1226 - t231 * t1234 + t231 * t1288 + t225 * t1295;
	unknown(2,3) = -t225 * t1299 - t231 * t1302 + t231 * t224 - t225 * t258;
	unknown(2,4) = 0.0e0;
	unknown(2,5) = t225 * t1376 - t231 * t1384 + t231 * t1438 + t225 * t1445;
	unknown(3,1) = 0.0e0;
	unknown(3,2) = t225 * t1531 - t231 * t1538 + t231 * t1592 + t225 * t1599;
	unknown(3,3) = -t231 * t1637 - t225 * t1642 + t225 * t1667 - t231 * t1672;
	unknown(3,4) = 0.0e0;
	unknown(3,5) = t225 * t1749 - t231 * t1756 + t231 * t1810 + t225 * t1817;
	unknown(4,1) = -t231 * t224 - t225 * t230 + t225 * t258 - t231 * t263;
	unknown(4,2) = -t225 * t658 + t225 * t712 - t231 * t650 - t231 * t719;
	unknown(4,3) = -t1146;
	unknown(4,4) = 0.0e0;
	unknown(4,5) = -t231 * t1070 - t225 * t1078 + t225 * t1132 - t231 * t1139;
	unknown(5,1) = t790;
	unknown(5,2) = -t231 * t1226 - t225 * t1234 + t225 * t1288 - t231 * t1295;
	unknown(5,3) = t231 * t1299 - t225 * t1302 + t225 * t224 + t231 * t258;
	unknown(5,4) = 0.0e0;
	unknown(5,5) = -t231 * t1376 - t225 * t1384 + t225 * t1438 - t231 * t1445;
	unknown(6,1) = 0.0e0;
	unknown(6,2) = -t231 * t1531 - t225 * t1538 + t225 * t1592 - t231 * t1599;
	unknown(6,3) = -t225 * t1637 + t231 * t1642 - t231 * t1667 - t225 * t1672;
	unknown(6,4) = 0.0e0;
	unknown(6,5) = -t231 * t1749 - t225 * t1756 + t225 * t1810 - t231 * t1817;
	unknown(7,1) = -t607;
	unknown(7,2) = 0.0e0;
	unknown(7,3) = 0.0e0;
	unknown(7,4) = 0.0e0;
	unknown(7,5) = 0.0e0;
	unknown(8,1) = t2;
	unknown(8,2) = 0.0e0;
	unknown(8,3) = 0.0e0;
	unknown(8,4) = 0.0e0;
	unknown(8,5) = 0.0e0;
	unknown(9,1) = 0.0e0;
	unknown(9,2) = 0.0e0;
	unknown(9,3) = 0.0e0;
	unknown(9,4) = 0.0e0;
	unknown(9,5) = 0.0e0;
	JRD_rot = unknown;
elseif link_index == 6
	%% Symbolic Calculation
	% From jacobiRD_rot_6_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-04-11 22:25:52
	% EndTime: 2020-04-11 22:26:02
	% DurationCPUTime: 10.30s
	% Computational Cost: add. (927477->765), mult. (964990->1799), div. (53128->31), fcn. (239734->14), ass. (0->603)
	unknown=NaN(9,5);
	t1 = cos(qJ(1));
	t2 = t1 * qJD(1);
	t3 = sin(qJ(5));
	t4 = pkin(1) * t3;
	t5 = -t4 + pkin(2);
	t6 = pkin(2) * t4;
	t7 = 0.2e1 * t6;
	t8 = pkin(1) ^ 2;
	t9 = pkin(2) + qJ(2) + pkin(6) + pkin(3);
	t10 = pkin(2) - qJ(2) - pkin(6) - pkin(3);
	t12 = t10 * t9 - t7 + t8;
	t13 = pkin(2) + qJ(2) + pkin(6) - pkin(3);
	t14 = pkin(2) - qJ(2) - pkin(6) + pkin(3);
	t16 = t14 * t13 - t7 + t8;
	t17 = t16 * t12;
	t18 = sqrt(-t17);
	t20 = cos(qJ(5));
	t21 = t20 * pkin(1);
	t22 = pkin(2) ^ 2;
	t23 = qJ(2) + pkin(6);
	t24 = t23 ^ 2;
	t25 = pkin(3) ^ 2;
	t26 = -t7 + t8 + t22 + t24 - t25;
	t27 = t26 * t21;
	t28 = t18 * t5 + t27;
	t29 = 0.1e1 / t24;
	t30 = t29 * t28;
	t31 = t30 * t2;
	t32 = -t7 + t8 + t22;
	t33 = 0.1e1 / t32;
	t34 = t28 ^ 2;
	t35 = t29 * t34;
	t36 = t32 ^ 2;
	t37 = 0.1e1 / t36;
	t40 = pkin(1) * t18 * t20;
	t42 = t26 * t5 - t40;
	t43 = t42 ^ 2;
	t44 = t29 * t43;
	t46 = t37 * t35 + t37 * t44;
	t47 = sqrt(t46);
	t48 = 0.1e1 / t47;
	t49 = t48 * t33;
	t50 = 0.1e1 / pkin(3);
	t51 = t18 * t50;
	t52 = 0.1e1 / t25;
	t53 = t52 * t29;
	t55 = t7 - t8 - t22 + t24 + t25;
	t56 = t55 ^ 2;
	t59 = t52 * t29 * t56 - t17 * t53;
	t60 = sqrt(t59);
	t61 = 0.1e1 / t60;
	t62 = t61 * t51;
	t63 = t62 * t49;
	t65 = sin(qJ(1));
	t66 = t20 * qJD(5);
	t67 = t18 * pkin(1);
	t68 = t67 * t66;
	t69 = 0.1e1 / t18;
	t70 = t69 * t5;
	t71 = pkin(1) * pkin(2);
	t72 = t71 * t66;
	t73 = 0.2e1 * t72;
	t76 = t10 * qJD(2) - qJD(2) * t9 - t73;
	t77 = t16 * t76;
	t80 = -qJD(2) * t13 + t14 * qJD(2) - t73;
	t81 = t80 * t12;
	t82 = -t77 - t81;
	t85 = pkin(1) * qJD(5);
	t87 = t26 * t3 * t85;
	t88 = qJD(2) * t23;
	t89 = -t72 + t88;
	t90 = 0.2e1 * t89 * t21;
	t91 = -t68 + t82 * t70 / 0.2e1 - t87 + t90;
	t93 = t33 * t29;
	t94 = t93 * t91 * t65;
	t95 = t50 * t48;
	t96 = t61 * t18;
	t97 = t96 * t95;
	t99 = t28 * t65;
	t101 = 0.1e1 / t24 / t23;
	t102 = t33 * t101;
	t103 = t102 * t99;
	t104 = qJD(2) * t96;
	t105 = t104 * t95;
	t108 = t29 * t99;
	t109 = t48 * t37;
	t110 = t50 * t109;
	t113 = pkin(2) * t21;
	t114 = t113 * qJD(5) * t96;
	t117 = t93 * t99;
	t119 = 0.1e1 / t47 / t46;
	t125 = qJD(2) * t37;
	t129 = 0.1e1 / t36 / t32;
	t133 = t29 * t42;
	t134 = t3 * qJD(5);
	t135 = t67 * t134;
	t136 = t69 * t20;
	t137 = t82 * pkin(1);
	t139 = t137 * t136 / 0.2e1;
	t141 = t26 * pkin(1) * t66;
	t143 = 0.2e1 * t89 * t5 + t135 - t139 - t141;
	t153 = -0.2e1 * t125 * t101 * t34 - 0.2e1 * t125 * t101 * t43 + 0.4e1 * t72 * t129 * t35 + 0.4e1 * t72 * t129 * t44 + 0.2e1 * t143 * t37 * t133 + 0.2e1 * t91 * t37 * t30;
	t154 = t153 * t96;
	t155 = t154 * t50 * t119;
	t159 = t82 * t61 * t69;
	t160 = t159 * t95;
	t164 = 0.1e1 / t60 / t59;
	t172 = t29 * t55;
	t173 = t72 + t88;
	t181 = 0.2e1 * qJD(2) * t17 * t52 * t101 - 0.2e1 * qJD(2) * t52 * t101 * t56 + 0.4e1 * t173 * t52 * t172 - t77 * t53 - t81 * t53;
	t182 = t181 * t164 * t18;
	t183 = t182 * t95;
	t186 = t133 * t2;
	t187 = t50 * t55;
	t188 = t61 * t187;
	t189 = t188 * t49;
	t192 = t93 * t143 * t65;
	t193 = t55 * t48;
	t194 = t61 * t50;
	t195 = t194 * t193;
	t197 = t42 * t65;
	t198 = t102 * t197;
	t199 = qJD(2) * t194;
	t200 = t199 * t193;
	t203 = t29 * t197;
	t204 = t55 * t109;
	t207 = t113 * qJD(5) * t194;
	t210 = t93 * t197;
	t212 = t153 * t194;
	t213 = t212 * t55 * t119;
	t217 = 0.2e1 * t194 * t173 * t48;
	t220 = t181 * t164 * t50;
	t221 = t220 * t193;
	t224 = t63 * t31 + t97 * t94 - 0.2e1 * t105 * t103 + 0.2e1 * t114 * t110 * t108 - t155 * t117 / 0.2e1 + t160 * t117 / 0.2e1 - t183 * t117 / 0.2e1 - t189 * t186 - t195 * t192 + 0.2e1 * t200 * t198 - 0.2e1 * t207 * t204 * t203 + t213 * t210 / 0.2e1 - t217 * t210 + t221 * t210 / 0.2e1;
	t225 = sin(qJ(3));
	t229 = t97 * t117 - t195 * t210;
	t230 = qJD(3) * t229;
	t231 = cos(qJ(3));
	t258 = t189 * t31 + t195 * t94 - 0.2e1 * t200 * t103 + 0.2e1 * t207 * t204 * t108 - t213 * t117 / 0.2e1 + t217 * t117 - t221 * t117 / 0.2e1 + t63 * t186 + t97 * t192 - 0.2e1 * t105 * t198 + 0.2e1 * t114 * t110 * t203 - t155 * t210 / 0.2e1 + t160 * t210 / 0.2e1 - t183 * t210 / 0.2e1;
	t262 = t195 * t117 + t97 * t210;
	t263 = qJD(3) * t262;
	t265 = -t225 * t224 - t225 * t263 - t231 * t230 + t231 * t258;
	t266 = cos(qJ(4));
	t271 = qJD(4) * (-t225 * t229 + t231 * t262);
	t272 = sin(qJ(4));
	t274 = t65 * qJD(1);
	t275 = t272 * t274;
	t276 = qJD(4) * t1;
	t277 = t266 * t276;
	t279 = -qJ(2) - pkin(6) - pkin(3);
	t281 = -qJ(2) - pkin(6) + pkin(3);
	t283 = -0.2e1 * t281 * t12 - 0.2e1 * t16 * t279;
	t287 = t283 * t70 / 0.2e1 + 0.2e1 * t23 * t21;
	t288 = 0.1e1 / t23;
	t289 = t288 * t287;
	t291 = t33 * t30;
	t292 = t33 * t289 - t291;
	t293 = 0.1e1 / t42;
	t294 = t293 * t292;
	t296 = 0.1e1 / t43;
	t298 = t296 * t34 + 0.1e1;
	t299 = 0.1e1 / t298;
	t300 = t299 * t32 * t23;
	t302 = t283 * pkin(1);
	t306 = -t302 * t136 / 0.2e1 + 0.2e1 * t23 * t5;
	t307 = t288 * t306;
	t309 = t33 * t133;
	t310 = t33 * t307 - t309;
	t311 = t28 * t310;
	t312 = t23 * t311;
	t313 = t296 * t32;
	t314 = t299 * t313;
	t316 = t300 * t294 - t314 * t312;
	t317 = t316 * t1;
	t318 = t101 * t42;
	t319 = t33 * t318;
	t320 = t319 * t317;
	t323 = t28 * t1;
	t324 = t48 * t102;
	t325 = t324 * t323;
	t326 = t50 * t29;
	t328 = t50 * t288;
	t329 = t283 * t69;
	t332 = -t18 * t326 + t329 * t328 / 0.2e1;
	t333 = 0.1e1 / t55;
	t334 = t333 * t332;
	t336 = 0.1e1 / t56;
	t338 = -t336 * t17 + 0.1e1;
	t339 = 0.1e1 / t338;
	t340 = t339 * pkin(3) * t23;
	t345 = 0.2e1 * t50 * t288 * t23 - t50 * t172;
	t347 = pkin(3) * t23 * t345;
	t348 = t336 * t18;
	t349 = t339 * t348;
	t351 = t340 * t334 - t349 * t347;
	t352 = t55 * t351;
	t353 = t199 * t352;
	t356 = t291 * t274;
	t357 = t351 * t48;
	t358 = t188 * t357;
	t360 = t28 * t316;
	t361 = t29 * t360;
	t362 = t361 * t274;
	t364 = t309 * t274;
	t365 = t62 * t357;
	t367 = t42 * t316;
	t368 = t29 * t367;
	t369 = t368 * t274;
	t371 = t291 * t317;
	t374 = t69 * pkin(1);
	t375 = t283 * t374;
	t379 = -0.1e1 / t18 / t17;
	t380 = t379 * t5;
	t390 = 0.2e1 * qJD(2) * t12 + 0.2e1 * t16 * qJD(2) - 0.2e1 * t80 * t279 - 0.2e1 * t281 * t76;
	t401 = qJD(2) * t33;
	t406 = t29 * t91;
	t407 = t33 * t406;
	t408 = t101 * t28;
	t411 = t37 * t30;
	t420 = t143 * t299 * t32;
	t423 = t299 * t32 * qJD(2);
	t425 = qJD(5) * t23;
	t428 = t299 * pkin(2) * t21;
	t432 = t298 ^ 2;
	t433 = 0.1e1 / t432;
	t438 = 0.1e1 / t43 / t42;
	t441 = -t143 * t438 * t34 + t91 * t296 * t28;
	t442 = 0.2e1 * t441 * t433 * t32;
	t446 = t379 * t20;
	t465 = t29 * t143;
	t466 = t33 * t465;
	t469 = t37 * t133;
	t484 = t299 * t296 * pkin(2) * t21;
	t489 = t143 * t299 * t438 * t32;
	t493 = 0.2e1 * t441 * t433 * t313;
	t495 = t300 * t293 * (t33 * t288 * (-t375 * t66 / 0.2e1 - t82 * t283 * t380 / 0.4e1 + t390 * t70 / 0.2e1 - 0.2e1 * t23 * t3 * t85 + 0.2e1 * qJD(2) * t21) - t401 * t29 * t287 + 0.2e1 * t72 * t37 * t289 - t407 + 0.2e1 * t401 * t408 - 0.2e1 * t72 * t411) - t420 * t23 * t296 * t292 + t423 * t294 - 0.2e1 * t428 * t425 * t294 - t442 * t23 * t294 - t314 * t23 * t28 * (t33 * t288 * (t375 * t134 / 0.2e1 + t82 * t302 * t446 / 0.4e1 - t390 * pkin(1) * t136 / 0.2e1 - 0.2e1 * t23 * pkin(1) * t66 + 0.2e1 * qJD(2) * t5) - t401 * t29 * t306 + 0.2e1 * t72 * t37 * t307 - t466 + 0.2e1 * t401 * t318 - 0.2e1 * t72 * t469) - t314 * t23 * t91 * t310 - t314 * qJD(2) * t311 + 0.2e1 * t484 * t425 * t311 + 0.2e1 * t489 * t312 + t493 * t312;
	t496 = t495 * t1;
	t497 = t30 * t496;
	t499 = t406 * t317;
	t501 = t30 * t317;
	t503 = 0.2e1 * t61 * t50 * t173;
	t504 = t503 * t49;
	t507 = t93 * t143 * t1;
	t509 = t42 * t1;
	t510 = t93 * t509;
	t540 = t338 ^ 2;
	t541 = 0.1e1 / t540;
	t546 = 0.1e1 / t56 / t55;
	t550 = 0.4e1 * t173 * t546 * t17 - t336 * t77 - t336 * t81;
	t557 = qJD(2) * t50;
	t573 = t82 * t339 * t336 * t69;
	t578 = 0.2e1 * t173 * t339 * t546 * t18;
	t582 = t550 * t541 * t348;
	t584 = t340 * t333 * (0.2e1 * qJD(2) * t18 * t50 * t101 - t82 * t69 * t326 / 0.2e1 - qJD(2) * t329 * t326 / 0.2e1 - t82 * t283 * t379 * t328 / 0.4e1 + t390 * t69 * t328 / 0.2e1) - 0.2e1 * t173 * t339 * pkin(3) * t23 * t336 * t332 + t339 * pkin(3) * qJD(2) * t334 - t550 * t541 * pkin(3) * t23 * t334 - t349 * pkin(3) * t23 * (0.2e1 * t50 * t288 * qJD(2) + 0.2e1 * t557 * t101 * t55 - 0.2e1 * t50 * t29 * t173 - 0.2e1 * t557 * t29 * t23) - t349 * pkin(3) * qJD(2) * t345 - t573 * t347 / 0.2e1 + 0.2e1 * t578 * t347 + t582 * t347;
	t585 = t584 * t48;
	t586 = t62 * t585;
	t588 = t133 * t496;
	t590 = t465 * t317;
	t593 = t93 * t91 * t1;
	t595 = t93 * t323;
	t596 = t188 * t585;
	t598 = 0.2e1 * t105 * t320 + 0.2e1 * t353 * t325 + t358 * t356 + t189 * t362 + t365 * t364 + t63 * t369 + t213 * t371 / 0.2e1 - t189 * t497 - t189 * t499 - t504 * t501 - t365 * t507 - t586 * t510 - t63 * t588 - t63 * t590 - t358 * t593 - t596 * t595;
	t601 = t119 * t93;
	t602 = t601 * t509;
	t603 = t50 * t351;
	t604 = t154 * t603;
	t607 = t48 * t93;
	t608 = t607 * t509;
	t609 = t159 * t603;
	t612 = t182 * t603;
	t615 = t309 * t317;
	t622 = t601 * t323;
	t623 = t212 * t352;
	t626 = t607 * t323;
	t627 = t220 * t352;
	t630 = t33 * t408;
	t631 = t630 * t317;
	t634 = t324 * t509;
	t635 = t104 * t603;
	t640 = t48 * t37 * t29;
	t641 = t640 * t42 * t317;
	t642 = t72 * t62;
	t645 = t29 * t323;
	t646 = t351 * t109;
	t647 = t646 * t645;
	t648 = t72 * t188;
	t652 = t640 * t28 * t317;
	t655 = t29 * t509;
	t656 = t646 * t655;
	t659 = t503 * t357;
	t661 = t221 * t371 / 0.2e1 + t604 * t602 / 0.2e1 - t609 * t608 / 0.2e1 + t612 * t608 / 0.2e1 + t155 * t615 / 0.2e1 - t160 * t615 / 0.2e1 + t183 * t615 / 0.2e1 + t623 * t622 / 0.2e1 + t627 * t626 / 0.2e1 + 0.2e1 * t200 * t631 + 0.2e1 * t635 * t634 - 0.2e1 * t642 * t641 - 0.2e1 * t648 * t647 - 0.2e1 * t648 * t652 - 0.2e1 * t642 * t656 - t659 * t595;
	t662 = t661 + t598;
	t664 = t133 * t317;
	t669 = -t189 * t501 - t358 * t595 - t365 * t510 - t63 * t664;
	t670 = qJD(3) * t669;
	t691 = t189 * t369 - t189 * t588 - t189 * t590 + 0.2e1 * t200 * t320 - 0.2e1 * t635 * t325 + 0.2e1 * t353 * t634 - t365 * t356 - t358 * t507 - t63 * t362 + t365 * t593 + t63 * t497 + t63 * t499 - t504 * t664 - t596 * t510 - t659 * t510 + t586 * t595;
	t723 = t358 * t364 - 0.2e1 * t648 * t641 + 0.2e1 * t642 * t647 + 0.2e1 * t642 * t652 - 0.2e1 * t648 * t656 - t155 * t371 / 0.2e1 + t160 * t371 / 0.2e1 - t183 * t371 / 0.2e1 + t623 * t602 / 0.2e1 + t627 * t608 / 0.2e1 + t213 * t615 / 0.2e1 + t221 * t615 / 0.2e1 - t604 * t622 / 0.2e1 + t609 * t626 / 0.2e1 - t612 * t626 / 0.2e1 - 0.2e1 * t105 * t631;
	t724 = t723 + t691;
	t730 = -t189 * t664 - t358 * t510 + t365 * t595 + t63 * t501;
	t731 = qJD(3) * t730;
	t733 = -t225 * t662 - t225 * t731 - t231 * t670 + t231 * t724;
	t738 = qJD(4) * (-t225 * t669 + t231 * t730);
	t741 = t30 * t274;
	t744 = t102 * t323;
	t756 = t133 * t274;
	t759 = t102 * t509;
	t770 = t63 * t741 - t97 * t593 + 0.2e1 * t105 * t744 - 0.2e1 * t114 * t110 * t645 + t155 * t595 / 0.2e1 - t160 * t595 / 0.2e1 + t183 * t595 / 0.2e1 - t189 * t756 + t195 * t507 - 0.2e1 * t200 * t759 + 0.2e1 * t207 * t204 * t655 - t213 * t510 / 0.2e1 + t217 * t510 - t221 * t510 / 0.2e1;
	t774 = t195 * t510 - t97 * t595;
	t775 = qJD(3) * t774;
	t802 = t189 * t741 - t195 * t593 + 0.2e1 * t200 * t744 - 0.2e1 * t207 * t204 * t645 + t213 * t595 / 0.2e1 - t217 * t595 + t221 * t595 / 0.2e1 + t63 * t756 - t97 * t507 + 0.2e1 * t105 * t759 - 0.2e1 * t114 * t110 * t655 + t155 * t510 / 0.2e1 - t160 * t510 / 0.2e1 + t183 * t510 / 0.2e1;
	t806 = -t195 * t595 - t97 * t510;
	t807 = qJD(3) * t806;
	t809 = t225 * t775 - t225 * t802 - t231 * t770 - t231 * t807;
	t814 = qJD(4) * (-t225 * t806 - t231 * t774);
	t821 = -t225 * t770 - t225 * t807 - t231 * t775 + t231 * t802;
	t826 = qJD(4) * (-t225 * t774 + t231 * t806);
	t829 = qJD(4) * t65;
	t831 = -t266 * t2 + t266 * t826 + t272 * t821 + t272 * t829;
	t836 = t16 * pkin(2) * t21 + t71 * t20 * t12;
	t837 = 0.2e1 * t836 * t69;
	t838 = t339 * t333;
	t843 = t838 * t837 / 0.2e1 - 0.2e1 * t349 * t113;
	t844 = t843 * t48;
	t845 = t188 * t844;
	t859 = t80 * pkin(2) * t21 - t6 * qJD(5) * t12 - t16 * t71 * t134 + t71 * t20 * t76;
	t863 = t339 * t336;
	t881 = -t82 * t838 * t836 * t379 / 0.2e1 + t838 * t859 * t69 - t173 * t863 * t837 - t550 * t541 * t333 * t837 / 0.2e1 + 0.2e1 * t863 * t18 * pkin(2) * pkin(1) * t134 - t573 * t113 + 0.4e1 * t578 * t113 + 0.2e1 * t582 * t113;
	t882 = t881 * t48;
	t883 = t188 * t882;
	t885 = t503 * t844;
	t887 = 0.2e1 * t836 * t374;
	t907 = t20 ^ 2;
	t908 = t907 * t8;
	t911 = -0.2e1 * pkin(2) * t908 - t26 * t4 + t836 * t70 - t40;
	t914 = t288 * t911;
	t923 = pkin(2) * qJD(2) * t21;
	t926 = t288 * t28;
	t929 = qJD(5) * t22 * t908;
	t932 = t37 * t926;
	t933 = t71 * t134;
	t942 = 0.2e1 * t113 * t932 + t33 * t914;
	t946 = t293 * t942;
	t958 = 0.2e1 * t836 * pkin(1);
	t982 = pkin(1) * t18 * t3 - t958 * t136 / 0.2e1 - t27 - 0.2e1 * t71 * t20 * t5;
	t985 = t288 * t982;
	t995 = t288 * t42;
	t999 = t37 * t995;
	t1009 = 0.2e1 * t113 * t999 + t33 * t985;
	t1013 = t28 * t1009;
	t1019 = t23 * t1013;
	t1023 = t300 * t293 * (t33 * t288 * (t135 - t139 - t887 * t66 / 0.2e1 - t82 * t836 * t380 / 0.2e1 + t859 * t70 - t141 - 0.2e1 * t89 * t4 + 0.4e1 * t3 * qJD(5) * pkin(2) * t20 * t8) - t401 * t29 * t911 + 0.2e1 * t72 * t37 * t914 + 0.2e1 * t113 * t37 * t288 * t91 - 0.2e1 * t923 * t411 + 0.8e1 * t929 * t129 * t926 - 0.2e1 * t933 * t932) - t420 * t23 * t296 * t942 + t423 * t946 - 0.2e1 * t428 * t425 * t946 - t442 * t23 * t946 - t314 * t23 * t28 * (t33 * t288 * (t68 + t137 * t69 * t3 / 0.2e1 + t887 * t134 / 0.2e1 + t82 * t958 * t446 / 0.4e1 - t859 * pkin(1) * t136 + t87 - t90 + 0.2e1 * pkin(2) * t8 * t907 * qJD(5) + 0.2e1 * t6 * qJD(5) * t5) - t401 * t29 * t982 + 0.2e1 * t72 * t37 * t985 + 0.2e1 * t113 * t37 * t288 * t143 - 0.2e1 * t923 * t469 + 0.8e1 * t929 * t129 * t995 - 0.2e1 * t933 * t999) - t314 * t23 * t91 * t1009 - t314 * qJD(2) * t1013 + 0.2e1 * t484 * t425 * t1013 + 0.2e1 * t489 * t1019 + t493 * t1019;
	t1024 = t1023 * t1;
	t1025 = t30 * t1024;
	t1029 = -t314 * t1019 + t300 * t946;
	t1030 = t1029 * t1;
	t1031 = t406 * t1030;
	t1033 = t30 * t1030;
	t1035 = t62 * t844;
	t1037 = t62 * t882;
	t1039 = t133 * t1024;
	t1041 = t465 * t1030;
	t1043 = t291 * t1030;
	t1046 = t50 * t843;
	t1047 = t154 * t1046;
	t1050 = t159 * t1046;
	t1053 = t182 * t1046;
	t1056 = t309 * t1030;
	t1061 = -t845 * t593 - t883 * t595 - t885 * t595 - t189 * t1025 - t189 * t1031 - t504 * t1033 - t1035 * t507 - t1037 * t510 - t63 * t1039 - t63 * t1041 + t221 * t1043 / 0.2e1 + t1047 * t602 / 0.2e1 - t1050 * t608 / 0.2e1 + t1053 * t608 / 0.2e1 + t155 * t1056 / 0.2e1 - t160 * t1056 / 0.2e1;
	t1064 = t55 * t843;
	t1065 = t212 * t1064;
	t1068 = t220 * t1064;
	t1074 = t28 * t1029;
	t1075 = t29 * t1074;
	t1076 = t1075 * t274;
	t1079 = t104 * t1046;
	t1082 = t319 * t1030;
	t1085 = t199 * t1064;
	t1088 = t630 * t1030;
	t1091 = t42 * t1029;
	t1092 = t29 * t1091;
	t1093 = t1092 * t274;
	t1096 = t640 * t42 * t1030;
	t1099 = t843 * t109;
	t1100 = t1099 * t645;
	t1104 = t640 * t28 * t1030;
	t1107 = t1099 * t655;
	t1110 = t183 * t1056 / 0.2e1 + t1065 * t622 / 0.2e1 + t1068 * t626 / 0.2e1 + t213 * t1043 / 0.2e1 + t845 * t356 + t189 * t1076 + t1035 * t364 + 0.2e1 * t1079 * t634 + 0.2e1 * t105 * t1082 + 0.2e1 * t1085 * t325 + 0.2e1 * t200 * t1088 + t63 * t1093 - 0.2e1 * t642 * t1096 - 0.2e1 * t648 * t1100 - 0.2e1 * t648 * t1104 - 0.2e1 * t642 * t1107;
	t1111 = t1110 + t1061;
	t1113 = t133 * t1030;
	t1118 = -t189 * t1033 - t1035 * t510 - t63 * t1113 - t845 * t595;
	t1119 = qJD(3) * t1118;
	t1149 = t1050 * t626 / 0.2e1 - t1053 * t626 / 0.2e1 - t155 * t1043 / 0.2e1 + t160 * t1043 / 0.2e1 - t183 * t1043 / 0.2e1 + t1065 * t602 / 0.2e1 + t189 * t1093 - t1035 * t356 - t63 * t1076 + t845 * t364 + 0.2e1 * t200 * t1082 - 0.2e1 * t1079 * t325 - 0.2e1 * t105 * t1088 + 0.2e1 * t1085 * t634 + t1068 * t608 / 0.2e1 + t213 * t1056 / 0.2e1;
	t1172 = t221 * t1056 / 0.2e1 + 0.2e1 * t642 * t1100 + 0.2e1 * t642 * t1104 - 0.2e1 * t648 * t1107 - t1047 * t622 / 0.2e1 + t63 * t1031 - t845 * t507 - t883 * t510 - t885 * t510 - t189 * t1039 - t189 * t1041 - t504 * t1113 + t1035 * t593 + t1037 * t595 + t63 * t1025 - 0.2e1 * t648 * t1096;
	t1173 = t1172 + t1149;
	t1179 = t63 * t1033 + t1035 * t595 - t189 * t1113 - t845 * t510;
	t1180 = qJD(3) * t1179;
	t1182 = -t225 * t1111 - t231 * t1119 + t231 * t1173 - t225 * t1180;
	t1187 = qJD(4) * (-t225 * t1118 + t231 * t1179);
	t1194 = -t272 * t2 - t266 * t821 - t266 * t829 + t272 * t826;
	t1198 = t495 * t65;
	t1199 = t30 * t1198;
	t1201 = t316 * t65;
	t1202 = t406 * t1201;
	t1204 = t30 * t1201;
	t1208 = t601 * t197;
	t1211 = t607 * t197;
	t1216 = t319 * t1201;
	t1219 = t368 * t2;
	t1221 = t291 * t2;
	t1223 = t361 * t2;
	t1225 = t309 * t2;
	t1227 = -t358 * t94 - t596 * t117 - t659 * t117 - t189 * t1199 - t189 * t1202 - t504 * t1204 - t365 * t192 - t586 * t210 + t604 * t1208 / 0.2e1 - t609 * t1211 / 0.2e1 + t612 * t1211 / 0.2e1 + 0.2e1 * t105 * t1216 - t63 * t1219 - t358 * t1221 - t189 * t1223 - t365 * t1225;
	t1228 = t324 * t99;
	t1231 = t630 * t1201;
	t1234 = t324 * t197;
	t1237 = t133 * t1198;
	t1239 = t465 * t1201;
	t1242 = t640 * t42 * t1201;
	t1245 = t646 * t108;
	t1249 = t640 * t28 * t1201;
	t1252 = t646 * t203;
	t1255 = t309 * t1201;
	t1262 = t601 * t99;
	t1265 = t607 * t99;
	t1268 = t291 * t1201;
	t1273 = 0.2e1 * t353 * t1228 + 0.2e1 * t200 * t1231 + 0.2e1 * t635 * t1234 - t63 * t1237 - t63 * t1239 - 0.2e1 * t642 * t1242 - 0.2e1 * t648 * t1245 - 0.2e1 * t648 * t1249 - 0.2e1 * t642 * t1252 + t155 * t1255 / 0.2e1 - t160 * t1255 / 0.2e1 + t183 * t1255 / 0.2e1 + t623 * t1262 / 0.2e1 + t627 * t1265 / 0.2e1 + t213 * t1268 / 0.2e1 + t221 * t1268 / 0.2e1;
	t1274 = t1273 + t1227;
	t1276 = t133 * t1201;
	t1281 = -t358 * t117 - t189 * t1204 - t63 * t1276 - t365 * t210;
	t1282 = qJD(3) * t1281;
	t1306 = -t189 * t1237 - t189 * t1239 - t504 * t1276 + t365 * t94 + t586 * t117 + t63 * t1199 + t63 * t1202 - t358 * t192 - t596 * t210 - t659 * t210 + t609 * t1265 / 0.2e1 - t612 * t1265 / 0.2e1 - t155 * t1268 / 0.2e1 + t160 * t1268 / 0.2e1 - t183 * t1268 / 0.2e1 + t623 * t1208 / 0.2e1;
	t1335 = t627 * t1211 / 0.2e1 + t213 * t1255 / 0.2e1 + t221 * t1255 / 0.2e1 - t604 * t1262 / 0.2e1 + 0.2e1 * t200 * t1216 - 0.2e1 * t635 * t1228 - 0.2e1 * t648 * t1242 + 0.2e1 * t642 * t1245 + 0.2e1 * t642 * t1249 - 0.2e1 * t648 * t1252 - 0.2e1 * t105 * t1231 + 0.2e1 * t353 * t1234 - t189 * t1219 + t365 * t1221 + t63 * t1223 - t358 * t1225;
	t1336 = t1335 + t1306;
	t1342 = t365 * t117 + t63 * t1204 - t189 * t1276 - t358 * t210;
	t1343 = qJD(3) * t1342;
	t1345 = -t225 * t1274 - t231 * t1282 + t231 * t1336 - t225 * t1343;
	t1350 = qJD(4) * (-t225 * t1281 + t231 * t1342);
	t1354 = -qJD(3) * t229;
	t1357 = -qJD(3) * t262;
	t1359 = t225 * t1354 - t231 * t1357 + t231 * t224 + t225 * t258;
	t1364 = qJD(4) * (t225 * t262 + t231 * t229);
	t1371 = -t231 * t1354 - t225 * t1357 + t225 * t224 - t231 * t258;
	t1376 = qJD(4) * (t225 * t229 - t231 * t262);
	t1378 = t266 * t274;
	t1379 = t272 * t276;
	t1381 = t1029 * t65;
	t1382 = t309 * t1381;
	t1389 = t291 * t1381;
	t1393 = t1092 * t2;
	t1396 = t640 * t42 * t1381;
	t1399 = t1099 * t108;
	t1403 = t640 * t28 * t1381;
	t1406 = t1099 * t203;
	t1409 = t465 * t1381;
	t1414 = t1023 * t65;
	t1415 = t30 * t1414;
	t1417 = t406 * t1381;
	t1419 = t183 * t1382 / 0.2e1 + t1065 * t1262 / 0.2e1 + t1068 * t1265 / 0.2e1 + t213 * t1389 / 0.2e1 - t1035 * t1225 - t63 * t1393 - 0.2e1 * t642 * t1396 - 0.2e1 * t648 * t1399 - 0.2e1 * t648 * t1403 - 0.2e1 * t642 * t1406 - t63 * t1409 - t845 * t94 - t883 * t117 - t885 * t117 - t189 * t1415 - t189 * t1417;
	t1420 = t30 * t1381;
	t1424 = t133 * t1414;
	t1427 = t1075 * t2;
	t1429 = t319 * t1381;
	t1434 = t630 * t1381;
	t1451 = -t504 * t1420 - t1035 * t192 - t1037 * t210 - t63 * t1424 - t845 * t1221 - t189 * t1427 + 0.2e1 * t105 * t1429 + 0.2e1 * t1085 * t1228 + 0.2e1 * t200 * t1434 + 0.2e1 * t1079 * t1234 + t221 * t1389 / 0.2e1 + t1047 * t1208 / 0.2e1 - t1050 * t1211 / 0.2e1 + t1053 * t1211 / 0.2e1 + t155 * t1382 / 0.2e1 - t160 * t1382 / 0.2e1;
	t1452 = t1451 + t1419;
	t1454 = t133 * t1381;
	t1459 = -t1035 * t210 - t845 * t117 - t189 * t1420 - t63 * t1454;
	t1460 = qJD(3) * t1459;
	t1490 = 0.2e1 * t642 * t1399 + 0.2e1 * t642 * t1403 - 0.2e1 * t648 * t1406 - t845 * t1225 - t189 * t1393 + t1035 * t1221 + t63 * t1427 + 0.2e1 * t200 * t1429 - 0.2e1 * t1079 * t1228 - 0.2e1 * t105 * t1434 + 0.2e1 * t1085 * t1234 - t1047 * t1262 / 0.2e1 + t1050 * t1265 / 0.2e1 - t1053 * t1265 / 0.2e1 - t155 * t1389 / 0.2e1 + t160 * t1389 / 0.2e1;
	t1513 = -t183 * t1389 / 0.2e1 - 0.2e1 * t648 * t1396 - t189 * t1424 + t1065 * t1208 / 0.2e1 + t1068 * t1211 / 0.2e1 + t213 * t1382 / 0.2e1 + t221 * t1382 / 0.2e1 - t189 * t1409 - t504 * t1454 + t1035 * t94 + t1037 * t117 + t63 * t1415 + t63 * t1417 - t845 * t192 - t883 * t210 - t885 * t210;
	t1514 = t1513 + t1490;
	t1520 = t1035 * t117 + t63 * t1420 - t189 * t1454 - t845 * t210;
	t1521 = qJD(3) * t1520;
	t1523 = -t225 * t1452 - t231 * t1460 + t231 * t1514 - t225 * t1521;
	t1528 = qJD(4) * (-t225 * t1459 + t231 * t1520);
	t1534 = t50 * t357;
	t1541 = t55 * t357;
	t1545 = t49 * t133;
	t1548 = t93 * t367;
	t1553 = t119 * t33;
	t1554 = t1553 * t30;
	t1557 = t49 * t30;
	t1562 = t93 * t360;
	t1569 = t1553 * t133;
	t1572 = 0.2e1 * t207 * t204 * t368 - 0.2e1 * t114 * t1534 * t411 - 0.2e1 * t114 * t110 * t361 + 0.2e1 * t207 * t1541 * t469 - t627 * t1545 / 0.2e1 - t213 * t1548 / 0.2e1 - t221 * t1548 / 0.2e1 + t604 * t1554 / 0.2e1 - t609 * t1557 / 0.2e1 + t612 * t1557 / 0.2e1 + t155 * t1562 / 0.2e1 - t160 * t1562 / 0.2e1 + t183 * t1562 / 0.2e1 - t623 * t1569 / 0.2e1;
	t1573 = t102 * t367;
	t1576 = t49 * t408;
	t1579 = t102 * t360;
	t1582 = t49 * t318;
	t1586 = t96 * t50 * t584;
	t1589 = t93 * t28 * t495;
	t1592 = t93 * t91 * t316;
	t1594 = t49 * t465;
	t1595 = t194 * t352;
	t1598 = t194 * t55 * t584;
	t1601 = 0.2e1 * t194 * t173 * t351;
	t1604 = t93 * t42 * t495;
	t1607 = t93 * t143 * t316;
	t1610 = t49 * t406;
	t1611 = t96 * t603;
	t1613 = 0.2e1 * t105 * t1579 + t1598 * t1545 + t1601 * t1545 + t217 * t1548 - t1586 * t1557 - 0.2e1 * t200 * t1573 + 0.2e1 * t635 * t1576 - 0.2e1 * t353 * t1582 - t97 * t1589 - t97 * t1592 + t1595 * t1594 + t195 * t1604 + t195 * t1607 - t1611 * t1610;
	t1614 = t1613 + t1572;
	t1620 = t1595 * t1545 + t195 * t1548 - t1611 * t1557 - t97 * t1562;
	t1621 = qJD(3) * t1620;
	t1653 = -0.2e1 * t207 * t204 * t361 + t604 * t1569 / 0.2e1 - t609 * t1545 / 0.2e1 + t612 * t1545 / 0.2e1 + t155 * t1548 / 0.2e1 - t160 * t1548 / 0.2e1 + t183 * t1548 / 0.2e1 + t623 * t1554 / 0.2e1 + t627 * t1557 / 0.2e1 + 0.2e1 * t200 * t1579 + 0.2e1 * t635 * t1582 + 0.2e1 * t105 * t1573 + 0.2e1 * t353 * t1576 - 0.2e1 * t114 * t1534 * t469;
	t1674 = -0.2e1 * t114 * t110 * t368 - 0.2e1 * t207 * t1541 * t411 + t213 * t1562 / 0.2e1 + t221 * t1562 / 0.2e1 - t1586 * t1545 - t97 * t1604 - t97 * t1607 - t1595 * t1610 - t1598 * t1557 - t1601 * t1557 - t195 * t1589 - t195 * t1592 - t217 * t1562 - t1611 * t1594;
	t1675 = t1674 + t1653;
	t1681 = -t1611 * t1545 - t97 * t1548 - t1595 * t1557 - t195 * t1562;
	t1682 = qJD(3) * t1681;
	t1684 = -t225 * t1614 - t231 * t1621 + t231 * t1675 - t225 * t1682;
	t1689 = qJD(4) * (-t225 * t1620 + t231 * t1681);
	t1693 = qJD(2) * t61;
	t1694 = t1693 * t51;
	t1700 = t153 * t61;
	t1701 = t1700 * t51;
	t1706 = t82 * t61 * t69 * t50;
	t1709 = t181 * t164;
	t1710 = t1709 * t51;
	t1714 = t1693 * t187;
	t1720 = t1700 * t187;
	t1724 = t1709 * t187;
	t1727 = t97 * t466 - 0.2e1 * t1694 * t1582 + 0.2e1 * t114 * t110 * t133 - t1701 * t1569 / 0.2e1 + t1706 * t1545 / 0.2e1 - t1710 * t1545 / 0.2e1 + t195 * t407 - 0.2e1 * t1714 * t1576 + 0.2e1 * t207 * t204 * t30 - t1720 * t1554 / 0.2e1 + t217 * t291 - t1724 * t1557 / 0.2e1;
	t1731 = t195 * t291 + t97 * t309;
	t1732 = qJD(3) * t1731;
	t1757 = t195 * t466 - 0.2e1 * t1714 * t1582 + 0.2e1 * t207 * t204 * t133 - t1720 * t1569 / 0.2e1 + t217 * t309 - t1724 * t1545 / 0.2e1 - t97 * t407 + 0.2e1 * t1694 * t1576 - 0.2e1 * t114 * t110 * t30 + t1701 * t1554 / 0.2e1 - t1706 * t1557 / 0.2e1 + t1710 * t1557 / 0.2e1;
	t1761 = t195 * t309 - t97 * t291;
	t1762 = qJD(3) * t1761;
	t1764 = -t231 * t1727 + t225 * t1732 - t225 * t1757 - t231 * t1762;
	t1769 = qJD(4) * (-t231 * t1731 - t225 * t1761);
	t1776 = -t225 * t1727 - t231 * t1732 + t231 * t1757 - t225 * t1762;
	t1781 = qJD(4) * (-t225 * t1731 + t231 * t1761);
	t1784 = t55 * t844;
	t1791 = t50 * t844;
	t1798 = t93 * t1074;
	t1809 = t93 * t1091;
	t1820 = 0.2e1 * t207 * t1784 * t469 + 0.2e1 * t207 * t204 * t1092 - 0.2e1 * t114 * t1791 * t411 - 0.2e1 * t114 * t110 * t1075 + t155 * t1798 / 0.2e1 - t160 * t1798 / 0.2e1 + t183 * t1798 / 0.2e1 - t1065 * t1569 / 0.2e1 - t1068 * t1545 / 0.2e1 - t213 * t1809 / 0.2e1 - t221 * t1809 / 0.2e1 + t1047 * t1554 / 0.2e1 - t1050 * t1557 / 0.2e1 + t1053 * t1557 / 0.2e1;
	t1821 = t102 * t1074;
	t1826 = t102 * t1091;
	t1831 = t96 * t1046;
	t1834 = t96 * t50 * t881;
	t1837 = t93 * t28 * t1023;
	t1840 = t93 * t91 * t1029;
	t1842 = t194 * t1064;
	t1845 = t194 * t55 * t881;
	t1848 = 0.2e1 * t194 * t173 * t843;
	t1851 = t93 * t42 * t1023;
	t1854 = t93 * t143 * t1029;
	t1857 = 0.2e1 * t105 * t1821 + 0.2e1 * t1079 * t1576 - 0.2e1 * t1085 * t1582 + t1845 * t1545 + t1848 * t1545 - t1834 * t1557 + t1842 * t1594 - t1831 * t1610 + t217 * t1809 - 0.2e1 * t200 * t1826 - t97 * t1837 - t97 * t1840 + t195 * t1851 + t195 * t1854;
	t1858 = t1857 + t1820;
	t1864 = t1842 * t1545 - t1831 * t1557 - t97 * t1798 + t195 * t1809;
	t1865 = qJD(3) * t1864;
	t1899 = 0.2e1 * t200 * t1821 + 0.2e1 * t1079 * t1582 - 0.2e1 * t207 * t204 * t1075 - 0.2e1 * t114 * t1791 * t469 - 0.2e1 * t114 * t110 * t1092 - 0.2e1 * t207 * t1784 * t411 + 0.2e1 * t105 * t1826 + 0.2e1 * t1085 * t1576 + t1053 * t1545 / 0.2e1 + t155 * t1809 / 0.2e1 - t160 * t1809 / 0.2e1 + t183 * t1809 / 0.2e1 + t1065 * t1554 / 0.2e1 + t1068 * t1557 / 0.2e1;
	t1918 = t213 * t1798 / 0.2e1 + t221 * t1798 / 0.2e1 + t1047 * t1569 / 0.2e1 - t1050 * t1545 / 0.2e1 - t1831 * t1594 - t1834 * t1545 - t97 * t1851 - t97 * t1854 - t1842 * t1610 - t1845 * t1557 - t1848 * t1557 - t195 * t1837 - t195 * t1840 - t217 * t1798;
	t1919 = t1918 + t1899;
	t1925 = -t1831 * t1545 - t1842 * t1557 - t195 * t1798 - t97 * t1809;
	t1926 = qJD(3) * t1925;
	t1928 = -t225 * t1858 - t231 * t1865 + t231 * t1919 - t225 * t1926;
	t1933 = qJD(4) * (-t225 * t1864 + t231 * t1925);
	unknown(1,1) = -t266 * t265 + t272 * t271 + t275 - t277;
	unknown(1,2) = -t266 * t733 + t272 * t738;
	unknown(1,3) = -t266 * t809 + t272 * t814;
	unknown(1,4) = t831;
	unknown(1,5) = -t266 * t1182 + t272 * t1187;
	unknown(2,1) = t1194;
	unknown(2,2) = -t266 * t1345 + t272 * t1350;
	unknown(2,3) = -t266 * t1359 + t272 * t1364;
	unknown(2,4) = t272 * t1371 + t266 * t1376 - t1378 - t1379;
	unknown(2,5) = -t266 * t1523 + t272 * t1528;
	unknown(3,1) = 0.0e0;
	unknown(3,2) = -t266 * t1684 + t272 * t1689;
	unknown(3,3) = -t266 * t1764 + t272 * t1769;
	unknown(3,4) = t272 * t1776 + t266 * t1781;
	unknown(3,5) = -t266 * t1928 + t272 * t1933;
	unknown(4,1) = t272 * t265 + t266 * t271 + t1378 + t1379;
	unknown(4,2) = t266 * t738 + t272 * t733;
	unknown(4,3) = t266 * t814 + t272 * t809;
	unknown(4,4) = -t1194;
	unknown(4,5) = t272 * t1182 + t266 * t1187;
	unknown(5,1) = t831;
	unknown(5,2) = t272 * t1345 + t266 * t1350;
	unknown(5,3) = t272 * t1359 + t266 * t1364;
	unknown(5,4) = t266 * t1371 - t272 * t1376 + t275 - t277;
	unknown(5,5) = t272 * t1523 + t266 * t1528;
	unknown(6,1) = 0.0e0;
	unknown(6,2) = t272 * t1684 + t266 * t1689;
	unknown(6,3) = t272 * t1764 + t266 * t1769;
	unknown(6,4) = t266 * t1776 - t272 * t1781;
	unknown(6,5) = t272 * t1928 + t266 * t1933;
	unknown(7,1) = t231 * t224 - t225 * t230 + t225 * t258 + t231 * t263;
	unknown(7,2) = -t225 * t670 + t225 * t724 + t231 * t662 + t231 * t731;
	unknown(7,3) = t821;
	unknown(7,4) = 0.0e0;
	unknown(7,5) = t231 * t1111 - t225 * t1119 + t225 * t1173 + t231 * t1180;
	unknown(8,1) = -t809;
	unknown(8,2) = t231 * t1274 - t225 * t1282 + t225 * t1336 + t231 * t1343;
	unknown(8,3) = t1371;
	unknown(8,4) = 0.0e0;
	unknown(8,5) = t231 * t1452 - t225 * t1460 + t225 * t1514 + t231 * t1521;
	unknown(9,1) = 0.0e0;
	unknown(9,2) = t231 * t1614 - t225 * t1621 + t225 * t1675 + t231 * t1682;
	unknown(9,3) = t1776;
	unknown(9,4) = 0.0e0;
	unknown(9,5) = t231 * t1858 - t225 * t1865 + t225 * t1919 + t231 * t1926;
	JRD_rot = unknown;
elseif link_index == 7
	%% Symbolic Calculation
	% From jacobiRD_rot_7_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-04-11 22:24:49
	% EndTime: 2020-04-11 22:24:49
	% DurationCPUTime: 0.03s
	% Computational Cost: add. (10->8), mult. (36->14), div. (0->0), fcn. (36->4), ass. (0->57)
	unknown=NaN(9,5);
	t1 = cos(qJ(1));
	t2 = qJD(1) * t1;
	t3 = sin(qJ(5));
	t5 = sin(qJ(1));
	t6 = t5 * qJD(5);
	t7 = cos(qJ(5));
	t9 = t2 * t3 + t6 * t7;
	t10 = qJD(1) * t5;
	t12 = t1 * qJD(5);
	t14 = t10 * t7 + t12 * t3;
	t17 = t10 * t3 - t12 * t7;
	t20 = -t2 * t7 + t6 * t3;
	unknown(1,1) = t9;
	unknown(1,2) = 0.0e0;
	unknown(1,3) = 0.0e0;
	unknown(1,4) = 0.0e0;
	unknown(1,5) = t14;
	unknown(2,1) = t17;
	unknown(2,2) = 0.0e0;
	unknown(2,3) = 0.0e0;
	unknown(2,4) = 0.0e0;
	unknown(2,5) = t20;
	unknown(3,1) = 0.0e0;
	unknown(3,2) = 0.0e0;
	unknown(3,3) = 0.0e0;
	unknown(3,4) = 0.0e0;
	unknown(3,5) = -qJD(5) * t7;
	unknown(4,1) = -t20;
	unknown(4,2) = 0.0e0;
	unknown(4,3) = 0.0e0;
	unknown(4,4) = 0.0e0;
	unknown(4,5) = -t17;
	unknown(5,1) = t14;
	unknown(5,2) = 0.0e0;
	unknown(5,3) = 0.0e0;
	unknown(5,4) = 0.0e0;
	unknown(5,5) = t9;
	unknown(6,1) = 0.0e0;
	unknown(6,2) = 0.0e0;
	unknown(6,3) = 0.0e0;
	unknown(6,4) = 0.0e0;
	unknown(6,5) = qJD(5) * t3;
	unknown(7,1) = -t10;
	unknown(7,2) = 0.0e0;
	unknown(7,3) = 0.0e0;
	unknown(7,4) = 0.0e0;
	unknown(7,5) = 0.0e0;
	unknown(8,1) = t2;
	unknown(8,2) = 0.0e0;
	unknown(8,3) = 0.0e0;
	unknown(8,4) = 0.0e0;
	unknown(8,5) = 0.0e0;
	unknown(9,1) = 0.0e0;
	unknown(9,2) = 0.0e0;
	unknown(9,3) = 0.0e0;
	unknown(9,4) = 0.0e0;
	unknown(9,5) = 0.0e0;
	JRD_rot = unknown;
else
	JRD_rot=NaN(9,5);
end