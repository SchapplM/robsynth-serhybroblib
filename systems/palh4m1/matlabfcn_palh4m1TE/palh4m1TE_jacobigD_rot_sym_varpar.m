% Zeitableitung der rotatorischen Teilmatrix der geometrischen Jacobi-Matrix für beliebiges Segment von
% palh4m1TE
% Use Code from Maple symbolic Code Generation
%
% Geometrische Jacobi-Matrix: Differentieller Zusammenhang zwischen
% Endeffektorgeschwindigkeit und Geschw. der verallgemeinerten Koordinaten.
% 
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% link_index [1x1 uint8]
%   Index des Segmentes, auf dem der Punkt C liegt. (0=Basis).
%   Siehe auch: bsp_3T1R_fkine_fixb_rotmat_mdh_sym_varpar.m
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[AB,AD,CB,CE,EP,HC,OT,TA,TD]';
% 
% Output:
% JgD_rot [3x5]
%   Zeitableitung der rotatorischen Teilmatrix der geometrischen Jacobi-Matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2020-04-11 21:48
% Revision: 6ae2d958c5b90587a0d08029b131cb7b66342a68 (2020-04-11)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function JgD_rot = palh4m1TE_jacobigD_rot_sym_varpar(qJ, qJD, link_index, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),uint8(0),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'palh4m1TE_jacobigD_rot_sym_varpar: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'palh4m1TE_jacobigD_rot_sym_varpar: qJD has to be [5x1] (double)');
assert(isa(link_index,'uint8') && all(size(link_index) == [1 1]), ...
	'palh4m1TE_jacobigD_rot_sym_varpar: link_index has to be [1x1] uint8');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'palh4m1TE_jacobigD_rot_sym_varpar: pkin has to be [9x1] (double)');
if link_index == 0
	%% Symbolic Calculation
	% From jacobigD_rot_0_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-04-11 21:48:18
	% EndTime: 2020-04-11 21:48:18
	% DurationCPUTime: 0.01s
	% Computational Cost: add. (0->0), mult. (0->0), div. (0->0), fcn. (0->0), ass. (0->15)
	unknown=NaN(3,5);
	unknown(1,1) = 0;
	unknown(1,2) = 0;
	unknown(1,3) = 0;
	unknown(1,4) = 0;
	unknown(1,5) = 0;
	unknown(2,1) = 0;
	unknown(2,2) = 0;
	unknown(2,3) = 0;
	unknown(2,4) = 0;
	unknown(2,5) = 0;
	unknown(3,1) = 0;
	unknown(3,2) = 0;
	unknown(3,3) = 0;
	unknown(3,4) = 0;
	unknown(3,5) = 0;
	JgD_rot = unknown;
elseif link_index == 1
	%% Symbolic Calculation
	% From jacobigD_rot_1_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-04-11 21:48:18
	% EndTime: 2020-04-11 21:48:18
	% DurationCPUTime: 0.01s
	% Computational Cost: add. (0->0), mult. (0->0), div. (0->0), fcn. (0->0), ass. (0->15)
	unknown=NaN(3,5);
	unknown(1,1) = 0;
	unknown(1,2) = 0;
	unknown(1,3) = 0;
	unknown(1,4) = 0;
	unknown(1,5) = 0;
	unknown(2,1) = 0;
	unknown(2,2) = 0;
	unknown(2,3) = 0;
	unknown(2,4) = 0;
	unknown(2,5) = 0;
	unknown(3,1) = 0;
	unknown(3,2) = 0;
	unknown(3,3) = 0;
	unknown(3,4) = 0;
	unknown(3,5) = 0;
	JgD_rot = unknown;
elseif link_index == 2
	%% Symbolic Calculation
	% From jacobigD_rot_2_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-04-11 21:48:19
	% EndTime: 2020-04-11 21:48:19
	% DurationCPUTime: 0.29s
	% Computational Cost: add. (14840->137), mult. (15196->348), div. (452->17), fcn. (3934->6), ass. (0->145)
	unknown=NaN(3,5);
	t1 = cos(qJ(5));
	t2 = qJD(5) * t1;
	t3 = sin(qJ(5));
	t4 = t3 * pkin(1);
	t5 = t4 * pkin(2);
	t6 = 0.2e1 * t5;
	t7 = pkin(1) ^ 2;
	t8 = pkin(2) + qJ(2) + pkin(6) + pkin(3);
	t9 = pkin(2) - qJ(2) - pkin(6) - pkin(3);
	t11 = t8 * t9 - t6 + t7;
	t12 = pkin(2) + qJ(2) + pkin(6) - pkin(3);
	t13 = pkin(2) - qJ(2) - pkin(6) + pkin(3);
	t15 = t12 * t13 - t6 + t7;
	t16 = t11 * t15;
	t17 = sqrt(-t16);
	t18 = 0.1e1 / t17;
	t19 = pkin(1) * t18;
	t20 = -qJ(2) - pkin(6) - pkin(3);
	t22 = -qJ(2) - pkin(6) + pkin(3);
	t24 = -0.2e1 * t11 * t22 - 0.2e1 * t20 * t15;
	t25 = t19 * t24;
	t28 = -t4 + pkin(2);
	t30 = -0.1e1 / t17 / t16;
	t31 = t28 * t30;
	t32 = pkin(1) * pkin(2);
	t33 = t2 * t32;
	t34 = 0.2e1 * t33;
	t37 = -t8 * qJD(2) + qJD(2) * t9 - t34;
	t41 = -t12 * qJD(2) + qJD(2) * t13 - t34;
	t43 = -t11 * t41 - t37 * t15;
	t47 = t28 * t18;
	t54 = 0.2e1 * t11 * qJD(2) + 0.2e1 * qJD(2) * t15 - 0.2e1 * t20 * t41 - 0.2e1 * t37 * t22;
	t57 = pkin(1) * qJD(5);
	t58 = qJ(2) + pkin(6);
	t61 = pkin(1) * t1;
	t65 = 0.1e1 / t58;
	t67 = pkin(2) ^ 2;
	t68 = -t6 + t7 + t67;
	t69 = 0.1e1 / t68;
	t74 = t47 * t24 / 0.2e1 + 0.2e1 * t61 * t58;
	t75 = t58 ^ 2;
	t76 = 0.1e1 / t75;
	t78 = t69 * qJD(2);
	t80 = t74 * t65;
	t81 = t68 ^ 2;
	t82 = 0.1e1 / t81;
	t86 = pkin(1) * t17;
	t87 = t2 * t86;
	t90 = pkin(3) ^ 2;
	t91 = -t6 + t7 + t67 + t75 - t90;
	t93 = t57 * t3 * t91;
	t95 = t58 * qJD(2) - t33;
	t96 = 0.2e1 * t61 * t95;
	t97 = -t87 + t47 * t43 / 0.2e1 - t93 + t96;
	t101 = t61 * t91;
	t102 = t28 * t17 + t101;
	t104 = 0.1e1 / t75 / t58;
	t108 = t102 * t76;
	t109 = t108 * t82;
	t114 = t1 * t17 * pkin(1);
	t116 = t28 * t91 - t114;
	t117 = 0.1e1 / t116;
	t120 = t102 ^ 2;
	t121 = t116 ^ 2;
	t122 = 0.1e1 / t121;
	t124 = t120 * t122 + 0.1e1;
	t125 = 0.1e1 / t124;
	t126 = t58 * t68 * t125;
	t130 = -t108 * t69 + t80 * t69;
	t134 = qJD(5) * t3;
	t135 = t134 * t86;
	t136 = t1 * t18;
	t137 = pkin(1) * t43;
	t139 = t136 * t137 / 0.2e1;
	t141 = t2 * pkin(1) * t91;
	t143 = 0.2e1 * t28 * t95 + t135 - t139 - t141;
	t144 = t68 * t125 * t143;
	t146 = t130 * t117;
	t148 = qJD(2) * t68 * t125;
	t150 = t58 * qJD(5);
	t153 = t61 * pkin(2) * t125;
	t157 = t124 ^ 2;
	t158 = 0.1e1 / t157;
	t163 = 0.1e1 / t121 / t116;
	t166 = t102 * t122 * t97 - t120 * t163 * t143;
	t167 = 0.2e1 * t68 * t158 * t166;
	t171 = t1 * t30;
	t172 = pkin(1) * t24;
	t189 = -t136 * t172 / 0.2e1 + 0.2e1 * t28 * t58;
	t192 = t189 * t65;
	t201 = t116 * t76;
	t202 = t201 * t82;
	t208 = t68 * t122;
	t209 = t208 * t125;
	t213 = t192 * t69 - t201 * t69;
	t217 = t213 * t102;
	t223 = t61 * pkin(2) * t122 * t125;
	t226 = t217 * t58;
	t229 = t68 * t163 * t125 * t143;
	t233 = 0.2e1 * t208 * t158 * t166;
	t235 = ((-t2 * t25 / 0.2e1 - t31 * t24 * t43 / 0.4e1 + t47 * t54 / 0.2e1 - 0.2e1 * t57 * t3 * t58 + 0.2e1 * t61 * qJD(2)) * t65 * t69 - t74 * t76 * t78 + 0.2e1 * t80 * t82 * t33 - t97 * t76 * t69 + 0.2e1 * t102 * t104 * t78 - 0.2e1 * t109 * t33) * t117 * t126 - t130 * t122 * t58 * t144 + t146 * t148 - 0.2e1 * t146 * t150 * t153 - t146 * t58 * t167 - ((t134 * t25 / 0.2e1 + t171 * t172 * t43 / 0.4e1 - t136 * pkin(1) * t54 / 0.2e1 - 0.2e1 * t2 * pkin(1) * t58 + 0.2e1 * t28 * qJD(2)) * t65 * t69 - t189 * t76 * t78 + 0.2e1 * t192 * t82 * t33 - t143 * t76 * t69 + 0.2e1 * t116 * t104 * t78 - 0.2e1 * t202 * t33) * t102 * t58 * t209 - t213 * t97 * t58 * t209 - t217 * qJD(2) * t209 + 0.2e1 * t217 * t150 * t223 + 0.2e1 * t226 * t229 + t226 * t233;
	t236 = sin(qJ(1));
	t241 = (t146 * t126 - t226 * t209) * qJD(1);
	t242 = cos(qJ(1));
	t249 = t61 * pkin(2) * t15 + t11 * t1 * t32;
	t250 = 0.2e1 * t19 * t249;
	t264 = t61 * pkin(2) * t41 - t11 * qJD(5) * t5 + t37 * t1 * t32 - t134 * t32 * t15;
	t279 = t1 ^ 2;
	t280 = t7 * t279;
	t283 = -0.2e1 * t280 * pkin(2) + t47 * t249 - t4 * t91 - t114;
	t286 = t283 * t65;
	t292 = t61 * pkin(2);
	t296 = t61 * pkin(2) * qJD(2);
	t299 = t102 * t65;
	t301 = 0.1e1 / t81 / t68;
	t304 = t280 * t67 * qJD(5);
	t307 = t299 * t82;
	t308 = t134 * t32;
	t317 = t286 * t69 + 0.2e1 * t307 * t292;
	t321 = t317 * t117;
	t333 = 0.2e1 * pkin(1) * t249;
	t357 = t3 * t17 * pkin(1) - t136 * t333 / 0.2e1 - t101 - 0.2e1 * t28 * t1 * t32;
	t360 = t357 * t65;
	t370 = t116 * t65;
	t374 = t370 * t82;
	t384 = 0.2e1 * t374 * t292 + t360 * t69;
	t388 = t384 * t102;
	t394 = t388 * t58;
	t398 = ((t135 - t139 - t2 * t250 / 0.2e1 - t31 * t249 * t43 / 0.2e1 + t47 * t264 - t141 - 0.2e1 * t4 * t95 + 0.4e1 * t7 * t1 * pkin(2) * qJD(5) * t3) * t65 * t69 - t283 * t76 * t78 + 0.2e1 * t286 * t82 * t33 + 0.2e1 * t97 * t65 * t82 * t292 - 0.2e1 * t109 * t296 + 0.8e1 * t299 * t301 * t304 - 0.2e1 * t307 * t308) * t117 * t126 - t317 * t122 * t58 * t144 + t321 * t148 - 0.2e1 * t321 * t150 * t153 - t321 * t58 * t167 - ((t87 + t3 * t18 * t137 / 0.2e1 + t134 * t250 / 0.2e1 + t171 * t333 * t43 / 0.4e1 - t136 * pkin(1) * t264 + t93 - t96 + 0.2e1 * qJD(5) * t279 * t7 * pkin(2) + 0.2e1 * t28 * qJD(5) * t5) * t65 * t69 - t357 * t76 * t78 + 0.2e1 * t360 * t82 * t33 + 0.2e1 * t143 * t65 * t82 * t292 - 0.2e1 * t202 * t296 + 0.8e1 * t370 * t301 * t304 - 0.2e1 * t374 * t308) * t102 * t58 * t209 - t384 * t97 * t58 * t209 - t388 * qJD(2) * t209 + 0.2e1 * t388 * t150 * t223 + 0.2e1 * t394 * t229 + t394 * t233;
	t403 = (t321 * t126 - t394 * t209) * qJD(1);
	unknown(1,1) = 0;
	unknown(1,2) = (t235 * t236 + t241 * t242);
	unknown(1,3) = 0;
	unknown(1,4) = 0;
	unknown(1,5) = (t398 * t236 + t403 * t242);
	unknown(2,1) = 0;
	unknown(2,2) = (-t235 * t242 + t241 * t236);
	unknown(2,3) = 0;
	unknown(2,4) = 0;
	unknown(2,5) = (t403 * t236 - t398 * t242);
	unknown(3,1) = 0;
	unknown(3,2) = 0;
	unknown(3,3) = 0;
	unknown(3,4) = 0;
	unknown(3,5) = 0;
	JgD_rot = unknown;
elseif link_index == 3
	%% Symbolic Calculation
	% From jacobigD_rot_3_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-04-11 21:48:19
	% EndTime: 2020-04-11 21:48:20
	% DurationCPUTime: 0.33s
	% Computational Cost: add. (14840->137), mult. (15196->348), div. (452->17), fcn. (3934->6), ass. (0->145)
	unknown=NaN(3,5);
	t1 = cos(qJ(5));
	t2 = qJD(5) * t1;
	t3 = sin(qJ(5));
	t4 = t3 * pkin(1);
	t5 = t4 * pkin(2);
	t6 = 0.2e1 * t5;
	t7 = pkin(1) ^ 2;
	t8 = pkin(2) + qJ(2) + pkin(6) + pkin(3);
	t9 = pkin(2) - qJ(2) - pkin(6) - pkin(3);
	t11 = t8 * t9 - t6 + t7;
	t12 = pkin(2) + qJ(2) + pkin(6) - pkin(3);
	t13 = pkin(2) - qJ(2) - pkin(6) + pkin(3);
	t15 = t12 * t13 - t6 + t7;
	t16 = t11 * t15;
	t17 = sqrt(-t16);
	t18 = 0.1e1 / t17;
	t19 = pkin(1) * t18;
	t20 = -qJ(2) - pkin(6) - pkin(3);
	t22 = -qJ(2) - pkin(6) + pkin(3);
	t24 = -0.2e1 * t11 * t22 - 0.2e1 * t20 * t15;
	t25 = t19 * t24;
	t28 = -t4 + pkin(2);
	t30 = -0.1e1 / t17 / t16;
	t31 = t28 * t30;
	t32 = pkin(1) * pkin(2);
	t33 = t2 * t32;
	t34 = 0.2e1 * t33;
	t37 = -t8 * qJD(2) + qJD(2) * t9 - t34;
	t41 = -t12 * qJD(2) + qJD(2) * t13 - t34;
	t43 = -t11 * t41 - t37 * t15;
	t47 = t28 * t18;
	t54 = 0.2e1 * t11 * qJD(2) + 0.2e1 * qJD(2) * t15 - 0.2e1 * t20 * t41 - 0.2e1 * t37 * t22;
	t57 = pkin(1) * qJD(5);
	t58 = qJ(2) + pkin(6);
	t61 = pkin(1) * t1;
	t65 = 0.1e1 / t58;
	t67 = pkin(2) ^ 2;
	t68 = -t6 + t7 + t67;
	t69 = 0.1e1 / t68;
	t74 = t47 * t24 / 0.2e1 + 0.2e1 * t61 * t58;
	t75 = t58 ^ 2;
	t76 = 0.1e1 / t75;
	t78 = t69 * qJD(2);
	t80 = t74 * t65;
	t81 = t68 ^ 2;
	t82 = 0.1e1 / t81;
	t86 = pkin(1) * t17;
	t87 = t2 * t86;
	t90 = pkin(3) ^ 2;
	t91 = -t6 + t7 + t67 + t75 - t90;
	t93 = t57 * t3 * t91;
	t95 = t58 * qJD(2) - t33;
	t96 = 0.2e1 * t61 * t95;
	t97 = -t87 + t47 * t43 / 0.2e1 - t93 + t96;
	t101 = t61 * t91;
	t102 = t28 * t17 + t101;
	t104 = 0.1e1 / t75 / t58;
	t108 = t102 * t76;
	t109 = t108 * t82;
	t114 = t1 * t17 * pkin(1);
	t116 = t28 * t91 - t114;
	t117 = 0.1e1 / t116;
	t120 = t102 ^ 2;
	t121 = t116 ^ 2;
	t122 = 0.1e1 / t121;
	t124 = t120 * t122 + 0.1e1;
	t125 = 0.1e1 / t124;
	t126 = t58 * t68 * t125;
	t130 = -t108 * t69 + t80 * t69;
	t134 = qJD(5) * t3;
	t135 = t134 * t86;
	t136 = t1 * t18;
	t137 = pkin(1) * t43;
	t139 = t136 * t137 / 0.2e1;
	t141 = t2 * pkin(1) * t91;
	t143 = 0.2e1 * t28 * t95 + t135 - t139 - t141;
	t144 = t68 * t125 * t143;
	t146 = t130 * t117;
	t148 = qJD(2) * t68 * t125;
	t150 = t58 * qJD(5);
	t153 = t61 * pkin(2) * t125;
	t157 = t124 ^ 2;
	t158 = 0.1e1 / t157;
	t163 = 0.1e1 / t121 / t116;
	t166 = t102 * t122 * t97 - t120 * t163 * t143;
	t167 = 0.2e1 * t68 * t158 * t166;
	t171 = t1 * t30;
	t172 = pkin(1) * t24;
	t189 = -t136 * t172 / 0.2e1 + 0.2e1 * t28 * t58;
	t192 = t189 * t65;
	t201 = t116 * t76;
	t202 = t201 * t82;
	t208 = t68 * t122;
	t209 = t208 * t125;
	t213 = t192 * t69 - t201 * t69;
	t217 = t213 * t102;
	t223 = t61 * pkin(2) * t122 * t125;
	t226 = t217 * t58;
	t229 = t68 * t163 * t125 * t143;
	t233 = 0.2e1 * t208 * t158 * t166;
	t235 = ((-t2 * t25 / 0.2e1 - t31 * t24 * t43 / 0.4e1 + t47 * t54 / 0.2e1 - 0.2e1 * t57 * t3 * t58 + 0.2e1 * t61 * qJD(2)) * t65 * t69 - t74 * t76 * t78 + 0.2e1 * t80 * t82 * t33 - t97 * t76 * t69 + 0.2e1 * t102 * t104 * t78 - 0.2e1 * t109 * t33) * t117 * t126 - t130 * t122 * t58 * t144 + t146 * t148 - 0.2e1 * t146 * t150 * t153 - t146 * t58 * t167 - ((t134 * t25 / 0.2e1 + t171 * t172 * t43 / 0.4e1 - t136 * pkin(1) * t54 / 0.2e1 - 0.2e1 * t2 * pkin(1) * t58 + 0.2e1 * t28 * qJD(2)) * t65 * t69 - t189 * t76 * t78 + 0.2e1 * t192 * t82 * t33 - t143 * t76 * t69 + 0.2e1 * t116 * t104 * t78 - 0.2e1 * t202 * t33) * t102 * t58 * t209 - t213 * t97 * t58 * t209 - t217 * qJD(2) * t209 + 0.2e1 * t217 * t150 * t223 + 0.2e1 * t226 * t229 + t226 * t233;
	t236 = sin(qJ(1));
	t241 = (t146 * t126 - t226 * t209) * qJD(1);
	t242 = cos(qJ(1));
	t249 = t61 * pkin(2) * t15 + t11 * t1 * t32;
	t250 = 0.2e1 * t19 * t249;
	t264 = t61 * pkin(2) * t41 - t11 * qJD(5) * t5 + t37 * t1 * t32 - t134 * t32 * t15;
	t279 = t1 ^ 2;
	t280 = t7 * t279;
	t283 = -0.2e1 * t280 * pkin(2) + t47 * t249 - t4 * t91 - t114;
	t286 = t283 * t65;
	t292 = t61 * pkin(2);
	t296 = t61 * pkin(2) * qJD(2);
	t299 = t102 * t65;
	t301 = 0.1e1 / t81 / t68;
	t304 = t280 * t67 * qJD(5);
	t307 = t299 * t82;
	t308 = t134 * t32;
	t317 = t286 * t69 + 0.2e1 * t307 * t292;
	t321 = t317 * t117;
	t333 = 0.2e1 * pkin(1) * t249;
	t357 = t3 * t17 * pkin(1) - t136 * t333 / 0.2e1 - t101 - 0.2e1 * t28 * t1 * t32;
	t360 = t357 * t65;
	t370 = t116 * t65;
	t374 = t370 * t82;
	t384 = 0.2e1 * t374 * t292 + t360 * t69;
	t388 = t384 * t102;
	t394 = t388 * t58;
	t398 = ((t135 - t139 - t2 * t250 / 0.2e1 - t31 * t249 * t43 / 0.2e1 + t47 * t264 - t141 - 0.2e1 * t4 * t95 + 0.4e1 * t7 * t1 * pkin(2) * qJD(5) * t3) * t65 * t69 - t283 * t76 * t78 + 0.2e1 * t286 * t82 * t33 + 0.2e1 * t97 * t65 * t82 * t292 - 0.2e1 * t109 * t296 + 0.8e1 * t299 * t301 * t304 - 0.2e1 * t307 * t308) * t117 * t126 - t317 * t122 * t58 * t144 + t321 * t148 - 0.2e1 * t321 * t150 * t153 - t321 * t58 * t167 - ((t87 + t3 * t18 * t137 / 0.2e1 + t134 * t250 / 0.2e1 + t171 * t333 * t43 / 0.4e1 - t136 * pkin(1) * t264 + t93 - t96 + 0.2e1 * qJD(5) * t279 * t7 * pkin(2) + 0.2e1 * t28 * qJD(5) * t5) * t65 * t69 - t357 * t76 * t78 + 0.2e1 * t360 * t82 * t33 + 0.2e1 * t143 * t65 * t82 * t292 - 0.2e1 * t202 * t296 + 0.8e1 * t370 * t301 * t304 - 0.2e1 * t374 * t308) * t102 * t58 * t209 - t384 * t97 * t58 * t209 - t388 * qJD(2) * t209 + 0.2e1 * t388 * t150 * t223 + 0.2e1 * t394 * t229 + t394 * t233;
	t403 = (t321 * t126 - t394 * t209) * qJD(1);
	unknown(1,1) = 0;
	unknown(1,2) = (t235 * t236 + t241 * t242);
	unknown(1,3) = 0;
	unknown(1,4) = 0;
	unknown(1,5) = (t398 * t236 + t403 * t242);
	unknown(2,1) = 0;
	unknown(2,2) = (-t235 * t242 + t241 * t236);
	unknown(2,3) = 0;
	unknown(2,4) = 0;
	unknown(2,5) = (t403 * t236 - t398 * t242);
	unknown(3,1) = 0;
	unknown(3,2) = 0;
	unknown(3,3) = 0;
	unknown(3,4) = 0;
	unknown(3,5) = 0;
	JgD_rot = unknown;
elseif link_index == 4
	%% Symbolic Calculation
	% From jacobigD_rot_4_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-04-11 21:48:19
	% EndTime: 2020-04-11 21:48:20
	% DurationCPUTime: 0.33s
	% Computational Cost: add. (18600->179), mult. (18718->480), div. (710->24), fcn. (4574->6), ass. (0->181)
	unknown=NaN(3,5);
	t1 = cos(qJ(5));
	t2 = qJD(5) * t1;
	t3 = sin(qJ(5));
	t4 = t3 * pkin(1);
	t5 = t4 * pkin(2);
	t6 = 0.2e1 * t5;
	t7 = pkin(1) ^ 2;
	t8 = pkin(2) + qJ(2) + pkin(6) + pkin(3);
	t9 = pkin(2) - qJ(2) - pkin(6) - pkin(3);
	t11 = t8 * t9 - t6 + t7;
	t12 = pkin(2) + qJ(2) + pkin(6) - pkin(3);
	t13 = pkin(2) - qJ(2) - pkin(6) + pkin(3);
	t15 = t12 * t13 - t6 + t7;
	t16 = t11 * t15;
	t17 = sqrt(-t16);
	t18 = 0.1e1 / t17;
	t19 = pkin(1) * t18;
	t20 = -qJ(2) - pkin(6) - pkin(3);
	t22 = -qJ(2) - pkin(6) + pkin(3);
	t24 = -0.2e1 * t11 * t22 - 0.2e1 * t20 * t15;
	t25 = t19 * t24;
	t28 = -t4 + pkin(2);
	t30 = -0.1e1 / t17 / t16;
	t31 = t28 * t30;
	t32 = pkin(1) * pkin(2);
	t33 = t2 * t32;
	t34 = 0.2e1 * t33;
	t37 = -t8 * qJD(2) + qJD(2) * t9 - t34;
	t38 = t37 * t15;
	t41 = -t12 * qJD(2) + qJD(2) * t13 - t34;
	t42 = t11 * t41;
	t43 = -t38 - t42;
	t47 = t28 * t18;
	t54 = 0.2e1 * t11 * qJD(2) + 0.2e1 * qJD(2) * t15 - 0.2e1 * t20 * t41 - 0.2e1 * t37 * t22;
	t57 = pkin(1) * qJD(5);
	t58 = qJ(2) + pkin(6);
	t61 = pkin(1) * t1;
	t65 = 0.1e1 / t58;
	t67 = pkin(2) ^ 2;
	t68 = -t6 + t7 + t67;
	t69 = 0.1e1 / t68;
	t74 = t47 * t24 / 0.2e1 + 0.2e1 * t61 * t58;
	t75 = t58 ^ 2;
	t76 = 0.1e1 / t75;
	t78 = t69 * qJD(2);
	t80 = t74 * t65;
	t81 = t68 ^ 2;
	t82 = 0.1e1 / t81;
	t86 = pkin(1) * t17;
	t87 = t2 * t86;
	t90 = pkin(3) ^ 2;
	t91 = -t6 + t7 + t67 + t75 - t90;
	t93 = t57 * t3 * t91;
	t94 = t58 * qJD(2);
	t95 = -t33 + t94;
	t96 = 0.2e1 * t61 * t95;
	t97 = -t87 + t47 * t43 / 0.2e1 - t93 + t96;
	t101 = t61 * t91;
	t102 = t28 * t17 + t101;
	t104 = 0.1e1 / t75 / t58;
	t108 = t102 * t76;
	t109 = t108 * t82;
	t114 = t1 * t17 * pkin(1);
	t116 = t28 * t91 - t114;
	t117 = 0.1e1 / t116;
	t120 = t102 ^ 2;
	t121 = t116 ^ 2;
	t122 = 0.1e1 / t121;
	t124 = t120 * t122 + 0.1e1;
	t125 = 0.1e1 / t124;
	t126 = t58 * t68 * t125;
	t130 = -t108 * t69 + t80 * t69;
	t134 = qJD(5) * t3;
	t135 = t134 * t86;
	t136 = t1 * t18;
	t137 = pkin(1) * t43;
	t139 = t136 * t137 / 0.2e1;
	t141 = t2 * pkin(1) * t91;
	t143 = 0.2e1 * t28 * t95 + t135 - t139 - t141;
	t144 = t68 * t125 * t143;
	t146 = t130 * t117;
	t148 = qJD(2) * t68 * t125;
	t150 = t58 * qJD(5);
	t153 = t61 * pkin(2) * t125;
	t157 = t124 ^ 2;
	t158 = 0.1e1 / t157;
	t163 = 0.1e1 / t121 / t116;
	t166 = t102 * t122 * t97 - t120 * t163 * t143;
	t167 = 0.2e1 * t68 * t158 * t166;
	t171 = t1 * t30;
	t172 = pkin(1) * t24;
	t189 = -t136 * t172 / 0.2e1 + 0.2e1 * t28 * t58;
	t192 = t189 * t65;
	t201 = t116 * t76;
	t202 = t201 * t82;
	t208 = t68 * t122;
	t209 = t208 * t125;
	t213 = t192 * t69 - t201 * t69;
	t217 = t213 * t102;
	t223 = t61 * pkin(2) * t122 * t125;
	t226 = t217 * t58;
	t229 = t68 * t163 * t125 * t143;
	t233 = 0.2e1 * t208 * t158 * t166;
	t235 = ((-t2 * t25 / 0.2e1 - t31 * t24 * t43 / 0.4e1 + t47 * t54 / 0.2e1 - 0.2e1 * t57 * t3 * t58 + 0.2e1 * t61 * qJD(2)) * t65 * t69 - t74 * t76 * t78 + 0.2e1 * t80 * t82 * t33 - t97 * t76 * t69 + 0.2e1 * t102 * t104 * t78 - 0.2e1 * t109 * t33) * t117 * t126 - t130 * t122 * t58 * t144 + t146 * t148 - 0.2e1 * t146 * t150 * t153 - t146 * t58 * t167 - ((t134 * t25 / 0.2e1 + t171 * t172 * t43 / 0.4e1 - t136 * pkin(1) * t54 / 0.2e1 - 0.2e1 * t2 * pkin(1) * t58 + 0.2e1 * t28 * qJD(2)) * t65 * t69 - t189 * t76 * t78 + 0.2e1 * t192 * t82 * t33 - t143 * t76 * t69 + 0.2e1 * t116 * t104 * t78 - 0.2e1 * t202 * t33) * t102 * t58 * t209 - t213 * t97 * t58 * t209 - t217 * qJD(2) * t209 + 0.2e1 * t217 * t150 * t223 + 0.2e1 * t226 * t229 + t226 * t233;
	t236 = sin(qJ(1));
	t241 = (t146 * t126 - t226 * t209) * qJD(1);
	t242 = cos(qJ(1));
	t244 = 0.1e1 / pkin(3);
	t249 = t76 * t244;
	t253 = t18 * t24;
	t257 = t65 * t244;
	t266 = t6 - t7 - t67 + t75 + t90;
	t267 = 0.1e1 / t266;
	t270 = t266 ^ 2;
	t271 = 0.1e1 / t270;
	t273 = -t16 * t271 + 0.1e1;
	t274 = 0.1e1 / t273;
	t275 = t58 * pkin(3) * t274;
	t280 = -t249 * t17 + t257 * t253 / 0.2e1;
	t284 = t33 + t94;
	t287 = t280 * t267;
	t292 = t273 ^ 2;
	t293 = 0.1e1 / t292;
	t298 = 0.1e1 / t270 / t266;
	t302 = 0.4e1 * t16 * t298 * t284 - t38 * t271 - t42 * t271;
	t309 = t244 * qJD(2);
	t319 = t17 * t271;
	t320 = t319 * t274;
	t326 = -t266 * t76 * t244 + 0.2e1 * t58 * t65 * t244;
	t331 = t326 * t58 * pkin(3);
	t334 = t18 * t271 * t274 * t43;
	t339 = 0.2e1 * t17 * t298 * t274 * t284;
	t343 = t319 * t293 * t302;
	t345 = (0.2e1 * t104 * t244 * t17 * qJD(2) - t249 * t18 * t43 / 0.2e1 - t249 * t253 * qJD(2) / 0.2e1 - t257 * t30 * t24 * t43 / 0.4e1 + t257 * t18 * t54 / 0.2e1) * t267 * t275 - 0.2e1 * t280 * t271 * t58 * pkin(3) * t274 * t284 + t287 * qJD(2) * pkin(3) * t274 - t287 * t58 * pkin(3) * t293 * t302 - (0.2e1 * qJD(2) * t65 * t244 + 0.2e1 * t266 * t104 * t309 - 0.2e1 * t284 * t76 * t244 - 0.2e1 * t58 * t76 * t309) * t58 * pkin(3) * t320 - t326 * qJD(2) * pkin(3) * t320 - t331 * t334 / 0.2e1 + 0.2e1 * t331 * t339 + t331 * t343;
	t350 = (t287 * t275 - t331 * t320) * qJD(1);
	t357 = t61 * pkin(2) * t15 + t11 * t1 * t32;
	t358 = 0.2e1 * t19 * t357;
	t372 = t61 * pkin(2) * t41 - t11 * qJD(5) * t5 + t37 * t1 * t32 - t134 * t32 * t15;
	t387 = t1 ^ 2;
	t388 = t7 * t387;
	t391 = -0.2e1 * t388 * pkin(2) + t47 * t357 - t4 * t91 - t114;
	t394 = t391 * t65;
	t400 = t61 * pkin(2);
	t404 = t61 * pkin(2) * qJD(2);
	t407 = t102 * t65;
	t409 = 0.1e1 / t81 / t68;
	t412 = t388 * t67 * qJD(5);
	t415 = t407 * t82;
	t416 = t134 * t32;
	t425 = t394 * t69 + 0.2e1 * t415 * t400;
	t429 = t425 * t117;
	t441 = 0.2e1 * pkin(1) * t357;
	t465 = t3 * t17 * pkin(1) - t136 * t441 / 0.2e1 - t101 - 0.2e1 * t28 * t1 * t32;
	t468 = t465 * t65;
	t478 = t116 * t65;
	t482 = t478 * t82;
	t492 = 0.2e1 * t482 * t400 + t468 * t69;
	t496 = t492 * t102;
	t502 = t496 * t58;
	t506 = ((t135 - t139 - t2 * t358 / 0.2e1 - t31 * t357 * t43 / 0.2e1 + t47 * t372 - t141 - 0.2e1 * t4 * t95 + 0.4e1 * t7 * t1 * pkin(2) * qJD(5) * t3) * t65 * t69 - t391 * t76 * t78 + 0.2e1 * t394 * t82 * t33 + 0.2e1 * t97 * t65 * t82 * t400 - 0.2e1 * t109 * t404 + 0.8e1 * t407 * t409 * t412 - 0.2e1 * t415 * t416) * t117 * t126 - t425 * t122 * t58 * t144 + t429 * t148 - 0.2e1 * t429 * t150 * t153 - t429 * t58 * t167 - ((t87 + t3 * t18 * t137 / 0.2e1 + t134 * t358 / 0.2e1 + t171 * t441 * t43 / 0.4e1 - t136 * pkin(1) * t372 + t93 - t96 + 0.2e1 * qJD(5) * t387 * t7 * pkin(2) + 0.2e1 * t28 * qJD(5) * t5) * t65 * t69 - t465 * t76 * t78 + 0.2e1 * t468 * t82 * t33 + 0.2e1 * t143 * t65 * t82 * t400 - 0.2e1 * t202 * t404 + 0.8e1 * t478 * t409 * t412 - 0.2e1 * t482 * t416) * t102 * t58 * t209 - t492 * t97 * t58 * t209 - t496 * qJD(2) * t209 + 0.2e1 * t496 * t150 * t223 + 0.2e1 * t502 * t229 + t502 * t233;
	t511 = (t429 * t126 - t502 * t209) * qJD(1);
	t514 = t267 * t274;
	t521 = 0.2e1 * t18 * t357;
	t522 = t271 * t274;
	t540 = -t30 * t357 * t514 * t43 / 0.2e1 + t18 * t372 * t514 - t521 * t522 * t284 - t521 * t267 * t293 * t302 / 0.2e1 + 0.2e1 * t134 * pkin(1) * pkin(2) * t17 * t522 - t400 * t334 + 0.4e1 * t400 * t339 + 0.2e1 * t400 * t343;
	t547 = (t521 * t514 / 0.2e1 - 0.2e1 * t400 * t320) * qJD(1);
	unknown(1,1) = 0;
	unknown(1,2) = (t235 * t236 + t345 * t236 + t241 * t242 + t350 * t242);
	unknown(1,3) = 0;
	unknown(1,4) = 0;
	unknown(1,5) = (t506 * t236 + t540 * t236 + t511 * t242 + t547 * t242);
	unknown(2,1) = 0;
	unknown(2,2) = (-t235 * t242 + t241 * t236 + t350 * t236 - t345 * t242);
	unknown(2,3) = 0;
	unknown(2,4) = 0;
	unknown(2,5) = (t511 * t236 + t547 * t236 - t506 * t242 - t540 * t242);
	unknown(3,1) = 0;
	unknown(3,2) = 0;
	unknown(3,3) = 0;
	unknown(3,4) = 0;
	unknown(3,5) = 0;
	JgD_rot = unknown;
elseif link_index == 5
	%% Symbolic Calculation
	% From jacobigD_rot_5_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-04-11 21:48:19
	% EndTime: 2020-04-11 21:48:20
	% DurationCPUTime: 0.42s
	% Computational Cost: add. (18600->179), mult. (18720->482), div. (710->24), fcn. (4576->6), ass. (0->181)
	unknown=NaN(3,5);
	t1 = cos(qJ(5));
	t2 = qJD(5) * t1;
	t3 = sin(qJ(5));
	t4 = t3 * pkin(1);
	t5 = t4 * pkin(2);
	t6 = 0.2e1 * t5;
	t7 = pkin(1) ^ 2;
	t8 = pkin(2) + qJ(2) + pkin(6) + pkin(3);
	t9 = pkin(2) - qJ(2) - pkin(6) - pkin(3);
	t11 = t8 * t9 - t6 + t7;
	t12 = pkin(2) + qJ(2) + pkin(6) - pkin(3);
	t13 = pkin(2) - qJ(2) - pkin(6) + pkin(3);
	t15 = t12 * t13 - t6 + t7;
	t16 = t11 * t15;
	t17 = sqrt(-t16);
	t18 = 0.1e1 / t17;
	t19 = pkin(1) * t18;
	t20 = -qJ(2) - pkin(6) - pkin(3);
	t22 = -qJ(2) - pkin(6) + pkin(3);
	t24 = -0.2e1 * t11 * t22 - 0.2e1 * t20 * t15;
	t25 = t19 * t24;
	t28 = -t4 + pkin(2);
	t30 = -0.1e1 / t17 / t16;
	t31 = t28 * t30;
	t32 = pkin(1) * pkin(2);
	t33 = t2 * t32;
	t34 = 0.2e1 * t33;
	t37 = -t8 * qJD(2) + qJD(2) * t9 - t34;
	t38 = t37 * t15;
	t41 = -t12 * qJD(2) + qJD(2) * t13 - t34;
	t42 = t11 * t41;
	t43 = -t38 - t42;
	t47 = t28 * t18;
	t54 = 0.2e1 * t11 * qJD(2) + 0.2e1 * qJD(2) * t15 - 0.2e1 * t20 * t41 - 0.2e1 * t37 * t22;
	t57 = pkin(1) * qJD(5);
	t58 = qJ(2) + pkin(6);
	t61 = pkin(1) * t1;
	t65 = 0.1e1 / t58;
	t67 = pkin(2) ^ 2;
	t68 = -t6 + t7 + t67;
	t69 = 0.1e1 / t68;
	t74 = t47 * t24 / 0.2e1 + 0.2e1 * t61 * t58;
	t75 = t58 ^ 2;
	t76 = 0.1e1 / t75;
	t78 = t69 * qJD(2);
	t80 = t74 * t65;
	t81 = t68 ^ 2;
	t82 = 0.1e1 / t81;
	t86 = pkin(1) * t17;
	t87 = t2 * t86;
	t90 = pkin(3) ^ 2;
	t91 = -t6 + t7 + t67 + t75 - t90;
	t93 = t57 * t3 * t91;
	t94 = t58 * qJD(2);
	t95 = -t33 + t94;
	t96 = 0.2e1 * t61 * t95;
	t97 = -t87 + t47 * t43 / 0.2e1 - t93 + t96;
	t101 = t61 * t91;
	t102 = t28 * t17 + t101;
	t104 = 0.1e1 / t75 / t58;
	t108 = t102 * t76;
	t109 = t108 * t82;
	t114 = t1 * t17 * pkin(1);
	t116 = t28 * t91 - t114;
	t117 = 0.1e1 / t116;
	t120 = t102 ^ 2;
	t121 = t116 ^ 2;
	t122 = 0.1e1 / t121;
	t124 = t120 * t122 + 0.1e1;
	t125 = 0.1e1 / t124;
	t126 = t58 * t68 * t125;
	t130 = -t108 * t69 + t80 * t69;
	t134 = qJD(5) * t3;
	t135 = t134 * t86;
	t136 = t1 * t18;
	t137 = pkin(1) * t43;
	t139 = t136 * t137 / 0.2e1;
	t141 = t2 * pkin(1) * t91;
	t143 = 0.2e1 * t28 * t95 + t135 - t139 - t141;
	t144 = t68 * t125 * t143;
	t146 = t130 * t117;
	t148 = qJD(2) * t68 * t125;
	t150 = t58 * qJD(5);
	t153 = t61 * pkin(2) * t125;
	t157 = t124 ^ 2;
	t158 = 0.1e1 / t157;
	t163 = 0.1e1 / t121 / t116;
	t166 = t102 * t122 * t97 - t120 * t163 * t143;
	t167 = 0.2e1 * t68 * t158 * t166;
	t171 = t1 * t30;
	t172 = pkin(1) * t24;
	t189 = -t136 * t172 / 0.2e1 + 0.2e1 * t28 * t58;
	t192 = t189 * t65;
	t201 = t116 * t76;
	t202 = t201 * t82;
	t208 = t68 * t122;
	t209 = t208 * t125;
	t213 = t192 * t69 - t201 * t69;
	t217 = t213 * t102;
	t223 = t61 * pkin(2) * t122 * t125;
	t226 = t217 * t58;
	t229 = t68 * t163 * t125 * t143;
	t233 = 0.2e1 * t208 * t158 * t166;
	t235 = ((-t2 * t25 / 0.2e1 - t31 * t24 * t43 / 0.4e1 + t47 * t54 / 0.2e1 - 0.2e1 * t57 * t3 * t58 + 0.2e1 * t61 * qJD(2)) * t65 * t69 - t74 * t76 * t78 + 0.2e1 * t80 * t82 * t33 - t97 * t76 * t69 + 0.2e1 * t102 * t104 * t78 - 0.2e1 * t109 * t33) * t117 * t126 - t130 * t122 * t58 * t144 + t146 * t148 - 0.2e1 * t146 * t150 * t153 - t146 * t58 * t167 - ((t134 * t25 / 0.2e1 + t171 * t172 * t43 / 0.4e1 - t136 * pkin(1) * t54 / 0.2e1 - 0.2e1 * t2 * pkin(1) * t58 + 0.2e1 * t28 * qJD(2)) * t65 * t69 - t189 * t76 * t78 + 0.2e1 * t192 * t82 * t33 - t143 * t76 * t69 + 0.2e1 * t116 * t104 * t78 - 0.2e1 * t202 * t33) * t102 * t58 * t209 - t213 * t97 * t58 * t209 - t217 * qJD(2) * t209 + 0.2e1 * t217 * t150 * t223 + 0.2e1 * t226 * t229 + t226 * t233;
	t236 = sin(qJ(1));
	t241 = (t146 * t126 - t226 * t209) * qJD(1);
	t242 = cos(qJ(1));
	t244 = 0.1e1 / pkin(3);
	t249 = t76 * t244;
	t253 = t18 * t24;
	t257 = t65 * t244;
	t266 = t6 - t7 - t67 + t75 + t90;
	t267 = 0.1e1 / t266;
	t270 = t266 ^ 2;
	t271 = 0.1e1 / t270;
	t273 = -t16 * t271 + 0.1e1;
	t274 = 0.1e1 / t273;
	t275 = t58 * pkin(3) * t274;
	t280 = -t249 * t17 + t257 * t253 / 0.2e1;
	t284 = t33 + t94;
	t287 = t280 * t267;
	t292 = t273 ^ 2;
	t293 = 0.1e1 / t292;
	t298 = 0.1e1 / t270 / t266;
	t302 = 0.4e1 * t16 * t298 * t284 - t38 * t271 - t42 * t271;
	t309 = t244 * qJD(2);
	t319 = t17 * t271;
	t320 = t319 * t274;
	t326 = -t266 * t76 * t244 + 0.2e1 * t58 * t65 * t244;
	t331 = t326 * t58 * pkin(3);
	t334 = t18 * t271 * t274 * t43;
	t339 = 0.2e1 * t17 * t298 * t274 * t284;
	t343 = t319 * t293 * t302;
	t345 = (0.2e1 * t104 * t244 * t17 * qJD(2) - t249 * t18 * t43 / 0.2e1 - t249 * t253 * qJD(2) / 0.2e1 - t257 * t30 * t24 * t43 / 0.4e1 + t257 * t18 * t54 / 0.2e1) * t267 * t275 - 0.2e1 * t280 * t271 * t58 * pkin(3) * t274 * t284 + t287 * qJD(2) * pkin(3) * t274 - t287 * t58 * pkin(3) * t293 * t302 - (0.2e1 * qJD(2) * t65 * t244 + 0.2e1 * t266 * t104 * t309 - 0.2e1 * t284 * t76 * t244 - 0.2e1 * t58 * t76 * t309) * t58 * pkin(3) * t320 - t326 * qJD(2) * pkin(3) * t320 - t331 * t334 / 0.2e1 + 0.2e1 * t331 * t339 + t331 * t343;
	t350 = (t287 * t275 - t331 * t320) * qJD(1);
	t358 = t61 * pkin(2) * t15 + t11 * t1 * t32;
	t359 = 0.2e1 * t19 * t358;
	t373 = t61 * pkin(2) * t41 - t11 * qJD(5) * t5 + t37 * t1 * t32 - t134 * t32 * t15;
	t388 = t1 ^ 2;
	t389 = t7 * t388;
	t392 = -0.2e1 * t389 * pkin(2) + t47 * t358 - t4 * t91 - t114;
	t395 = t392 * t65;
	t401 = t61 * pkin(2);
	t405 = t61 * pkin(2) * qJD(2);
	t408 = t102 * t65;
	t410 = 0.1e1 / t81 / t68;
	t413 = t389 * t67 * qJD(5);
	t416 = t408 * t82;
	t417 = t134 * t32;
	t426 = t395 * t69 + 0.2e1 * t416 * t401;
	t430 = t426 * t117;
	t442 = 0.2e1 * pkin(1) * t358;
	t466 = t3 * t17 * pkin(1) - t136 * t442 / 0.2e1 - t101 - 0.2e1 * t28 * t1 * t32;
	t469 = t466 * t65;
	t479 = t116 * t65;
	t483 = t479 * t82;
	t493 = 0.2e1 * t483 * t401 + t469 * t69;
	t497 = t493 * t102;
	t503 = t497 * t58;
	t507 = ((t135 - t139 - t2 * t359 / 0.2e1 - t31 * t358 * t43 / 0.2e1 + t47 * t373 - t141 - 0.2e1 * t4 * t95 + 0.4e1 * t7 * t1 * pkin(2) * qJD(5) * t3) * t65 * t69 - t392 * t76 * t78 + 0.2e1 * t395 * t82 * t33 + 0.2e1 * t97 * t65 * t82 * t401 - 0.2e1 * t109 * t405 + 0.8e1 * t408 * t410 * t413 - 0.2e1 * t416 * t417) * t117 * t126 - t426 * t122 * t58 * t144 + t430 * t148 - 0.2e1 * t430 * t150 * t153 - t430 * t58 * t167 - ((t87 + t3 * t18 * t137 / 0.2e1 + t134 * t359 / 0.2e1 + t171 * t442 * t43 / 0.4e1 - t136 * pkin(1) * t373 + t93 - t96 + 0.2e1 * qJD(5) * t388 * t7 * pkin(2) + 0.2e1 * t28 * qJD(5) * t5) * t65 * t69 - t466 * t76 * t78 + 0.2e1 * t469 * t82 * t33 + 0.2e1 * t143 * t65 * t82 * t401 - 0.2e1 * t202 * t405 + 0.8e1 * t479 * t410 * t413 - 0.2e1 * t483 * t417) * t102 * t58 * t209 - t493 * t97 * t58 * t209 - t497 * qJD(2) * t209 + 0.2e1 * t497 * t150 * t223 + 0.2e1 * t503 * t229 + t503 * t233;
	t512 = (t430 * t126 - t503 * t209) * qJD(1);
	t515 = t267 * t274;
	t522 = 0.2e1 * t18 * t358;
	t523 = t271 * t274;
	t541 = -t30 * t358 * t515 * t43 / 0.2e1 + t18 * t373 * t515 - t522 * t523 * t284 - t522 * t267 * t293 * t302 / 0.2e1 + 0.2e1 * t134 * pkin(1) * pkin(2) * t17 * t523 - t401 * t334 + 0.4e1 * t401 * t339 + 0.2e1 * t401 * t343;
	t548 = (t522 * t515 / 0.2e1 - 0.2e1 * t401 * t320) * qJD(1);
	unknown(1,1) = 0;
	unknown(1,2) = (t235 * t236 + t345 * t236 + t241 * t242 + t350 * t242);
	unknown(1,3) = (qJD(1) * t242);
	unknown(1,4) = 0;
	unknown(1,5) = (t507 * t236 + t541 * t236 + t512 * t242 + t548 * t242);
	unknown(2,1) = 0;
	unknown(2,2) = (-t235 * t242 + t241 * t236 + t350 * t236 - t345 * t242);
	unknown(2,3) = (qJD(1) * t236);
	unknown(2,4) = 0;
	unknown(2,5) = (t512 * t236 + t548 * t236 - t507 * t242 - t541 * t242);
	unknown(3,1) = 0;
	unknown(3,2) = 0;
	unknown(3,3) = 0;
	unknown(3,4) = 0;
	unknown(3,5) = 0;
	JgD_rot = unknown;
elseif link_index == 6
	%% Symbolic Calculation
	% From jacobigD_rot_6_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-04-11 21:48:22
	% EndTime: 2020-04-11 21:48:23
	% DurationCPUTime: 0.44s
	% Computational Cost: add. (22077->244), mult. (22376->696), div. (914->24), fcn. (5518->8), ass. (0->238)
	unknown=NaN(3,5);
	t1 = cos(qJ(5));
	t2 = qJD(5) * t1;
	t3 = sin(qJ(5));
	t4 = t3 * pkin(1);
	t5 = t4 * pkin(2);
	t6 = 0.2e1 * t5;
	t7 = pkin(1) ^ 2;
	t8 = pkin(2) + qJ(2) + pkin(6) + pkin(3);
	t9 = pkin(2) - qJ(2) - pkin(6) - pkin(3);
	t11 = t8 * t9 - t6 + t7;
	t12 = pkin(2) + qJ(2) + pkin(6) - pkin(3);
	t13 = pkin(2) - qJ(2) - pkin(6) + pkin(3);
	t15 = t12 * t13 - t6 + t7;
	t16 = t11 * t15;
	t17 = sqrt(-t16);
	t18 = 0.1e1 / t17;
	t19 = pkin(1) * t18;
	t20 = -qJ(2) - pkin(6) - pkin(3);
	t22 = -qJ(2) - pkin(6) + pkin(3);
	t24 = -0.2e1 * t11 * t22 - 0.2e1 * t20 * t15;
	t25 = t19 * t24;
	t28 = -t4 + pkin(2);
	t30 = -0.1e1 / t17 / t16;
	t31 = t28 * t30;
	t32 = pkin(1) * pkin(2);
	t33 = t2 * t32;
	t34 = 0.2e1 * t33;
	t37 = -t8 * qJD(2) + qJD(2) * t9 - t34;
	t38 = t37 * t15;
	t41 = -t12 * qJD(2) + qJD(2) * t13 - t34;
	t42 = t11 * t41;
	t43 = -t38 - t42;
	t47 = t28 * t18;
	t54 = 0.2e1 * t11 * qJD(2) + 0.2e1 * qJD(2) * t15 - 0.2e1 * t20 * t41 - 0.2e1 * t37 * t22;
	t57 = pkin(1) * qJD(5);
	t58 = qJ(2) + pkin(6);
	t61 = pkin(1) * t1;
	t65 = 0.1e1 / t58;
	t67 = pkin(2) ^ 2;
	t68 = -t6 + t7 + t67;
	t69 = 0.1e1 / t68;
	t74 = t47 * t24 / 0.2e1 + 0.2e1 * t61 * t58;
	t75 = t58 ^ 2;
	t76 = 0.1e1 / t75;
	t78 = t69 * qJD(2);
	t80 = t74 * t65;
	t81 = t68 ^ 2;
	t82 = 0.1e1 / t81;
	t86 = pkin(1) * t17;
	t87 = t2 * t86;
	t90 = pkin(3) ^ 2;
	t91 = -t6 + t7 + t67 + t75 - t90;
	t93 = t57 * t3 * t91;
	t94 = t58 * qJD(2);
	t95 = -t33 + t94;
	t96 = 0.2e1 * t61 * t95;
	t97 = -t87 + t47 * t43 / 0.2e1 - t93 + t96;
	t98 = t97 * t76;
	t101 = t61 * t91;
	t102 = t28 * t17 + t101;
	t104 = 0.1e1 / t75 / t58;
	t105 = t102 * t104;
	t108 = t102 * t76;
	t109 = t108 * t82;
	t114 = t1 * t17 * pkin(1);
	t116 = t28 * t91 - t114;
	t117 = 0.1e1 / t116;
	t120 = t102 ^ 2;
	t121 = t116 ^ 2;
	t122 = 0.1e1 / t121;
	t124 = t120 * t122 + 0.1e1;
	t125 = 0.1e1 / t124;
	t126 = t58 * t68 * t125;
	t129 = t108 * t69;
	t130 = t80 * t69 - t129;
	t134 = qJD(5) * t3;
	t135 = t134 * t86;
	t136 = t1 * t18;
	t137 = pkin(1) * t43;
	t139 = t136 * t137 / 0.2e1;
	t141 = t2 * pkin(1) * t91;
	t143 = 0.2e1 * t28 * t95 + t135 - t139 - t141;
	t144 = t68 * t125 * t143;
	t146 = t130 * t117;
	t148 = qJD(2) * t68 * t125;
	t150 = t58 * qJD(5);
	t153 = t61 * pkin(2) * t125;
	t157 = t124 ^ 2;
	t158 = 0.1e1 / t157;
	t163 = 0.1e1 / t121 / t116;
	t166 = t102 * t122 * t97 - t120 * t163 * t143;
	t167 = 0.2e1 * t68 * t158 * t166;
	t171 = t1 * t30;
	t172 = pkin(1) * t24;
	t189 = -t136 * t172 / 0.2e1 + 0.2e1 * t28 * t58;
	t192 = t189 * t65;
	t196 = t143 * t76;
	t198 = t116 * t104;
	t201 = t116 * t76;
	t202 = t201 * t82;
	t208 = t68 * t122;
	t209 = t208 * t125;
	t212 = t201 * t69;
	t213 = t192 * t69 - t212;
	t217 = t213 * t102;
	t223 = t61 * pkin(2) * t122 * t125;
	t226 = t217 * t58;
	t229 = t68 * t163 * t125 * t143;
	t233 = 0.2e1 * t208 * t158 * t166;
	t235 = ((-t2 * t25 / 0.2e1 - t31 * t24 * t43 / 0.4e1 + t47 * t54 / 0.2e1 - 0.2e1 * t57 * t3 * t58 + 0.2e1 * t61 * qJD(2)) * t65 * t69 - t74 * t76 * t78 + 0.2e1 * t80 * t82 * t33 - t98 * t69 + 0.2e1 * t105 * t78 - 0.2e1 * t109 * t33) * t117 * t126 - t130 * t122 * t58 * t144 + t146 * t148 - 0.2e1 * t146 * t150 * t153 - t146 * t58 * t167 - ((t134 * t25 / 0.2e1 + t171 * t172 * t43 / 0.4e1 - t136 * pkin(1) * t54 / 0.2e1 - 0.2e1 * t2 * pkin(1) * t58 + 0.2e1 * t28 * qJD(2)) * t65 * t69 - t189 * t76 * t78 + 0.2e1 * t192 * t82 * t33 - t196 * t69 + 0.2e1 * t198 * t78 - 0.2e1 * t202 * t33) * t102 * t58 * t209 - t213 * t97 * t58 * t209 - t217 * qJD(2) * t209 + 0.2e1 * t217 * t150 * t223 + 0.2e1 * t226 * t229 + t226 * t233;
	t236 = sin(qJ(1));
	t241 = (t146 * t126 - t226 * t209) * qJD(1);
	t242 = cos(qJ(1));
	t244 = 0.1e1 / pkin(3);
	t246 = t17 * qJD(2);
	t249 = t76 * t244;
	t250 = t18 * t43;
	t253 = t18 * t24;
	t257 = t65 * t244;
	t266 = t6 - t7 - t67 + t75 + t90;
	t267 = 0.1e1 / t266;
	t270 = t266 ^ 2;
	t271 = 0.1e1 / t270;
	t273 = -t16 * t271 + 0.1e1;
	t274 = 0.1e1 / t273;
	t275 = t58 * pkin(3) * t274;
	t280 = -t249 * t17 + t257 * t253 / 0.2e1;
	t284 = t33 + t94;
	t287 = t280 * t267;
	t292 = t273 ^ 2;
	t293 = 0.1e1 / t292;
	t298 = 0.1e1 / t270 / t266;
	t302 = 0.4e1 * t16 * t298 * t284 - t38 * t271 - t42 * t271;
	t309 = t244 * qJD(2);
	t319 = t17 * t271;
	t320 = t319 * t274;
	t326 = -t266 * t76 * t244 + 0.2e1 * t58 * t65 * t244;
	t331 = t326 * t58 * pkin(3);
	t334 = t18 * t271 * t274 * t43;
	t339 = 0.2e1 * t17 * t298 * t274 * t284;
	t343 = t319 * t293 * t302;
	t345 = (0.2e1 * t104 * t244 * t246 - t249 * t250 / 0.2e1 - t249 * t253 * qJD(2) / 0.2e1 - t257 * t30 * t24 * t43 / 0.4e1 + t257 * t18 * t54 / 0.2e1) * t267 * t275 - 0.2e1 * t280 * t271 * t58 * pkin(3) * t274 * t284 + t287 * qJD(2) * pkin(3) * t274 - t287 * t58 * pkin(3) * t293 * t302 - (0.2e1 * qJD(2) * t65 * t244 + 0.2e1 * t266 * t104 * t309 - 0.2e1 * t284 * t76 * t244 - 0.2e1 * t58 * t76 * t309) * t58 * pkin(3) * t320 - t326 * qJD(2) * pkin(3) * t320 - t331 * t334 / 0.2e1 + 0.2e1 * t331 * t339 + t331 * t343;
	t350 = (t287 * t275 - t331 * t320) * qJD(1);
	t353 = qJD(1) * t242;
	t354 = qJD(1) * t236;
	t355 = t354 * t102;
	t356 = t76 * t69;
	t357 = t244 * t17;
	t358 = t356 * t357;
	t362 = t242 * t97 * t76;
	t363 = t69 * t244;
	t364 = t363 * t17;
	t367 = t242 * t102;
	t368 = t367 * t104;
	t369 = t363 * t246;
	t372 = t76 * t82;
	t373 = t372 * t244;
	t376 = t61 * pkin(2);
	t377 = t17 * qJD(5) * t376;
	t380 = t367 * t76;
	t381 = t363 * t250;
	t384 = t354 * t116;
	t385 = t266 * t244;
	t386 = t356 * t385;
	t390 = t242 * t143 * t76;
	t391 = t69 * t266;
	t392 = t391 * t244;
	t395 = t242 * t116;
	t396 = t395 * t104;
	t397 = t391 * t309;
	t400 = t372 * t266;
	t403 = t244 * qJD(5) * t376;
	t406 = t395 * t76;
	t408 = 0.2e1 * t69 * t284 * t244;
	t412 = cos(qJ(3));
	t418 = sin(qJ(3));
	t454 = t61 * pkin(2) * t15 + t11 * t1 * t32;
	t455 = 0.2e1 * t19 * t454;
	t469 = t61 * pkin(2) * t41 - t11 * qJD(5) * t5 + t37 * t1 * t32 - t134 * t32 * t15;
	t484 = t1 ^ 2;
	t485 = t7 * t484;
	t488 = -0.2e1 * t485 * pkin(2) - t4 * t91 + t47 * t454 - t114;
	t491 = t488 * t65;
	t500 = t61 * pkin(2) * qJD(2);
	t503 = t102 * t65;
	t505 = 0.1e1 / t81 / t68;
	t508 = t485 * t67 * qJD(5);
	t511 = t503 * t82;
	t512 = t134 * t32;
	t521 = 0.2e1 * t511 * t376 + t491 * t69;
	t525 = t521 * t117;
	t537 = 0.2e1 * pkin(1) * t454;
	t561 = t3 * t17 * pkin(1) - t136 * t537 / 0.2e1 - t101 - 0.2e1 * t28 * t1 * t32;
	t564 = t561 * t65;
	t574 = t116 * t65;
	t578 = t574 * t82;
	t588 = 0.2e1 * t578 * t376 + t564 * t69;
	t592 = t588 * t102;
	t598 = t592 * t58;
	t602 = ((t135 - t139 - t2 * t455 / 0.2e1 - t31 * t454 * t43 / 0.2e1 + t47 * t469 - t141 - 0.2e1 * t4 * t95 + 0.4e1 * t7 * t1 * pkin(2) * qJD(5) * t3) * t65 * t69 - t488 * t76 * t78 + 0.2e1 * t491 * t82 * t33 + 0.2e1 * t97 * t65 * t82 * t376 - 0.2e1 * t109 * t500 + 0.8e1 * t503 * t505 * t508 - 0.2e1 * t511 * t512) * t117 * t126 - t521 * t122 * t58 * t144 + t525 * t148 - 0.2e1 * t525 * t150 * t153 - t525 * t58 * t167 - ((t87 + t3 * t18 * t137 / 0.2e1 + t134 * t455 / 0.2e1 + t171 * t537 * t43 / 0.4e1 - t136 * pkin(1) * t469 + t93 - t96 + 0.2e1 * qJD(5) * t484 * t7 * pkin(2) + 0.2e1 * t28 * qJD(5) * t5) * t65 * t69 - t561 * t76 * t78 + 0.2e1 * t564 * t82 * t33 + 0.2e1 * t143 * t65 * t82 * t376 - 0.2e1 * t202 * t500 + 0.8e1 * t574 * t505 * t508 - 0.2e1 * t578 * t512) * t102 * t58 * t209 - t588 * t97 * t58 * t209 - t592 * qJD(2) * t209 + 0.2e1 * t592 * t150 * t223 + 0.2e1 * t598 * t229 + t598 * t233;
	t607 = (t525 * t126 - t598 * t209) * qJD(1);
	t610 = t267 * t274;
	t617 = 0.2e1 * t18 * t454;
	t618 = t271 * t274;
	t636 = -t30 * t454 * t610 * t43 / 0.2e1 + t18 * t469 * t610 - t617 * t618 * t284 - t617 * t267 * t293 * t302 / 0.2e1 + 0.2e1 * t134 * pkin(1) * pkin(2) * t17 * t618 - t376 * t334 + 0.4e1 * t376 * t339 + 0.2e1 * t376 * t343;
	t643 = (t617 * t610 / 0.2e1 - 0.2e1 * t376 * t320) * qJD(1);
	t651 = t353 * t102;
	t655 = t236 * t97 * t76;
	t658 = t236 * t102;
	t659 = t658 * t104;
	t665 = t658 * t76;
	t668 = t353 * t116;
	t672 = t236 * t143 * t76;
	t675 = t236 * t116;
	t676 = t675 * t104;
	t682 = t675 * t76;
	t729 = t198 * t69;
	t730 = t357 * qJD(2);
	t733 = t82 * t244;
	t738 = t244 * t18 * t43;
	t743 = t105 * t69;
	t744 = t385 * qJD(2);
	t747 = t82 * t266;
	unknown(1,1) = 0;
	unknown(1,2) = (t235 * t236 + t345 * t236 + t241 * t242 + t350 * t242);
	unknown(1,3) = t353;
	unknown(1,4) = ((t355 * t358 / 0.4e1 - t362 * t364 / 0.4e1 + t368 * t369 / 0.2e1 - t367 * t373 * t377 / 0.2e1 - t380 * t381 / 0.8e1 - t384 * t386 / 0.4e1 + t390 * t392 / 0.4e1 - t396 * t397 / 0.2e1 + t395 * t400 * t403 / 0.2e1 + t406 * t408 / 0.4e1) * t412 - (-t380 * t364 + t406 * t392) * qJD(3) * t418 / 0.4e1 + (t355 * t386 / 0.4e1 - t362 * t392 / 0.4e1 + t368 * t397 / 0.2e1 - t367 * t400 * t403 / 0.2e1 - t380 * t408 / 0.4e1 + t384 * t358 / 0.4e1 - t390 * t364 / 0.4e1 + t396 * t369 / 0.2e1 - t395 * t373 * t377 / 0.2e1 - t406 * t381 / 0.8e1) * t418 + (-t406 * t364 - t380 * t392) * qJD(3) * t412 / 0.4e1);
	unknown(1,5) = (t602 * t236 + t636 * t236 + t607 * t242 + t643 * t242);
	unknown(2,1) = 0;
	unknown(2,2) = (-t235 * t242 + t241 * t236 + t350 * t236 - t345 * t242);
	unknown(2,3) = t354;
	unknown(2,4) = ((-t651 * t358 / 0.4e1 - t655 * t364 / 0.4e1 + t659 * t369 / 0.2e1 - t658 * t373 * t377 / 0.2e1 - t665 * t381 / 0.8e1 + t668 * t386 / 0.4e1 + t672 * t392 / 0.4e1 - t676 * t397 / 0.2e1 + t675 * t400 * t403 / 0.2e1 + t682 * t408 / 0.4e1) * t412 - (-t665 * t364 + t682 * t392) * qJD(3) * t418 / 0.4e1 + (-t651 * t386 / 0.4e1 - t655 * t392 / 0.4e1 + t659 * t397 / 0.2e1 - t658 * t400 * t403 / 0.2e1 - t665 * t408 / 0.4e1 - t668 * t358 / 0.4e1 - t672 * t364 / 0.4e1 + t676 * t369 / 0.2e1 - t675 * t373 * t377 / 0.2e1 - t682 * t381 / 0.8e1) * t418 + (-t682 * t364 - t665 * t392) * qJD(3) * t412 / 0.4e1);
	unknown(2,5) = (t607 * t236 + t643 * t236 - t602 * t242 - t636 * t242);
	unknown(3,1) = 0;
	unknown(3,2) = 0;
	unknown(3,3) = 0;
	unknown(3,4) = ((t196 * t364 / 0.4e1 - t729 * t730 / 0.2e1 + t201 * t733 * t377 / 0.2e1 + t212 * t738 / 0.8e1 + t98 * t392 / 0.4e1 - t743 * t744 / 0.2e1 + t108 * t747 * t403 / 0.2e1 + t108 * t408 / 0.4e1) * t412 - (t108 * t392 + t201 * t364) * qJD(3) * t418 / 0.4e1 + (t196 * t392 / 0.4e1 - t729 * t744 / 0.2e1 + t201 * t747 * t403 / 0.2e1 + t201 * t408 / 0.4e1 - t98 * t364 / 0.4e1 + t743 * t730 / 0.2e1 - t108 * t733 * t377 / 0.2e1 - t129 * t738 / 0.8e1) * t418 + (-t108 * t364 + t201 * t392) * qJD(3) * t412 / 0.4e1);
	unknown(3,5) = 0;
	JgD_rot = unknown;
elseif link_index == 7
	%% Symbolic Calculation
	% From jacobigD_rot_7_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-04-11 21:48:18
	% EndTime: 2020-04-11 21:48:18
	% DurationCPUTime: 0.02s
	% Computational Cost: add. (0->0), mult. (2->2), div. (0->0), fcn. (2->2), ass. (0->17)
	unknown=NaN(3,5);
	t1 = cos(qJ(1));
	t3 = sin(qJ(1));
	unknown(1,1) = 0;
	unknown(1,2) = 0;
	unknown(1,3) = 0;
	unknown(1,4) = 0;
	unknown(1,5) = (qJD(1) * t1);
	unknown(2,1) = 0;
	unknown(2,2) = 0;
	unknown(2,3) = 0;
	unknown(2,4) = 0;
	unknown(2,5) = (qJD(1) * t3);
	unknown(3,1) = 0;
	unknown(3,2) = 0;
	unknown(3,3) = 0;
	unknown(3,4) = 0;
	unknown(3,5) = 0;
	JgD_rot = unknown;
else
	JgD_rot=NaN(3,5);
end