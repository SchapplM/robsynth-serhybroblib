% Zeitableitung der rotatorischen Teilmatrix der geometrischen Jacobi-Matrix für beliebiges Segment von
% palh4m1DE2
% Use Code from Maple symbolic Code Generation
%
% Geometrische Jacobi-Matrix: Differentieller Zusammenhang zwischen
% Endeffektorgeschwindigkeit und Geschw. der verallgemeinerten Koordinaten.
% 
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% link_index [1x1 uint8]
%   Index des Segmentes, auf dem der Punkt C liegt. (0=Basis).
%   Siehe auch: bsp_3T1R_fkine_fixb_rotmat_mdh_sym_varpar.m
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[AB,AD,CB,CE,EP,HC,OT,TA,TD]';
% 
% Output:
% JgD_rot [3x5]
%   Zeitableitung der rotatorischen Teilmatrix der geometrischen Jacobi-Matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2020-04-11 22:54
% Revision: 6ae2d958c5b90587a0d08029b131cb7b66342a68 (2020-04-11)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function JgD_rot = palh4m1DE2_jacobigD_rot_sym_varpar(qJ, qJD, link_index, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),uint8(0),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'palh4m1DE2_jacobigD_rot_sym_varpar: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'palh4m1DE2_jacobigD_rot_sym_varpar: qJD has to be [5x1] (double)');
assert(isa(link_index,'uint8') && all(size(link_index) == [1 1]), ...
	'palh4m1DE2_jacobigD_rot_sym_varpar: link_index has to be [1x1] uint8');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'palh4m1DE2_jacobigD_rot_sym_varpar: pkin has to be [9x1] (double)');
if link_index == 0
	%% Symbolic Calculation
	% From jacobigD_rot_0_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-04-11 22:53:32
	% EndTime: 2020-04-11 22:53:32
	% DurationCPUTime: 0.01s
	% Computational Cost: add. (0->0), mult. (0->0), div. (0->0), fcn. (0->0), ass. (0->15)
	unknown=NaN(3,5);
	unknown(1,1) = 0;
	unknown(1,2) = 0;
	unknown(1,3) = 0;
	unknown(1,4) = 0;
	unknown(1,5) = 0;
	unknown(2,1) = 0;
	unknown(2,2) = 0;
	unknown(2,3) = 0;
	unknown(2,4) = 0;
	unknown(2,5) = 0;
	unknown(3,1) = 0;
	unknown(3,2) = 0;
	unknown(3,3) = 0;
	unknown(3,4) = 0;
	unknown(3,5) = 0;
	JgD_rot = unknown;
elseif link_index == 1
	%% Symbolic Calculation
	% From jacobigD_rot_1_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-04-11 22:53:32
	% EndTime: 2020-04-11 22:53:32
	% DurationCPUTime: 0.01s
	% Computational Cost: add. (0->0), mult. (0->0), div. (0->0), fcn. (0->0), ass. (0->15)
	unknown=NaN(3,5);
	unknown(1,1) = 0;
	unknown(1,2) = 0;
	unknown(1,3) = 0;
	unknown(1,4) = 0;
	unknown(1,5) = 0;
	unknown(2,1) = 0;
	unknown(2,2) = 0;
	unknown(2,3) = 0;
	unknown(2,4) = 0;
	unknown(2,5) = 0;
	unknown(3,1) = 0;
	unknown(3,2) = 0;
	unknown(3,3) = 0;
	unknown(3,4) = 0;
	unknown(3,5) = 0;
	JgD_rot = unknown;
elseif link_index == 2
	%% Symbolic Calculation
	% From jacobigD_rot_2_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-04-11 22:53:33
	% EndTime: 2020-04-11 22:53:33
	% DurationCPUTime: 0.23s
	% Computational Cost: add. (14840->137), mult. (15196->348), div. (452->17), fcn. (3934->6), ass. (0->145)
	unknown=NaN(3,5);
	t1 = cos(qJ(5));
	t2 = t1 * qJD(5);
	t3 = sin(qJ(5));
	t4 = pkin(1) * t3;
	t5 = pkin(2) * t4;
	t6 = 0.2e1 * t5;
	t7 = pkin(1) ^ 2;
	t8 = pkin(2) + qJ(2) + pkin(6) + pkin(3);
	t9 = pkin(2) - qJ(2) - pkin(6) - pkin(3);
	t11 = t9 * t8 - t6 + t7;
	t12 = pkin(2) + qJ(2) + pkin(6) - pkin(3);
	t13 = pkin(2) - qJ(2) - pkin(6) + pkin(3);
	t15 = t13 * t12 - t6 + t7;
	t16 = t15 * t11;
	t17 = sqrt(-t16);
	t18 = 0.1e1 / t17;
	t19 = t18 * pkin(1);
	t20 = -qJ(2) - pkin(6) - pkin(3);
	t22 = -qJ(2) - pkin(6) + pkin(3);
	t24 = -0.2e1 * t22 * t11 - 0.2e1 * t15 * t20;
	t25 = t24 * t19;
	t28 = -t4 + pkin(2);
	t30 = -0.1e1 / t17 / t16;
	t31 = t30 * t28;
	t32 = pkin(1) * pkin(2);
	t33 = t32 * t2;
	t34 = 0.2e1 * t33;
	t37 = -qJD(2) * t8 + t9 * qJD(2) - t34;
	t41 = -qJD(2) * t12 + t13 * qJD(2) - t34;
	t43 = -t41 * t11 - t15 * t37;
	t47 = t18 * t28;
	t54 = 0.2e1 * qJD(2) * t11 + 0.2e1 * t15 * qJD(2) - 0.2e1 * t41 * t20 - 0.2e1 * t22 * t37;
	t57 = pkin(1) * qJD(5);
	t58 = qJ(2) + pkin(6);
	t61 = t1 * pkin(1);
	t65 = 0.1e1 / t58;
	t67 = pkin(2) ^ 2;
	t68 = -t6 + t7 + t67;
	t69 = 0.1e1 / t68;
	t74 = t24 * t47 / 0.2e1 + 0.2e1 * t58 * t61;
	t75 = t58 ^ 2;
	t76 = 0.1e1 / t75;
	t78 = qJD(2) * t69;
	t80 = t65 * t74;
	t81 = t68 ^ 2;
	t82 = 0.1e1 / t81;
	t86 = t17 * pkin(1);
	t87 = t86 * t2;
	t90 = pkin(3) ^ 2;
	t91 = -t6 + t7 + t67 + t75 - t90;
	t93 = t91 * t3 * t57;
	t95 = qJD(2) * t58 - t33;
	t96 = 0.2e1 * t95 * t61;
	t97 = -t87 + t43 * t47 / 0.2e1 - t93 + t96;
	t101 = t91 * t61;
	t102 = t17 * t28 + t101;
	t104 = 0.1e1 / t75 / t58;
	t108 = t76 * t102;
	t109 = t82 * t108;
	t114 = pkin(1) * t17 * t1;
	t116 = t91 * t28 - t114;
	t117 = 0.1e1 / t116;
	t120 = t102 ^ 2;
	t121 = t116 ^ 2;
	t122 = 0.1e1 / t121;
	t124 = t122 * t120 + 0.1e1;
	t125 = 0.1e1 / t124;
	t126 = t125 * t68 * t58;
	t130 = -t69 * t108 + t69 * t80;
	t134 = t3 * qJD(5);
	t135 = t86 * t134;
	t136 = t18 * t1;
	t137 = t43 * pkin(1);
	t139 = t137 * t136 / 0.2e1;
	t141 = t91 * pkin(1) * t2;
	t143 = 0.2e1 * t95 * t28 + t135 - t139 - t141;
	t144 = t143 * t125 * t68;
	t146 = t117 * t130;
	t148 = t125 * t68 * qJD(2);
	t150 = qJD(5) * t58;
	t153 = t125 * pkin(2) * t61;
	t157 = t124 ^ 2;
	t158 = 0.1e1 / t157;
	t163 = 0.1e1 / t121 / t116;
	t166 = t97 * t122 * t102 - t143 * t163 * t120;
	t167 = 0.2e1 * t166 * t158 * t68;
	t171 = t30 * t1;
	t172 = t24 * pkin(1);
	t189 = -t172 * t136 / 0.2e1 + 0.2e1 * t58 * t28;
	t192 = t65 * t189;
	t201 = t76 * t116;
	t202 = t82 * t201;
	t208 = t122 * t68;
	t209 = t125 * t208;
	t213 = t69 * t192 - t69 * t201;
	t217 = t102 * t213;
	t223 = t125 * t122 * pkin(2) * t61;
	t226 = t58 * t217;
	t229 = t143 * t125 * t163 * t68;
	t233 = 0.2e1 * t166 * t158 * t208;
	t235 = t126 * t117 * (t69 * t65 * (-t25 * t2 / 0.2e1 - t43 * t24 * t31 / 0.4e1 + t54 * t47 / 0.2e1 - 0.2e1 * t58 * t3 * t57 + 0.2e1 * qJD(2) * t61) - t78 * t76 * t74 + 0.2e1 * t33 * t82 * t80 - t69 * t76 * t97 + 0.2e1 * t78 * t104 * t102 - 0.2e1 * t33 * t109) - t144 * t58 * t122 * t130 + t148 * t146 - 0.2e1 * t153 * t150 * t146 - t167 * t58 * t146 - t209 * t58 * t102 * (t69 * t65 * (t25 * t134 / 0.2e1 + t43 * t172 * t171 / 0.4e1 - t54 * pkin(1) * t136 / 0.2e1 - 0.2e1 * t58 * pkin(1) * t2 + 0.2e1 * qJD(2) * t28) - t78 * t76 * t189 + 0.2e1 * t33 * t82 * t192 - t69 * t76 * t143 + 0.2e1 * t78 * t104 * t116 - 0.2e1 * t33 * t202) - t209 * t58 * t97 * t213 - t209 * qJD(2) * t217 + 0.2e1 * t223 * t150 * t217 + 0.2e1 * t229 * t226 + t233 * t226;
	t236 = sin(qJ(1));
	t241 = qJD(1) * (t126 * t146 - t209 * t226);
	t242 = cos(qJ(1));
	t249 = t15 * pkin(2) * t61 + t32 * t1 * t11;
	t250 = 0.2e1 * t249 * t19;
	t264 = t41 * pkin(2) * t61 - t5 * qJD(5) * t11 + t32 * t1 * t37 - t15 * t32 * t134;
	t279 = t1 ^ 2;
	t280 = t279 * t7;
	t283 = -0.2e1 * pkin(2) * t280 + t249 * t47 - t91 * t4 - t114;
	t286 = t65 * t283;
	t292 = pkin(2) * t61;
	t296 = pkin(2) * qJD(2) * t61;
	t299 = t65 * t102;
	t301 = 0.1e1 / t81 / t68;
	t304 = qJD(5) * t67 * t280;
	t307 = t82 * t299;
	t308 = t32 * t134;
	t317 = t69 * t286 + 0.2e1 * t292 * t307;
	t321 = t117 * t317;
	t333 = 0.2e1 * t249 * pkin(1);
	t357 = pkin(1) * t17 * t3 - t333 * t136 / 0.2e1 - t101 - 0.2e1 * t32 * t1 * t28;
	t360 = t65 * t357;
	t370 = t65 * t116;
	t374 = t82 * t370;
	t384 = 0.2e1 * t292 * t374 + t69 * t360;
	t388 = t102 * t384;
	t394 = t58 * t388;
	t398 = t126 * t117 * (t69 * t65 * (t135 - t139 - t250 * t2 / 0.2e1 - t43 * t249 * t31 / 0.2e1 + t264 * t47 - t141 - 0.2e1 * t95 * t4 + 0.4e1 * t3 * qJD(5) * pkin(2) * t1 * t7) - t78 * t76 * t283 + 0.2e1 * t33 * t82 * t286 + 0.2e1 * t292 * t82 * t65 * t97 - 0.2e1 * t296 * t109 + 0.8e1 * t304 * t301 * t299 - 0.2e1 * t308 * t307) - t144 * t58 * t122 * t317 + t148 * t321 - 0.2e1 * t153 * t150 * t321 - t167 * t58 * t321 - t209 * t58 * t102 * (t69 * t65 * (t87 + t137 * t18 * t3 / 0.2e1 + t250 * t134 / 0.2e1 + t43 * t333 * t171 / 0.4e1 - t264 * pkin(1) * t136 + t93 - t96 + 0.2e1 * pkin(2) * t7 * t279 * qJD(5) + 0.2e1 * t5 * qJD(5) * t28) - t78 * t76 * t357 + 0.2e1 * t33 * t82 * t360 + 0.2e1 * t292 * t82 * t65 * t143 - 0.2e1 * t296 * t202 + 0.8e1 * t304 * t301 * t370 - 0.2e1 * t308 * t374) - t209 * t58 * t97 * t384 - t209 * qJD(2) * t388 + 0.2e1 * t223 * t150 * t388 + 0.2e1 * t229 * t394 + t233 * t394;
	t403 = qJD(1) * (t126 * t321 - t209 * t394);
	unknown(1,1) = 0;
	unknown(1,2) = (t236 * t235 + t242 * t241);
	unknown(1,3) = 0;
	unknown(1,4) = 0;
	unknown(1,5) = (t236 * t398 + t242 * t403);
	unknown(2,1) = 0;
	unknown(2,2) = (-t242 * t235 + t236 * t241);
	unknown(2,3) = 0;
	unknown(2,4) = 0;
	unknown(2,5) = (t236 * t403 - t242 * t398);
	unknown(3,1) = 0;
	unknown(3,2) = 0;
	unknown(3,3) = 0;
	unknown(3,4) = 0;
	unknown(3,5) = 0;
	JgD_rot = unknown;
elseif link_index == 3
	%% Symbolic Calculation
	% From jacobigD_rot_3_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-04-11 22:53:33
	% EndTime: 2020-04-11 22:53:33
	% DurationCPUTime: 0.24s
	% Computational Cost: add. (14840->137), mult. (15196->348), div. (452->17), fcn. (3934->6), ass. (0->145)
	unknown=NaN(3,5);
	t1 = cos(qJ(5));
	t2 = t1 * qJD(5);
	t3 = sin(qJ(5));
	t4 = pkin(1) * t3;
	t5 = pkin(2) * t4;
	t6 = 0.2e1 * t5;
	t7 = pkin(1) ^ 2;
	t8 = pkin(2) + qJ(2) + pkin(6) + pkin(3);
	t9 = pkin(2) - qJ(2) - pkin(6) - pkin(3);
	t11 = t9 * t8 - t6 + t7;
	t12 = pkin(2) + qJ(2) + pkin(6) - pkin(3);
	t13 = pkin(2) - qJ(2) - pkin(6) + pkin(3);
	t15 = t13 * t12 - t6 + t7;
	t16 = t15 * t11;
	t17 = sqrt(-t16);
	t18 = 0.1e1 / t17;
	t19 = t18 * pkin(1);
	t20 = -qJ(2) - pkin(6) - pkin(3);
	t22 = -qJ(2) - pkin(6) + pkin(3);
	t24 = -0.2e1 * t22 * t11 - 0.2e1 * t15 * t20;
	t25 = t24 * t19;
	t28 = -t4 + pkin(2);
	t30 = -0.1e1 / t17 / t16;
	t31 = t30 * t28;
	t32 = pkin(1) * pkin(2);
	t33 = t32 * t2;
	t34 = 0.2e1 * t33;
	t37 = -qJD(2) * t8 + t9 * qJD(2) - t34;
	t41 = -qJD(2) * t12 + t13 * qJD(2) - t34;
	t43 = -t41 * t11 - t15 * t37;
	t47 = t18 * t28;
	t54 = 0.2e1 * qJD(2) * t11 + 0.2e1 * t15 * qJD(2) - 0.2e1 * t41 * t20 - 0.2e1 * t22 * t37;
	t57 = pkin(1) * qJD(5);
	t58 = qJ(2) + pkin(6);
	t61 = t1 * pkin(1);
	t65 = 0.1e1 / t58;
	t67 = pkin(2) ^ 2;
	t68 = -t6 + t7 + t67;
	t69 = 0.1e1 / t68;
	t74 = t24 * t47 / 0.2e1 + 0.2e1 * t58 * t61;
	t75 = t58 ^ 2;
	t76 = 0.1e1 / t75;
	t78 = qJD(2) * t69;
	t80 = t65 * t74;
	t81 = t68 ^ 2;
	t82 = 0.1e1 / t81;
	t86 = t17 * pkin(1);
	t87 = t86 * t2;
	t90 = pkin(3) ^ 2;
	t91 = -t6 + t7 + t67 + t75 - t90;
	t93 = t91 * t3 * t57;
	t95 = qJD(2) * t58 - t33;
	t96 = 0.2e1 * t95 * t61;
	t97 = -t87 + t43 * t47 / 0.2e1 - t93 + t96;
	t101 = t91 * t61;
	t102 = t17 * t28 + t101;
	t104 = 0.1e1 / t75 / t58;
	t108 = t76 * t102;
	t109 = t82 * t108;
	t114 = pkin(1) * t17 * t1;
	t116 = t91 * t28 - t114;
	t117 = 0.1e1 / t116;
	t120 = t102 ^ 2;
	t121 = t116 ^ 2;
	t122 = 0.1e1 / t121;
	t124 = t122 * t120 + 0.1e1;
	t125 = 0.1e1 / t124;
	t126 = t125 * t68 * t58;
	t130 = -t69 * t108 + t69 * t80;
	t134 = t3 * qJD(5);
	t135 = t86 * t134;
	t136 = t18 * t1;
	t137 = t43 * pkin(1);
	t139 = t137 * t136 / 0.2e1;
	t141 = t91 * pkin(1) * t2;
	t143 = 0.2e1 * t95 * t28 + t135 - t139 - t141;
	t144 = t143 * t125 * t68;
	t146 = t117 * t130;
	t148 = t125 * t68 * qJD(2);
	t150 = qJD(5) * t58;
	t153 = t125 * pkin(2) * t61;
	t157 = t124 ^ 2;
	t158 = 0.1e1 / t157;
	t163 = 0.1e1 / t121 / t116;
	t166 = t97 * t122 * t102 - t143 * t163 * t120;
	t167 = 0.2e1 * t166 * t158 * t68;
	t171 = t30 * t1;
	t172 = t24 * pkin(1);
	t189 = -t172 * t136 / 0.2e1 + 0.2e1 * t58 * t28;
	t192 = t65 * t189;
	t201 = t76 * t116;
	t202 = t82 * t201;
	t208 = t122 * t68;
	t209 = t125 * t208;
	t213 = t69 * t192 - t69 * t201;
	t217 = t102 * t213;
	t223 = t125 * t122 * pkin(2) * t61;
	t226 = t58 * t217;
	t229 = t143 * t125 * t163 * t68;
	t233 = 0.2e1 * t166 * t158 * t208;
	t235 = t126 * t117 * (t69 * t65 * (-t25 * t2 / 0.2e1 - t43 * t24 * t31 / 0.4e1 + t54 * t47 / 0.2e1 - 0.2e1 * t58 * t3 * t57 + 0.2e1 * qJD(2) * t61) - t78 * t76 * t74 + 0.2e1 * t33 * t82 * t80 - t69 * t76 * t97 + 0.2e1 * t78 * t104 * t102 - 0.2e1 * t33 * t109) - t144 * t58 * t122 * t130 + t148 * t146 - 0.2e1 * t153 * t150 * t146 - t167 * t58 * t146 - t209 * t58 * t102 * (t69 * t65 * (t25 * t134 / 0.2e1 + t43 * t172 * t171 / 0.4e1 - t54 * pkin(1) * t136 / 0.2e1 - 0.2e1 * t58 * pkin(1) * t2 + 0.2e1 * qJD(2) * t28) - t78 * t76 * t189 + 0.2e1 * t33 * t82 * t192 - t69 * t76 * t143 + 0.2e1 * t78 * t104 * t116 - 0.2e1 * t33 * t202) - t209 * t58 * t97 * t213 - t209 * qJD(2) * t217 + 0.2e1 * t223 * t150 * t217 + 0.2e1 * t229 * t226 + t233 * t226;
	t236 = sin(qJ(1));
	t241 = qJD(1) * (t126 * t146 - t209 * t226);
	t242 = cos(qJ(1));
	t249 = t15 * pkin(2) * t61 + t32 * t1 * t11;
	t250 = 0.2e1 * t249 * t19;
	t264 = t41 * pkin(2) * t61 - t5 * qJD(5) * t11 + t32 * t1 * t37 - t15 * t32 * t134;
	t279 = t1 ^ 2;
	t280 = t279 * t7;
	t283 = -0.2e1 * pkin(2) * t280 + t249 * t47 - t91 * t4 - t114;
	t286 = t65 * t283;
	t292 = pkin(2) * t61;
	t296 = pkin(2) * qJD(2) * t61;
	t299 = t65 * t102;
	t301 = 0.1e1 / t81 / t68;
	t304 = qJD(5) * t67 * t280;
	t307 = t82 * t299;
	t308 = t32 * t134;
	t317 = t69 * t286 + 0.2e1 * t292 * t307;
	t321 = t117 * t317;
	t333 = 0.2e1 * t249 * pkin(1);
	t357 = pkin(1) * t17 * t3 - t333 * t136 / 0.2e1 - t101 - 0.2e1 * t32 * t1 * t28;
	t360 = t65 * t357;
	t370 = t65 * t116;
	t374 = t82 * t370;
	t384 = 0.2e1 * t292 * t374 + t69 * t360;
	t388 = t102 * t384;
	t394 = t58 * t388;
	t398 = t126 * t117 * (t69 * t65 * (t135 - t139 - t250 * t2 / 0.2e1 - t43 * t249 * t31 / 0.2e1 + t264 * t47 - t141 - 0.2e1 * t95 * t4 + 0.4e1 * t3 * qJD(5) * pkin(2) * t1 * t7) - t78 * t76 * t283 + 0.2e1 * t33 * t82 * t286 + 0.2e1 * t292 * t82 * t65 * t97 - 0.2e1 * t296 * t109 + 0.8e1 * t304 * t301 * t299 - 0.2e1 * t308 * t307) - t144 * t58 * t122 * t317 + t148 * t321 - 0.2e1 * t153 * t150 * t321 - t167 * t58 * t321 - t209 * t58 * t102 * (t69 * t65 * (t87 + t137 * t18 * t3 / 0.2e1 + t250 * t134 / 0.2e1 + t43 * t333 * t171 / 0.4e1 - t264 * pkin(1) * t136 + t93 - t96 + 0.2e1 * pkin(2) * t7 * t279 * qJD(5) + 0.2e1 * t5 * qJD(5) * t28) - t78 * t76 * t357 + 0.2e1 * t33 * t82 * t360 + 0.2e1 * t292 * t82 * t65 * t143 - 0.2e1 * t296 * t202 + 0.8e1 * t304 * t301 * t370 - 0.2e1 * t308 * t374) - t209 * t58 * t97 * t384 - t209 * qJD(2) * t388 + 0.2e1 * t223 * t150 * t388 + 0.2e1 * t229 * t394 + t233 * t394;
	t403 = qJD(1) * (t126 * t321 - t209 * t394);
	unknown(1,1) = 0;
	unknown(1,2) = (t236 * t235 + t242 * t241);
	unknown(1,3) = 0;
	unknown(1,4) = 0;
	unknown(1,5) = (t236 * t398 + t242 * t403);
	unknown(2,1) = 0;
	unknown(2,2) = (-t242 * t235 + t236 * t241);
	unknown(2,3) = 0;
	unknown(2,4) = 0;
	unknown(2,5) = (t236 * t403 - t242 * t398);
	unknown(3,1) = 0;
	unknown(3,2) = 0;
	unknown(3,3) = 0;
	unknown(3,4) = 0;
	unknown(3,5) = 0;
	JgD_rot = unknown;
elseif link_index == 4
	%% Symbolic Calculation
	% From jacobigD_rot_4_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-04-11 22:53:33
	% EndTime: 2020-04-11 22:53:34
	% DurationCPUTime: 0.36s
	% Computational Cost: add. (18600->179), mult. (18718->480), div. (710->24), fcn. (4574->6), ass. (0->181)
	unknown=NaN(3,5);
	t1 = cos(qJ(5));
	t2 = t1 * qJD(5);
	t3 = sin(qJ(5));
	t4 = pkin(1) * t3;
	t5 = pkin(2) * t4;
	t6 = 0.2e1 * t5;
	t7 = pkin(1) ^ 2;
	t8 = pkin(2) + qJ(2) + pkin(6) + pkin(3);
	t9 = pkin(2) - qJ(2) - pkin(6) - pkin(3);
	t11 = t9 * t8 - t6 + t7;
	t12 = pkin(2) + qJ(2) + pkin(6) - pkin(3);
	t13 = pkin(2) - qJ(2) - pkin(6) + pkin(3);
	t15 = t13 * t12 - t6 + t7;
	t16 = t15 * t11;
	t17 = sqrt(-t16);
	t18 = 0.1e1 / t17;
	t19 = t18 * pkin(1);
	t20 = -qJ(2) - pkin(6) - pkin(3);
	t22 = -qJ(2) - pkin(6) + pkin(3);
	t24 = -0.2e1 * t22 * t11 - 0.2e1 * t15 * t20;
	t25 = t24 * t19;
	t28 = -t4 + pkin(2);
	t30 = -0.1e1 / t17 / t16;
	t31 = t30 * t28;
	t32 = pkin(1) * pkin(2);
	t33 = t32 * t2;
	t34 = 0.2e1 * t33;
	t37 = -qJD(2) * t8 + t9 * qJD(2) - t34;
	t38 = t15 * t37;
	t41 = -qJD(2) * t12 + t13 * qJD(2) - t34;
	t42 = t41 * t11;
	t43 = -t38 - t42;
	t47 = t18 * t28;
	t54 = 0.2e1 * qJD(2) * t11 + 0.2e1 * t15 * qJD(2) - 0.2e1 * t41 * t20 - 0.2e1 * t22 * t37;
	t57 = pkin(1) * qJD(5);
	t58 = qJ(2) + pkin(6);
	t61 = t1 * pkin(1);
	t65 = 0.1e1 / t58;
	t67 = pkin(2) ^ 2;
	t68 = -t6 + t7 + t67;
	t69 = 0.1e1 / t68;
	t74 = t24 * t47 / 0.2e1 + 0.2e1 * t58 * t61;
	t75 = t58 ^ 2;
	t76 = 0.1e1 / t75;
	t78 = qJD(2) * t69;
	t80 = t65 * t74;
	t81 = t68 ^ 2;
	t82 = 0.1e1 / t81;
	t86 = t17 * pkin(1);
	t87 = t86 * t2;
	t90 = pkin(3) ^ 2;
	t91 = -t6 + t7 + t67 + t75 - t90;
	t93 = t91 * t3 * t57;
	t94 = qJD(2) * t58;
	t95 = -t33 + t94;
	t96 = 0.2e1 * t95 * t61;
	t97 = -t87 + t43 * t47 / 0.2e1 - t93 + t96;
	t101 = t91 * t61;
	t102 = t17 * t28 + t101;
	t104 = 0.1e1 / t75 / t58;
	t108 = t76 * t102;
	t109 = t82 * t108;
	t114 = pkin(1) * t17 * t1;
	t116 = t91 * t28 - t114;
	t117 = 0.1e1 / t116;
	t120 = t102 ^ 2;
	t121 = t116 ^ 2;
	t122 = 0.1e1 / t121;
	t124 = t122 * t120 + 0.1e1;
	t125 = 0.1e1 / t124;
	t126 = t125 * t68 * t58;
	t130 = -t69 * t108 + t69 * t80;
	t134 = t3 * qJD(5);
	t135 = t86 * t134;
	t136 = t18 * t1;
	t137 = t43 * pkin(1);
	t139 = t137 * t136 / 0.2e1;
	t141 = t91 * pkin(1) * t2;
	t143 = 0.2e1 * t95 * t28 + t135 - t139 - t141;
	t144 = t143 * t125 * t68;
	t146 = t117 * t130;
	t148 = t125 * t68 * qJD(2);
	t150 = qJD(5) * t58;
	t153 = t125 * pkin(2) * t61;
	t157 = t124 ^ 2;
	t158 = 0.1e1 / t157;
	t163 = 0.1e1 / t121 / t116;
	t166 = t97 * t122 * t102 - t143 * t163 * t120;
	t167 = 0.2e1 * t166 * t158 * t68;
	t171 = t30 * t1;
	t172 = t24 * pkin(1);
	t189 = -t172 * t136 / 0.2e1 + 0.2e1 * t58 * t28;
	t192 = t65 * t189;
	t201 = t76 * t116;
	t202 = t82 * t201;
	t208 = t122 * t68;
	t209 = t125 * t208;
	t213 = t69 * t192 - t69 * t201;
	t217 = t102 * t213;
	t223 = t125 * t122 * pkin(2) * t61;
	t226 = t58 * t217;
	t229 = t143 * t125 * t163 * t68;
	t233 = 0.2e1 * t166 * t158 * t208;
	t235 = t126 * t117 * (t69 * t65 * (-t25 * t2 / 0.2e1 - t43 * t24 * t31 / 0.4e1 + t54 * t47 / 0.2e1 - 0.2e1 * t58 * t3 * t57 + 0.2e1 * qJD(2) * t61) - t78 * t76 * t74 + 0.2e1 * t33 * t82 * t80 - t69 * t76 * t97 + 0.2e1 * t78 * t104 * t102 - 0.2e1 * t33 * t109) - t144 * t58 * t122 * t130 + t148 * t146 - 0.2e1 * t153 * t150 * t146 - t167 * t58 * t146 - t209 * t58 * t102 * (t69 * t65 * (t25 * t134 / 0.2e1 + t43 * t172 * t171 / 0.4e1 - t54 * pkin(1) * t136 / 0.2e1 - 0.2e1 * t58 * pkin(1) * t2 + 0.2e1 * qJD(2) * t28) - t78 * t76 * t189 + 0.2e1 * t33 * t82 * t192 - t69 * t76 * t143 + 0.2e1 * t78 * t104 * t116 - 0.2e1 * t33 * t202) - t209 * t58 * t97 * t213 - t209 * qJD(2) * t217 + 0.2e1 * t223 * t150 * t217 + 0.2e1 * t229 * t226 + t233 * t226;
	t236 = sin(qJ(1));
	t241 = qJD(1) * (t126 * t146 - t209 * t226);
	t242 = cos(qJ(1));
	t244 = 0.1e1 / pkin(3);
	t249 = t244 * t76;
	t253 = t24 * t18;
	t257 = t244 * t65;
	t266 = t6 - t7 - t67 + t75 + t90;
	t267 = 0.1e1 / t266;
	t270 = t266 ^ 2;
	t271 = 0.1e1 / t270;
	t273 = -t271 * t16 + 0.1e1;
	t274 = 0.1e1 / t273;
	t275 = t274 * pkin(3) * t58;
	t280 = -t17 * t249 + t253 * t257 / 0.2e1;
	t284 = t33 + t94;
	t287 = t267 * t280;
	t292 = t273 ^ 2;
	t293 = 0.1e1 / t292;
	t298 = 0.1e1 / t270 / t266;
	t302 = 0.4e1 * t284 * t298 * t16 - t271 * t38 - t271 * t42;
	t309 = qJD(2) * t244;
	t319 = t271 * t17;
	t320 = t274 * t319;
	t326 = -t244 * t76 * t266 + 0.2e1 * t244 * t65 * t58;
	t331 = pkin(3) * t58 * t326;
	t334 = t43 * t274 * t271 * t18;
	t339 = 0.2e1 * t284 * t274 * t298 * t17;
	t343 = t302 * t293 * t319;
	t345 = t275 * t267 * (0.2e1 * qJD(2) * t17 * t244 * t104 - t43 * t18 * t249 / 0.2e1 - qJD(2) * t253 * t249 / 0.2e1 - t43 * t24 * t30 * t257 / 0.4e1 + t54 * t18 * t257 / 0.2e1) - 0.2e1 * t284 * t274 * pkin(3) * t58 * t271 * t280 + t274 * pkin(3) * qJD(2) * t287 - t302 * t293 * pkin(3) * t58 * t287 - t320 * pkin(3) * t58 * (0.2e1 * t244 * t65 * qJD(2) + 0.2e1 * t309 * t104 * t266 - 0.2e1 * t244 * t76 * t284 - 0.2e1 * t309 * t76 * t58) - t320 * pkin(3) * qJD(2) * t326 - t334 * t331 / 0.2e1 + 0.2e1 * t339 * t331 + t343 * t331;
	t350 = qJD(1) * (t275 * t287 - t320 * t331);
	t357 = t15 * pkin(2) * t61 + t32 * t1 * t11;
	t358 = 0.2e1 * t357 * t19;
	t372 = t41 * pkin(2) * t61 - t5 * qJD(5) * t11 + t32 * t1 * t37 - t15 * t32 * t134;
	t387 = t1 ^ 2;
	t388 = t387 * t7;
	t391 = -0.2e1 * pkin(2) * t388 + t357 * t47 - t91 * t4 - t114;
	t394 = t65 * t391;
	t400 = pkin(2) * t61;
	t404 = pkin(2) * qJD(2) * t61;
	t407 = t65 * t102;
	t409 = 0.1e1 / t81 / t68;
	t412 = qJD(5) * t67 * t388;
	t415 = t82 * t407;
	t416 = t32 * t134;
	t425 = t69 * t394 + 0.2e1 * t400 * t415;
	t429 = t117 * t425;
	t441 = 0.2e1 * t357 * pkin(1);
	t465 = pkin(1) * t17 * t3 - t441 * t136 / 0.2e1 - t101 - 0.2e1 * t32 * t1 * t28;
	t468 = t65 * t465;
	t478 = t65 * t116;
	t482 = t82 * t478;
	t492 = 0.2e1 * t400 * t482 + t69 * t468;
	t496 = t102 * t492;
	t502 = t58 * t496;
	t506 = t126 * t117 * (t69 * t65 * (t135 - t139 - t358 * t2 / 0.2e1 - t43 * t357 * t31 / 0.2e1 + t372 * t47 - t141 - 0.2e1 * t95 * t4 + 0.4e1 * t3 * qJD(5) * pkin(2) * t1 * t7) - t78 * t76 * t391 + 0.2e1 * t33 * t82 * t394 + 0.2e1 * t400 * t82 * t65 * t97 - 0.2e1 * t404 * t109 + 0.8e1 * t412 * t409 * t407 - 0.2e1 * t416 * t415) - t144 * t58 * t122 * t425 + t148 * t429 - 0.2e1 * t153 * t150 * t429 - t167 * t58 * t429 - t209 * t58 * t102 * (t69 * t65 * (t87 + t137 * t18 * t3 / 0.2e1 + t358 * t134 / 0.2e1 + t43 * t441 * t171 / 0.4e1 - t372 * pkin(1) * t136 + t93 - t96 + 0.2e1 * pkin(2) * t7 * t387 * qJD(5) + 0.2e1 * t5 * qJD(5) * t28) - t78 * t76 * t465 + 0.2e1 * t33 * t82 * t468 + 0.2e1 * t400 * t82 * t65 * t143 - 0.2e1 * t404 * t202 + 0.8e1 * t412 * t409 * t478 - 0.2e1 * t416 * t482) - t209 * t58 * t97 * t492 - t209 * qJD(2) * t496 + 0.2e1 * t223 * t150 * t496 + 0.2e1 * t229 * t502 + t233 * t502;
	t511 = qJD(1) * (t126 * t429 - t209 * t502);
	t514 = t274 * t267;
	t521 = 0.2e1 * t357 * t18;
	t522 = t274 * t271;
	t540 = -t43 * t514 * t357 * t30 / 0.2e1 + t514 * t372 * t18 - t284 * t522 * t521 - t302 * t293 * t267 * t521 / 0.2e1 + 0.2e1 * t522 * t17 * pkin(2) * pkin(1) * t134 - t334 * t400 + 0.4e1 * t339 * t400 + 0.2e1 * t343 * t400;
	t547 = qJD(1) * (t514 * t521 / 0.2e1 - 0.2e1 * t320 * t400);
	unknown(1,1) = 0;
	unknown(1,2) = (t236 * t235 + t236 * t345 + t242 * t241 + t242 * t350);
	unknown(1,3) = 0;
	unknown(1,4) = 0;
	unknown(1,5) = (t236 * t506 + t236 * t540 + t242 * t511 + t242 * t547);
	unknown(2,1) = 0;
	unknown(2,2) = (-t242 * t235 + t236 * t241 + t236 * t350 - t242 * t345);
	unknown(2,3) = 0;
	unknown(2,4) = 0;
	unknown(2,5) = (t236 * t511 + t236 * t547 - t242 * t506 - t242 * t540);
	unknown(3,1) = 0;
	unknown(3,2) = 0;
	unknown(3,3) = 0;
	unknown(3,4) = 0;
	unknown(3,5) = 0;
	JgD_rot = unknown;
elseif link_index == 5
	%% Symbolic Calculation
	% From jacobigD_rot_5_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-04-11 22:53:34
	% EndTime: 2020-04-11 22:53:34
	% DurationCPUTime: 0.37s
	% Computational Cost: add. (18600->179), mult. (18720->482), div. (710->24), fcn. (4576->6), ass. (0->181)
	unknown=NaN(3,5);
	t1 = cos(qJ(5));
	t2 = t1 * qJD(5);
	t3 = sin(qJ(5));
	t4 = pkin(1) * t3;
	t5 = pkin(2) * t4;
	t6 = 0.2e1 * t5;
	t7 = pkin(1) ^ 2;
	t8 = pkin(2) + qJ(2) + pkin(6) + pkin(3);
	t9 = pkin(2) - qJ(2) - pkin(6) - pkin(3);
	t11 = t9 * t8 - t6 + t7;
	t12 = pkin(2) + qJ(2) + pkin(6) - pkin(3);
	t13 = pkin(2) - qJ(2) - pkin(6) + pkin(3);
	t15 = t13 * t12 - t6 + t7;
	t16 = t15 * t11;
	t17 = sqrt(-t16);
	t18 = 0.1e1 / t17;
	t19 = t18 * pkin(1);
	t20 = -qJ(2) - pkin(6) - pkin(3);
	t22 = -qJ(2) - pkin(6) + pkin(3);
	t24 = -0.2e1 * t22 * t11 - 0.2e1 * t15 * t20;
	t25 = t24 * t19;
	t28 = -t4 + pkin(2);
	t30 = -0.1e1 / t17 / t16;
	t31 = t30 * t28;
	t32 = pkin(1) * pkin(2);
	t33 = t32 * t2;
	t34 = 0.2e1 * t33;
	t37 = -qJD(2) * t8 + t9 * qJD(2) - t34;
	t38 = t15 * t37;
	t41 = -qJD(2) * t12 + t13 * qJD(2) - t34;
	t42 = t41 * t11;
	t43 = -t38 - t42;
	t47 = t18 * t28;
	t54 = 0.2e1 * qJD(2) * t11 + 0.2e1 * t15 * qJD(2) - 0.2e1 * t41 * t20 - 0.2e1 * t22 * t37;
	t57 = pkin(1) * qJD(5);
	t58 = qJ(2) + pkin(6);
	t61 = t1 * pkin(1);
	t65 = 0.1e1 / t58;
	t67 = pkin(2) ^ 2;
	t68 = -t6 + t7 + t67;
	t69 = 0.1e1 / t68;
	t74 = t24 * t47 / 0.2e1 + 0.2e1 * t58 * t61;
	t75 = t58 ^ 2;
	t76 = 0.1e1 / t75;
	t78 = qJD(2) * t69;
	t80 = t65 * t74;
	t81 = t68 ^ 2;
	t82 = 0.1e1 / t81;
	t86 = t17 * pkin(1);
	t87 = t86 * t2;
	t90 = pkin(3) ^ 2;
	t91 = -t6 + t7 + t67 + t75 - t90;
	t93 = t91 * t3 * t57;
	t94 = qJD(2) * t58;
	t95 = -t33 + t94;
	t96 = 0.2e1 * t95 * t61;
	t97 = -t87 + t43 * t47 / 0.2e1 - t93 + t96;
	t101 = t91 * t61;
	t102 = t17 * t28 + t101;
	t104 = 0.1e1 / t75 / t58;
	t108 = t76 * t102;
	t109 = t82 * t108;
	t114 = pkin(1) * t17 * t1;
	t116 = t91 * t28 - t114;
	t117 = 0.1e1 / t116;
	t120 = t102 ^ 2;
	t121 = t116 ^ 2;
	t122 = 0.1e1 / t121;
	t124 = t122 * t120 + 0.1e1;
	t125 = 0.1e1 / t124;
	t126 = t125 * t68 * t58;
	t130 = -t69 * t108 + t69 * t80;
	t134 = t3 * qJD(5);
	t135 = t86 * t134;
	t136 = t18 * t1;
	t137 = t43 * pkin(1);
	t139 = t137 * t136 / 0.2e1;
	t141 = t91 * pkin(1) * t2;
	t143 = 0.2e1 * t95 * t28 + t135 - t139 - t141;
	t144 = t143 * t125 * t68;
	t146 = t117 * t130;
	t148 = t125 * t68 * qJD(2);
	t150 = qJD(5) * t58;
	t153 = t125 * pkin(2) * t61;
	t157 = t124 ^ 2;
	t158 = 0.1e1 / t157;
	t163 = 0.1e1 / t121 / t116;
	t166 = t97 * t122 * t102 - t143 * t163 * t120;
	t167 = 0.2e1 * t166 * t158 * t68;
	t171 = t30 * t1;
	t172 = t24 * pkin(1);
	t189 = -t172 * t136 / 0.2e1 + 0.2e1 * t58 * t28;
	t192 = t65 * t189;
	t201 = t76 * t116;
	t202 = t82 * t201;
	t208 = t122 * t68;
	t209 = t125 * t208;
	t213 = t69 * t192 - t69 * t201;
	t217 = t102 * t213;
	t223 = t125 * t122 * pkin(2) * t61;
	t226 = t58 * t217;
	t229 = t143 * t125 * t163 * t68;
	t233 = 0.2e1 * t166 * t158 * t208;
	t235 = t126 * t117 * (t69 * t65 * (-t25 * t2 / 0.2e1 - t43 * t24 * t31 / 0.4e1 + t54 * t47 / 0.2e1 - 0.2e1 * t58 * t3 * t57 + 0.2e1 * qJD(2) * t61) - t78 * t76 * t74 + 0.2e1 * t33 * t82 * t80 - t69 * t76 * t97 + 0.2e1 * t78 * t104 * t102 - 0.2e1 * t33 * t109) - t144 * t58 * t122 * t130 + t148 * t146 - 0.2e1 * t153 * t150 * t146 - t167 * t58 * t146 - t209 * t58 * t102 * (t69 * t65 * (t25 * t134 / 0.2e1 + t43 * t172 * t171 / 0.4e1 - t54 * pkin(1) * t136 / 0.2e1 - 0.2e1 * t58 * pkin(1) * t2 + 0.2e1 * qJD(2) * t28) - t78 * t76 * t189 + 0.2e1 * t33 * t82 * t192 - t69 * t76 * t143 + 0.2e1 * t78 * t104 * t116 - 0.2e1 * t33 * t202) - t209 * t58 * t97 * t213 - t209 * qJD(2) * t217 + 0.2e1 * t223 * t150 * t217 + 0.2e1 * t229 * t226 + t233 * t226;
	t236 = sin(qJ(1));
	t241 = qJD(1) * (t126 * t146 - t209 * t226);
	t242 = cos(qJ(1));
	t244 = 0.1e1 / pkin(3);
	t249 = t244 * t76;
	t253 = t24 * t18;
	t257 = t244 * t65;
	t266 = t6 - t7 - t67 + t75 + t90;
	t267 = 0.1e1 / t266;
	t270 = t266 ^ 2;
	t271 = 0.1e1 / t270;
	t273 = -t271 * t16 + 0.1e1;
	t274 = 0.1e1 / t273;
	t275 = t274 * pkin(3) * t58;
	t280 = -t17 * t249 + t253 * t257 / 0.2e1;
	t284 = t33 + t94;
	t287 = t267 * t280;
	t292 = t273 ^ 2;
	t293 = 0.1e1 / t292;
	t298 = 0.1e1 / t270 / t266;
	t302 = 0.4e1 * t284 * t298 * t16 - t271 * t38 - t271 * t42;
	t309 = qJD(2) * t244;
	t319 = t271 * t17;
	t320 = t274 * t319;
	t326 = -t244 * t76 * t266 + 0.2e1 * t244 * t65 * t58;
	t331 = pkin(3) * t58 * t326;
	t334 = t43 * t274 * t271 * t18;
	t339 = 0.2e1 * t284 * t274 * t298 * t17;
	t343 = t302 * t293 * t319;
	t345 = t275 * t267 * (0.2e1 * qJD(2) * t17 * t244 * t104 - t43 * t18 * t249 / 0.2e1 - qJD(2) * t253 * t249 / 0.2e1 - t43 * t24 * t30 * t257 / 0.4e1 + t54 * t18 * t257 / 0.2e1) - 0.2e1 * t284 * t274 * pkin(3) * t58 * t271 * t280 + t274 * pkin(3) * qJD(2) * t287 - t302 * t293 * pkin(3) * t58 * t287 - t320 * pkin(3) * t58 * (0.2e1 * t244 * t65 * qJD(2) + 0.2e1 * t309 * t104 * t266 - 0.2e1 * t244 * t76 * t284 - 0.2e1 * t309 * t76 * t58) - t320 * pkin(3) * qJD(2) * t326 - t334 * t331 / 0.2e1 + 0.2e1 * t339 * t331 + t343 * t331;
	t350 = qJD(1) * (t275 * t287 - t320 * t331);
	t358 = t15 * pkin(2) * t61 + t32 * t1 * t11;
	t359 = 0.2e1 * t358 * t19;
	t373 = t41 * pkin(2) * t61 - t5 * qJD(5) * t11 + t32 * t1 * t37 - t15 * t32 * t134;
	t388 = t1 ^ 2;
	t389 = t388 * t7;
	t392 = -0.2e1 * pkin(2) * t389 + t358 * t47 - t91 * t4 - t114;
	t395 = t65 * t392;
	t401 = pkin(2) * t61;
	t405 = pkin(2) * qJD(2) * t61;
	t408 = t65 * t102;
	t410 = 0.1e1 / t81 / t68;
	t413 = qJD(5) * t67 * t389;
	t416 = t82 * t408;
	t417 = t32 * t134;
	t426 = t69 * t395 + 0.2e1 * t401 * t416;
	t430 = t117 * t426;
	t442 = 0.2e1 * t358 * pkin(1);
	t466 = pkin(1) * t17 * t3 - t442 * t136 / 0.2e1 - t101 - 0.2e1 * t32 * t1 * t28;
	t469 = t65 * t466;
	t479 = t65 * t116;
	t483 = t82 * t479;
	t493 = 0.2e1 * t401 * t483 + t69 * t469;
	t497 = t102 * t493;
	t503 = t58 * t497;
	t507 = t126 * t117 * (t69 * t65 * (t135 - t139 - t359 * t2 / 0.2e1 - t43 * t358 * t31 / 0.2e1 + t373 * t47 - t141 - 0.2e1 * t95 * t4 + 0.4e1 * t3 * qJD(5) * pkin(2) * t1 * t7) - t78 * t76 * t392 + 0.2e1 * t33 * t82 * t395 + 0.2e1 * t401 * t82 * t65 * t97 - 0.2e1 * t405 * t109 + 0.8e1 * t413 * t410 * t408 - 0.2e1 * t417 * t416) - t144 * t58 * t122 * t426 + t148 * t430 - 0.2e1 * t153 * t150 * t430 - t167 * t58 * t430 - t209 * t58 * t102 * (t69 * t65 * (t87 + t137 * t18 * t3 / 0.2e1 + t359 * t134 / 0.2e1 + t43 * t442 * t171 / 0.4e1 - t373 * pkin(1) * t136 + t93 - t96 + 0.2e1 * pkin(2) * t7 * t388 * qJD(5) + 0.2e1 * t5 * qJD(5) * t28) - t78 * t76 * t466 + 0.2e1 * t33 * t82 * t469 + 0.2e1 * t401 * t82 * t65 * t143 - 0.2e1 * t405 * t202 + 0.8e1 * t413 * t410 * t479 - 0.2e1 * t417 * t483) - t209 * t58 * t97 * t493 - t209 * qJD(2) * t497 + 0.2e1 * t223 * t150 * t497 + 0.2e1 * t229 * t503 + t233 * t503;
	t512 = qJD(1) * (t126 * t430 - t209 * t503);
	t515 = t274 * t267;
	t522 = 0.2e1 * t358 * t18;
	t523 = t274 * t271;
	t541 = -t43 * t515 * t358 * t30 / 0.2e1 + t515 * t373 * t18 - t284 * t523 * t522 - t302 * t293 * t267 * t522 / 0.2e1 + 0.2e1 * t523 * t17 * pkin(2) * pkin(1) * t134 - t334 * t401 + 0.4e1 * t339 * t401 + 0.2e1 * t343 * t401;
	t548 = qJD(1) * (t515 * t522 / 0.2e1 - 0.2e1 * t320 * t401);
	unknown(1,1) = 0;
	unknown(1,2) = (t236 * t235 + t236 * t345 + t242 * t241 + t242 * t350);
	unknown(1,3) = (t242 * qJD(1));
	unknown(1,4) = 0;
	unknown(1,5) = (t236 * t507 + t236 * t541 + t242 * t512 + t242 * t548);
	unknown(2,1) = 0;
	unknown(2,2) = (-t242 * t235 + t236 * t241 + t236 * t350 - t242 * t345);
	unknown(2,3) = (t236 * qJD(1));
	unknown(2,4) = 0;
	unknown(2,5) = (t236 * t512 + t236 * t548 - t242 * t507 - t242 * t541);
	unknown(3,1) = 0;
	unknown(3,2) = 0;
	unknown(3,3) = 0;
	unknown(3,4) = 0;
	unknown(3,5) = 0;
	JgD_rot = unknown;
elseif link_index == 6
	%% Symbolic Calculation
	% From jacobigD_rot_6_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-04-11 22:53:36
	% EndTime: 2020-04-11 22:53:37
	% DurationCPUTime: 0.49s
	% Computational Cost: add. (25461->221), mult. (25856->635), div. (1206->27), fcn. (6466->11), ass. (0->235)
	unknown=NaN(3,5);
	t1 = cos(qJ(5));
	t2 = t1 * qJD(5);
	t3 = sin(qJ(5));
	t4 = pkin(1) * t3;
	t5 = pkin(2) * t4;
	t6 = 0.2e1 * t5;
	t7 = pkin(1) ^ 2;
	t8 = pkin(2) + qJ(2) + pkin(6) + pkin(3);
	t9 = pkin(2) - qJ(2) - pkin(6) - pkin(3);
	t11 = t9 * t8 - t6 + t7;
	t12 = pkin(2) + qJ(2) + pkin(6) - pkin(3);
	t13 = pkin(2) - qJ(2) - pkin(6) + pkin(3);
	t15 = t13 * t12 - t6 + t7;
	t16 = t15 * t11;
	t17 = sqrt(-t16);
	t18 = 0.1e1 / t17;
	t19 = t18 * pkin(1);
	t20 = -qJ(2) - pkin(6) - pkin(3);
	t22 = -qJ(2) - pkin(6) + pkin(3);
	t24 = -0.2e1 * t22 * t11 - 0.2e1 * t15 * t20;
	t25 = t24 * t19;
	t28 = -t4 + pkin(2);
	t30 = -0.1e1 / t17 / t16;
	t31 = t30 * t28;
	t32 = pkin(1) * pkin(2);
	t33 = t32 * t2;
	t34 = 0.2e1 * t33;
	t37 = -qJD(2) * t8 + t9 * qJD(2) - t34;
	t38 = t15 * t37;
	t41 = -qJD(2) * t12 + t13 * qJD(2) - t34;
	t42 = t41 * t11;
	t43 = -t38 - t42;
	t47 = t18 * t28;
	t54 = 0.2e1 * qJD(2) * t11 + 0.2e1 * t15 * qJD(2) - 0.2e1 * t41 * t20 - 0.2e1 * t22 * t37;
	t57 = pkin(1) * qJD(5);
	t58 = qJ(2) + pkin(6);
	t61 = t1 * pkin(1);
	t65 = 0.1e1 / t58;
	t67 = pkin(2) ^ 2;
	t68 = -t6 + t7 + t67;
	t69 = 0.1e1 / t68;
	t74 = t24 * t47 / 0.2e1 + 0.2e1 * t58 * t61;
	t75 = t58 ^ 2;
	t76 = 0.1e1 / t75;
	t78 = qJD(2) * t69;
	t80 = t65 * t74;
	t81 = t68 ^ 2;
	t82 = 0.1e1 / t81;
	t86 = t17 * pkin(1);
	t87 = t86 * t2;
	t90 = pkin(3) ^ 2;
	t91 = -t6 + t7 + t67 + t75 - t90;
	t93 = t91 * t3 * t57;
	t94 = qJD(2) * t58;
	t95 = -t33 + t94;
	t96 = 0.2e1 * t95 * t61;
	t97 = -t87 + t43 * t47 / 0.2e1 - t93 + t96;
	t101 = t91 * t61;
	t102 = t17 * t28 + t101;
	t104 = 0.1e1 / t75 / t58;
	t108 = t76 * t102;
	t109 = t82 * t108;
	t114 = pkin(1) * t17 * t1;
	t116 = t91 * t28 - t114;
	t117 = 0.1e1 / t116;
	t120 = t102 ^ 2;
	t121 = t116 ^ 2;
	t122 = 0.1e1 / t121;
	t124 = t122 * t120 + 0.1e1;
	t125 = 0.1e1 / t124;
	t126 = t125 * t68 * t58;
	t129 = t69 * t108;
	t130 = t69 * t80 - t129;
	t134 = t3 * qJD(5);
	t135 = t86 * t134;
	t136 = t18 * t1;
	t137 = t43 * pkin(1);
	t139 = t137 * t136 / 0.2e1;
	t141 = t91 * pkin(1) * t2;
	t143 = 0.2e1 * t95 * t28 + t135 - t139 - t141;
	t144 = t143 * t125 * t68;
	t146 = t117 * t130;
	t148 = t125 * t68 * qJD(2);
	t150 = qJD(5) * t58;
	t153 = t125 * pkin(2) * t61;
	t157 = t124 ^ 2;
	t158 = 0.1e1 / t157;
	t163 = 0.1e1 / t121 / t116;
	t166 = t97 * t122 * t102 - t143 * t163 * t120;
	t167 = 0.2e1 * t166 * t158 * t68;
	t171 = t30 * t1;
	t172 = t24 * pkin(1);
	t189 = -t172 * t136 / 0.2e1 + 0.2e1 * t58 * t28;
	t192 = t65 * t189;
	t201 = t76 * t116;
	t202 = t82 * t201;
	t208 = t122 * t68;
	t209 = t125 * t208;
	t212 = t69 * t201;
	t213 = t69 * t192 - t212;
	t217 = t102 * t213;
	t223 = t125 * t122 * pkin(2) * t61;
	t226 = t58 * t217;
	t229 = t143 * t125 * t163 * t68;
	t233 = 0.2e1 * t166 * t158 * t208;
	t235 = t126 * t117 * (t69 * t65 * (-t25 * t2 / 0.2e1 - t43 * t24 * t31 / 0.4e1 + t54 * t47 / 0.2e1 - 0.2e1 * t58 * t3 * t57 + 0.2e1 * qJD(2) * t61) - t78 * t76 * t74 + 0.2e1 * t33 * t82 * t80 - t69 * t76 * t97 + 0.2e1 * t78 * t104 * t102 - 0.2e1 * t33 * t109) - t144 * t58 * t122 * t130 + t148 * t146 - 0.2e1 * t153 * t150 * t146 - t167 * t58 * t146 - t209 * t58 * t102 * (t69 * t65 * (t25 * t134 / 0.2e1 + t43 * t172 * t171 / 0.4e1 - t54 * pkin(1) * t136 / 0.2e1 - 0.2e1 * t58 * pkin(1) * t2 + 0.2e1 * qJD(2) * t28) - t78 * t76 * t189 + 0.2e1 * t33 * t82 * t192 - t69 * t76 * t143 + 0.2e1 * t78 * t104 * t116 - 0.2e1 * t33 * t202) - t209 * t58 * t97 * t213 - t209 * qJD(2) * t217 + 0.2e1 * t223 * t150 * t217 + 0.2e1 * t229 * t226 + t233 * t226;
	t236 = sin(qJ(1));
	t241 = qJD(1) * (t126 * t146 - t209 * t226);
	t242 = cos(qJ(1));
	t244 = 0.1e1 / pkin(3);
	t246 = qJD(2) * t17;
	t249 = t244 * t76;
	t250 = t43 * t18;
	t253 = t24 * t18;
	t257 = t244 * t65;
	t266 = t6 - t7 - t67 + t75 + t90;
	t267 = 0.1e1 / t266;
	t270 = t266 ^ 2;
	t271 = 0.1e1 / t270;
	t273 = -t271 * t16 + 0.1e1;
	t274 = 0.1e1 / t273;
	t275 = t274 * pkin(3) * t58;
	t280 = -t17 * t249 + t253 * t257 / 0.2e1;
	t284 = t33 + t94;
	t287 = t267 * t280;
	t292 = t273 ^ 2;
	t293 = 0.1e1 / t292;
	t298 = 0.1e1 / t270 / t266;
	t302 = 0.4e1 * t284 * t298 * t16 - t271 * t38 - t271 * t42;
	t309 = qJD(2) * t244;
	t319 = t271 * t17;
	t320 = t274 * t319;
	t324 = t76 * t266;
	t326 = 0.2e1 * t244 * t65 * t58 - t244 * t324;
	t331 = pkin(3) * t58 * t326;
	t334 = t43 * t274 * t271 * t18;
	t339 = 0.2e1 * t284 * t274 * t298 * t17;
	t343 = t302 * t293 * t319;
	t345 = t275 * t267 * (0.2e1 * t246 * t244 * t104 - t250 * t249 / 0.2e1 - qJD(2) * t253 * t249 / 0.2e1 - t43 * t24 * t30 * t257 / 0.4e1 + t54 * t18 * t257 / 0.2e1) - 0.2e1 * t284 * t274 * pkin(3) * t58 * t271 * t280 + t274 * pkin(3) * qJD(2) * t287 - t302 * t293 * pkin(3) * t58 * t287 - t320 * pkin(3) * t58 * (0.2e1 * t244 * t65 * qJD(2) + 0.2e1 * t309 * t104 * t266 - 0.2e1 * t244 * t76 * t284 - 0.2e1 * t309 * t76 * t58) - t320 * pkin(3) * qJD(2) * t326 - t334 * t331 / 0.2e1 + 0.2e1 * t339 * t331 + t343 * t331;
	t350 = qJD(1) * (t275 * t287 - t320 * t331);
	t353 = t242 * qJD(1);
	t354 = t236 * qJD(1);
	t356 = t69 * t65;
	t357 = t76 * t120;
	t359 = t76 * t121;
	t361 = t82 * t357 + t82 * t359;
	t362 = sqrt(t361);
	t363 = 0.1e1 / t362;
	t367 = atan2(t17 * t257, t244 * t65 * t266);
	t368 = t367 + qJ(3);
	t369 = sin(t368);
	t370 = t369 * t363;
	t371 = t370 * t356;
	t375 = t363 * t69;
	t376 = t369 * t375;
	t378 = t102 * t242;
	t381 = qJD(2) * t369 * t375;
	t384 = t363 * t82 * t65;
	t387 = pkin(2) * t61;
	t388 = t387 * qJD(5) * t369;
	t391 = t65 * t378;
	t393 = 0.1e1 / t362 / t361;
	t394 = t393 * t69;
	t399 = qJD(2) * t82;
	t403 = 0.1e1 / t81 / t68;
	t416 = -0.2e1 * t399 * t104 * t120 - 0.2e1 * t399 * t104 * t121 + 0.2e1 * t97 * t82 * t108 + 0.2e1 * t143 * t82 * t201 + 0.4e1 * t33 * t403 * t357 + 0.4e1 * t33 * t403 * t359;
	t418 = t416 * t369 * t394;
	t434 = t275 * t267 * (-t246 * t249 + t250 * t257 / 0.2e1) - t320 * pkin(3) * t58 * (0.2e1 * t244 * t65 * t284 - t309 * t324) + qJD(3);
	t435 = cos(t368);
	t437 = t435 * t434 * t375;
	t440 = t435 * t363;
	t441 = t440 * t356;
	t445 = t435 * t375;
	t447 = t116 * t242;
	t450 = qJD(2) * t435 * t375;
	t454 = t387 * qJD(5) * t435;
	t457 = t65 * t447;
	t459 = t416 * t435 * t394;
	t463 = t369 * t434 * t375;
	t465 = t371 * t102 * t354 - t376 * t65 * t97 * t242 + t381 * t76 * t378 - 0.2e1 * t388 * t384 * t378 + t418 * t391 / 0.2e1 - t437 * t391 - t441 * t116 * t354 + t445 * t65 * t143 * t242 - t450 * t76 * t447 + 0.2e1 * t454 * t384 * t447 - t459 * t457 / 0.2e1 - t463 * t457;
	t470 = t15 * pkin(2) * t61 + t32 * t1 * t11;
	t471 = 0.2e1 * t470 * t19;
	t485 = t41 * pkin(2) * t61 - t5 * qJD(5) * t11 + t32 * t1 * t37 - t15 * t32 * t134;
	t500 = t1 ^ 2;
	t501 = t500 * t7;
	t504 = -0.2e1 * pkin(2) * t501 - t91 * t4 + t470 * t47 - t114;
	t507 = t65 * t504;
	t511 = t65 * t97;
	t516 = pkin(2) * qJD(2) * t61;
	t519 = t65 * t102;
	t522 = qJD(5) * t67 * t501;
	t525 = t82 * t519;
	t526 = t32 * t134;
	t535 = 0.2e1 * t387 * t525 + t69 * t507;
	t539 = t117 * t535;
	t551 = 0.2e1 * t470 * pkin(1);
	t575 = pkin(1) * t17 * t3 - t551 * t136 / 0.2e1 - t101 - 0.2e1 * t32 * t1 * t28;
	t578 = t65 * t575;
	t582 = t65 * t143;
	t588 = t65 * t116;
	t592 = t82 * t588;
	t602 = 0.2e1 * t387 * t592 + t69 * t578;
	t606 = t102 * t602;
	t612 = t58 * t606;
	t616 = t126 * t117 * (t69 * t65 * (t135 - t139 - t471 * t2 / 0.2e1 - t43 * t470 * t31 / 0.2e1 + t485 * t47 - t141 - 0.2e1 * t95 * t4 + 0.4e1 * t3 * qJD(5) * pkin(2) * t1 * t7) - t78 * t76 * t504 + 0.2e1 * t33 * t82 * t507 + 0.2e1 * t387 * t82 * t511 - 0.2e1 * t516 * t109 + 0.8e1 * t522 * t403 * t519 - 0.2e1 * t526 * t525) - t144 * t58 * t122 * t535 + t148 * t539 - 0.2e1 * t153 * t150 * t539 - t167 * t58 * t539 - t209 * t58 * t102 * (t69 * t65 * (t87 + t137 * t18 * t3 / 0.2e1 + t471 * t134 / 0.2e1 + t43 * t551 * t171 / 0.4e1 - t485 * pkin(1) * t136 + t93 - t96 + 0.2e1 * pkin(2) * t7 * t500 * qJD(5) + 0.2e1 * t5 * qJD(5) * t28) - t78 * t76 * t575 + 0.2e1 * t33 * t82 * t578 + 0.2e1 * t387 * t82 * t582 - 0.2e1 * t516 * t202 + 0.8e1 * t522 * t403 * t588 - 0.2e1 * t526 * t592) - t209 * t58 * t97 * t602 - t209 * qJD(2) * t606 + 0.2e1 * t223 * t150 * t606 + 0.2e1 * t229 * t612 + t233 * t612;
	t621 = qJD(1) * (t126 * t539 - t209 * t612);
	t624 = t274 * t267;
	t631 = 0.2e1 * t470 * t18;
	t632 = t274 * t271;
	t650 = -t43 * t624 * t470 * t30 / 0.2e1 + t624 * t485 * t18 - t284 * t632 * t631 - t302 * t293 * t267 * t631 / 0.2e1 + 0.2e1 * t632 * t17 * pkin(2) * pkin(1) * t134 - t334 * t387 + 0.4e1 * t339 * t387 + 0.2e1 * t343 * t387;
	t657 = qJD(1) * (t624 * t631 / 0.2e1 - 0.2e1 * t320 * t387);
	t670 = t102 * t236;
	t676 = t65 * t670;
	t685 = t116 * t236;
	t691 = t65 * t685;
	t695 = -t371 * t102 * t353 - t376 * t65 * t97 * t236 + t381 * t76 * t670 - 0.2e1 * t388 * t384 * t670 + t418 * t676 / 0.2e1 - t437 * t676 + t441 * t116 * t353 + t445 * t65 * t143 * t236 - t450 * t76 * t685 + 0.2e1 * t454 * t384 * t685 - t459 * t691 / 0.2e1 - t463 * t691;
	t704 = t363 * t82;
	t708 = t69 * t588;
	t713 = t434 * t363;
	t722 = t69 * t519;
	unknown(1,1) = 0;
	unknown(1,2) = (t236 * t235 + t236 * t345 + t242 * t241 + t242 * t350);
	unknown(1,3) = t353;
	unknown(1,4) = t465;
	unknown(1,5) = (t236 * t616 + t236 * t650 + t242 * t621 + t242 * t657);
	unknown(2,1) = 0;
	unknown(2,2) = (-t242 * t235 + t236 * t241 + t236 * t350 - t242 * t345);
	unknown(2,3) = t354;
	unknown(2,4) = t695;
	unknown(2,5) = (t236 * t621 + t236 * t657 - t242 * t616 - t242 * t650);
	unknown(3,1) = 0;
	unknown(3,2) = 0;
	unknown(3,3) = 0;
	unknown(3,4) = (t376 * t582 - qJD(2) * t370 * t212 + 0.2e1 * t388 * t704 * t588 - t416 * t369 * t393 * t708 / 0.2e1 + t435 * t713 * t708 + t445 * t511 - qJD(2) * t440 * t129 + 0.2e1 * t454 * t704 * t519 - t416 * t435 * t393 * t722 / 0.2e1 - t369 * t713 * t722);
	unknown(3,5) = 0;
	JgD_rot = unknown;
elseif link_index == 7
	%% Symbolic Calculation
	% From jacobigD_rot_7_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-04-11 22:53:32
	% EndTime: 2020-04-11 22:53:32
	% DurationCPUTime: 0.01s
	% Computational Cost: add. (0->0), mult. (2->2), div. (0->0), fcn. (2->2), ass. (0->17)
	unknown=NaN(3,5);
	t1 = cos(qJ(1));
	t3 = sin(qJ(1));
	unknown(1,1) = 0;
	unknown(1,2) = 0;
	unknown(1,3) = 0;
	unknown(1,4) = 0;
	unknown(1,5) = (qJD(1) * t1);
	unknown(2,1) = 0;
	unknown(2,2) = 0;
	unknown(2,3) = 0;
	unknown(2,4) = 0;
	unknown(2,5) = (qJD(1) * t3);
	unknown(3,1) = 0;
	unknown(3,2) = 0;
	unknown(3,3) = 0;
	unknown(3,4) = 0;
	unknown(3,5) = 0;
	JgD_rot = unknown;
else
	JgD_rot=NaN(3,5);
end