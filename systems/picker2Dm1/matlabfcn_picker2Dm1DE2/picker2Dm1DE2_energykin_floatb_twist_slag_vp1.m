% Calculate kinetic energy for
% picker2Dm1DE2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [2x1]
%   Generalized joint coordinates (joint angles)
% qJD [2x1]
%   Generalized joint velocities
% V_base [6x1]
%   Base Velocity (twist: stacked translational and angular velocity) in base frame
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[L1,L2,L3,L4,L5,L6,e,phi05,phi1]';
% m [11x1]
%   mass of all robot links (including the base)
% rSges [11x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [11x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% T [1x1]
%   kinetic energy

% Quelle: HybrDyn-Toolbox
% Datum: 2020-05-11 05:26
% Revision: 52c9de996ed1e2eb3528e92ec0df589a9be0640a (2020-05-10)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function T = picker2Dm1DE2_energykin_floatb_twist_slag_vp1(qJ, qJD, V_base, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(2,1),zeros(2,1),zeros(6,1),zeros(9,1),zeros(11,1),zeros(11,3),zeros(11,6)}
assert(isreal(qJ) && all(size(qJ) == [2 1]), ...
  'picker2Dm1DE2_energykin_floatb_twist_slag_vp1: qJ has to be [2x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [2 1]), ...
  'picker2Dm1DE2_energykin_floatb_twist_slag_vp1: qJD has to be [2x1] (double)');
assert(isreal(V_base) && all(size(V_base) == [6 1]), ...
  'picker2Dm1DE2_energykin_floatb_twist_slag_vp1: V_base has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'picker2Dm1DE2_energykin_floatb_twist_slag_vp1: pkin has to be [9x1] (double)');
assert(isreal(m) && all(size(m) == [11 1]), ...
  'picker2Dm1DE2_energykin_floatb_twist_slag_vp1: m has to be [11x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [11,3]), ...
  'picker2Dm1DE2_energykin_floatb_twist_slag_vp1: rSges has to be [11x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [11 6]), ...
  'picker2Dm1DE2_energykin_floatb_twist_slag_vp1: Icges has to be [11x6] (double)'); 

%% Symbolic Calculation
% From energy_kinetic_floatb_twist_worldframe_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2020-05-10 20:21:47
% EndTime: 2020-05-10 20:23:42
% DurationCPUTime: 91.01s
% Computational Cost: add. (1536597->1018), mult. (4282260->1592), div. (54676->42), fcn. (1120932->38), ass. (0->689)
t1372 = 4 * pkin(1);
t1140 = (pkin(3) ^ 2);
t1478 = -2 * t1140;
t1149 = (pkin(7) ^ 2);
t1126 = -2 * t1149;
t1093 = sin(qJ(2));
t1094 = sin(qJ(1));
t1351 = t1093 * t1094;
t1450 = pkin(1) * pkin(3);
t1237 = t1351 * t1450;
t1207 = qJD(2) * t1237;
t1096 = cos(qJ(2));
t1097 = cos(qJ(1));
t1347 = t1096 * t1097;
t1255 = qJD(1) * t1347;
t1208 = t1255 * t1450;
t1477 = -0.6e1 * t1208 + 0.6e1 * t1207;
t1476 = -t1208 + t1207;
t1146 = pkin(1) ^ 2;
t1470 = 4 * t1146;
t1062 = t1140 * t1470;
t1340 = t1140 * t1149;
t1030 = t1062 - 4 * t1340;
t1057 = t1093 ^ 2;
t1135 = (pkin(4) ^ 2);
t1144 = t1146 ^ 2;
t1317 = t1149 - t1135;
t1032 = t1146 + t1317;
t1462 = -4 * pkin(7);
t1284 = pkin(3) * t1032 * t1462;
t1349 = t1094 * t1096;
t1292 = pkin(3) * t1349;
t1046 = pkin(3) * t1093;
t1025 = t1046 + pkin(7);
t1362 = t1025 * t1097;
t1061 = t1097 ^ 2;
t1456 = 0.2e1 * t1093;
t1336 = pkin(7) * t1456;
t1027 = pkin(3) * t1336;
t1321 = -t1140 + t1149;
t1356 = t1057 * t1140;
t961 = t1027 + t1321 + 0.2e1 * t1356;
t1378 = t961 * t1061;
t1473 = 2 * pkin(3);
t1235 = pkin(1) * t1292;
t1008 = -0.2e1 * t1235;
t973 = t1027 + t1032;
t936 = t1008 + t973;
t861 = t1030 * t1057 + t1093 * t1284 - t1144 - ((t1149 - (t1473 + pkin(4)) * pkin(4)) * (t1149 + (t1473 - pkin(4)) * pkin(4))) + (t1126 + (2 * t1135) - (4 * t1140) - 0.4e1 * t1378) * t1146 + (t1292 * t973 - t1362 * t936) * t1372;
t1150 = sqrt(t861);
t1052 = t1146 + t1149;
t1244 = t1140 + t1052;
t1021 = -t1135 + t1244;
t1048 = pkin(1) * t1097;
t1026 = t1048 + pkin(7);
t1045 = t1052 ^ 2;
t1099 = 15 * t1144;
t1106 = 18 * t1149;
t1107 = -2 * t1135;
t1109 = -6 * t1135;
t1111 = 2 * t1140;
t1148 = t1149 ^ 2;
t1120 = 3 * t1148;
t1157 = pkin(3) * t1140;
t1137 = t1157 ^ 2;
t1158 = t1140 ^ 2;
t1339 = t1146 * t1061;
t1285 = 0.12e2 * t1339;
t1286 = 0.12e2 * t1356;
t1124 = 3 * t1149;
t1329 = 15 * t1146 + t1124;
t1056 = t1093 * t1057;
t1357 = t1056 * t1157;
t1371 = 6 * pkin(1);
t1428 = pkin(7) * t1097;
t1080 = 0.4e1 / 0.3e1 * t1140;
t1074 = -t1135 / 0.3e1;
t1248 = t1074 + t1052;
t1010 = t1080 + t1248;
t1044 = -t1146 / 0.3e1 + t1149;
t1241 = -0.2e1 * t1292;
t1060 = t1097 * t1061;
t1153 = pkin(1) * t1146;
t1353 = t1060 * t1153;
t1303 = pkin(7) * t1353;
t1335 = 0.4e1 * t1428;
t1344 = (pkin(7) + pkin(1)) * (pkin(7) - pkin(1));
t1332 = t1146 / 0.3e1 + t1149;
t941 = -0.4e1 / 0.9e1 * t1235 + 0.4e1 / 0.9e1 * t1140 - t1135 / 0.9e1 + t1332;
t1072 = -t1135 / 0.6e1;
t1081 = 0.2e1 / 0.3e1 * t1140;
t1196 = t1149 - t1235;
t955 = t1072 + t1081 + t1196;
t870 = 0.4e1 * t1303 + t1010 * t1344 + 0.6e1 * t941 * t1339 + (t1044 * t1241 + t1335 * t955) * pkin(1);
t1029 = t1321 * t1470;
t1314 = 0.4e1 * t1048;
t1116 = 6 * t1146;
t1220 = -0.4e1 * t1235;
t1076 = -0.2e1 / 0.3e1 * t1135;
t1125 = 2 * t1149;
t1247 = t1076 + t1081 + t1125;
t1246 = t1076 + t1052;
t1374 = t1158 + (t1081 + t1246) * t1052;
t885 = t1010 * t1220 + t1374 + (t1116 + t1247) * t1140;
t949 = t1008 + t1010;
t872 = pkin(7) * t1314 * t949 + t1029 * t1061 + t885;
t1345 = (pkin(7) + pkin(3)) * (pkin(7) - pkin(3));
t1084 = -t1140 / 0.3e1;
t1042 = t1084 + t1149;
t963 = t1042 * t1008;
t906 = t1010 * t1345 + t963;
t1063 = 0.10e2 / 0.3e1 * t1146;
t908 = (t1063 + t1247) * t1140 + t1374;
t1315 = 0.2e1 * t1048;
t1028 = pkin(7) * t1315;
t1054 = -3 * t1146 + t1149;
t1298 = 0.4e1 * t1339;
t962 = t1028 + t1298 + t1054;
t1051 = -3 * t1140 + t1149;
t1253 = 0.8e1 * t1303;
t997 = t1051 * t1253;
t837 = t870 * t1286 + t997 + t906 * t1285 + t1137 + ((-t1135 + t1140 + t1329) * t1158) + ((t1099 + (t1106 + t1109 + 6 * t1140) * t1146 + t1120 + (t1107 + t1111) * t1149) * t1140) + (t1045 * t1021) + (0.6e1 * t1046 * t872 + 0.8e1 * t1357 * t962) * t1026 + (-t1292 * t908 + t1428 * t885) * t1371;
t1259 = t1026 * t1357;
t1228 = -0.8e1 * t1259;
t1302 = -0.4e1 * t1356;
t1361 = t1026 * t1093;
t1047 = pkin(3) * t1096;
t1422 = pkin(1) * t1094;
t1000 = t1047 - t1422;
t1290 = t1146 * t1047;
t1034 = 3 * t1140 + t1052;
t1360 = t1034 * t1094;
t1117 = 3 * t1146;
t1325 = t1117 + t1149;
t1033 = t1140 + t1325;
t996 = t1033 * t1047;
t884 = -0.2e1 * t1061 * t1290 + t996 + (0.2e1 * t1000 * t1428 - t1360) * pkin(1);
t1118 = 2 * t1146;
t1050 = t1118 + t1140;
t1053 = -t1146 + t1149;
t1313 = 0.2e1 * t1047;
t1283 = pkin(7) * t1313;
t1184 = -t1094 * t1153 + t1290;
t974 = 0.2e1 * t1184;
t887 = t1053 * t1047 + t1061 * t974 + (t1050 * t1094 + t1097 * t1283) * pkin(1);
t930 = -pkin(1) * t1360 + t996;
t1452 = 4 * t1144;
t1469 = 8 * t1146;
t1024 = pkin(3) * t1452 + t1157 * t1469;
t1256 = t1094 * t1345;
t1451 = 4 * t1153;
t933 = t1024 * t1096 + t1256 * t1451;
t1115 = 5 * t1144;
t1318 = t1148 + t1158;
t1101 = 10 * t1146;
t1328 = t1101 + t1125;
t1337 = t1149 * t1146;
t958 = t1140 * t1328 + t1115 + t1318 + 6 * t1337;
t1110 = 5 * t1158;
t1122 = 6 * t1149;
t967 = t1110 + (t1101 + t1122) * t1140 + t1045;
t852 = t887 * t1302 + t1061 * t933 + (-0.4e1 * t884 * t1361 + (-t958 + t1253) * t1096) * pkin(3) + (-0.4e1 * t930 * t1428 + (t967 + t1228) * t1094) * pkin(1);
t976 = t1046 + t1026;
t812 = t1150 * t852 + t837 * t976;
t1475 = t812 ^ 2;
t1387 = 2 * pkin(7);
t1474 = 2 * pkin(1);
t1316 = pkin(7) * t1048;
t1282 = 0.6e1 * t1316;
t1077 = -0.3e1 / 0.2e1 * t1135;
t1134 = t1135 ^ 2;
t1333 = t1134 / 0.2e1 - t1158 / 0.2e1;
t1338 = t1149 * t1135;
t1213 = -(3 * t1338) + t1120 + t1333;
t1320 = t1144 + t1148;
t1375 = t1137 + t1052 * ((t1077 + t1125) * t1146 - 0.3e1 / 0.2e1 * t1338 + t1320 + t1333);
t1324 = t1125 - t1135;
t1180 = (t1324 * t1146) + t1134 / 0.6e1 + t1320 - t1338;
t1176 = 0.5e1 / 0.6e1 * t1158 + t1180;
t916 = (t1063 + t1324) * t1140 + t1176;
t869 = -0.6e1 * t916 * t1235 + (t1077 + t1329) * t1158 + t1375 + (t1099 + ((t1106 - 9 * t1135) * t1146) + t1213) * t1140;
t1075 = -t1135 / 0.2e1;
t1015 = t1075 + t1244;
t1242 = -0.4e1 * t1292;
t1212 = t1015 * t1242;
t1197 = pkin(1) * t1212;
t888 = t1197 + ((t1116 + t1324) * t1140) + t1176;
t909 = t1015 * t1345 + t963;
t856 = t1282 * t888 + t1285 * t909 + t869 + t997;
t1472 = 0.8e1 * t856;
t1082 = t1140 / 0.3e1;
t1250 = t1135 / 0.3e1 + t1082 + t1125;
t1471 = 0.10e2 / 0.3e1 * t1158 + (-t1146 + t1250) * t1478 + (t1084 + t1248) * t1126;
t1128 = 2 * pkin(2);
t1130 = pkin(6) ^ 2;
t1095 = sin(pkin(9));
t1098 = cos(pkin(9));
t969 = t1111 + t973;
t889 = t1025 * t969 + t1315 * t961;
t893 = t1097 * t969 + (0.4e1 * t1061 - 0.2e1) * t1025 * pkin(1);
t1007 = -pkin(1) + t1292;
t942 = -t1007 + t1362;
t851 = t1047 * t893 + t1094 * t889 + t1150 * t942;
t1132 = pkin(5) ^ 2;
t1090 = sin(pkin(8));
t1091 = cos(pkin(8));
t960 = -t1090 * t1094 - t1091 * t1097;
t1433 = pkin(5) * t960;
t1460 = -2 * pkin(1);
t947 = t1433 * t1460;
t1376 = t1132 + t947;
t924 = -(t1474 + pkin(5)) * pkin(5) + t1376;
t925 = pkin(5) * (t1474 - pkin(5)) + t1376;
t1152 = sqrt(-t924 * t925);
t938 = t947 + 0.2e1 * t1132;
t945 = -pkin(1) + t1433;
t959 = t1090 * t1097 - t1091 * t1094;
t866 = pkin(5) * t938 * t959 - t1152 * t945;
t1400 = t851 * t866;
t1020 = t1111 + t1117 + t1317;
t931 = t1020 + t1027 + t1220;
t1291 = pkin(3) * t1347;
t1363 = t1025 * t1094;
t944 = t1291 + t1363;
t849 = -t931 * t1362 + t944 * t1150 + (t1007 * t1336 + t1020 * t1349) * pkin(3) + (-0.2e1 * t1378 + (0.2e1 * t1057 - 0.4e1) * t1140 - t1032) * pkin(1);
t1379 = t1152 * t959;
t864 = -pkin(5) * t1379 - t938 * t945;
t1403 = t849 * t864;
t1188 = t1403 / 0.4e1 + t1400 / 0.4e1;
t1141 = 1 / pkin(3);
t1295 = pkin(1) * t1362;
t904 = t1008 + t1027 + t1244 + 0.2e1 * t1295;
t901 = 0.1e1 / t904;
t1383 = t1141 * t901;
t932 = t1146 + t1376;
t928 = 0.1e1 / t932;
t1384 = 0.1e1 / pkin(5) * t928;
t1221 = t1383 * t1384;
t805 = t1188 * t1221;
t1399 = t864 * t851;
t1402 = t849 * t866;
t1187 = t1402 / 0.4e1 - t1399 / 0.4e1;
t806 = t1187 * t1221;
t791 = -t1095 * t806 + t1098 * t805;
t1430 = pkin(6) * t791;
t788 = t1430 * t1128;
t1377 = t1130 + t788;
t781 = -(t1128 + pkin(6)) * pkin(6) + t1377;
t782 = pkin(6) * (t1128 - pkin(6)) + t1377;
t1404 = t781 * t782;
t1151 = sqrt(-t1404);
t1468 = t1151 / 0.2e1;
t1467 = qJD(1) - qJD(2);
t1073 = -t1135 / 0.4e1;
t1466 = t1073 + t1140 / 0.2e1;
t1465 = t1124 - t1135 - t1140;
t1209 = qJD(1) * t1237;
t1365 = qJD(2) * t1096;
t1262 = t1026 * t1365;
t1225 = pkin(3) * t1262;
t1464 = t1209 - t1225;
t1261 = qJD(2) * t1351;
t1179 = t1255 - t1261;
t1463 = -8 * pkin(7);
t1461 = -4 * pkin(1);
t1459 = 0.1e1 / t791;
t1458 = 0.1e1 / t864;
t1457 = 0.1e1 / t791 ^ 2;
t1455 = -0.8e1 * t1097;
t1454 = -0.2e1 * t1097;
t1453 = 0.2e1 * t1130;
t1131 = 0.1e1 / pkin(6);
t1343 = t1131 / pkin(2);
t1156 = pkin(2) ^ 2;
t785 = t1156 + t1377;
t1270 = t1131 / t785 / 0.2e1;
t793 = t1095 * t805 + t1098 * t806;
t1429 = pkin(6) * t793;
t786 = t788 + t1453;
t787 = -pkin(2) - t1430;
t724 = -t1151 * t1429 - t786 * t787;
t725 = -t1151 * t787 + t1429 * t786;
t1268 = t1383 / 0.2e1;
t834 = qJ(1) + atan2(t851 * t1268, t849 * t1268);
t710 = atan2(t725 * t1270, t724 * t1270) + t834;
t703 = atan2(t1343 * t1468, -t791) + t710;
t702 = cos(t703);
t1449 = -t702 / 0.2e1;
t709 = cos(t710);
t1448 = t709 / 0.2e1;
t1193 = t1347 + t1351;
t1350 = t1093 * t1097;
t1194 = -t1349 + t1350;
t1440 = t849 / 0.4e1;
t810 = 0.1e1 / t812;
t1278 = t810 * t1440;
t1424 = -t1150 / 0.4e1;
t1049 = -30 * t1135 + 60 * t1149;
t1055 = t1057 ^ 2;
t1059 = t1061 ^ 2;
t1123 = 4 * t1149;
t1162 = pkin(7) * t1149;
t1323 = t1134 - t1158;
t1186 = 6 * t1148 + t1323 - 6 * t1338;
t1239 = 0.32e2 * t1303;
t1359 = t1045 * (-t1140 + t1032);
t1036 = (t1123 + t1135) * t1146;
t1085 = -0.2e1 / 0.3e1 * t1140;
t1043 = t1085 + t1149;
t1240 = 0.16e2 * t1303;
t1355 = t1059 * t1144;
t1301 = 0.8e1 * t1355;
t1334 = 0.6e1 * t1428;
t1003 = t1149 + t1140 / 0.4e1 + t1146 / 0.4e1 - t1135 / 0.8e1;
t1330 = 0.4e1 / 0.7e1 * t1149 - t1135 / 0.7e1;
t881 = -0.32e2 / 0.21e2 * t1003 * t1235 + 0.5e1 / 0.42e2 * t1158 + (0.16e2 / 0.21e2 * t1146 + t1330) * t1140 + t1144 / 0.7e1 + t1330 * t1146 + t1148 - 0.3e1 / 0.7e1 * t1338 + t1134 / 0.42e2;
t1005 = t1332 + t1466;
t1086 = 0.4e1 / 0.3e1 * t1146;
t883 = -0.8e1 / 0.3e1 * t1005 * t1235 + 0.5e1 / 0.18e2 * t1158 + (t1086 + t1074) * t1140 + t1148 - t1144 / 0.3e1 + t1134 / 0.18e2 + (t1080 + 0.2e1 / 0.3e1 * t1146 + t1076) * t1149;
t950 = -t1158 / 0.6e1 + t1180;
t1088 = t1146 / 0.2e1;
t1331 = t1088 + t1149;
t954 = -0.2e1 / 0.3e1 * t1235 + t1073 + t1331;
t855 = t1043 * t1301 + t954 * t1240 + 0.14e2 * t881 * t1339 + (t1053 * t1158) + (t1036 - 0.10e2 / 0.3e1 * t1144 + (2 * t1148) - t1338) * t1140 + t950 * t1344 + (t1044 * t1212 + t1334 * t883) * pkin(1);
t1121 = 8 * t1149;
t937 = t1153 * t1242 + t1062 + t1452 + ((t1107 + t1121) * t1146);
t948 = -t1146 + t1196 + t1466;
t871 = t1253 + t1015 * t1054 + t1061 * t937 + (t1241 * t1344 + t1335 * t948) * pkin(1);
t1319 = t1148 - t1144;
t873 = t1042 * t1197 - t1137 + (-t1063 - t1317) * t1158 + (t1036 + t1158 / 0.6e1 - t1134 / 0.6e1 + t1319) * t1140 + t950 * t1149;
t1108 = -5 * t1135;
t1114 = 7 * t1144;
t877 = (t1077 + t1124 + (7 * t1146)) * t1158 + (t1114 + ((t1108 + 10 * t1149) * t1146) + t1213) * t1140 + t1375;
t1031 = -12 * pkin(7) * t1153 + t1162 * t1372;
t1038 = -8 * t1144 + 12 * t1337;
t896 = t1031 * t1097 + t1038 * t1061 + t1240 + t1301 + t1320 - (6 * t1337);
t911 = t1008 * t1345 + t1015 * t1051;
t998 = 16 * (t1318 - 6 * t1340) * t1144;
t804 = t998 * t1059 + t911 * t1239 + 0.24e2 * t873 * t1339 + ((t1107 + t1123 + 28 * t1146) * t1137) + (t1021 * t1359) + ((t1049 * t1144) + 0.24e2 * t855 * t1057 + (t1109 * t1148) + (t1116 * t1186) + (t1125 * t1323) + (28 * t1153 ^ 2) + (4 * t1162 ^ 2)) * t1140 + (t1046 * t1472 + 0.32e2 * t1357 * t871) * t1026 + 0.8e1 * (-t1292 * t877 + t1428 * t869) * pkin(1) + ((t1049 * t1146) + 0.16e2 * t896 * t1055 + (70 * t1144) + t1158 + t1186) * t1158;
t1358 = t1055 * t1158;
t956 = 0.4e1 / 0.3e1 * t1339 + t1028 + t1044;
t1227 = -0.24e2 * t956 * t1358;
t1287 = -0.12e2 * t1356;
t1300 = -0.6e1 * t1339;
t1354 = t1060 * t1144;
t1257 = t1094 * t1354;
t1426 = -t1094 / 0.2e1;
t1001 = 0.7e1 / 0.6e1 * t1140 + t1072 + t1331;
t1249 = t1072 + t1082 + t1149;
t1004 = t1086 + t1249;
t905 = -t1001 * t1422 + t1004 * t1047;
t912 = (t1140 * t1053) - 0.5e1 / 0.3e1 * t1144 + t1250 * t1146 + t1149 * (t1074 + t1042);
t1064 = -0.20e2 / 0.3e1 * t1146;
t1251 = 0.2e1 / 0.3e1 * t1135 + t1081 + t1123;
t1252 = 0.4e1 / 0.3e1 * t1135 + t1080 + t1126;
t914 = -t1158 + (t1064 + t1251) * t1140 - (3 * t1144) + t1252 * t1146 + t1148;
t1012 = t1146 + t1249;
t1035 = t1111 + t1053;
t918 = t1012 * t1047 - t1035 * t1422 / 0.2e1;
t857 = t1257 * t1462 + t905 * t1298 + (-0.8e1 / 0.3e1 * t1355 + t912) * t1047 + (t1335 * t918 + t1426 * t914) * pkin(1);
t1289 = t1153 * t1047;
t1299 = -0.4e1 * t1339;
t1327 = t1107 + t1478;
t1245 = t1122 + t1327;
t917 = t1110 + ((t1101 + t1245) * t1140) + (t1085 + t1246) * t1052;
t1385 = t1094 * t917;
t900 = t1158 + (t1076 + t1085 + t1328) * t1140 + t1115 + (t1245 * t1146) + t1149 * (t1076 + t1043);
t892 = t900 * t1047;
t1009 = 0.8e1 / 0.3e1 * t1140 + t1248;
t1011 = t1074 + t1081 + t1325;
t910 = -t1009 * t1422 + t1011 * t1047;
t1016 = 0.5e1 / 0.6e1 * t1140 + t1088 + t1072;
t927 = pkin(1) * t1256 + t1016 * t1313;
t858 = t1060 * t1289 * t1463 + t927 * t1299 + t892 + (t1335 * t910 - t1385) * pkin(1);
t874 = -pkin(1) * t1385 + t892;
t915 = -(3 * t1158) + (t1064 + t1252) * t1140 + t1251 * t1146 + t1319;
t875 = t1047 * t915 + t1422 * t1471;
t1017 = t1465 * t1101;
t1326 = t1108 - 5 * t1140;
t876 = t1137 + (21 * t1146 + t1465) * t1158 + (t1149 * t1327 + t1017 + t1120 + 35 * t1144) * t1140 + (t1114 + (t1121 + t1326) * t1146 + t1149 * (-t1140 + t1317)) * t1052;
t1014 = t1075 + t1033;
t975 = 0.4e1 * t1184;
t999 = t1047 + 0.2e1 * t1422;
t878 = t1054 * t1047 + t1061 * t975 + (t1014 * t1094 + t1428 * t999) * t1474;
t886 = 7 * t1137 + (35 * t1146 + 15 * t1149 + t1326) * t1158 + (21 * t1144 + t1017 + 9 * t1148 + (t1109 - 6 * t1140) * t1149) * t1140 + t1359;
t1002 = t1149 + 0.5e1 / 0.2e1 * t1140 + 0.3e1 / 0.2e1 * t1146 + t1075;
t1288 = (pkin(1) * t1051) / 0.2e1;
t920 = t1002 * t1047 + t1094 * t1288;
t813 = t920 * t1240 + t878 * t1228 + t857 * t1287 + t875 * t1300 + (-0.6e1 * t858 * t1361 + (0.24e2 * t1042 * t1355 - t876) * t1096) * pkin(3) + (-0.6e1 * t874 * t1428 + (t886 + t1227) * t1094) * pkin(1);
t780 = t1150 * t813 + t804 * t976;
t1181 = t1278 * t780 + t1424 * t851;
t1136 = 1 / pkin(4);
t1341 = t1136 / pkin(3) ^ 2;
t1271 = t901 * t1341;
t765 = t1181 * t1271;
t1439 = t851 / 0.4e1;
t1277 = t810 * t1439;
t1423 = t1150 / 0.4e1;
t1182 = t1277 * t780 + t1423 * t849;
t766 = t1182 * t1271;
t743 = -t1193 * t765 - t1194 * t766;
t744 = -t1193 * t766 + t1194 * t765;
t1342 = t1136 * t1141;
t1254 = t1342 / 0.2e1;
t764 = atan2(t1150 * t1254, t780 * t810 * t1254) + t834;
t717 = atan2(t743, t744) + t764;
t716 = cos(t717);
t1447 = t716 / 0.2e1;
t758 = atan2(t793, t791) + t834;
t757 = cos(t758);
t1446 = t757 / 0.2e1;
t763 = cos(t764);
t1445 = -t763 / 0.2e1;
t1444 = t810 / 0.4e1;
t833 = cos(t834);
t1443 = -t833 / 0.2e1;
t1382 = 0.1e1 / pkin(1) * t928;
t1266 = t1382 / 0.2e1;
t1267 = -t1382 / 0.2e1;
t939 = t947 + t1118;
t946 = -pkin(1) * t960 + pkin(5);
t865 = -pkin(1) * t1379 + t939 * t946;
t867 = pkin(1) * t939 * t959 + t1152 * t946;
t846 = pkin(8) + atan2(t867 * t1266, t865 * t1267);
t843 = cos(t846);
t1442 = t843 / 0.2e1;
t1269 = t1384 / 0.2e1;
t847 = qJ(1) + atan2(t866 * t1269, t864 * t1269);
t845 = cos(t847);
t1441 = t845 / 0.2e1;
t1438 = t864 / 0.4e1;
t1437 = t901 / 0.2e1;
t929 = 0.1e1 / t932 ^ 2;
t951 = t959 * qJD(1);
t1396 = t929 * t951;
t1236 = pkin(1) * t901 * t1396;
t1018 = qJD(2) * t1283;
t1392 = 0.2e1 * t1476;
t1273 = t1018 + t1392;
t1397 = ((-qJD(1) * t1363 + qJD(2) * t1291) * t1474 + t1273) / t904 ^ 2;
t1367 = qJD(1) * t1097;
t1263 = t1094 * t1367;
t1219 = t961 * t1263;
t1364 = qJD(2) * t1140;
t1369 = qJD(1) * t1094;
t1215 = t1093 * t1096 * t1364;
t1205 = 0.4e1 * t1215;
t953 = t1018 + t1205;
t1386 = t1061 * t953;
t1401 = ((0.8e1 * t1219 - 0.4e1 * t1386) * t1146 + (t1030 * t1456 + t1284) * t1365 + (t1094 * t1096 ^ 2 * t1364 * t1387 + (-t1097 * t1273 + t1369 * t936) * t1025 + (t973 * t1255 + (-t1347 * t936 - t1351 * t973) * qJD(2)) * pkin(3)) * t1372) / t1150;
t1276 = t1401 / 0.2e1;
t1346 = t1097 * t1150;
t1348 = t1094 * t1150;
t1368 = qJD(1) * t1096;
t807 = t942 * t1276 + (-t1025 * t1348 + t1097 * t889) * qJD(1) + (t1097 * t953 - t1369 * t961) * t1094 * t1474 + ((-t1346 + (-t969 - 0.8e1 * t1295) * t1094) * t1368 + ((-t893 + t1348) * t1093 + (t1346 + (t1025 * t1387 + t969) * t1094 + (t1061 * t1474 - pkin(1) + t1428) * t1096 * t1473) * t1096) * qJD(2)) * pkin(3);
t1173 = 0.4e1 * t1179;
t1171 = t1173 * t1048;
t808 = t944 * t1276 + (-t1018 * t1097 + (t1094 * t931 + t1346) * qJD(1)) * t1025 + (t1205 + 0.4e1 * t1219 - 0.2e1 * t1386) * pkin(1) + ((t1020 * t1097 - t1348) * t1368 + (-t1020 * t1351 - t1150 * t1194 - t1347 * t931) * qJD(2) + (t1007 * t1365 + t1046 * t1179) * t1387 + t1025 * t1171) * pkin(3);
t1272 = t951 * t1474;
t1398 = (t924 + t925) * pkin(5) * t1272 / t1152;
t1275 = t1398 / 0.2e1;
t952 = t960 * qJD(1);
t1183 = -t952 * t1152 + t1275 * t959;
t838 = (-(t1474 * t945 - t938) * t951 + t1183) * pkin(5);
t1312 = 0.2e1 * t951 * t959;
t1380 = t1152 * t951;
t839 = t945 * t1275 + t1132 * pkin(1) * t1312 + (t938 * t952 + t1380) * pkin(5);
t750 = (-(t1403 / 0.2e1 + t1400 / 0.2e1) * t1236 + (-t1188 * t1397 + (t808 * t1438 + t838 * t1440 + t807 * t866 / 0.4e1 + t839 * t1439) * t901) * t1384) * t1141;
t751 = (-(-t1402 / 0.2e1 + t1399 / 0.2e1) * t1236 + (t1187 * t1397 + (-t808 * t866 / 0.4e1 - t849 * t839 / 0.4e1 + t838 * t1439 + t807 * t1438) * t901) * t1384) * t1141;
t721 = t1095 * t751 + t1098 * t750;
t1436 = pkin(2) * t721;
t762 = sin(t764);
t1435 = pkin(4) * t762;
t1434 = pkin(4) * t763;
t708 = sin(t710);
t1432 = pkin(6) * t708;
t1431 = pkin(6) * t709;
t1427 = t1093 / 0.2e1;
t1425 = -t1097 / 0.2e1;
t1421 = pkin(1) * t1061;
t832 = sin(t834);
t1420 = Icges(3,4) * t832;
t1419 = Icges(3,4) * t833;
t1418 = Icges(4,4) * t708;
t1417 = Icges(5,4) * t762;
t1416 = Icges(5,4) * t763;
t842 = sin(t846);
t1415 = Icges(6,4) * t842;
t756 = sin(t758);
t1414 = Icges(7,4) * t756;
t844 = sin(t847);
t1413 = Icges(9,4) * t844;
t701 = sin(t703);
t1412 = Icges(10,4) * t701;
t1411 = Icges(10,4) * t702;
t1410 = (-t781 - t782) * pkin(6) * t1436 / t1468;
t1409 = t721 * t793;
t1040 = V_base(6) + qJD(1);
t1274 = -t1397 / 0.2e1;
t848 = 0.1e1 / t849 ^ 2;
t754 = t1040 + 0.2e1 * ((t1274 * t851 + t1437 * t807) / t849 - (t1274 * t849 + t1437 * t808) * t851 * t848) * pkin(3) * t1141 / (t848 * t851 ^ 2 + 0.1e1) * t904;
t1408 = t754 * t832;
t1407 = t754 * t833;
t1297 = pkin(1) * t1369;
t1243 = pkin(7) * t1297;
t1019 = -0.2e1 * t1243;
t1058 = t1094 ^ 2;
t1195 = t1057 * t1157 * t1262;
t1185 = -0.24e2 * t1195;
t1189 = t1044 * t1207;
t1190 = t1044 * t1208;
t1352 = t1061 * t1153;
t1304 = pkin(7) * t1352;
t1206 = t1304 * t1369;
t1191 = -0.24e2 * t1206;
t1214 = t1146 * t1263;
t1200 = -0.24e2 * t1214;
t1366 = qJD(2) * t1093;
t1294 = pkin(3) * t1366;
t1201 = t1294 * t1353;
t1264 = qJD(1) * t1357;
t1226 = pkin(1) * t1264;
t1203 = t1094 * t1226;
t1217 = t1345 * t1367;
t1222 = -0.6e1 * t1243;
t1296 = pkin(1) * t1367;
t1223 = t1034 * t1296;
t1229 = -0.2e1 * t1263;
t1238 = t1339 * t1450;
t1260 = qJD(2) * t1350;
t1293 = pkin(3) * t1361;
t1393 = 0.4e1 * t1476 * t1010;
t1174 = t1179 * pkin(3);
t1170 = pkin(1) * t1042 * t1174 * t1339;
t1394 = t1051 * t1191 - 0.24e2 * t1170;
t913 = t1146 * t1174 * t1335;
t968 = pkin(3) * t1365 - t1297;
t1406 = ((t1026 * t1226 * t1455 + t1058 * t1264 * t1469 + t1185 * t1422 + (0.2e1 * (-t1146 * t1294 - t1153 * t1367) * t1061 + t974 * t1229 - t1053 * t1294 + (t1050 * t1367 + (-qJD(1) * t1349 - t1260) * pkin(7) * t1473) * pkin(1)) * t1302 - 0.8e1 * t887 * t1215 - 0.4e1 * (-t1223 + (0.4e1 * t1096 * t1214 + (-t1033 + 0.2e1 * t1339) * t1366) * pkin(3) + ((-t1294 - t1296) * t1048 - t1000 * t1297) * t1387) * t1293 + t1201 * t1463 + t1191 * t1047 + (-t1024 * t1366 + t1217 * t1451) * t1061 + t933 * t1229 - 0.4e1 * (-t1033 * t1294 - t1223) * t1316 + 0.4e1 * t930 * t1243 + t958 * t1294 + t967 * t1296 + 0.4e1 * t1464 * t884) * t1150 + t852 * t1276 + (0.8e1 * (t1019 - 0.8e1 * t1214) * t1259 + (-0.12e2 * t1206 + 0.6e1 * (-0.4e1 / 0.9e1 * t1255 + 0.4e1 / 0.9e1 * t1261) * t1238 - 0.12e2 * t941 * t1214 - t913 - 0.4e1 * t955 * t1243 - 0.2e1 * t1190 + 0.2e1 * t1189) * t1286 + 0.24e2 * t870 * t1215 + 0.6e1 * (t1029 * t1229 + (t1097 * t1392 - t1369 * t949) * pkin(7) * t1372 + t1393) * t1293 + t906 * t1200 + t1393 * t1282 + t885 * t1222 + t1394 + (-0.8e1 * t1203 + 0.24e2 * t1195) * t962 + t1477 * t908 - 0.6e1 * t1464 * t872) * t976 + t837 * t968) / t1475;
t1405 = 0.1e1 / t780 ^ 2 * t1475;
t1395 = t1477 * t916;
t1391 = Icges(2,4) * t1094;
t1390 = Icges(2,4) * t1097;
t715 = sin(t717);
t1389 = Icges(11,4) * t715;
t1388 = Icges(8,4) * t1096;
t1381 = t1151 * t721;
t1311 = 0.1e1 / t785 ^ 2 * t1436;
t1310 = pkin(5) * t1396;
t1307 = t1040 * t1422 + V_base(1);
t1306 = V_base(5) * t1048 + V_base(3);
t1305 = pkin(5) * V_base(6);
t1281 = t833 * V_base(5);
t1280 = -t1410 / 0.2e1;
t1279 = -t1406 / 0.4e1;
t1258 = t1094 * t1358;
t1234 = pkin(3) * t1408 + t1307;
t1233 = pkin(2) * t1408 + t1307;
t1232 = pkin(3) * t1281 + t1306;
t1231 = pkin(2) * t1281 + t1306;
t1224 = pkin(3) * t1260;
t1218 = qJD(1) * t1257;
t1216 = t1056 * t1158 * t1365;
t1211 = -pkin(2) * t832 - t1422;
t1210 = -pkin(3) * t832 - t1422;
t1204 = -t1040 * t1048 + V_base(2);
t1202 = t1294 * t1355;
t1192 = -0.48e2 * t1206;
t722 = t1095 * t750 - t1098 * t751;
t723 = 0.1e1 / t724 ^ 2;
t664 = t754 + 0.2e1 * (((t787 * t1280 + pkin(2) * t1409 * t1453 + (t722 * t786 + t1381) * pkin(6)) * t1270 - t725 * t1311) / t724 - (-t724 * t1311 + (t793 * t1280 - t1151 * t722 + (-0.2e1 * pkin(2) * t787 + t786) * t721) * pkin(6) * t1270) * t725 * t723) * pkin(6) / (t723 * t725 ^ 2 + 0.1e1) * t785;
t1172 = t1179 * t1474;
t1175 = -t1294 * t900 - t1296 * t917;
t745 = (t1227 * t1296 - 0.24e2 * pkin(1) * (-0.8e1 / 0.3e1 * t1214 + t1019) * t1258 - 0.96e2 * t956 * t1216 * t1422 + ((-t1054 + t1299) * t1294 + 0.2e1 * (pkin(1) * t1014 - t1094 * t975 - 0.2e1 * t1352) * t1367 + (-0.2e1 * t1224 + (-0.2e1 * t1094 * t999 + 0.4e1 * t1421) * qJD(1)) * pkin(1) * pkin(7)) * t1228 + (0.8e1 / 0.3e1 * t1202 + (-t1001 * t1296 - t1004 * t1294) * t1298 - t912 * t1294 - t914 * t1296 / 0.2e1 + (0.32e2 / 0.3e1 * t1354 * t1047 + t1146 * t905 * t1455) * t1369 + (t1012 * t1224 * t1461 + ((0.12e2 * t1058 * t1061 - 0.4e1 * t1059) * t1144 + (-0.2e1 * t1035 * t1421 - 0.4e1 * t1094 * t918) * pkin(1)) * qJD(1)) * pkin(7)) * t1287 - 0.24e2 * t857 * t1215 - 0.6e1 * ((-0.4e1 * (pkin(1) * t1217 - 0.2e1 * t1016 * t1294) * t1061 + 0.8e1 * t927 * t1263) * t1146 + (0.8e1 * t1201 + (-t1009 * t1296 - t1011 * t1294) * t1314 + (0.24e2 * t1061 * t1289 + t1461 * t910) * t1369) * pkin(7) + t1175) * t1293 + (-t1002 * t1294 + t1288 * t1367) * t1240 + t920 * t1192 + (-t1294 * t915 + t1296 * t1471) * t1300 + 0.12e2 * t875 * t1214 - 0.6e1 * t1175 * t1316 + 0.6e1 * t874 * t1243 + t876 * t1294 + t886 * t1296 + (0.8e1 * t1203 + t1185) * t878 + 0.6e1 * t1464 * t858 + (-0.96e2 * t1047 * t1218 - 0.24e2 * t1202) * t1042) * t1150 + t813 * t1276 + (0.16e2 * (t1038 * t1454 - t1031 - 0.48e2 * t1304 - 0.32e2 * t1354) * qJD(1) * t1258 + 0.64e2 * t896 * t1216 + 0.32e2 * (-t913 + (t937 * t1454 + (t1461 * t948 - 0.24e2 * t1352) * pkin(7)) * t1369 + (-t1172 * t1344 - t1173 * t1352) * pkin(3)) * t1259 + 0.24e2 * (-0.32e2 * t1043 * t1218 + (-0.2e1 / 0.3e1 * t1255 + 0.2e1 / 0.3e1 * t1261) * t1240 * t1450 + t954 * t1192 - 0.28e2 * t881 * t1214 + (-0.8e1 / 0.3e1 * t1255 + 0.8e1 / 0.3e1 * t1261) * t1005 * pkin(3) * t1146 * t1334 + t883 * t1222 + 0.4e1 * (-t1190 + t1189) * t1015 - 0.64e2 / 0.3e1 * t1179 * t1003 * t1238) * t1356 + 0.48e2 * t855 * t1215 - 0.8e1 * t856 * t1209 + 0.8e1 * (t909 * t1200 + (-pkin(3) * t1015 * t1171 - t1369 * t888) * pkin(7) * t1371 + t1394 + t1395) * t1293 + t1225 * t1472 - 0.4e1 * t998 * t1060 * t1369 - pkin(3) * t1172 * t1239 * t1345 - 0.96e2 * t911 * t1206 - 0.96e2 * t1015 * t1170 - 0.48e2 * t873 * t1214 + 0.8e1 * t1395 * t1316 - 0.8e1 * t869 * t1243 + 0.8e1 * t1476 * t877 + (-0.32e2 * t1203 + 0.96e2 * t1195) * t871) * t976 + t804 * t968;
t700 = t754 + (0.1e1 / t780 * t812 * t1276 - 0.2e1 * (t745 * t810 / 0.2e1 - t780 * t1406 / 0.2e1) * pkin(4) * pkin(3) * t1150 * t1342 * t1405) / (t1405 * t861 + 0.1e1);
t1178 = -pkin(2) * t1407 + t1204;
t1177 = -pkin(3) * t1407 + t1204;
t1041 = Icges(8,4) * t1093;
t1039 = V_base(6) + qJD(2);
t995 = -rSges(2,1) * t1097 + rSges(2,2) * t1094;
t994 = -rSges(8,1) * t1096 + rSges(8,2) * t1093;
t993 = -rSges(2,1) * t1094 - rSges(2,2) * t1097;
t992 = rSges(8,1) * t1093 + rSges(8,2) * t1096;
t988 = -Icges(2,1) * t1097 + t1391;
t987 = -Icges(2,1) * t1094 - t1390;
t986 = -Icges(8,1) * t1096 + t1041;
t985 = Icges(8,1) * t1093 + t1388;
t984 = Icges(2,2) * t1094 - t1390;
t983 = -Icges(2,2) * t1097 - t1391;
t982 = Icges(8,2) * t1093 - t1388;
t981 = Icges(8,2) * t1096 + t1041;
t972 = -rSges(1,1) * V_base(5) + rSges(1,2) * V_base(4) + V_base(3);
t971 = rSges(1,1) * V_base(6) - rSges(1,3) * V_base(4) + V_base(2);
t970 = -rSges(1,2) * V_base(6) + rSges(1,3) * V_base(5) + V_base(1);
t923 = V_base(5) * rSges(2,3) - t1040 * t993 + V_base(1);
t922 = V_base(5) * rSges(8,3) - t1039 * t994 + V_base(1);
t921 = -V_base(4) * rSges(2,3) + t1040 * t995 + V_base(2);
t907 = -V_base(4) * rSges(8,3) + V_base(6) * pkin(7) + t1039 * t992 + V_base(2);
t903 = t993 * V_base(4) - t995 * V_base(5) + V_base(3);
t899 = t1467 * t1193;
t898 = t1467 * t1194;
t895 = t994 * V_base(4) + V_base(3) + (-pkin(7) - t992) * V_base(5);
t863 = 0.1e1 / t865 ^ 2;
t862 = 0.1e1 / t864 ^ 2;
t841 = Icges(9,4) * t845;
t840 = Icges(6,4) * t843;
t829 = rSges(9,1) * t845 - rSges(9,2) * t844;
t828 = rSges(9,1) * t844 + rSges(9,2) * t845;
t827 = Icges(9,1) * t845 - t1413;
t826 = Icges(9,1) * t844 + t841;
t825 = -Icges(9,2) * t844 + t841;
t824 = Icges(9,2) * t845 + t1413;
t821 = rSges(6,1) * t843 - rSges(6,2) * t842;
t820 = rSges(6,1) * t842 + rSges(6,2) * t843;
t819 = Icges(6,1) * t843 - t1415;
t818 = Icges(6,1) * t842 + t840;
t817 = -Icges(6,2) * t842 + t840;
t816 = Icges(6,2) * t843 + t1415;
t803 = -rSges(3,1) * t833 + rSges(3,2) * t832;
t802 = -rSges(3,1) * t832 - rSges(3,2) * t833;
t801 = -Icges(3,1) * t833 + t1420;
t800 = -Icges(3,1) * t832 - t1419;
t799 = Icges(3,2) * t832 - t1419;
t798 = -Icges(3,2) * t833 - t1420;
t795 = -t829 * V_base(5) + (t828 - t1422) * V_base(4) + t1306;
t794 = t820 * V_base(4) - t821 * V_base(5) + V_base(3) + (t1090 * V_base(4) - t1091 * V_base(5)) * pkin(5);
t778 = V_base(6) + (((-t946 * t1398 / 0.2e1 + t1146 * pkin(5) * t1312 + (t939 * t952 + t1380) * pkin(1)) * t1266 - t867 * t1310) / t865 + (t865 * t1310 + (-(-0.2e1 * pkin(5) * t946 - t939) * t951 + t1183) * pkin(1) * t1267) * t867 * t863) / (t863 * t867 ^ 2 + 0.1e1) * t932 * t1460;
t777 = (t839 * t1458 * t1384 + (-t838 * t862 * t1384 - (-t864 * t862 + t1458) * t929 * t1272) * t866) * t932 / (t862 * t866 ^ 2 + 0.1e1) * pkin(5) + t1040;
t774 = -t803 * V_base(5) + (t802 - t1422) * V_base(4) + t1306;
t773 = V_base(5) * rSges(6,3) - t1090 * t1305 - t778 * t820 + V_base(1);
t772 = -V_base(4) * rSges(6,3) + t1091 * t1305 + t778 * t821 + V_base(2);
t771 = V_base(5) * rSges(9,3) - t777 * t828 + t1307;
t770 = -V_base(4) * rSges(9,3) + t777 * t829 + t1204;
t755 = Icges(7,4) * t757;
t748 = V_base(5) * rSges(3,3) - t754 * t802 + t1307;
t747 = -V_base(4) * rSges(3,3) + t754 * t803 + t1204;
t742 = 0.1e1 / t744 ^ 2;
t741 = -rSges(5,1) * t763 + rSges(5,2) * t762;
t740 = -rSges(5,1) * t762 - rSges(5,2) * t763;
t739 = -Icges(5,1) * t763 + t1417;
t738 = -Icges(5,1) * t762 - t1416;
t737 = Icges(5,2) * t762 - t1416;
t736 = -Icges(5,2) * t763 - t1417;
t733 = rSges(7,1) * t757 - rSges(7,2) * t756;
t732 = rSges(7,1) * t756 + rSges(7,2) * t757;
t731 = Icges(7,1) * t757 - t1414;
t730 = Icges(7,1) * t756 + t755;
t729 = -Icges(7,2) * t756 + t755;
t728 = Icges(7,2) * t757 + t1414;
t719 = -t741 * V_base(5) + (t1210 + t740) * V_base(4) + t1232;
t718 = -t733 * V_base(5) + (t732 - t1422) * V_base(4) + t1306;
t714 = Icges(11,4) * t716;
t707 = Icges(4,4) * t709;
t706 = (-t1182 * t1397 + (t808 * t1423 + t849 * t1401 / 0.8e1 + t745 * t1277 + (t1279 * t851 + t1444 * t807) * t780) * t901) * t1341;
t705 = (-t1181 * t1397 + (t745 * t1278 + t807 * t1424 - t851 * t1401 / 0.8e1 + (t1279 * t849 + t1444 * t808) * t780) * t901) * t1341;
t699 = rSges(11,1) * t716 - rSges(11,2) * t715;
t698 = rSges(11,1) * t715 + rSges(11,2) * t716;
t697 = Icges(11,1) * t716 - t1389;
t696 = Icges(11,1) * t715 + t714;
t695 = -Icges(11,2) * t715 + t714;
t694 = Icges(11,2) * t716 + t1389;
t691 = (-t1409 * t1457 + t1459 * t722) / (t1457 * t793 ^ 2 + 0.1e1) + t754;
t690 = V_base(5) * rSges(5,3) - t700 * t740 + t1234;
t689 = -V_base(4) * rSges(5,3) + t700 * t741 + t1177;
t688 = rSges(4,1) * t709 - rSges(4,2) * t708;
t687 = rSges(4,1) * t708 + rSges(4,2) * t709;
t686 = Icges(4,1) * t709 - t1418;
t685 = Icges(4,1) * t708 + t707;
t684 = -Icges(4,2) * t708 + t707;
t683 = Icges(4,2) * t709 + t1418;
t680 = V_base(5) * rSges(7,3) - t691 * t732 + t1307;
t679 = -V_base(4) * rSges(7,3) + t691 * t733 + t1204;
t678 = -rSges(10,1) * t702 + rSges(10,2) * t701;
t677 = -rSges(10,1) * t701 - rSges(10,2) * t702;
t676 = -Icges(10,1) * t702 + t1412;
t675 = -Icges(10,1) * t701 - t1411;
t674 = Icges(10,2) * t701 - t1411;
t673 = -Icges(10,2) * t702 - t1412;
t670 = (-t699 + t1434) * V_base(5) + (t1210 + t698 - t1435) * V_base(4) + t1232;
t669 = -t688 * V_base(5) + (t1211 + t687) * V_base(4) + t1231;
t666 = (-t678 - t1431) * V_base(5) + (t1211 + t677 + t1432) * V_base(4) + t1231;
t665 = ((-t1193 * t705 - t1194 * t706 - t765 * t898 + t766 * t899) / t744 - (-t1193 * t706 + t1194 * t705 - t765 * t899 - t766 * t898) * t743 * t742) / (t742 * t743 ^ 2 + 0.1e1) + t700;
t663 = V_base(5) * rSges(11,3) + t1435 * t700 - t665 * t698 + t1234;
t662 = -V_base(4) * rSges(11,3) - t1434 * t700 + t665 * t699 + t1177;
t661 = V_base(5) * rSges(4,3) - t664 * t687 + t1233;
t660 = -V_base(4) * rSges(4,3) + t664 * t688 + t1178;
t659 = (-t1459 * t1410 / 0.4e1 + t1457 * t1381 / 0.2e1) / (0.1e1 - 0.1e1 / pkin(6) ^ 2 / t1156 * t1457 * t1404 / 0.4e1) * t1343 + t664;
t658 = V_base(5) * rSges(10,3) - t1432 * t664 - t659 * t677 + t1233;
t657 = -V_base(4) * rSges(10,3) + t1431 * t664 + t659 * t678 + t1178;
t1 = m(1) * (t970 ^ 2 + t971 ^ 2 + t972 ^ 2) / 0.2e1 + Icges(2,3) * t1040 ^ 2 / 0.2e1 + Icges(7,3) * t691 ^ 2 / 0.2e1 + Icges(3,3) * t754 ^ 2 / 0.2e1 + Icges(1,3) * V_base(6) ^ 2 / 0.2e1 + m(3) * (t747 ^ 2 + t748 ^ 2 + t774 ^ 2) / 0.2e1 + Icges(9,3) * t777 ^ 2 / 0.2e1 + Icges(6,3) * t778 ^ 2 / 0.2e1 + Icges(10,3) * t659 ^ 2 / 0.2e1 + m(6) * (t772 ^ 2 + t773 ^ 2 + t794 ^ 2) / 0.2e1 + m(9) * (t770 ^ 2 + t771 ^ 2 + t795 ^ 2) / 0.2e1 + m(11) * (t662 ^ 2 + t663 ^ 2 + t670 ^ 2) / 0.2e1 + m(5) * (t689 ^ 2 + t690 ^ 2 + t719 ^ 2) / 0.2e1 + Icges(8,3) * t1039 ^ 2 / 0.2e1 + Icges(4,3) * t664 ^ 2 / 0.2e1 + m(4) * (t660 ^ 2 + t661 ^ 2 + t669 ^ 2) / 0.2e1 + Icges(5,3) * t700 ^ 2 / 0.2e1 + m(7) * (t679 ^ 2 + t680 ^ 2 + t718 ^ 2) / 0.2e1 + m(8) * (t895 ^ 2 + t907 ^ 2 + t922 ^ 2) / 0.2e1 + m(2) * (t903 ^ 2 + t921 ^ 2 + t923 ^ 2) / 0.2e1 + m(10) * (t657 ^ 2 + t658 ^ 2 + t666 ^ 2) / 0.2e1 + (Icges(1,6) * V_base(6) + (-Icges(8,5) * t1096 + Icges(8,6) * t1093) * t1039 + (-Icges(2,5) * t1094 - Icges(2,6) * t1097) * t1040 + (-Icges(10,5) * t701 - Icges(10,6) * t702) * t659 + (Icges(4,5) * t708 + Icges(4,6) * t709) * t664 + (Icges(11,5) * t715 + Icges(11,6) * t716) * t665 + (Icges(7,5) * t756 + Icges(7,6) * t757) * t691 + (-Icges(5,5) * t762 - Icges(5,6) * t763) * t700 + (-Icges(3,5) * t832 - Icges(3,6) * t833) * t754 + (Icges(9,5) * t844 + Icges(9,6) * t845) * t777 + (Icges(6,5) * t842 + Icges(6,6) * t843) * t778 + (t816 * t1442 + t818 * t842 / 0.2e1 + t982 * t1427 - t1096 * t986 / 0.2e1 + t798 * t1443 - t800 * t832 / 0.2e1 + t728 * t1446 + t730 * t756 / 0.2e1 + t736 * t1445 - t738 * t762 / 0.2e1 + t673 * t1449 - t675 * t701 / 0.2e1 + t694 * t1447 + t696 * t715 / 0.2e1 + t987 * t1426 + t983 * t1425 + Icges(1,2) / 0.2e1 + t824 * t1441 + t826 * t844 / 0.2e1 + t683 * t1448 + t685 * t708 / 0.2e1) * V_base(5)) * V_base(5) + Icges(11,3) * t665 ^ 2 / 0.2e1 + (((t826 + t825) * t845 + (-t824 + t827) * t844 + (t818 + t817) * t843 + (-t816 + t819) * t842 + (-t800 - t799) * t833 + (t798 - t801) * t832 + (-t737 - t738) * t763 + (-t739 + t736) * t762 + (t730 + t729) * t757 + (-t728 + t731) * t756 + (t695 + t696) * t716 + (t697 - t694) * t715 + (t685 + t684) * t709 + (-t683 + t686) * t708 + (-t674 - t675) * t702 + (-t676 + t673) * t701 + (-t987 - t984) * t1097 + (t982 - t985) * t1096 + (t983 - t988) * t1094 + (t986 + t981) * t1093) * V_base(5) / 0.2e1 + (-Icges(10,5) * t702 + Icges(10,6) * t701) * t659 + (Icges(4,5) * t709 - Icges(4,6) * t708) * t664 + (Icges(11,5) * t716 - Icges(11,6) * t715) * t665 + (Icges(7,5) * t757 - Icges(7,6) * t756) * t691 + (-Icges(5,5) * t763 + Icges(5,6) * t762) * t700 + (-Icges(3,5) * t833 + Icges(3,6) * t832) * t754 + (Icges(6,5) * t843 - Icges(6,6) * t842) * t778 + (Icges(9,5) * t845 - Icges(9,6) * t844) * t777 + (Icges(8,5) * t1093 + Icges(8,6) * t1096) * t1039 + (-Icges(2,5) * t1097 + Icges(2,6) * t1094) * t1040 + Icges(1,4) * V_base(5) + Icges(1,5) * V_base(6) + (-t817 * t842 / 0.2e1 + t819 * t1442 + t985 * t1427 + t1096 * t981 / 0.2e1 + t799 * t832 / 0.2e1 + t801 * t1443 - t729 * t756 / 0.2e1 + t731 * t1446 + t737 * t762 / 0.2e1 + t739 * t1445 + t674 * t701 / 0.2e1 + t676 * t1449 + t1094 * t984 / 0.2e1 + t988 * t1425 + Icges(1,1) / 0.2e1 - t695 * t715 / 0.2e1 + t697 * t1447 - t825 * t844 / 0.2e1 + t827 * t1441 - t684 * t708 / 0.2e1 + t686 * t1448) * V_base(4)) * V_base(4);
T = t1;
