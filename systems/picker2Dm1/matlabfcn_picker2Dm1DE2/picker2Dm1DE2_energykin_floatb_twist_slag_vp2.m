% Calculate kinetic energy for
% picker2Dm1DE2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [2x1]
%   Generalized joint coordinates (joint angles)
% qJD [2x1]
%   Generalized joint velocities
% V_base [6x1]
%   Base Velocity (twist: stacked translational and angular velocity) in base frame
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[L1,L2,L3,L4,L5,L6,e,phi05,phi1]';
% m [11x1]
%   mass of all robot links (including the base)
% mrSges [11x3]
%  first moment of all robot links (mass times center of mass in body frames)
%  rows: links of the robot (starting with base)
%  columns: x-, y-, z-coordinates
% Ifges [11x6]
%   inertia of all robot links about their respective body frame origins, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertial_parameters_convert_par1_par2.m)
% 
% Output:
% T [1x1]
%   kinetic energy

% Quelle: HybrDyn-Toolbox
% Datum: 2020-05-11 05:26
% Revision: 52c9de996ed1e2eb3528e92ec0df589a9be0640a (2020-05-10)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function T = picker2Dm1DE2_energykin_floatb_twist_slag_vp2(qJ, qJD, V_base, ...
  pkin, m, mrSges, Ifges)
%% Coder Information
%#codegen
%$cgargs {zeros(2,1),zeros(2,1),zeros(6,1),zeros(9,1),zeros(11,1),zeros(11,3),zeros(11,6)}
assert(isreal(qJ) && all(size(qJ) == [2 1]), ...
  'picker2Dm1DE2_energykin_floatb_twist_slag_vp2: qJ has to be [2x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [2 1]), ...
  'picker2Dm1DE2_energykin_floatb_twist_slag_vp2: qJD has to be [2x1] (double)');
assert(isreal(V_base) && all(size(V_base) == [6 1]), ...
  'picker2Dm1DE2_energykin_floatb_twist_slag_vp2: V_base has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'picker2Dm1DE2_energykin_floatb_twist_slag_vp2: pkin has to be [9x1] (double)');
assert(isreal(m) && all(size(m) == [11 1]), ...
  'picker2Dm1DE2_energykin_floatb_twist_slag_vp2: m has to be [11x1] (double)'); 
assert(isreal(mrSges) && all(size(mrSges) == [11,3]), ...
  'picker2Dm1DE2_energykin_floatb_twist_slag_vp2: mrSges has to be [11x3] (double)');
assert(isreal(Ifges) && all(size(Ifges) == [11 6]), ...
  'picker2Dm1DE2_energykin_floatb_twist_slag_vp2: Ifges has to be [11x6] (double)'); 

%% Symbolic Calculation
% From energy_kinetic_floatb_twist_linkframe_par2_matlab.m
% OptimizationMode: 2
% StartTime: 2020-05-10 20:21:21
% EndTime: 2020-05-10 20:23:13
% DurationCPUTime: 86.54s
% Computational Cost: add. (1704585->906), mult. (4719581->1503), div. (62044->42), fcn. (1262396->38), ass. (0->605)
t586 = 4 * pkin(1);
t419 = (pkin(3) ^ 2);
t713 = -2 * t419;
t428 = (pkin(7) ^ 2);
t405 = -2 * t428;
t371 = sin(qJ(2));
t372 = sin(qJ(1));
t635 = t371 * t372;
t686 = pkin(1) * pkin(3);
t509 = t635 * t686;
t483 = qJD(2) * t509;
t374 = cos(qJ(2));
t375 = cos(qJ(1));
t594 = qJD(1) * t375;
t526 = t374 * t594;
t484 = t526 * t686;
t712 = -0.6e1 * t484 + 0.6e1 * t483;
t711 = -t484 + t483;
t414 = pkin(4) ^ 2;
t634 = t372 * t374;
t566 = pkin(3) * t634;
t508 = pkin(1) * t566;
t425 = pkin(1) ^ 2;
t613 = t425 / 0.3e1 + t428;
t226 = -0.4e1 / 0.9e1 * t508 + 0.4e1 / 0.9e1 * t419 - t414 / 0.9e1 + t613;
t350 = -t414 / 0.6e1;
t359 = 0.2e1 / 0.3e1 * t419;
t475 = t428 - t508;
t244 = t350 + t359 + t475;
t358 = 0.4e1 / 0.3e1 * t419;
t330 = t425 + t428;
t352 = -t414 / 0.3e1;
t537 = t352 + t330;
t287 = t358 + t537;
t322 = -t425 / 0.3e1 + t428;
t513 = -0.2e1 * t566;
t339 = t375 ^ 2;
t338 = t375 * t339;
t432 = pkin(1) * t425;
t637 = t338 * t432;
t576 = pkin(7) * t637;
t681 = pkin(7) * t375;
t589 = 0.4e1 * t681;
t624 = t425 * t339;
t629 = (pkin(7) + pkin(1)) * (pkin(7) - pkin(1));
t159 = 0.4e1 * t576 + 0.6e1 * t226 * t624 + t287 * t629 + (t244 * t589 + t322 * t513) * pkin(1);
t395 = 6 * t425;
t495 = -0.4e1 * t508;
t354 = -0.2e1 / 0.3e1 * t414;
t404 = 2 * t428;
t536 = t354 + t359 + t404;
t437 = t419 ^ 2;
t535 = t354 + t330;
t616 = (t359 + t535) * t330 + t437;
t174 = t287 * t495 + (t395 + t536) * t419 + t616;
t285 = -0.2e1 * t508;
t236 = t285 + t287;
t602 = -t419 + t428;
t705 = 4 * t425;
t307 = t602 * t705;
t326 = pkin(1) * t375;
t581 = 0.4e1 * t326;
t161 = pkin(7) * t236 * t581 + t307 * t339 + t174;
t362 = -t419 / 0.3e1;
t320 = t362 + t428;
t252 = t320 * t285;
t630 = (pkin(7) + pkin(3)) * (pkin(7) - pkin(3));
t193 = t287 * t630 + t252;
t341 = 0.10e2 / 0.3e1 * t425;
t194 = (t341 + t536) * t419 + t616;
t582 = 0.2e1 * t326;
t306 = pkin(7) * t582;
t332 = -3 * t425 + t428;
t570 = 0.4e1 * t624;
t251 = t306 + t570 + t332;
t329 = -3 * t419 + t428;
t517 = 0.8e1 * t576;
t275 = t329 * t517;
t533 = t419 + t330;
t298 = -t414 + t533;
t304 = t326 + pkin(7);
t323 = t330 ^ 2;
t324 = pkin(3) * t371;
t423 = t425 ^ 2;
t378 = 15 * t423;
t385 = 18 * t428;
t386 = -0.2e1 * t414;
t388 = -0.6e1 * t414;
t390 = 2 * t419;
t427 = t428 ^ 2;
t399 = 3 * t427;
t436 = pkin(3) * t419;
t416 = t436 ^ 2;
t559 = 0.12e2 * t624;
t335 = t371 ^ 2;
t640 = t335 * t419;
t560 = 0.12e2 * t640;
t585 = 6 * pkin(1);
t403 = 3 * t428;
t610 = 15 * t425 + t403;
t334 = t371 * t335;
t641 = t334 * t436;
t128 = t159 * t560 + t275 + t193 * t559 + t416 + (-t414 + t419 + t610) * t437 + (t378 + (t385 + t388 + (6 * t419)) * t425 + t399 + (t386 + t390) * t428) * t419 + t323 * t298 + (0.6e1 * t161 * t324 + 0.8e1 * t251 * t641) * t304 + (t174 * t681 - t194 * t566) * t585;
t396 = 3 * t425;
t606 = t396 + t428;
t311 = t419 + t606;
t325 = pkin(3) * t374;
t274 = t311 * t325;
t672 = pkin(1) * t372;
t278 = t325 - t672;
t565 = t425 * t325;
t312 = 3 * t419 + t330;
t644 = t312 * t372;
t173 = -0.2e1 * t339 * t565 + t274 + (0.2e1 * t278 * t681 - t644) * pkin(1);
t463 = -t372 * t432 + t565;
t266 = 0.2e1 * t463;
t397 = 2 * t425;
t328 = t397 + t419;
t331 = -t425 + t428;
t580 = 0.2e1 * t325;
t550 = pkin(7) * t580;
t176 = t331 * t325 + t266 * t339 + (t328 * t372 + t375 * t550) * pkin(1);
t213 = -pkin(1) * t644 + t274;
t688 = 4 * t423;
t704 = 8 * t425;
t302 = pkin(3) * t688 + t436 * t704;
t545 = t372 * t630;
t687 = 4 * t432;
t216 = t302 * t374 + t545 * t687;
t394 = 5 * t423;
t599 = t427 + t437;
t380 = 10 * t425;
t609 = t380 + t404;
t622 = t428 * t425;
t247 = t419 * t609 + t394 + t599 + 6 * t622;
t389 = 5 * t437;
t401 = 6 * t428;
t260 = t389 + (t380 + t401) * t419 + t323;
t547 = t304 * t641;
t506 = -0.8e1 * t547;
t574 = -0.4e1 * t640;
t645 = t304 * t371;
t141 = t176 * t574 + t216 * t339 + (-0.4e1 * t173 * t645 + (-t247 + t517) * t374) * pkin(3) + (-0.4e1 * t213 * t681 + (t260 + t506) * t372) * pkin(1);
t268 = t324 + t304;
t692 = 0.2e1 * t371;
t590 = pkin(7) * t692;
t305 = pkin(3) * t590;
t598 = t428 - t414;
t310 = t425 + t598;
t265 = t305 + t310;
t219 = t285 + t265;
t340 = t419 * t705;
t625 = t419 * t428;
t308 = t340 - 4 * t625;
t551 = -0.4e1 * pkin(3) * pkin(7) * t310;
t303 = t324 + pkin(7);
t646 = t303 * t375;
t250 = t305 + t602 + 0.2e1 * t640;
t647 = t250 * t339;
t708 = 2 * pkin(3);
t150 = t308 * t335 + t371 * t551 - t423 - ((t428 - (t708 + pkin(4)) * pkin(4)) * (t428 + (t708 - pkin(4)) * pkin(4))) + (t405 + 0.2e1 * t414 - (4 * t419) - 0.4e1 * t647) * t425 + (-t219 * t646 + t265 * t566) * t586;
t429 = sqrt(t150);
t115 = t128 * t268 + t141 * t429;
t710 = t115 ^ 2;
t597 = 0.2e1 * pkin(7);
t709 = 2 * pkin(1);
t413 = t414 ^ 2;
t601 = t423 + t427;
t605 = t404 - t414;
t623 = t428 * t414;
t460 = t605 * t425 + t413 / 0.6e1 + t601 - t623;
t455 = 0.5e1 / 0.6e1 * t437 + t460;
t202 = (t341 + t605) * t419 + t455;
t355 = -0.3e1 / 0.2e1 * t414;
t614 = t413 / 0.2e1 - t437 / 0.2e1;
t493 = -0.3e1 * t623 + t399 + t614;
t619 = t330 * ((t355 + t404) * t425 - 0.3e1 / 0.2e1 * t623 + t601 + t614) + t416;
t158 = -0.6e1 * t202 * t508 + (t378 + (t385 - 0.9e1 * t414) * t425 + t493) * t419 + (t355 + t610) * t437 + t619;
t353 = -t414 / 0.2e1;
t292 = t353 + t533;
t514 = -0.4e1 * t566;
t486 = t292 * t514;
t476 = pkin(1) * t486;
t177 = t476 + (t395 + t605) * t419 + t455;
t195 = t292 * t630 + t252;
t583 = pkin(7) * t326;
t549 = 0.6e1 * t583;
t145 = t177 * t549 + t195 * t559 + t158 + t275;
t707 = 0.8e1 * t145;
t360 = t419 / 0.3e1;
t539 = t414 / 0.3e1 + t360 + t404;
t706 = 0.10e2 / 0.3e1 * t437 + (-t425 + t539) * t713 + (t362 + t537) * t405;
t407 = 2 * pkin(2);
t409 = pkin(6) ^ 2;
t262 = t390 + t265;
t178 = t250 * t582 + t262 * t303;
t182 = t262 * t375 + (0.4e1 * t339 - 0.2e1) * t303 * pkin(1);
t284 = -pkin(1) + t566;
t227 = -t284 + t646;
t140 = t178 * t372 + t182 * t325 + t227 * t429;
t368 = sin(pkin(8));
t369 = cos(pkin(8));
t249 = -t368 * t372 - t369 * t375;
t670 = pkin(5) * t249;
t696 = -2 * pkin(1);
t234 = t670 * t696;
t411 = pkin(5) ^ 2;
t221 = t234 + 0.2e1 * t411;
t232 = -pkin(1) + t670;
t248 = t368 * t375 - t369 * t372;
t617 = t234 + t411;
t207 = -(t709 + pkin(5)) * pkin(5) + t617;
t208 = pkin(5) * (t709 - pkin(5)) + t617;
t430 = sqrt(-t207 * t208);
t155 = pkin(5) * t221 * t248 - t232 * t430;
t659 = t140 * t155;
t297 = t390 + t396 + t598;
t214 = t297 + t305 + t495;
t632 = t374 * t375;
t231 = pkin(3) * t632 + t303 * t372;
t138 = -t214 * t646 + t231 * t429 + (t284 * t590 + t297 * t634) * pkin(3) + (-0.2e1 * t647 + (0.2e1 * t335 - 0.4e1) * t419 - t310) * pkin(1);
t648 = t248 * t430;
t153 = -pkin(5) * t648 - t221 * t232;
t662 = t138 * t153;
t462 = t662 / 0.4e1 + t659 / 0.4e1;
t215 = t425 + t617;
t211 = 0.1e1 / t215;
t653 = t211 / pkin(5);
t568 = pkin(1) * t646;
t191 = t285 + t305 + t533 + 0.2e1 * t568;
t189 = 0.1e1 / t191;
t420 = 1 / pkin(3);
t655 = t189 * t420;
t496 = t653 * t655;
t108 = t462 * t496;
t658 = t153 * t140;
t661 = t138 * t155;
t461 = t661 / 0.4e1 - t658 / 0.4e1;
t109 = t461 * t496;
t373 = sin(pkin(9));
t376 = cos(pkin(9));
t94 = t108 * t376 - t109 * t373;
t684 = pkin(6) * t94;
t91 = t684 * t407;
t663 = t409 + t91;
t84 = -(t407 + pkin(6)) * pkin(6) + t663;
t85 = pkin(6) * (t407 - pkin(6)) + t663;
t667 = t84 * t85;
t431 = sqrt(-t667);
t703 = t431 / 0.2e1;
t351 = -t414 / 0.4e1;
t702 = t351 + t419 / 0.2e1;
t701 = t403 - t414 - t419;
t485 = qJD(1) * t509;
t592 = qJD(2) * t374;
t529 = t304 * t592;
t501 = pkin(3) * t529;
t700 = t485 - t501;
t593 = qJD(2) * t371;
t528 = t372 * t593;
t456 = t526 - t528;
t699 = qJD(1) - qJD(2);
t698 = -0.8e1 * pkin(7);
t697 = -4 * pkin(1);
t695 = 0.1e1 / t94;
t694 = 0.1e1 / t153;
t693 = 0.1e1 / t94 ^ 2;
t691 = -0.8e1 * t375;
t690 = -0.2e1 * t375;
t689 = 0.2e1 * t409;
t295 = qJD(2) * t550;
t452 = 0.4e1 * t456;
t450 = t452 * t326;
t471 = t371 * t375 - t634;
t591 = qJD(2) * t419;
t488 = t371 * t374 * t591;
t481 = 0.4e1 * t488;
t530 = t372 * t594;
t492 = t250 * t530;
t615 = 0.2e1 * t711;
t542 = t295 + t615;
t596 = qJD(1) * t372;
t242 = t295 + t481;
t649 = t242 * t339;
t682 = pkin(7) * t372;
t660 = ((0.8e1 * t492 - 0.4e1 * t649) * t425 + (t308 * t692 + t551) * t592 + (0.2e1 * t374 ^ 2 * t591 * t682 + (t219 * t596 - t375 * t542) * t303 + (t265 * t526 + (-t219 * t632 - t265 * t635) * qJD(2)) * pkin(3)) * t586) / t429;
t525 = t660 / 0.2e1;
t595 = qJD(1) * t374;
t631 = t375 * t429;
t633 = t372 * t429;
t111 = t231 * t525 + (-t295 * t375 + (t214 * t372 + t631) * qJD(1)) * t303 + (t481 + 0.4e1 * t492 - 0.2e1 * t649) * pkin(1) + ((t297 * t375 - t633) * t595 + (-t214 * t632 - t297 * t635 - t429 * t471) * qJD(2) + (t284 * t592 + t324 * t456) * t597 + t303 * t450) * pkin(3);
t240 = t248 * qJD(1);
t241 = t249 * qJD(1);
t516 = t240 * t709;
t657 = (t207 + t208) * pkin(5) * t516 / t430;
t524 = t657 / 0.2e1;
t459 = -t241 * t430 + t248 * t524;
t129 = (-(t232 * t709 - t221) * t240 + t459) * pkin(5);
t575 = 0.2e1 * t240 * t248;
t650 = t240 * t430;
t130 = t232 * t524 + t411 * pkin(1) * t575 + (t221 * t241 + t650) * pkin(5);
t554 = pkin(3) * t592;
t656 = ((-t303 * t596 + t375 * t554) * t709 + t542) / t191 ^ 2;
t497 = t653 * t656;
t212 = 0.1e1 / t215 ^ 2;
t651 = t212 * t240;
t569 = pkin(1) * t651;
t677 = t153 / 0.4e1;
t678 = t140 / 0.4e1;
t679 = t138 / 0.4e1;
t110 = t227 * t525 + (t178 * t375 - t303 * t633) * qJD(1) + (t242 * t375 - t250 * t596) * t372 * t709 + ((-t631 + (-t262 - 0.8e1 * t568) * t372) * t595 + ((-t182 + t633) * t371 + (t631 + (t303 * t597 + t262) * t372 + (t339 * t709 - pkin(1) + t681) * t374 * t708) * t374) * qJD(2)) * pkin(3);
t680 = t110 / 0.4e1;
t62 = (-t462 * t497 + (-(t662 / 0.2e1 + t659 / 0.2e1) * t569 + (t111 * t677 + t129 * t679 + t130 * t678 + t155 * t680) * t653) * t189) * t420;
t63 = (t461 * t497 + (-(-t661 / 0.2e1 + t658 / 0.2e1) * t569 + (-t111 * t155 / 0.4e1 - t138 * t130 / 0.4e1 + t129 * t678 + t110 * t677) * t653) * t189) * t420;
t38 = t373 * t63 + t376 * t62;
t685 = pkin(2) * t38;
t96 = t108 * t373 + t109 * t376;
t683 = pkin(6) * t96;
t676 = t189 / 0.2e1;
t342 = -0.20e2 / 0.3e1 * t425;
t402 = 4 * t428;
t540 = 0.2e1 / 0.3e1 * t414 + t359 + t402;
t541 = 0.4e1 / 0.3e1 * t414 + t358 + t405;
t675 = t437 / 0.2e1 - (t342 + t540) * t419 / 0.2e1 + 0.3e1 / 0.2e1 * t423 - t541 * t425 / 0.2e1 - t427 / 0.2e1;
t674 = -t429 / 0.4e1;
t673 = t429 / 0.4e1;
t671 = pkin(1) * t339;
t669 = (-t84 - t85) * pkin(6) * t685 / t703;
t668 = t38 * t96;
t281 = t428 + t419 / 0.4e1 + t425 / 0.4e1 - t414 / 0.8e1;
t611 = 0.4e1 / 0.7e1 * t428 - t414 / 0.7e1;
t170 = -0.32e2 / 0.21e2 * t281 * t508 + 0.5e1 / 0.42e2 * t437 + (0.16e2 / 0.21e2 * t425 + t611) * t419 + t423 / 0.7e1 + t611 * t425 + t427 - 0.3e1 / 0.7e1 * t623 + t413 / 0.42e2;
t283 = t613 + t702;
t364 = 0.4e1 / 0.3e1 * t425;
t172 = -0.8e1 / 0.3e1 * t283 * t508 + 0.5e1 / 0.18e2 * t437 + (t364 + t352) * t419 + t427 - t423 / 0.3e1 + t413 / 0.18e2 + (t358 + 0.2e1 / 0.3e1 * t425 + t354) * t428;
t239 = -t437 / 0.6e1 + t460;
t366 = t425 / 0.2e1;
t612 = t366 + t428;
t243 = -0.2e1 / 0.3e1 * t508 + t351 + t612;
t315 = (t402 + t414) * t425;
t363 = -0.2e1 / 0.3e1 * t419;
t321 = t363 + t428;
t512 = 0.16e2 * t576;
t337 = t339 ^ 2;
t639 = t337 * t423;
t573 = 0.8e1 * t639;
t588 = 0.6e1 * t681;
t144 = t321 * t573 + t243 * t512 + 0.14e2 * t170 * t624 + (t331 * t437) + (t315 - 0.10e2 / 0.3e1 * t423 + (2 * t427) - t623) * t419 + t239 * t629 + (t172 * t588 + t322 * t486) * pkin(1);
t400 = 8 * t428;
t220 = t432 * t514 + t340 + t688 + (t386 + t400) * t425;
t235 = -t425 + t475 + t702;
t160 = t517 + t220 * t339 + t292 * t332 + (t235 * t589 + t513 * t629) * pkin(1);
t600 = t427 - t423;
t162 = t320 * t476 - t416 + (-t341 - t598) * t437 + (t315 + t437 / 0.6e1 - t413 / 0.6e1 + t600) * t419 + t239 * t428;
t387 = -0.5e1 * t414;
t393 = 7 * t423;
t166 = (t355 + t403 + (7 * t425)) * t437 + (t393 + (t387 + (10 * t428)) * t425 + t493) * t419 + t619;
t441 = pkin(7) * t428;
t309 = -0.12e2 * pkin(7) * t432 + t441 * t586;
t317 = -8 * t423 + 12 * t622;
t184 = t309 * t375 + t317 * t339 + t512 + t573 + t601 - (6 * t622);
t197 = t285 * t630 + t292 * t329;
t276 = 16 * (t599 - 6 * t625) * t423;
t327 = -0.30e2 * t414 + (60 * t428);
t333 = t335 ^ 2;
t604 = t413 - t437;
t465 = (6 * t427) + t604 - 0.6e1 * t623;
t511 = 0.32e2 * t576;
t643 = t323 * (-t419 + t310);
t107 = t276 * t337 + t197 * t511 + 0.24e2 * t162 * t624 + (t386 + t402 + (28 * t425)) * t416 + t298 * t643 + (0.24e2 * t144 * t335 + t327 * t423 + t388 * t427 + t395 * t465 + t404 * t604 + (28 * t432 ^ 2) + 0.4e1 * t441 ^ 2) * t419 + (0.32e2 * t160 * t641 + t324 * t707) * t304 + 0.8e1 * (t158 * t681 - t166 * t566) * pkin(1) + (0.16e2 * t184 * t333 + t327 * t425 + (70 * t423) + t437 + t465) * t437;
t279 = 0.7e1 / 0.6e1 * t419 + t350 + t612;
t538 = t350 + t360 + t428;
t282 = t364 + t538;
t192 = -t279 * t672 + t282 * t325;
t198 = (t419 * t331) - 0.5e1 / 0.3e1 * t423 + t539 * t425 + t428 * (t352 + t320);
t289 = t425 + t538;
t313 = t390 + t331;
t204 = t289 * t325 - t313 * t672 / 0.2e1;
t638 = t338 * t423;
t146 = -0.4e1 * t638 * t682 + t192 * t570 + (-0.8e1 / 0.3e1 * t639 + t198) * t325 + (t204 * t589 + t372 * t675) * pkin(1);
t608 = t386 + t713;
t534 = t401 + t608;
t188 = t437 + (t354 + t363 + t609) * t419 + t394 + t534 * t425 + t428 * (t354 + t321);
t181 = t188 * t325;
t286 = 0.8e1 / 0.3e1 * t419 + t537;
t288 = t352 + t359 + t606;
t196 = -t286 * t672 + t288 * t325;
t293 = 0.5e1 / 0.6e1 * t419 + t366 + t350;
t210 = pkin(1) * t545 + t293 * t580;
t564 = t432 * t325;
t571 = -0.4e1 * t624;
t203 = t389 + (t380 + t534) * t419 + (t363 + t535) * t330;
t654 = t203 * t372;
t147 = t338 * t564 * t698 + t210 * t571 + t181 + (t196 * t589 - t654) * pkin(1);
t163 = -pkin(1) * t654 + t181;
t201 = -(3 * t437) + (t342 + t541) * t419 + t540 * t425 + t600;
t164 = t201 * t325 + t672 * t706;
t294 = t701 * t380;
t607 = t387 - (5 * t419);
t165 = t416 + ((21 * t425) + t701) * t437 + (t428 * t608 + t294 + t399 + (35 * t423)) * t419 + (t393 + (t400 + t607) * t425 + t428 * (-t419 + t598)) * t330;
t267 = 0.4e1 * t463;
t277 = t325 + 0.2e1 * t672;
t291 = t353 + t311;
t167 = t332 * t325 + t267 * t339 + (t277 * t681 + t291 * t372) * t709;
t175 = (7 * t416) + ((35 * t425) + (15 * t428) + t607) * t437 + ((21 * t423) + t294 + (9 * t427) + (t388 - (6 * t419)) * t428) * t419 + t643;
t280 = t428 + 0.5e1 / 0.2e1 * t419 + 0.3e1 / 0.2e1 * t425 + t353;
t553 = (pkin(1) * t329) / 0.2e1;
t206 = t280 * t325 + t372 * t553;
t245 = 0.4e1 / 0.3e1 * t624 + t306 + t322;
t642 = t333 * t437;
t503 = -0.24e2 * t245 * t642;
t561 = -0.12e2 * t640;
t572 = -0.6e1 * t624;
t116 = t206 * t512 + t167 * t506 + t146 * t561 + t164 * t572 + (-0.6e1 * t147 * t645 + (0.24e2 * t320 * t639 - t165) * t374) * pkin(3) + (-0.6e1 * t163 * t681 + (t175 + t503) * t372) * pkin(1);
t83 = t107 * t268 + t116 * t429;
t666 = t710 / t83 ^ 2;
t113 = 0.1e1 / t115;
t665 = t113 * t83;
t664 = t38 * t431;
t652 = t211 / pkin(1);
t636 = t339 * t432;
t410 = 0.1e1 / pkin(6);
t628 = t410 / pkin(2);
t415 = 1 / pkin(4);
t627 = t415 * t420;
t626 = t415 / pkin(3) ^ 2;
t621 = t712 * t202;
t454 = t456 * pkin(3);
t449 = pkin(1) * t320 * t454 * t624;
t577 = pkin(7) * t636;
t482 = t577 * t596;
t468 = -0.24e2 * t482;
t620 = t329 * t468 - 0.24e2 * t449;
t618 = 0.4e1 * t711 * t287;
t435 = pkin(2) ^ 2;
t88 = t435 + t663;
t579 = 0.1e1 / t88 ^ 2 * t685;
t567 = pkin(3) * t645;
t563 = pkin(5) * t651;
t199 = t425 * t454 * t589;
t557 = pkin(1) * t596;
t261 = t554 - t557;
t507 = pkin(7) * t557;
t296 = -0.2e1 * t507;
t336 = t372 ^ 2;
t474 = t335 * t436 * t529;
t464 = -0.24e2 * t474;
t466 = t322 * t483;
t467 = t322 * t484;
t487 = t425 * t530;
t477 = -0.24e2 * t487;
t555 = pkin(3) * t593;
t478 = t555 * t637;
t532 = qJD(1) * t641;
t502 = pkin(1) * t532;
t480 = t372 * t502;
t490 = t594 * t630;
t494 = -0.6e1 * t507;
t556 = pkin(1) * t594;
t499 = t312 * t556;
t504 = -0.2e1 * t530;
t510 = t624 * t686;
t527 = t375 * t593;
t562 = t83 / t710 * ((t304 * t502 * t691 + t336 * t532 * t704 + t464 * t672 + (0.2e1 * (-t425 * t555 - t432 * t594) * t339 + t266 * t504 - t331 * t555 + (t328 * t594 + (-t372 * t595 - t527) * pkin(7) * t708) * pkin(1)) * t574 - 0.8e1 * t176 * t488 - 0.4e1 * (-t499 + (0.4e1 * t374 * t487 + (-t311 + 0.2e1 * t624) * t593) * pkin(3) + ((-t555 - t556) * t326 - t278 * t557) * t597) * t567 + t478 * t698 + t468 * t325 + (-t302 * t593 + t490 * t687) * t339 + t216 * t504 - 0.4e1 * (-t311 * t555 - t499) * t583 + 0.4e1 * t213 * t507 + t247 * t555 + t260 * t556 + 0.4e1 * t700 * t173) * t429 + t141 * t525 + (0.8e1 * (t296 - 0.8e1 * t487) * t547 + (-0.12e2 * t482 + 0.6e1 * (-0.4e1 / 0.9e1 * t526 + 0.4e1 / 0.9e1 * t528) * t510 - 0.12e2 * t226 * t487 - t199 - 0.4e1 * t244 * t507 - 0.2e1 * t467 + 0.2e1 * t466) * t560 + 0.24e2 * t159 * t488 + 0.6e1 * (t307 * t504 + (-t236 * t596 + t375 * t615) * pkin(7) * t586 + t618) * t567 + t193 * t477 + t618 * t549 + t174 * t494 + t620 + (-0.8e1 * t480 + 0.24e2 * t474) * t251 + t712 * t194 - 0.6e1 * t700 * t161) * t268 + t128 * t261);
t558 = pkin(5) * V_base(6);
t552 = -t669 / 0.2e1;
t548 = t189 * t626;
t546 = t372 * t642;
t544 = t665 / 0.4e1;
t543 = t410 / t88 / 0.2e1;
t531 = t338 * t596;
t523 = -t656 / 0.2e1;
t522 = t655 / 0.2e1;
t521 = t653 / 0.2e1;
t520 = -t652 / 0.2e1;
t519 = t652 / 0.2e1;
t518 = t627 / 0.2e1;
t126 = atan2(t140 * t522, t138 * t522);
t124 = sin(t126);
t125 = cos(t126);
t263 = t372 * V_base(1) - t375 * V_base(2);
t319 = V_base(6) + qJD(1);
t224 = pkin(1) * t319 + t263;
t264 = -t372 * V_base(2) - t375 * V_base(1);
t104 = t124 * t224 + t125 * t264;
t89 = t91 + t689;
t90 = -pkin(2) - t684;
t46 = -t431 * t683 - t89 * t90;
t47 = -t431 * t90 + t683 * t89;
t29 = atan2(t47 * t543, t46 * t543);
t27 = sin(t29);
t28 = cos(t29);
t103 = -t124 * t264 + t125 * t224;
t137 = 0.1e1 / t138 ^ 2;
t64 = t319 + 0.2e1 * ((t110 * t676 + t140 * t523) / t138 - (t111 * t676 + t138 * t523) * t140 * t137) * pkin(3) / (t137 * t140 ^ 2 + 0.1e1) * t191 * t420;
t57 = pkin(2) * t64 + t103;
t13 = t27 * t104 - t28 * t57;
t56 = pkin(3) * t64 + t103;
t75 = atan2(t429 * t518, t518 * t665);
t73 = sin(t75);
t74 = cos(t75);
t36 = -t104 * t73 + t74 * t56;
t500 = pkin(3) * t527;
t498 = -t562 / 0.4e1;
t256 = t372 * V_base(4) - t375 * V_base(5);
t228 = -pkin(1) * t256 + V_base(3);
t491 = t423 * t531;
t489 = t334 * t437 * t592;
t479 = t555 * t639;
t470 = t632 + t635;
t469 = -0.48e2 * t482;
t258 = -t372 * V_base(5) - t375 * V_base(4);
t105 = -t124 * t258 + t125 * t256;
t100 = -pkin(2) * t105 + t228;
t99 = -pkin(3) * t105 + t228;
t39 = t373 * t62 - t376 * t63;
t45 = 0.1e1 / t46 ^ 2;
t5 = t64 + 0.2e1 * (((t90 * t552 + pkin(2) * t668 * t689 + (t39 * t89 + t664) * pkin(6)) * t543 - t47 * t579) / t46 - (-t46 * t579 + (t96 * t552 - t431 * t39 + (-0.2e1 * pkin(2) * t90 + t89) * t38) * pkin(6) * t543) * t47 * t45) * pkin(6) / (t45 * t47 ^ 2 + 0.1e1) * t88;
t451 = t456 * t709;
t453 = -t188 * t555 - t203 * t556;
t54 = (t503 * t556 - 0.24e2 * pkin(1) * (-0.8e1 / 0.3e1 * t487 + t296) * t546 - 0.96e2 * t245 * t489 * t672 + ((-t332 + t571) * t555 + 0.2e1 * (pkin(1) * t291 - t267 * t372 - 0.2e1 * t636) * t594 + (-0.2e1 * t500 + (-0.2e1 * t277 * t372 + 0.4e1 * t671) * qJD(1)) * pkin(1) * pkin(7)) * t506 + (0.8e1 / 0.3e1 * t479 + (-t279 * t556 - t282 * t555) * t570 - t198 * t555 + t556 * t675 + (0.32e2 / 0.3e1 * t638 * t325 + t425 * t192 * t691) * t596 + (t289 * t500 * t697 + ((0.12e2 * t336 * t339 - 0.4e1 * t337) * t423 + (-0.4e1 * t204 * t372 - 0.2e1 * t313 * t671) * pkin(1)) * qJD(1)) * pkin(7)) * t561 - 0.24e2 * t146 * t488 - 0.6e1 * ((-0.4e1 * (pkin(1) * t490 - 0.2e1 * t293 * t555) * t339 + 0.8e1 * t210 * t530) * t425 + (0.8e1 * t478 + (-t286 * t556 - t288 * t555) * t581 + (t196 * t697 + 0.24e2 * t339 * t564) * t596) * pkin(7) + t453) * t567 + (-t280 * t555 + t553 * t594) * t512 + t206 * t469 + (-t201 * t555 + t556 * t706) * t572 + 0.12e2 * t164 * t487 - 0.6e1 * t453 * t583 + 0.6e1 * t163 * t507 + t165 * t555 + t175 * t556 + (-0.96e2 * t491 * t325 - 0.24e2 * t479) * t320 + (0.8e1 * t480 + t464) * t167 + 0.6e1 * t700 * t147) * t429 + t116 * t525 + (0.16e2 * (t317 * t690 - t309 - 0.48e2 * t577 - 0.32e2 * t638) * qJD(1) * t546 + 0.64e2 * t184 * t489 + 0.32e2 * (-t199 + (t220 * t690 + (t235 * t697 - 0.24e2 * t636) * pkin(7)) * t596 + (-t451 * t629 - t452 * t636) * pkin(3)) * t547 + 0.24e2 * (-0.32e2 * t321 * t491 + (-0.2e1 / 0.3e1 * t526 + 0.2e1 / 0.3e1 * t528) * t512 * t686 + t243 * t469 - 0.28e2 * t170 * t487 + (-0.8e1 / 0.3e1 * t526 + 0.8e1 / 0.3e1 * t528) * t283 * pkin(3) * t425 * t588 + t172 * t494 + 0.4e1 * (-t467 + t466) * t292 - 0.64e2 / 0.3e1 * t456 * t281 * t510) * t640 + 0.48e2 * t144 * t488 - 0.8e1 * t145 * t485 + 0.8e1 * (t195 * t477 + (-pkin(3) * t292 * t450 - t177 * t596) * pkin(7) * t585 + t620 + t621) * t567 + t501 * t707 - 0.4e1 * t276 * t531 - pkin(3) * t451 * t511 * t630 - 0.96e2 * t197 * t482 - 0.96e2 * t292 * t449 - 0.48e2 * t162 * t487 + 0.8e1 * t621 * t583 - 0.8e1 * t158 * t507 + 0.8e1 * t711 * t166 + (-0.32e2 * t480 + 0.96e2 * t474) * t160) * t268 + t107 * t261;
t22 = t64 + (0.1e1 / t83 * t115 * t525 - 0.2e1 * (t54 * t113 / 0.2e1 - t562 / 0.2e1) * pkin(4) * pkin(3) * t429 * t627 * t666) / (t150 * t666 + 0.1e1);
t458 = t138 * t673 + t140 * t544;
t457 = t138 * t544 + t140 * t674;
t377 = V_base(3) ^ 2;
t318 = V_base(6) + qJD(2);
t301 = -pkin(7) * V_base(5) + V_base(3);
t300 = pkin(7) * V_base(6) + V_base(2);
t273 = -t368 * t558 + V_base(1);
t272 = t369 * t558 + V_base(2);
t257 = t371 * V_base(5) + t374 * V_base(4);
t255 = t371 * V_base(4) - t374 * V_base(5);
t238 = t300 * t371 + t374 * V_base(1);
t237 = -t300 * t374 + t371 * V_base(1);
t233 = -pkin(1) * t249 + pkin(5);
t229 = V_base(3) + (t368 * V_base(4) - t369 * V_base(5)) * pkin(5);
t225 = t228 ^ 2;
t222 = t234 + t397;
t187 = t699 * t470;
t186 = t699 * t471;
t156 = pkin(1) * t222 * t248 + t233 * t430;
t154 = -pkin(1) * t648 + t222 * t233;
t152 = 0.1e1 / t154 ^ 2;
t151 = 0.1e1 / t153 ^ 2;
t136 = atan2(t156 * t519, t154 * t520);
t135 = atan2(t155 * t521, t153 * t521);
t134 = cos(t136);
t133 = cos(t135);
t132 = sin(t136);
t131 = sin(t135);
t123 = -t132 * t368 + t134 * t369;
t122 = t132 * t369 + t134 * t368;
t120 = -t131 * t256 - t133 * t258;
t119 = t131 * t258 - t133 * t256;
t118 = -t131 * t224 - t133 * t264;
t117 = t131 * t264 - t133 * t224;
t106 = t124 * t256 + t125 * t258;
t102 = t122 * V_base(5) + t123 * V_base(4);
t101 = -t122 * V_base(4) + t123 * V_base(5);
t98 = t122 * t272 + t123 * t273;
t97 = -t122 * t273 + t123 * t272;
t81 = V_base(6) + (((-t233 * t657 / 0.2e1 + t425 * pkin(5) * t575 + (t222 * t241 + t650) * pkin(1)) * t519 - t156 * t563) / t154 + (t154 * t563 + (-(-0.2e1 * pkin(5) * t233 - t222) * t240 + t459) * pkin(1) * t520) * t156 * t152) / (t152 * t156 ^ 2 + 0.1e1) * t215 * t696;
t80 = (t130 * t694 * t653 + (-t129 * t151 * t653 - (-t153 * t151 + t694) * t212 * t516) * t155) * t215 / (t151 * t155 ^ 2 + 0.1e1) * pkin(5) + t319;
t72 = t458 * t548;
t71 = t457 * t548;
t70 = atan2(t96, t94);
t68 = cos(t70);
t67 = sin(t70);
t60 = atan2(t628 * t703, -t94);
t59 = cos(t60);
t58 = sin(t60);
t53 = -t470 * t72 + t471 * t71;
t52 = -t470 * t71 - t471 * t72;
t51 = 0.1e1 / t53 ^ 2;
t50 = t105 * t73 + t106 * t74;
t49 = t105 * t74 - t106 * t73;
t44 = -pkin(4) * t49 + t99;
t43 = -t105 * t67 - t106 * t68;
t42 = -t105 * t68 + t106 * t67;
t41 = -t103 * t67 - t104 * t68;
t40 = -t103 * t68 + t104 * t67;
t37 = t104 * t74 + t56 * t73;
t35 = atan2(t52, t53);
t33 = cos(t35);
t32 = sin(t35);
t25 = (-t458 * t656 + (t111 * t673 + t138 * t660 / 0.8e1 + t140 * t498 + (t54 * t678 + t680 * t83) * t113) * t189) * t626;
t24 = (-t457 * t656 + (t138 * t498 + t110 * t674 - t140 * t660 / 0.8e1 + (t111 * t83 / 0.4e1 + t54 * t679) * t113) * t189) * t626;
t21 = (t39 * t695 - t668 * t693) / (t693 * t96 ^ 2 + 0.1e1) + t64;
t20 = pkin(4) * t22 + t36;
t19 = -t32 * t49 - t33 * t50;
t18 = t32 * t50 - t33 * t49;
t17 = -t105 * t27 - t106 * t28;
t16 = -t105 * t28 + t106 * t27;
t15 = -pkin(6) * t16 + t100;
t14 = -t104 * t28 - t27 * t57;
t12 = -t20 * t32 - t33 * t37;
t11 = -t20 * t33 + t32 * t37;
t10 = -t16 * t58 - t17 * t59;
t9 = -t16 * t59 + t17 * t58;
t6 = ((-t186 * t71 + t187 * t72 - t24 * t470 - t25 * t471) / t53 - (-t186 * t72 - t187 * t71 + t24 * t471 - t25 * t470) * t52 * t51) / (t51 * t52 ^ 2 + 0.1e1) + t22;
t4 = pkin(6) * t5 + t13;
t3 = (-t695 * t669 / 0.4e1 + t693 * t664 / 0.2e1) / (0.1e1 - 0.1e1 / pkin(6) ^ 2 / t435 * t693 * t667 / 0.4e1) * t628 + t5;
t2 = -t14 * t59 - t4 * t58;
t1 = t14 * t58 - t4 * t59;
t7 = m(4) * (t100 ^ 2 + t13 ^ 2 + t14 ^ 2) / 0.2e1 + (t15 * mrSges(10,2) - t1 * mrSges(10,3) + Ifges(10,4) * t9 + Ifges(10,5) * t3 + Ifges(10,1) * t10 / 0.2e1) * t10 + (t11 * mrSges(11,1) - t12 * mrSges(11,2) + Ifges(11,3) * t6 / 0.2e1) * t6 + (-t228 * mrSges(9,1) + t118 * mrSges(9,3) + Ifges(9,4) * t120 + Ifges(9,6) * t80 + Ifges(9,2) * t119 / 0.2e1) * t119 + (t13 * mrSges(4,1) - t14 * mrSges(4,2) + Ifges(4,3) * t5 / 0.2e1) * t5 + (t44 * mrSges(11,2) - t11 * mrSges(11,3) + Ifges(11,5) * t6 + Ifges(11,1) * t19 / 0.2e1) * t19 + (-V_base(3) * mrSges(1,1) + V_base(1) * mrSges(1,3) + Ifges(1,6) * V_base(6) + Ifges(1,2) * V_base(5) / 0.2e1) * V_base(5) + (-t99 * mrSges(5,1) + t37 * mrSges(5,3) + Ifges(5,4) * t50 + Ifges(5,2) * t49 / 0.2e1) * t49 + (t263 * mrSges(2,1) - t264 * mrSges(2,2) + Ifges(2,3) * t319 / 0.2e1) * t319 + m(7) * (t40 ^ 2 + t41 ^ 2 + t225) / 0.2e1 + m(9) * (t117 ^ 2 + t118 ^ 2 + t225) / 0.2e1 + m(3) * (t103 ^ 2 + t104 ^ 2 + t225) / 0.2e1 + (-t100 * mrSges(4,1) + t14 * mrSges(4,3) + Ifges(4,4) * t17 + Ifges(4,6) * t5 + Ifges(4,2) * t16 / 0.2e1) * t16 + (-t229 * mrSges(6,1) + t98 * mrSges(6,3) + Ifges(6,4) * t102 + Ifges(6,6) * t81 + Ifges(6,2) * t101 / 0.2e1) * t101 + (-V_base(3) * mrSges(2,1) + t264 * mrSges(2,3) + Ifges(2,4) * t258 + Ifges(2,6) * t319 + Ifges(2,2) * t256 / 0.2e1) * t256 + (t36 * mrSges(5,1) - t37 * mrSges(5,2) + Ifges(5,5) * t50 + Ifges(5,6) * t49 + Ifges(5,3) * t22 / 0.2e1) * t22 + (t229 * mrSges(6,2) - t97 * mrSges(6,3) + Ifges(6,5) * t81 + Ifges(6,1) * t102 / 0.2e1) * t102 + (-t228 * mrSges(7,1) + t41 * mrSges(7,3) + Ifges(7,4) * t43 + Ifges(7,2) * t42 / 0.2e1) * t42 + (t228 * mrSges(9,2) - t117 * mrSges(9,3) + Ifges(9,5) * t80 + Ifges(9,1) * t120 / 0.2e1) * t120 + (-t301 * mrSges(8,1) + t237 * mrSges(8,3) + Ifges(8,6) * t318 + Ifges(8,2) * t257 / 0.2e1) * t257 + (-t228 * mrSges(3,1) + t104 * mrSges(3,3) + Ifges(3,4) * t106 + Ifges(3,6) * t64 + Ifges(3,2) * t105 / 0.2e1) * t105 + (t103 * mrSges(3,1) - t104 * mrSges(3,2) + Ifges(3,3) * t64 / 0.2e1) * t64 + (t100 * mrSges(4,2) - t13 * mrSges(4,3) + Ifges(4,5) * t5 + Ifges(4,1) * t17 / 0.2e1) * t17 + (V_base(3) * mrSges(1,2) - V_base(2) * mrSges(1,3) + Ifges(1,4) * V_base(5) + Ifges(1,5) * V_base(6) + Ifges(1,1) * V_base(4) / 0.2e1) * V_base(4) + (-t44 * mrSges(11,1) + t12 * mrSges(11,3) + Ifges(11,4) * t19 + Ifges(11,6) * t6 + Ifges(11,2) * t18 / 0.2e1) * t18 + (t228 * mrSges(7,2) - t40 * mrSges(7,3) + Ifges(7,1) * t43 / 0.2e1) * t43 + m(5) * (t36 ^ 2 + t37 ^ 2 + t99 ^ 2) / 0.2e1 + (t1 * mrSges(10,1) - t2 * mrSges(10,2) + Ifges(10,6) * t9 + Ifges(10,3) * t3 / 0.2e1) * t3 + (t40 * mrSges(7,1) - t41 * mrSges(7,2) + Ifges(7,5) * t43 + Ifges(7,6) * t42 + Ifges(7,3) * t21 / 0.2e1) * t21 + m(11) * (t11 ^ 2 + t12 ^ 2 + t44 ^ 2) / 0.2e1 + (t238 * mrSges(8,1) - t237 * mrSges(8,2) + Ifges(8,3) * t318 / 0.2e1) * t318 + (t117 * mrSges(9,1) - t118 * mrSges(9,2) + Ifges(9,3) * t80 / 0.2e1) * t80 + (t228 * mrSges(3,2) - t103 * mrSges(3,3) + Ifges(3,5) * t64 + Ifges(3,1) * t106 / 0.2e1) * t106 + m(10) * (t1 ^ 2 + t15 ^ 2 + t2 ^ 2) / 0.2e1 + (t97 * mrSges(6,1) - t98 * mrSges(6,2) + Ifges(6,3) * t81 / 0.2e1) * t81 + (V_base(3) * mrSges(2,2) - t263 * mrSges(2,3) + Ifges(2,5) * t319 + Ifges(2,1) * t258 / 0.2e1) * t258 + (-t15 * mrSges(10,1) + t2 * mrSges(10,3) + Ifges(10,2) * t9 / 0.2e1) * t9 + m(6) * (t229 ^ 2 + t97 ^ 2 + t98 ^ 2) / 0.2e1 + (t99 * mrSges(5,2) - t36 * mrSges(5,3) + Ifges(5,1) * t50 / 0.2e1) * t50 + (V_base(2) * mrSges(1,1) - V_base(1) * mrSges(1,2) + Ifges(1,3) * V_base(6) / 0.2e1) * V_base(6) + (t301 * mrSges(8,2) - t238 * mrSges(8,3) + Ifges(8,4) * t257 + Ifges(8,5) * t318 + Ifges(8,1) * t255 / 0.2e1) * t255 + m(1) * (V_base(1) ^ 2 + V_base(2) ^ 2 + t377) / 0.2e1 + m(2) * (t263 ^ 2 + t264 ^ 2 + t377) / 0.2e1 + m(8) * (t237 ^ 2 + t238 ^ 2 + t301 ^ 2) / 0.2e1;
T = t7;
