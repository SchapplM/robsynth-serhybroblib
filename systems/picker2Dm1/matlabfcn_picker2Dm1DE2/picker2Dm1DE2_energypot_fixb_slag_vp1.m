% Calculate potential energy for
% picker2Dm1DE2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [2x1]
%   Generalized joint coordinates (joint angles)
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[L1,L2,L3,L4,L5,L6,e,phi05,phi1]';
% m [11x1]
%   mass of all robot links (including the base)
% rSges [11x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% 
% Output:
% U [1x1]
%   Potential energy

% Quelle: HybrDyn-Toolbox
% Datum: 2020-05-11 05:26
% Revision: 52c9de996ed1e2eb3528e92ec0df589a9be0640a (2020-05-10)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function U = picker2Dm1DE2_energypot_fixb_slag_vp1(qJ, g, ...
  pkin, m, rSges)
%% Coder Information
%#codegen
%$cgargs {zeros(2,1),zeros(3,1),zeros(9,1),zeros(11,1),zeros(11,3)}
assert(isreal(qJ) && all(size(qJ) == [2 1]), ...
  'picker2Dm1DE2_energypot_fixb_slag_vp1: qJ has to be [2x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'picker2Dm1DE2_energypot_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'picker2Dm1DE2_energypot_fixb_slag_vp1: pkin has to be [9x1] (double)');
assert(isreal(m) && all(size(m) == [11 1]), ...
  'picker2Dm1DE2_energypot_fixb_slag_vp1: m has to be [11x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [11,3]), ...
  'picker2Dm1DE2_energypot_fixb_slag_vp1: rSges has to be [11x3] (double)');

%% Symbolic Calculation
% From energy_potential_fixb_worldframe_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2020-05-10 20:21:33
% EndTime: 2020-05-10 20:21:45
% DurationCPUTime: 8.10s
% Computational Cost: add. (65181->486), mult. (176706->626), div. (2626->11), fcn. (45644->38), ass. (0->264)
t656 = 4 * pkin(1);
t504 = pkin(4) ^ 2;
t446 = -t504 / 0.4e1;
t509 = pkin(3) ^ 2;
t655 = t446 + t509 / 0.2e1;
t654 = 2 * pkin(7);
t497 = 2 * pkin(2);
t463 = sin(pkin(8));
t464 = cos(pkin(8));
t467 = sin(qJ(1));
t470 = cos(qJ(1));
t390 = t463 * t470 - t464 * t467;
t653 = 0.2e1 * t390;
t436 = t470 ^ 2;
t652 = -0.2e1 * t436;
t482 = 0.2e1 * t509;
t651 = 0.4e1 * t509;
t514 = pkin(1) ^ 2;
t512 = t514 ^ 2;
t650 = 4 * t512;
t649 = 2 * t514;
t486 = 6 * t514;
t517 = pkin(7) ^ 2;
t494 = 2 * t517;
t522 = t509 ^ 2;
t481 = 0.5e1 * t522;
t501 = pkin(5) ^ 2;
t391 = -t463 * t467 - t464 * t470;
t645 = pkin(5) * t391;
t592 = pkin(1) * t645;
t382 = t501 - t592;
t386 = -pkin(1) + t645;
t498 = 2 * pkin(1);
t618 = -0.2e1 * t592 + t501;
t375 = sqrt(-(-(t498 + pkin(5)) * pkin(5) + t618) * (pkin(5) * (t498 - pkin(5)) + t618));
t641 = t375 * t390;
t373 = -pkin(5) * t641 - 0.2e1 * t382 * t386;
t648 = t373 / 0.4e1;
t647 = 0.1e1 / pkin(6) / 0.2e1;
t424 = pkin(1) * t470;
t411 = t424 + pkin(7);
t646 = pkin(1) * t467;
t466 = sin(qJ(2));
t422 = pkin(3) * t466;
t469 = cos(qJ(2));
t423 = pkin(3) * t469;
t412 = t422 * t654;
t433 = t466 ^ 2;
t630 = t433 * t509;
t589 = 0.2e1 * t630;
t604 = -t509 + t517;
t392 = t412 + t589 + t604;
t629 = t467 * t469;
t585 = pkin(3) * t629;
t553 = pkin(1) * t585;
t404 = -0.2e1 * t553;
t496 = 0.2e1 * pkin(3);
t428 = t514 + t517;
t565 = -t504 + t428;
t546 = t412 + t565;
t624 = t514 * t436;
t587 = -0.4e1 * t624;
t593 = -0.4e1 * t422;
t602 = t514 - t517;
t605 = t504 - t517;
t410 = t422 + pkin(7);
t636 = t410 * t470;
t372 = sqrt(t392 * t587 + 0.4e1 * t602 * t630 + pkin(7) * t565 * t593 - t512 + (-0.2e1 * t509 + t605) * t649 - (t517 - (t496 + pkin(4)) * pkin(4)) * (t517 + (t496 - pkin(4)) * pkin(4)) + (-(t404 + t546) * t636 + t546 * t585) * t656);
t542 = -pkin(1) + t585;
t487 = 3 * t514;
t543 = t482 + t487 - t605;
t548 = -0.4e1 * t553;
t628 = t469 * t470;
t584 = pkin(3) * t628;
t370 = (t410 * t467 + t584) * t372 - (t412 + t543 + t548) * t636 + t542 * t412 + t543 * t585 + (t392 * t652 - t565 + t589 - t651) * pkin(1);
t397 = t482 + t546;
t596 = 0.2e1 * t424;
t371 = (-t542 + t636) * t372 + (t392 * t596 + t397 * t410) * t467 + (t397 * t470 + (0.4e1 * t436 - 0.2e1) * t410 * pkin(1)) * t423;
t374 = pkin(5) * t382 * t653 - t375 * t386;
t381 = 0.1e1 / (t514 + t618);
t639 = t381 / pkin(5);
t564 = t509 + t428;
t378 = 0.1e1 / (t410 * t596 + t404 + t412 + t564);
t510 = 0.1e1 / pkin(3);
t640 = t378 * t510;
t550 = t639 * t640;
t357 = (t370 * t648 + t371 * t374 / 0.4e1) * t550;
t358 = (-t370 * t374 / 0.4e1 + t371 * t648) * t550;
t468 = sin(pkin(9));
t471 = cos(pkin(9));
t355 = t357 * t471 + t358 * t468;
t644 = pkin(6) * t355;
t356 = t357 * t468 - t358 * t471;
t643 = pkin(6) * t356;
t503 = t504 ^ 2;
t516 = t517 ^ 2;
t603 = t512 + t516;
t608 = t494 - t504;
t623 = t517 * t504;
t534 = t608 * t514 + t503 / 0.6e1 + t603 - t623;
t389 = -t522 / 0.6e1 + t534;
t457 = -t509 / 0.3e1;
t418 = t457 + t517;
t393 = t418 * t404;
t399 = t422 + t411;
t427 = -0.3e1 * t509 + t517;
t435 = t470 * t436;
t518 = pkin(1) * t514;
t621 = t518 * t435;
t591 = pkin(7) * t621;
t558 = 0.8e1 * t591;
t402 = t427 * t558;
t426 = -t504 - t509;
t493 = 3 * t517;
t414 = t493 + t426;
t635 = t414 * t514;
t403 = 0.10e2 * t635;
t453 = 0.4e1 / 0.3e1 * t509;
t447 = -t504 / 0.3e1;
t570 = t447 + t428;
t405 = t453 + t570;
t448 = -t504 / 0.2e1;
t407 = t448 + t564;
t408 = -t504 + t564;
t413 = pkin(7) * t596;
t492 = 4 * t517;
t416 = (t492 + t504) * t514;
t419 = -t514 / 0.3e1 + t517;
t420 = 0.10e2 / 0.3e1 * t514;
t421 = t428 ^ 2;
t425 = -0.30e2 * t504 + (60 * t517);
t430 = -3 * t514 + t517;
t445 = -t504 / 0.6e1;
t454 = 0.2e1 / 0.3e1 * t509;
t459 = 0.4e1 / 0.3e1 * t514;
t461 = t514 / 0.2e1;
t472 = 15 * t512;
t473 = 15 * t514;
t474 = 10 * t514;
t479 = -0.2e1 * t504;
t480 = -0.5e1 * t504;
t483 = 7 * t512;
t484 = 5 * t512;
t485 = 7 * t514;
t490 = 3 * t516;
t491 = 8 * t517;
t521 = pkin(3) * t509;
t506 = t521 ^ 2;
t526 = pkin(7) * t517;
t533 = 0.5e1 / 0.6e1 * t522 + t534;
t535 = t517 - t553;
t616 = t503 / 0.2e1 - t522 / 0.2e1;
t545 = -0.3e1 * t623 + t490 + t616;
t549 = -0.6e1 * t553;
t450 = -0.3e1 / 0.2e1 * t504;
t615 = t450 + t493;
t619 = t428 * ((t450 + t494) * t514 - 0.3e1 / 0.2e1 * t623 + t603 + t616) + t506;
t536 = ((t420 + t608) * t509 + t533) * t549 + (t472 + (-0.9e1 * t504 + (18 * t517)) * t514 + t545) * t509 + (t473 + t615) * t522 + t619;
t537 = t407 * t548;
t609 = t487 + t517;
t567 = t509 + t609;
t540 = -(0.3e1 * t509 + t428) * t646 + t567 * t423;
t449 = -0.2e1 / 0.3e1 * t504;
t458 = -0.2e1 / 0.3e1 * t509;
t568 = t449 + t428;
t610 = t474 + t494;
t614 = t458 + t517;
t541 = -(t481 + ((5 * t514) + t414) * t482 + (t458 + t568) * t428) * t646 + (t522 + (t449 + t458 + t610) * t509 + t484 + 0.2e1 * t635 + t517 * (t449 + t614)) * t423;
t607 = t503 - t522;
t544 = -0.6e1 * t623 + (6 * t516) + t607;
t569 = t449 + t454 + t494;
t617 = (t454 + t568) * t428 + t522;
t547 = t405 * t548 + (t486 + t569) * t509 + t617;
t582 = t518 * t423;
t551 = t435 * t582;
t625 = t512 * t436 ^ 2;
t552 = t625 * t423;
t580 = 0.16e2 * t621;
t556 = pkin(7) * t580;
t557 = 0.20e2 / 0.3e1 * t514;
t606 = -t504 + t509;
t566 = t493 + t606;
t455 = t509 / 0.3e1;
t571 = t445 + t455 + t517;
t572 = t504 / 0.3e1 + t455 + t494;
t573 = 0.2e1 / 0.3e1 * t504 + t454 + t492;
t574 = 0.4e1 / 0.3e1 * t504 + t453 - (2 * t517);
t627 = (pkin(7) + pkin(3)) * (pkin(7) - pkin(3));
t575 = t467 * t627;
t594 = 0.6e1 * t424;
t577 = pkin(7) * t594;
t595 = 0.4e1 * t424;
t578 = pkin(7) * t595;
t579 = -t646 / 0.2e1;
t581 = 0.12e2 * t624;
t583 = t514 * t423;
t586 = 0.4e1 * t624;
t588 = 0.8e1 * t625;
t631 = t466 * t433 * t521;
t590 = -0.8e1 * t631;
t597 = 0.2e1 * t646;
t598 = pkin(7) * t424;
t599 = 4 * pkin(7);
t600 = t516 + t522;
t601 = t516 - t512;
t611 = 0.4e1 / 0.7e1 * t517 - t504 / 0.7e1;
t612 = t461 + t517;
t613 = t514 / 0.3e1 + t517;
t622 = t517 * t514;
t626 = (pkin(7) + pkin(1)) * (pkin(7) - pkin(1));
t632 = t433 ^ 2 * t522;
t633 = t426 * t517;
t634 = t421 * (-t509 + t565);
t637 = (-t467 * t518 + t583) * t436;
t642 = ((-0.24e2 * (0.4e1 / 0.3e1 * t624 + t413 + t419) * t632 * t646 - 0.12e2 * (-0.8e1 / 0.3e1 * t552 + ((t459 + t571) * t423 - (0.7e1 / 0.6e1 * t509 + t445 + t612) * t646) * t586 + (-t509 * t602 - 0.5e1 / 0.3e1 * t512 + t572 * t514 + t517 * (t447 + t418)) * t423 + (-t522 + (-t557 + t573) * t509 - (3 * t512) + t574 * t514 + t516) * t579 + (-t467 * t512 * t435 + ((t514 + t571) * t423 + (t482 - t602) * t579) * t424) * t599) * t630 + 0.24e2 * t418 * t552 + ((t517 + 0.5e1 / 0.2e1 * t509 + 0.3e1 / 0.2e1 * t514 + t448) * t423 + t427 * t646 / 0.2e1) * t556 - 0.6e1 * ((-0.3e1 * t522 + (-t557 + t574) * t509 + t573 * t514 + t601) * t423 - 0.2e1 * (-0.5e1 / 0.3e1 * t522 + (-t514 + t572) * t509 + t517 * (t457 + t570)) * t646) * t624 - 0.6e1 * t541 * t598 - (t506 + ((21 * t514) + t414) * t522 + (t403 + t490 + (35 * t512) + 0.2e1 * t633) * t509 + (t483 + (t480 + t491 - 0.5e1 * t509) * t514 + t517 * (-t504 + t604)) * t428) * t423 + (0.7e1 * t506 + (t485 + t414) * t481 + (t403 + (21 * t512) + (9 * t516) + 0.6e1 * t633) * t509 + t634) * t646) * t372 + (0.16e2 * (t588 + t556 + (-8 * t512 + 12 * t622) * t436 + (-12 * pkin(7) * t518 + t526 * t656) * t470 - (6 * t622) + t603) * t632 + 0.24e2 * (t614 * t588 + 0.14e2 * (-0.32e2 / 0.21e2 * (t517 + t509 / 0.4e1 + t514 / 0.4e1 - t504 / 0.8e1) * t553 + 0.5e1 / 0.42e2 * t522 + (0.16e2 / 0.21e2 * t514 + t611) * t509 + t512 / 0.7e1 + t611 * t514 + t516 - 0.3e1 / 0.7e1 * t623 + t503 / 0.42e2) * t624 + t419 * t537 - t602 * t522 + (t416 - 0.10e2 / 0.3e1 * t512 + (2 * t516) - t623) * t509 + t389 * t626 + ((-0.2e1 / 0.3e1 * t553 + t446 + t612) * t580 + (-0.8e1 / 0.3e1 * (t613 + t655) * t553 + 0.5e1 / 0.18e2 * t522 + (0.4e1 / 0.3e1 * t517 + t459 + t447) * t509 + t516 + 0.2e1 / 0.3e1 * t622 - 0.2e1 / 0.3e1 * t623 - t512 / 0.3e1 + t503 / 0.18e2) * t594) * pkin(7)) * t630 + 0.16e2 * (-0.6e1 * t509 * t517 + t600) * t625 + 0.32e2 * (t404 * t627 + t407 * t427) * t591 + 0.24e2 * (t418 * t537 - t506 + (-t420 + t605) * t522 + (t416 + t522 / 0.6e1 - t503 / 0.6e1 + t601) * t509 + t389 * t517) * t624 + 0.8e1 * t536 * t598 - 0.8e1 * ((t485 + t615) * t522 + (t483 + (t480 + (10 * t517)) * t514 + t545) * t509 + t619) * t553 + t522 ^ 2 + (t479 + t492 + (28 * t514)) * t506 + (t425 * t514 + (70 * t512) + t544) * t522 + (t425 * t512 + t544 * t486 + t607 * t494 - 0.6e1 * t516 * t504 + (28 * t518 ^ 2) + (4 * t526 ^ 2)) * t509 + t408 * t634) * t399 + (((0.4e1 * t637 + (t423 + t597) * t413 + t430 * t423 + (t448 + t567) * t597) * t590 - 0.6e1 * ((0.2e1 * (0.5e1 / 0.6e1 * t509 + t461 + t445) * t423 + pkin(1) * t575) * t587 + (-0.8e1 * t551 + ((t447 + t454 + t609) * t423 - (0.8e1 / 0.3e1 * t509 + t570) * t646) * t595) * pkin(7) + t541) * t422) * t372 + (0.32e2 * (t558 + (-0.4e1 * t467 * t582 + t650 + (t651 + t479 + t491) * t514) * t436 + (-t514 + t535 + t655) * t578 + t404 * t626 + t430 * t407) * t631 + 0.8e1 * (t402 + (t407 * t627 + t393) * t581 + (t537 + (t486 + t608) * t509 + t533) * t577 + t536) * t422) * t399) * t411) / ((-0.4e1 * (-t602 * t423 + 0.2e1 * t637 + (t584 * t654 + t467 * (t509 + t649)) * pkin(1)) * t630 + 0.8e1 * pkin(7) * t551 + ((pkin(3) * t650 + 0.8e1 * t514 * t521) * t469 + 0.4e1 * t518 * t575) * t436 - 0.4e1 * t540 * t598 - (t509 * t610 + t484 + t600 + (6 * t622)) * t423 + (t481 + (t474 + 6 * t517) * t509 + t421) * t646) * t372 + (0.12e2 * (0.6e1 * (-0.4e1 / 0.9e1 * t553 + 0.4e1 / 0.9e1 * t509 - t504 / 0.9e1 + t613) * t624 + t419 * t404 + t405 * t626 + (t621 + (t445 + t454 + t535) * t424) * t599) * t630 + t402 + (t405 * t627 + t393) * t581 + t547 * t577 + ((t420 + t569) * t509 + t617) * t549 + t506 + (t473 + t566) * t522 + (t566 * t486 + t606 * t494 + t472 + t490) * t509 + t421 * t408) * t399 + ((t590 * t646 + (t583 * t652 + (t423 - t646) * t413 + t540) * t593) * t372 + (0.8e1 * (t413 + t586 + t430) * t631 + 0.6e1 * (t604 * t586 + (t404 + t405) * t578 + t547) * t422) * t399) * t411);
t638 = t381 / pkin(1);
t561 = t640 / 0.2e1;
t362 = qJ(1) + atan2(t371 * t561, t370 * t561);
t354 = t644 * t497;
t499 = pkin(6) ^ 2;
t620 = t354 + t499;
t505 = 0.1e1 / pkin(4);
t576 = t378 * t505 / pkin(3) ^ 2;
t343 = sqrt(-(-(t497 + pkin(6)) * pkin(6) + t620) * (pkin(6) * (t497 - pkin(6)) + t620));
t352 = t354 + 0.2e1 * t499;
t353 = -pkin(2) - t644;
t562 = 0.1e1 / ((pkin(2) ^ 2) + t620) * t647;
t335 = atan2((-t343 * t353 + t352 * t643) * t562, (-t343 * t643 - t352 * t353) * t562) + t362;
t559 = t505 * t510 / 0.2e1;
t346 = atan2(t372 * t559, t559 * t642) + t362;
t563 = t642 / 0.4e1;
t560 = t639 / 0.2e1;
t361 = cos(t362);
t555 = -pkin(2) * t361 - t424;
t554 = -pkin(3) * t361 - t424;
t360 = sin(t362);
t539 = -pkin(2) * t360 - t646;
t538 = -pkin(3) * t360 - t646;
t395 = -t466 * t470 + t629;
t394 = -t466 * t467 - t628;
t387 = -pkin(1) * t391 + pkin(5);
t383 = t514 - t592;
t369 = qJ(1) + atan2(t374 * t560, t373 * t560);
t368 = pkin(8) + atan2((pkin(1) * t383 * t653 + t375 * t387) * t638 / 0.2e1, -(-pkin(1) * t641 + 0.2e1 * t383 * t387) * t638 / 0.2e1);
t367 = cos(t369);
t366 = sin(t369);
t365 = cos(t368);
t364 = sin(t368);
t348 = (t370 * t372 / 0.4e1 + t371 * t563) * t576;
t347 = (t370 * t563 - t371 * t372 / 0.4e1) * t576;
t345 = cos(t346);
t344 = sin(t346);
t342 = atan2(t356, t355) + t362;
t341 = cos(t342);
t340 = sin(t342);
t339 = atan2(t347 * t394 + t348 * t395, -t347 * t395 + t348 * t394) + t346;
t338 = cos(t339);
t337 = sin(t339);
t334 = cos(t335);
t333 = sin(t335);
t332 = atan2(0.1e1 / pkin(2) * t343 * t647, -t355) + t335;
t331 = cos(t332);
t330 = sin(t332);
t1 = -m(1) * (g(1) * rSges(1,1) + g(2) * rSges(1,2) + rSges(1,3) * g(3)) - m(2) * (g(1) * (-rSges(2,1) * t470 + rSges(2,2) * t467) + g(2) * (-rSges(2,1) * t467 - rSges(2,2) * t470) + g(3) * rSges(2,3)) - m(3) * (g(1) * (-rSges(3,1) * t361 + rSges(3,2) * t360 - t424) + g(2) * (-rSges(3,1) * t360 - rSges(3,2) * t361 - t646) + g(3) * rSges(3,3)) - m(4) * (g(1) * (rSges(4,1) * t334 - rSges(4,2) * t333 + t555) + g(2) * (rSges(4,1) * t333 + rSges(4,2) * t334 + t539) + g(3) * rSges(4,3)) - m(5) * (g(1) * (-rSges(5,1) * t345 + rSges(5,2) * t344 + t554) + g(2) * (-rSges(5,1) * t344 - rSges(5,2) * t345 + t538) + g(3) * rSges(5,3)) - m(6) * (g(1) * (pkin(5) * t464 + rSges(6,1) * t365 - rSges(6,2) * t364) + g(2) * (pkin(5) * t463 + rSges(6,1) * t364 + rSges(6,2) * t365) + g(3) * rSges(6,3)) - m(7) * (g(1) * (rSges(7,1) * t341 - rSges(7,2) * t340 - t424) + g(2) * (rSges(7,1) * t340 + rSges(7,2) * t341 - t646) + g(3) * rSges(7,3)) - m(8) * (g(1) * (rSges(8,1) * t466 + rSges(8,2) * t469 + pkin(7)) + g(2) * (-rSges(8,1) * t469 + rSges(8,2) * t466) + g(3) * rSges(8,3)) - m(9) * (g(1) * (rSges(9,1) * t367 - rSges(9,2) * t366 - t424) + g(2) * (rSges(9,1) * t366 + rSges(9,2) * t367 - t646) + g(3) * rSges(9,3)) - m(10) * (g(1) * (pkin(6) * t334 - rSges(10,1) * t331 + rSges(10,2) * t330 + t555) + g(2) * (pkin(6) * t333 - rSges(10,1) * t330 - rSges(10,2) * t331 + t539) + g(3) * rSges(10,3)) - m(11) * (g(1) * (-pkin(4) * t345 + rSges(11,1) * t338 - rSges(11,2) * t337 + t554) + g(2) * (-pkin(4) * t344 + rSges(11,1) * t337 + rSges(11,2) * t338 + t538) + g(3) * rSges(11,3));
U = t1;
