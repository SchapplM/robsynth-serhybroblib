% Calculate potential energy for
% picker2Dm1TE
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [2x1]
%   Generalized joint coordinates (joint angles)
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[L1,L2,L3,L4,L5,L6,e,phi05,phi1]';
% m [11x1]
%   mass of all robot links (including the base)
% mrSges [11x3]
%  first moment of all robot links (mass times center of mass in body frames)
%  rows: links of the robot (starting with base)
%  columns: x-, y-, z-coordinates
% 
% Output:
% U [1x1]
%   Potential energy

% Quelle: HybrDyn-Toolbox
% Datum: 2020-05-10 08:43
% Revision: 73758128893bc0a8beabae04bd7e71472107ac81 (2020-05-07)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function U = picker2Dm1TE_energypot_fixb_slag_vp2(qJ, g, ...
  pkin, m, mrSges)
%% Coder Information
%#codegen
%$cgargs {zeros(2,1),zeros(3,1),zeros(9,1),zeros(11,1),zeros(11,3)}
assert(isreal(qJ) && all(size(qJ) == [2 1]), ...
  'picker2Dm1TE_energypot_fixb_slag_vp2: qJ has to be [2x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'picker2Dm1TE_energypot_fixb_slag_vp2: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'picker2Dm1TE_energypot_fixb_slag_vp2: pkin has to be [9x1] (double)');
assert(isreal(m) && all(size(m) == [11 1]), ...
  'picker2Dm1TE_energypot_fixb_slag_vp2: m has to be [11x1] (double)'); 
assert(isreal(mrSges) && all(size(mrSges) == [11,3]), ...
  'picker2Dm1TE_energypot_fixb_slag_vp2: mrSges has to be [11x3] (double)');

%% Symbolic Calculation
% From energy_potential_fixb_worldframe_par2_matlab.m
% OptimizationMode: 2
% StartTime: 2020-05-10 00:11:37
% EndTime: 2020-05-10 00:11:53
% DurationCPUTime: 10.04s
% Computational Cost: add. (86733->497), mult. (233084->651), div. (3590->12), fcn. (61716->14), ass. (0->274)
t519 = pkin(5) ^ 2;
t485 = sin(pkin(8));
t486 = cos(pkin(8));
t488 = sin(qJ(1));
t490 = cos(qJ(1));
t420 = -t485 * t488 - t486 * t490;
t690 = pkin(5) * t420;
t634 = pkin(1) * t690;
t411 = t519 - t634;
t415 = -pkin(1) + t690;
t516 = 0.2e1 * pkin(1);
t660 = -0.2e1 * t634 + t519;
t405 = sqrt(-(-(t516 + pkin(5)) * pkin(5) + t660) * (pkin(5) * (t516 - pkin(5)) + t660));
t419 = t485 * t490 - t486 * t488;
t684 = t405 * t419;
t401 = -pkin(5) * t684 - 0.2e1 * t411 * t415;
t704 = 0.2e1 * t419;
t403 = pkin(5) * t411 * t704 - t405 * t415;
t705 = 0.1e1 / pkin(3);
t687 = t705 / 0.2e1;
t514 = 0.1e1 / t687;
t532 = pkin(1) ^ 2;
t530 = t532 ^ 2;
t535 = pkin(7) ^ 2;
t458 = t490 ^ 2;
t527 = pkin(3) ^ 2;
t692 = sin(qJ(2));
t628 = t692 * pkin(7);
t601 = 0.2e1 * t628;
t593 = pkin(3) * t601;
t579 = t535 + t593;
t549 = t692 ^ 2;
t670 = t527 * t549;
t631 = 0.2e1 * t670;
t565 = -t527 + t579 + t631;
t562 = t458 * t565;
t522 = pkin(4) ^ 2;
t572 = t532 + t579;
t568 = -t522 + t572;
t621 = pkin(3) * t692;
t589 = t621 + pkin(7);
t574 = t589 * t490;
t598 = -0.4e1 * t621;
t489 = cos(qJ(2));
t675 = t489 * t488;
t625 = pkin(3) * t675;
t599 = pkin(1) * t625;
t648 = t522 - t535;
t606 = -0.2e1 * t527 + t648;
t451 = t532 + t535;
t607 = -t522 + t451;
t627 = pkin(1) * t675;
t645 = t532 - t535;
t700 = 0.2e1 * t532;
t400 = sqrt(-0.4e1 * t532 * t562 - 0.4e1 * pkin(1) * (0.2e1 * (-t627 + t628) * pkin(3) + t607) * t574 + 0.4e1 * t568 * t599 + 0.4e1 * t645 * t670 + pkin(7) * t607 * t598 - t530 + t606 * t700 - (t535 - (t514 + pkin(4)) * pkin(4)) * (t535 + (t514 - pkin(4)) * pkin(4)));
t563 = t574 - t625;
t561 = 0.1e1 / (t516 * t563 + t527 + t572);
t699 = 0.3e1 * t532;
t585 = t699 - t606;
t674 = t489 * t490;
t624 = pkin(3) * t674;
t702 = 0.4e1 * t527;
t556 = t561 * ((t488 * t589 + t624) * t400 - ((t601 - 0.4e1 * t627) * pkin(3) + t585) * t574 + (t593 + t585) * t625 + (-0.2e1 * t562 + t631 - t593 - t702 - t607) * pkin(1));
t555 = t705 * t556;
t446 = pkin(3) * t489;
t703 = 0.2e1 * t527;
t566 = t703 + t568;
t447 = pkin(1) * t490;
t637 = 0.2e1 * t447;
t560 = t561 * ((pkin(1) + t563) * t400 + (t565 * t637 + t566 * t589) * t488 + (t490 * t566 + (0.4e1 * t458 - 0.2e1) * pkin(1) * t589) * t446);
t558 = t560 / 0.4e1;
t557 = t705 * t558;
t410 = 0.1e1 / (t532 + t660);
t683 = t410 / pkin(5);
t386 = (-t403 * t555 / 0.4e1 + t401 * t557) * t683;
t491 = cos(pkin(9));
t554 = t556 / 0.4e1;
t552 = (t401 * t554 * t705 + t403 * t557) * t683;
t693 = sin(pkin(9));
t383 = t386 * t693 + t491 * t552;
t515 = 2 * pkin(2);
t689 = pkin(6) * t383;
t382 = t689 * t515;
t517 = pkin(6) ^ 2;
t664 = t382 + t517;
t373 = sqrt(-(-(t515 + pkin(6)) * pkin(6) + t664) * (pkin(6) * (t515 - pkin(6)) + t664));
t380 = t382 + 0.2e1 * t517;
t381 = -pkin(2) - t689;
t384 = t386 * t491 - t552 * t693;
t688 = pkin(6) * t384;
t365 = t373 * t688 - t380 * t381;
t366 = -t373 * t381 - t380 * t688;
t553 = -t555 / 0.2e1;
t559 = t705 * t560;
t695 = t488 / 0.2e1;
t393 = t490 * t553 + t559 * t695;
t518 = 0.1e1 / pkin(6);
t685 = 0.1e1 / ((pkin(2) ^ 2) + t664) * t518;
t392 = t488 * t553 - t490 * t559 / 0.2e1;
t697 = t392 / 0.2e1;
t707 = (t393 * t366 / 0.2e1 + t365 * t697) * t685;
t714 = t383 * t707;
t523 = 0.1e1 / pkin(4);
t671 = t523 / pkin(3) ^ 2;
t540 = t527 ^ 2;
t521 = t522 ^ 2;
t534 = t535 ^ 2;
t646 = t530 + t534;
t512 = 0.2e1 * t535;
t651 = t512 - t522;
t667 = t535 * t522;
t569 = t651 * t532 + t521 / 0.6e1 + t646 - t667;
t418 = -t540 / 0.6e1 + t569;
t479 = -t527 / 0.3e1;
t442 = t479 + t535;
t590 = -0.2e1 * t599;
t421 = t442 * t590;
t426 = t447 + t589;
t450 = -0.3e1 * t527 + t535;
t457 = t490 * t458;
t536 = pkin(1) * t532;
t665 = t536 * t457;
t633 = pkin(7) * t665;
t603 = 0.8e1 * t633;
t429 = t450 * t603;
t449 = -t522 - t527;
t511 = 0.3e1 * t535;
t438 = t511 + t449;
t680 = t438 * t532;
t430 = 0.10e2 * t680;
t475 = 0.4e1 / 0.3e1 * t527;
t469 = -t522 / 0.3e1;
t611 = t469 + t451;
t431 = t475 + t611;
t470 = -t522 / 0.2e1;
t605 = t527 + t451;
t433 = t470 + t605;
t434 = -t522 + t605;
t436 = t447 + pkin(7);
t437 = pkin(7) * t637;
t510 = 0.4e1 * t535;
t440 = (t510 + t522) * t532;
t443 = -t532 / 0.3e1 + t535;
t444 = 0.10e2 / 0.3e1 * t532;
t445 = t451 ^ 2;
t448 = -0.30e2 * t522 + 0.60e2 * t535;
t453 = -0.3e1 * t532 + t535;
t467 = -t522 / 0.6e1;
t468 = -t522 / 0.4e1;
t476 = 0.2e1 / 0.3e1 * t527;
t481 = 0.4e1 / 0.3e1 * t532;
t483 = t532 / 0.2e1;
t492 = 0.15e2 * t530;
t493 = 0.15e2 * t532;
t494 = 0.10e2 * t532;
t499 = -0.2e1 * t522;
t500 = -0.5e1 * t522;
t501 = 0.5e1 * t540;
t502 = 0.7e1 * t530;
t503 = 0.5e1 * t530;
t504 = 0.7e1 * t532;
t505 = 0.6e1 * t532;
t508 = 0.3e1 * t534;
t509 = 0.8e1 * t535;
t539 = pkin(3) * t527;
t524 = t539 ^ 2;
t544 = pkin(7) * t535;
t567 = 0.5e1 / 0.6e1 * t540 + t569;
t577 = t535 - t599;
t658 = t521 / 0.2e1 - t540 / 0.2e1;
t587 = -0.3e1 * t667 + t508 + t658;
t592 = -0.6e1 * t599;
t472 = -0.3e1 / 0.2e1 * t522;
t657 = t472 + t511;
t661 = t451 * ((t472 + t512) * t532 - 0.3e1 / 0.2e1 * t667 + t646 + t658) + t524;
t578 = ((t444 + t651) * t527 + t567) * t592 + (t492 + (-0.9e1 * t522 + 0.18e2 * t535) * t532 + t587) * t527 + (t493 + t657) * t540 + t661;
t591 = -0.4e1 * t599;
t580 = t433 * t591;
t642 = t535 + t699;
t604 = t527 + t642;
t691 = pkin(1) * t488;
t581 = -(0.3e1 * t527 + t451) * t691 + t604 * t446;
t471 = -0.2e1 / 0.3e1 * t522;
t480 = -0.2e1 / 0.3e1 * t527;
t609 = t471 + t451;
t652 = t494 + t512;
t656 = t480 + t535;
t582 = -(t501 + (0.5e1 * t532 + t438) * t703 + (t480 + t609) * t451) * t691 + (t540 + (t471 + t480 + t652) * t527 + t503 + 0.2e1 * t680 + t535 * (t471 + t656)) * t446;
t650 = t521 - t540;
t586 = -0.6e1 * t667 + 0.6e1 * t534 + t650;
t610 = t471 + t476 + t512;
t659 = (t476 + t609) * t451 + t540;
t588 = t431 * t591 + (t505 + t610) * t527 + t659;
t595 = t665 * t446;
t669 = t530 * t458 ^ 2;
t596 = t669 * t446;
t622 = 0.16e2 * t665;
t600 = pkin(7) * t622;
t602 = 0.20e2 / 0.3e1 * t532;
t649 = -t522 + t527;
t608 = t511 + t649;
t477 = t527 / 0.3e1;
t612 = t467 + t477 + t535;
t613 = t522 / 0.3e1 + t477 + t512;
t614 = 0.2e1 / 0.3e1 * t522 + t476 + t510;
t615 = 0.4e1 / 0.3e1 * t522 + t475 - 0.2e1 * t535;
t673 = (pkin(7) + pkin(3)) * (pkin(7) - pkin(3));
t616 = t488 * t673;
t635 = 0.6e1 * t447;
t618 = pkin(7) * t635;
t636 = 0.4e1 * t447;
t619 = pkin(7) * t636;
t620 = -t691 / 0.2e1;
t668 = t532 * t458;
t623 = 0.12e2 * t668;
t626 = t532 * t446;
t629 = 0.4e1 * t668;
t630 = 0.8e1 * t669;
t676 = t692 * t549 * t539;
t632 = -0.8e1 * t676;
t638 = 0.2e1 * t691;
t639 = pkin(7) * t447;
t641 = 0.4e1 * pkin(7);
t643 = t534 + t540;
t644 = t534 - t530;
t647 = -t527 + t535;
t653 = 0.4e1 / 0.7e1 * t535 - t522 / 0.7e1;
t654 = t483 + t535;
t655 = t532 / 0.3e1 + t535;
t666 = t535 * t532;
t672 = (pkin(7) + pkin(1)) * (pkin(7) - pkin(1));
t677 = t549 ^ 2 * t540;
t678 = t449 * t535;
t679 = t445 * (-t527 + t607);
t681 = (-t488 * t536 + t626) * t458;
t701 = 0.4e1 * t530;
t706 = t468 + t527 / 0.2e1;
t686 = ((-0.24e2 * (0.4e1 / 0.3e1 * t668 + t437 + t443) * t677 * t691 - 0.12e2 * (-0.8e1 / 0.3e1 * t596 + ((t481 + t612) * t446 - (0.7e1 / 0.6e1 * t527 + t467 + t654) * t691) * t629 + (-t527 * t645 - 0.5e1 / 0.3e1 * t530 + t613 * t532 + t535 * (t469 + t442)) * t446 + (-t540 + (-t602 + t614) * t527 - 0.3e1 * t530 + t615 * t532 + t534) * t620 + (-t488 * t530 * t457 + ((t532 + t612) * t446 + (t703 - t645) * t620) * t447) * t641) * t670 + 0.24e2 * t442 * t596 + ((t535 + 0.5e1 / 0.2e1 * t527 + 0.3e1 / 0.2e1 * t532 + t470) * t446 + t450 * t691 / 0.2e1) * t600 - 0.6e1 * ((-0.3e1 * t540 + (-t602 + t615) * t527 + t614 * t532 + t644) * t446 - 0.2e1 * (-0.5e1 / 0.3e1 * t540 + (-t532 + t613) * t527 + t535 * (t479 + t611)) * t691) * t668 - 0.6e1 * t582 * t639 - (t524 + (0.21e2 * t532 + t438) * t540 + (t430 + t508 + 0.35e2 * t530 + 0.2e1 * t678) * t527 + (t502 + (t500 + t509 - 0.5e1 * t527) * t532 + t535 * (-t522 + t647)) * t451) * t446 + (0.7e1 * t524 + (t504 + t438) * t501 + (t430 + 0.21e2 * t530 + 0.9e1 * t534 + 0.6e1 * t678) * t527 + t679) * t691) * t400 + (0.16e2 * (t630 + t600 + (-0.8e1 * t530 + 0.12e2 * t666) * t458 + (0.4e1 * pkin(1) * t544 - 0.12e2 * pkin(7) * t536) * t490 - 0.6e1 * t666 + t646) * t677 + 0.24e2 * (t656 * t630 + 0.14e2 * (-0.32e2 / 0.21e2 * (t535 + t527 / 0.4e1 + t532 / 0.4e1 - t522 / 0.8e1) * t599 + 0.5e1 / 0.42e2 * t540 + (0.16e2 / 0.21e2 * t532 + t653) * t527 + t530 / 0.7e1 + t653 * t532 + t534 - 0.3e1 / 0.7e1 * t667 + t521 / 0.42e2) * t668 + t443 * t580 - t645 * t540 + (t440 - 0.10e2 / 0.3e1 * t530 + 0.2e1 * t534 - t667) * t527 + t418 * t672 + ((-0.2e1 / 0.3e1 * t599 + t468 + t654) * t622 + (-0.8e1 / 0.3e1 * (t655 + t706) * t599 + 0.5e1 / 0.18e2 * t540 + (0.4e1 / 0.3e1 * t535 + t481 + t469) * t527 + t534 + 0.2e1 / 0.3e1 * t666 - 0.2e1 / 0.3e1 * t667 - t530 / 0.3e1 + t521 / 0.18e2) * t635) * pkin(7)) * t670 + 0.16e2 * (-0.6e1 * t535 * t527 + t643) * t669 + 0.32e2 * (t433 * t450 + t590 * t673) * t633 + 0.24e2 * (t442 * t580 - t524 + (-t444 + t648) * t540 + (t440 + t540 / 0.6e1 - t521 / 0.6e1 + t644) * t527 + t418 * t535) * t668 + 0.8e1 * t578 * t639 - 0.8e1 * ((t504 + t657) * t540 + (t502 + (t500 + 0.10e2 * t535) * t532 + t587) * t527 + t661) * t599 + t540 ^ 2 + (t499 + t510 + 0.28e2 * t532) * t524 + (t448 * t532 + 0.70e2 * t530 + t586) * t540 + (t448 * t530 + t586 * t505 + t650 * t512 - 0.6e1 * t534 * t522 + 0.28e2 * t536 ^ 2 + 0.4e1 * t544 ^ 2) * t527 + t434 * t679) * t426 + (((0.4e1 * t681 + (t446 + t638) * t437 + t453 * t446 + (t470 + t604) * t638) * t632 - 0.6e1 * (-0.4e1 * ((0.5e1 / 0.6e1 * t527 + t483 + t467) * t489 * t514 + pkin(1) * t616) * t668 + (-0.8e1 * t595 + ((t469 + t476 + t642) * t446 - (0.8e1 / 0.3e1 * t527 + t611) * t691) * t636) * pkin(7) + t582) * t621) * t400 + (0.32e2 * (t603 + (-0.4e1 * t536 * t625 + t701 + (t702 + t499 + t509) * t532) * t458 + (-t532 + t577 + t706) * t619 + t590 * t672 + t453 * t433) * t676 + 0.8e1 * (t429 + (t433 * t673 + t421) * t623 + (t580 + (t505 + t651) * t527 + t567) * t618 + t578) * t621) * t426) * t436) / ((-0.4e1 * (-t645 * t446 + 0.2e1 * t681 + (0.2e1 * pkin(7) * t624 + t488 * (t527 + t700)) * pkin(1)) * t670 + 0.8e1 * pkin(7) * t595 + ((pkin(3) * t701 + 0.8e1 * t532 * t539) * t489 + 0.4e1 * t536 * t616) * t458 - 0.4e1 * t581 * t639 - (t527 * t652 + t503 + t643 + 0.6e1 * t666) * t446 + (t501 + (t494 + 0.6e1 * t535) * t527 + t445) * t691) * t400 + (0.12e2 * (0.6e1 * (-0.4e1 / 0.9e1 * t599 + 0.4e1 / 0.9e1 * t527 - t522 / 0.9e1 + t655) * t668 + t443 * t590 + t431 * t672 + (t665 + (t467 + t476 + t577) * t447) * t641) * t670 + t429 + (t431 * t673 + t421) * t623 + t588 * t618 + ((t444 + t610) * t527 + t659) * t592 + t524 + (t493 + t608) * t540 + (t608 * t505 + t649 * t512 + t492 + t508) * t527 + t445 * t434) * t426 + ((t632 * t691 + (-0.2e1 * t458 * t626 + (t446 - t691) * t437 + t581) * t598) * t400 + (0.8e1 * (t437 + t629 + t453) * t676 + 0.6e1 * (t647 * t629 + (t431 + t590) * t619 + t588) * t621) * t426) * t436);
t374 = (t554 * t686 - t400 * t560 / 0.4e1) * t671;
t375 = (t400 * t554 + t558 * t686) * t671;
t422 = -t488 * t692 - t674;
t423 = -t490 * t692 + t675;
t367 = t374 * t422 + t375 * t423;
t368 = t374 * t423 - t375 * t422;
t594 = t686 * t687;
t573 = (-t392 * t705 * t400 / 0.2e1 + t393 * t594) * t523;
t708 = (t393 * t400 * t687 + t392 * t594) * t523;
t713 = t367 * t708 + t368 * t573;
t712 = -t367 * t573 + t368 * t708;
t571 = (-t393 * t365 / 0.2e1 + t366 * t697) * t685;
t709 = t383 * t571;
t698 = pkin(5) * m(6);
t696 = -t485 / 0.2e1;
t694 = t490 / 0.2e1;
t682 = t410 / pkin(1);
t663 = t393 * pkin(3) - t447;
t662 = t393 * pkin(2) - t447;
t640 = m(3) + m(7) + m(9);
t617 = t373 * t518 / pkin(2);
t597 = t393 * t383 + t384 * t392;
t584 = -t617 / 0.2e1;
t583 = t617 / 0.2e1;
t576 = t383 * t392 - t384 * t393;
t416 = -pkin(1) * t420 + pkin(5);
t412 = t532 - t634;
t404 = pkin(1) * t412 * t704 + t405 * t416;
t402 = -pkin(1) * t684 + 0.2e1 * t412 * t416;
t398 = (t401 * t694 - t488 * t403 / 0.2e1) * t683;
t397 = (t401 * t695 + t403 * t694) * t683;
t396 = (-t486 * t402 / 0.2e1 + t404 * t696) * t682;
t395 = (t402 * t696 + t486 * t404 / 0.2e1) * t682;
t389 = t392 * pkin(2);
t388 = t392 * pkin(3);
t1 = (-mrSges(7,3) - mrSges(5,3) - mrSges(3,3) - mrSges(2,3) - mrSges(1,3) - mrSges(11,3) - mrSges(8,3) - mrSges(4,3) - mrSges(9,3) - mrSges(10,3) - mrSges(6,3)) * g(3) + (-(-t583 * t707 + t709) * mrSges(10,2) - m(10) * (-pkin(6) * t707 + t389) + t707 * mrSges(4,1) - t708 * mrSges(5,1) - m(11) * (pkin(4) * t708 + t388) - t571 * mrSges(4,2) - t573 * mrSges(5,2) + mrSges(2,2) * t490 - t485 * t698 - m(5) * t388 - m(4) * t389 - t692 * mrSges(8,2) + (mrSges(2,1) + (m(11) + m(4) + m(5) + m(10) + t640) * pkin(1)) * t488 + t576 * mrSges(7,1) - mrSges(3,1) * t392 - mrSges(3,2) * t393 - mrSges(9,1) * t397 - mrSges(9,2) * t398 - t712 * mrSges(11,1) - t713 * mrSges(11,2) - (t571 * t584 - t714) * mrSges(10,1) - mrSges(6,1) * t395 - mrSges(6,2) * t396 + t489 * mrSges(8,1) + t597 * mrSges(7,2) - mrSges(1,2)) * g(2) + (-(t584 * t707 + t709) * mrSges(10,1) - t707 * mrSges(4,2) + t708 * mrSges(5,2) - t571 * mrSges(4,1) - m(10) * (pkin(6) * t571 + t662) - t573 * mrSges(5,1) - m(11) * (pkin(4) * t573 + t663) - m(4) * t662 - m(5) * t663 - mrSges(9,1) * t398 + mrSges(9,2) * t397 - mrSges(2,2) * t488 - t486 * t698 - t713 * mrSges(11,1) - t692 * mrSges(8,1) + (pkin(1) * t640 + mrSges(2,1)) * t490 - t576 * mrSges(7,2) - m(8) * pkin(7) - mrSges(3,1) * t393 + mrSges(3,2) * t392 + t712 * mrSges(11,2) - (t571 * t583 + t714) * mrSges(10,2) - mrSges(6,1) * t396 + mrSges(6,2) * t395 - t489 * mrSges(8,2) + t597 * mrSges(7,1) - mrSges(1,1)) * g(1);
U = t1;
