% Calculate kinetic energy for
% picker2Dm1TE
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [2x1]
%   Generalized joint coordinates (joint angles)
% qJD [2x1]
%   Generalized joint velocities
% V_base [6x1]
%   Base Velocity (twist: stacked translational and angular velocity) in base frame
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[L1,L2,L3,L4,L5,L6,e,phi05,phi1]';
% m [11x1]
%   mass of all robot links (including the base)
% mrSges [11x3]
%  first moment of all robot links (mass times center of mass in body frames)
%  rows: links of the robot (starting with base)
%  columns: x-, y-, z-coordinates
% Ifges [11x6]
%   inertia of all robot links about their respective body frame origins, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertial_parameters_convert_par1_par2.m)
% 
% Output:
% T [1x1]
%   kinetic energy

% Quelle: HybrDyn-Toolbox
% Datum: 2020-05-10 08:43
% Revision: 73758128893bc0a8beabae04bd7e71472107ac81 (2020-05-07)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function T = picker2Dm1TE_energykin_floatb_twist_slag_vp2(qJ, qJD, V_base, ...
  pkin, m, mrSges, Ifges)
%% Coder Information
%#codegen
%$cgargs {zeros(2,1),zeros(2,1),zeros(6,1),zeros(9,1),zeros(11,1),zeros(11,3),zeros(11,6)}
assert(isreal(qJ) && all(size(qJ) == [2 1]), ...
  'picker2Dm1TE_energykin_floatb_twist_slag_vp2: qJ has to be [2x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [2 1]), ...
  'picker2Dm1TE_energykin_floatb_twist_slag_vp2: qJD has to be [2x1] (double)');
assert(isreal(V_base) && all(size(V_base) == [6 1]), ...
  'picker2Dm1TE_energykin_floatb_twist_slag_vp2: V_base has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'picker2Dm1TE_energykin_floatb_twist_slag_vp2: pkin has to be [9x1] (double)');
assert(isreal(m) && all(size(m) == [11 1]), ...
  'picker2Dm1TE_energykin_floatb_twist_slag_vp2: m has to be [11x1] (double)'); 
assert(isreal(mrSges) && all(size(mrSges) == [11,3]), ...
  'picker2Dm1TE_energykin_floatb_twist_slag_vp2: mrSges has to be [11x3] (double)');
assert(isreal(Ifges) && all(size(Ifges) == [11 6]), ...
  'picker2Dm1TE_energykin_floatb_twist_slag_vp2: Ifges has to be [11x6] (double)'); 

%% Symbolic Calculation
% From energy_kinetic_floatb_twist_linkframe_par2_matlab.m
% OptimizationMode: 2
% StartTime: 2020-05-10 00:11:24
% EndTime: 2020-05-10 00:12:58
% DurationCPUTime: 73.57s
% Computational Cost: add. (1388809->904), mult. (3868115->1524), div. (49018->42), fcn. (1036808->14), ass. (0->592)
t569 = 4 * pkin(1);
t402 = (pkin(3) ^ 2);
t711 = -2 * t402;
t411 = (pkin(7) ^ 2);
t388 = -2 * t411;
t355 = sin(qJ(2));
t356 = sin(qJ(1));
t618 = t355 * t356;
t685 = pkin(1) * pkin(3);
t495 = t618 * t685;
t468 = qJD(2) * t495;
t357 = cos(qJ(2));
t358 = cos(qJ(1));
t577 = qJD(1) * t358;
t507 = t357 * t577;
t469 = t507 * t685;
t710 = -0.6e1 * t469 + 0.6e1 * t468;
t709 = -t469 + t468;
t397 = pkin(4) ^ 2;
t617 = t356 * t357;
t548 = pkin(3) * t617;
t494 = pkin(1) * t548;
t408 = pkin(1) ^ 2;
t596 = t408 / 0.3e1 + t411;
t210 = -0.4e1 / 0.9e1 * t494 + 0.4e1 / 0.9e1 * t402 - t397 / 0.9e1 + t596;
t334 = -t397 / 0.6e1;
t343 = 0.2e1 / 0.3e1 * t402;
t460 = t411 - t494;
t228 = t334 + t343 + t460;
t342 = 0.4e1 / 0.3e1 * t402;
t314 = t408 + t411;
t336 = -t397 / 0.3e1;
t518 = t336 + t314;
t271 = t342 + t518;
t306 = -t408 / 0.3e1 + t411;
t499 = -0.2e1 * t548;
t323 = t358 ^ 2;
t322 = t358 * t323;
t415 = pkin(1) * t408;
t620 = t322 * t415;
t559 = pkin(7) * t620;
t679 = pkin(7) * t358;
t572 = 0.4e1 * t679;
t607 = t408 * t323;
t612 = (pkin(7) + pkin(1)) * (pkin(7) - pkin(1));
t143 = 0.4e1 * t559 + 0.6e1 * t210 * t607 + t271 * t612 + (t228 * t572 + t306 * t499) * pkin(1);
t378 = 6 * t408;
t482 = -0.4e1 * t494;
t338 = -0.2e1 / 0.3e1 * t397;
t387 = 2 * t411;
t517 = t338 + t343 + t387;
t420 = t402 ^ 2;
t516 = t338 + t314;
t599 = (t343 + t516) * t314 + t420;
t158 = t271 * t482 + (t378 + t517) * t402 + t599;
t269 = -0.2e1 * t494;
t220 = t269 + t271;
t585 = -t402 + t411;
t703 = 4 * t408;
t291 = t585 * t703;
t310 = pkin(1) * t358;
t564 = 0.4e1 * t310;
t145 = pkin(7) * t220 * t564 + t291 * t323 + t158;
t346 = -t402 / 0.3e1;
t304 = t346 + t411;
t236 = t304 * t269;
t613 = (pkin(7) + pkin(3)) * (pkin(7) - pkin(3));
t177 = t271 * t613 + t236;
t325 = 0.10e2 / 0.3e1 * t408;
t178 = (t325 + t517) * t402 + t599;
t565 = 0.2e1 * t310;
t290 = pkin(7) * t565;
t316 = -3 * t408 + t411;
t552 = 0.4e1 * t607;
t235 = t290 + t552 + t316;
t313 = -3 * t402 + t411;
t503 = 0.8e1 * t559;
t259 = t313 * t503;
t514 = t402 + t314;
t282 = -t397 + t514;
t288 = t310 + pkin(7);
t307 = t314 ^ 2;
t308 = pkin(3) * t355;
t406 = t408 ^ 2;
t361 = 15 * t406;
t368 = 18 * t411;
t369 = -0.2e1 * t397;
t371 = -0.6e1 * t397;
t373 = 2 * t402;
t410 = t411 ^ 2;
t382 = 3 * t410;
t419 = pkin(3) * t402;
t399 = t419 ^ 2;
t542 = 0.12e2 * t607;
t319 = t355 ^ 2;
t623 = t319 * t402;
t543 = 0.12e2 * t623;
t568 = 6 * pkin(1);
t386 = 3 * t411;
t593 = 15 * t408 + t386;
t318 = t355 * t319;
t624 = t318 * t419;
t108 = t143 * t543 + t259 + t177 * t542 + t399 + (-t397 + t402 + t593) * t420 + (t361 + (t368 + t371 + (6 * t402)) * t408 + t382 + (t369 + t373) * t411) * t402 + t307 * t282 + (0.6e1 * t145 * t308 + 0.8e1 * t235 * t624) * t288 + (t158 * t679 - t178 * t548) * t568;
t379 = 3 * t408;
t589 = t379 + t411;
t295 = t402 + t589;
t309 = pkin(3) * t357;
t258 = t295 * t309;
t657 = pkin(1) * t356;
t262 = t309 - t657;
t547 = t408 * t309;
t296 = 3 * t402 + t314;
t627 = t296 * t356;
t157 = -0.2e1 * t323 * t547 + t258 + (0.2e1 * t262 * t679 - t627) * pkin(1);
t448 = -t356 * t415 + t547;
t250 = 0.2e1 * t448;
t380 = 2 * t408;
t312 = t380 + t402;
t315 = -t408 + t411;
t563 = 0.2e1 * t309;
t532 = pkin(7) * t563;
t160 = t315 * t309 + t250 * t323 + (t312 * t356 + t358 * t532) * pkin(1);
t197 = -pkin(1) * t627 + t258;
t687 = 4 * t406;
t702 = 8 * t408;
t286 = pkin(3) * t687 + t419 * t702;
t527 = t356 * t613;
t686 = 4 * t415;
t200 = t286 * t357 + t527 * t686;
t377 = 5 * t406;
t582 = t410 + t420;
t363 = 10 * t408;
t592 = t363 + t387;
t605 = t411 * t408;
t231 = t402 * t592 + t377 + t582 + 6 * t605;
t372 = 5 * t420;
t384 = 6 * t411;
t244 = t372 + (t363 + t384) * t402 + t307;
t529 = t288 * t624;
t492 = -0.8e1 * t529;
t556 = -0.4e1 * t623;
t628 = t288 * t355;
t123 = t160 * t556 + t200 * t323 + (-0.4e1 * t157 * t628 + (-t231 + t503) * t357) * pkin(3) + (-0.4e1 * t197 * t679 + (t244 + t492) * t356) * pkin(1);
t252 = t308 + t288;
t690 = 0.2e1 * t355;
t573 = pkin(7) * t690;
t289 = pkin(3) * t573;
t581 = t411 - t397;
t294 = t408 + t581;
t249 = t289 + t294;
t203 = t269 + t249;
t324 = t402 * t703;
t608 = t402 * t411;
t292 = t324 - 4 * t608;
t533 = -0.4e1 * pkin(3) * pkin(7) * t294;
t287 = t308 + pkin(7);
t629 = t287 * t358;
t234 = t289 + t585 + 0.2e1 * t623;
t630 = t234 * t323;
t706 = 2 * pkin(3);
t134 = t292 * t319 + t355 * t533 - t406 - ((t411 - (t706 + pkin(4)) * pkin(4)) * (t411 + (t706 - pkin(4)) * pkin(4))) + (t388 + 0.2e1 * t397 - (4 * t402) - 0.4e1 * t630) * t408 + (-t203 * t629 + t249 * t548) * t569;
t412 = sqrt(t134);
t94 = t108 * t252 + t123 * t412;
t708 = t94 ^ 2;
t580 = 0.2e1 * pkin(7);
t707 = 2 * pkin(1);
t396 = t397 ^ 2;
t584 = t406 + t410;
t588 = t387 - t397;
t606 = t411 * t397;
t444 = t588 * t408 + t396 / 0.6e1 + t584 - t606;
t439 = 0.5e1 / 0.6e1 * t420 + t444;
t186 = (t325 + t588) * t402 + t439;
t339 = -0.3e1 / 0.2e1 * t397;
t597 = t396 / 0.2e1 - t420 / 0.2e1;
t480 = -0.3e1 * t606 + t382 + t597;
t602 = t314 * ((t339 + t387) * t408 - 0.3e1 / 0.2e1 * t606 + t584 + t597) + t399;
t142 = -0.6e1 * t186 * t494 + (t361 + (t368 - 0.9e1 * t397) * t408 + t480) * t402 + (t339 + t593) * t420 + t602;
t337 = -t397 / 0.2e1;
t276 = t337 + t514;
t500 = -0.4e1 * t548;
t471 = t276 * t500;
t461 = pkin(1) * t471;
t161 = t461 + (t378 + t588) * t402 + t439;
t179 = t276 * t613 + t236;
t566 = pkin(7) * t310;
t531 = 0.6e1 * t566;
t127 = t161 * t531 + t179 * t542 + t142 + t259;
t705 = 0.8e1 * t127;
t344 = t402 / 0.3e1;
t520 = t397 / 0.3e1 + t344 + t387;
t704 = 0.10e2 / 0.3e1 * t420 + (-t408 + t520) * t711 + (t346 + t518) * t388;
t335 = -t397 / 0.4e1;
t701 = t335 + t402 / 0.2e1;
t700 = t386 - t397 - t402;
t470 = qJD(1) * t495;
t575 = qJD(2) * t357;
t510 = t288 * t575;
t487 = pkin(3) * t510;
t699 = t470 - t487;
t576 = qJD(2) * t355;
t509 = t356 * t576;
t440 = t507 - t509;
t698 = qJD(1) - qJD(2);
t697 = -0.8e1 * pkin(7);
t696 = -4 * pkin(1);
t695 = -2 * pkin(1);
t694 = -2 * pkin(2);
t390 = 2 * pkin(2);
t359 = cos(pkin(9));
t246 = t373 + t249;
t162 = t234 * t565 + t246 * t287;
t166 = t246 * t358 + (0.4e1 * t323 - 0.2e1) * t287 * pkin(1);
t268 = -pkin(1) + t548;
t211 = -t268 + t629;
t122 = t162 * t356 + t166 * t309 + t211 * t412;
t352 = sin(pkin(8));
t353 = cos(pkin(8));
t233 = -t352 * t356 - t353 * t358;
t655 = pkin(5) * t233;
t218 = t655 * t695;
t394 = pkin(5) ^ 2;
t205 = t218 + 0.2e1 * t394;
t216 = -pkin(1) + t655;
t232 = t352 * t358 - t353 * t356;
t600 = t218 + t394;
t191 = -(t707 + pkin(5)) * pkin(5) + t600;
t192 = pkin(5) * (t707 - pkin(5)) + t600;
t413 = sqrt(-t191 * t192);
t139 = pkin(5) * t205 * t232 - t216 * t413;
t642 = t122 * t139;
t281 = t373 + t379 + t581;
t198 = t281 + t289 + t482;
t615 = t357 * t358;
t215 = pkin(3) * t615 + t287 * t356;
t120 = -t198 * t629 + t215 * t412 + (t268 * t573 + t281 * t617) * pkin(3) + (-0.2e1 * t630 + (0.2e1 * t319 - 0.4e1) * t402 - t294) * pkin(1);
t631 = t232 * t413;
t137 = -pkin(5) * t631 - t205 * t216;
t645 = t120 * t137;
t447 = t645 / 0.4e1 + t642 / 0.4e1;
t199 = t408 + t600;
t195 = 0.1e1 / t199;
t636 = t195 / pkin(5);
t550 = pkin(1) * t629;
t175 = t269 + t289 + t514 + 0.2e1 * t550;
t173 = 0.1e1 / t175;
t403 = 1 / pkin(3);
t638 = t173 * t403;
t483 = t636 * t638;
t434 = t447 * t483;
t658 = sin(pkin(9));
t641 = t137 * t122;
t644 = t120 * t139;
t446 = t644 / 0.4e1 - t641 / 0.4e1;
t88 = t446 * t483;
t82 = t359 * t434 - t658 * t88;
t693 = 0.1e1 / t82;
t692 = 0.1e1 / t137;
t691 = 0.1e1 / t82 ^ 2;
t689 = -0.8e1 * t358;
t688 = -0.2e1 * t358;
t248 = -t356 * V_base(2) - t358 * V_base(1);
t664 = -t248 / 0.2e1;
t247 = t356 * V_base(1) - t358 * V_base(2);
t303 = V_base(6) + qJD(1);
t208 = pkin(1) * t303 + t247;
t669 = t208 / 0.2e1;
t102 = (t120 * t669 + t122 * t664) * t638;
t119 = 0.1e1 / t120 ^ 2;
t279 = qJD(2) * t532;
t598 = 0.2e1 * t709;
t523 = t279 + t598;
t537 = pkin(3) * t575;
t579 = qJD(1) * t356;
t639 = ((-t287 * t579 + t358 * t537) * t707 + t523) / t175 ^ 2;
t504 = -t639 / 0.2e1;
t672 = t173 / 0.2e1;
t574 = qJD(2) * t402;
t475 = t355 * t357 * t574;
t466 = 0.4e1 * t475;
t226 = t279 + t466;
t511 = t356 * t577;
t479 = t234 * t511;
t632 = t226 * t323;
t680 = pkin(7) * t356;
t643 = ((0.8e1 * t479 - 0.4e1 * t632) * t408 + (t292 * t690 + t533) * t575 + (0.2e1 * t357 ^ 2 * t574 * t680 + (t203 * t579 - t358 * t523) * t287 + (t249 * t507 + (-t203 * t615 - t249 * t618) * qJD(2)) * pkin(3)) * t569) / t412;
t506 = t643 / 0.2e1;
t578 = qJD(1) * t357;
t614 = t358 * t412;
t616 = t356 * t412;
t89 = t211 * t506 + (t162 * t358 - t287 * t616) * qJD(1) + (t226 * t358 - t234 * t579) * t356 * t707 + ((-t614 + (-t246 - 0.8e1 * t550) * t356) * t578 + ((-t166 + t616) * t355 + (t614 + (t287 * t580 + t246) * t356 + (t323 * t707 - pkin(1) + t679) * t357 * t706) * t357) * qJD(2)) * pkin(3);
t436 = 0.4e1 * t440;
t433 = t436 * t310;
t456 = t355 * t358 - t617;
t90 = t215 * t506 + (-t279 * t358 + (t198 * t356 + t614) * qJD(1)) * t287 + (t466 + 0.4e1 * t479 - 0.2e1 * t632) * pkin(1) + ((t281 * t358 - t616) * t578 + (-t198 * t615 - t281 * t618 - t412 * t456) * qJD(2) + (t268 * t575 + t308 * t440) * t580 + t287 * t433) * pkin(3);
t55 = t303 + 0.2e1 * ((t122 * t504 + t672 * t89) / t120 - (t120 * t504 + t672 * t90) * t122 * t119) * pkin(3) / (t119 * t122 ^ 2 + 0.1e1) * t175 * t403;
t684 = -pkin(2) * t55 / 0.2e1 - t102 / 0.2e1;
t224 = t232 * qJD(1);
t225 = t233 * qJD(1);
t502 = t224 * t707;
t640 = (t191 + t192) * pkin(5) * t502 / t413;
t505 = t640 / 0.2e1;
t443 = -t225 * t413 + t232 * t505;
t109 = (-(t216 * t707 - t205) * t224 + t443) * pkin(5);
t557 = 0.2e1 * t224 * t232;
t633 = t224 * t413;
t110 = t216 * t505 + t394 * pkin(1) * t557 + (t205 * t225 + t633) * pkin(5);
t484 = t636 * t639;
t196 = 0.1e1 / t199 ^ 2;
t634 = t196 * t224;
t551 = pkin(1) * t634;
t673 = t137 / 0.4e1;
t674 = t122 / 0.4e1;
t46 = (-t447 * t484 + (-(t645 / 0.2e1 + t642 / 0.2e1) * t551 + (t90 * t673 + t120 * t109 / 0.4e1 + t89 * t139 / 0.4e1 + t110 * t674) * t636) * t173) * t403;
t47 = (t446 * t484 + (-(-t644 / 0.2e1 + t641 / 0.2e1) * t551 + (-t90 * t139 / 0.4e1 - t120 * t110 / 0.4e1 + t109 * t674 + t89 * t673) * t636) * t173) * t403;
t31 = t359 * t46 + t47 * t658;
t683 = pkin(2) * t31;
t682 = pkin(6) * t82;
t84 = -t359 * t88 - t434 * t658;
t681 = pkin(6) * t84;
t663 = t248 / 0.2e1;
t101 = (t120 * t663 + t122 * t669) * t638;
t678 = -t101 / 0.2e1;
t242 = -t356 * V_base(5) - t358 * V_base(4);
t665 = t242 / 0.2e1;
t240 = t356 * V_base(4) - t358 * V_base(5);
t667 = t240 / 0.2e1;
t103 = (t120 * t665 + t122 * t667) * t638;
t677 = -t103 / 0.2e1;
t676 = t103 / 0.2e1;
t666 = -t242 / 0.2e1;
t104 = (t120 * t667 + t122 * t666) * t638;
t675 = -t104 / 0.2e1;
t326 = -0.20e2 / 0.3e1 * t408;
t385 = 4 * t411;
t521 = 0.2e1 / 0.3e1 * t397 + t343 + t385;
t522 = 0.4e1 / 0.3e1 * t397 + t342 + t388;
t671 = t420 / 0.2e1 - (t326 + t521) * t402 / 0.2e1 + 0.3e1 / 0.2e1 * t406 - t522 * t408 / 0.2e1 - t410 / 0.2e1;
t670 = -t208 / 0.2e1;
t668 = -t240 / 0.2e1;
t662 = -t352 / 0.2e1;
t661 = -t412 / 0.4e1;
t660 = t412 / 0.2e1;
t659 = t412 / 0.4e1;
t656 = pkin(1) * t323;
t392 = pkin(6) ^ 2;
t79 = t682 * t390;
t646 = t392 + t79;
t72 = -(t390 + pkin(6)) * pkin(6) + t646;
t73 = pkin(6) * (t390 - pkin(6)) + t646;
t649 = t72 * t73;
t414 = sqrt(-t649);
t654 = 0.2e1 * (-t72 - t73) * pkin(6) * t683 / t414;
t653 = t31 * t84;
t265 = t411 + t402 / 0.4e1 + t408 / 0.4e1 - t397 / 0.8e1;
t594 = 0.4e1 / 0.7e1 * t411 - t397 / 0.7e1;
t154 = -0.32e2 / 0.21e2 * t265 * t494 + 0.5e1 / 0.42e2 * t420 + (0.16e2 / 0.21e2 * t408 + t594) * t402 + t406 / 0.7e1 + t594 * t408 + t410 - 0.3e1 / 0.7e1 * t606 + t396 / 0.42e2;
t267 = t596 + t701;
t348 = 0.4e1 / 0.3e1 * t408;
t156 = -0.8e1 / 0.3e1 * t267 * t494 + 0.5e1 / 0.18e2 * t420 + (t348 + t336) * t402 + t410 - t406 / 0.3e1 + t396 / 0.18e2 + (t342 + 0.2e1 / 0.3e1 * t408 + t338) * t411;
t223 = -t420 / 0.6e1 + t444;
t350 = t408 / 0.2e1;
t595 = t350 + t411;
t227 = -0.2e1 / 0.3e1 * t494 + t335 + t595;
t299 = (t385 + t397) * t408;
t347 = -0.2e1 / 0.3e1 * t402;
t305 = t347 + t411;
t498 = 0.16e2 * t559;
t321 = t323 ^ 2;
t622 = t321 * t406;
t555 = 0.8e1 * t622;
t571 = 0.6e1 * t679;
t126 = t305 * t555 + t227 * t498 + 0.14e2 * t154 * t607 + (t315 * t420) + (t299 - 0.10e2 / 0.3e1 * t406 + (2 * t410) - t606) * t402 + t223 * t612 + (t156 * t571 + t306 * t471) * pkin(1);
t263 = 0.7e1 / 0.6e1 * t402 + t334 + t595;
t519 = t334 + t344 + t411;
t266 = t348 + t519;
t176 = -t263 * t657 + t266 * t309;
t182 = (t402 * t315) - 0.5e1 / 0.3e1 * t406 + t520 * t408 + t411 * (t336 + t304);
t273 = t408 + t519;
t297 = t373 + t315;
t188 = t273 * t309 - t297 * t657 / 0.2e1;
t621 = t322 * t406;
t128 = -0.4e1 * t621 * t680 + t176 * t552 + (-0.8e1 / 0.3e1 * t622 + t182) * t309 + (t188 * t572 + t356 * t671) * pkin(1);
t591 = t369 + t711;
t515 = t384 + t591;
t172 = t420 + (t338 + t347 + t592) * t402 + t377 + t515 * t408 + t411 * (t338 + t305);
t165 = t172 * t309;
t270 = 0.8e1 / 0.3e1 * t402 + t518;
t272 = t336 + t343 + t589;
t180 = -t270 * t657 + t272 * t309;
t277 = 0.5e1 / 0.6e1 * t402 + t350 + t334;
t194 = pkin(1) * t527 + t277 * t563;
t546 = t415 * t309;
t553 = -0.4e1 * t607;
t187 = t372 + (t363 + t515) * t402 + (t347 + t516) * t314;
t637 = t187 * t356;
t129 = t322 * t546 * t697 + t194 * t553 + t165 + (t180 * t572 - t637) * pkin(1);
t383 = 8 * t411;
t204 = t415 * t500 + t324 + t687 + (t369 + t383) * t408;
t219 = -t408 + t460 + t701;
t144 = t503 + t204 * t323 + t276 * t316 + (t219 * t572 + t499 * t612) * pkin(1);
t583 = t410 - t406;
t146 = t304 * t461 - t399 + (-t325 - t581) * t420 + (t299 + t420 / 0.6e1 - t396 / 0.6e1 + t583) * t402 + t223 * t411;
t147 = -pkin(1) * t637 + t165;
t185 = -(3 * t420) + (t326 + t522) * t402 + t521 * t408 + t583;
t148 = t185 * t309 + t657 * t704;
t278 = t700 * t363;
t376 = 7 * t406;
t370 = -0.5e1 * t397;
t590 = t370 - (5 * t402);
t149 = t399 + ((21 * t408) + t700) * t420 + (t411 * t591 + t278 + t382 + (35 * t406)) * t402 + (t376 + (t383 + t590) * t408 + t411 * (-t402 + t581)) * t314;
t150 = (t339 + t386 + (7 * t408)) * t420 + (t376 + (t370 + (10 * t411)) * t408 + t480) * t402 + t602;
t251 = 0.4e1 * t448;
t261 = t309 + 0.2e1 * t657;
t275 = t337 + t295;
t151 = t316 * t309 + t251 * t323 + (t261 * t679 + t275 * t356) * t707;
t626 = t307 * (-t402 + t294);
t159 = (7 * t399) + ((35 * t408) + (15 * t411) + t590) * t420 + ((21 * t406) + t278 + (9 * t410) + (t371 - (6 * t402)) * t411) * t402 + t626;
t424 = pkin(7) * t411;
t293 = -0.12e2 * pkin(7) * t415 + t424 * t569;
t301 = -8 * t406 + 12 * t605;
t168 = t293 * t358 + t301 * t323 + t498 + t555 + t584 - (6 * t605);
t181 = t269 * t613 + t276 * t313;
t438 = t440 * pkin(3);
t183 = t408 * t438 * t572;
t264 = t411 + 0.5e1 / 0.2e1 * t402 + 0.3e1 / 0.2e1 * t408 + t337;
t536 = (pkin(1) * t313) / 0.2e1;
t190 = t264 * t309 + t356 * t536;
t229 = 0.4e1 / 0.3e1 * t607 + t290 + t306;
t540 = pkin(1) * t579;
t245 = t537 - t540;
t260 = 16 * (t582 - 6 * t608) * t406;
t493 = pkin(7) * t540;
t280 = -0.2e1 * t493;
t320 = t356 ^ 2;
t432 = pkin(1) * t304 * t438 * t607;
t435 = t440 * t707;
t538 = pkin(3) * t576;
t539 = pkin(1) * t577;
t437 = -t172 * t538 - t187 * t539;
t459 = t319 * t419 * t510;
t449 = -0.24e2 * t459;
t451 = t306 * t468;
t452 = t306 * t469;
t619 = t323 * t415;
t560 = pkin(7) * t619;
t467 = t560 * t579;
t454 = -0.48e2 * t467;
t474 = t408 * t511;
t462 = -0.24e2 * t474;
t463 = t538 * t620;
t464 = t538 * t622;
t513 = qJD(1) * t624;
t488 = pkin(1) * t513;
t465 = t356 * t488;
t476 = t318 * t420 * t575;
t477 = t577 * t613;
t512 = t322 * t579;
t478 = t406 * t512;
t481 = -0.6e1 * t493;
t508 = t358 * t576;
t486 = pkin(3) * t508;
t317 = t319 ^ 2;
t625 = t317 * t420;
t489 = -0.24e2 * t229 * t625;
t496 = t607 * t685;
t497 = 0.32e2 * t559;
t528 = t356 * t625;
t544 = -0.12e2 * t623;
t549 = pkin(3) * t628;
t554 = -0.6e1 * t607;
t453 = -0.24e2 * t467;
t603 = t313 * t453 - 0.24e2 * t432;
t604 = t710 * t186;
t311 = -0.30e2 * t397 + (60 * t411);
t587 = t396 - t420;
t450 = (6 * t410) + t587 - 0.6e1 * t606;
t86 = t260 * t321 + t181 * t497 + 0.24e2 * t146 * t607 + (t369 + t385 + (28 * t408)) * t399 + t282 * t626 + (0.24e2 * t126 * t319 + t311 * t406 + t371 * t410 + t450 * t378 + t587 * t387 + (28 * t415 ^ 2) + 0.4e1 * t424 ^ 2) * t402 + (0.32e2 * t144 * t624 + t308 * t705) * t288 + 0.8e1 * (t142 * t679 - t150 * t548) * pkin(1) + (0.16e2 * t168 * t317 + t311 * t408 + (70 * t406) + t420 + t450) * t420;
t92 = 0.1e1 / t94;
t95 = t190 * t498 + t151 * t492 + t128 * t544 + t148 * t554 + (-0.6e1 * t129 * t628 + (0.24e2 * t304 * t622 - t149) * t357) * pkin(3) + (-0.6e1 * t147 * t679 + (t159 + t489) * t356) * pkin(1);
t652 = ((t489 * t539 - 0.24e2 * pkin(1) * (-0.8e1 / 0.3e1 * t474 + t280) * t528 - 0.96e2 * t229 * t476 * t657 + ((-t316 + t553) * t538 + 0.2e1 * (pkin(1) * t275 - t251 * t356 - 0.2e1 * t619) * t577 + (-0.2e1 * t486 + (-0.2e1 * t261 * t356 + 0.4e1 * t656) * qJD(1)) * pkin(1) * pkin(7)) * t492 + (0.8e1 / 0.3e1 * t464 + (-t263 * t539 - t266 * t538) * t552 - t182 * t538 + t539 * t671 + (0.32e2 / 0.3e1 * t621 * t309 + t408 * t176 * t689) * t579 + (t273 * t486 * t696 + ((0.12e2 * t320 * t323 - 0.4e1 * t321) * t406 + (-0.4e1 * t188 * t356 - 0.2e1 * t297 * t656) * pkin(1)) * qJD(1)) * pkin(7)) * t544 - 0.24e2 * t128 * t475 - 0.6e1 * ((-0.4e1 * (pkin(1) * t477 - 0.2e1 * t277 * t538) * t323 + 0.8e1 * t194 * t511) * t408 + (0.8e1 * t463 + (-t270 * t539 - t272 * t538) * t564 + (t180 * t696 + 0.24e2 * t323 * t546) * t579) * pkin(7) + t437) * t549 + (-t264 * t538 + t536 * t577) * t498 + t190 * t454 + (-t185 * t538 + t539 * t704) * t554 + 0.12e2 * t148 * t474 - 0.6e1 * t437 * t566 + 0.6e1 * t147 * t493 + t149 * t538 + t159 * t539 + (-0.96e2 * t478 * t309 - 0.24e2 * t464) * t304 + (0.8e1 * t465 + t449) * t151 + 0.6e1 * t699 * t129) * t412 + t95 * t506 + (0.16e2 * (t301 * t688 - t293 - 0.48e2 * t560 - 0.32e2 * t621) * qJD(1) * t528 + 0.64e2 * t168 * t476 + 0.32e2 * (-t183 + (t204 * t688 + (t219 * t696 - 0.24e2 * t619) * pkin(7)) * t579 + (-t435 * t612 - t436 * t619) * pkin(3)) * t529 + 0.24e2 * (-0.32e2 * t305 * t478 + (-0.2e1 / 0.3e1 * t507 + 0.2e1 / 0.3e1 * t509) * t498 * t685 + t227 * t454 - 0.28e2 * t154 * t474 + (-0.8e1 / 0.3e1 * t507 + 0.8e1 / 0.3e1 * t509) * t267 * pkin(3) * t408 * t571 + t156 * t481 + 0.4e1 * (-t452 + t451) * t276 - 0.64e2 / 0.3e1 * t440 * t265 * t496) * t623 + 0.48e2 * t126 * t475 - 0.8e1 * t127 * t470 + 0.8e1 * (t179 * t462 + (-pkin(3) * t276 * t433 - t161 * t579) * pkin(7) * t568 + t603 + t604) * t549 + t487 * t705 - 0.4e1 * t260 * t512 - pkin(3) * t435 * t497 * t613 - 0.96e2 * t181 * t467 - 0.96e2 * t276 * t432 - 0.48e2 * t146 * t474 + 0.8e1 * t604 * t566 - 0.8e1 * t142 * t493 + 0.8e1 * t709 * t150 + (-0.32e2 * t465 + 0.96e2 * t459) * t144) * t252 + t86 * t245) * t92;
t71 = t252 * t86 + t412 * t95;
t651 = 0.1e1 / t71 ^ 2 * t708;
t650 = t71 * t92;
t77 = t79 + 0.2e1 * t392;
t78 = -pkin(2) - t682;
t34 = t414 * t681 - t77 * t78;
t35 = -t414 * t78 - t681 * t77;
t393 = 0.1e1 / pkin(6);
t418 = pkin(2) ^ 2;
t76 = t418 + t646;
t647 = t393 / t76;
t524 = t647 / 0.2e1;
t17 = t35 * t101 * t524 + t34 * t647 * t684;
t48 = pkin(3) * t55 + t102;
t398 = 1 / pkin(4);
t610 = t398 * t403;
t525 = t412 * t610;
t535 = t650 / 0.2e1;
t37 = t48 * t535 * t610 + t525 * t678;
t648 = t31 * t414;
t635 = t195 / pkin(1);
t611 = t393 / pkin(2);
t609 = t398 / pkin(3) ^ 2;
t601 = 0.4e1 * t709 * t271;
t562 = 0.1e1 / t76 ^ 2 * t683;
t485 = t296 * t539;
t490 = -0.2e1 * t511;
t558 = t71 / t708 * ((t288 * t488 * t689 + t320 * t513 * t702 + t449 * t657 + (0.2e1 * (-t408 * t538 - t415 * t577) * t323 + t250 * t490 - t315 * t538 + (t312 * t577 + (-t356 * t578 - t508) * pkin(7) * t706) * pkin(1)) * t556 - 0.8e1 * t160 * t475 - 0.4e1 * (-t485 + (0.4e1 * t357 * t474 + (-t295 + 0.2e1 * t607) * t576) * pkin(3) + ((-t538 - t539) * t310 - t262 * t540) * t580) * t549 + t463 * t697 + t453 * t309 + (-t286 * t576 + t477 * t686) * t323 + t200 * t490 - 0.4e1 * (-t295 * t538 - t485) * t566 + 0.4e1 * t197 * t493 + t231 * t538 + t244 * t539 + 0.4e1 * t699 * t157) * t412 + t123 * t506 + (0.8e1 * (t280 - 0.8e1 * t474) * t529 + (-0.12e2 * t467 + 0.6e1 * (-0.4e1 / 0.9e1 * t507 + 0.4e1 / 0.9e1 * t509) * t496 - 0.12e2 * t210 * t474 - t183 - 0.4e1 * t228 * t493 - 0.2e1 * t452 + 0.2e1 * t451) * t543 + 0.24e2 * t143 * t475 + 0.6e1 * (t291 * t490 + (-t220 * t579 + t358 * t598) * pkin(7) * t569 + t601) * t549 + t177 * t462 + t601 * t531 + t158 * t481 + t603 + (-0.8e1 * t465 + 0.24e2 * t459) * t235 + t710 * t178 - 0.6e1 * t699 * t145) * t252 + t108 * t245);
t545 = pkin(5) * t634;
t541 = pkin(5) * V_base(6);
t534 = t650 / 0.4e1;
t530 = t173 * t609;
t526 = t414 * t611;
t212 = -pkin(1) * t240 + V_base(3);
t473 = -t526 / 0.2e1;
t472 = t526 / 0.2e1;
t455 = t615 + t618;
t98 = -pkin(2) * t104 + t212;
t97 = -pkin(3) * t104 + t212;
t32 = -t359 * t47 + t46 * t658;
t33 = 0.1e1 / t34 ^ 2;
t5 = t55 + 0.2e1 * (((-t78 * t654 / 0.2e1 + t392 * t653 * t694 + (t32 * t77 + t648) * pkin(6)) * t524 - t35 * t562) / t34 - (-t34 * t562 + (t84 * t654 / 0.2e1 - t414 * t32 + (t694 * t78 + t77) * t31) * pkin(6) * t524) * t35 * t33) * pkin(6) / (t33 * t35 ^ 2 + 0.1e1) * t76;
t445 = t652 / 0.4e1 - t558 / 0.4e1;
t15 = t55 + (0.1e1 / t71 * t94 * t506 - 0.2e1 * (t652 / 0.2e1 - t558 / 0.2e1) * pkin(4) * pkin(3) * t525 * t651) / (t134 * t651 + 0.1e1);
t442 = t120 * t659 + t122 * t534;
t441 = t120 * t534 + t122 * t661;
t360 = V_base(3) ^ 2;
t302 = V_base(6) + qJD(2);
t285 = -pkin(7) * V_base(5) + V_base(3);
t284 = pkin(7) * V_base(6) + V_base(2);
t257 = -t352 * t541 + V_base(1);
t256 = t353 * t541 + V_base(2);
t241 = t355 * V_base(5) + t357 * V_base(4);
t239 = t355 * V_base(4) - t357 * V_base(5);
t222 = t284 * t355 + t357 * V_base(1);
t221 = -t284 * t357 + t355 * V_base(1);
t217 = -pkin(1) * t233 + pkin(5);
t213 = V_base(3) + (t352 * V_base(4) - t353 * V_base(5)) * pkin(5);
t209 = t212 ^ 2;
t206 = t218 + t380;
t171 = t698 * t455;
t170 = t698 * t456;
t140 = pkin(1) * t206 * t232 + t217 * t413;
t138 = -pkin(1) * t631 + t206 * t217;
t136 = 0.1e1 / t138 ^ 2;
t135 = 0.1e1 / t137 ^ 2;
t118 = (-t353 * t138 / 0.2e1 + t140 * t662) * t635;
t117 = (t138 * t662 + t353 * t140 / 0.2e1) * t635;
t114 = (t137 * t668 + t139 * t665) * t636;
t113 = (t137 * t666 + t139 * t668) * t636;
t112 = (t137 * t670 + t139 * t663) * t636;
t111 = (t137 * t664 + t139 * t670) * t636;
t106 = -t117 * V_base(4) + t118 * V_base(5);
t105 = t117 * V_base(5) + t118 * V_base(4);
t100 = -t117 * t257 + t118 * t256;
t99 = t117 * t256 + t118 * t257;
t69 = V_base(6) + (((-t217 * t640 / 0.2e1 + t408 * pkin(5) * t557 + (t206 * t225 + t633) * pkin(1)) * t635 / 0.2e1 - t140 * t545) / t138 + (t138 * t545 - (-(-0.2e1 * pkin(5) * t217 - t206) * t224 + t443) * pkin(1) * t635 / 0.2e1) * t140 * t136) / (t136 * t140 ^ 2 + 0.1e1) * t199 * t695;
t68 = (t110 * t692 * t636 + (-t109 * t135 * t636 - (-t137 * t135 + t692) * t196 * t502) * t139) * t199 / (t135 * t139 ^ 2 + 0.1e1) * pkin(5) + t303;
t63 = t442 * t530;
t62 = t441 * t530;
t57 = (t104 * t535 + t412 * t677) * t610;
t56 = (t103 * t535 + t104 * t660) * t610;
t54 = -pkin(4) * t57 + t97;
t53 = -t103 * t84 - t104 * t82;
t52 = -t103 * t82 + t104 * t84;
t51 = -t101 * t84 - t102 * t82;
t50 = -t101 * t82 + t102 * t84;
t41 = t455 * t63 - t456 * t62;
t40 = -t455 * t62 - t456 * t63;
t39 = 0.1e1 / t41 ^ 2;
t36 = (t101 * t535 + t48 * t660) * t610;
t25 = -t40 * t57 + t41 * t56;
t24 = t40 * t56 + t41 * t57;
t23 = (t34 * t675 + t35 * t676) * t647;
t22 = (t34 * t677 + t35 * t675) * t647;
t21 = (-t442 * t639 + (t90 * t659 + t120 * t643 / 0.8e1 + t89 * t534 + t445 * t122) * t173) * t609;
t20 = (-t441 * t639 + (t90 * t534 + t89 * t661 - t122 * t643 / 0.8e1 + t445 * t120) * t173) * t609;
t19 = -pkin(6) * t23 + t98;
t16 = (t34 * t678 + t35 * t684) * t647;
t14 = pkin(4) * t15 + t37;
t13 = (t32 * t693 + t653 * t691) / (t691 * t84 ^ 2 + 0.1e1) + t55;
t12 = t82 * t22 + t23 * t473;
t11 = t22 * t472 + t82 * t23;
t10 = -t14 * t40 + t36 * t41;
t9 = t14 * t41 + t36 * t40;
t6 = (-(-t170 * t62 + t171 * t63 - t20 * t455 - t21 * t456) / t41 - (-t170 * t63 - t171 * t62 + t20 * t456 - t21 * t455) * t40 * t39) / (t39 * t40 ^ 2 + 0.1e1) + t15;
t4 = pkin(6) * t5 + t17;
t3 = (-t693 * t654 / 0.4e1 + t691 * t648 / 0.2e1) / (0.1e1 - 0.1e1 / pkin(6) ^ 2 / t418 * t691 * t649 / 0.4e1) * t611 + t5;
t2 = t82 * t16 + t4 * t473;
t1 = t16 * t472 + t82 * t4;
t7 = (t51 * mrSges(7,1) - t50 * mrSges(7,2) + Ifges(7,5) * t52 + Ifges(7,6) * t53 + Ifges(7,3) * t13 / 0.2e1) * t13 + (-t97 * mrSges(5,1) + t36 * mrSges(5,3) + Ifges(5,2) * t57 / 0.2e1) * t57 + (V_base(2) * mrSges(1,1) - V_base(1) * mrSges(1,2) + Ifges(1,3) * V_base(6) / 0.2e1) * V_base(6) + (t213 * mrSges(6,2) - t100 * mrSges(6,3) + Ifges(6,4) * t106 + Ifges(6,5) * t69 + Ifges(6,1) * t105 / 0.2e1) * t105 + (-t98 * mrSges(4,1) + t16 * mrSges(4,3) + Ifges(4,6) * t5 + Ifges(4,2) * t23 / 0.2e1) * t23 + (t112 * mrSges(9,1) - t111 * mrSges(9,2) + Ifges(9,3) * t68 / 0.2e1) * t68 + (-t213 * mrSges(6,1) + t99 * mrSges(6,3) + Ifges(6,6) * t69 + Ifges(6,2) * t106 / 0.2e1) * t106 + (t54 * mrSges(11,2) - t9 * mrSges(11,3) + Ifges(11,5) * t6 + Ifges(11,1) * t25 / 0.2e1) * t25 + (-t212 * mrSges(7,1) + t50 * mrSges(7,3) + Ifges(7,2) * t53 / 0.2e1) * t53 + (t212 * mrSges(9,2) - t112 * mrSges(9,3) + Ifges(9,4) * t114 + Ifges(9,5) * t68 + Ifges(9,1) * t113 / 0.2e1) * t113 + (t222 * mrSges(8,1) - t221 * mrSges(8,2) + Ifges(8,3) * t302 / 0.2e1) * t302 + (t17 * mrSges(4,1) - t16 * mrSges(4,2) + Ifges(4,3) * t5 / 0.2e1) * t5 + (t98 * mrSges(4,2) - t17 * mrSges(4,3) + Ifges(4,4) * t23 + Ifges(4,5) * t5 + Ifges(4,1) * t22 / 0.2e1) * t22 + (-t19 * mrSges(10,1) + t2 * mrSges(10,3) + Ifges(10,4) * t12 + Ifges(10,6) * t3 + Ifges(10,2) * t11 / 0.2e1) * t11 + (-t54 * mrSges(11,1) + t10 * mrSges(11,3) + Ifges(11,4) * t25 + Ifges(11,6) * t6 + Ifges(11,2) * t24 / 0.2e1) * t24 + (t100 * mrSges(6,1) - t99 * mrSges(6,2) + Ifges(6,3) * t69 / 0.2e1) * t69 + (t102 * mrSges(3,1) - t101 * mrSges(3,2) + Ifges(3,3) * t55 / 0.2e1) * t55 + m(7) * (t50 ^ 2 + t51 ^ 2 + t209) / 0.2e1 + m(9) * (t111 ^ 2 + t112 ^ 2 + t209) / 0.2e1 + m(3) * (t101 ^ 2 + t102 ^ 2 + t209) / 0.2e1 + m(6) * (t100 ^ 2 + t213 ^ 2 + t99 ^ 2) / 0.2e1 + m(10) * (t1 ^ 2 + t19 ^ 2 + t2 ^ 2) / 0.2e1 + (-t212 * mrSges(3,1) + t101 * mrSges(3,3) + Ifges(3,6) * t55 + Ifges(3,2) * t104 / 0.2e1) * t104 + (t19 * mrSges(10,2) - t1 * mrSges(10,3) + Ifges(10,5) * t3 + Ifges(10,1) * t12 / 0.2e1) * t12 + m(8) * (t221 ^ 2 + t222 ^ 2 + t285 ^ 2) / 0.2e1 + (t1 * mrSges(10,1) - t2 * mrSges(10,2) + Ifges(10,3) * t3 / 0.2e1) * t3 + (t212 * mrSges(7,2) - t51 * mrSges(7,3) + Ifges(7,4) * t53 + Ifges(7,1) * t52 / 0.2e1) * t52 + (t97 * mrSges(5,2) - t37 * mrSges(5,3) + Ifges(5,4) * t57 + Ifges(5,1) * t56 / 0.2e1) * t56 + (V_base(3) * mrSges(1,2) - V_base(2) * mrSges(1,3) + Ifges(1,4) * V_base(5) + Ifges(1,5) * V_base(6) + Ifges(1,1) * V_base(4) / 0.2e1) * V_base(4) + (t9 * mrSges(11,1) - t10 * mrSges(11,2) + Ifges(11,3) * t6 / 0.2e1) * t6 + m(11) * (t10 ^ 2 + t54 ^ 2 + t9 ^ 2) / 0.2e1 + (t37 * mrSges(5,1) - t36 * mrSges(5,2) + Ifges(5,5) * t56 + Ifges(5,6) * t57 + Ifges(5,3) * t15 / 0.2e1) * t15 + (-t212 * mrSges(9,1) + t111 * mrSges(9,3) + Ifges(9,6) * t68 + Ifges(9,2) * t114 / 0.2e1) * t114 + m(5) * (t36 ^ 2 + t37 ^ 2 + t97 ^ 2) / 0.2e1 + m(4) * (t16 ^ 2 + t17 ^ 2 + t98 ^ 2) / 0.2e1 + (t212 * mrSges(3,2) - t102 * mrSges(3,3) + Ifges(3,1) * t676 + Ifges(3,4) * t104 + Ifges(3,5) * t55) * t103 + (-V_base(3) * mrSges(2,1) + t248 * mrSges(2,3) + Ifges(2,4) * t242 + Ifges(2,2) * t667 + Ifges(2,6) * t303) * t240 + (V_base(3) * mrSges(2,2) - t247 * mrSges(2,3) + Ifges(2,1) * t665 + Ifges(2,5) * t303) * t242 + (t247 * mrSges(2,1) - t248 * mrSges(2,2) + Ifges(2,3) * t303 / 0.2e1) * t303 + (-V_base(3) * mrSges(1,1) + V_base(1) * mrSges(1,3) + Ifges(1,6) * V_base(6) + Ifges(1,2) * V_base(5) / 0.2e1) * V_base(5) + (t285 * mrSges(8,2) - t222 * mrSges(8,3) + Ifges(8,4) * t241 + Ifges(8,5) * t302 + Ifges(8,1) * t239 / 0.2e1) * t239 + (-t285 * mrSges(8,1) + t221 * mrSges(8,3) + Ifges(8,6) * t302 + Ifges(8,2) * t241 / 0.2e1) * t241 + m(2) * (t247 ^ 2 + t248 ^ 2 + t360) / 0.2e1 + m(1) * (V_base(1) ^ 2 + V_base(2) ^ 2 + t360) / 0.2e1;
T = t7;
