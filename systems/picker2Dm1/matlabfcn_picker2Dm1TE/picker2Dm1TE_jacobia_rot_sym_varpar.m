% Rotatorische Teilmatrix der analytischen Jacobi-Matrix für beliebiges Segment von
% picker2Dm1TE
% Use Code from Maple symbolic Code Generation
% 
% analytische Jacobi-Matrix: Differentieller Zusammenhang zwischen
% Endeffektorposition und verallgemeinerten Koordinaten.
% Zeitableitung der Winkeldarstellung des Endeffektors in Basis-Koordinaten
% 
% Winkeldarstellung: Euler-XYZ-Winkel, rotx(alpha)*roty(beta)*rotz(gamma)
% 
% Input:
% qJ [2x1]
%   Generalized joint coordinates (joint angles)
% link_index [1x1 uint8]
%   Index des Segmentes, auf dem der Punkt C liegt.
%   Wie in picker2Dm1TE_fkine_fixb_rotmat_mdh_sym_varpar.m (1=Basis).
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[L1,L2,L3,L4,L5,L6,e,phi05,phi1]';
% 
% Output:
% Ja_rot [3x2]
%   Rotatorische Teilmatrix der analytischen Jacobi-Matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2020-05-10 08:43
% Revision: 73758128893bc0a8beabae04bd7e71472107ac81 (2020-05-07)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function Ja_rot = picker2Dm1TE_jacobia_rot_sym_varpar(qJ, link_index, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(2,1),uint8(0),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [2 1]), ...
  'picker2Dm1TE_jacobia_rot_sym_varpar: qJ has to be [2x1] (double)');
assert(isa(link_index,'uint8') && all(size(link_index) == [1 1]), ...
	'picker2Dm1TE_jacobia_rot_sym_varpar: link_index has to be [1x1] uint8');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'picker2Dm1TE_jacobia_rot_sym_varpar: pkin has to be [9x1] (double)');
Ja_rot=NaN(3,2);
if link_index == 0
	%% Symbolic Calculation
	% From jacobia_rot_0_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-05-10 08:16:26
	% EndTime: 2020-05-10 08:16:26
	% DurationCPUTime: 0.01s
	% Computational Cost: add. (0->0), mult. (0->0), div. (0->0), fcn. (0->0), ass. (0->1)
	t1 = [0, 0; 0, 0; 0, 0;];
	Ja_rot = t1;
elseif link_index == 1
	%% Symbolic Calculation
	% From jacobia_rot_1_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-05-10 08:16:27
	% EndTime: 2020-05-10 08:16:27
	% DurationCPUTime: 0.01s
	% Computational Cost: add. (3->0), mult. (6->0), div. (5->0), fcn. (6->0), ass. (0->1)
	t1 = [0, 0; 0, 0; 1, 0;];
	Ja_rot = t1;
elseif link_index == 2
	%% Symbolic Calculation
	% From jacobia_rot_2_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-05-10 08:16:29
	% EndTime: 2020-05-10 08:16:31
	% DurationCPUTime: 0.66s
	% Computational Cost: add. (3106->102), mult. (8306->187), div. (108->7), fcn. (2208->6), ass. (0->90)
	t148 = sin(qJ(1));
	t197 = -t148 / 0.2e1;
	t150 = cos(qJ(1));
	t202 = t150 / 0.2e1;
	t155 = (pkin(3) ^ 2);
	t151 = 2 * t155;
	t157 = (pkin(1) ^ 2);
	t158 = pkin(7) ^ 2;
	t175 = (-pkin(4) ^ 2 + t158);
	t137 = t151 + 3 * t157 + t175;
	t147 = sin(qJ(2));
	t199 = 2 * pkin(7);
	t174 = t147 * t199;
	t140 = pkin(3) * t174;
	t149 = cos(qJ(2));
	t183 = t148 * t149;
	t138 = pkin(3) * t183;
	t165 = pkin(1) * t138;
	t124 = t137 + t140 - 0.4e1 * t165;
	t139 = pkin(3) * t147 + pkin(7);
	t133 = t139 * t150;
	t134 = t138 - pkin(1);
	t145 = t147 ^ 2;
	t176 = t140 + t158;
	t129 = t145 * t151 - t155 + t176;
	t146 = t150 ^ 2;
	t163 = -0.2e1 * t129 * t146 - t175;
	t181 = t149 * t150;
	t168 = pkin(3) * t181;
	t186 = t139 * t148;
	t128 = t168 + t186;
	t143 = t157 + t175;
	t132 = t140 + t143;
	t135 = -0.2e1 * t165;
	t126 = t135 + t132;
	t142 = (t157 - t158) * t155;
	t153 = 0.2e1 * pkin(3);
	t167 = -0.4e1 * pkin(7) * pkin(3) * t143;
	t173 = 2 * t157;
	t200 = 0.4e1 * pkin(1);
	t159 = sqrt(0.4e1 * t142 * t145 + t147 * t167 - (t157 ^ 2) - (t158 - (t153 + pkin(4)) * pkin(4)) * (t158 + (t153 - pkin(4)) * pkin(4)) + (-(2 * t155) + t163) * t173 + (-t126 * t133 + t132 * t138) * t200);
	t189 = t128 * t159;
	t111 = -t124 * t133 + t189 + (t134 * t174 + t137 * t183) * pkin(3) + (-t157 + (0.2e1 * t145 - 0.4e1) * t155 + t163) * pkin(1);
	t131 = t151 + t132;
	t194 = pkin(1) * t129;
	t170 = t150 * t194;
	t118 = t131 * t139 + 0.2e1 * t170;
	t119 = t131 * t150 + (0.4e1 * t146 - 0.2e1) * t139 * pkin(1);
	t177 = -t138 + t133;
	t127 = pkin(1) + t177;
	t193 = pkin(3) * t149;
	t112 = t118 * t148 + t119 * t193 + t127 * t159;
	t201 = t111 * t202 + t112 * t197;
	t198 = 0.2e1 * pkin(1);
	t196 = t148 / 0.2e1;
	t195 = -t150 / 0.2e1;
	t169 = pkin(1) * t133;
	t122 = t135 + t155 + t157 + 0.2e1 * t169 + t176;
	t120 = 0.1e1 / t122;
	t156 = 0.1e1 / pkin(3);
	t190 = t120 * t156;
	t104 = t201 * t190;
	t102 = 0.1e1 / t104 ^ 2;
	t162 = t111 * t196 + t112 * t202;
	t103 = t162 * t190;
	t100 = 0.1e1 / (t102 * t103 ^ 2 + 0.1e1);
	t192 = t100 * t156;
	t191 = t102 * t103;
	t144 = pkin(7) * t193;
	t141 = 0.2e1 * t144;
	t164 = 0.4e1 * t155 * t147 * t149;
	t130 = t141 + t164;
	t188 = t130 * t146;
	t187 = t139 * t146;
	t185 = t147 * t148;
	t182 = t148 * t150;
	t179 = t150 * t159;
	t136 = pkin(3) * pkin(1) * t185;
	t178 = t136 + t144;
	t172 = t148 * t155 * pkin(7);
	t115 = 0.1e1 / t159;
	t171 = 0.2e1 * t115 * ((t129 * t182 + t187 * t193) * t173 + (t126 * t186 + t132 * t168) * pkin(1));
	t166 = (-0.4e1 * t157 * t188 + (0.8e1 * t142 * t147 + t167) * t149 + (-0.8e1 * t178 * t133 + 0.8e1 * t149 ^ 2 * t172 + 0.4e1 * (-t126 * t181 - t132 * t185) * pkin(3)) * pkin(1)) * t115 / 0.2e1;
	t101 = 0.1e1 / t104;
	t161 = 0.2e1 / t122 ^ 2 * (-t162 * t101 + t201 * t191);
	t108 = t177 * t159 + t128 * t171 + (t139 * t124 + 0.4e1 * t170) * t148 + (t155 * t150 * t174 + (t137 * t150 + t187 * t200) * pkin(3)) * t149;
	t107 = -t189 + t127 * t171 + t118 * t150 + ((-t131 - 0.8e1 * t169) * t193 - 0.2e1 * t148 * t194) * t148;
	t106 = t138 * t159 + t128 * t166 - (0.4e1 * t136 + t141) * t133 - 0.2e1 * t145 * t172 + (t164 - 0.2e1 * t188) * pkin(1) + ((-t124 * t150 + t134 * t199) * t149 + (-t137 * t148 - t179) * t147) * pkin(3);
	t105 = t127 * t166 + t130 * t182 * t198 + ((t148 * t159 - t119) * t147 + (t179 + (t139 * t199 + t131) * t148 + 0.2e1 * (pkin(7) * t150 + t146 * t198 - pkin(1)) * t193) * t149) * pkin(3);
	t1 = [0, 0; 0, 0; t104 * t101 * t100 + (-t128 * pkin(1) * t161 + (-(t107 * t195 + t108 * t197) * t101 + (t107 * t196 + t108 * t195 + t162) * t191) * t120) * t192, ((-(t105 * t195 + t106 * t197) * t101 + (t105 * t196 + t106 * t195) * t191) * t120 + (pkin(1) * t168 + t178) * t161) * t192;];
	Ja_rot = t1;
elseif link_index == 3
	%% Symbolic Calculation
	% From jacobia_rot_3_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-05-10 08:17:08
	% EndTime: 2020-05-10 08:17:40
	% DurationCPUTime: 9.62s
	% Computational Cost: add. (166472->191), mult. (423832->375), div. (8076->15), fcn. (142760->14), ass. (0->196)
	t395 = 4 * pkin(1);
	t459 = 2 * pkin(1);
	t348 = 2 * pkin(2);
	t355 = (pkin(3) ^ 2);
	t458 = 4 * t355;
	t339 = sin(qJ(2));
	t453 = 0.2e1 * t339;
	t397 = pkin(7) * t453;
	t332 = pkin(3) * t397;
	t357 = pkin(1) ^ 2;
	t358 = pkin(7) ^ 2;
	t398 = -pkin(4) ^ 2 + t358;
	t335 = t357 + t398;
	t323 = t332 + t335;
	t345 = 2 * t355;
	t322 = t345 + t323;
	t434 = pkin(3) * t339;
	t331 = pkin(7) + t434;
	t343 = cos(qJ(1));
	t336 = t339 ^ 2;
	t399 = t332 + t358;
	t320 = t336 * t345 - t355 + t399;
	t435 = pkin(1) * t320;
	t391 = t343 * t435;
	t299 = t331 * t322 + 0.2e1 * t391;
	t337 = t343 ^ 2;
	t300 = t322 * t343 + (0.4e1 * t337 - 0.2e1) * t331 * pkin(1);
	t324 = t331 * t343;
	t340 = sin(qJ(1));
	t342 = cos(qJ(2));
	t407 = t340 * t342;
	t329 = pkin(3) * t407;
	t400 = -t329 + t324;
	t314 = pkin(1) + t400;
	t375 = pkin(1) * t329;
	t327 = -0.2e1 * t375;
	t312 = t327 + t323;
	t334 = (t357 - t358) * t458;
	t347 = 0.2e1 * pkin(3);
	t372 = -0.2e1 * t320 * t337 - t398;
	t387 = -0.4e1 * pkin(7) * pkin(3) * t335;
	t359 = sqrt(t334 * t336 + t339 * t387 - (t358 - (t347 + pkin(4)) * pkin(4)) * (t358 + (t347 - pkin(4)) * pkin(4)) + (-t312 * t324 + t323 * t329) * t395 + (-(4 * t355) + 0.2e1 * t372 - t357) * t357);
	t433 = pkin(3) * t342;
	t288 = t299 * t340 + t300 * t433 + t314 * t359;
	t404 = t343 * t288;
	t328 = t345 + (3 * t357) + t398;
	t309 = t328 + t332 - 0.4e1 * t375;
	t325 = t329 - pkin(1);
	t405 = t342 * t343;
	t388 = pkin(3) * t405;
	t408 = t340 * t331;
	t315 = t388 + t408;
	t414 = t315 * t359;
	t287 = -t309 * t324 + t414 + (t325 * t397 + t328 * t407) * pkin(3) + (-t357 + (0.2e1 * t336 - 0.4e1) * t355 + t372) * pkin(1);
	t409 = t340 * t287;
	t390 = pkin(1) * t324;
	t303 = t327 + t355 + t357 + 0.2e1 * t390 + t399;
	t301 = 0.1e1 / t303;
	t356 = 0.1e1 / pkin(3);
	t416 = t301 * t356;
	t278 = (t404 + t409) * t416 / 0.2e1;
	t445 = -t278 / 0.2e1;
	t457 = -t356 / 0.2e1;
	t456 = 0.2e1 * pkin(7);
	t455 = -2 * pkin(1);
	t454 = -2 * pkin(2);
	t352 = (pkin(5) ^ 2);
	t452 = 2 * t352;
	t338 = cos(pkin(8));
	t428 = sin(pkin(8));
	t319 = -t338 * t343 - t428 * t340;
	t431 = pkin(5) * t319;
	t317 = t431 * t455;
	t313 = t317 + t452;
	t316 = -pkin(1) + t431;
	t402 = t317 + t352;
	t304 = -(t459 + pkin(5)) * pkin(5) + t402;
	t305 = pkin(5) * (t459 - pkin(5)) + t402;
	t361 = sqrt(-t304 * t305);
	t318 = t338 * t340 - t428 * t343;
	t432 = pkin(5) * t318;
	t294 = -t313 * t432 - t316 * t361;
	t419 = t288 * t294;
	t413 = t318 * t361;
	t293 = pkin(5) * t413 - t316 * t313;
	t421 = t287 * t293;
	t370 = t421 / 0.4e1 + t419 / 0.4e1;
	t310 = t357 + t402;
	t415 = 0.1e1 / t310 / pkin(5);
	t385 = t356 * t415;
	t374 = t301 * t385;
	t275 = t370 * t374;
	t418 = t293 * t288;
	t420 = t287 * t294;
	t369 = t420 / 0.4e1 - t418 / 0.4e1;
	t276 = t369 * t374;
	t341 = sin(pkin(9));
	t344 = cos(pkin(9));
	t430 = pkin(6) * (-t344 * t275 + t341 * t276);
	t272 = t430 * t454;
	t350 = pkin(6) ^ 2;
	t270 = t272 + 0.2e1 * t350;
	t271 = -pkin(2) + t430;
	t403 = t272 + t350;
	t265 = -(t348 + pkin(6)) * pkin(6) + t403;
	t266 = pkin(6) * (t348 - pkin(6)) + t403;
	t360 = sqrt(-t265 * t266);
	t274 = t341 * t275 + t344 * t276;
	t429 = pkin(6) * t274;
	t251 = -t271 * t270 - t360 * t429;
	t451 = t251 / 0.2e1;
	t252 = t270 * t429 - t271 * t360;
	t450 = -t252 / 0.2e1;
	t449 = -0.1e1 / t360 / 0.2e1;
	t406 = t340 * t343;
	t411 = t331 * t337;
	t295 = 0.8e1 * (t320 * t406 + t411 * t433) * t357 + (t312 * t408 + t323 * t388) * t395;
	t441 = 0.1e1 / t359 / 0.2e1;
	t382 = t314 * t441;
	t281 = -t414 + t295 * t382 + t299 * t343 + ((-t322 - 0.8e1 * t390) * t433 - 0.2e1 * t340 * t435) * t340;
	t381 = t315 * t441;
	t282 = t400 * t359 + t295 * t381 + (t331 * t309 + 0.4e1 * t391) * t340 + (t355 * t343 * t397 + (t328 * t343 + t411 * t395) * pkin(3)) * t342;
	t311 = t315 * t459;
	t302 = 0.1e1 / t303 ^ 2;
	t436 = t343 / 0.2e1;
	t443 = -t288 / 0.2e1;
	t368 = t287 * t436 + t340 * t443;
	t365 = t302 * t368;
	t437 = -t343 / 0.2e1;
	t438 = t340 / 0.2e1;
	t448 = (-t311 * t365 + (t281 * t438 + t282 * t437) * t301) * t457 + t445;
	t394 = pkin(7) * t340 * t355;
	t333 = t433 * t456;
	t410 = t339 * t340;
	t389 = pkin(3) * t410;
	t376 = pkin(1) * t389;
	t401 = 0.2e1 * t376 + t333;
	t393 = t339 * t458;
	t321 = t342 * t393 + t333;
	t412 = t321 * t337;
	t289 = -0.4e1 * t357 * t412 + (t334 * t453 + t387) * t342 + (-t401 * t324 + 0.2e1 * t342 ^ 2 * t394 + (-t312 * t405 - t323 * t410) * pkin(3)) * t395;
	t279 = t289 * t382 + t321 * t406 * t459 + ((t340 * t359 - t300) * t339 + (t343 * t359 + (t331 * t456 + t322) * t340 + 0.2e1 * (pkin(7) * t343 + t337 * t459 - pkin(1)) * t433) * t342) * pkin(3);
	t280 = (-t343 * t434 + t329) * t359 + t289 * t381 + t412 * t455 - (t333 + 0.4e1 * t376) * t324 - 0.2e1 * t336 * t394 - t328 * t389 + (pkin(1) * t393 + (-t309 * t343 + t325 * t456) * pkin(3)) * t342;
	t306 = t388 * t459 + t401;
	t447 = (t306 * t365 + (t279 * t438 + t280 * t437) * t301) * t457;
	t277 = t368 * t416;
	t446 = t277 / 0.2e1;
	t444 = t278 / 0.2e1;
	t442 = t288 / 0.4e1;
	t440 = t293 / 0.4e1;
	t439 = t301 / 0.4e1;
	t269 = (pkin(2) ^ 2) + t403;
	t422 = 0.1e1 / t269 / pkin(6);
	t423 = t252 * t278;
	t426 = t251 * t277;
	t245 = (t426 / 0.2e1 - t423 / 0.2e1) * t422;
	t244 = 0.1e1 / t245 ^ 2;
	t424 = t252 * t277;
	t425 = t251 * t278;
	t246 = (t424 / 0.2e1 + t425 / 0.2e1) * t422;
	t427 = t244 * t246;
	t417 = 0.1e1 / t361 * (t304 + t305) * t459 * t432;
	t392 = pkin(1) / t310 ^ 2 * t318;
	t240 = 0.1e1 / (t244 * t246 ^ 2 + 0.1e1);
	t386 = t240 * t422;
	t384 = t271 * t449;
	t383 = t274 * t449;
	t379 = -t302 * t306 / 0.4e1;
	t378 = t274 * t350 * t454;
	t377 = t271 * t348 - t270;
	t373 = t302 * t311 * t415;
	t371 = pkin(6) * (t265 + t266) * t348;
	t367 = t279 * t439 + t288 * t379;
	t366 = t280 * t439 + t287 * t379;
	t364 = t302 * (-t404 / 0.2e1 - t409 / 0.2e1);
	t243 = 0.1e1 / t245;
	t363 = pkin(2) * t240 / t269 ^ 2 * ((t424 + t425) * t243 - (-t423 + t426) * t427);
	t284 = -t316 * t417 / 0.2e1 + t318 ^ 2 * pkin(1) * t452 + (t319 * t313 - t413) * pkin(5);
	t283 = (-t361 * t319 + (t417 / 0.2e1 - t313 + t316 * t459) * t318) * pkin(5);
	t264 = (t306 * t364 + (t279 * t436 + t280 * t438) * t301) * t356;
	t262 = (-t311 * t364 + ((t281 / 0.2e1 + t287 / 0.2e1) * t343 + (t443 + t282 / 0.2e1) * t340) * t301) * t356;
	t260 = (t367 * t293 - t366 * t294) * t385;
	t259 = (t366 * t293 + t367 * t294) * t385;
	t256 = (-t369 * t373 + ((-t420 / 0.2e1 + t418 / 0.2e1) * t392 + (-t282 * t294 / 0.4e1 - t287 * t284 / 0.4e1 + t283 * t442 + t281 * t440) * t415) * t301) * t356;
	t255 = (t370 * t373 + ((t421 / 0.2e1 + t419 / 0.2e1) * t392 + (t282 * t440 + t287 * t283 / 0.4e1 + t281 * t294 / 0.4e1 + t284 * t442) * t415) * t301) * t356;
	t254 = t341 * t259 - t344 * t260;
	t253 = -t344 * t259 - t341 * t260;
	t250 = t341 * t255 - t344 * t256;
	t249 = -t344 * t255 - t341 * t256;
	t248 = t253 * t371;
	t247 = t249 * t371;
	t242 = t248 * t384 + t253 * t378 + (-t253 * t360 + t254 * t270) * pkin(6);
	t241 = (t248 * t383 + t377 * t253 - t360 * t254) * pkin(6);
	t239 = t247 * t384 + t249 * t378 + (-t249 * t360 + t250 * t270) * pkin(6);
	t238 = (t247 * t383 + t377 * t249 - t360 * t250) * pkin(6);
	t1 = [0, 0; 0, 0; t249 * t363 + ((t238 * t444 + t239 * t446 + t252 * t448 + t262 * t451) * t243 - (t238 * t446 + t239 * t445 + t251 * t448 + t262 * t450) * t427) * t386, t253 * t363 + ((t241 * t444 + t242 * t446 + t252 * t447 + t264 * t451) * t243 - (t241 * t446 + t242 * t445 + t251 * t447 + t264 * t450) * t427) * t386;];
	Ja_rot = t1;
elseif link_index == 4
	%% Symbolic Calculation
	% From jacobia_rot_4_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-05-10 08:17:00
	% EndTime: 2020-05-10 08:17:25
	% DurationCPUTime: 8.13s
	% Computational Cost: add. (27610->602), mult. (87606->973), div. (374->10), fcn. (12606->6), ass. (0->417)
	t757 = pkin(3) ^ 2;
	t761 = (pkin(1) ^ 2);
	t763 = pkin(7) ^ 2;
	t897 = t761 - t763;
	t662 = t897 * t757;
	t991 = 2 * pkin(1);
	t990 = 4 * pkin(1);
	t989 = 4 * pkin(3);
	t725 = cos(qJ(1));
	t680 = pkin(1) * t725;
	t656 = t680 + pkin(7);
	t722 = sin(qJ(2));
	t678 = pkin(3) * t722;
	t623 = t678 + t656;
	t977 = 0.8e1 * t623;
	t881 = 2 * t761;
	t752 = pkin(4) ^ 2;
	t723 = sin(qJ(1));
	t724 = cos(qJ(2));
	t928 = t723 * t724;
	t653 = pkin(3) * t928;
	t805 = pkin(1) * t653;
	t907 = t761 / 0.3e1 + t763;
	t602 = -0.4e1 / 0.9e1 * t805 + 0.4e1 / 0.9e1 * t757 - t752 / 0.9e1 + t907;
	t703 = -t752 / 0.6e1;
	t712 = 0.2e1 / 0.3e1 * t757;
	t786 = t763 - t805;
	t610 = t703 + t712 + t786;
	t711 = 0.4e1 / 0.3e1 * t757;
	t685 = t761 + t763;
	t705 = -t752 / 0.3e1;
	t830 = t705 + t685;
	t642 = t711 + t830;
	t675 = -t761 / 0.3e1 + t763;
	t806 = -0.2e1 * t653;
	t694 = t725 ^ 2;
	t917 = t761 * t694;
	t861 = 0.6e1 * t917;
	t693 = t725 * t694;
	t765 = pkin(1) * t761;
	t932 = t693 * t765;
	t875 = pkin(7) * t932;
	t967 = pkin(7) * t725;
	t892 = 0.4e1 * t967;
	t920 = (pkin(7) + pkin(1)) * (pkin(7) - pkin(1));
	t554 = 0.4e1 * t875 + t602 * t861 + t642 * t920 + (t610 * t892 + t675 * t806) * pkin(1);
	t740 = 6 * t761;
	t798 = -0.4e1 * t805;
	t707 = -0.2e1 / 0.3e1 * t752;
	t748 = 0.2e1 * t763;
	t829 = t707 + t712 + t748;
	t769 = t757 ^ 2;
	t828 = t707 + t685;
	t912 = (t712 + t828) * t685 + t769;
	t566 = t642 * t798 + (t740 + t829) * t757 + t912;
	t676 = 0.10e2 / 0.3e1 * t761;
	t578 = (t676 + t829) * t757 + t912;
	t640 = -0.2e1 * t805;
	t715 = -t757 / 0.3e1;
	t673 = t715 + t763;
	t615 = t673 * t640;
	t921 = (pkin(7) + pkin(3)) * (pkin(7) - pkin(3));
	t580 = t642 * t921 + t615;
	t684 = -0.3e1 * t757 + t763;
	t815 = 0.8e1 * t875;
	t626 = t684 * t815;
	t826 = t757 + t685;
	t651 = -t752 + t826;
	t677 = t685 ^ 2;
	t759 = t761 ^ 2;
	t726 = 15 * t759;
	t727 = 15 * t761;
	t762 = t763 ^ 2;
	t744 = 0.3e1 * t762;
	t768 = pkin(3) * t757;
	t754 = t768 ^ 2;
	t607 = t640 + t642;
	t899 = -t757 + t763;
	t661 = t899 * t761;
	t886 = 0.4e1 * t680;
	t974 = 0.4e1 * t694;
	t553 = pkin(7) * t607 * t886 + t661 * t974 + t566;
	t887 = 0.2e1 * t680;
	t660 = pkin(7) * t887;
	t687 = -(3 * t761) + t763;
	t862 = 0.4e1 * t917;
	t614 = t660 + t862 + t687;
	t690 = t722 ^ 2;
	t689 = t722 * t690;
	t937 = t689 * t768;
	t872 = 0.8e1 * t937;
	t883 = 0.6e1 * t678;
	t783 = t553 * t883 + t614 * t872;
	t747 = 0.3e1 * t763;
	t900 = -t752 + t757;
	t827 = t747 + t900;
	t846 = 0.12e2 * t917;
	t935 = t690 * t757;
	t848 = 0.12e2 * t935;
	t537 = t554 * t848 + t626 + t580 * t846 + t754 + (t727 + t827) * t769 + (t827 * t740 + t900 * t748 + t726 + t744) * t757 + t677 * t651 + t783 * t656 + 0.6e1 * (t566 * t967 - t578 * t653) * pkin(1);
	t679 = pkin(3) * t724;
	t683 = t757 + t881;
	t926 = t724 * t725;
	t853 = pkin(3) * t926;
	t852 = t761 * t679;
	t622 = -t723 * t765 + t852;
	t947 = t622 * t694;
	t984 = 0.2e1 * pkin(7);
	t567 = -t897 * t679 + 0.2e1 * t947 + (t683 * t723 + t853 * t984) * pkin(1);
	t741 = 3 * t761;
	t903 = t741 + t763;
	t666 = t757 + t903;
	t625 = t666 * t679;
	t667 = 0.3e1 * t757 + t685;
	t941 = t667 * t723;
	t595 = -pkin(1) * t941 + t625;
	t860 = 0.8e1 * t761 * t768;
	t971 = 4 * t759;
	t654 = (pkin(3) * t971) + t860;
	t836 = t765 * t921;
	t597 = t654 * t724 + 0.4e1 * t723 * t836;
	t738 = 5 * t759;
	t895 = t762 + t769;
	t728 = 10 * t761;
	t904 = t728 + t748;
	t915 = t763 * t761;
	t612 = t904 * t757 + t738 + t895 + 0.6e1 * t915;
	t735 = 0.5e1 * t769;
	t618 = t735 + (t728 + 0.6e1 * t763) * t757 + t677;
	t840 = t656 * t937;
	t803 = -0.8e1 * t840;
	t871 = -0.4e1 * t935;
	t943 = t656 * t722;
	t959 = pkin(1) * t723;
	t628 = t679 - t959;
	t801 = t694 * t852;
	t565 = -0.2e1 * t801 + t625 + (0.2e1 * t628 * t967 - t941) * pkin(1);
	t980 = -0.4e1 * t565;
	t543 = t567 * t871 + t597 * t694 + (t943 * t980 + (-t612 + t815) * t724) * pkin(3) + (-0.4e1 * t595 * t967 + (t618 + t803) * t723) * pkin(1);
	t969 = pkin(7) * t722;
	t893 = 0.2e1 * t969;
	t657 = pkin(3) * t893;
	t894 = t763 - t752;
	t665 = t761 + t894;
	t621 = t657 + t665;
	t599 = t640 + t621;
	t655 = t678 + pkin(7);
	t636 = t655 * t725;
	t750 = 2 * pkin(3);
	t870 = 0.2e1 * t935;
	t613 = t657 + t870 + t899;
	t975 = -0.2e1 * t694;
	t789 = t613 * t975 - t894;
	t845 = -0.4e1 * pkin(3) * pkin(7) * t665;
	t764 = sqrt(0.4e1 * t662 * t690 + t722 * t845 - t759 - (t763 - ((t750 + pkin(4)) * pkin(4))) * (t763 + ((t750 - pkin(4)) * pkin(4))) + (-0.2e1 * t757 + t789) * t881 + (-t599 * t636 + t621 * t653) * t990);
	t529 = t537 * t623 + t543 * t764;
	t527 = 0.1e1 / t529;
	t988 = -t527 / 0.2e1;
	t632 = t763 + t757 / 0.4e1 + t761 / 0.4e1 - t752 / 0.8e1;
	t751 = t752 ^ 2;
	t905 = 0.4e1 / 0.7e1 * t763 - t752 / 0.7e1;
	t916 = t763 * t752;
	t559 = -0.32e2 / 0.21e2 * t632 * t805 + 0.5e1 / 0.42e2 * t769 + (0.16e2 / 0.21e2 * t761 + t905) * t757 + t759 / 0.7e1 + t905 * t761 + t762 - 0.3e1 / 0.7e1 * t916 + t751 / 0.42e2;
	t704 = -t752 / 0.4e1;
	t985 = t704 + t757 / 0.2e1;
	t634 = t907 + t985;
	t717 = 0.4e1 / 0.3e1 * t761;
	t563 = -0.8e1 / 0.3e1 * t634 * t805 + 0.5e1 / 0.18e2 * t769 + (t717 + t705) * t757 + t762 - t759 / 0.3e1 + t751 / 0.18e2 + (t711 + 0.2e1 / 0.3e1 * t761 + t707) * t763;
	t898 = t759 + t762;
	t902 = t748 - t752;
	t784 = t902 * t761 + t751 / 0.6e1 + t898 - t916;
	t608 = -t769 / 0.6e1 + t784;
	t719 = t761 / 0.2e1;
	t906 = t719 + t763;
	t609 = -0.2e1 / 0.3e1 * t805 + t704 + t906;
	t746 = 0.4e1 * t763;
	t669 = (t746 + t752) * t761;
	t716 = -0.2e1 / 0.3e1 * t757;
	t674 = t716 + t763;
	t706 = -t752 / 0.2e1;
	t648 = t706 + t826;
	t807 = -0.4e1 * t653;
	t790 = t648 * t807;
	t808 = 0.16e2 * t875;
	t692 = t694 ^ 2;
	t918 = t759 * t692;
	t865 = 0.8e1 * t918;
	t542 = t674 * t865 + t609 * t808 + 0.14e2 * t559 * t917 - t897 * t769 + (t669 - 0.10e2 / 0.3e1 * t759 + 0.2e1 * t762 - t916) * t757 + t608 * t920 + (0.6e1 * t563 * t967 + t675 * t790) * pkin(1);
	t782 = 0.5e1 / 0.6e1 * t769 + t784;
	t585 = (t676 + t902) * t757 + t782;
	t909 = t751 / 0.2e1 - t769 / 0.2e1;
	t797 = -0.3e1 * t916 + t744 + t909;
	t708 = -0.3e1 / 0.2e1 * t752;
	t908 = t708 + t747;
	t913 = t685 * ((t708 + t748) * t761 - 0.3e1 / 0.2e1 * t916 + t898 + t909) + t754;
	t551 = -0.6e1 * t585 * t805 + (t726 + (-0.9e1 * t752 + 0.18e2 * t763) * t761 + t797) * t757 + (t727 + t908) * t769 + t913;
	t787 = pkin(1) * t790;
	t896 = t762 - t759;
	t557 = t673 * t787 - t754 + (-t676 - t894) * t769 + (t669 + t769 / 0.6e1 - t751 / 0.6e1 + t896) * t757 + t608 * t763;
	t734 = -0.5e1 * t752;
	t737 = 7 * t759;
	t739 = 7 * t761;
	t562 = (t739 + t908) * t769 + (t737 + (t734 + 0.10e2 * t763) * t761 + t797) * t757 + t913;
	t773 = pkin(7) * t763;
	t663 = -0.12e2 * pkin(7) * t765 + t773 * t990;
	t672 = -(8 * t759) + 0.12e2 * t915;
	t573 = t663 * t725 + t672 * t694 + t808 + t865 + t898 - 0.6e1 * t915;
	t587 = t640 * t921 + t648 * t684;
	t637 = (-0.6e1 * t757 * t763 + t895) * t759;
	t681 = -0.30e2 * t752 + 0.60e2 * t763;
	t688 = t690 ^ 2;
	t733 = -0.2e1 * t752;
	t901 = t751 - t769;
	t796 = -0.6e1 * t916 + 0.6e1 * t762 + t901;
	t745 = 0.8e1 * t763;
	t600 = t765 * t807 + t971 + (0.4e1 * t757 + t733 + t745) * t761;
	t606 = -t761 + t786 + t985;
	t555 = t815 + t600 * t694 + t648 * t687 + (t606 * t892 + t806 * t920) * pkin(1);
	t841 = t555 * t937;
	t568 = t787 + (t740 + t902) * t757 + t782;
	t583 = t648 * t921 + t615;
	t889 = pkin(7) * t680;
	t843 = 0.6e1 * t889;
	t544 = t568 * t843 + t583 * t846 + t551 + t626;
	t856 = t544 * t678;
	t940 = t677 * (-t757 + t665);
	t526 = 0.16e2 * t637 * t692 + 0.32e2 * t587 * t875 + 0.24e2 * t557 * t917 + (t733 + t746 + (28 * t761)) * t754 + t651 * t940 + (0.24e2 * t542 * t690 + t681 * t759 + t796 * t740 + t901 * t748 - 0.6e1 * t762 * t752 + (28 * t765 ^ 2) + 0.4e1 * t773 ^ 2) * t757 + (0.32e2 * t841 + 0.8e1 * t856) * t656 + 0.8e1 * (t551 * t967 - t562 * t653) * pkin(1) + (0.16e2 * t573 * t688 + t681 * t761 + (70 * t759) + t769 + t796) * t769;
	t630 = 0.7e1 / 0.6e1 * t757 + t703 + t906;
	t713 = t757 / 0.3e1;
	t831 = t703 + t713 + t763;
	t633 = t717 + t831;
	t579 = -t630 * t959 + t633 * t679;
	t813 = 0.20e2 / 0.3e1 * t761;
	t833 = 0.2e1 / 0.3e1 * t752 + t712 + t746;
	t834 = 0.4e1 / 0.3e1 * t752 + t711 - 0.2e1 * t763;
	t581 = -t769 + (-t813 + t833) * t757 - (3 * t759) + t834 * t761 + t762;
	t644 = t761 + t831;
	t736 = 0.2e1 * t757;
	t668 = t736 - t897;
	t589 = t644 * t679 - t668 * t959 / 0.2e1;
	t832 = t752 / 0.3e1 + t713 + t748;
	t793 = -0.8e1 / 0.3e1 * t918 - t662 - 0.5e1 / 0.3e1 * t759 + t832 * t761 + t763 * (t705 + t673);
	t966 = pkin(7) * t759;
	t891 = -0.4e1 * t966;
	t965 = -t723 / 0.2e1;
	t545 = t723 * t693 * t891 + t579 * t862 + t793 * t679 + (t581 * t965 + t589 * t892) * pkin(1);
	t682 = -t752 - t757;
	t664 = t747 + t682;
	t942 = t664 * t761;
	t574 = t769 + (t707 + t716 + t904) * t757 + t738 + 0.2e1 * t942 + t763 * (t707 + t674);
	t570 = t574 * t679;
	t586 = t735 + ((5 * t761) + t664) * t736 + (t716 + t828) * t685;
	t949 = t586 * t723;
	t556 = -pkin(1) * t949 + t570;
	t582 = -0.3e1 * t769 + (-t813 + t834) * t757 + t833 * t761 + t896;
	t590 = -0.5e1 / 0.3e1 * t769 + (-t761 + t832) * t757 + t763 * (t715 + t830);
	t888 = -0.2e1 * t959;
	t558 = t582 * t679 + t590 * t888;
	t627 = t679 + 0.2e1 * t959;
	t647 = t706 + t666;
	t561 = t687 * t679 + 0.4e1 * t947 + (t627 * t967 + t647 * t723) * t991;
	t631 = t763 + 0.5e1 / 0.2e1 * t757 + 0.3e1 / 0.2e1 * t761 + t706;
	t591 = t631 * t679 + t684 * t959 / 0.2e1;
	t635 = 0.10e2 * t942;
	t939 = t682 * t763;
	t788 = 0.24e2 * t673 * t918 - t754 - ((21 * t761) + t664) * t769 - (t635 + t744 + (35 * t759) + 0.2e1 * t939) * t757 - (t737 + (t734 + t745 - 0.5e1 * t757) * t761 + t763 * (-t757 + t894)) * t685;
	t849 = -0.12e2 * t935;
	t641 = 0.8e1 / 0.3e1 * t757 + t830;
	t643 = t705 + t712 + t903;
	t584 = -t641 * t959 + t643 * t679;
	t649 = 0.5e1 / 0.6e1 * t757 + t719 + t703;
	t882 = 0.2e1 * t679;
	t593 = t649 * t882 + t921 * t959;
	t671 = pkin(7) * t679;
	t812 = t765 * t671;
	t864 = -0.4e1 * t917;
	t976 = -0.8e1 * t693;
	t546 = t812 * t976 + t593 * t864 + t570 + (t584 * t892 - t949) * pkin(1);
	t981 = -0.6e1 * t546;
	t611 = 0.4e1 / 0.3e1 * t917 + t660 + t675;
	t938 = t688 * t769;
	t986 = 0.7e1 * t754 + (t739 + t664) * t735 + (t635 + (21 * t759) + 0.9e1 * t762 + 0.6e1 * t939) * t757 + t940 - 0.24e2 * t611 * t938;
	t530 = t591 * t808 + t561 * t803 + t545 * t849 - 0.6e1 * t558 * t917 + (t788 * t724 + t943 * t981) * pkin(3) + (-0.6e1 * t556 * t967 + t986 * t723) * pkin(1);
	t521 = t526 * t623 + t530 * t764;
	t987 = t521 / t529 ^ 2 / 0.2e1;
	t983 = -2 * pkin(1);
	t858 = pkin(1) * t636;
	t577 = t640 + t657 + t826 + 0.2e1 * t858;
	t979 = 0.2e1 / t577 ^ 2;
	t978 = 0.6e1 * t585;
	t973 = 0.4e1 * t722;
	t972 = -0.8e1 * t725;
	t970 = pkin(1) * pkin(7);
	t968 = pkin(7) * t723;
	t964 = t723 / 0.2e1;
	t963 = -t725 / 0.2e1;
	t962 = t725 / 0.2e1;
	t961 = t764 / 0.2e1;
	t960 = pkin(1) * t675;
	t958 = pkin(3) * t764;
	t957 = t562 * pkin(1);
	t956 = -0.2e1 * t970;
	t619 = t736 + t621;
	t859 = t613 * t680;
	t569 = t619 * t655 + 0.2e1 * t859;
	t572 = t619 * t725 + (t974 - 0.2e1) * t655 * pkin(1);
	t910 = -t653 + t636;
	t603 = pkin(1) + t910;
	t541 = t569 * t723 + t572 * t679 + t603 * t764;
	t924 = t725 * t541;
	t650 = t736 + t741 + t894;
	t596 = t650 + t657 + t798;
	t638 = t653 - pkin(1);
	t944 = t655 * t723;
	t605 = t853 + t944;
	t948 = t605 * t764;
	t540 = -t596 * t636 + t948 + (t638 * t893 + t650 * t928) * pkin(3) + (-t761 + (0.2e1 * t690 - 0.4e1) * t757 + t789) * pkin(1);
	t929 = t723 * t540;
	t575 = 0.1e1 / t577;
	t758 = 1 / pkin(3);
	t950 = t575 * t758;
	t532 = (t924 + t929) * t950 / 0.2e1;
	t785 = t540 * t962 + t541 * t965;
	t531 = t785 * t950;
	t823 = t531 * t988;
	t919 = 1 / pkin(4) * t758;
	t517 = (t521 * t823 + t532 * t961) * t919;
	t516 = 0.1e1 / t517 ^ 2;
	t822 = t532 * t988;
	t518 = (t521 * t822 - t531 * t961) * t919;
	t955 = t516 * t518;
	t954 = t521 * t527;
	t549 = 0.1e1 / t764;
	t658 = 0.2e1 * t671;
	t925 = t724 * t757;
	t802 = t925 * t973;
	t617 = t658 + t802;
	t878 = t757 * t968;
	t931 = t722 * t723;
	t854 = pkin(3) * t931;
	t645 = pkin(1) * t854;
	t911 = t645 + t671;
	t952 = (t617 * t864 + (0.8e1 * t662 * t722 + t845) * t724 + (-0.8e1 * t911 * t636 + 0.8e1 * t724 ^ 2 * t878 + (-t599 * t926 - t621 * t931) * t989) * pkin(1)) * t549;
	t927 = t723 * t725;
	t945 = t655 * t694;
	t951 = t549 * ((t613 * t927 + t945 * t679) * t881 + (t599 * t944 + t621 * t853) * pkin(1));
	t914 = t765 * t694;
	t880 = pkin(7) * t914;
	t809 = -0.12e2 * t880;
	t946 = t623 * t723 * t809;
	t936 = t689 * t769;
	t934 = t690 * t768;
	t933 = t693 * t759;
	t930 = t722 * t757;
	t923 = t725 * t761;
	t922 = t725 * t764;
	t885 = -0.6e1 * t678;
	t884 = -0.4e1 * t678;
	t879 = t722 * t967;
	t877 = pkin(7) * t923;
	t876 = pkin(7) * t917;
	t874 = 0.2e1 * t951;
	t873 = -0.8e1 * t937;
	t869 = 0.3e1 * t935;
	t868 = -0.4e1 * t932;
	t867 = -0.2e1 * t932;
	t866 = 0.8e1 * t923;
	t863 = -0.2e1 * t917;
	t857 = pkin(1) * t920;
	t855 = t623 * t679;
	t851 = t675 * t680;
	t850 = 0.64e2 * t937;
	t847 = -0.32e2 * t933;
	t844 = -0.4e1 * t889;
	t842 = 0.1e1 / (t516 * t518 ^ 2 + 0.1e1) * t919;
	t839 = t656 * t934;
	t838 = t673 * t914;
	t837 = t673 * t932;
	t835 = t723 * t923;
	t825 = -t954 / 0.2e1;
	t824 = t954 / 0.2e1;
	t821 = t952 / 0.2e1;
	t820 = t952 / 0.4e1;
	t818 = pkin(7) * t864;
	t817 = pkin(7) * t863;
	t816 = pkin(7) * t862;
	t814 = 0.32e2 / 0.3e1 * t759;
	t811 = t927 * t989;
	t810 = -0.48e2 * t880;
	t804 = t921 * t966;
	t799 = t693 * t836;
	t795 = t531 * t987;
	t794 = t532 * t987;
	t792 = 0.64e2 / 0.3e1 * t632 * t765;
	t791 = t693 * t814;
	t620 = t761 * t811 * t969;
	t781 = t785 * t979;
	t780 = (-t924 / 0.2e1 - t929 / 0.2e1) * t979;
	t691 = t723 ^ 2;
	t659 = pkin(7) * t888;
	t629 = pkin(3) * t879 * t983;
	t598 = t605 * pkin(1);
	t594 = pkin(1) * t853 + t911;
	t536 = t910 * t764 + t605 * t874 + (t596 * t655 + 0.4e1 * t859) * t723 + (t879 * t736 + (t650 * t725 + t945 * t990) * pkin(3)) * t724;
	t535 = -t948 + t603 * t874 + t613 * t691 * t983 + t569 * t725 + (-t619 - 0.8e1 * t858) * t653;
	t534 = t653 * t764 + t605 * t821 - (0.4e1 * t645 + t658) * t636 - 0.2e1 * t690 * t878 + (t617 * t975 + t802) * pkin(1) + ((-t596 * t725 + t638 * t984) * t724 + (-t650 * t723 - t922) * t722) * pkin(3);
	t533 = t603 * t821 + t617 * t723 * t887 + ((t723 * t764 - t572) * t722 + (t922 + (t655 * t984 + t619) * t723 + (t694 * t991 - pkin(1) + t967) * t882) * t724) * pkin(3);
	t525 = (t629 * t871 + (-0.8e1 * t567 * t925 - t654 * t694 + ((t897 + t863) * t871 + t612 + (t666 * t886 - 0.8e1 * t932) * pkin(7)) * pkin(3)) * t722 + ((t629 + (-t666 + 0.2e1 * t917) * t678) * t884 + (pkin(3) * t980 - 0.24e2 * t934 * t959) * t724) * t656) * t764 + t543 * t821 + 0.6e1 * (0.4e1 * t614 * t724 * t839 + (t620 + (0.8e1 / 0.3e1 * t914 + 0.2e1 * t960) * t854) * t870 + t554 * t802 + 0.4e1 * t838 * t854 + t642 * t620 + t578 * t645 + ((pkin(7) * t866 + t642 * t990) * t723 * t935 + t553 * t679) * t656) * t623 + t537 * t679;
	t524 = ((t533 * t962 + t534 * t964) * t575 + t594 * t780) * t758;
	t523 = ((t533 * t964 + t534 * t963) * t575 + t594 * t781) * t758;
	t522 = (t691 * t689 * t860 + (t683 * t680 + t867) * t871 + 0.4e1 * t799 + t667 * t816 + t618 * t680) * t764 + t543 * t874 + t848 * t946 + ((-0.8e1 / 0.3e1 * t932 + t818 - 0.2e1 * t851) * t848 - 0.24e2 * t837 - 0.24e2 * t642 * t876 - 0.6e1 * t578 * t680) * t855 + (0.24e2 * (-t623 * t684 - t724 * t958) * t880 + ((0.16e2 * t622 * t935 - 0.2e1 * t597) * t764 + (-0.144e3 * t602 * t935 - 0.24e2 * t580) * t623 * t761) * t725 + (t565 * t958 * t973 - t783 * t623 - t537 + ((0.8e1 * pkin(3) * t690 * t925 + 0.4e1 * t595) * t764 + (-0.48e2 * t610 * t935 - 0.6e1 * t566) * t623) * pkin(7)) * pkin(1)) * t723 + ((t873 * t680 + ((pkin(7) * t975 + t724 * t811) * t761 + (-0.2e1 * t628 * t968 - t667 * t725) * pkin(1)) * t884) * t764 + ((t659 - 0.8e1 * t835) * t872 + (-0.8e1 * pkin(7) * t801 - 0.8e1 * t661 * t927 + (-t607 * t968 - t642 * t853) * t990) * t883) * t623) * t656;
	t520 = (-t598 * t780 + ((t535 / 0.2e1 + t540 / 0.2e1) * t725 + (-t541 / 0.2e1 + t536 / 0.2e1) * t723) * t575) * t758;
	t519 = ((t535 * t964 + t536 * t963) * t575 - t598 * t781) * t758 + t532;
	t515 = 0.1e1 / t517;
	t514 = t530 * t821 + (0.32e2 * t620 * t623 - 0.8e1 * t629 * t764) * t840 + (0.24e2 * (-0.4e1 * t611 * t936 * t959 - t545 * t930 - t561 * t839) * t764 + (0.6e1 * t542 * t930 + 0.12e2 * t555 * t839 + 0.8e1 * t573 * t936) * t977) * t724 + ((t526 + (t544 * t977 + t764 * t981) * t656) * t724 + (((t633 * t864 + t644 * t844 - t793) * t849 - 0.16e2 * t631 * t875 + t582 * t861 + t574 * t843 + ((-t687 + t864) * t873 + (t643 * t844 + 0.8e1 * t649 * t917 - t574 + t815) * t885) * t656 - t788) * t764 + ((pkin(7) * t791 + 0.16e2 * t634 * t877 + 0.4e1 * t648 * t960 + t694 * t792) * t869 + 0.8e1 * t693 * t804 + 0.12e2 * t648 * t838 + t877 * t978 + t957 + (0.4e1 * (0.2e1 * t857 + 0.4e1 * t914) * t937 + (pkin(1) * t978 + 0.24e2 * t648 * t877 + 0.24e2 * t838) * t678) * t656) * t723 * t977) * t722) * pkin(3);
	t513 = ((0.12e2 * t691 * t694 * t966 + t630 * t868 + t668 * t817 + t692 * t891) * t849 + 0.12e2 * t590 * t932 + (-t581 * t849 / 0.2e1 + t986) * t680 + (t586 * t861 + t684 * t865) * pkin(7)) * t764 + t530 * t874 + (((t647 * t887 + t816 + t868) * t873 + (-t586 * t680 + t641 * t818 - 0.4e1 * t799) * t885) * t764 + t850 * t946) * t656 + (0.24e2 * (-pkin(7) * t692 * t814 - 0.16e2 * t634 * t876 - 0.4e1 * t648 * t851 - t693 * t792) * t935 - 0.64e2 * t692 * t804 - 0.96e2 * t648 * t837 - 0.48e2 * t585 * t876 + t957 * t972 + ((-t725 * t857 + t817 + t867) * t850 + 0.48e2 * (-t585 * t680 + t648 * t818 - 0.4e1 * t837) * t678) * t656) * t855 + ((0.2e1 * (-0.2e1 * t672 * t725 - t663 + t810 + t847) * t938 + 0.8e1 * (-t600 * t725 + t606 * t956) * t840 + (-0.28e2 * t559 * t923 - 0.6e1 * t563 * t970 + t609 * t810 + t674 * t847) * t869 + t656 * (-t568 * t970 - 0.4e1 * t583 * t923 - 0.4e1 * t684 * t880) * t883 + t637 * t976 + t587 * t809 - 0.6e1 * t557 * t923 - t551 * t970 + (-0.4e1 * t841 - t856) * pkin(1)) * t977 - t526 * pkin(1) + ((-0.8e1 * t579 * t923 + t791 * t679) * t849 - 0.96e2 * t673 * t933 * t679 + t591 * t810 + 0.12e2 * t558 * t923 + (t546 * t883 + t561 * t872 + (-0.24e2 * t659 + 0.64e2 * t835) * t938 + (0.48e2 * t589 * t935 + 0.6e1 * t556) * pkin(7)) * pkin(1) + ((t622 * t972 + t627 * t956) * t873 + (-0.4e1 * t584 * t970 + t593 * t866 + 0.24e2 * t694 * t812) * t885) * t656) * t764) * t723;
	t1 = [0, 0; 0, 0; ((t513 * t822 + t519 * t961 + t520 * t825 + t522 * t794 - t531 * t951) * t515 - (t513 * t823 + t519 * t824 + t520 * t961 + t522 * t795 + t532 * t951) * t955) * t842, ((t514 * t822 + t523 * t961 + t524 * t825 + t525 * t794 - t531 * t820) * t515 - (t514 * t823 + t523 * t824 + t524 * t961 + t525 * t795 + t532 * t820) * t955) * t842;];
	Ja_rot = t1;
elseif link_index == 5
	%% Symbolic Calculation
	% From jacobia_rot_5_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-05-10 08:16:27
	% EndTime: 2020-05-10 08:16:28
	% DurationCPUTime: 0.12s
	% Computational Cost: add. (516->30), mult. (1190->61), div. (46->7), fcn. (762->6), ass. (0->37)
	t68 = pkin(1) ^ 2;
	t63 = sin(pkin(8));
	t64 = cos(pkin(8));
	t65 = sin(qJ(1));
	t80 = cos(qJ(1));
	t61 = -t63 * t65 - t64 * t80;
	t83 = pkin(1) * t61;
	t72 = pkin(5) * t83;
	t57 = t68 - t72;
	t86 = -0.2e1 * t57;
	t85 = 0.2e1 * t57;
	t84 = -t63 / 0.2e1;
	t66 = 0.2e1 * pkin(1);
	t73 = pkin(5) ^ 2 - 0.2e1 * t72;
	t52 = -(t66 + pkin(5)) * pkin(5) + t73;
	t53 = pkin(5) * (t66 - pkin(5)) + t73;
	t70 = sqrt(-t52 * t53);
	t82 = pkin(1) * t70;
	t60 = -t63 * t80 + t64 * t65;
	t81 = pkin(5) * t60;
	t79 = 0.1e1 / t70 * (t52 + t53) * pkin(1) * t81;
	t56 = t68 + t73;
	t78 = 0.1e1 / t56 / pkin(1);
	t58 = pkin(5) - t83;
	t47 = t58 * t85 + t60 * t82;
	t77 = t63 * t47;
	t48 = pkin(1) * t60 * t86 + t58 * t70;
	t76 = t63 * t48;
	t75 = t64 * t47;
	t74 = t64 * t48;
	t71 = 0.1e1 / t56 ^ 2 * t81;
	t46 = (-t75 / 0.2e1 - t76 / 0.2e1) * t78;
	t45 = (-t77 / 0.2e1 + t74 / 0.2e1) * t78;
	t44 = 0.1e1 / t46 ^ 2;
	t43 = (0.2e1 * t68 * t81 - t82) * t60 + t83 * t85 + t58 * t79;
	t42 = (-t61 * t70 + (-0.2e1 * t58 * pkin(5) + t79 + t86) * t60) * pkin(1);
	t1 = [0, 0; 0, 0; (((t42 * t84 + t64 * t43 / 0.2e1) * t78 + (t74 - t77) * t71) / t46 - ((-t64 * t42 / 0.2e1 + t43 * t84) * t78 + (-t75 - t76) * t71) * t45 * t44) / (t45 ^ 2 * t44 + 0.1e1), 0;];
	Ja_rot = t1;
elseif link_index == 6
	%% Symbolic Calculation
	% From jacobia_rot_6_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-05-10 08:16:37
	% EndTime: 2020-05-10 08:16:47
	% DurationCPUTime: 2.45s
	% Computational Cost: add. (27036->163), mult. (69876->315), div. (1180->11), fcn. (22440->12), ass. (0->155)
	t361 = 4 * pkin(1);
	t276 = cos(qJ(2));
	t277 = cos(qJ(1));
	t325 = t276 * t277;
	t309 = pkin(3) * t325;
	t273 = sin(qJ(2));
	t264 = pkin(3) * t273 + pkin(7);
	t274 = sin(qJ(1));
	t330 = t264 * t274;
	t248 = t309 + t330;
	t244 = t248 * pkin(1);
	t288 = pkin(1) ^ 2;
	t283 = pkin(5) ^ 2;
	t272 = cos(pkin(8));
	t342 = sin(pkin(8));
	t252 = -t272 * t277 - t342 * t274;
	t344 = pkin(5) * t252;
	t316 = pkin(1) * t344;
	t322 = -0.2e1 * t316 + t283;
	t243 = t288 + t322;
	t334 = 0.1e1 / t243 / pkin(5);
	t360 = t244 * t334;
	t359 = 0.2e1 * pkin(7);
	t282 = 2 * pkin(1);
	t327 = t274 * t276;
	t262 = pkin(3) * t327;
	t304 = pkin(1) * t262;
	t259 = -0.2e1 * t304;
	t286 = pkin(3) ^ 2;
	t257 = t264 * t277;
	t310 = pkin(1) * t257;
	t317 = t273 * t359;
	t265 = pkin(3) * t317;
	t289 = pkin(7) ^ 2;
	t319 = t265 + t289;
	t236 = t259 + t286 + t288 + 0.2e1 * t310 + t319;
	t235 = 0.1e1 / t236 ^ 2;
	t358 = 0.2e1 * t235;
	t246 = t283 - t316;
	t357 = -0.2e1 * t246;
	t279 = 0.2e1 * t286;
	t318 = -pkin(4) ^ 2 + t289;
	t268 = t288 + t318;
	t256 = t265 + t268;
	t255 = t279 + t256;
	t270 = t273 ^ 2;
	t253 = t270 * t279 - t286 + t319;
	t347 = pkin(1) * t253;
	t311 = t277 * t347;
	t232 = t255 * t264 + 0.2e1 * t311;
	t271 = t277 ^ 2;
	t233 = t255 * t277 + (0.4e1 * t271 - 0.2e1) * t264 * pkin(1);
	t320 = -t262 + t257;
	t247 = pkin(1) + t320;
	t245 = t259 + t256;
	t267 = (t288 - t289) * t286;
	t281 = 0.2e1 * pkin(3);
	t301 = -0.2e1 * t253 * t271 - t318;
	t308 = -0.4e1 * pkin(7) * pkin(3) * t268;
	t315 = 2 * t288;
	t290 = sqrt(0.4e1 * t267 * t270 + t273 * t308 - (t288 ^ 2) - (t289 - (t281 + pkin(4)) * pkin(4)) * (t289 + (t281 - pkin(4)) * pkin(4)) + (-0.2e1 * t286 + t301) * t315 + (-t245 * t257 + t256 * t262) * t361);
	t346 = pkin(3) * t276;
	t221 = t232 * t274 + t233 * t346 + t247 * t290;
	t356 = -t221 / 0.2e1;
	t355 = t221 / 0.4e1;
	t249 = -pkin(1) + t344;
	t251 = t272 * t274 - t342 * t277;
	t237 = -(t282 + pkin(5)) * pkin(5) + t322;
	t238 = pkin(5) * (t282 - pkin(5)) + t322;
	t291 = sqrt(-t237 * t238);
	t343 = pkin(5) * t291;
	t226 = t249 * t357 + t251 * t343;
	t354 = t226 / 0.4e1;
	t345 = pkin(5) * t251;
	t227 = -t249 * t291 + t345 * t357;
	t353 = -t227 / 0.4e1;
	t352 = t227 / 0.4e1;
	t351 = t274 / 0.2e1;
	t350 = -t277 / 0.2e1;
	t349 = t277 / 0.2e1;
	t348 = pkin(1) * t251;
	t337 = t226 * t221;
	t261 = t279 + (3 * t288) + t318;
	t242 = t261 + t265 - 0.4e1 * t304;
	t258 = t262 - pkin(1);
	t333 = t248 * t290;
	t220 = -t242 * t257 + t333 + (t258 * t317 + t261 * t327) * pkin(3) + (-t288 + (0.2e1 * t270 - 0.4e1) * t286 + t301) * pkin(1);
	t339 = t220 * t227;
	t299 = t339 / 0.4e1 - t337 / 0.4e1;
	t234 = 0.1e1 / t236;
	t287 = 0.1e1 / pkin(3);
	t307 = t287 * t334;
	t302 = t234 * t307;
	t209 = t299 * t302;
	t275 = sin(pkin(9));
	t278 = cos(pkin(9));
	t338 = t221 * t227;
	t340 = t220 * t226;
	t300 = t340 / 0.4e1 + t338 / 0.4e1;
	t293 = t300 * t302;
	t206 = t275 * t209 - t278 * t293;
	t207 = -t209 * t278 - t275 * t293;
	t298 = t220 * t349 + t274 * t356;
	t335 = t234 * t287;
	t210 = t298 * t335;
	t324 = t277 * t221;
	t328 = t274 * t220;
	t211 = (t324 + t328) * t335 / 0.2e1;
	t196 = -t206 * t210 + t207 * t211;
	t195 = 0.1e1 / t196 ^ 2;
	t197 = -t206 * t211 - t207 * t210;
	t341 = t195 * t197;
	t336 = 0.1e1 / t291 * (t237 + t238) * pkin(1) * t345;
	t269 = pkin(7) * t346;
	t266 = 0.2e1 * t269;
	t303 = 0.4e1 * t286 * t273 * t276;
	t254 = t266 + t303;
	t332 = t254 * t271;
	t331 = t264 * t271;
	t329 = t273 * t274;
	t326 = t274 * t277;
	t323 = t277 * t290;
	t260 = pkin(3) * pkin(1) * t329;
	t321 = t260 + t269;
	t314 = t274 * t286 * pkin(7);
	t224 = 0.1e1 / t290;
	t313 = 0.2e1 * t224 * ((t253 * t326 + t331 * t346) * t315 + (t245 * t330 + t256 * t309) * pkin(1));
	t312 = 0.1e1 / t243 ^ 2 * t348;
	t306 = (-0.4e1 * t288 * t332 + (0.8e1 * t267 * t273 + t308) * t276 + (-0.8e1 * t321 * t257 + 0.8e1 * t276 ^ 2 * t314 + 0.4e1 * (-t245 * t325 - t256 * t329) * pkin(3)) * pkin(1)) * t224 / 0.2e1;
	t297 = -0.2e1 * t235 * t300;
	t296 = t299 * t358;
	t295 = t298 * t358;
	t294 = (-t324 / 0.2e1 - t328 / 0.2e1) * t358;
	t239 = pkin(1) * t309 + t321;
	t217 = (0.2e1 * t283 * t348 - t343) * t251 + 0.2e1 * t246 * t344 - t249 * t336;
	t216 = (-t291 * t252 + (t249 * t282 + t336 + t357) * t251) * pkin(5);
	t215 = t320 * t290 + t248 * t313 + (t264 * t242 + 0.4e1 * t311) * t274 + (t286 * t277 * t317 + (t261 * t277 + t331 * t361) * pkin(3)) * t276;
	t214 = -t333 + t247 * t313 + t232 * t277 + ((-t255 - 0.8e1 * t310) * t346 - 0.2e1 * t274 * t347) * t274;
	t213 = t262 * t290 + t248 * t306 - (0.4e1 * t260 + t266) * t257 - 0.2e1 * t270 * t314 + (t303 - 0.2e1 * t332) * pkin(1) + ((-t242 * t277 + t258 * t359) * t276 + (-t261 * t274 - t323) * t273) * pkin(3);
	t212 = t247 * t306 + t254 * t326 * t282 + ((t274 * t290 - t233) * t273 + (t323 + (t264 * t359 + t255) * t274 + 0.2e1 * (pkin(7) * t277 + t271 * t282 - pkin(1)) * t346) * t276) * pkin(3);
	t205 = ((t212 * t349 + t213 * t351) * t234 + t239 * t294) * t287;
	t204 = ((t212 * t351 + t213 * t350) * t234 + t239 * t295) * t287;
	t203 = (-t244 * t294 + ((t214 / 0.2e1 + t220 / 0.2e1) * t277 + (t356 + t215 / 0.2e1) * t274) * t234) * t287;
	t202 = ((t214 * t351 + t215 * t350) * t234 - t244 * t295) * t287 + t211;
	t201 = ((t212 * t354 + t213 * t353) * t234 + t239 * t296) * t307;
	t200 = ((t212 * t352 + t213 * t354) * t234 + t239 * t297) * t307;
	t199 = (-t296 * t360 + ((-t339 / 0.2e1 + t337 / 0.2e1) * t312 + (t215 * t353 - t220 * t217 / 0.4e1 + t216 * t355 + t214 * t354) * t334) * t234) * t287;
	t198 = (-t297 * t360 + ((t340 / 0.2e1 + t338 / 0.2e1) * t312 + (t215 * t354 + t220 * t216 / 0.4e1 + t214 * t352 + t217 * t355) * t334) * t234) * t287;
	t194 = 0.1e1 / t196;
	t193 = -t200 * t275 + t201 * t278;
	t192 = -t200 * t278 - t201 * t275;
	t191 = -t198 * t275 + t199 * t278;
	t190 = -t198 * t278 - t199 * t275;
	t189 = 0.1e1 / (t195 * t197 ^ 2 + 0.1e1);
	t1 = [0, 0; 0, 0; ((-t190 * t211 - t191 * t210 + t202 * t207 - t203 * t206) * t194 - (-t190 * t210 + t191 * t211 + t202 * t206 + t203 * t207) * t341) * t189, ((-t192 * t211 - t193 * t210 + t204 * t207 - t205 * t206) * t194 - (-t192 * t210 + t193 * t211 + t204 * t206 + t205 * t207) * t341) * t189;];
	Ja_rot = t1;
elseif link_index == 7
	%% Symbolic Calculation
	% From jacobia_rot_7_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-05-10 08:16:26
	% EndTime: 2020-05-10 08:16:27
	% DurationCPUTime: 0.01s
	% Computational Cost: add. (3->0), mult. (6->0), div. (5->0), fcn. (6->0), ass. (0->1)
	t1 = [0, 0; 0, 0; 0, 1;];
	Ja_rot = t1;
elseif link_index == 8
	%% Symbolic Calculation
	% From jacobia_rot_8_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-05-10 08:16:27
	% EndTime: 2020-05-10 08:16:28
	% DurationCPUTime: 0.18s
	% Computational Cost: add. (592->32), mult. (1358->61), div. (54->7), fcn. (870->6), ass. (0->39)
	t68 = 2 * pkin(1);
	t69 = pkin(5) ^ 2;
	t65 = cos(pkin(8));
	t66 = sin(qJ(1));
	t67 = cos(qJ(1));
	t74 = sin(pkin(8));
	t63 = -t65 * t67 - t74 * t66;
	t84 = pkin(5) * t63;
	t73 = pkin(1) * t84;
	t75 = -0.2e1 * t73 + t69;
	t58 = (pkin(1) ^ 2) + t75;
	t76 = 0.1e1 / t58 / pkin(5);
	t60 = -pkin(1) + t84;
	t54 = -(t68 + pkin(5)) * pkin(5) + t75;
	t55 = pkin(5) * (t68 - pkin(5)) + t75;
	t71 = sqrt(-t54 * t55);
	t62 = t65 * t66 - t74 * t67;
	t85 = pkin(5) * t62;
	t59 = t69 - t73;
	t88 = -0.2e1 * t59;
	t50 = -t60 * t71 + t85 * t88;
	t79 = t50 * t66;
	t83 = pkin(5) * t71;
	t49 = t60 * t88 + t62 * t83;
	t80 = t49 * t67;
	t46 = (t80 / 0.2e1 - t79 / 0.2e1) * t76;
	t89 = 0.1e1 / t46;
	t87 = t67 / 0.2e1;
	t86 = pkin(1) * t62;
	t44 = 0.1e1 / t46 ^ 2;
	t78 = t50 * t67;
	t81 = t49 * t66;
	t72 = t81 / 0.2e1 + t78 / 0.2e1;
	t45 = t72 * t76;
	t82 = t44 * t45;
	t77 = 0.1e1 / t71 * (t54 + t55) * pkin(1) * t85;
	t43 = (0.2e1 * t69 * t86 - t83) * t62 + 0.2e1 * t59 * t84 - t60 * t77;
	t42 = (-t71 * t63 + (t60 * t68 + t77 + t88) * t62) * pkin(5);
	t1 = [0, 0; 0, 0; (0.1e1 + ((t78 + t81) * t89 - (-t79 + t80) * t82) / t58 ^ 2 * t86 + ((t66 * t42 / 0.2e1 + t43 * t87) * t89 - (t42 * t87 - t66 * t43 / 0.2e1 - t72) * t82) * t76) / (t45 ^ 2 * t44 + 0.1e1), 0;];
	Ja_rot = t1;
elseif link_index == 9
	%% Symbolic Calculation
	% From jacobia_rot_9_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-05-10 08:18:08
	% EndTime: 2020-05-10 08:19:05
	% DurationCPUTime: 20.69s
	% Computational Cost: add. (398492->206), mult. (1012930->409), div. (19488->16), fcn. (341384->14), ass. (0->212)
	t442 = 4 * pkin(1);
	t510 = 2 * pkin(1);
	t391 = 2 * pkin(2);
	t398 = (pkin(3) ^ 2);
	t509 = 4 * t398;
	t399 = 0.1e1 / pkin(3);
	t508 = -t399 / 0.2e1;
	t507 = 2 * pkin(7);
	t506 = -2 * pkin(1);
	t382 = sin(qJ(2));
	t505 = 0.2e1 * t382;
	t393 = (pkin(6) ^ 2);
	t504 = 2 * t393;
	t395 = (pkin(5) ^ 2);
	t503 = 2 * t395;
	t388 = 2 * t398;
	t444 = pkin(7) * t505;
	t375 = pkin(3) * t444;
	t401 = pkin(1) ^ 2;
	t402 = pkin(7) ^ 2;
	t445 = -pkin(4) ^ 2 + t402;
	t378 = t401 + t445;
	t366 = t375 + t378;
	t365 = t388 + t366;
	t482 = pkin(3) * t382;
	t374 = pkin(7) + t482;
	t386 = cos(qJ(1));
	t379 = t382 ^ 2;
	t446 = t375 + t402;
	t363 = t379 * t388 - t398 + t446;
	t484 = pkin(1) * t363;
	t438 = t386 * t484;
	t342 = t365 * t374 + 0.2e1 * t438;
	t380 = t386 ^ 2;
	t343 = t365 * t386 + (0.4e1 * t380 - 0.2e1) * t374 * pkin(1);
	t367 = t374 * t386;
	t383 = sin(qJ(1));
	t385 = cos(qJ(2));
	t455 = t383 * t385;
	t372 = pkin(3) * t455;
	t447 = -t372 + t367;
	t357 = pkin(1) + t447;
	t421 = pkin(1) * t372;
	t370 = -0.2e1 * t421;
	t355 = t370 + t366;
	t377 = (t401 - t402) * t509;
	t390 = 0.2e1 * pkin(3);
	t417 = -0.2e1 * t363 * t380 - t445;
	t434 = -0.4e1 * pkin(3) * pkin(7) * t378;
	t403 = sqrt(t377 * t379 + t382 * t434 - (t402 - (t390 + pkin(4)) * pkin(4)) * (t402 + (t390 - pkin(4)) * pkin(4)) + (-t355 * t367 + t366 * t372) * t442 + (-(4 * t398) + 0.2e1 * t417 - t401) * t401);
	t481 = pkin(3) * t385;
	t331 = t342 * t383 + t343 * t481 + t357 * t403;
	t381 = cos(pkin(8));
	t476 = sin(pkin(8));
	t362 = -t381 * t386 - t383 * t476;
	t479 = pkin(5) * t362;
	t360 = t479 * t506;
	t356 = t360 + t503;
	t359 = -pkin(1) + t479;
	t449 = t360 + t395;
	t347 = -(t510 + pkin(5)) * pkin(5) + t449;
	t348 = pkin(5) * (t510 - pkin(5)) + t449;
	t405 = sqrt(-t347 * t348);
	t361 = t381 * t383 - t386 * t476;
	t480 = pkin(5) * t361;
	t337 = -t356 * t480 - t359 * t405;
	t467 = t331 * t337;
	t371 = t388 + 3 * t401 + t445;
	t352 = t371 + t375 - 0.4e1 * t421;
	t368 = t372 - pkin(1);
	t453 = t385 * t386;
	t435 = pkin(3) * t453;
	t458 = t374 * t383;
	t358 = t435 + t458;
	t462 = t358 * t403;
	t330 = -t352 * t367 + t462 + (t368 * t444 + t371 * t455) * pkin(3) + (-t401 + (0.2e1 * t379 - 0.4e1) * t398 + t417) * pkin(1);
	t461 = t361 * t405;
	t336 = pkin(5) * t461 - t356 * t359;
	t469 = t330 * t336;
	t415 = t469 / 0.4e1 + t467 / 0.4e1;
	t437 = pkin(1) * t367;
	t346 = t370 + t398 + t401 + 0.2e1 * t437 + t446;
	t344 = 0.1e1 / t346;
	t353 = t401 + t449;
	t463 = 0.1e1 / t353 / pkin(5);
	t433 = t399 * t463;
	t420 = t344 * t433;
	t318 = t415 * t420;
	t466 = t336 * t331;
	t468 = t330 * t337;
	t414 = t468 / 0.4e1 - t466 / 0.4e1;
	t319 = t414 * t420;
	t384 = sin(pkin(9));
	t387 = cos(pkin(9));
	t316 = t318 * t387 - t319 * t384;
	t478 = pkin(6) * t316;
	t315 = t478 * t391;
	t313 = t315 + t504;
	t314 = -pkin(2) - t478;
	t450 = t315 + t393;
	t308 = -(t391 + pkin(6)) * pkin(6) + t450;
	t309 = pkin(6) * (t391 - pkin(6)) + t450;
	t404 = sqrt(-t308 * t309);
	t317 = t318 * t384 + t319 * t387;
	t477 = pkin(6) * t317;
	t294 = -t313 * t314 - t404 * t477;
	t502 = -t294 / 0.2e1;
	t295 = t313 * t477 - t314 * t404;
	t501 = t295 / 0.2e1;
	t301 = 0.1e1 / t404;
	t500 = -t301 / 0.2e1;
	t499 = -t301 / 0.4e1;
	t454 = t383 * t386;
	t459 = t374 * t380;
	t338 = 0.8e1 * (t363 * t454 + t459 * t481) * t401 + (t355 * t458 + t366 * t435) * t442;
	t491 = 0.1e1 / t403 / 0.2e1;
	t428 = t357 * t491;
	t324 = -t462 + t338 * t428 + t342 * t386 + ((-t365 - 0.8e1 * t437) * t481 - 0.2e1 * t383 * t484) * t383;
	t427 = t358 * t491;
	t325 = t447 * t403 + t338 * t427 + (t352 * t374 + 0.4e1 * t438) * t383 + (t398 * t386 * t444 + (t371 * t386 + t459 * t442) * pkin(3)) * t385;
	t354 = t358 * t510;
	t345 = 0.1e1 / t346 ^ 2;
	t452 = t386 * t331;
	t456 = t383 * t330;
	t407 = t345 * (-t452 / 0.2e1 - t456 / 0.2e1);
	t493 = -t331 / 0.2e1;
	t498 = (-t354 * t407 + ((t324 / 0.2e1 + t330 / 0.2e1) * t386 + (t493 + t325 / 0.2e1) * t383) * t344) * t508;
	t441 = pkin(7) * t383 * t398;
	t376 = t481 * t507;
	t457 = t382 * t383;
	t436 = pkin(3) * t457;
	t422 = pkin(1) * t436;
	t448 = 0.2e1 * t422 + t376;
	t440 = t382 * t509;
	t364 = t385 * t440 + t376;
	t460 = t364 * t380;
	t332 = -0.4e1 * t401 * t460 + (t377 * t505 + t434) * t385 + (-t448 * t367 + 0.2e1 * t385 ^ 2 * t441 + (-t355 * t453 - t366 * t457) * pkin(3)) * t442;
	t322 = t332 * t428 + t364 * t454 * t510 + ((t383 * t403 - t343) * t382 + (t386 * t403 + (t374 * t507 + t365) * t383 + 0.2e1 * (pkin(7) * t386 + t380 * t510 - pkin(1)) * t481) * t385) * pkin(3);
	t323 = (-t386 * t482 + t372) * t403 + t332 * t427 + t460 * t506 - (t376 + 0.4e1 * t422) * t367 - 0.2e1 * t379 * t441 - t371 * t436 + (pkin(1) * t440 + (-t352 * t386 + t368 * t507) * pkin(3)) * t385;
	t349 = t435 * t510 + t448;
	t486 = t386 / 0.2e1;
	t488 = t383 / 0.2e1;
	t497 = (t349 * t407 + (t322 * t486 + t323 * t488) * t344) * t508;
	t413 = t330 * t486 + t383 * t493;
	t464 = t344 * t399;
	t320 = t413 * t464;
	t496 = t320 / 0.2e1;
	t495 = -t320 / 0.2e1;
	t321 = (t452 + t456) * t464 / 0.2e1;
	t494 = -t321 / 0.2e1;
	t492 = t331 / 0.4e1;
	t490 = t336 / 0.4e1;
	t489 = t344 / 0.4e1;
	t487 = -t386 / 0.2e1;
	t485 = -t404 / 0.2e1;
	t312 = (pkin(2) ^ 2) + t450;
	t483 = pkin(2) / t312 ^ 2;
	t470 = t321 * t295;
	t473 = t320 * t294;
	t394 = 0.1e1 / pkin(6);
	t474 = 0.1e1 / t312 * t394;
	t288 = (t473 / 0.2e1 - t470 / 0.2e1) * t474;
	t471 = t321 * t294;
	t472 = t320 * t295;
	t289 = (-t472 / 0.2e1 - t471 / 0.2e1) * t474;
	t451 = t394 / pkin(2);
	t418 = t451 * t485;
	t285 = t288 * t316 + t289 * t418;
	t283 = 0.1e1 / t285 ^ 2;
	t284 = t288 * t418 - t289 * t316;
	t475 = t283 * t284;
	t465 = 0.1e1 / t405 * (t347 + t348) * t510 * t480;
	t439 = pkin(1) / t353 ^ 2 * t361;
	t326 = (-t405 * t362 + (t465 / 0.2e1 - t356 + t359 * t510) * t361) * pkin(5);
	t327 = -t359 * t465 / 0.2e1 + t361 ^ 2 * pkin(1) * t503 + (t356 * t362 - t461) * pkin(5);
	t419 = t345 * t354 * t463;
	t298 = (t415 * t419 + ((t469 / 0.2e1 + t467 / 0.2e1) * t439 + (t325 * t490 + t330 * t326 / 0.4e1 + t324 * t337 / 0.4e1 + t327 * t492) * t463) * t344) * t399;
	t299 = (-t414 * t419 + ((-t468 / 0.2e1 + t466 / 0.2e1) * t439 + (-t325 * t337 / 0.4e1 - t330 * t327 / 0.4e1 + t326 * t492 + t324 * t490) * t463) * t344) * t399;
	t292 = t298 * t387 + t299 * t384;
	t416 = pkin(6) * (-t308 - t309) * t391;
	t290 = t292 * t416;
	t432 = t290 * t499;
	t425 = -t345 * t349 / 0.4e1;
	t411 = t323 * t489 + t330 * t425;
	t412 = t322 * t489 + t331 * t425;
	t302 = (t336 * t411 + t337 * t412) * t433;
	t303 = (t336 * t412 - t337 * t411) * t433;
	t296 = t302 * t387 + t303 * t384;
	t291 = t296 * t416;
	t431 = t291 * t499;
	t430 = t314 * t500;
	t429 = t317 * t500;
	t424 = pkin(2) * t317 * t504;
	t423 = -0.2e1 * pkin(2) * t314 + t313;
	t410 = (t471 + t472) * t483;
	t409 = (t470 - t473) * t483;
	t408 = t345 * t413;
	t306 = (t349 * t408 + (t322 * t488 + t323 * t487) * t344) * t399;
	t304 = (-t354 * t408 + (t324 * t488 + t325 * t487) * t344) * t399 + t321;
	t297 = t302 * t384 - t303 * t387;
	t293 = t298 * t384 - t299 * t387;
	t287 = t291 * t430 + t296 * t424 + (t296 * t404 + t297 * t313) * pkin(6);
	t286 = (t291 * t429 + t296 * t423 - t404 * t297) * pkin(6);
	t282 = 0.1e1 / t285;
	t281 = t290 * t430 + t292 * t424 + (t292 * t404 + t293 * t313) * pkin(6);
	t280 = (t290 * t429 + t292 * t423 - t404 * t293) * pkin(6);
	t279 = 0.1e1 / (t283 * t284 ^ 2 + 0.1e1);
	t278 = t296 * t410 + (t286 * t494 + t287 * t495 + t294 * t497 + t306 * t501) * t474;
	t277 = t296 * t409 + (t286 * t496 + t287 * t494 + t295 * t497 + t306 * t502) * t474;
	t276 = t292 * t410 + (t280 * t494 + t281 * t495 + t294 * t498 + t304 * t501) * t474;
	t275 = t292 * t409 + (t280 * t496 + t281 * t494 + t295 * t498 + t304 * t502) * t474;
	t1 = [0, 0; 0, 0; ((-t276 * t316 - t289 * t292 + (t275 * t485 + t288 * t432) * t451) * t282 - (t275 * t316 + t288 * t292 + (t276 * t485 + t289 * t432) * t451) * t475) * t279, ((-t278 * t316 - t289 * t296 + (t277 * t485 + t288 * t431) * t451) * t282 - (t277 * t316 + t288 * t296 + (t278 * t485 + t289 * t431) * t451) * t475) * t279;];
	Ja_rot = t1;
elseif link_index == 10
	%% Symbolic Calculation
	% From jacobia_rot_10_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-05-10 08:17:36
	% EndTime: 2020-05-10 08:18:21
	% DurationCPUTime: 16.49s
	% Computational Cost: add. (191196->657), mult. (617916->1081), div. (1856->11), fcn. (80132->6), ass. (0->465)
	t1107 = 4 * pkin(1);
	t809 = sin(qJ(2));
	t764 = pkin(3) * t809;
	t987 = 0.8e1 * t764;
	t775 = t809 ^ 2;
	t774 = t809 * t775;
	t847 = pkin(3) ^ 2;
	t859 = pkin(3) * t847;
	t1051 = t774 * t859;
	t957 = 0.32e2 * t1051;
	t1106 = 6 * pkin(1);
	t854 = (pkin(7) ^ 2);
	t838 = 2 * t854;
	t842 = (pkin(4) ^ 2);
	t1008 = t838 - t842;
	t852 = pkin(1) ^ 2;
	t781 = 0.10e2 / 0.3e1 * t852;
	t860 = t847 ^ 2;
	t850 = t852 ^ 2;
	t853 = t854 ^ 2;
	t1004 = t850 + t853;
	t1029 = t854 * t842;
	t841 = t842 ^ 2;
	t879 = (t1008 * t852) + t1004 - t1029 + t841 / 0.6e1;
	t875 = 0.5e1 / 0.6e1 * t860 + t879;
	t669 = (t781 + t1008) * t847 + t875;
	t1105 = -0.6e1 * t669;
	t811 = cos(qJ(2));
	t765 = pkin(3) * t811;
	t986 = 0.2e1 * t765;
	t1104 = 4 * t852;
	t830 = 6 * t852;
	t1103 = 8 * t852;
	t815 = 10 * t852;
	t1005 = -t847 + t854;
	t1033 = t847 * t775;
	t1091 = 0.2e1 * t809;
	t1000 = pkin(7) * t1091;
	t746 = pkin(3) * t1000;
	t697 = t1005 + t746 + 0.2e1 * t1033;
	t812 = cos(qJ(1));
	t779 = t812 ^ 2;
	t1059 = t697 * t779;
	t1001 = t854 - t842;
	t753 = t852 + t1001;
	t708 = t746 + t753;
	t810 = sin(qJ(1));
	t1043 = t810 * t811;
	t741 = pkin(3) * t1043;
	t902 = pkin(1) * t741;
	t728 = -0.2e1 * t902;
	t681 = t728 + t708;
	t744 = t764 + pkin(7);
	t725 = t744 * t812;
	t1032 = t847 * t854;
	t780 = t847 * t1104;
	t751 = t780 - 0.4e1 * t1032;
	t839 = -2 * t854;
	t840 = 0.2e1 * pkin(3);
	t950 = -0.4e1 * pkin(3) * pkin(7) * t753;
	t855 = sqrt(t751 * t775 + t809 * t950 - t850 - (t854 - (t840 + pkin(4)) * pkin(4)) * (t854 + (t840 - pkin(4)) * pkin(4)) + (t839 + (2 * t842) - 0.4e1 * t847 - 0.4e1 * t1059) * t852 + (-t681 * t725 + t708 * t741) * t1107);
	t631 = 0.1e1 / t855;
	t1102 = t631 / 0.4e1;
	t822 = -5 * t842;
	t1010 = t822 - 0.5e1 * t847;
	t773 = t775 ^ 2;
	t1052 = t773 * t860;
	t770 = t852 + t854;
	t763 = t770 ^ 2;
	t1054 = t763 * (-t847 + t753);
	t1030 = t852 * t779;
	t766 = pkin(1) * t812;
	t992 = 0.2e1 * t766;
	t749 = pkin(7) * t992;
	t762 = -t852 / 0.3e1 + t854;
	t694 = 0.4e1 / 0.3e1 * t1030 + t749 + t762;
	t837 = 3 * t854;
	t1099 = t837 - t842 - t847;
	t737 = t1099 * t815;
	t823 = -6 * t842;
	t844 = t859 ^ 2;
	t1101 = 0.7e1 * t844 + ((35 * t852) + (15 * t854) + t1010) * t860 + ((21 * t850) + t737 + (9 * t853) + (t823 - 0.6e1 * t847) * t854) * t847 + t1054 - 0.24e2 * t694 * t1052;
	t791 = -t842 / 0.4e1;
	t1100 = t791 + t847 / 0.2e1;
	t1013 = 15 * t852 + t837;
	t1017 = t841 / 0.2e1 - t860 / 0.2e1;
	t795 = -0.3e1 / 0.2e1 * t842;
	t1022 = t770 * ((t795 + t838) * t852 - 0.3e1 / 0.2e1 * t1029 + t1004 + t1017) + t844;
	t813 = 15 * t850;
	t820 = 18 * t854;
	t833 = 3 * t853;
	t893 = -(3 * t1029) + t833 + t1017;
	t633 = t902 * t1105 + t1022 + (t813 + ((t820 - 9 * t842) * t852) + t893) * t847 + (t795 + t1013) * t860;
	t793 = -t842 / 0.2e1;
	t931 = t847 + t770;
	t735 = t793 + t931;
	t907 = -0.4e1 * t741;
	t887 = t735 * t907;
	t885 = pkin(1) * t887;
	t650 = t885 + (t830 + t1008) * t847 + t875;
	t1037 = (pkin(7) + pkin(3)) * (pkin(7) - pkin(3));
	t802 = -t847 / 0.3e1;
	t760 = t802 + t854;
	t699 = t760 * t728;
	t663 = t735 * t1037 + t699;
	t769 = -0.3e1 * t847 + t854;
	t778 = t812 * t779;
	t856 = pkin(1) * t852;
	t1048 = t778 * t856;
	t981 = pkin(7) * t1048;
	t912 = 0.8e1 * t981;
	t714 = t769 * t912;
	t994 = pkin(7) * t766;
	t948 = 0.6e1 * t994;
	t951 = 0.12e2 * t1030;
	t626 = t650 * t948 + t663 * t951 + t633 + t714;
	t1036 = (pkin(7) + pkin(1)) * (pkin(7) - pkin(1));
	t821 = -2 * t842;
	t834 = 8 * t854;
	t682 = t856 * t907 + t780 + (4 * t850) + ((t821 + t834) * t852);
	t884 = t854 - t902;
	t688 = -t852 + t884 + t1100;
	t772 = -3 * t852 + t854;
	t906 = -0.2e1 * t741;
	t1085 = pkin(7) * t812;
	t998 = 0.4e1 * t1085;
	t636 = t912 + t682 * t779 + t735 * t772 + (t906 * t1036 + t688 * t998) * pkin(1);
	t1098 = t626 * t987 + t636 * t957;
	t1097 = 0.2e1 * pkin(7);
	t1096 = -2 * pkin(1);
	t755 = 0.3e1 * t847 + t770;
	t1055 = t755 * t810;
	t831 = 3 * t852;
	t1009 = t831 + t854;
	t754 = t847 + t1009;
	t713 = t754 * t765;
	t1068 = pkin(1) * t810;
	t717 = t765 - t1068;
	t960 = t852 * t765;
	t899 = t779 * t960;
	t999 = 0.2e1 * t1085;
	t646 = -0.2e1 * t899 + t713 + (t717 * t999 - t1055) * pkin(1);
	t1094 = -0.4e1 * t646;
	t745 = t766 + pkin(7);
	t711 = t764 + t745;
	t1093 = 0.8e1 * t711;
	t1090 = -0.2e1 * t812;
	t1089 = -0.6e1 * t855;
	t1088 = pkin(1) * pkin(7);
	t1087 = pkin(7) * t779;
	t1086 = pkin(7) * t810;
	t1084 = pkin(7) * t850;
	t1016 = t852 / 0.3e1 + t854;
	t684 = -0.4e1 / 0.9e1 * t902 + 0.4e1 / 0.9e1 * t847 - t842 / 0.9e1 + t1016;
	t790 = -t842 / 0.6e1;
	t799 = 0.2e1 / 0.3e1 * t847;
	t693 = t790 + t799 + t884;
	t798 = 0.4e1 / 0.3e1 * t847;
	t792 = -t842 / 0.3e1;
	t935 = t792 + t770;
	t730 = t798 + t935;
	t970 = 0.6e1 * t1030;
	t635 = 0.4e1 * t981 + t684 * t970 + t730 * t1036 + (t693 * t998 + t762 * t906) * pkin(1);
	t794 = -0.2e1 / 0.3e1 * t842;
	t933 = t794 + t770;
	t1020 = (t799 + t933) * t770 + t860;
	t894 = -0.4e1 * t902;
	t934 = t794 + t799 + t838;
	t647 = t730 * t894 + t1020 + (t830 + t934) * t847;
	t661 = t730 * t1037 + t699;
	t662 = (t781 + t934) * t847 + t1020;
	t739 = -t842 + t931;
	t825 = 0.2e1 * t847;
	t689 = t728 + t730;
	t750 = t1005 * t1104;
	t991 = 0.4e1 * t766;
	t637 = pkin(7) * t689 * t991 + t750 * t779 + t647;
	t971 = 0.4e1 * t1030;
	t698 = t749 + t971 + t772;
	t979 = 0.8e1 * t1051;
	t988 = 0.6e1 * t764;
	t878 = t637 * t988 + t698 * t979;
	t954 = 0.12e2 * t1033;
	t619 = t635 * t954 + t714 + t661 * t951 + t844 + (-t842 + t847 + t1013) * t860 + (t813 + (t820 + t823 + 0.6e1 * t847) * t852 + t833 + (t821 + t825) * t854) * t847 + t763 * t739 + t878 * t745 + (t647 * t1085 - t662 * t741) * t1106;
	t1056 = t745 * t809;
	t881 = -t810 * t856 + t960;
	t709 = 0.2e1 * t881;
	t747 = pkin(7) * t986;
	t768 = t847 + (2 * t852);
	t771 = -t852 + t854;
	t649 = t771 * t765 + t709 * t779 + (t812 * t747 + t768 * t810) * pkin(1);
	t677 = -pkin(1) * t1055 + t713;
	t1067 = pkin(3) * t850;
	t969 = t859 * t1103;
	t743 = t969 + 0.4e1 * t1067;
	t942 = t856 * t1037;
	t679 = t743 * t811 + 0.4e1 * t810 * t942;
	t1002 = t853 + t860;
	t1012 = t815 + t838;
	t1028 = t854 * t852;
	t829 = 5 * t850;
	t695 = t1012 * t847 + t1002 + (6 * t1028) + t829;
	t824 = 0.5e1 * t860;
	t835 = 6 * t854;
	t704 = t824 + (t815 + t835) * t847 + t763;
	t945 = t745 * t1051;
	t900 = -0.8e1 * t945;
	t976 = -0.4e1 * t1033;
	t624 = t649 * t976 + t679 * t779 + (t1056 * t1094 + (-t695 + t912) * t811) * pkin(3) + (-0.4e1 * t677 * t1085 + (t704 + t900) * t810) * pkin(1);
	t611 = t619 * t711 + t624 * t855;
	t609 = 0.1e1 / t611;
	t1083 = t609 / 0.2e1;
	t1082 = t609 / 0.4e1;
	t610 = 0.1e1 / t611 ^ 2;
	t1081 = -t610 / 0.2e1;
	t1080 = -t610 / 0.4e1;
	t1079 = t631 / 0.2e1;
	t1078 = -t810 / 0.2e1;
	t1077 = t810 / 0.2e1;
	t1076 = -t812 / 0.2e1;
	t1075 = t812 / 0.2e1;
	t1074 = -t855 / 0.2e1;
	t1073 = -t855 / 0.4e1;
	t1072 = t855 / 0.2e1;
	t1071 = t855 / 0.4e1;
	t1070 = pkin(1) * t762;
	t1069 = pkin(1) * t779;
	t828 = 7 * t850;
	t642 = (t795 + t837 + (7 * t852)) * t860 + (t828 + ((t822 + 10 * t854) * t852) + t893) * t847 + t1022;
	t1066 = t642 * pkin(1);
	t1065 = -0.6e1 * t1088;
	t1064 = -0.4e1 * t1088;
	t1007 = t841 - t860;
	t1014 = 0.4e1 / 0.7e1 * t854 - t842 / 0.7e1;
	t722 = t854 + t847 / 0.4e1 + t852 / 0.4e1 - t842 / 0.8e1;
	t644 = -0.32e2 / 0.21e2 * t722 * t902 + 0.5e1 / 0.42e2 * t860 + (0.16e2 / 0.21e2 * t852 + t1014) * t847 + t850 / 0.7e1 + t1014 * t852 + t853 - 0.3e1 / 0.7e1 * t1029 + t841 / 0.42e2;
	t724 = t1016 + t1100;
	t804 = 0.4e1 / 0.3e1 * t852;
	t645 = -0.8e1 / 0.3e1 * t724 * t902 + 0.5e1 / 0.18e2 * t860 + (t804 + t792) * t847 + t853 - t850 / 0.3e1 + t841 / 0.18e2 + (t798 + 0.2e1 / 0.3e1 * t852 + t794) * t854;
	t690 = -t860 / 0.6e1 + t879;
	t806 = t852 / 0.2e1;
	t1015 = t806 + t854;
	t692 = -0.2e1 / 0.3e1 * t902 + t791 + t1015;
	t836 = 4 * t854;
	t757 = (t836 + t842) * t852;
	t803 = -0.2e1 / 0.3e1 * t847;
	t761 = t803 + t854;
	t905 = 0.16e2 * t981;
	t777 = t779 ^ 2;
	t1031 = t850 * t777;
	t974 = 0.8e1 * t1031;
	t625 = t761 * t974 + t692 * t905 + 0.14e2 * t644 * t1030 + t771 * t860 + (-t1029 + t757 - 0.10e2 / 0.3e1 * t850 + (2 * t853)) * t847 + t690 * t1036 + (0.6e1 * t645 * t1085 + t762 * t887) * pkin(1);
	t1003 = t853 - t850;
	t638 = t760 * t885 - t844 + (-t781 - t1001) * t860 + (t757 + t860 / 0.6e1 - t841 / 0.6e1 + t1003) * t847 + t690 * t854;
	t864 = pkin(7) * t854;
	t752 = -0.12e2 * pkin(7) * t856 + t1107 * t864;
	t759 = -8 * t850 + 12 * t1028;
	t654 = t752 * t812 + t759 * t779 + t1004 - (6 * t1028) + t905 + t974;
	t665 = t728 * t1037 + t735 * t769;
	t715 = 0.16e2 * (t1002 - 0.6e1 * t1032) * t850;
	t767 = -30 * t842 + 60 * t854;
	t882 = t1007 + (6 * t853) - (6 * t1029);
	t608 = t715 * t777 + 0.32e2 * t665 * t981 + 0.24e2 * t638 * t1030 + (t821 + t836 + 28 * t852) * t844 + t739 * t1054 + (t1007 * t838 + 0.24e2 * t625 * t775 + (t767 * t850) + (t853 * t823) + t830 * t882 + (28 * t856 ^ 2) + 0.4e1 * t864 ^ 2) * t847 + t1098 * t745 + 0.8e1 * (t633 * t1085 - t642 * t741) * pkin(1) + (0.16e2 * t654 * t773 + (t767 * t852) + (70 * t850) + t860 + t882) * t860;
	t720 = 0.7e1 / 0.6e1 * t847 + t790 + t1015;
	t800 = t847 / 0.3e1;
	t936 = t790 + t800 + t854;
	t723 = t804 + t936;
	t660 = -t720 * t1068 + t723 * t765;
	t782 = -0.20e2 / 0.3e1 * t852;
	t938 = 0.2e1 / 0.3e1 * t842 + t799 + t836;
	t939 = 0.4e1 / 0.3e1 * t842 + t798 + t839;
	t667 = -t860 + (t782 + t938) * t847 - (3 * t850) + t939 * t852 + t853;
	t732 = t852 + t936;
	t756 = t825 + t771;
	t671 = t732 * t765 - t756 * t1068 / 0.2e1;
	t937 = t842 / 0.3e1 + t800 + t838;
	t892 = -0.8e1 / 0.3e1 * t1031 + t847 * t771 - 0.5e1 / 0.3e1 * t850 + t937 * t852 + t854 * (t792 + t760);
	t997 = -0.4e1 * t1084;
	t627 = t810 * t778 * t997 + t660 * t971 + t892 * t765 + (t667 * t1078 + t671 * t998) * pkin(1);
	t1011 = t821 - 0.2e1 * t847;
	t932 = t835 + t1011;
	t670 = t824 + (t815 + t932) * t847 + (t803 + t933) * t770;
	t1061 = t670 * t810;
	t656 = t860 + (t794 + t803 + t1012) * t847 + t829 + t932 * t852 + t854 * (t794 + t761);
	t652 = t656 * t765;
	t729 = 0.8e1 / 0.3e1 * t847 + t935;
	t731 = t792 + t799 + t1009;
	t664 = -t729 * t1068 + t731 * t765;
	t736 = 0.5e1 / 0.6e1 * t847 + t806 + t790;
	t675 = t1037 * t1068 + t736 * t986;
	t959 = t856 * t765;
	t898 = t778 * t959;
	t973 = -0.4e1 * t1030;
	t628 = -0.8e1 * pkin(7) * t898 + t675 * t973 + t652 + (t664 * t998 - t1061) * pkin(1);
	t639 = -pkin(1) * t1061 + t652;
	t668 = -0.3e1 * t860 + (t782 + t939) * t847 + t938 * t852 + t1003;
	t672 = -0.5e1 / 0.3e1 * t860 + (-t852 + t937) * t847 + t854 * (t802 + t935);
	t993 = -0.2e1 * t1068;
	t640 = t668 * t765 + t672 * t993;
	t710 = 0.4e1 * t881;
	t716 = t765 + 0.2e1 * t1068;
	t734 = t793 + t754;
	t996 = 2 * pkin(1);
	t643 = t772 * t765 + t710 * t779 + (t716 * t1085 + t734 * t810) * t996;
	t1053 = t769 * t810;
	t721 = t854 + 0.5e1 / 0.2e1 * t847 + 0.3e1 / 0.2e1 * t852 + t793;
	t673 = t721 * t765 + pkin(1) * t1053 / 0.2e1;
	t886 = 0.24e2 * t760 * t1031 - t844 - ((21 * t852) + t1099) * t860 - (t1011 * t854 + t737 + t833 + (35 * t850)) * t847 - (t828 + (t834 + t1010) * t852 + t854 * (-t847 + t1001)) * t770;
	t955 = -0.12e2 * t1033;
	t612 = t673 * t905 + t643 * t900 + t627 * t955 - 0.6e1 * t640 * t1030 + (-0.6e1 * t628 * t1056 + t811 * t886) * pkin(3) + (-0.6e1 * t639 * t1085 + t1101 * t810) * pkin(1);
	t603 = t608 * t711 + t612 * t855;
	t706 = t825 + t708;
	t968 = t697 * t766;
	t651 = t706 * t744 + 0.2e1 * t968;
	t653 = t706 * t812 + (0.4e1 * t779 - 0.2e1) * t744 * pkin(1);
	t1018 = -t741 + t725;
	t685 = pkin(1) + t1018;
	t623 = t651 * t810 + t653 * t765 + t685 * t855;
	t1057 = t744 * t810;
	t1041 = t811 * t812;
	t961 = pkin(3) * t1041;
	t687 = t961 + t1057;
	t1060 = t687 * t855;
	t738 = t825 + t831 + t1001;
	t678 = t738 + t746 + t894;
	t726 = t741 - pkin(1);
	t622 = -t678 * t725 + t1060 + (t726 * t1000 + t738 * t1043) * pkin(3) + (-0.2e1 * t1059 + (0.2e1 * t775 - 0.4e1) * t847 - t753) * pkin(1);
	t928 = t622 * t1082;
	t876 = t623 * t1073 + t603 * t928;
	t843 = 0.1e1 / pkin(4);
	t1034 = t843 / pkin(3) ^ 2;
	t966 = pkin(1) * t725;
	t659 = t728 + t746 + t931 + 0.2e1 * t966;
	t657 = 0.1e1 / t659;
	t946 = t657 * t1034;
	t599 = t876 * t946;
	t927 = t623 * t1082;
	t877 = t622 * t1071 + t603 * t927;
	t600 = t877 * t946;
	t1047 = t809 * t810;
	t700 = t1041 + t1047;
	t1046 = t809 * t812;
	t701 = t1043 - t1046;
	t593 = -t599 * t700 + t600 * t701;
	t594 = t599 * t701 + t600 * t700;
	t848 = 0.1e1 / pkin(3);
	t1035 = t843 * t848;
	t1039 = t812 * t623;
	t1044 = t810 * t622;
	t1062 = t657 * t848;
	t614 = (t1039 + t1044) * t1062 / 0.2e1;
	t880 = t622 * t1075 + t623 * t1078;
	t613 = t880 * t1062;
	t930 = t613 * t1083;
	t597 = (t614 * t1072 - t603 * t930) * t1035;
	t929 = t614 * t1083;
	t598 = (-t613 * t1074 + t603 * t929) * t1035;
	t584 = -t593 * t598 + t594 * t597;
	t582 = 0.1e1 / t584 ^ 2;
	t583 = -t593 * t597 - t594 * t598;
	t1063 = t582 * t583;
	t1058 = t744 * t779;
	t1050 = t774 * t860;
	t1049 = t775 * t859;
	t1045 = t809 * t847;
	t1042 = t810 * t812;
	t1040 = t811 * t847;
	t1038 = t812 * t852;
	t1027 = t856 * t779;
	t984 = pkin(7) * t1027;
	t908 = -0.24e2 * t984;
	t1021 = t908 * t1053 - 0.24e2 * t760 * t898;
	t888 = pkin(7) * t899;
	t719 = -0.4e1 * t888;
	t748 = pkin(7) * t993;
	t776 = t810 ^ 2;
	t889 = t959 * t1087;
	t911 = 0.32e2 / 0.3e1 * t850;
	t890 = t778 * t911;
	t891 = 0.64e2 / 0.3e1 * t722 * t856;
	t895 = t778 * t942;
	t896 = 0.32e2 * t945;
	t901 = t1037 * t1084;
	t909 = -0.48e2 * t984;
	t913 = pkin(7) * t971;
	t634 = (t697 * t1042 + t1058 * t765) * t1103 + (t681 * t1057 + t708 * t961) * t1107;
	t917 = t634 * t1079;
	t940 = t810 * t1038;
	t952 = -0.32e2 * t850 * t778;
	t953 = 0.24e2 * t1033;
	t956 = -0.24e2 * t1038;
	t958 = -0.96e2 * t760 * t778;
	t965 = pkin(1) * t1036;
	t967 = t735 * t1070;
	t972 = -0.2e1 * t1030;
	t977 = 0.8e1 * t1038;
	t978 = -0.4e1 * t1048;
	t980 = -0.8e1 * t1051;
	t985 = pkin(7) * t1030;
	t990 = -0.6e1 * t764;
	t595 = ((t734 * t992 + t913 + t978) * t900 + (0.12e2 * t776 * t779 * t1084 + t720 * t978 + t777 * t997) * t955 + 0.12e2 * t672 * t1048 + (-t667 * t955 / 0.2e1 + t1101) * t766 + (t756 * t972 * t955 + t670 * t970 + t769 * t974) * pkin(7)) * t855 + t612 * t917 + t719 * t711 * t896 + (((pkin(7) * t729 * t973 - t670 * t766 - 0.4e1 * t895) * t1089 + t1021 * t1093) * t1056 + ((-pkin(7) * t777 * t911 - 0.16e2 * t724 * t985 - t778 * t891 - 0.4e1 * t812 * t967) * t953 - 0.64e2 * t777 * t901 + t856 * t735 * t958 - 0.48e2 * t669 * t985 - 0.8e1 * t812 * t1066 + ((t965 * t1090 + t978) * t957 + (t1105 * t766 - 0.24e2 * t735 * t985) * t987) * t745) * t711 * t811) * pkin(3) + ((0.16e2 * (t759 * t1090 - t752 + t909 + t952) * t1052 + (t688 * t1064 + t682 * t1090 + t908) * t896 + (-0.28e2 * t644 * t1038 + t645 * t1065 + t692 * t909 + t761 * t952) * t953 + t745 * (t650 * t1065 + t663 * t956) * t987 - 0.4e1 * t715 * t778 - 0.96e2 * t665 * t984 - 0.48e2 * t638 * t1038 - 0.8e1 * t633 * t1088) * t711 + ((-0.8e1 * t660 * t1038 + t890 * t765) * t955 + t811 * t958 * t1067 + t673 * t909 + 0.12e2 * t640 * t1038 + (0.2e1 * (-t716 * t1088 - t710 * t812) * t980 + (t664 * t1064 + t675 * t977 + 0.24e2 * t889) * t990) * t745) * t855 + (-t1098 * t711 - t608 + (t628 * t988 + t643 * t979 + (-0.24e2 * t748 + 0.64e2 * t940) * t1052 + (0.48e2 * t671 * t1033 + 0.6e1 * t639) * pkin(7)) * t855) * pkin(1)) * t810;
	t904 = pkin(1) * t961;
	t975 = 0.8e1 * t1033;
	t989 = -0.4e1 * t764;
	t604 = (t776 * t774 * t969 + (t768 * t766 - 0.2e1 * t1048) * t976 + 0.4e1 * t895 + t755 * t913 + t704 * t766) * t855 + t624 * t917 + ((-0.8e1 / 0.3e1 * t898 + t719 - 0.2e1 * t762 * t904) * t954 - 0.24e2 * t730 * t888 - 0.6e1 * t662 * t904 + t1021) * t711 + ((t709 * t812 * t975 + t679 * t1090 - 0.24e2 * t889) * t855 + (0.12e2 * (-t684 * t1038 - t984) * t954 + t661 * t956) * t711 + (0.4e1 * t646 * t855 * t764 - t878 * t711 - t619 + ((t975 * t765 + 0.4e1 * t677) * t855 + (-0.48e2 * t693 * t1033 - 0.6e1 * t647) * t711) * pkin(7)) * pkin(1)) * t810 + ((t980 * t766 + ((0.4e1 * t812 * t741 - 0.2e1 * t1087) * t852 + (-0.2e1 * t717 * t1086 - t755 * t812) * pkin(1)) * t989) * t855 + ((t748 - 0.8e1 * t940) * t979 + (-0.8e1 * t888 - 0.2e1 * t750 * t1042 + (-t689 * t1086 - t730 * t961) * t1107) * t988) * t711) * t745;
	t916 = t685 * t1079;
	t617 = -t1060 + t634 * t916 + t697 * t776 * t1096 + t651 * t812 + (-t706 - 0.8e1 * t966) * t741;
	t915 = t687 * t1079;
	t618 = t1018 * t855 + t634 * t915 + (t678 * t744 + 0.4e1 * t968) * t810 + (t999 * t1045 + (t1058 * t1107 + t738 * t812) * pkin(3)) * t811;
	t680 = t687 * t996;
	t658 = 0.1e1 / t659 ^ 2;
	t871 = t658 * t876;
	t919 = -t623 * t631 / 0.8e1;
	t924 = t622 * t1080;
	t1026 = (t680 * t871 + (t595 * t928 + t617 * t1073 + t634 * t919 + (t618 * t1082 + t604 * t924) * t603) * t657) * t1034 - t600;
	t872 = t658 * t877;
	t920 = t622 * t631 / 0.8e1;
	t923 = t623 * t1080;
	t1025 = (t680 * t872 + (t618 * t1071 + t634 * t920 + t595 * t927 + (t617 * t1082 + t604 * t923) * t603) * t657) * t1034 + t599;
	t943 = t760 * t1027;
	t963 = pkin(3) * t1047;
	t691 = 0.24e2 * t943 * t963;
	t962 = pkin(3) * t1046;
	t910 = pkin(7) * t962;
	t883 = t852 * t810 * t910;
	t707 = 0.4e1 * t883;
	t718 = t910 * t1096;
	t903 = pkin(1) * t963;
	t1019 = 0.2e1 * t903 + t747;
	t941 = t809 * t1040;
	t703 = t747 + 0.4e1 * t941;
	t983 = t847 * t1086;
	t629 = t703 * t973 + (t751 * t1091 + t950) * t811 + (-t1019 * t725 + 0.2e1 * t811 ^ 2 * t983 + (-t681 * t1041 - t708 * t1047) * pkin(3)) * t1107;
	t918 = t629 * t1079;
	t944 = t745 * t1049;
	t949 = -0.4e1 * t994;
	t982 = pkin(7) * t1038;
	t596 = t612 * t918 + (0.32e2 * t707 * t711 - 0.8e1 * t718 * t855) * t945 + (0.24e2 * (-0.4e1 * t694 * t1050 * t1068 - t627 * t1045 - t643 * t944) * t855 + (0.48e2 * t625 * t1045 + 0.64e2 * t654 * t1050 + 0.96e2 * t636 * t944) * t711) * t811 + ((t608 + (t628 * t1089 + t626 * t1093) * t745) * t811 + (t745 * t691 * t1093 + ((t723 * t973 + t732 * t949 - t892) * t955 - 0.16e2 * t721 * t981 + t668 * t970 + t656 * t948 + ((-t772 + t973) * t980 + (0.8e1 * t736 * t1030 + t731 * t949 - t656 + t912) * t990) * t745 - t886) * t855 + ((pkin(7) * t890 + 0.16e2 * t724 * t982 + t779 * t891 + 0.4e1 * t967) * t953 + 0.64e2 * t778 * t901 + 0.96e2 * t735 * t943 + 0.48e2 * t669 * t982 + 0.8e1 * t1066 + ((0.2e1 * t965 + 0.4e1 * t1027) * t957 + (t1106 * t669 + 0.24e2 * t735 * t982) * t987) * t745) * t711 * t810) * t809) * pkin(3);
	t607 = (t718 * t976 + (-0.8e1 * t649 * t1040 - t743 * t779 + ((-t771 + t972) * t976 + t695 + (t754 * t991 - 0.8e1 * t1048) * pkin(7)) * pkin(3)) * t809 + ((t718 + (-t754 + 0.2e1 * t1030) * t764) * t989 + (pkin(3) * t1094 - 0.24e2 * t1049 * t1068) * t811) * t745) * t855 + t624 * t918 + (0.24e2 * t698 * t811 * t944 + (t707 + (0.8e1 / 0.3e1 * t1027 + 0.2e1 * t1070) * t963) * t954 + 0.24e2 * t635 * t941 + t691 + 0.24e2 * t730 * t883 + 0.6e1 * t662 * t903 + 0.6e1 * ((pkin(7) * t977 + t1107 * t730) * t810 * t1033 + t637 * t765) * t745) * t711 + t619 * t765;
	t615 = t629 * t916 + t703 * t810 * t992 + ((t810 * t855 - t653) * t809 + (t812 * t855 + (t744 * t1097 + t706) * t810 + (-pkin(1) + 0.2e1 * t1069 + t1085) * t986) * t811) * pkin(3);
	t616 = (t741 - t962) * t855 + t629 * t915 - 0.2e1 * t703 * t1069 - (t747 + 0.4e1 * t903) * t725 - 0.2e1 * t775 * t983 - t738 * t963 + (t1045 * t1107 + (t726 * t1097 - t678 * t812) * pkin(3)) * t811;
	t676 = 0.2e1 * t904 + t1019;
	t1024 = (-t676 * t871 + (t596 * t928 + t615 * t1073 + t629 * t919 + (t616 * t1082 + t607 * t924) * t603) * t657) * t1034 + t600;
	t1023 = (-t676 * t872 + (t616 * t1071 + t629 * t920 + t596 * t927 + (t615 * t1082 + t607 * t923) * t603) * t657) * t1034 - t599;
	t926 = t613 * t1081;
	t925 = t614 * t1081;
	t922 = t613 * t1102;
	t921 = t614 * t1102;
	t874 = t658 * t880;
	t873 = t658 * (-t1039 / 0.2e1 - t1044 / 0.2e1);
	t606 = (t676 * t873 + (t615 * t1075 + t616 * t1077) * t657) * t848;
	t605 = (t676 * t874 + (t616 * t1076 + t615 * t1077) * t657) * t848;
	t602 = (-t680 * t873 + ((t617 / 0.2e1 + t622 / 0.2e1) * t812 + (-t623 / 0.2e1 + t618 / 0.2e1) * t810) * t657) * t848;
	t601 = (-t680 * t874 + (t618 * t1076 + t617 * t1077) * t657) * t848 + t614;
	t592 = (t605 * t1074 + t629 * t922 + t596 * t929 + (t606 * t1083 + t607 * t925) * t603) * t1035;
	t591 = (-t596 * t930 + t606 * t1072 + t629 * t921 + (t605 * t1083 - t607 * t926) * t603) * t1035;
	t586 = (t601 * t1074 + t634 * t922 + t595 * t929 + (t602 * t1083 + t604 * t925) * t603) * t1035;
	t585 = (-t595 * t930 + t602 * t1072 + t634 * t921 + (t601 * t1083 - t604 * t926) * t603) * t1035;
	t581 = 0.1e1 / t584;
	t580 = t1023 * t700 + t1024 * t701;
	t579 = t1023 * t701 - t1024 * t700;
	t578 = 0.1e1 / (t582 * t583 ^ 2 + 0.1e1);
	t577 = t1025 * t700 + t1026 * t701;
	t576 = t1025 * t701 - t1026 * t700;
	t1 = [0, 0; 0, 0; ((-t576 * t597 - t577 * t598 - t585 * t593 - t586 * t594) * t581 - (-t576 * t598 + t577 * t597 + t585 * t594 - t586 * t593) * t1063) * t578, ((-t579 * t597 - t580 * t598 - t591 * t593 - t592 * t594) * t581 - (-t579 * t598 + t580 * t597 + t591 * t594 - t592 * t593) * t1063) * t578;];
	Ja_rot = t1;
end