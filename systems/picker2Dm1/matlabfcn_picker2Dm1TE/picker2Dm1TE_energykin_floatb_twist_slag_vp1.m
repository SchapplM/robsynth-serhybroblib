% Calculate kinetic energy for
% picker2Dm1TE
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [2x1]
%   Generalized joint coordinates (joint angles)
% qJD [2x1]
%   Generalized joint velocities
% V_base [6x1]
%   Base Velocity (twist: stacked translational and angular velocity) in base frame
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[L1,L2,L3,L4,L5,L6,e,phi05,phi1]';
% m [11x1]
%   mass of all robot links (including the base)
% rSges [11x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [11x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% T [1x1]
%   kinetic energy

% Quelle: HybrDyn-Toolbox
% Datum: 2020-05-10 08:43
% Revision: 73758128893bc0a8beabae04bd7e71472107ac81 (2020-05-07)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function T = picker2Dm1TE_energykin_floatb_twist_slag_vp1(qJ, qJD, V_base, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(2,1),zeros(2,1),zeros(6,1),zeros(9,1),zeros(11,1),zeros(11,3),zeros(11,6)}
assert(isreal(qJ) && all(size(qJ) == [2 1]), ...
  'picker2Dm1TE_energykin_floatb_twist_slag_vp1: qJ has to be [2x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [2 1]), ...
  'picker2Dm1TE_energykin_floatb_twist_slag_vp1: qJD has to be [2x1] (double)');
assert(isreal(V_base) && all(size(V_base) == [6 1]), ...
  'picker2Dm1TE_energykin_floatb_twist_slag_vp1: V_base has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'picker2Dm1TE_energykin_floatb_twist_slag_vp1: pkin has to be [9x1] (double)');
assert(isreal(m) && all(size(m) == [11 1]), ...
  'picker2Dm1TE_energykin_floatb_twist_slag_vp1: m has to be [11x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [11,3]), ...
  'picker2Dm1TE_energykin_floatb_twist_slag_vp1: rSges has to be [11x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [11 6]), ...
  'picker2Dm1TE_energykin_floatb_twist_slag_vp1: Icges has to be [11x6] (double)'); 

%% Symbolic Calculation
% From energy_kinetic_floatb_twist_worldframe_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2020-05-10 00:11:57
% EndTime: 2020-05-10 00:14:05
% DurationCPUTime: 107.95s
% Computational Cost: add. (1748501->1029), mult. (4836412->1634), div. (64188->44), fcn. (1279252->14), ass. (0->693)
t1157 = sin(qJ(2));
t1520 = 0.2e1 * t1157;
t1411 = pkin(7) * t1520;
t1091 = pkin(3) * t1411;
t1208 = pkin(1) ^ 2;
t1197 = pkin(4) ^ 2;
t1210 = pkin(7) ^ 2;
t1389 = t1210 - t1197;
t1096 = t1208 + t1389;
t1037 = t1091 + t1096;
t1158 = sin(qJ(1));
t1159 = cos(qJ(2));
t1425 = t1158 * t1159;
t1359 = pkin(3) * t1425;
t1307 = pkin(1) * t1359;
t1072 = -0.2e1 * t1307;
t1000 = t1072 + t1037;
t1202 = pkin(3) ^ 2;
t1549 = 0.4e1 * t1208;
t1126 = t1202 * t1549;
t1416 = t1202 * t1210;
t1094 = t1126 - 0.4e1 * t1416;
t1121 = t1157 ^ 2;
t1189 = -0.2e1 * t1210;
t1206 = t1208 ^ 2;
t1530 = -0.4e1 * pkin(7);
t1351 = pkin(3) * t1096 * t1530;
t1110 = pkin(3) * t1157;
t1089 = t1110 + pkin(7);
t1160 = cos(qJ(1));
t1437 = t1089 * t1160;
t1393 = -t1202 + t1210;
t1431 = t1121 * t1202;
t1025 = t1091 + t1393 + 0.2e1 * t1431;
t1125 = t1160 ^ 2;
t1439 = t1025 * t1125;
t1553 = 0.2e1 * pkin(3);
t1554 = 0.4e1 * pkin(1);
t926 = t1094 * t1121 + t1157 * t1351 - t1206 - (t1210 - (t1553 + pkin(4)) * pkin(4)) * (t1210 + (t1553 - pkin(4)) * pkin(4)) + (t1189 + 0.2e1 * t1197 - 0.4e1 * t1202 - 0.4e1 * t1439) * t1208 + (-t1000 * t1437 + t1037 * t1359) * t1554;
t1211 = sqrt(t926);
t1198 = 0.1e1 / pkin(4);
t1203 = 0.1e1 / pkin(3);
t1418 = t1198 * t1203;
t1327 = t1211 * t1418;
t1112 = pkin(1) * t1160;
t1090 = t1112 + pkin(7);
t1040 = t1110 + t1090;
t1529 = 0.1e1 / pkin(1);
t1563 = 0.1e1 / t1529;
t1192 = 0.2e1 * t1563;
t1387 = t1160 * t1192;
t1092 = pkin(7) * t1387;
t1118 = -0.3e1 * t1208 + t1210;
t1414 = t1208 * t1125;
t1365 = 0.4e1 * t1414;
t1026 = t1092 + t1365 + t1118;
t1115 = -0.3e1 * t1202 + t1210;
t1124 = t1160 * t1125;
t1214 = pkin(1) * t1208;
t1429 = t1124 * t1214;
t1376 = pkin(7) * t1429;
t1326 = 0.8e1 * t1376;
t1061 = t1115 * t1326;
t1116 = t1208 + t1210;
t1316 = t1202 + t1116;
t1085 = -t1197 + t1316;
t1109 = t1116 ^ 2;
t1162 = 0.15e2 * t1206;
t1169 = 0.18e2 * t1210;
t1170 = -0.2e1 * t1197;
t1172 = -0.6e1 * t1197;
t1174 = 0.2e1 * t1202;
t1209 = t1210 ^ 2;
t1183 = 0.3e1 * t1209;
t1218 = pkin(3) * t1202;
t1199 = t1218 ^ 2;
t1219 = t1202 ^ 2;
t1352 = 0.12e2 * t1414;
t1353 = 0.12e2 * t1431;
t1187 = 0.3e1 * t1210;
t1401 = 0.15e2 * t1208 + t1187;
t1120 = t1157 * t1121;
t1432 = t1120 * t1218;
t1450 = 0.6e1 * pkin(1);
t1494 = pkin(7) * t1160;
t1404 = t1208 / 0.3e1 + t1210;
t1005 = -0.4e1 / 0.9e1 * t1307 + 0.4e1 / 0.9e1 * t1202 - t1197 / 0.9e1 + t1404;
t1136 = -t1197 / 0.6e1;
t1145 = 0.2e1 / 0.3e1 * t1202;
t1264 = t1210 - t1307;
t1019 = t1136 + t1145 + t1264;
t1144 = 0.4e1 / 0.3e1 * t1202;
t1138 = -t1197 / 0.3e1;
t1320 = t1138 + t1116;
t1074 = t1144 + t1320;
t1108 = -t1208 / 0.3e1 + t1210;
t1313 = -0.2e1 * t1359;
t1410 = 0.4e1 * t1494;
t1420 = (pkin(7) + pkin(1)) * (pkin(7) - pkin(1));
t935 = 0.4e1 * t1376 + 0.6e1 * t1005 * t1414 + t1074 * t1420 + (t1019 * t1410 + t1108 * t1313) * pkin(1);
t1013 = t1072 + t1074;
t1093 = t1393 * t1549;
t1386 = 0.4e1 * t1112;
t1179 = 0.6e1 * t1208;
t1288 = -0.4e1 * t1307;
t1140 = -0.2e1 / 0.3e1 * t1197;
t1188 = 0.2e1 * t1210;
t1319 = t1140 + t1145 + t1188;
t1318 = t1140 + t1116;
t1407 = (t1145 + t1318) * t1116 + t1219;
t950 = t1074 * t1288 + (t1179 + t1319) * t1202 + t1407;
t937 = pkin(7) * t1013 * t1386 + t1093 * t1125 + t950;
t1148 = -t1202 / 0.3e1;
t1106 = t1148 + t1210;
t1027 = t1106 * t1072;
t1421 = (pkin(7) + pkin(3)) * (pkin(7) - pkin(3));
t971 = t1074 * t1421 + t1027;
t1127 = 0.10e2 / 0.3e1 * t1208;
t973 = (t1127 + t1319) * t1202 + t1407;
t898 = t935 * t1353 + t1061 + t971 * t1352 + t1199 + (-t1197 + t1202 + t1401) * t1219 + (t1162 + (t1169 + t1172 + 0.6e1 * t1202) * t1208 + t1183 + (t1170 + t1174) * t1210) * t1202 + t1109 * t1085 + (0.8e1 * t1026 * t1432 + 0.6e1 * t1110 * t937) * t1090 + (-t1359 * t973 + t1494 * t950) * t1450;
t1178 = 0.5e1 * t1206;
t1390 = t1209 + t1219;
t1164 = 0.10e2 * t1208;
t1400 = t1164 + t1188;
t1412 = t1210 * t1208;
t1022 = t1202 * t1400 + t1178 + t1390 + 0.6e1 * t1412;
t1173 = 0.5e1 * t1219;
t1185 = 0.6e1 * t1210;
t1031 = t1173 + (t1164 + t1185) * t1202 + t1109;
t1332 = t1090 * t1432;
t1298 = -0.8e1 * t1332;
t1369 = -0.4e1 * t1431;
t1436 = t1090 * t1157;
t1180 = 0.3e1 * t1208;
t1397 = t1180 + t1210;
t1097 = t1202 + t1397;
t1111 = pkin(3) * t1159;
t1060 = t1097 * t1111;
t1487 = pkin(1) * t1158;
t1064 = t1111 - t1487;
t1357 = t1208 * t1111;
t1098 = 0.3e1 * t1202 + t1116;
t1435 = t1098 * t1158;
t949 = -0.2e1 * t1125 * t1357 + t1060 + (0.2e1 * t1064 * t1494 - t1435) * pkin(1);
t1248 = -t1158 * t1214 + t1357;
t1038 = 0.2e1 * t1248;
t1181 = 0.2e1 * t1208;
t1114 = t1181 + t1202;
t1117 = -t1208 + t1210;
t1385 = 0.2e1 * t1111;
t1350 = pkin(7) * t1385;
t952 = t1117 * t1111 + t1038 * t1125 + (t1114 * t1158 + t1160 * t1350) * pkin(1);
t994 = -pkin(1) * t1435 + t1060;
t1517 = 0.4e1 * t1206;
t1548 = 0.8e1 * t1208;
t1088 = pkin(3) * t1517 + t1218 * t1548;
t1329 = t1158 * t1421;
t1516 = 0.4e1 * t1214;
t997 = t1088 * t1159 + t1329 * t1516;
t913 = t952 * t1369 + t1125 * t997 + (-0.4e1 * t949 * t1436 + (-t1022 + t1326) * t1159) * pkin(3) + (-0.4e1 * t994 * t1494 + (t1031 + t1298) * t1158) * pkin(1);
t874 = t1040 * t898 + t1211 * t913;
t872 = 0.1e1 / t874;
t1514 = t872 / 0.2e1;
t1062 = 0.16e2 * (t1390 - 0.6e1 * t1416) * t1206;
t1113 = -0.30e2 * t1197 + 0.60e2 * t1210;
t1119 = t1121 ^ 2;
t1123 = t1125 ^ 2;
t1186 = 0.4e1 * t1210;
t1223 = pkin(7) * t1210;
t1196 = t1197 ^ 2;
t1395 = t1196 - t1219;
t1413 = t1210 * t1197;
t1250 = 0.6e1 * t1209 + t1395 - 0.6e1 * t1413;
t1311 = 0.32e2 * t1376;
t1434 = t1109 * (-t1202 + t1096);
t1388 = pkin(7) * t1112;
t1349 = 0.6e1 * t1388;
t1141 = -0.3e1 / 0.2e1 * t1197;
t1405 = t1196 / 0.2e1 - t1219 / 0.2e1;
t1279 = -0.3e1 * t1413 + t1183 + t1405;
t1392 = t1206 + t1209;
t1453 = t1199 + t1116 * ((t1141 + t1188) * t1208 - 0.3e1 / 0.2e1 * t1413 + t1392 + t1405);
t1396 = t1188 - t1197;
t1242 = t1396 * t1208 + t1196 / 0.6e1 + t1392 - t1413;
t1240 = 0.5e1 / 0.6e1 * t1219 + t1242;
t981 = (t1127 + t1396) * t1202 + t1240;
t934 = -0.6e1 * t981 * t1307 + (t1162 + (t1169 - 0.9e1 * t1197) * t1208 + t1279) * t1202 + (t1141 + t1401) * t1219 + t1453;
t1139 = -t1197 / 0.2e1;
t1079 = t1139 + t1316;
t1314 = -0.4e1 * t1359;
t1278 = t1079 * t1314;
t1265 = pkin(1) * t1278;
t953 = t1265 + (t1179 + t1396) * t1202 + t1240;
t974 = t1079 * t1421 + t1027;
t917 = t1349 * t953 + t1352 * t974 + t1061 + t934;
t1552 = 0.8e1 * t917;
t1014 = -t1219 / 0.6e1 + t1242;
t1137 = -t1197 / 0.4e1;
t1152 = t1208 / 0.2e1;
t1403 = t1152 + t1210;
t1018 = -0.2e1 / 0.3e1 * t1307 + t1137 + t1403;
t1100 = (t1186 + t1197) * t1208;
t1149 = -0.2e1 / 0.3e1 * t1202;
t1107 = t1149 + t1210;
t1312 = 0.16e2 * t1376;
t1415 = t1206 * t1123;
t1368 = 0.8e1 * t1415;
t1409 = 0.6e1 * t1494;
t1067 = t1210 + t1202 / 0.4e1 + t1208 / 0.4e1 - t1197 / 0.8e1;
t1402 = 0.4e1 / 0.7e1 * t1210 - t1197 / 0.7e1;
t946 = -0.32e2 / 0.21e2 * t1067 * t1307 + 0.5e1 / 0.42e2 * t1219 + (0.16e2 / 0.21e2 * t1208 + t1402) * t1202 + t1206 / 0.7e1 + t1402 * t1208 + t1209 - 0.3e1 / 0.7e1 * t1413 + t1196 / 0.42e2;
t1535 = t1137 + t1202 / 0.2e1;
t1069 = t1404 + t1535;
t1150 = 0.4e1 / 0.3e1 * t1208;
t948 = -0.8e1 / 0.3e1 * t1069 * t1307 + 0.5e1 / 0.18e2 * t1219 + (t1150 + t1138) * t1202 + t1209 - t1206 / 0.3e1 + t1196 / 0.18e2 + (t1144 + 0.2e1 / 0.3e1 * t1208 + t1140) * t1210;
t916 = t1107 * t1368 + t1018 * t1312 + 0.14e2 * t946 * t1414 + t1117 * t1219 + (t1100 - 0.10e2 / 0.3e1 * t1206 + 0.2e1 * t1209 - t1413) * t1202 + t1014 * t1420 + (t1108 * t1278 + t1409 * t948) * pkin(1);
t1184 = 0.8e1 * t1210;
t1001 = t1214 * t1314 + t1126 + t1517 + (t1170 + t1184) * t1208;
t1012 = -t1208 + t1264 + t1535;
t936 = t1326 + t1001 * t1125 + t1079 * t1118 + (t1012 * t1410 + t1313 * t1420) * pkin(1);
t1391 = t1209 - t1206;
t938 = t1106 * t1265 - t1199 + (-t1127 - t1389) * t1219 + (t1100 + t1219 / 0.6e1 - t1196 / 0.6e1 + t1391) * t1202 + t1014 * t1210;
t1171 = -0.5e1 * t1197;
t1177 = 0.7e1 * t1206;
t942 = (t1141 + t1187 + 0.7e1 * t1208) * t1219 + (t1177 + (t1171 + 0.10e2 * t1210) * t1208 + t1279) * t1202 + t1453;
t1095 = -0.12e2 * pkin(7) * t1214 + t1223 * t1554;
t1102 = -0.8e1 * t1206 + 0.12e2 * t1412;
t961 = t1095 * t1160 + t1102 * t1125 + t1312 + t1368 + t1392 - 0.6e1 * t1412;
t976 = t1072 * t1421 + t1079 * t1115;
t866 = t1062 * t1123 + t976 * t1311 + 0.24e2 * t938 * t1414 + (t1170 + t1186 + 0.28e2 * t1208) * t1199 + t1085 * t1434 + (t1113 * t1206 + 0.24e2 * t916 * t1121 + t1172 * t1209 + t1179 * t1250 + t1188 * t1395 + 0.28e2 * t1214 ^ 2 + 0.4e1 * t1223 ^ 2) * t1202 + (t1110 * t1552 + 0.32e2 * t1432 * t936) * t1090 + 0.8e1 * (-t1359 * t942 + t1494 * t934) * pkin(1) + (t1113 * t1208 + 0.16e2 * t1119 * t961 + 0.70e2 * t1206 + t1219 + t1250) * t1219;
t1020 = 0.4e1 / 0.3e1 * t1414 + t1092 + t1108;
t1433 = t1119 * t1219;
t1290 = -0.24e2 * t1020 * t1433;
t1354 = -0.12e2 * t1431;
t1367 = -0.6e1 * t1414;
t1430 = t1124 * t1206;
t1330 = t1158 * t1430;
t1492 = -t1158 / 0.2e1;
t1065 = 0.7e1 / 0.6e1 * t1202 + t1136 + t1403;
t1146 = t1202 / 0.3e1;
t1321 = t1136 + t1146 + t1210;
t1068 = t1150 + t1321;
t970 = -t1065 * t1487 + t1068 * t1111;
t1322 = t1197 / 0.3e1 + t1146 + t1188;
t977 = t1202 * t1117 - 0.5e1 / 0.3e1 * t1206 + t1322 * t1208 + t1210 * (t1138 + t1106);
t1128 = -0.20e2 / 0.3e1 * t1208;
t1323 = 0.2e1 / 0.3e1 * t1197 + t1145 + t1186;
t1324 = 0.4e1 / 0.3e1 * t1197 + t1144 + t1189;
t979 = -t1219 + (t1128 + t1323) * t1202 - 0.3e1 * t1206 + t1324 * t1208 + t1209;
t1076 = t1208 + t1321;
t1099 = t1174 + t1117;
t983 = t1076 * t1111 - t1099 * t1487 / 0.2e1;
t918 = t1330 * t1530 + t970 * t1365 + (-0.8e1 / 0.3e1 * t1415 + t977) * t1111 + (t1410 * t983 + t1492 * t979) * pkin(1);
t1356 = t1214 * t1111;
t1366 = -0.4e1 * t1414;
t1399 = t1170 - 0.2e1 * t1202;
t1317 = t1185 + t1399;
t982 = t1173 + (t1164 + t1317) * t1202 + (t1149 + t1318) * t1116;
t1461 = t1158 * t982;
t1531 = -0.8e1 * pkin(7);
t965 = t1219 + (t1140 + t1149 + t1400) * t1202 + t1178 + t1317 * t1208 + t1210 * (t1140 + t1107);
t957 = t965 * t1111;
t1073 = 0.8e1 / 0.3e1 * t1202 + t1320;
t1075 = t1138 + t1145 + t1397;
t975 = -t1073 * t1487 + t1075 * t1111;
t1080 = 0.5e1 / 0.6e1 * t1202 + t1152 + t1136;
t992 = pkin(1) * t1329 + t1080 * t1385;
t919 = t1124 * t1356 * t1531 + t992 * t1366 + t957 + (t1410 * t975 - t1461) * pkin(1);
t939 = -pkin(1) * t1461 + t957;
t1551 = -0.2e1 * t1563;
t980 = -0.3e1 * t1219 + (t1128 + t1324) * t1202 + t1323 * t1208 + t1391;
t984 = -0.5e1 / 0.3e1 * t1219 + (-t1208 + t1322) * t1202 + t1210 * (t1148 + t1320);
t940 = t1158 * t1551 * t984 + t980 * t1111;
t1534 = t1187 - t1197 - t1202;
t1081 = t1534 * t1164;
t1398 = t1171 - 0.5e1 * t1202;
t941 = t1199 + (0.21e2 * t1208 + t1534) * t1219 + (t1210 * t1399 + t1081 + t1183 + 0.35e2 * t1206) * t1202 + (t1177 + (t1184 + t1398) * t1208 + t1210 * (-t1202 + t1389)) * t1116;
t1039 = 0.4e1 * t1248;
t1063 = t1158 * t1192 + t1111;
t1078 = t1139 + t1097;
t1452 = 0.2e1 * pkin(1);
t943 = t1118 * t1111 + t1039 * t1125 + (t1063 * t1494 + t1078 * t1158) * t1452;
t951 = 0.7e1 * t1199 + (0.35e2 * t1208 + 0.15e2 * t1210 + t1398) * t1219 + (0.21e2 * t1206 + t1081 + 0.9e1 * t1209 + (t1172 - 0.6e1 * t1202) * t1210) * t1202 + t1434;
t1066 = t1210 + 0.5e1 / 0.2e1 * t1202 + 0.3e1 / 0.2e1 * t1208 + t1139;
t1355 = pkin(1) * t1115 / 0.2e1;
t985 = t1066 * t1111 + t1158 * t1355;
t875 = t985 * t1312 + t943 * t1298 + t918 * t1354 + t940 * t1367 + (-0.6e1 * t919 * t1436 + (0.24e2 * t1106 * t1415 - t941) * t1159) * pkin(3) + (-0.6e1 * t939 * t1494 + (t951 + t1290) * t1158) * pkin(1);
t841 = t1040 * t866 + t1211 * t875;
t1346 = t841 * t1514;
t1362 = pkin(1) * t1437;
t969 = t1072 + t1091 + t1316 + 0.2e1 * t1362;
t966 = 0.1e1 / t969;
t1459 = t1203 * t966;
t1490 = -t1160 / 0.2e1;
t1423 = t1159 * t1160;
t1358 = pkin(3) * t1423;
t1438 = t1089 * t1158;
t1008 = t1358 + t1438;
t1071 = -pkin(1) + t1359;
t1084 = t1174 + t1180 + t1389;
t995 = t1084 + t1091 + t1288;
t910 = -t995 * t1437 + t1008 * t1211 + (t1071 * t1411 + t1084 * t1425) * pkin(3) + (-0.2e1 * t1439 + (0.2e1 * t1121 - 0.4e1) * t1202 - t1096) * pkin(1);
t1006 = -t1071 + t1437;
t1033 = t1174 + t1037;
t954 = t1025 * t1387 + t1033 * t1089;
t958 = t1033 * t1160 + (0.4e1 * t1125 - 0.2e1) * t1089 * pkin(1);
t912 = t1006 * t1211 + t1111 * t958 + t1158 * t954;
t895 = (t1490 * t912 + t1492 * t910) * t1459;
t1512 = -t895 / 0.2e1;
t1491 = t1158 / 0.2e1;
t896 = (t1490 * t910 + t1491 * t912) * t1459;
t1247 = t896 * t1346 * t1418 + t1327 * t1512;
t1510 = t896 / 0.2e1;
t1538 = (t1211 * t1510 + t1346 * t895) * t1418;
t1427 = t1157 * t1158;
t1261 = t1423 + t1427;
t1426 = t1157 * t1160;
t1262 = -t1425 + t1426;
t1513 = t872 / 0.4e1;
t1345 = t910 * t1513;
t1489 = -t1211 / 0.4e1;
t1243 = t1345 * t841 + t1489 * t912;
t1417 = t1198 / pkin(3) ^ 2;
t1340 = t966 * t1417;
t825 = t1243 * t1340;
t1344 = t912 * t1513;
t1488 = t1211 / 0.4e1;
t1245 = t1344 * t841 + t1488 * t910;
t826 = t1245 * t1340;
t800 = -t1261 * t825 - t1262 * t826;
t801 = t1261 * t826 - t1262 * t825;
t769 = -t1247 * t800 + t1538 * t801;
t1566 = Icges(11,4) * t769;
t1556 = t1247 * t801 + t1538 * t800;
t1565 = t1556 / 0.2e1;
t1564 = Icges(11,4) * t1556;
t1528 = 0.1e1 / pkin(5);
t1154 = sin(pkin(8));
t1155 = cos(pkin(8));
t1024 = -t1154 * t1158 - t1155 * t1160;
t1485 = pkin(5) * t1024;
t1011 = t1551 * t1485;
t1195 = pkin(5) ^ 2;
t1408 = t1011 + t1195;
t996 = t1208 + t1408;
t1522 = 0.1e1 / t996;
t1161 = cos(pkin(9));
t1550 = t1528 * t1522;
t1371 = t1550 / 0.4e1;
t1002 = t1011 + 0.2e1 * t1195;
t1009 = -pkin(1) + t1485;
t1023 = t1154 * t1160 - t1155 * t1158;
t989 = -(t1192 + pkin(5)) * pkin(5) + t1408;
t990 = pkin(5) * (t1192 - pkin(5)) + t1408;
t1213 = sqrt(-t989 * t990);
t931 = pkin(5) * t1002 * t1023 - t1009 * t1213;
t1300 = t931 * t1371;
t1440 = t1023 * t1213;
t929 = -pkin(5) * t1440 - t1002 * t1009;
t1302 = t929 * t1371;
t1237 = t1300 * t912 + t1302 * t910;
t1232 = t1237 * t1459;
t1505 = sin(pkin(9));
t1373 = -t1550 / 0.4e1;
t1471 = t929 * t912;
t1236 = t1300 * t910 + t1373 * t1471;
t868 = t1236 * t1459;
t852 = t1161 * t1232 - t1505 * t868;
t854 = -t1161 * t868 - t1232 * t1505;
t815 = t852 * t895 - t854 * t896;
t1562 = Icges(7,4) * t815;
t1194 = 0.1e1 / pkin(6);
t1217 = pkin(2) ^ 2;
t1193 = pkin(6) ^ 2;
t1191 = 2 * pkin(2);
t1496 = pkin(6) * t852;
t849 = t1496 * t1191;
t1454 = t1193 + t849;
t846 = t1217 + t1454;
t1460 = t1194 / t846;
t1511 = t895 / 0.2e1;
t842 = -(t1191 + pkin(6)) * pkin(6) + t1454;
t843 = pkin(6) * (t1191 - pkin(6)) + t1454;
t1473 = t842 * t843;
t1212 = sqrt(-t1473);
t1495 = pkin(6) * t854;
t847 = t849 + 0.2e1 * t1193;
t848 = -pkin(2) - t1496;
t789 = t1212 * t1495 - t847 * t848;
t790 = -t1212 * t848 - t1495 * t847;
t1537 = (t1510 * t790 + t1511 * t789) * t1460;
t1561 = Icges(4,4) * t1537;
t1560 = Icges(5,4) * t1538;
t1559 = t1537 * t852;
t1515 = pkin(1) * pkin(3);
t1308 = t1427 * t1515;
t1275 = qJD(2) * t1308;
t1336 = qJD(1) * t1423;
t1276 = t1336 * t1515;
t1558 = -0.6e1 * t1276 + 0.6e1 * t1275;
t1557 = -t1276 + t1275;
t1555 = t874 ^ 2;
t1463 = 0.2e1 * pkin(7);
t1547 = t1247 / 0.2e1;
t1339 = t1460 / 0.2e1;
t1251 = t1339 * t790 * t895 - t896 * t789 * t1460 / 0.2e1;
t1546 = t1251 / 0.2e1;
t1310 = -t896 * t852 - t854 * t895;
t1545 = t1310 / 0.2e1;
t1544 = Icges(4,4) * t1251;
t1543 = Icges(5,4) * t1247;
t1542 = Icges(7,4) * t1310;
t1539 = t1251 * t852;
t1536 = qJD(1) - qJD(2);
t1277 = qJD(1) * t1308;
t1444 = qJD(2) * t1159;
t1335 = t1090 * t1444;
t1293 = pkin(3) * t1335;
t1533 = t1277 - t1293;
t1334 = qJD(2) * t1427;
t1532 = t1334 - t1336;
t1527 = -0.4e1 * pkin(1);
t1525 = -2 * pkin(2);
t1524 = 0.1e1 / t852;
t1523 = 0.1e1 / t929;
t1521 = 0.1e1 / t852 ^ 2;
t1519 = -0.8e1 * t1160;
t1518 = -0.2e1 * t1160;
t1457 = -t1522 / 0.2e1;
t1375 = t1529 * t1457;
t1297 = t1154 * t1375;
t1003 = t1011 + t1181;
t1010 = -pkin(1) * t1024 + pkin(5);
t930 = -pkin(1) * t1440 + t1003 * t1010;
t1301 = t930 * t1375;
t932 = pkin(1) * t1003 * t1023 + t1010 * t1213;
t905 = t1155 * t1301 + t1297 * t932;
t1509 = t905 / 0.2e1;
t1456 = t1522 / 0.2e1;
t1372 = t1528 * t1456;
t1296 = t1160 * t1372;
t907 = t1158 * t1457 * t1528 * t931 + t1296 * t929;
t1508 = t907 / 0.2e1;
t1507 = t910 / 0.2e1;
t1506 = t966 / 0.2e1;
t1303 = t912 * t1371;
t1015 = t1023 * qJD(1);
t993 = 0.1e1 / t996 ^ 2;
t1462 = t1015 * t993;
t1378 = pkin(1) * t1462;
t1082 = qJD(2) * t1350;
t1406 = 0.2e1 * t1557;
t1325 = t1082 + t1406;
t1469 = ((-qJD(1) * t1438 + qJD(2) * t1358) * t1452 + t1325) / t969 ^ 2;
t1443 = qJD(2) * t1202;
t1283 = t1157 * t1159 * t1443;
t1273 = 0.4e1 * t1283;
t1017 = t1082 + t1273;
t1446 = qJD(1) * t1160;
t1337 = t1158 * t1446;
t1284 = t1025 * t1337;
t1441 = t1017 * t1125;
t1448 = qJD(1) * t1158;
t1472 = ((0.8e1 * t1284 - 0.4e1 * t1441) * t1208 + (t1094 * t1520 + t1351) * t1444 + (t1158 * t1159 ^ 2 * t1443 * t1463 + (t1000 * t1448 - t1160 * t1325) * t1089 + (t1037 * t1336 + (-t1000 * t1423 - t1037 * t1427) * qJD(2)) * pkin(3)) * t1554) / t1211;
t1343 = t1472 / 0.2e1;
t1422 = t1160 * t1211;
t1424 = t1158 * t1211;
t1447 = qJD(1) * t1159;
t869 = t1006 * t1343 + (-t1089 * t1424 + t1160 * t954) * qJD(1) + (t1017 * t1160 - t1025 * t1448) * t1158 * t1452 + ((-t1422 + (-t1033 - 0.8e1 * t1362) * t1158) * t1447 + ((-t958 + t1424) * t1157 + (t1422 + (t1089 * t1463 + t1033) * t1158 + (t1125 * t1192 - pkin(1) + t1494) * t1159 * t1553) * t1159) * qJD(2)) * pkin(3);
t1235 = -0.4e1 * t1532;
t1233 = t1235 * t1112;
t870 = t1008 * t1343 + (-t1082 * t1160 + (t1158 * t995 + t1422) * qJD(1)) * t1089 + (t1273 + 0.4e1 * t1284 - 0.2e1 * t1441) * pkin(1) + ((t1084 * t1160 - t1424) * t1447 + (-t1084 * t1427 - t1211 * t1262 - t1423 * t995) * qJD(2) + (t1071 * t1444 - t1110 * t1532) * t1463 + t1089 * t1233) * pkin(3);
t1016 = t1024 * qJD(1);
t1486 = pkin(5) * t1015;
t1295 = t1452 * t1486;
t1470 = (t989 + t990) * t1295 / t1213;
t1342 = t1470 / 0.2e1;
t1246 = -t1016 * t1213 + t1023 * t1342;
t899 = (-(t1009 * t1192 - t1002) * t1015 + t1246) * pkin(5);
t1370 = 0.2e1 * t1015 * t1023;
t1442 = t1015 * t1213;
t900 = t1009 * t1342 + t1195 * pkin(1) * t1370 + (t1002 * t1016 + t1442) * pkin(5);
t808 = (-t1237 * t1469 + (t870 * t1302 + t910 * t899 * t1371 + t869 * t1300 + t900 * t1303 - (t929 * t1507 + t912 * t931 / 0.2e1) * t1378) * t966) * t1203;
t809 = (t1236 * t1469 + (t899 * t1303 + t869 * t1302 - (-t910 * t931 / 0.2e1 + t1471 / 0.2e1) * t1378 + (t870 * t931 + t900 * t910) * t1373) * t966) * t1203;
t778 = t1161 * t808 + t1505 * t809;
t1504 = pkin(2) * t778;
t1503 = pkin(2) * t896;
t1502 = pkin(3) * t896;
t1501 = pkin(4) * t1538;
t1500 = pkin(4) * t1247;
t1498 = pkin(6) * t1537;
t1497 = pkin(6) * t1251;
t1493 = t1157 / 0.2e1;
t1482 = Icges(3,4) * t895;
t1374 = t1529 * t1456;
t904 = t1155 * t1374 * t932 + t1297 * t930;
t1481 = Icges(6,4) * t904;
t906 = t1158 * t1372 * t929 + t1296 * t931;
t1480 = Icges(9,4) * t906;
t1479 = 0.2e1 * (-t842 - t843) * pkin(6) * t1504 / t1212;
t1478 = t778 * t854;
t1104 = V_base(6) + qJD(1);
t1341 = -t1469 / 0.2e1;
t909 = 0.1e1 / t910 ^ 2;
t816 = t1104 + ((t1341 * t912 + t1506 * t869) / t1507 - 0.2e1 * (t1341 * t910 + t1506 * t870) * t912 * t909) * pkin(3) * t1203 / (t909 * t912 ^ 2 + 0.1e1) * t969;
t1477 = t816 * t895;
t1476 = t816 * t896;
t1364 = pkin(1) * t1448;
t1032 = pkin(3) * t1444 - t1364;
t1315 = pkin(7) * t1364;
t1083 = -0.2e1 * t1315;
t1122 = t1158 ^ 2;
t1263 = t1121 * t1218 * t1335;
t1249 = -0.24e2 * t1263;
t1257 = t1108 * t1275;
t1258 = t1108 * t1276;
t1428 = t1125 * t1214;
t1377 = pkin(7) * t1428;
t1274 = t1377 * t1448;
t1259 = -0.24e2 * t1274;
t1282 = t1208 * t1337;
t1268 = -0.24e2 * t1282;
t1445 = qJD(2) * t1157;
t1361 = pkin(3) * t1445;
t1269 = t1361 * t1429;
t1338 = qJD(1) * t1432;
t1294 = pkin(1) * t1338;
t1271 = t1158 * t1294;
t1286 = t1421 * t1446;
t1289 = -0.6e1 * t1315;
t1363 = pkin(1) * t1446;
t1291 = t1098 * t1363;
t1299 = -0.2e1 * t1337;
t1309 = t1414 * t1515;
t1333 = qJD(2) * t1426;
t1360 = pkin(3) * t1436;
t1238 = t1532 * pkin(3);
t1231 = pkin(1) * t1106 * t1238 * t1414;
t1455 = t1115 * t1259 + 0.24e2 * t1231;
t1467 = 0.4e1 * t1557 * t1074;
t978 = t1208 * t1238 * t1410;
t1475 = ((t1090 * t1294 * t1519 + t1122 * t1338 * t1548 + t1249 * t1487 + (0.2e1 * (-t1208 * t1361 - t1214 * t1446) * t1125 + t1038 * t1299 - t1117 * t1361 + (t1114 * t1446 + (-qJD(1) * t1425 - t1333) * pkin(7) * t1553) * pkin(1)) * t1369 - 0.8e1 * t952 * t1283 - 0.4e1 * (-t1291 + (0.4e1 * t1159 * t1282 + (-t1097 + 0.2e1 * t1414) * t1445) * pkin(3) + ((-t1361 - t1363) * t1112 - t1064 * t1364) * t1463) * t1360 + t1269 * t1531 + t1259 * t1111 + (-t1088 * t1445 + t1286 * t1516) * t1125 + t997 * t1299 - 0.4e1 * (-t1097 * t1361 - t1291) * t1388 + 0.4e1 * t994 * t1315 + t1022 * t1361 + t1031 * t1363 + 0.4e1 * t1533 * t949) * t1211 + t913 * t1343 + (0.8e1 * (t1083 - 0.8e1 * t1282) * t1332 + (-0.12e2 * t1274 + 0.6e1 * (-0.4e1 / 0.9e1 * t1336 + 0.4e1 / 0.9e1 * t1334) * t1309 - 0.12e2 * t1005 * t1282 + t978 - 0.4e1 * t1019 * t1315 - 0.2e1 * t1258 + 0.2e1 * t1257) * t1353 + 0.24e2 * t935 * t1283 + 0.6e1 * (t1093 * t1299 + (-t1013 * t1448 + t1160 * t1406) * pkin(7) * t1554 + t1467) * t1360 + t971 * t1268 + t1467 * t1349 + t950 * t1289 + t1455 + t1558 * t973 - 0.6e1 * t1533 * t937 + (-0.8e1 * t1271 + 0.24e2 * t1263) * t1026) * t1040 + t898 * t1032) / t1555;
t1474 = 0.1e1 / t841 ^ 2 * t1555;
t1468 = t1558 * t981;
t1466 = Icges(2,4) * t1158;
t1465 = Icges(2,4) * t1160;
t1464 = Icges(8,4) * t1159;
t1458 = t1212 * t778;
t1419 = t1194 / pkin(2);
t1384 = 0.1e1 / t846 ^ 2 * t1504;
t1381 = t1104 * t1487 + V_base(1);
t1380 = V_base(5) * t1112 + V_base(3);
t1379 = pkin(5) * V_base(6);
t1348 = t895 * V_base(4);
t1347 = -t1475 / 0.4e1;
t1331 = t1158 * t1433;
t1328 = t1212 * t1419;
t1306 = pkin(3) * t1348 + t1380;
t1305 = pkin(2) * t1348 + t1380;
t1292 = pkin(3) * t1333;
t1287 = qJD(1) * t1330;
t1285 = t1120 * t1219 * t1444;
t1281 = -t1328 / 0.2e1;
t1280 = t1328 / 0.2e1;
t1272 = -t1104 * t1112 + V_base(2);
t1270 = t1361 * t1415;
t1260 = -0.48e2 * t1274;
t1256 = -pkin(2) * t1477 + t1381;
t1255 = -pkin(3) * t1477 + t1381;
t1254 = pkin(3) * t1476 + t1272;
t1253 = pkin(2) * t1476 + t1272;
t779 = -t1161 * t809 + t1505 * t808;
t788 = 0.1e1 / t789 ^ 2;
t720 = t816 + 0.2e1 * (((-t848 * t1479 / 0.2e1 + t1193 * t1478 * t1525 + (t779 * t847 + t1458) * pkin(6)) * t1339 - t790 * t1384) / t789 - (-t789 * t1384 + (t854 * t1479 / 0.2e1 - t1212 * t779 + (t1525 * t848 + t847) * t778) * pkin(6) * t1339) * t790 * t788) * pkin(6) / (t788 * t790 ^ 2 + 0.1e1) * t846;
t1234 = t1532 * t1452;
t1239 = -t1361 * t965 - t1363 * t982;
t803 = (t1290 * t1363 - 0.24e2 * pkin(1) * (-0.8e1 / 0.3e1 * t1282 + t1083) * t1331 - 0.96e2 * t1020 * t1285 * t1487 + ((-t1118 + t1366) * t1361 + 0.2e1 * (pkin(1) * t1078 - t1039 * t1158 - 0.2e1 * t1428) * t1446 + (-0.2e1 * t1292 + (-0.2e1 * t1063 * t1158 + t1125 * t1554) * qJD(1)) * pkin(1) * pkin(7)) * t1298 + (0.8e1 / 0.3e1 * t1270 + (-t1065 * t1363 - t1068 * t1361) * t1365 - t977 * t1361 - t979 * t1363 / 0.2e1 + (0.32e2 / 0.3e1 * t1430 * t1111 + t1208 * t970 * t1519) * t1448 + (t1076 * t1292 * t1527 + ((0.12e2 * t1122 * t1125 - 0.4e1 * t1123) * t1206 + (t1099 * t1125 * t1551 - 0.4e1 * t1158 * t983) * pkin(1)) * qJD(1)) * pkin(7)) * t1354 - 0.24e2 * t918 * t1283 - 0.6e1 * ((-0.4e1 * (pkin(1) * t1286 - 0.2e1 * t1080 * t1361) * t1125 + 0.8e1 * t992 * t1337) * t1208 + (0.8e1 * t1269 + (-t1073 * t1363 - t1075 * t1361) * t1386 + (0.24e2 * t1125 * t1356 + t1527 * t975) * t1448) * pkin(7) + t1239) * t1360 + (-t1066 * t1361 + t1355 * t1446) * t1312 + t985 * t1260 + (-t1361 * t980 - 0.2e1 * t1363 * t984) * t1367 + 0.12e2 * t940 * t1282 - 0.6e1 * t1239 * t1388 + 0.6e1 * t939 * t1315 + t941 * t1361 + t951 * t1363 + (0.8e1 * t1271 + t1249) * t943 + 0.6e1 * t1533 * t919 + (-0.96e2 * t1111 * t1287 - 0.24e2 * t1270) * t1106) * t1211 + t875 * t1343 + (0.16e2 * (t1102 * t1518 - t1095 - 0.48e2 * t1377 - 0.32e2 * t1430) * qJD(1) * t1331 + 0.64e2 * t961 * t1285 + 0.32e2 * (t978 + (t1001 * t1518 + (t1012 * t1527 - 0.24e2 * t1428) * pkin(7)) * t1448 + (t1234 * t1420 - t1235 * t1428) * pkin(3)) * t1332 + 0.24e2 * (-0.32e2 * t1107 * t1287 + (-0.2e1 / 0.3e1 * t1336 + 0.2e1 / 0.3e1 * t1334) * t1312 * t1515 + t1018 * t1260 - 0.28e2 * t946 * t1282 + (-0.8e1 / 0.3e1 * t1336 + 0.8e1 / 0.3e1 * t1334) * t1069 * pkin(3) * t1208 * t1409 + t948 * t1289 + 0.4e1 * (-t1258 + t1257) * t1079 + 0.64e2 / 0.3e1 * t1532 * t1067 * t1309) * t1431 + 0.48e2 * t916 * t1283 - 0.8e1 * t917 * t1277 + 0.8e1 * (t974 * t1268 + (-pkin(3) * t1079 * t1233 - t1448 * t953) * pkin(7) * t1450 + t1455 + t1468) * t1360 + t1293 * t1552 - 0.4e1 * t1062 * t1124 * t1448 + pkin(3) * t1234 * t1311 * t1421 - 0.96e2 * t976 * t1274 + 0.96e2 * t1079 * t1231 - 0.48e2 * t938 * t1282 + 0.8e1 * t1468 * t1388 - 0.8e1 * t934 * t1315 + 0.8e1 * t1557 * t942 + (-0.32e2 * t1271 + 0.96e2 * t1263) * t936) * t1040 + t866 * t1032;
t760 = t816 + (0.1e1 / t841 * t874 * t1343 - 0.2e1 * (t803 * t1514 - t841 * t1475 / 0.2e1) * pkin(4) * pkin(3) * t1327 * t1474) / (t1474 * t926 + 0.1e1);
t1105 = Icges(8,4) * t1157;
t1103 = V_base(6) + qJD(2);
t1059 = -rSges(2,1) * t1160 + rSges(2,2) * t1158;
t1058 = -rSges(8,1) * t1159 + rSges(8,2) * t1157;
t1057 = -rSges(2,1) * t1158 - rSges(2,2) * t1160;
t1056 = rSges(8,1) * t1157 + rSges(8,2) * t1159;
t1052 = -Icges(2,1) * t1160 + t1466;
t1051 = -Icges(2,1) * t1158 - t1465;
t1050 = -Icges(8,1) * t1159 + t1105;
t1049 = Icges(8,1) * t1157 + t1464;
t1048 = Icges(2,2) * t1158 - t1465;
t1047 = -Icges(2,2) * t1160 - t1466;
t1046 = Icges(8,2) * t1157 - t1464;
t1045 = Icges(8,2) * t1159 + t1105;
t1036 = -rSges(1,1) * V_base(5) + rSges(1,2) * V_base(4) + V_base(3);
t1035 = rSges(1,1) * V_base(6) - rSges(1,3) * V_base(4) + V_base(2);
t1034 = -rSges(1,2) * V_base(6) + rSges(1,3) * V_base(5) + V_base(1);
t988 = V_base(5) * rSges(2,3) - t1057 * t1104 + V_base(1);
t987 = V_base(5) * rSges(8,3) - t1058 * t1103 + V_base(1);
t986 = -V_base(4) * rSges(2,3) + t1059 * t1104 + V_base(2);
t972 = -V_base(4) * rSges(8,3) + V_base(6) * pkin(7) + t1056 * t1103 + V_base(2);
t968 = t1057 * V_base(4) - t1059 * V_base(5) + V_base(3);
t964 = t1536 * t1261;
t963 = t1536 * t1262;
t960 = t1058 * V_base(4) + V_base(3) + (-pkin(7) - t1056) * V_base(5);
t928 = 0.1e1 / t930 ^ 2;
t927 = 0.1e1 / t929 ^ 2;
t902 = Icges(9,4) * t907;
t901 = Icges(6,4) * t905;
t894 = Icges(3,4) * t896;
t891 = rSges(9,1) * t907 - rSges(9,2) * t906;
t890 = rSges(9,1) * t906 + rSges(9,2) * t907;
t889 = Icges(9,1) * t907 - t1480;
t888 = Icges(9,1) * t906 + t902;
t887 = -Icges(9,2) * t906 + t902;
t886 = Icges(9,2) * t907 + t1480;
t883 = rSges(6,1) * t905 - rSges(6,2) * t904;
t882 = rSges(6,1) * t904 + rSges(6,2) * t905;
t881 = Icges(6,1) * t905 - t1481;
t880 = Icges(6,1) * t904 + t901;
t879 = -Icges(6,2) * t904 + t901;
t878 = Icges(6,2) * t905 + t1481;
t865 = rSges(3,1) * t896 - rSges(3,2) * t895;
t864 = rSges(3,1) * t895 + rSges(3,2) * t896;
t863 = Icges(3,1) * t896 - t1482;
t862 = Icges(3,1) * t895 + t894;
t861 = -Icges(3,2) * t895 + t894;
t860 = Icges(3,2) * t896 + t1482;
t857 = -t891 * V_base(5) + (t890 - t1487) * V_base(4) + t1380;
t856 = t882 * V_base(4) - t883 * V_base(5) + V_base(3) + (t1154 * V_base(4) - t1155 * V_base(5)) * pkin(5);
t839 = V_base(6) + (((-t1010 * t1470 / 0.2e1 + t1208 * pkin(5) * t1370 + (t1003 * t1016 + t1442) * pkin(1)) * t1374 - t932 * pkin(5) * t1462) / t1301 + ((t1015 * t1003 + t1246) * t1457 - (t1010 * t1522 - t930 * t993) * t1486) * t932 * t928 / t1375) / (t928 * t932 ^ 2 + 0.1e1);
t838 = t1104 + (t900 * t1523 + (-t899 * t927 - (-t929 * t927 + t1523) * t996 * t993 * t1295) * t931) / (t927 * t931 ^ 2 + 0.1e1);
t834 = -t865 * V_base(5) + (t864 - t1487) * V_base(4) + t1380;
t833 = V_base(5) * rSges(6,3) - t1154 * t1379 - t839 * t882 + V_base(1);
t832 = -V_base(4) * rSges(6,3) + t1155 * t1379 + t839 * t883 + V_base(2);
t831 = V_base(5) * rSges(9,3) - t838 * t890 + t1381;
t830 = -V_base(4) * rSges(9,3) + t838 * t891 + t1272;
t806 = V_base(5) * rSges(3,3) - t816 * t864 + t1381;
t805 = -V_base(4) * rSges(3,3) + t816 * t865 + t1272;
t799 = 0.1e1 / t801 ^ 2;
t798 = rSges(5,1) * t1247 - rSges(5,2) * t1538;
t797 = rSges(5,1) * t1538 + rSges(5,2) * t1247;
t796 = Icges(5,1) * t1247 - t1560;
t795 = Icges(5,1) * t1538 + t1543;
t794 = -Icges(5,2) * t1538 + t1543;
t793 = Icges(5,2) * t1247 + t1560;
t787 = rSges(7,1) * t1310 + rSges(7,2) * t815;
t786 = -rSges(7,1) * t815 + rSges(7,2) * t1310;
t785 = Icges(7,1) * t1310 + t1562;
t784 = -Icges(7,1) * t815 + t1542;
t783 = Icges(7,2) * t815 + t1542;
t782 = Icges(7,2) * t1310 - t1562;
t775 = (-t798 - t1502) * V_base(5) + (t797 - t1487) * V_base(4) + t1306;
t773 = -t787 * V_base(5) + (t786 - t1487) * V_base(4) + t1380;
t763 = (-t1245 * t1469 + (t870 * t1488 + t910 * t1472 / 0.8e1 + t803 * t1344 + (t1347 * t912 + t1513 * t869) * t841) * t966) * t1417;
t762 = (-t1243 * t1469 + (t803 * t1345 + t869 * t1489 - t912 * t1472 / 0.8e1 + (t1347 * t910 + t1513 * t870) * t841) * t966) * t1417;
t759 = (t1478 * t1521 + t1524 * t779) / (t1521 * t854 ^ 2 + 0.1e1) + t816;
t758 = V_base(5) * rSges(5,3) - t760 * t797 + t1255;
t757 = -V_base(4) * rSges(5,3) + t760 * t798 + t1254;
t756 = rSges(11,1) * t1556 - rSges(11,2) * t769;
t755 = rSges(11,1) * t769 + rSges(11,2) * t1556;
t754 = Icges(11,1) * t1556 - t1566;
t753 = Icges(11,1) * t769 + t1564;
t752 = -Icges(11,2) * t769 + t1564;
t751 = Icges(11,2) * t1556 + t1566;
t748 = rSges(4,1) * t1251 + rSges(4,2) * t1537;
t747 = -rSges(4,1) * t1537 + rSges(4,2) * t1251;
t746 = Icges(4,1) * t1251 + t1561;
t745 = -Icges(4,1) * t1537 + t1544;
t744 = Icges(4,2) * t1537 + t1544;
t743 = Icges(4,2) * t1251 - t1561;
t740 = V_base(5) * rSges(7,3) - t759 * t786 + t1381;
t739 = -V_base(4) * rSges(7,3) + t759 * t787 + t1272;
t738 = t1281 * t1537 + t1539;
t737 = t1251 * t1281 - t1559;
t736 = t1251 * t1280 + t1559;
t735 = -t1280 * t1537 + t1539;
t734 = (-t748 - t1503) * V_base(5) + (t747 - t1487) * V_base(4) + t1305;
t733 = (-t1500 - t756 - t1502) * V_base(5) + (-t1487 + t755 + t1501) * V_base(4) + t1306;
t732 = rSges(10,1) * t738 + rSges(10,2) * t736;
t731 = rSges(10,1) * t737 + rSges(10,2) * t735;
t730 = Icges(10,1) * t738 + Icges(10,4) * t736;
t729 = Icges(10,1) * t737 + Icges(10,4) * t735;
t728 = Icges(10,4) * t738 + Icges(10,2) * t736;
t727 = Icges(10,4) * t737 + Icges(10,2) * t735;
t722 = (-(-t1261 * t762 - t1262 * t763 - t825 * t963 + t826 * t964) / t801 - (-t1261 * t763 + t1262 * t762 - t825 * t964 - t826 * t963) * t800 * t799) / (t799 * t800 ^ 2 + 0.1e1) + t760;
t721 = (-t1497 - t732 - t1503) * V_base(5) + (-t1487 + t731 - t1498) * V_base(4) + t1305;
t719 = V_base(5) * rSges(11,3) - t1501 * t760 - t722 * t755 + t1255;
t718 = -V_base(4) * rSges(11,3) + t1500 * t760 + t722 * t756 + t1254;
t717 = V_base(5) * rSges(4,3) - t720 * t747 + t1256;
t716 = -V_base(4) * rSges(4,3) + t720 * t748 + t1253;
t715 = (-t1524 * t1479 / 0.4e1 + t1521 * t1458 / 0.2e1) / (0.1e1 - 0.1e1 / pkin(6) ^ 2 / t1217 * t1521 * t1473 / 0.4e1) * t1419 + t720;
t714 = V_base(5) * rSges(10,3) + t1498 * t720 - t715 * t731 + t1256;
t713 = -V_base(4) * rSges(10,3) + t1497 * t720 + t715 * t732 + t1253;
t1 = Icges(4,3) * t720 ^ 2 / 0.2e1 + Icges(11,3) * t722 ^ 2 / 0.2e1 + Icges(9,3) * t838 ^ 2 / 0.2e1 + Icges(8,3) * t1103 ^ 2 / 0.2e1 + Icges(2,3) * t1104 ^ 2 / 0.2e1 + Icges(7,3) * t759 ^ 2 / 0.2e1 + m(1) * (t1034 ^ 2 + t1035 ^ 2 + t1036 ^ 2) / 0.2e1 + m(8) * (t960 ^ 2 + t972 ^ 2 + t987 ^ 2) / 0.2e1 + m(2) * (t968 ^ 2 + t986 ^ 2 + t988 ^ 2) / 0.2e1 + Icges(6,3) * t839 ^ 2 / 0.2e1 + m(6) * (t832 ^ 2 + t833 ^ 2 + t856 ^ 2) / 0.2e1 + m(9) * (t830 ^ 2 + t831 ^ 2 + t857 ^ 2) / 0.2e1 + m(10) * (t713 ^ 2 + t714 ^ 2 + t721 ^ 2) / 0.2e1 + m(3) * (t805 ^ 2 + t806 ^ 2 + t834 ^ 2) / 0.2e1 + Icges(10,3) * t715 ^ 2 / 0.2e1 + m(11) * (t718 ^ 2 + t719 ^ 2 + t733 ^ 2) / 0.2e1 + Icges(1,3) * V_base(6) ^ 2 / 0.2e1 + m(5) * (t757 ^ 2 + t758 ^ 2 + t775 ^ 2) / 0.2e1 + Icges(5,3) * t760 ^ 2 / 0.2e1 + Icges(3,3) * t816 ^ 2 / 0.2e1 + m(7) * (t739 ^ 2 + t740 ^ 2 + t773 ^ 2) / 0.2e1 + m(4) * (t716 ^ 2 + t717 ^ 2 + t734 ^ 2) / 0.2e1 + (Icges(1,6) * V_base(6) + (-Icges(8,5) * t1159 + Icges(8,6) * t1157) * t1103 + (-Icges(2,5) * t1158 - Icges(2,6) * t1160) * t1104 + (Icges(10,5) * t737 + Icges(10,6) * t735) * t715 + (-Icges(4,5) * t1537 + Icges(4,6) * t1251) * t720 + (Icges(11,5) * t769 + Icges(11,6) * t1556) * t722 + (-Icges(7,5) * t815 + Icges(7,6) * t1310) * t759 + (Icges(5,5) * t1538 + Icges(5,6) * t1247) * t760 + (Icges(3,5) * t895 + Icges(3,6) * t896) * t816 + (Icges(9,5) * t906 + Icges(9,6) * t907) * t838 + (Icges(6,5) * t904 + Icges(6,6) * t905) * t839 + (t1046 * t1493 - t1050 * t1159 / 0.2e1 + t1047 * t1490 + t1051 * t1492 + t886 * t1508 + t888 * t906 / 0.2e1 + t878 * t1509 + t880 * t904 / 0.2e1 + t860 * t1510 + t862 * t1511 + t793 * t1547 + t795 * t1538 / 0.2e1 + t727 * t735 / 0.2e1 + t729 * t737 / 0.2e1 + t743 * t1546 - t745 * t1537 / 0.2e1 + t751 * t1565 + t753 * t769 / 0.2e1 + t782 * t1545 - t784 * t815 / 0.2e1 + Icges(1,2) / 0.2e1) * V_base(5)) * V_base(5) + (((t1045 + t1050) * t1157 + (t795 + t794) * t1247 + (t881 - t878) * t904 + t728 * t735 + t730 * t737 + (-t1049 + t1046) * t1159 + (-t1052 + t1047) * t1158 + (t863 - t860) * t895 + (t879 + t880) * t905 + (-t1051 - t1048) * t1160 + (t861 + t862) * t896 + t727 * t736 + t729 * t738 + (t744 + t745) * t1251 + (t887 + t888) * t907 + (t889 - t886) * t906 + (t783 + t784) * t1310 + (t782 - t785) * t815 + (t796 - t793) * t1538 + (-t746 + t743) * t1537 + (t752 + t753) * t1556 + (t754 - t751) * t769) * V_base(5) / 0.2e1 + (Icges(10,5) * t738 + Icges(10,6) * t736) * t715 + (Icges(4,5) * t1251 + Icges(4,6) * t1537) * t720 + (Icges(11,5) * t1556 - Icges(11,6) * t769) * t722 + (Icges(7,5) * t1310 + Icges(7,6) * t815) * t759 + (Icges(5,5) * t1247 - Icges(5,6) * t1538) * t760 + (Icges(3,5) * t896 - Icges(3,6) * t895) * t816 + (Icges(6,5) * t905 - Icges(6,6) * t904) * t839 + (Icges(9,5) * t907 - Icges(9,6) * t906) * t838 + (Icges(8,5) * t1157 + Icges(8,6) * t1159) * t1103 + (-Icges(2,5) * t1160 + Icges(2,6) * t1158) * t1104 + Icges(1,4) * V_base(5) + Icges(1,5) * V_base(6) + (t1048 * t1491 + t1052 * t1490 + t1045 * t1159 / 0.2e1 + t1049 * t1493 - t887 * t906 / 0.2e1 + t889 * t1508 - t879 * t904 / 0.2e1 + t881 * t1509 + t861 * t1512 + t863 * t1510 - t794 * t1538 / 0.2e1 + t796 * t1547 + t783 * t815 / 0.2e1 + t785 * t1545 + t744 * t1537 / 0.2e1 + t746 * t1546 + Icges(1,1) / 0.2e1 - t752 * t769 / 0.2e1 + t754 * t1565 + t728 * t736 / 0.2e1 + t730 * t738 / 0.2e1) * V_base(4)) * V_base(4);
T = t1;
