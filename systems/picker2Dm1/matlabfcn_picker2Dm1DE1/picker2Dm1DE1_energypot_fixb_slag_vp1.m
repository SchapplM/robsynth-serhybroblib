% Calculate potential energy for
% picker2Dm1DE1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [2x1]
%   Generalized joint coordinates (joint angles)
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[L1,L2,L3,L4,L5,L6,e,phi05,phi1]';
% m [11x1]
%   mass of all robot links (including the base)
% rSges [11x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% 
% Output:
% U [1x1]
%   Potential energy

% Quelle: HybrDyn-Toolbox
% Datum: 2020-05-10 19:54
% Revision: 52c9de996ed1e2eb3528e92ec0df589a9be0640a (2020-05-10)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function U = picker2Dm1DE1_energypot_fixb_slag_vp1(qJ, g, ...
  pkin, m, rSges)
%% Coder Information
%#codegen
%$cgargs {zeros(2,1),zeros(3,1),zeros(9,1),zeros(11,1),zeros(11,3)}
assert(isreal(qJ) && all(size(qJ) == [2 1]), ...
  'picker2Dm1DE1_energypot_fixb_slag_vp1: qJ has to be [2x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'picker2Dm1DE1_energypot_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'picker2Dm1DE1_energypot_fixb_slag_vp1: pkin has to be [9x1] (double)');
assert(isreal(m) && all(size(m) == [11 1]), ...
  'picker2Dm1DE1_energypot_fixb_slag_vp1: m has to be [11x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [11,3]), ...
  'picker2Dm1DE1_energypot_fixb_slag_vp1: rSges has to be [11x3] (double)');

%% Symbolic Calculation
% From energy_potential_fixb_worldframe_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2020-05-10 09:11:20
% EndTime: 2020-05-10 09:11:39
% DurationCPUTime: 12.16s
% Computational Cost: add. (173261->505), mult. (465796->659), div. (7180->12), fcn. (123736->38), ass. (0->284)
t531 = 2 * pkin(2);
t498 = sin(pkin(8));
t499 = cos(pkin(8));
t501 = sin(qJ(1));
t504 = cos(qJ(1));
t436 = -t498 * t501 - t499 * t504;
t703 = pkin(5) * t436;
t712 = -2 * pkin(1);
t433 = t703 * t712;
t535 = pkin(5) ^ 2;
t427 = t433 + 0.2e1 * t535;
t431 = -pkin(1) + t703;
t532 = 2 * pkin(1);
t678 = t433 + t535;
t421 = sqrt(-(-(t532 + pkin(5)) * pkin(5) + t678) * (pkin(5) * (t532 - pkin(5)) + t678));
t435 = t498 * t504 - t499 * t501;
t698 = t421 * t435;
t419 = -pkin(5) * t698 - t427 * t431;
t420 = pkin(5) * t427 * t435 - t421 * t431;
t546 = pkin(1) ^ 2;
t544 = t546 ^ 2;
t549 = pkin(7) ^ 2;
t470 = t504 ^ 2;
t553 = pkin(3) ^ 2;
t705 = sin(qJ(2));
t639 = pkin(3) * t705;
t613 = pkin(7) * t639;
t606 = 0.2e1 * t613;
t595 = t549 + t606;
t564 = t705 ^ 2;
t683 = t553 * t564;
t647 = 0.2e1 * t683;
t580 = -t553 + t595 + t647;
t578 = t470 * t580;
t538 = pkin(4) ^ 2;
t586 = t546 + t595;
t584 = -t538 + t586;
t602 = t639 + pkin(7);
t588 = t602 * t504;
t503 = cos(qJ(2));
t693 = t503 * t501;
t643 = pkin(3) * t693;
t612 = pkin(1) * t643;
t708 = 0.2e1 * t553;
t659 = t549 + t708;
t622 = t538 - t659;
t660 = -t549 + t538;
t624 = t546 - t660;
t645 = pkin(1) * t693;
t646 = t705 * pkin(7);
t663 = t546 - t549;
t713 = 0.1e1 / pkin(3);
t700 = t713 / 0.2e1;
t720 = 0.1e1 / t700;
t576 = sqrt(-0.4e1 * pkin(1) * (0.2e1 * (-t645 + t646) * pkin(3) + t624) * t588 + 0.4e1 * t584 * t612 + 0.4e1 * t663 * t683 - 0.4e1 * t624 * t613 - t544 - (t549 - (t720 + pkin(4)) * pkin(4)) * (t549 + (t720 - pkin(4)) * pkin(4)) + (-0.4e1 * t578 + 0.2e1 * t622) * t546);
t579 = t588 - t643;
t577 = 0.1e1 / (t532 * t579 + t553 + t586);
t710 = 3 * t546;
t599 = t710 - t622;
t692 = t503 * t504;
t642 = pkin(3) * t692;
t707 = 0.4e1 * t553;
t572 = t577 * ((t501 * t602 + t642) * t576 + t578 * t712 - ((-0.4e1 * t645 + 0.2e1 * t646) * pkin(3) + t599) * t588 + (t606 + t599) * t643 + (t647 - t606 - t707 - t624) * pkin(1));
t570 = t572 / 0.4e1;
t459 = pkin(3) * t503;
t581 = t708 + t584;
t460 = pkin(1) * t504;
t653 = 0.2e1 * t460;
t575 = t577 * ((pkin(1) + t579) * t576 + (t580 * t653 + t602 * t581) * t501 + (t581 * t504 + (0.4e1 * t470 - 0.2e1) * pkin(1) * t602) * t459);
t574 = t575 / 0.4e1;
t573 = t713 * t574;
t426 = 0.1e1 / (t546 + t678);
t697 = t426 / pkin(5);
t404 = (t713 * t419 * t570 + t420 * t573) * t697;
t571 = t713 * t572;
t405 = (-t420 * t571 / 0.4e1 + t419 * t573) * t697;
t502 = sin(pkin(9));
t505 = cos(pkin(9));
t396 = t404 * t505 + t405 * t502;
t702 = pkin(6) * t396;
t395 = t702 * t531;
t533 = pkin(6) ^ 2;
t682 = t395 + t533;
t382 = sqrt(-(-(t531 + pkin(6)) * pkin(6) + t682) * (pkin(6) * (t531 - pkin(6)) + t682));
t393 = t395 + 0.2e1 * t533;
t394 = -pkin(2) - t702;
t706 = 0.1e1 / pkin(6) / 0.2e1;
t619 = 0.1e1 / ((pkin(2) ^ 2) + t682) * t706;
t397 = t404 * t502 - t405 * t505;
t701 = pkin(6) * t397;
t370 = atan2((-t382 * t394 + t393 * t701) * t619, (-t382 * t701 - t393 * t394) * t619);
t368 = sin(t370);
t369 = cos(t370);
t569 = atan2(t575 * t700, t571 / 0.2e1);
t567 = sin(t569);
t568 = cos(t569);
t402 = -t501 * t568 - t504 * t567;
t403 = t501 * t567 - t504 * t568;
t366 = t368 * t403 + t369 * t402;
t380 = atan2(0.1e1 / pkin(2) * t382 * t706, -t396);
t378 = sin(t380);
t379 = cos(t380);
t592 = t368 * t402 - t369 * t403;
t724 = -t366 * t378 - t379 * t592;
t723 = t366 * t379 - t378 * t592;
t539 = 0.1e1 / pkin(4);
t689 = t539 / t553;
t555 = t553 ^ 2;
t537 = t538 ^ 2;
t548 = t549 ^ 2;
t664 = t544 + t548;
t530 = 0.2e1 * t549;
t667 = t530 - t538;
t686 = t549 * t538;
t585 = t667 * t546 + t537 / 0.6e1 + t664 - t686;
t434 = -t555 / 0.6e1 + t585;
t492 = -t553 / 0.3e1;
t456 = t492 + t549;
t603 = -0.2e1 * t612;
t437 = t456 * t603;
t441 = t460 + t602;
t462 = t549 - 0.3e1 * t553;
t469 = t504 * t470;
t550 = pkin(1) * t546;
t684 = t550 * t469;
t650 = pkin(7) * t684;
t617 = 0.8e1 * t650;
t444 = t462 * t617;
t488 = 0.4e1 / 0.3e1 * t553;
t463 = t546 + t549;
t482 = -t538 / 0.3e1;
t628 = t482 + t463;
t445 = t488 + t628;
t483 = -t538 / 0.2e1;
t657 = t553 + t549;
t621 = t546 + t657;
t447 = t483 + t621;
t508 = 10 * t546;
t529 = 0.3e1 * t549;
t714 = t529 - t538 - t553;
t448 = t714 * t508;
t449 = -t538 + t621;
t452 = pkin(7) * t653;
t528 = 0.4e1 * t549;
t454 = (t528 + t538) * t546;
t457 = -t546 / 0.3e1 + t549;
t458 = t463 ^ 2;
t461 = -0.30e2 * t538 + 0.60e2 * t549;
t465 = -(3 * t546) + t549;
t471 = 0.10e2 / 0.3e1 * t546;
t472 = -0.20e2 / 0.3e1 * t546;
t480 = -t538 / 0.6e1;
t481 = -t538 / 0.4e1;
t485 = -0.3e1 / 0.2e1 * t538;
t489 = 0.2e1 / 0.3e1 * t553;
t494 = 0.4e1 / 0.3e1 * t546;
t496 = t546 / 0.2e1;
t506 = 15 * t544;
t513 = 0.18e2 * t549;
t514 = -0.2e1 * t538;
t515 = -0.5e1 * t538;
t516 = -0.6e1 * t538;
t517 = 0.5e1 * t555;
t520 = 7 * t544;
t521 = 5 * t544;
t522 = 6 * t546;
t523 = 2 * t546;
t525 = 0.3e1 * t548;
t526 = 0.8e1 * t549;
t527 = 0.6e1 * t549;
t554 = pkin(3) * t553;
t540 = t554 ^ 2;
t559 = pkin(7) * t549;
t582 = 0.5e1 / 0.6e1 * t555 + t585;
t644 = t546 * t459;
t583 = t470 * (-t501 * t550 + t644);
t666 = t537 - t555;
t587 = 0.6e1 * t548 + t666 - 0.6e1 * t686;
t593 = t549 - t612;
t676 = t537 / 0.2e1 - t555 / 0.2e1;
t600 = -0.3e1 * t686 + t525 + t676;
t605 = -0.6e1 * t612;
t671 = (15 * t546) + t529;
t679 = t463 * ((t485 + t530) * t546 - 0.3e1 / 0.2e1 * t686 + t664 + t676) + t540;
t594 = ((t471 + t667) * t553 + t582) * t605 + (t506 + (t513 - 0.9e1 * t538) * t546 + t600) * t553 + (t485 + t671) * t555 + t679;
t604 = -0.4e1 * t612;
t596 = t447 * t604;
t620 = t710 + t657;
t704 = pkin(1) * t501;
t597 = -(0.3e1 * t553 + t463) * t704 + t620 * t459;
t484 = -0.2e1 / 0.3e1 * t538;
t493 = -0.2e1 / 0.3e1 * t553;
t669 = t514 - 0.2e1 * t553;
t625 = t527 + t669;
t626 = t484 + t463;
t670 = t508 + t530;
t675 = t493 + t549;
t598 = -(t517 + (t508 + t625) * t553 + (t493 + t626) * t463) * t704 + (t555 + (t484 + t493 + t670) * t553 + t521 + t625 * t546 + t549 * (t484 + t675)) * t459;
t627 = t484 + t489 + t530;
t677 = (t489 + t626) * t463 + t555;
t601 = t445 * t604 + (t522 + t627) * t553 + t677;
t451 = t460 + pkin(7);
t607 = t451 * t639;
t608 = t684 * t459;
t688 = t544 * t470 ^ 2;
t609 = t688 * t459;
t634 = t451 * t705 * t564 * t554;
t611 = -0.8e1 * t634;
t640 = 0.16e2 * t684;
t616 = pkin(7) * t640;
t658 = -t553 + t549;
t623 = -t538 + t658;
t490 = t553 / 0.3e1;
t629 = t480 + t490 + t549;
t630 = t538 / 0.3e1 + t490 + t530;
t631 = 0.2e1 / 0.3e1 * t538 + t489 + t528;
t632 = 0.4e1 / 0.3e1 * t538 + t488 - 0.2e1 * t549;
t691 = (pkin(7) + pkin(3)) * (pkin(7) - pkin(3));
t633 = t501 * t691;
t651 = 0.6e1 * t460;
t635 = pkin(7) * t651;
t652 = 0.4e1 * t460;
t636 = pkin(7) * t652;
t638 = -t704 / 0.2e1;
t687 = t546 * t470;
t641 = 0.12e2 * t687;
t648 = 0.4e1 * t687;
t649 = 0.8e1 * t688;
t654 = 0.2e1 * t704;
t655 = pkin(7) * t460;
t656 = 0.4e1 * pkin(7);
t661 = t548 + t555;
t662 = t548 - t544;
t668 = t515 - 0.5e1 * t553;
t672 = 0.4e1 / 0.7e1 * t549 - t538 / 0.7e1;
t673 = t496 + t549;
t674 = t546 / 0.3e1 + t549;
t685 = t549 * t546;
t690 = (pkin(7) + pkin(1)) * (pkin(7) - pkin(1));
t694 = t564 ^ 2 * t555;
t695 = t458 * (t546 + t623);
t709 = -0.6e1 * t553;
t711 = 4 * t544;
t715 = t481 + t553 / 0.2e1;
t699 = ((-0.24e2 * (0.4e1 / 0.3e1 * t687 + t452 + t457) * t694 * t704 + (0.4e1 * t583 + (t459 + t654) * t452 + t465 * t459 + (t483 + t620) * t654) * t611 - 0.12e2 * (-0.8e1 / 0.3e1 * t609 + ((t494 + t629) * t459 - (0.7e1 / 0.6e1 * t553 + t480 + t673) * t704) * t648 + (-t553 * t663 - 0.5e1 / 0.3e1 * t544 + t630 * t546 + t549 * (t482 + t456)) * t459 + (-t555 + (t472 + t631) * t553 - (3 * t544) + t632 * t546 + t548) * t638 + (-t501 * t544 * t469 + ((t546 + t629) * t459 + (-t546 + t659) * t638) * t460) * t656) * t683 - 0.6e1 * (-0.4e1 * ((0.5e1 / 0.6e1 * t553 + t496 + t480) * t503 * t720 + pkin(1) * t633) * t687 + (-0.8e1 * t608 + ((t482 + t489 + t710 + t549) * t459 - (0.8e1 / 0.3e1 * t553 + t628) * t704) * t652) * pkin(7) + t598) * t607 + 0.24e2 * t456 * t609 + ((t549 + 0.5e1 / 0.2e1 * t553 + 0.3e1 / 0.2e1 * t546 + t483) * t459 + t462 * t704 / 0.2e1) * t616 - 0.6e1 * ((-0.3e1 * t555 + (t472 + t632) * t553 + t631 * t546 + t662) * t459 - 0.2e1 * (-0.5e1 / 0.3e1 * t555 + (-t546 + t630) * t553 + t549 * (t492 + t628)) * t704) * t687 - 0.6e1 * t598 * t655 - (t540 + ((21 * t546) + t714) * t555 + (t669 * t549 + t448 + t525 + (35 * t544)) * t553 + (t520 + (t526 + t668) * t546 + t549 * t623) * t463) * t459 + (0.7e1 * t540 + ((35 * t546) + 0.15e2 * t549 + t668) * t555 + ((21 * t544) + t448 + 0.9e1 * t548 + (t516 + t709) * t549) * t553 + t695) * t704) * t576 + (0.16e2 * (t649 + t616 + (-(8 * t544) + 0.12e2 * t685) * t470 + (0.4e1 * pkin(1) * t559 - 0.12e2 * pkin(7) * t550) * t504 - 0.6e1 * t685 + t664) * t694 + 0.32e2 * (t617 + (-0.4e1 * t550 * t643 + t711 + (t707 + t514 + t526) * t546) * t470 + (-t546 + t593 + t715) * t636 + t603 * t690 + t465 * t447) * t634 + 0.24e2 * (t675 * t649 + 0.14e2 * (-0.32e2 / 0.21e2 * (t549 + t553 / 0.4e1 + t546 / 0.4e1 - t538 / 0.8e1) * t612 + 0.5e1 / 0.42e2 * t555 + (0.16e2 / 0.21e2 * t546 + t672) * t553 + t544 / 0.7e1 + t672 * t546 + t548 - 0.3e1 / 0.7e1 * t686 + t537 / 0.42e2) * t687 + t457 * t596 - t663 * t555 + (t454 - 0.10e2 / 0.3e1 * t544 + 0.2e1 * t548 - t686) * t553 + t434 * t690 + ((-0.2e1 / 0.3e1 * t612 + t481 + t673) * t640 + (-0.8e1 / 0.3e1 * (t674 + t715) * t612 + 0.5e1 / 0.18e2 * t555 + (0.4e1 / 0.3e1 * t549 + t494 + t482) * t553 + t548 + 0.2e1 / 0.3e1 * t685 - 0.2e1 / 0.3e1 * t686 - t544 / 0.3e1 + t537 / 0.18e2) * t651) * pkin(7)) * t683 + 0.8e1 * (t444 + (t447 * t691 + t437) * t641 + (t596 + (t522 + t667) * t553 + t582) * t635 + t594) * t607 + 0.16e2 * (t549 * t709 + t661) * t688 + 0.32e2 * (t447 * t462 + t603 * t691) * t650 + 0.24e2 * (t456 * t596 - t540 + (-t471 + t660) * t555 + (t454 + t555 / 0.6e1 - t537 / 0.6e1 + t662) * t553 + t434 * t549) * t687 + 0.8e1 * t594 * t655 - 0.8e1 * ((t485 + t529 + (7 * t546)) * t555 + (t520 + (t515 + 0.10e2 * t549) * t546 + t600) * t553 + t679) * t612 + t555 ^ 2 + (t514 + t528 + (28 * t546)) * t540 + (t461 * t546 + (70 * t544) + t587) * t555 + (t461 * t544 + t548 * t516 + t587 * t522 + t666 * t530 + (28 * t550 ^ 2) + 0.4e1 * t559 ^ 2) * t553 + t449 * t695) * t441) / ((t611 * t704 - 0.4e1 * (0.2e1 * t583 - t663 * t459 + (0.2e1 * pkin(7) * t642 + t501 * (t523 + t553)) * pkin(1)) * t683 - 0.4e1 * (-0.2e1 * t470 * t644 + (t459 - t704) * t452 + t597) * t607 + 0.8e1 * pkin(7) * t608 + ((pkin(3) * t711 + 0.8e1 * t546 * t554) * t503 + 0.4e1 * t550 * t633) * t470 - 0.4e1 * t597 * t655 - (t670 * t553 + t521 + t661 + 0.6e1 * t685) * t459 + (t517 + (t508 + t527) * t553 + t458) * t704) * t576 + (0.8e1 * (t452 + t648 + t465) * t634 + 0.12e2 * (0.6e1 * (-0.4e1 / 0.9e1 * t612 + 0.4e1 / 0.9e1 * t553 - t538 / 0.9e1 + t674) * t687 + t457 * t603 + t445 * t690 + (t684 + (t480 + t489 + t593) * t460) * t656) * t683 + 0.6e1 * (t658 * t648 + (t445 + t603) * t636 + t601) * t607 + t444 + (t445 * t691 + t437) * t641 + t601 * t635 + ((t471 + t627) * t553 + t677) * t605 + t540 + (-t538 + t553 + t671) * t555 + (t506 + (t513 + t516 + 0.6e1 * t553) * t546 + t525 + (t514 + t708) * t549) * t553 + t458 * t449) * t441);
t386 = (t570 * t699 - t576 * t575 / 0.4e1) * t689;
t387 = (t576 * t570 + t574 * t699) * t689;
t438 = -t705 * t501 - t692;
t439 = -t705 * t504 + t693;
t373 = atan2(t386 * t438 + t387 * t439, -t386 * t439 + t387 * t438);
t371 = sin(t373);
t372 = cos(t373);
t637 = t539 * t700;
t390 = atan2(t576 * t637, t637 * t699);
t388 = sin(t390);
t389 = cos(t390);
t375 = t388 * t403 + t389 * t402;
t610 = -t388 * t402 + t403 * t389;
t722 = t371 * t375 - t372 * t610;
t721 = t371 * t610 + t372 * t375;
t696 = t426 / pkin(1);
t681 = t403 * pkin(3) - t460;
t680 = t403 * pkin(2) - t460;
t618 = t697 / 0.2e1;
t615 = t402 * pkin(3) - t704;
t614 = t402 * pkin(2) - t704;
t385 = atan2(t397, t396);
t383 = sin(t385);
t384 = cos(t385);
t591 = t383 * t403 + t384 * t402;
t590 = t383 * t402 - t384 * t403;
t432 = -pkin(1) * t436 + pkin(5);
t428 = t433 + t523;
t418 = atan2((pkin(1) * t428 * t435 + t421 * t432) * t696 / 0.2e1, -(-pkin(1) * t698 + t428 * t432) * t696 / 0.2e1);
t417 = atan2(t420 * t618, t419 * t618);
t416 = cos(t418);
t415 = cos(t417);
t414 = sin(t418);
t413 = sin(t417);
t410 = -t413 * t501 + t415 * t504;
t409 = t413 * t504 + t415 * t501;
t408 = -t414 * t498 + t416 * t499;
t407 = t414 * t499 + t416 * t498;
t1 = -m(1) * (g(1) * rSges(1,1) + g(2) * rSges(1,2) + g(3) * rSges(1,3)) - m(2) * (g(1) * (-rSges(2,1) * t504 + rSges(2,2) * t501) + g(2) * (-rSges(2,1) * t501 - rSges(2,2) * t504) + g(3) * rSges(2,3)) - m(3) * (g(1) * (rSges(3,1) * t403 - rSges(3,2) * t402 - t460) + g(2) * (rSges(3,1) * t402 + rSges(3,2) * t403 - t704) + g(3) * rSges(3,3)) - m(4) * (g(1) * (rSges(4,1) * t592 + rSges(4,2) * t366 + t680) + g(2) * (-rSges(4,1) * t366 + rSges(4,2) * t592 + t614) + g(3) * rSges(4,3)) - m(5) * (g(1) * (rSges(5,1) * t610 - rSges(5,2) * t375 + t681) + g(2) * (rSges(5,1) * t375 + rSges(5,2) * t610 + t615) + g(3) * rSges(5,3)) - m(6) * (g(1) * (pkin(5) * t499 + rSges(6,1) * t408 - rSges(6,2) * t407) + g(2) * (pkin(5) * t498 + rSges(6,1) * t407 + rSges(6,2) * t408) + g(3) * rSges(6,3)) - m(7) * (g(1) * (t590 * rSges(7,1) + t591 * rSges(7,2) - t460) + g(2) * (-t591 * rSges(7,1) + t590 * rSges(7,2) - t704) + g(3) * rSges(7,3)) - m(8) * (g(1) * (t705 * rSges(8,1) + t503 * rSges(8,2) + pkin(7)) + g(2) * (-t503 * rSges(8,1) + t705 * rSges(8,2)) + g(3) * rSges(8,3)) - m(9) * (g(1) * (rSges(9,1) * t410 - rSges(9,2) * t409 - t460) + g(2) * (rSges(9,1) * t409 + rSges(9,2) * t410 - t704) + g(3) * rSges(9,3)) - m(10) * (g(1) * (t592 * pkin(6) + t724 * rSges(10,1) - t723 * rSges(10,2) + t680) + g(2) * (-t366 * pkin(6) + t723 * rSges(10,1) + t724 * rSges(10,2) + t614) + g(3) * rSges(10,3)) - m(11) * (g(1) * (t610 * pkin(4) + t722 * rSges(11,1) + t721 * rSges(11,2) + t681) + g(2) * (t375 * pkin(4) - t721 * rSges(11,1) + t722 * rSges(11,2) + t615) + g(3) * rSges(11,3));
U = t1;
