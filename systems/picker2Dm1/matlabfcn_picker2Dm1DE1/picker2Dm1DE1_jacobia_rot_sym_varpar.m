% Rotatorische Teilmatrix der analytischen Jacobi-Matrix für beliebiges Segment von
% picker2Dm1DE1
% Use Code from Maple symbolic Code Generation
% 
% analytische Jacobi-Matrix: Differentieller Zusammenhang zwischen
% Endeffektorposition und verallgemeinerten Koordinaten.
% Zeitableitung der Winkeldarstellung des Endeffektors in Basis-Koordinaten
% 
% Winkeldarstellung: Euler-XYZ-Winkel, rotx(alpha)*roty(beta)*rotz(gamma)
% 
% Input:
% qJ [2x1]
%   Generalized joint coordinates (joint angles)
% link_index [1x1 uint8]
%   Index des Segmentes, auf dem der Punkt C liegt.
%   Wie in picker2Dm1DE1_fkine_fixb_rotmat_mdh_sym_varpar.m (1=Basis).
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[L1,L2,L3,L4,L5,L6,e,phi05,phi1]';
% 
% Output:
% Ja_rot [3x2]
%   Rotatorische Teilmatrix der analytischen Jacobi-Matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2020-05-10 19:54
% Revision: 52c9de996ed1e2eb3528e92ec0df589a9be0640a (2020-05-10)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function Ja_rot = picker2Dm1DE1_jacobia_rot_sym_varpar(qJ, link_index, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(2,1),uint8(0),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [2 1]), ...
  'picker2Dm1DE1_jacobia_rot_sym_varpar: qJ has to be [2x1] (double)');
assert(isa(link_index,'uint8') && all(size(link_index) == [1 1]), ...
	'picker2Dm1DE1_jacobia_rot_sym_varpar: link_index has to be [1x1] uint8');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'picker2Dm1DE1_jacobia_rot_sym_varpar: pkin has to be [9x1] (double)');
Ja_rot=NaN(3,2);
if link_index == 0
	%% Symbolic Calculation
	% From jacobia_rot_0_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-05-10 18:25:59
	% EndTime: 2020-05-10 18:25:59
	% DurationCPUTime: 0.01s
	% Computational Cost: add. (0->0), mult. (0->0), div. (0->0), fcn. (0->0), ass. (0->1)
	t1 = [0, 0; 0, 0; 0, 0;];
	Ja_rot = t1;
elseif link_index == 1
	%% Symbolic Calculation
	% From jacobia_rot_1_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-05-10 18:25:59
	% EndTime: 2020-05-10 18:25:59
	% DurationCPUTime: 0.01s
	% Computational Cost: add. (3->0), mult. (6->0), div. (5->0), fcn. (6->0), ass. (0->1)
	t1 = [0, 0; 0, 0; 1, 0;];
	Ja_rot = t1;
elseif link_index == 2
	%% Symbolic Calculation
	% From jacobia_rot_2_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-05-10 18:26:04
	% EndTime: 2020-05-10 18:26:10
	% DurationCPUTime: 1.39s
	% Computational Cost: add. (10008->96), mult. (26488->173), div. (284->6), fcn. (6912->6), ass. (0->78)
	t212 = 4 * pkin(1);
	t209 = 2 * pkin(7);
	t208 = 2 * pkin(1);
	t164 = (pkin(3) ^ 2);
	t160 = 2 * t164;
	t157 = sin(qJ(1));
	t158 = cos(qJ(2));
	t195 = t157 * t158;
	t147 = pkin(3) * t195;
	t177 = pkin(1) * t147;
	t144 = -0.2e1 * t177;
	t166 = pkin(1) ^ 2;
	t156 = sin(qJ(2));
	t148 = pkin(3) * t156 + pkin(7);
	t159 = cos(qJ(1));
	t142 = t148 * t159;
	t182 = pkin(1) * t142;
	t187 = t156 * t209;
	t149 = pkin(3) * t187;
	t167 = pkin(7) ^ 2;
	t189 = t149 + t167;
	t131 = t144 + t164 + t166 + 0.2e1 * t182 + t189;
	t129 = 0.1e1 / t131;
	t207 = t129 / 0.2e1;
	t154 = t156 ^ 2;
	t138 = t154 * t160 - t164 + t189;
	t206 = pkin(1) * t138;
	t205 = pkin(3) * t158;
	t130 = 0.1e1 / t131 ^ 2;
	t193 = t158 * t159;
	t181 = pkin(3) * t193;
	t197 = t156 * t157;
	t145 = pkin(3) * pkin(1) * t197;
	t153 = pkin(7) * t205;
	t191 = t145 + t153;
	t202 = t130 * (pkin(1) * t181 + t191);
	t196 = t157 * t148;
	t137 = t181 + t196;
	t201 = t130 * t137 * pkin(1);
	t188 = -pkin(4) ^ 2 + t167;
	t152 = t166 + t188;
	t141 = t149 + t152;
	t135 = t144 + t141;
	t151 = (t166 - t167) * t164;
	t162 = 0.2e1 * pkin(3);
	t155 = t159 ^ 2;
	t174 = -0.2e1 * t138 * t155 - t188;
	t180 = -0.4e1 * pkin(7) * pkin(3) * t152;
	t186 = 2 * t166;
	t168 = sqrt(0.4e1 * t151 * t154 + t156 * t180 - (t166 ^ 2) - (t167 - (t162 + pkin(4)) * pkin(4)) * (t167 + (t162 - pkin(4)) * pkin(4)) + (-(2 * t164) + t174) * t186 + (-t135 * t142 + t141 * t147) * t212);
	t200 = t137 * t168;
	t150 = 0.2e1 * t153;
	t176 = 0.4e1 * t164 * t156 * t158;
	t139 = t150 + t176;
	t199 = t139 * t155;
	t198 = t148 * t155;
	t194 = t157 * t159;
	t192 = t159 * t168;
	t190 = -t147 + t142;
	t185 = t157 * t164 * pkin(7);
	t124 = 0.1e1 / t168;
	t184 = 0.2e1 * t124 * ((t138 * t194 + t198 * t205) * t186 + (t135 * t196 + t141 * t181) * pkin(1));
	t183 = t159 * t206;
	t179 = (-0.4e1 * t166 * t199 + (0.8e1 * t151 * t156 + t180) * t158 + (-0.8e1 * t191 * t142 + 0.8e1 * t158 ^ 2 * t185 + 0.4e1 * (-t135 * t193 - t141 * t197) * pkin(3)) * pkin(1)) * t124 / 0.2e1;
	t146 = t160 + 3 * t166 + t188;
	t133 = t146 + t149 - 0.4e1 * t177;
	t143 = t147 - pkin(1);
	t120 = -t133 * t142 + t200 + (t143 * t187 + t146 * t195) * pkin(3) + (-t166 + (0.2e1 * t154 - 0.4e1) * t164 + t174) * pkin(1);
	t119 = 0.1e1 / t120 ^ 2;
	t140 = t160 + t141;
	t127 = t140 * t148 + 0.2e1 * t183;
	t128 = t140 * t159 + (0.4e1 * t155 - 0.2e1) * t148 * pkin(1);
	t136 = pkin(1) + t190;
	t121 = t127 * t157 + t128 * t205 + t136 * t168;
	t175 = 0.1e1 / (t119 * t121 ^ 2 + 0.1e1) * t131;
	t173 = 0.1e1 / t120 * t175;
	t170 = t119 * t121 * t175;
	t1 = [0, 0; 0, 0; 0.2e1 * ((-t200 + t136 * t184 + t127 * t159 + ((-t140 - 0.8e1 * t182) * t205 - 0.2e1 * t157 * t206) * t157) * t207 + t121 * t201) * t173 - 0.2e1 * ((t190 * t168 + t137 * t184 + (t148 * t133 + 0.4e1 * t183) * t157 + (t164 * t159 * t187 + (t146 * t159 + t198 * t212) * pkin(3)) * t158) * t207 + t120 * t201) * t170 + 0.1e1, 0.2e1 * ((t139 * t194 * t208 + t136 * t179) * t207 - t121 * t202 + ((t157 * t168 - t128) * t156 * t207 + (t192 / 0.2e1 + (t148 * t209 + t140) * t157 / 0.2e1 + (pkin(7) * t159 + t155 * t208 - pkin(1)) * t205) * t129 * t158) * pkin(3)) * t173 - 0.2e1 * ((t147 * t168 + t137 * t179 - (0.4e1 * t145 + t150) * t142 - 0.2e1 * t154 * t185 + (t176 - 0.2e1 * t199) * pkin(1) + ((-t133 * t159 + t143 * t209) * t158 + (-t146 * t157 - t192) * t156) * pkin(3)) * t207 - t120 * t202) * t170;];
	Ja_rot = t1;
elseif link_index == 3
	%% Symbolic Calculation
	% From jacobia_rot_3_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-05-10 18:27:44
	% EndTime: 2020-05-10 18:28:55
	% DurationCPUTime: 21.89s
	% Computational Cost: add. (456716->185), mult. (1156280->375), div. (22588->22), fcn. (389112->20), ass. (0->196)
	t353 = sin(qJ(2));
	t462 = 0.2e1 * t353;
	t420 = pkin(7) * t462;
	t346 = pkin(3) * t420;
	t371 = pkin(1) ^ 2;
	t372 = pkin(7) ^ 2;
	t421 = -pkin(4) ^ 2 + t372;
	t349 = t371 + t421;
	t337 = t346 + t349;
	t354 = sin(qJ(1));
	t356 = cos(qJ(2));
	t429 = t354 * t356;
	t343 = pkin(3) * t429;
	t393 = pkin(1) * t343;
	t341 = -0.2e1 * t393;
	t326 = t341 + t337;
	t350 = t353 ^ 2;
	t369 = pkin(3) ^ 2;
	t359 = 0.2e1 * t369;
	t422 = t346 + t372;
	t334 = t350 * t359 - t369 + t422;
	t357 = cos(qJ(1));
	t427 = t356 * t357;
	t411 = pkin(3) * t427;
	t418 = 0.4e1 * pkin(1);
	t428 = t354 * t357;
	t453 = pkin(3) * t353;
	t345 = pkin(7) + t453;
	t431 = t345 * t354;
	t351 = t357 ^ 2;
	t432 = t345 * t351;
	t452 = pkin(3) * t356;
	t309 = 0.8e1 * (t334 * t428 + t432 * t452) * t371 + (t326 * t431 + t337 * t411) * t418;
	t336 = t359 + t337;
	t455 = pkin(1) * t334;
	t414 = t357 * t455;
	t313 = t336 * t345 + 0.2e1 * t414;
	t338 = t345 * t357;
	t423 = -t343 + t338;
	t328 = pkin(1) + t423;
	t468 = 0.4e1 * t369;
	t348 = (t371 - t372) * t468;
	t361 = 0.2e1 * pkin(3);
	t387 = -0.2e1 * t334 * t351 - t421;
	t407 = -0.4e1 * pkin(7) * pkin(3) * t349;
	t373 = sqrt(t348 * t350 + t353 * t407 - (t372 - (t361 + pkin(4)) * pkin(4)) * (t372 + (t361 - pkin(4)) * pkin(4)) + (-t326 * t338 + t337 * t343) * t418 + (-0.4e1 * t369 + 0.2e1 * t387 - t371) * t371);
	t458 = 0.1e1 / t373 / 0.2e1;
	t402 = t328 * t458;
	t413 = pkin(1) * t338;
	t329 = t411 + t431;
	t435 = t329 * t373;
	t294 = -t435 + t309 * t402 + t313 * t357 + ((-t336 - 0.8e1 * t413) * t452 - 0.2e1 * t354 * t455) * t354;
	t342 = t359 + 0.3e1 * t371 + t421;
	t323 = t342 + t346 - 0.4e1 * t393;
	t401 = t329 * t458;
	t296 = t423 * t373 + t309 * t401 + (t345 * t323 + 0.4e1 * t414) * t354 + (t369 * t357 * t420 + (t342 * t357 + t432 * t418) * pkin(3)) * t356;
	t339 = t343 - pkin(1);
	t301 = -t323 * t338 + t435 + (t339 * t420 + t342 * t429) * pkin(3) + (-t371 + (0.2e1 * t350 - 0.4e1) * t369 + t387) * pkin(1);
	t314 = t336 * t357 + (0.4e1 * t351 - 0.2e1) * t345 * pkin(1);
	t302 = t313 * t354 + t314 * t452 + t328 * t373;
	t300 = 0.1e1 / t301 ^ 2;
	t317 = t341 + t369 + t371 + 0.2e1 * t413 + t422;
	t370 = 0.1e1 / pkin(3);
	t392 = pkin(3) / (t300 * t302 ^ 2 + 0.1e1) * t317 * t370;
	t381 = t300 * t302 * t392;
	t386 = 0.1e1 / t301 * t392;
	t316 = 0.1e1 / t317 ^ 2;
	t469 = 0.2e1 * pkin(1);
	t437 = t316 * t329 * t469;
	t397 = t437 / 0.2e1;
	t315 = 0.1e1 / t317;
	t456 = t315 / 0.2e1;
	t470 = 0.2e1 * (t294 * t456 + t302 * t397) * t386 - 0.2e1 * (t296 * t456 + t301 * t397) * t381 + 0.1e1;
	t467 = 0.1e1 / pkin(6) / 0.2e1;
	t400 = t370 * t456;
	t291 = atan2(t302 * t400, t301 * t400);
	t289 = sin(t291);
	t290 = cos(t291);
	t466 = t357 * t289 + t354 * t290;
	t465 = 0.2e1 * pkin(7);
	t464 = -0.2e1 * pkin(1);
	t463 = -2 * pkin(2);
	t362 = 2 * pkin(2);
	t366 = (pkin(5) ^ 2);
	t461 = 2 * t366;
	t352 = cos(pkin(8));
	t447 = sin(pkin(8));
	t333 = -t352 * t357 - t447 * t354;
	t450 = pkin(5) * t333;
	t331 = t450 * t464;
	t327 = t331 + t461;
	t330 = -pkin(1) + t450;
	t425 = t331 + t366;
	t318 = -(t469 + pkin(5)) * pkin(5) + t425;
	t319 = pkin(5) * (t469 - pkin(5)) + t425;
	t375 = sqrt(-t318 * t319);
	t332 = t352 * t354 - t447 * t357;
	t451 = pkin(5) * t332;
	t308 = -t327 * t451 - t330 * t375;
	t441 = t302 * t308;
	t434 = t332 * t375;
	t307 = pkin(5) * t434 - t327 * t330;
	t443 = t301 * t307;
	t380 = t443 / 0.4e1 + t441 / 0.4e1;
	t324 = t371 + t425;
	t436 = 0.1e1 / t324 / pkin(5);
	t406 = t370 * t436;
	t389 = t315 * t406;
	t285 = t380 * t389;
	t440 = t307 * t302;
	t442 = t301 * t308;
	t379 = t442 / 0.4e1 - t440 / 0.4e1;
	t286 = t379 * t389;
	t355 = sin(pkin(9));
	t358 = cos(pkin(9));
	t449 = pkin(6) * (-t285 * t358 + t286 * t355);
	t280 = t449 * t463;
	t364 = pkin(6) ^ 2;
	t426 = t280 + t364;
	t273 = -(t362 + pkin(6)) * pkin(6) + t426;
	t274 = pkin(6) * (t362 - pkin(6)) + t426;
	t374 = sqrt(-t273 * t274);
	t460 = -0.1e1 / t374 / 0.2e1;
	t459 = t302 / 0.4e1;
	t457 = t307 / 0.4e1;
	t277 = (pkin(2) ^ 2) + t426;
	t454 = pkin(2) / t277 ^ 2;
	t282 = t285 * t355 + t286 * t358;
	t448 = pkin(6) * t282;
	t278 = t280 + 0.2e1 * t364;
	t279 = -pkin(2) + t449;
	t259 = -t278 * t279 - t374 * t448;
	t260 = t278 * t448 - t279 * t374;
	t403 = 0.1e1 / t277 * t467;
	t250 = atan2(t260 * t403, t259 * t403);
	t248 = sin(t250);
	t249 = cos(t250);
	t284 = t289 * t354 - t290 * t357;
	t246 = -t248 * t466 - t249 * t284;
	t244 = 0.1e1 / t246 ^ 2;
	t384 = t248 * t284 - t249 * t466;
	t446 = t244 * t384;
	t417 = t354 * t369 * pkin(7);
	t347 = t452 * t465;
	t430 = t353 * t354;
	t412 = pkin(3) * t430;
	t394 = pkin(1) * t412;
	t424 = 0.2e1 * t394 + t347;
	t416 = t353 * t468;
	t335 = t356 * t416 + t347;
	t433 = t335 * t351;
	t303 = -0.4e1 * t371 * t433 + (t348 * t462 + t407) * t356 + (-t424 * t338 + 0.2e1 * t356 ^ 2 * t417 + (-t326 * t427 - t337 * t430) * pkin(3)) * t418;
	t445 = (t303 * t402 + t335 * t428 * t469 + ((t354 * t373 - t314) * t353 + (t357 * t373 + (t345 * t465 + t336) * t354 + 0.2e1 * (pkin(7) * t357 + t351 * t469 - pkin(1)) * t452) * t356) * pkin(3)) * t315;
	t444 = ((-t357 * t453 + t343) * t373 + t303 * t401 + t433 * t464 - (t347 + 0.4e1 * t394) * t338 - 0.2e1 * t350 * t417 - t342 * t412 + (pkin(1) * t416 + (-t323 * t357 + t339 * t465) * pkin(3)) * t356) * t315;
	t439 = 0.1e1 / t375 * (t318 + t319) * t469 * t451;
	t438 = t316 * (t411 * t469 + t424);
	t415 = pkin(1) / t324 ^ 2 * t332;
	t258 = 0.1e1 / t259 ^ 2;
	t410 = pkin(6) / (t258 * t260 ^ 2 + 0.1e1) * t277;
	t409 = t259 * t454;
	t408 = t260 * t454;
	t405 = t279 * t460;
	t404 = t282 * t460;
	t399 = -t438 / 0.2e1;
	t398 = -t438 / 0.4e1;
	t396 = t282 * t364 * t463;
	t395 = t279 * t362 - t278;
	t391 = 0.1e1 / t259 * t410;
	t390 = pkin(6) * t403;
	t388 = t436 * t437;
	t385 = t258 * t260 * t410;
	t382 = pkin(2) * (t273 + t274) / t467;
	t378 = t445 / 0.4e1 + t302 * t398;
	t377 = t444 / 0.4e1 + t301 * t398;
	t298 = -t330 * t439 / 0.2e1 + t332 ^ 2 * pkin(1) * t461 + (t327 * t333 - t434) * pkin(5);
	t297 = (-t375 * t333 + (t439 / 0.2e1 - t327 + t330 * t469) * t332) * pkin(5);
	t272 = (t378 * t307 - t377 * t308) * t406;
	t271 = (t377 * t307 + t378 * t308) * t406;
	t267 = 0.2e1 * (t445 / 0.2e1 + t302 * t399) * t386 - 0.2e1 * (t444 / 0.2e1 + t301 * t399) * t381;
	t266 = (-t379 * t388 + ((-t442 / 0.2e1 + t440 / 0.2e1) * t415 + (-t296 * t308 / 0.4e1 - t301 * t298 / 0.4e1 + t297 * t459 + t294 * t457) * t436) * t315) * t370;
	t265 = (t380 * t388 + ((t443 / 0.2e1 + t441 / 0.2e1) * t415 + (t296 * t457 + t301 * t297 / 0.4e1 + t294 * t308 / 0.4e1 + t298 * t459) * t436) * t315) * t370;
	t264 = t271 * t355 - t272 * t358;
	t263 = -t271 * t358 - t272 * t355;
	t262 = t284 * t267;
	t261 = t466 * t267;
	t256 = t265 * t355 - t266 * t358;
	t255 = -t265 * t358 - t266 * t355;
	t254 = t470 * t466;
	t253 = t470 * t284;
	t252 = t263 * t382;
	t247 = t255 * t382;
	t243 = 0.1e1 / t246;
	t242 = 0.1e1 / (t244 * t384 ^ 2 + 0.1e1);
	t241 = 0.2e1 * ((t252 * t405 + t263 * t396 + (-t263 * t374 + t264 * t278) * pkin(6)) * t403 + t263 * t408) * t391 - 0.2e1 * (t263 * t409 + (t252 * t404 + t395 * t263 - t374 * t264) * t390) * t385;
	t240 = 0.2e1 * ((t247 * t405 + t255 * t396 + (-t255 * t374 + t256 * t278) * pkin(6)) * t403 + t255 * t408) * t391 - 0.2e1 * (t255 * t409 + (t247 * t404 + t395 * t255 - t374 * t256) * t390) * t385;
	t1 = [0, 0; 0, 0; ((t246 * t240 - t248 * t254 - t249 * t253) * t243 + (t384 * t240 + t248 * t253 - t249 * t254) * t446) * t242, ((t241 * t246 - t248 * t261 - t249 * t262) * t243 + (t241 * t384 + t248 * t262 - t249 * t261) * t446) * t242;];
	Ja_rot = t1;
elseif link_index == 4
	%% Symbolic Calculation
	% From jacobia_rot_4_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-05-10 18:27:02
	% EndTime: 2020-05-10 18:27:48
	% DurationCPUTime: 15.04s
	% Computational Cost: add. (87448->594), mult. (278212->978), div. (936->16), fcn. (38108->12), ass. (0->419)
	t746 = (pkin(3) ^ 2);
	t725 = 2 * t746;
	t750 = (pkin(1) ^ 2);
	t730 = 3 * t750;
	t741 = pkin(4) ^ 2;
	t752 = (pkin(7) ^ 2);
	t885 = (t752 - t741);
	t639 = t725 + t730 + t885;
	t711 = sin(qJ(2));
	t954 = pkin(7) * t711;
	t884 = 0.2e1 * t954;
	t646 = pkin(3) * t884;
	t712 = sin(qJ(1));
	t713 = cos(qJ(2));
	t917 = t712 * t713;
	t642 = pkin(3) * t917;
	t799 = pkin(1) * t642;
	t788 = -0.4e1 * t799;
	t585 = t639 + t646 + t788;
	t667 = pkin(3) * t711;
	t644 = t667 + pkin(7);
	t714 = cos(qJ(1));
	t625 = t644 * t714;
	t627 = t642 - pkin(1);
	t679 = t711 ^ 2;
	t921 = t679 * t746;
	t862 = 0.2e1 * t921;
	t890 = -t746 + t752;
	t602 = t646 + t862 + t890;
	t683 = t714 ^ 2;
	t960 = -0.2e1 * t683;
	t780 = t602 * t960 - t885;
	t916 = t713 * t714;
	t846 = pkin(3) * t916;
	t928 = t644 * t712;
	t594 = t846 + t928;
	t654 = t750 + t885;
	t610 = t646 + t654;
	t629 = -0.2e1 * t799;
	t588 = t629 + t610;
	t888 = t750 - t752;
	t651 = t888 * t746;
	t739 = 0.2e1 * pkin(3);
	t748 = t750 ^ 2;
	t838 = -0.4e1 * pkin(3) * pkin(7) * t654;
	t875 = 2 * t750;
	t976 = 0.4e1 * pkin(1);
	t539 = 0.4e1 * t651 * t679 + t711 * t838 - t748 - (t752 - (t739 + pkin(4)) * pkin(4)) * (t752 + (t739 - pkin(4)) * pkin(4)) + (-(2 * t746) + t780) * t875 + (-t588 * t625 + t610 * t642) * t976;
	t753 = sqrt(t539);
	t933 = t594 * t753;
	t529 = -t585 * t625 + t933 + (t627 * t884 + t639 * t917) * pkin(3) + (-t750 + (0.2e1 * t679 - 0.4e1) * t746 + t780) * pkin(1);
	t608 = t725 + t610;
	t669 = pkin(1) * t714;
	t851 = t602 * t669;
	t558 = t608 * t644 + 0.2e1 * t851;
	t959 = 0.4e1 * t683;
	t561 = t608 * t714 + (t959 - 0.2e1) * t644 * pkin(1);
	t901 = -t642 + t625;
	t592 = pkin(1) + t901;
	t668 = pkin(3) * t713;
	t530 = t558 * t712 + t561 * t668 + t592 * t753;
	t680 = t712 ^ 2;
	t528 = 0.1e1 / t529 ^ 2;
	t674 = t750 + t752;
	t817 = t746 + t674;
	t850 = pkin(1) * t625;
	t566 = t629 + t646 + t817 + 0.2e1 * t850;
	t747 = 0.1e1 / pkin(3);
	t794 = pkin(3) / (t528 * t530 ^ 2 + 0.1e1) * t566 * t747;
	t773 = t528 * t530 * t794;
	t779 = 0.1e1 / t529 * t794;
	t538 = 0.1e1 / t753;
	t914 = t714 * t712;
	t929 = t644 * t683;
	t541 = (t602 * t914 + t668 * t929) * t875 + (t588 * t928 + t610 * t846) * pkin(1);
	t867 = 0.2e1 * t538 * t541;
	t952 = pkin(7) * t714;
	t872 = t711 * t952;
	t565 = 0.1e1 / t566 ^ 2;
	t935 = t565 * t594 * pkin(1);
	t564 = 0.1e1 / t566;
	t949 = t564 / 0.2e1;
	t979 = 0.2e1 * ((-t933 + t592 * t867 - 0.2e1 * pkin(1) * t602 * t680 + t558 * t714 + (-t608 - 0.8e1 * t850) * t642) * t949 + t530 * t935) * t779 - 0.2e1 * ((t901 * t753 + t594 * t867 + (t585 * t644 + 0.4e1 * t851) * t712 + (t872 * t725 + (t639 * t714 + t929 * t976) * pkin(3)) * t713) * t949 + t529 * t935) * t773 + 0.1e1;
	t898 = t750 / 0.3e1 + t752;
	t591 = -0.4e1 / 0.9e1 * t799 + 0.4e1 / 0.9e1 * t746 - t741 / 0.9e1 + t898;
	t692 = -t741 / 0.6e1;
	t701 = 0.2e1 / 0.3e1 * t746;
	t775 = t752 - t799;
	t599 = t692 + t701 + t775;
	t700 = 0.4e1 / 0.3e1 * t746;
	t694 = -t741 / 0.3e1;
	t821 = t694 + t674;
	t631 = t700 + t821;
	t664 = -t750 / 0.3e1 + t752;
	t800 = -0.2e1 * t642;
	t908 = t750 * t683;
	t853 = 0.6e1 * t908;
	t682 = t714 * t683;
	t754 = pkin(1) * t750;
	t919 = t682 * t754;
	t869 = pkin(7) * t919;
	t883 = 0.4e1 * t952;
	t910 = (pkin(7) + pkin(1)) * (pkin(7) - pkin(1));
	t543 = 0.4e1 * t869 + t591 * t853 + t631 * t910 + (t599 * t883 + t664 * t800) * pkin(1);
	t729 = 6 * t750;
	t696 = -0.2e1 / 0.3e1 * t741;
	t737 = 2 * t752;
	t820 = t696 + t701 + t737;
	t758 = t746 ^ 2;
	t819 = t696 + t674;
	t903 = (t701 + t819) * t674 + t758;
	t555 = t631 * t788 + (t729 + t820) * t746 + t903;
	t665 = 0.10e2 / 0.3e1 * t750;
	t567 = (t665 + t820) * t746 + t903;
	t704 = -t746 / 0.3e1;
	t662 = t704 + t752;
	t604 = t662 * t629;
	t911 = (pkin(7) + pkin(3)) * (pkin(7) - pkin(3));
	t569 = t631 * t911 + t604;
	t673 = -3 * t746 + t752;
	t809 = 0.8e1 * t869;
	t615 = t673 * t809;
	t640 = -t741 + t817;
	t645 = t669 + pkin(7);
	t666 = t674 ^ 2;
	t715 = 15 * t748;
	t716 = 15 * t750;
	t751 = t752 ^ 2;
	t733 = 3 * t751;
	t757 = pkin(3) * t746;
	t743 = t757 ^ 2;
	t596 = t629 + t631;
	t650 = t890 * t750;
	t880 = pkin(7) * t669;
	t836 = 0.4e1 * t880;
	t542 = t596 * t836 + t650 * t959 + t555;
	t878 = 0.2e1 * t669;
	t649 = pkin(7) * t878;
	t676 = -3 * t750 + t752;
	t854 = 0.4e1 * t908;
	t603 = t649 + t854 + t676;
	t678 = t711 * t679;
	t922 = t678 * t757;
	t864 = 0.8e1 * t922;
	t876 = 0.6e1 * t667;
	t770 = t542 * t876 + t603 * t864;
	t736 = 3 * t752;
	t891 = -t741 + t746;
	t818 = t736 + t891;
	t839 = 0.12e2 * t908;
	t841 = 0.12e2 * t921;
	t526 = t543 * t841 + t615 + t569 * t839 + t743 + (t716 + t818) * t758 + (t729 * t818 + t737 * t891 + t715 + t733) * t746 + t666 * t640 + t770 * t645 + 0.6e1 * (t555 * t952 - t567 * t642) * pkin(1);
	t672 = t746 + t875;
	t845 = t750 * t668;
	t611 = -t712 * t754 + t845;
	t932 = t611 * t683;
	t966 = 0.2e1 * pkin(7);
	t556 = -t888 * t668 + 0.2e1 * t932 + (t672 * t712 + t846 * t966) * pkin(1);
	t894 = t730 + t752;
	t655 = t746 + t894;
	t614 = t655 * t668;
	t656 = 3 * t746 + t674;
	t926 = t656 * t712;
	t584 = -pkin(1) * t926 + t614;
	t852 = 0.8e1 * t750 * t757;
	t957 = 4 * t748;
	t643 = pkin(3) * t957 + t852;
	t827 = t754 * t911;
	t586 = t643 * t713 + 0.4e1 * t712 * t827;
	t717 = 10 * t750;
	t724 = 5 * t758;
	t607 = t724 + (t717 + 6 * t752) * t746 + t666;
	t727 = 5 * t748;
	t886 = t751 + t758;
	t895 = t717 + t737;
	t906 = t752 * t750;
	t973 = -6 * t906;
	t784 = -(t746 * t895) - t727 + t809 - t886 + t973;
	t832 = t645 * t922;
	t797 = -0.8e1 * t832;
	t863 = -0.4e1 * t921;
	t945 = pkin(1) * t712;
	t617 = t668 - t945;
	t793 = t683 * t845;
	t554 = -0.2e1 * t793 + t614 + (0.2e1 * t617 * t952 - t926) * pkin(1);
	t962 = -0.4e1 * t645;
	t866 = t554 * t962;
	t532 = t556 * t863 + t586 * t683 + (t711 * t866 + t713 * t784) * pkin(3) + (-0.4e1 * t584 * t952 + (t607 + t797) * t712) * pkin(1);
	t612 = t667 + t645;
	t518 = t526 * t612 + t532 * t753;
	t978 = t518 ^ 2;
	t977 = 0.2e1 * pkin(1);
	t975 = 0.4e1 * pkin(3);
	t974 = 0.8e1 * t612;
	t660 = pkin(7) * t668;
	t647 = 0.2e1 * t660;
	t915 = t713 * t746;
	t828 = t711 * t915;
	t795 = 0.4e1 * t828;
	t606 = t647 + t795;
	t856 = -0.4e1 * t908;
	t953 = pkin(7) * t712;
	t871 = t746 * t953;
	t918 = t711 * t712;
	t955 = pkin(1) * pkin(3);
	t634 = t918 * t955;
	t902 = t634 + t660;
	t972 = t606 * t856 / 0.2e1 + (0.8e1 * t651 * t711 + t838) * t713 / 0.2e1 + (-0.8e1 * t902 * t625 + 0.8e1 * t713 ^ 2 * t871 + (-t588 * t916 - t610 * t918) * t975) * pkin(1) / 0.2e1;
	t971 = t612 * t712;
	t621 = t752 + t746 / 0.4e1 + t750 / 0.4e1 - t741 / 0.8e1;
	t740 = t741 ^ 2;
	t896 = 0.4e1 / 0.7e1 * t752 - t741 / 0.7e1;
	t907 = t752 * t741;
	t548 = -0.32e2 / 0.21e2 * t621 * t799 + 0.5e1 / 0.42e2 * t758 + (0.16e2 / 0.21e2 * t750 + t896) * t746 + t748 / 0.7e1 + t896 * t750 + t751 - 0.3e1 / 0.7e1 * t907 + t740 / 0.42e2;
	t693 = -t741 / 0.4e1;
	t967 = t693 + t746 / 0.2e1;
	t623 = t898 + t967;
	t706 = 0.4e1 / 0.3e1 * t750;
	t552 = -0.8e1 / 0.3e1 * t623 * t799 + 0.5e1 / 0.18e2 * t758 + (t706 + t694) * t746 + t751 - t748 / 0.3e1 + t740 / 0.18e2 + (t700 + 0.2e1 / 0.3e1 * t750 + t696) * t752;
	t889 = t748 + t751;
	t893 = t737 - t741;
	t771 = t893 * t750 + t740 / 0.6e1 + t889 - t907;
	t597 = -t758 / 0.6e1 + t771;
	t708 = t750 / 0.2e1;
	t897 = t708 + t752;
	t598 = -0.2e1 / 0.3e1 * t799 + t693 + t897;
	t735 = 4 * t752;
	t658 = (t735 + t741) * t750;
	t705 = -0.2e1 / 0.3e1 * t746;
	t663 = t705 + t752;
	t695 = -t741 / 0.2e1;
	t637 = t695 + t817;
	t801 = -0.4e1 * t642;
	t781 = t637 * t801;
	t802 = 0.16e2 * t869;
	t681 = t683 ^ 2;
	t909 = t748 * t681;
	t857 = 0.8e1 * t909;
	t531 = t663 * t857 + t598 * t802 + 0.14e2 * t548 * t908 - (t888 * t758) + (t658 - 0.10e2 / 0.3e1 * t748 + (2 * t751) - t907) * t746 + t597 * t910 + (0.6e1 * t552 * t952 + t664 * t781) * pkin(1);
	t769 = 0.5e1 / 0.6e1 * t758 + t771;
	t574 = (t665 + t893) * t746 + t769;
	t900 = t740 / 0.2e1 - t758 / 0.2e1;
	t787 = -0.3e1 * t907 + t733 + t900;
	t697 = -0.3e1 / 0.2e1 * t741;
	t899 = t697 + t736;
	t904 = t674 * ((t697 + t737) * t750 - 0.3e1 / 0.2e1 * t907 + t889 + t900) + t743;
	t540 = -0.6e1 * t574 * t799 + (t715 + (-0.9e1 * t741 + (18 * t752)) * t750 + t787) * t746 + (t716 + t899) * t758 + t904;
	t776 = pkin(1) * t781;
	t887 = t751 - t748;
	t546 = t662 * t776 - t743 + (-t665 - t885) * t758 + (t658 + t758 / 0.6e1 - t740 / 0.6e1 + t887) * t746 + t597 * t752;
	t723 = -0.5e1 * t741;
	t726 = 7 * t748;
	t728 = 7 * t750;
	t551 = (t728 + t899) * t758 + (t726 + (t723 + (10 * t752)) * t750 + t787) * t746 + t904;
	t762 = pkin(7) * t752;
	t652 = -0.12e2 * pkin(7) * t754 + t762 * t976;
	t661 = -8 * t748 + 12 * t906;
	t562 = t652 * t714 + t661 * t683 + t802 + t857 + t889 + t973;
	t576 = t629 * t911 + t637 * t673;
	t626 = (-6 * t746 * t752 + t886) * t748;
	t670 = -0.30e2 * t741 + (60 * t752);
	t677 = t679 ^ 2;
	t722 = -0.2e1 * t741;
	t892 = t740 - t758;
	t786 = -0.6e1 * t907 + (6 * t751) + t892;
	t734 = 8 * t752;
	t589 = t754 * t801 + t957 + ((4 * t746) + t722 + t734) * t750;
	t595 = -t750 + t775 + t967;
	t544 = t809 + t589 * t683 + t637 * t676 + (t595 * t883 + t800 * t910) * pkin(1);
	t833 = t544 * t922;
	t557 = t776 + (t729 + t893) * t746 + t769;
	t572 = t637 * t911 + t604;
	t835 = 0.6e1 * t880;
	t533 = t557 * t835 + t572 * t839 + t540 + t615;
	t848 = t533 * t667;
	t925 = t666 * (-t746 + t654);
	t514 = 0.16e2 * t626 * t681 + 0.32e2 * t576 * t869 + 0.24e2 * t546 * t908 + (t722 + t735 + (28 * t750)) * t743 + t640 * t925 + (0.24e2 * t531 * t679 + t670 * t748 + t729 * t786 + t737 * t892 - 0.6e1 * t751 * t741 + 0.28e2 * t754 ^ 2 + 0.4e1 * t762 ^ 2) * t746 + (0.32e2 * t833 + 0.8e1 * t848) * t645 + 0.8e1 * (t540 * t952 - t551 * t642) * pkin(1) + (0.16e2 * t562 * t677 + t670 * t750 + (70 * t748) + t758 + t786) * t758;
	t619 = 0.7e1 / 0.6e1 * t746 + t692 + t897;
	t702 = t746 / 0.3e1;
	t822 = t692 + t702 + t752;
	t622 = t706 + t822;
	t568 = -t619 * t945 + t622 * t668;
	t633 = t750 + t822;
	t657 = t725 - t888;
	t578 = t633 * t668 - t657 * t945 / 0.2e1;
	t823 = t741 / 0.3e1 + t702 + t737;
	t785 = -0.8e1 / 0.3e1 * t909 - t651 - 0.5e1 / 0.3e1 * t748 + t823 * t750 + t752 * (t694 + t662);
	t951 = pkin(7) * t748;
	t882 = -0.4e1 * t951;
	t807 = 0.20e2 / 0.3e1 * t750;
	t824 = 0.2e1 / 0.3e1 * t741 + t701 + t735;
	t825 = 0.4e1 / 0.3e1 * t741 + t700 - (2 * t752);
	t948 = t758 / 0.2e1 - (-t807 + t824) * t746 / 0.2e1 + 0.3e1 / 0.2e1 * t748 - t825 * t750 / 0.2e1 - t751 / 0.2e1;
	t534 = t712 * t682 * t882 + t568 * t854 + t785 * t668 + (t578 * t883 + t712 * t948) * pkin(1);
	t671 = -t741 - t746;
	t653 = t736 + t671;
	t927 = t653 * t750;
	t563 = t758 + (t696 + t705 + t895) * t746 + t727 + 0.2e1 * t927 + t752 * (t696 + t663);
	t559 = t563 * t668;
	t575 = t724 + ((5 * t750) + t653) * t725 + (t705 + t819) * t674;
	t934 = t575 * t712;
	t545 = -pkin(1) * t934 + t559;
	t571 = -(3 * t758) + (-t807 + t825) * t746 + t824 * t750 + t887;
	t579 = -0.5e1 / 0.3e1 * t758 + (-t750 + t823) * t746 + t752 * (t704 + t821);
	t879 = -0.2e1 * t945;
	t547 = t571 * t668 + t579 * t879;
	t616 = t668 + 0.2e1 * t945;
	t636 = t695 + t655;
	t550 = t676 * t668 + 0.4e1 * t932 + (t616 * t952 + t636 * t712) * t977;
	t620 = t752 + 0.5e1 / 0.2e1 * t746 + 0.3e1 / 0.2e1 * t750 + t695;
	t580 = t620 * t668 + t673 * t945 / 0.2e1;
	t624 = 0.10e2 * t927;
	t924 = t671 * t752;
	t777 = 0.24e2 * t662 * t909 - t743 - ((21 * t750) + t653) * t758 - (t624 + t733 + (35 * t748) + 0.2e1 * t924) * t746 - (t726 + (t723 + t734 - (5 * t746)) * t750 + (t752 * (-t746 + t885))) * t674;
	t842 = -0.12e2 * t921;
	t630 = 0.8e1 / 0.3e1 * t746 + t821;
	t632 = t694 + t701 + t894;
	t573 = -t630 * t945 + t632 * t668;
	t638 = 0.5e1 / 0.6e1 * t746 + t708 + t692;
	t582 = 0.2e1 * t638 * t668 + t911 * t945;
	t806 = t754 * t660;
	t961 = -0.8e1 * t682;
	t535 = t806 * t961 + t582 * t856 + t559 + (t573 * t883 - t934) * pkin(1);
	t868 = -0.6e1 * t535 * t645;
	t600 = 0.4e1 / 0.3e1 * t908 + t649 + t664;
	t923 = t677 * t758;
	t968 = 0.7e1 * t743 + (t728 + t653) * t724 + (t624 + (21 * t748) + (9 * t751) + 0.6e1 * t924) * t746 + t925 - 0.24e2 * t600 * t923;
	t519 = t580 * t802 + t550 * t797 + t534 * t842 - 0.6e1 * t547 * t908 + (t711 * t868 + t713 * t777) * pkin(3) + (-0.6e1 * t545 * t952 + t968 * t712) * pkin(1);
	t511 = t514 * t612 + t519 * t753;
	t939 = 0.1e1 / t511 ^ 2 * t978;
	t508 = 0.1e1 / (t539 * t939 + 0.1e1);
	t742 = 0.1e1 / pkin(4);
	t944 = pkin(3) * t753;
	t970 = t747 * pkin(4) * t508 * t742 * t939 * t944;
	t947 = t747 / 0.2e1;
	t814 = t564 * t947;
	t524 = atan2(t530 * t814, t529 * t814);
	t522 = sin(t524);
	t523 = cos(t524);
	t969 = t714 * t522 + t712 * t523;
	t964 = 0.6e1 * t574;
	t963 = 0.4e1 * t631;
	t958 = -0.8e1 * t714;
	t956 = pkin(1) * pkin(7);
	t516 = 0.1e1 / t518;
	t950 = t516 / 0.2e1;
	t946 = pkin(1) * t664;
	t943 = t551 * pkin(1);
	t942 = t567 * pkin(1);
	t941 = -0.2e1 * t956;
	t813 = t742 * t947;
	t507 = atan2(t753 * t813, t511 * t516 * t813);
	t505 = sin(t507);
	t506 = cos(t507);
	t513 = t522 * t712 - t523 * t714;
	t502 = t505 * t969 + t506 * t513;
	t500 = 0.1e1 / t502 ^ 2;
	t501 = t505 * t513 - t506 * t969;
	t940 = t500 * t501;
	t938 = t511 / t978;
	t937 = t516 * t645;
	t936 = t565 * (pkin(1) * t846 + t902);
	t905 = t754 * t683;
	t873 = pkin(7) * t905;
	t803 = -0.12e2 * t873;
	t931 = t803 * t971;
	t930 = t612 * t645;
	t920 = t682 * t748;
	t913 = t714 * t750;
	t912 = t714 * t753;
	t877 = -0.6e1 * t667;
	t874 = pkin(7) * t908;
	t870 = pkin(7) * t913;
	t865 = -0.8e1 * t922;
	t861 = 0.3e1 * t921;
	t860 = -0.4e1 * t919;
	t859 = -0.2e1 * t919;
	t858 = 0.8e1 * t913;
	t855 = -0.2e1 * t908;
	t849 = pkin(1) * t910;
	t847 = t612 * t668;
	t844 = t664 * t669;
	t843 = 0.64e2 * t922;
	t840 = -0.32e2 * t920;
	t837 = -0.4e1 * t880;
	t834 = t645 * t938;
	t831 = t662 * t905;
	t830 = t678 * t713 * t758;
	t829 = t662 * t919;
	t826 = t712 * t913;
	t816 = -t938 / 0.2e1;
	t815 = t538 * t972;
	t812 = pkin(7) * t856;
	t811 = pkin(7) * t855;
	t810 = pkin(7) * t854;
	t808 = 0.32e2 / 0.3e1 * t748;
	t805 = t914 * t975;
	t804 = -0.48e2 * t873;
	t798 = t911 * t951;
	t796 = 0.4e1 * t832;
	t791 = t508 / t511 * t518 * t538;
	t790 = t645 * t679 * t713 * t757;
	t789 = t682 * t827;
	t783 = 0.64e2 / 0.3e1 * t621 * t754;
	t782 = t682 * t808;
	t778 = -0.24e2 * t790;
	t648 = pkin(7) * t879;
	t618 = -0.2e1 * t872 * t955;
	t609 = t750 * t805 * t954;
	t503 = 0.2e1 * ((t606 * t712 * t878 + t592 * t815) * t949 - t530 * t936 + ((t712 * t753 - t561) * t711 * t949 + (t912 / 0.2e1 + (t644 * t966 + t608) * t712 / 0.2e1 + (t683 * t977 - pkin(1) + t952) * t668) * t564 * t713) * pkin(3)) * t779 - 0.2e1 * ((t642 * t753 + t594 * t815 - (0.4e1 * t634 + t647) * t625 - 0.2e1 * t679 * t871 + (t606 * t960 + t795) * pkin(1) + ((-t585 * t714 + t627 * t966) * t713 + (-t639 * t712 - t912) * t711) * pkin(3)) * t949 - t529 * t936) * t773;
	t499 = 0.1e1 / t502;
	t498 = t513 * t503;
	t497 = t969 * t503;
	t496 = t979 * t969;
	t495 = t979 * t513;
	t494 = 0.1e1 / (t500 * t501 ^ 2 + 0.1e1);
	t493 = t791 * t972 - 0.2e1 * (((-0.96e2 * t600 * t830 * t945 - 0.24e2 * t534 * t828 + t550 * t778 + t618 * t797) * t753 + t519 * t815 + (0.6e1 * t531 * t828 + 0.12e2 * t544 * t790 + 0.8e1 * t562 * t830 + t609 * t796) * t974) * t950 + ((-t643 * t711 * t683 - 0.8e1 * t556 * t828 + t618 * t863 + t778 * t945) * t753 + t532 * t815 + 0.6e1 * (t543 * t795 + 0.4e1 * t603 * t790 + t609 * t862) * t612) * t816 + (((0.8e1 * t533 * t930 + t753 * t868 + t514) * t950 + (0.6e1 * t542 * t930 + t753 * t866 + t526) * t816) * t713 + ((((-t676 + t856) * t797 + (t622 * t856 + t633 * t837 - t785) * t842 - 0.16e2 * t620 * t869 + t571 * t853 + t563 * t835 - t777) * t950 + ((t888 + t855) * t863 + t618 * t962 + t655 * t836 - t784) * t816 + (-0.3e1 * (t632 * t837 + 0.8e1 * t638 * t908 - t563 + t809) * t937 + 0.2e1 * (-t655 + 0.2e1 * t908) * t834) * t667) * t753 + (0.4e1 * ((0.2e1 * t849 + 0.4e1 * t905) * t796 + (pkin(7) * t782 + 0.16e2 * t623 * t870 + 0.4e1 * t637 * t946 + t683 * t783) * t861 + 0.8e1 * t682 * t798 + 0.12e2 * t637 * t831 + t870 * t964 + t943) * t516 - 0.3e1 * ((0.8e1 / 0.3e1 * t905 + 0.2e1 * t946) * t862 + 0.4e1 * t831 + t870 * t963 + t942) * t938 + (0.4e1 * (pkin(1) * t964 + 0.24e2 * t637 * t870 + 0.24e2 * t831) * t937 - 0.3e1 * (pkin(1) * t963 + pkin(7) * t858) * t834) * t667) * t971) * t711) * pkin(3)) * t970;
	t492 = 0.2e1 * t541 * t791 - 0.2e1 * ((((0.12e2 * t680 * t683 * t951 + t619 * t860 + t657 * t811 + t681 * t882) * t842 + 0.12e2 * t579 * t919 + (t948 * t842 + t968) * t669 + (t575 * t853 + t673 * t857) * pkin(7)) * t753 + t519 * t867 + (((t636 * t878 + t810 + t860) * t865 + (-t575 * t669 + t630 * t812 - 0.4e1 * t789) * t877) * t753 + t843 * t931) * t645 + (0.24e2 * (-pkin(7) * t681 * t808 - 0.16e2 * t623 * t874 - 0.4e1 * t637 * t844 - t682 * t783) * t921 - 0.64e2 * t681 * t798 - 0.96e2 * t637 * t829 - 0.48e2 * t574 * t874 + t943 * t958 + ((-t714 * t849 + t811 + t859) * t843 + 0.48e2 * (-t574 * t669 + t637 * t812 - 0.4e1 * t829) * t667) * t645) * t847 + ((0.2e1 * (-0.2e1 * t661 * t714 - t652 + t804 + t840) * t923 + 0.8e1 * (-t589 * t714 + t595 * t941) * t832 + (-0.28e2 * t548 * t913 - 0.6e1 * t552 * t956 + t598 * t804 + t663 * t840) * t861 + t645 * (-t557 * t956 - 0.4e1 * t572 * t913 - 0.4e1 * t673 * t873) * t876 + t626 * t961 + t576 * t803 - 0.6e1 * t546 * t913 - t540 * t956 + (-0.4e1 * t833 - t848) * pkin(1)) * t974 - t514 * pkin(1) + ((-0.8e1 * t568 * t913 + t668 * t782) * t842 - 0.96e2 * t662 * t920 * t668 + t580 * t804 + 0.12e2 * t547 * t913 + (t535 * t876 + t550 * t864 + (-0.24e2 * t648 + 0.64e2 * t826) * t923 + (0.48e2 * t578 * t921 + 0.6e1 * t545) * pkin(7)) * pkin(1) + ((t611 * t958 + t616 * t941) * t865 + (-0.4e1 * t573 * t956 + t582 * t858 + 0.24e2 * t683 * t806) * t877) * t645) * t753) * t712) * t950 + ((t680 * t678 * t852 + (t669 * t672 + t859) * t863 + 0.4e1 * t789 + t656 * t810 + t607 * t669) * t753 + t532 * t867 + t841 * t931 + ((-0.8e1 / 0.3e1 * t919 + t812 - 0.2e1 * t844) * t841 - 0.24e2 * t829 - 0.24e2 * t631 * t874 - 0.6e1 * t714 * t942) * t847 + (0.24e2 * (-t612 * t673 - t713 * t944) * t873 + ((0.16e2 * t611 * t921 - 0.2e1 * t586) * t753 + (-0.144e3 * t591 * t921 - 0.24e2 * t569) * t612 * t750) * t714 + (0.4e1 * t554 * t711 * t944 - t770 * t612 - t526 + ((0.8e1 * pkin(3) * t679 * t915 + 0.4e1 * t584) * t753 + (-0.48e2 * t599 * t921 - 0.6e1 * t555) * t612) * pkin(7)) * pkin(1)) * t712 + ((t865 * t669 - 0.4e1 * ((pkin(7) * t960 + t713 * t805) * t750 + (-0.2e1 * t617 * t953 - t656 * t714) * pkin(1)) * t667) * t753 + ((t648 - 0.8e1 * t826) * t864 + (-0.8e1 * pkin(7) * t793 - 0.8e1 * t650 * t914 + (-t596 * t953 - t631 * t846) * t976) * t876) * t612) * t645) * t816) * t970;
	t1 = [0, 0; 0, 0; ((t492 * t502 + t495 * t506 + t496 * t505) * t499 - (-t492 * t501 - t495 * t505 + t496 * t506) * t940) * t494, ((t493 * t502 + t497 * t505 + t498 * t506) * t499 - (-t493 * t501 + t497 * t506 - t498 * t505) * t940) * t494;];
	Ja_rot = t1;
elseif link_index == 5
	%% Symbolic Calculation
	% From jacobia_rot_5_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-05-10 18:26:00
	% EndTime: 2020-05-10 18:26:01
	% DurationCPUTime: 0.26s
	% Computational Cost: add. (1620->24), mult. (3708->46), div. (126->8), fcn. (2390->6), ass. (0->29)
	t78 = pkin(1) ^ 2;
	t73 = sin(pkin(8));
	t74 = cos(pkin(8));
	t75 = sin(qJ(1));
	t89 = cos(qJ(1));
	t71 = -t73 * t75 - t74 * t89;
	t92 = pkin(1) * t71;
	t85 = pkin(5) * t92;
	t86 = pkin(5) ^ 2 - 0.2e1 * t85;
	t66 = t78 + t86;
	t87 = 0.1e1 / t66 / pkin(1);
	t95 = t87 / 0.2e1;
	t67 = t78 - t85;
	t94 = -0.2e1 * t67;
	t93 = 0.2e1 * t67;
	t76 = 0.2e1 * pkin(1);
	t62 = -(t76 + pkin(5)) * pkin(5) + t86;
	t63 = pkin(5) * (t76 - pkin(5)) + t86;
	t80 = sqrt(-t62 * t63);
	t91 = pkin(1) * t80;
	t70 = -t73 * t89 + t74 * t75;
	t90 = pkin(5) * t70;
	t88 = 0.1e1 / t80 * (t62 + t63) * pkin(1) * t90;
	t83 = 0.1e1 / t66 ^ 2 * t90;
	t68 = pkin(5) - t92;
	t58 = pkin(1) * t70 * t94 + t68 * t80;
	t57 = t68 * t93 + t70 * t91;
	t56 = 0.1e1 / t57 ^ 2;
	t1 = [0, 0; 0, 0; (-(((0.2e1 * t78 * t90 - t91) * t70 + t92 * t93 + t68 * t88) * t95 + t58 * t83) / t57 - (-t57 * t83 - (-t71 * t80 + (-0.2e1 * t68 * pkin(5) + t88 + t94) * t70) * pkin(1) * t87 / 0.2e1) * t58 * t56) / (t56 * t58 ^ 2 + 0.1e1) / t95, 0;];
	Ja_rot = t1;
elseif link_index == 6
	%% Symbolic Calculation
	% From jacobia_rot_6_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-05-10 18:26:35
	% EndTime: 2020-05-10 18:26:53
	% DurationCPUTime: 5.99s
	% Computational Cost: add. (83188->158), mult. (213080->317), div. (3708->17), fcn. (68264->18), ass. (0->162)
	t287 = sin(qJ(2));
	t370 = 2 * pkin(7);
	t332 = t287 * t370;
	t279 = pkin(3) * t332;
	t302 = (pkin(1) ^ 2);
	t303 = pkin(7) ^ 2;
	t333 = -pkin(4) ^ 2 + t303;
	t282 = t302 + t333;
	t270 = t279 + t282;
	t300 = pkin(3) ^ 2;
	t293 = 0.2e1 * t300;
	t269 = t293 + t270;
	t278 = pkin(3) * t287 + pkin(7);
	t291 = cos(qJ(1));
	t284 = t287 ^ 2;
	t334 = t279 + t303;
	t267 = t284 * t293 - t300 + t334;
	t362 = pkin(1) * t267;
	t326 = t291 * t362;
	t246 = t278 * t269 + 0.2e1 * t326;
	t271 = t278 * t291;
	t288 = sin(qJ(1));
	t290 = cos(qJ(2));
	t341 = t288 * t290;
	t276 = pkin(3) * t341;
	t335 = -t276 + t271;
	t261 = pkin(1) + t335;
	t325 = pkin(1) * t271;
	t319 = pkin(1) * t276;
	t273 = -0.2e1 * t319;
	t259 = t273 + t270;
	t281 = (t302 - t303) * t300;
	t295 = 0.2e1 * pkin(3);
	t285 = t291 ^ 2;
	t315 = -0.2e1 * t267 * t285 - t333;
	t323 = -0.4e1 * pkin(7) * pkin(3) * t282;
	t330 = 2 * t302;
	t373 = 0.4e1 * pkin(1);
	t304 = sqrt(0.4e1 * t281 * t284 + t287 * t323 - (t302 ^ 2) - (t303 - (t295 + pkin(4)) * pkin(4)) * (t303 + (t295 - pkin(4)) * pkin(4)) + (-0.2e1 * t300 + t315) * t330 + (-t259 * t271 + t270 * t276) * t373);
	t238 = 0.1e1 / t304;
	t339 = t290 * t291;
	t324 = pkin(3) * t339;
	t340 = t288 * t291;
	t342 = t288 * t278;
	t344 = t278 * t285;
	t361 = pkin(3) * t290;
	t328 = 0.2e1 * t238 * ((t267 * t340 + t344 * t361) * t330 + (t259 * t342 + t270 * t324) * pkin(1));
	t262 = t324 + t342;
	t346 = t262 * t304;
	t227 = -t346 + t261 * t328 + t246 * t291 + ((-t269 - 0.8e1 * t325) * t361 - 0.2e1 * t288 * t362) * t288;
	t275 = t293 + (3 * t302) + t333;
	t256 = t275 + t279 - 0.4e1 * t319;
	t228 = t335 * t304 + t262 * t328 + (t278 * t256 + 0.4e1 * t326) * t288 + (t300 * t291 * t332 + (t275 * t291 + t344 * t373) * pkin(3)) * t290;
	t272 = t276 - pkin(1);
	t234 = -t256 * t271 + t346 + (t272 * t332 + t275 * t341) * pkin(3) + (-t302 + (0.2e1 * t284 - 0.4e1) * t300 + t315) * pkin(1);
	t247 = t269 * t291 + (0.4e1 * t285 - 0.2e1) * t278 * pkin(1);
	t235 = t246 * t288 + t247 * t361 + t261 * t304;
	t233 = 0.1e1 / t234 ^ 2;
	t250 = t273 + t300 + t302 + 0.2e1 * t325 + t334;
	t301 = 0.1e1 / pkin(3);
	t317 = pkin(3) / (t235 ^ 2 * t233 + 0.1e1) * t250 * t301;
	t311 = t233 * t235 * t317;
	t314 = 0.1e1 / t234 * t317;
	t249 = 0.1e1 / t250 ^ 2;
	t258 = t262 * pkin(1);
	t348 = t249 * t258;
	t248 = 0.1e1 / t250;
	t364 = t248 / 0.2e1;
	t374 = 0.2e1 * (t227 * t364 + t235 * t348) * t314 - 0.2e1 * (t228 * t364 + t234 * t348) * t311 + 0.1e1;
	t297 = pkin(5) ^ 2;
	t286 = cos(pkin(8));
	t357 = sin(pkin(8));
	t266 = -t286 * t291 - t357 * t288;
	t359 = pkin(5) * t266;
	t331 = pkin(1) * t359;
	t337 = -0.2e1 * t331 + t297;
	t257 = t302 + t337;
	t347 = 0.1e1 / t257 / pkin(5);
	t372 = t258 * t347;
	t320 = t301 * t364;
	t225 = atan2(t235 * t320, t234 * t320);
	t223 = sin(t225);
	t224 = cos(t225);
	t371 = t291 * t223 + t288 * t224;
	t296 = 0.2e1 * pkin(1);
	t260 = t297 - t331;
	t369 = -0.2e1 * t260;
	t368 = t235 / 0.4e1;
	t263 = -pkin(1) + t359;
	t265 = t286 * t288 - t357 * t291;
	t251 = -(t296 + pkin(5)) * pkin(5) + t337;
	t252 = pkin(5) * (t296 - pkin(5)) + t337;
	t305 = sqrt(-t251 * t252);
	t358 = pkin(5) * t305;
	t240 = t263 * t369 + t265 * t358;
	t367 = t240 / 0.4e1;
	t360 = pkin(5) * t265;
	t241 = -t263 * t305 + t360 * t369;
	t366 = -t241 / 0.4e1;
	t365 = t241 / 0.4e1;
	t363 = pkin(1) * t265;
	t352 = t235 * t241;
	t354 = t234 * t240;
	t310 = t354 / 0.4e1 + t352 / 0.4e1;
	t322 = t301 * t347;
	t316 = t248 * t322;
	t218 = t310 * t316;
	t351 = t240 * t235;
	t353 = t234 * t241;
	t309 = t353 / 0.4e1 - t351 / 0.4e1;
	t219 = t309 * t316;
	t289 = sin(pkin(9));
	t292 = cos(pkin(9));
	t214 = t292 * t218 - t289 * t219;
	t215 = t289 * t218 + t292 * t219;
	t209 = atan2(t215, t214);
	t206 = sin(t209);
	t207 = cos(t209);
	t217 = t288 * t223 - t291 * t224;
	t199 = -t206 * t371 - t217 * t207;
	t197 = 0.1e1 / t199 ^ 2;
	t313 = t217 * t206 - t207 * t371;
	t356 = t197 * t313;
	t213 = 0.1e1 / t214 ^ 2;
	t355 = t213 * t215;
	t350 = 0.1e1 / t305 * (t251 + t252) * pkin(1) * t360;
	t343 = t287 * t288;
	t274 = pkin(3) * pkin(1) * t343;
	t283 = pkin(7) * t361;
	t336 = t274 + t283;
	t253 = pkin(1) * t324 + t336;
	t349 = t249 * t253;
	t280 = 0.2e1 * t283;
	t318 = 0.4e1 * t300 * t287 * t290;
	t268 = t280 + t318;
	t345 = t268 * t285;
	t338 = t291 * t304;
	t329 = t288 * t300 * pkin(7);
	t327 = 0.1e1 / t257 ^ 2 * t363;
	t321 = (-0.4e1 * t302 * t345 + (0.8e1 * t281 * t287 + t323) * t290 + (-0.8e1 * t336 * t271 + 0.8e1 * t290 ^ 2 * t329 + 0.4e1 * (-t259 * t339 - t270 * t343) * pkin(3)) * pkin(1)) * t238 / 0.2e1;
	t308 = -0.2e1 * t249 * t310;
	t307 = 0.2e1 * t249 * t309;
	t231 = (0.2e1 * t297 * t363 - t358) * t265 + 0.2e1 * t260 * t359 - t263 * t350;
	t230 = (-t305 * t266 + (t263 * t296 + t350 + t369) * t265) * pkin(5);
	t226 = t276 * t304 + t262 * t321 - (0.4e1 * t274 + t280) * t271 - 0.2e1 * t284 * t329 + (t318 - 0.2e1 * t345) * pkin(1) + ((-t256 * t291 + t272 * t370) * t290 + (-t275 * t288 - t338) * t287) * pkin(3);
	t222 = t261 * t321 + t268 * t340 * t296 + ((t288 * t304 - t247) * t287 + (t338 + (t278 * t370 + t269) * t288 + 0.2e1 * (pkin(7) * t291 + t285 * t296 - pkin(1)) * t361) * t290) * pkin(3);
	t212 = 0.1e1 / t214;
	t211 = ((t222 * t367 + t226 * t366) * t248 + t253 * t307) * t322;
	t210 = ((t222 * t365 + t226 * t367) * t248 + t253 * t308) * t322;
	t208 = 0.1e1 / (t215 ^ 2 * t213 + 0.1e1);
	t204 = 0.2e1 * (t222 * t364 - t235 * t349) * t314 - 0.2e1 * (t226 * t364 - t234 * t349) * t311;
	t203 = (-t307 * t372 + ((-t353 / 0.2e1 + t351 / 0.2e1) * t327 + (t228 * t366 - t234 * t231 / 0.4e1 + t230 * t368 + t227 * t367) * t347) * t248) * t301;
	t202 = (-t308 * t372 + ((t354 / 0.2e1 + t352 / 0.2e1) * t327 + (t228 * t367 + t234 * t230 / 0.4e1 + t227 * t365 + t231 * t368) * t347) * t248) * t301;
	t201 = t217 * t204;
	t200 = t371 * t204;
	t196 = 0.1e1 / t199;
	t195 = t374 * t371;
	t194 = t374 * t217;
	t193 = 0.1e1 / (t197 * t313 ^ 2 + 0.1e1);
	t192 = ((t289 * t210 - t292 * t211) * t212 - (t292 * t210 + t289 * t211) * t355) * t208;
	t191 = ((t289 * t202 - t292 * t203) * t212 - (t292 * t202 + t289 * t203) * t355) * t208;
	t1 = [0, 0; 0, 0; ((t199 * t191 - t194 * t207 - t195 * t206) * t196 + (t313 * t191 + t194 * t206 - t195 * t207) * t356) * t193, ((t199 * t192 - t200 * t206 - t201 * t207) * t196 + (t313 * t192 - t200 * t207 + t201 * t206) * t356) * t193;];
	Ja_rot = t1;
elseif link_index == 7
	%% Symbolic Calculation
	% From jacobia_rot_7_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-05-10 18:25:59
	% EndTime: 2020-05-10 18:25:59
	% DurationCPUTime: 0.01s
	% Computational Cost: add. (3->0), mult. (6->0), div. (5->0), fcn. (6->0), ass. (0->1)
	t1 = [0, 0; 0, 0; 0, 1;];
	Ja_rot = t1;
elseif link_index == 8
	%% Symbolic Calculation
	% From jacobia_rot_8_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-05-10 18:26:01
	% EndTime: 2020-05-10 18:26:02
	% DurationCPUTime: 0.32s
	% Computational Cost: add. (1768->25), mult. (4040->44), div. (142->7), fcn. (2610->6), ass. (0->28)
	t77 = pkin(5) ^ 2;
	t73 = cos(pkin(8));
	t74 = sin(qJ(1));
	t75 = cos(qJ(1));
	t84 = sin(pkin(8));
	t71 = -t73 * t75 - t84 * t74;
	t89 = pkin(5) * t71;
	t83 = pkin(1) * t89;
	t85 = -0.2e1 * t83 + t77;
	t66 = pkin(1) ^ 2 + t85;
	t80 = 0.1e1 / t66 / pkin(5) / 0.2e1;
	t76 = 0.2e1 * pkin(1);
	t67 = t77 - t83;
	t92 = -0.2e1 * t67;
	t70 = t73 * t74 - t84 * t75;
	t91 = pkin(1) * t70;
	t90 = pkin(5) * t70;
	t62 = -(t76 + pkin(5)) * pkin(5) + t85;
	t63 = pkin(5) * (t76 - pkin(5)) + t85;
	t79 = sqrt(-t62 * t63);
	t88 = pkin(5) * t79;
	t86 = 0.1e1 / t79 * (t62 + t63) * pkin(1) * t90;
	t82 = 0.1e1 / t66 ^ 2 * t91;
	t68 = -pkin(1) + t89;
	t58 = -t68 * t79 + t90 * t92;
	t57 = t68 * t92 + t70 * t88;
	t56 = 0.1e1 / t57 ^ 2;
	t1 = [0, 0; 0, 0; ((((0.2e1 * t77 * t91 - t88) * t70 + 0.2e1 * t67 * t89 - t68 * t86) * t80 + t58 * t82) / t57 - (t57 * t82 + (-t79 * t71 + (t68 * t76 + t86 + t92) * t70) * pkin(5) * t80) * t58 * t56) / (t56 * t58 ^ 2 + 0.1e1) / t80 + 0.1e1, 0;];
	Ja_rot = t1;
elseif link_index == 9
	%% Symbolic Calculation
	% From jacobia_rot_9_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-05-10 18:30:35
	% EndTime: 2020-05-10 18:33:05
	% DurationCPUTime: 53.57s
	% Computational Cost: add. (1075812->198), mult. (2720924->408), div. (53636->27), fcn. (916552->23), ass. (0->216)
	t405 = sin(qJ(2));
	t521 = 0.2e1 * t405;
	t477 = pkin(7) * t521;
	t398 = pkin(3) * t477;
	t424 = pkin(1) ^ 2;
	t425 = pkin(7) ^ 2;
	t478 = -pkin(4) ^ 2 + t425;
	t401 = t424 + t478;
	t389 = t398 + t401;
	t406 = sin(qJ(1));
	t408 = cos(qJ(2));
	t487 = t406 * t408;
	t395 = pkin(3) * t487;
	t447 = pkin(1) * t395;
	t393 = -0.2e1 * t447;
	t378 = t393 + t389;
	t402 = t405 ^ 2;
	t421 = pkin(3) ^ 2;
	t411 = 0.2e1 * t421;
	t479 = t398 + t425;
	t386 = t402 * t411 - t421 + t479;
	t409 = cos(qJ(1));
	t485 = t408 * t409;
	t468 = pkin(3) * t485;
	t475 = 0.4e1 * pkin(1);
	t486 = t406 * t409;
	t512 = pkin(3) * t405;
	t397 = pkin(7) + t512;
	t489 = t397 * t406;
	t403 = t409 ^ 2;
	t490 = t397 * t403;
	t511 = pkin(3) * t408;
	t361 = 0.8e1 * (t386 * t486 + t490 * t511) * t424 + (t378 * t489 + t389 * t468) * t475;
	t388 = t411 + t389;
	t514 = pkin(1) * t386;
	t471 = t409 * t514;
	t365 = t388 * t397 + 0.2e1 * t471;
	t390 = t397 * t409;
	t480 = -t395 + t390;
	t380 = pkin(1) + t480;
	t526 = 0.4e1 * t421;
	t400 = (t424 - t425) * t526;
	t413 = 0.2e1 * pkin(3);
	t441 = -0.2e1 * t386 * t403 - t478;
	t464 = -0.4e1 * pkin(7) * pkin(3) * t401;
	t426 = sqrt(t400 * t402 + t405 * t464 - (t425 - (t413 + pkin(4)) * pkin(4)) * (t425 + (t413 - pkin(4)) * pkin(4)) + (-t378 * t390 + t389 * t395) * t475 + (-0.4e1 * t421 + 0.2e1 * t441 - t424) * t424);
	t517 = 0.1e1 / t426 / 0.2e1;
	t456 = t380 * t517;
	t470 = pkin(1) * t390;
	t381 = t468 + t489;
	t493 = t381 * t426;
	t346 = -t493 + t361 * t456 + t365 * t409 + ((-t388 - 0.8e1 * t470) * t511 - 0.2e1 * t406 * t514) * t406;
	t394 = t411 + 0.3e1 * t424 + t478;
	t375 = t394 + t398 - 0.4e1 * t447;
	t455 = t381 * t517;
	t348 = t480 * t426 + t361 * t455 + (t397 * t375 + 0.4e1 * t471) * t406 + (t421 * t409 * t477 + (t394 * t409 + t490 * t475) * pkin(3)) * t408;
	t391 = t395 - pkin(1);
	t353 = -t375 * t390 + t493 + (t391 * t477 + t394 * t487) * pkin(3) + (-t424 + (0.2e1 * t402 - 0.4e1) * t421 + t441) * pkin(1);
	t366 = t388 * t409 + (0.4e1 * t403 - 0.2e1) * t397 * pkin(1);
	t354 = t365 * t406 + t366 * t511 + t380 * t426;
	t352 = 0.1e1 / t353 ^ 2;
	t369 = t393 + t421 + t424 + 0.2e1 * t470 + t479;
	t422 = 0.1e1 / pkin(3);
	t446 = pkin(3) / (t352 * t354 ^ 2 + 0.1e1) * t369 * t422;
	t435 = t352 * t354 * t446;
	t440 = 0.1e1 / t353 * t446;
	t368 = 0.1e1 / t369 ^ 2;
	t527 = 0.2e1 * pkin(1);
	t495 = t368 * t381 * t527;
	t451 = t495 / 0.2e1;
	t367 = 0.1e1 / t369;
	t515 = t367 / 0.2e1;
	t528 = 0.2e1 * (t346 * t515 + t354 * t451) * t440 - 0.2e1 * (t348 * t515 + t353 * t451) * t435 + 0.1e1;
	t414 = 2 * pkin(2);
	t454 = t422 * t515;
	t343 = atan2(t354 * t454, t353 * t454);
	t341 = sin(t343);
	t342 = cos(t343);
	t525 = t409 * t341 + t406 * t342;
	t524 = 0.2e1 * pkin(7);
	t523 = -0.2e1 * pkin(1);
	t522 = -2 * pkin(2);
	t418 = (pkin(5) ^ 2);
	t520 = 2 * t418;
	t404 = cos(pkin(8));
	t506 = sin(pkin(8));
	t385 = -t404 * t409 - t506 * t406;
	t509 = pkin(5) * t385;
	t383 = t509 * t523;
	t379 = t383 + t520;
	t382 = -pkin(1) + t509;
	t482 = t383 + t418;
	t370 = -(t527 + pkin(5)) * pkin(5) + t482;
	t371 = pkin(5) * (t527 - pkin(5)) + t482;
	t428 = sqrt(-t370 * t371);
	t384 = t404 * t406 - t506 * t409;
	t510 = pkin(5) * t384;
	t360 = -t379 * t510 - t382 * t428;
	t499 = t354 * t360;
	t492 = t384 * t428;
	t359 = pkin(5) * t492 - t379 * t382;
	t501 = t353 * t359;
	t434 = t501 / 0.4e1 + t499 / 0.4e1;
	t376 = t424 + t482;
	t494 = 0.1e1 / t376 / pkin(5);
	t462 = t422 * t494;
	t443 = t367 * t462;
	t337 = t434 * t443;
	t498 = t359 * t354;
	t500 = t353 * t360;
	t433 = t500 / 0.4e1 - t498 / 0.4e1;
	t338 = t433 * t443;
	t407 = sin(pkin(9));
	t410 = cos(pkin(9));
	t333 = -t337 * t410 + t338 * t407;
	t508 = pkin(6) * t333;
	t330 = t508 * t522;
	t416 = pkin(6) ^ 2;
	t483 = t330 + t416;
	t323 = -(t414 + pkin(6)) * pkin(6) + t483;
	t324 = pkin(6) * (t414 - pkin(6)) + t483;
	t504 = t323 * t324;
	t427 = sqrt(-t504);
	t320 = 0.1e1 / t427;
	t519 = -t320 / 0.2e1;
	t518 = t354 / 0.4e1;
	t516 = t359 / 0.4e1;
	t430 = pkin(2) ^ 2;
	t327 = t430 + t483;
	t513 = pkin(2) / t327 ^ 2;
	t334 = t337 * t407 + t338 * t410;
	t507 = pkin(6) * t334;
	t328 = t330 + 0.2e1 * t416;
	t329 = -pkin(2) + t508;
	t305 = -t328 * t329 - t427 * t507;
	t306 = t328 * t507 - t329 * t427;
	t417 = 0.1e1 / pkin(6);
	t458 = 0.1e1 / t327 * t417 / 0.2e1;
	t296 = atan2(t306 * t458, t305 * t458);
	t294 = sin(t296);
	t295 = cos(t296);
	t336 = t341 * t406 - t342 * t409;
	t290 = t294 * t336 - t295 * t525;
	t484 = t417 / pkin(2);
	t311 = atan2(t427 * t484 / 0.2e1, t333);
	t309 = sin(t311);
	t310 = cos(t311);
	t438 = t294 * t525 + t295 * t336;
	t288 = -t290 * t309 + t310 * t438;
	t286 = 0.1e1 / t288 ^ 2;
	t287 = t290 * t310 + t309 * t438;
	t505 = t286 * t287;
	t474 = t406 * t421 * pkin(7);
	t399 = t511 * t524;
	t488 = t405 * t406;
	t469 = pkin(3) * t488;
	t448 = pkin(1) * t469;
	t481 = 0.2e1 * t448 + t399;
	t473 = t405 * t526;
	t387 = t408 * t473 + t399;
	t491 = t387 * t403;
	t355 = -0.4e1 * t424 * t491 + (t400 * t521 + t464) * t408 + (-t481 * t390 + 0.2e1 * t408 ^ 2 * t474 + (-t378 * t485 - t389 * t488) * pkin(3)) * t475;
	t503 = (t355 * t456 + t387 * t486 * t527 + ((t406 * t426 - t366) * t405 + (t409 * t426 + (t397 * t524 + t388) * t406 + 0.2e1 * (pkin(7) * t409 + t403 * t527 - pkin(1)) * t511) * t408) * pkin(3)) * t367;
	t502 = ((-t409 * t512 + t395) * t426 + t355 * t455 + t491 * t523 - (t399 + 0.4e1 * t448) * t390 - 0.2e1 * t402 * t474 - t394 * t469 + (pkin(1) * t473 + (-t375 * t409 + t391 * t524) * pkin(3)) * t408) * t367;
	t497 = 0.1e1 / t428 * (t370 + t371) * t527 * t510;
	t496 = t368 * (t468 * t527 + t481);
	t472 = pkin(1) / t376 ^ 2 * t384;
	t304 = 0.1e1 / t305 ^ 2;
	t467 = pkin(6) / (t304 * t306 ^ 2 + 0.1e1) * t327;
	t466 = t305 * t513;
	t465 = t306 * t513;
	t332 = 0.1e1 / t333 ^ 2;
	t463 = 0.1e1 / (0.1e1 - 0.1e1 / pkin(6) ^ 2 / t430 * t332 * t504 / 0.4e1) * t484;
	t461 = t329 * t519;
	t460 = t320 / t333 / 0.4e1;
	t459 = t334 * t519;
	t457 = -t332 * t427 / 0.2e1;
	t453 = -t496 / 0.2e1;
	t452 = -t496 / 0.4e1;
	t450 = t334 * t416 * t522;
	t449 = t329 * t414 - t328;
	t445 = 0.1e1 / t305 * t467;
	t444 = pkin(6) * t458;
	t442 = t494 * t495;
	t439 = t304 * t306 * t467;
	t436 = pkin(6) * (t323 + t324) * t414;
	t432 = t503 / 0.4e1 + t354 * t452;
	t431 = t502 / 0.4e1 + t353 * t452;
	t350 = -t382 * t497 / 0.2e1 + t384 ^ 2 * pkin(1) * t520 + (t379 * t385 - t492) * pkin(5);
	t349 = (-t428 * t385 + (t497 / 0.2e1 - t379 + t382 * t527) * t384) * pkin(5);
	t322 = (t432 * t359 - t431 * t360) * t462;
	t321 = (t431 * t359 + t432 * t360) * t462;
	t317 = 0.2e1 * (t503 / 0.2e1 + t354 * t453) * t440 - 0.2e1 * (t502 / 0.2e1 + t353 * t453) * t435;
	t316 = (-t433 * t442 + ((-t500 / 0.2e1 + t498 / 0.2e1) * t472 + (-t348 * t360 / 0.4e1 - t353 * t350 / 0.4e1 + t349 * t518 + t346 * t516) * t494) * t367) * t422;
	t315 = (t434 * t442 + ((t501 / 0.2e1 + t499 / 0.2e1) * t472 + (t348 * t516 + t353 * t349 / 0.4e1 + t346 * t360 / 0.4e1 + t350 * t518) * t494) * t367) * t422;
	t314 = t321 * t407 - t322 * t410;
	t313 = -t321 * t410 - t322 * t407;
	t308 = t336 * t317;
	t307 = t525 * t317;
	t302 = t315 * t407 - t316 * t410;
	t301 = -t315 * t410 - t316 * t407;
	t300 = t528 * t525;
	t299 = t528 * t336;
	t298 = t313 * t436;
	t293 = t301 * t436;
	t292 = (t298 * t460 + t313 * t457) * t463;
	t289 = (t293 * t460 + t301 * t457) * t463;
	t285 = 0.1e1 / t288;
	t284 = 0.2e1 * ((t298 * t461 + t313 * t450 + (-t313 * t427 + t314 * t328) * pkin(6)) * t458 + t313 * t465) * t445 - 0.2e1 * (t313 * t466 + (t298 * t459 + t449 * t313 - t427 * t314) * t444) * t439;
	t283 = 0.1e1 / (t286 * t287 ^ 2 + 0.1e1);
	t282 = 0.2e1 * ((t293 * t461 + t301 * t450 + (-t301 * t427 + t302 * t328) * pkin(6)) * t458 + t301 * t465) * t445 - 0.2e1 * (t301 * t466 + (t293 * t459 + t449 * t301 - t427 * t302) * t444) * t439;
	t281 = t290 * t284 + t294 * t308 - t295 * t307;
	t280 = t438 * t284 + t294 * t307 + t295 * t308;
	t279 = t290 * t282 + t294 * t299 - t295 * t300;
	t278 = t438 * t282 + t294 * t300 + t295 * t299;
	t1 = [0, 0; 0, 0; ((t278 * t310 - t279 * t309 + t288 * t289) * t285 - (-t278 * t309 - t279 * t310 - t287 * t289) * t505) * t283, ((t280 * t310 - t281 * t309 + t288 * t292) * t285 - (-t280 * t309 - t281 * t310 - t287 * t292) * t505) * t283;];
	Ja_rot = t1;
elseif link_index == 10
	%% Symbolic Calculation
	% From jacobia_rot_10_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-05-10 18:28:34
	% EndTime: 2020-05-10 18:30:07
	% DurationCPUTime: 33.38s
	% Computational Cost: add. (556052->651), mult. (1794464->1078), div. (5156->20), fcn. (228256->15), ass. (0->480)
	t838 = sin(qJ(1));
	t839 = cos(qJ(2));
	t1070 = t838 * t839;
	t769 = pkin(3) * t1070;
	t934 = pkin(1) * t769;
	t756 = -0.2e1 * t934;
	t837 = sin(qJ(2));
	t1115 = 0.2e1 * t837;
	t1030 = pkin(7) * t1115;
	t774 = pkin(3) * t1030;
	t880 = pkin(1) ^ 2;
	t882 = pkin(7) ^ 2;
	t798 = t880 + t882;
	t875 = pkin(3) ^ 2;
	t961 = t875 + t798;
	t792 = pkin(3) * t837;
	t772 = t792 + pkin(7);
	t840 = cos(qJ(1));
	t753 = t772 * t840;
	t996 = pkin(1) * t753;
	t687 = t756 + t774 + t961 + 0.2e1 * t996;
	t685 = 0.1e1 / t687;
	t1103 = t685 / 0.2e1;
	t1083 = t772 * t838;
	t1068 = t839 * t840;
	t991 = pkin(3) * t1068;
	t715 = t991 + t1083;
	t1035 = -t875 + t882;
	t803 = t837 ^ 2;
	t1061 = t875 * t803;
	t725 = t1035 + t774 + 0.2e1 * t1061;
	t807 = t840 ^ 2;
	t1085 = t725 * t807;
	t1131 = 0.4e1 * pkin(1);
	t870 = pkin(4) ^ 2;
	t1031 = t882 - t870;
	t781 = t880 + t1031;
	t736 = t774 + t781;
	t709 = t756 + t736;
	t1060 = t875 * t882;
	t1128 = 0.4e1 * t880;
	t808 = t875 * t1128;
	t779 = t808 - 0.4e1 * t1060;
	t867 = -0.2e1 * t882;
	t868 = 0.2e1 * pkin(3);
	t878 = t880 ^ 2;
	t980 = -0.4e1 * pkin(3) * pkin(7) * t781;
	t660 = t779 * t803 + t837 * t980 - t878 - (t882 - (t868 + pkin(4)) * pkin(4)) * (t882 + (t868 - pkin(4)) * pkin(4)) + (t867 + 0.2e1 * t870 - 0.4e1 * t875 - 0.4e1 * t1085) * t880 + (-t709 * t753 + t736 * t769) * t1131;
	t883 = sqrt(t660);
	t1086 = t715 * t883;
	t1120 = -0.2e1 * pkin(1);
	t1069 = t838 * t840;
	t1084 = t772 * t807;
	t1127 = 0.8e1 * t880;
	t793 = pkin(3) * t839;
	t662 = (t725 * t1069 + t1084 * t793) * t1127 + (t709 * t1083 + t736 * t991) * t1131;
	t853 = 0.2e1 * t875;
	t734 = t853 + t736;
	t794 = pkin(1) * t840;
	t998 = t725 * t794;
	t679 = t734 * t772 + 0.2e1 * t998;
	t804 = t838 ^ 2;
	t659 = 0.1e1 / t883;
	t1104 = t659 / 0.2e1;
	t1048 = -t769 + t753;
	t713 = pkin(1) + t1048;
	t951 = t713 * t1104;
	t644 = -t1086 + t662 * t951 + t725 * t804 * t1120 + t679 * t840 + (-t734 - 0.8e1 * t996) * t769;
	t1109 = pkin(7) * t840;
	t1029 = 0.2e1 * t1109;
	t1071 = t837 * t875;
	t859 = 0.3e1 * t880;
	t766 = t853 + t859 + t1031;
	t925 = -0.4e1 * t934;
	t706 = t766 + t774 + t925;
	t950 = t715 * t1104;
	t646 = t1048 * t883 + t662 * t950 + (t706 * t772 + 0.4e1 * t998) * t838 + (t1029 * t1071 + (t1084 * t1131 + t766 * t840) * pkin(3)) * t839;
	t754 = t769 - pkin(1);
	t650 = -t706 * t753 + t1086 + (t754 * t1030 + t766 * t1070) * pkin(3) + (-0.2e1 * t1085 + (0.2e1 * t803 - 0.4e1) * t875 - t781) * pkin(1);
	t681 = t734 * t840 + (0.4e1 * t807 - 0.2e1) * t772 * pkin(1);
	t651 = t679 * t838 + t681 * t793 + t713 * t883;
	t649 = 0.1e1 / t650 ^ 2;
	t876 = 0.1e1 / pkin(3);
	t931 = pkin(3) / (t649 * t651 ^ 2 + 0.1e1) * t687 * t876;
	t908 = t649 * t651 * t931;
	t917 = 0.1e1 / t650 * t931;
	t686 = 0.1e1 / t687 ^ 2;
	t1102 = -t686 / 0.2e1;
	t1026 = 0.2e1 * pkin(1);
	t708 = t715 * t1026;
	t947 = t708 * t1102;
	t1133 = 0.2e1 * (t644 * t1103 - t651 * t947) * t917 - 0.2e1 * (t646 * t1103 - t650 * t947) * t908 + 0.1e1;
	t1017 = 0.8e1 * t792;
	t802 = t837 * t803;
	t887 = pkin(3) * t875;
	t1077 = t802 * t887;
	t987 = 0.32e2 * t1077;
	t865 = 0.3e1 * t882;
	t1043 = 0.15e2 * t880 + t865;
	t1130 = 0.6e1 * pkin(1);
	t1058 = t880 * t807;
	t1000 = 0.6e1 * t1058;
	t806 = t840 * t807;
	t884 = pkin(1) * t880;
	t1074 = t806 * t884;
	t1011 = pkin(7) * t1074;
	t1028 = 0.4e1 * t1109;
	t1064 = (pkin(7) + pkin(1)) * (pkin(7) - pkin(1));
	t1046 = t880 / 0.3e1 + t882;
	t712 = -0.4e1 / 0.9e1 * t934 + 0.4e1 / 0.9e1 * t875 - t870 / 0.9e1 + t1046;
	t818 = -t870 / 0.6e1;
	t827 = 0.2e1 / 0.3e1 * t875;
	t914 = t882 - t934;
	t721 = t818 + t827 + t914;
	t826 = 0.4e1 / 0.3e1 * t875;
	t820 = -t870 / 0.3e1;
	t965 = t820 + t798;
	t758 = t826 + t965;
	t790 = -t880 / 0.3e1 + t882;
	t937 = -0.2e1 * t769;
	t663 = 0.4e1 * t1011 + t712 * t1000 + t758 * t1064 + (t721 * t1028 + t790 * t937) * pkin(1);
	t888 = t875 ^ 2;
	t822 = -0.2e1 / 0.3e1 * t870;
	t963 = t822 + t798;
	t1050 = (t827 + t963) * t798 + t888;
	t858 = 0.6e1 * t880;
	t866 = 0.2e1 * t882;
	t964 = t822 + t827 + t866;
	t675 = t758 * t925 + t1050 + (t858 + t964) * t875;
	t1065 = (pkin(7) + pkin(3)) * (pkin(7) - pkin(3));
	t830 = -t875 / 0.3e1;
	t788 = t830 + t882;
	t727 = t788 * t756;
	t689 = t758 * t1065 + t727;
	t809 = 0.10e2 / 0.3e1 * t880;
	t690 = (t809 + t964) * t875 + t1050;
	t797 = -0.3e1 * t875 + t882;
	t944 = 0.8e1 * t1011;
	t742 = t797 * t944;
	t767 = -t870 + t961;
	t773 = t794 + pkin(7);
	t791 = t798 ^ 2;
	t841 = 0.15e2 * t878;
	t848 = 0.18e2 * t882;
	t849 = -0.2e1 * t870;
	t851 = -0.6e1 * t870;
	t881 = t882 ^ 2;
	t861 = 0.3e1 * t881;
	t872 = t887 ^ 2;
	t1009 = 0.8e1 * t1077;
	t1018 = 0.6e1 * t792;
	t1021 = 0.4e1 * t794;
	t717 = t756 + t758;
	t778 = t1035 * t1128;
	t665 = pkin(7) * t717 * t1021 + t778 * t807 + t675;
	t1001 = 0.4e1 * t1058;
	t1022 = 0.2e1 * t794;
	t777 = pkin(7) * t1022;
	t800 = -0.3e1 * t880 + t882;
	t726 = t777 + t1001 + t800;
	t905 = t726 * t1009 + t665 * t1018;
	t981 = 0.12e2 * t1058;
	t984 = 0.12e2 * t1061;
	t647 = t663 * t984 + t742 + t689 * t981 + t872 + (-t870 + t875 + t1043) * t888 + (t841 + (t848 + t851 + 0.6e1 * t875) * t880 + t861 + (t849 + t853) * t882) * t875 + t791 * t767 + t905 * t773 + (t675 * t1109 - t690 * t769) * t1130;
	t1006 = -0.4e1 * t1061;
	t1082 = t773 * t837;
	t783 = 0.3e1 * t875 + t798;
	t1081 = t783 * t838;
	t1039 = t859 + t882;
	t782 = t875 + t1039;
	t741 = t782 * t793;
	t1096 = pkin(1) * t838;
	t745 = t793 - t1096;
	t990 = t880 * t793;
	t930 = t807 * t990;
	t674 = -0.2e1 * t930 + t741 + (t745 * t1029 - t1081) * pkin(1);
	t1118 = -0.4e1 * t674;
	t907 = -t838 * t884 + t990;
	t737 = 0.2e1 * t907;
	t1016 = 0.2e1 * t793;
	t775 = pkin(7) * t1016;
	t796 = t875 + 0.2e1 * t880;
	t799 = -t880 + t882;
	t677 = t799 * t793 + t737 * t807 + (t840 * t775 + t796 * t838) * pkin(1);
	t705 = -pkin(1) * t1081 + t741;
	t1095 = pkin(3) * t878;
	t999 = t887 * t1127;
	t771 = t999 + 0.4e1 * t1095;
	t972 = t884 * t1065;
	t707 = t771 * t839 + 0.4e1 * t838 * t972;
	t1032 = t881 + t888;
	t843 = 0.10e2 * t880;
	t1042 = t843 + t866;
	t1056 = t882 * t880;
	t857 = 0.5e1 * t878;
	t723 = t1042 * t875 + t1032 + 0.6e1 * t1056 + t857;
	t852 = 0.5e1 * t888;
	t863 = 0.6e1 * t882;
	t732 = t852 + (t843 + t863) * t875 + t791;
	t975 = t773 * t1077;
	t932 = -0.8e1 * t975;
	t652 = t677 * t1006 + t707 * t807 + (t1082 * t1118 + (-t723 + t944) * t839) * pkin(3) + (-0.4e1 * t705 * t1109 + (t732 + t932) * t838) * pkin(1);
	t739 = t792 + t773;
	t635 = t647 * t739 + t652 * t883;
	t1132 = t635 ^ 2;
	t1038 = t866 - t870;
	t1034 = t878 + t881;
	t1057 = t882 * t870;
	t869 = t870 ^ 2;
	t906 = t1038 * t880 + t1034 - t1057 + t869 / 0.6e1;
	t902 = 0.5e1 / 0.6e1 * t888 + t906;
	t697 = (t809 + t1038) * t875 + t902;
	t1129 = -0.6e1 * t697;
	t949 = t876 * t1103;
	t641 = atan2(t651 * t949, t650 * t949);
	t639 = sin(t641);
	t640 = cos(t641);
	t1126 = t840 * t639 + t838 * t640;
	t850 = -0.5e1 * t870;
	t1040 = t850 - 0.5e1 * t875;
	t801 = t803 ^ 2;
	t1078 = t801 * t888;
	t1080 = t791 * (-t875 + t781);
	t722 = 0.4e1 / 0.3e1 * t1058 + t777 + t790;
	t1123 = t865 - t870 - t875;
	t765 = t1123 * t843;
	t1125 = 0.7e1 * t872 + (0.35e2 * t880 + 0.15e2 * t882 + t1040) * t888 + (0.21e2 * t878 + t765 + 0.9e1 * t881 + (t851 - 0.6e1 * t875) * t882) * t875 + t1080 - 0.24e2 * t722 * t1078;
	t819 = -t870 / 0.4e1;
	t1124 = t819 + t875 / 0.2e1;
	t1047 = t869 / 0.2e1 - t888 / 0.2e1;
	t823 = -0.3e1 / 0.2e1 * t870;
	t1052 = t798 * ((t823 + t866) * t880 - 0.3e1 / 0.2e1 * t1057 + t1034 + t1047) + t872;
	t924 = -0.3e1 * t1057 + t861 + t1047;
	t661 = t934 * t1129 + t1052 + (t841 + (t848 - 0.9e1 * t870) * t880 + t924) * t875 + (t823 + t1043) * t888;
	t821 = -t870 / 0.2e1;
	t763 = t821 + t961;
	t938 = -0.4e1 * t769;
	t918 = t763 * t938;
	t915 = pkin(1) * t918;
	t678 = t915 + (t858 + t1038) * t875 + t902;
	t691 = t763 * t1065 + t727;
	t1024 = pkin(7) * t794;
	t978 = 0.6e1 * t1024;
	t654 = t678 * t978 + t691 * t981 + t661 + t742;
	t862 = 0.8e1 * t882;
	t710 = t884 * t938 + t808 + 0.4e1 * t878 + (t849 + t862) * t880;
	t716 = -t880 + t914 + t1124;
	t664 = t944 + t710 * t807 + t763 * t800 + (t716 * t1028 + t937 * t1064) * pkin(1);
	t1122 = t654 * t1017 + t664 * t987;
	t1121 = 0.2e1 * pkin(7);
	t1117 = 0.8e1 * t739;
	t1114 = -0.2e1 * t840;
	t1113 = -0.6e1 * t883;
	t1112 = pkin(1) * pkin(7);
	t1111 = pkin(7) * t807;
	t1110 = pkin(7) * t838;
	t1108 = pkin(7) * t878;
	t633 = 0.1e1 / t635;
	t1107 = t633 / 0.2e1;
	t1106 = t633 / 0.4e1;
	t634 = 0.1e1 / t1132;
	t1105 = -t634 / 0.4e1;
	t810 = -0.20e2 / 0.3e1 * t880;
	t864 = 0.4e1 * t882;
	t968 = 0.2e1 / 0.3e1 * t870 + t827 + t864;
	t969 = 0.4e1 / 0.3e1 * t870 + t826 + t867;
	t1101 = t888 / 0.2e1 - (t810 + t968) * t875 / 0.2e1 + 0.3e1 / 0.2e1 * t878 - t969 * t880 / 0.2e1 - t881 / 0.2e1;
	t1100 = -t883 / 0.4e1;
	t1099 = t883 / 0.4e1;
	t1098 = pkin(1) * t790;
	t1097 = pkin(1) * t807;
	t1094 = pkin(3) * t883;
	t856 = 0.7e1 * t878;
	t670 = (t823 + t865 + 0.7e1 * t880) * t888 + (t856 + (t850 + 0.10e2 * t882) * t880 + t924) * t875 + t1052;
	t1093 = t670 * pkin(1);
	t1092 = -0.6e1 * t1112;
	t1091 = -0.4e1 * t1112;
	t1037 = t869 - t888;
	t805 = t807 ^ 2;
	t1059 = t878 * t805;
	t1004 = 0.8e1 * t1059;
	t1044 = 0.4e1 / 0.7e1 * t882 - t870 / 0.7e1;
	t750 = t882 + t875 / 0.4e1 + t880 / 0.4e1 - t870 / 0.8e1;
	t672 = -0.32e2 / 0.21e2 * t750 * t934 + 0.5e1 / 0.42e2 * t888 + (0.16e2 / 0.21e2 * t880 + t1044) * t875 + t878 / 0.7e1 + t1044 * t880 + t881 - 0.3e1 / 0.7e1 * t1057 + t869 / 0.42e2;
	t752 = t1046 + t1124;
	t832 = 0.4e1 / 0.3e1 * t880;
	t673 = -0.8e1 / 0.3e1 * t752 * t934 + 0.5e1 / 0.18e2 * t888 + (t832 + t820) * t875 + t881 - t878 / 0.3e1 + t869 / 0.18e2 + (t826 + 0.2e1 / 0.3e1 * t880 + t822) * t882;
	t718 = -t888 / 0.6e1 + t906;
	t834 = t880 / 0.2e1;
	t1045 = t834 + t882;
	t720 = -0.2e1 / 0.3e1 * t934 + t819 + t1045;
	t785 = (t864 + t870) * t880;
	t831 = -0.2e1 / 0.3e1 * t875;
	t789 = t831 + t882;
	t939 = 0.16e2 * t1011;
	t653 = t789 * t1004 + t720 * t939 + 0.14e2 * t672 * t1058 + t799 * t888 + (-t1057 + t785 - 0.10e2 / 0.3e1 * t878 + 0.2e1 * t881) * t875 + t718 * t1064 + (0.6e1 * t673 * t1109 + t790 * t918) * pkin(1);
	t1033 = t881 - t878;
	t666 = t788 * t915 - t872 + (-t809 - t1031) * t888 + (t785 + t888 / 0.6e1 - t869 / 0.6e1 + t1033) * t875 + t718 * t882;
	t892 = pkin(7) * t882;
	t780 = -0.12e2 * pkin(7) * t884 + t1131 * t892;
	t787 = -0.8e1 * t878 + 0.12e2 * t1056;
	t682 = t780 * t840 + t787 * t807 + t1004 + t1034 - 0.6e1 * t1056 + t939;
	t693 = t756 * t1065 + t763 * t797;
	t743 = 0.16e2 * (t1032 - 0.6e1 * t1060) * t878;
	t795 = -0.30e2 * t870 + 0.60e2 * t882;
	t909 = t1037 + 0.6e1 * t881 - 0.6e1 * t1057;
	t631 = t743 * t805 + 0.32e2 * t693 * t1011 + 0.24e2 * t666 * t1058 + (t849 + t864 + 0.28e2 * t880) * t872 + t767 * t1080 + (t1037 * t866 + 0.24e2 * t653 * t803 + t795 * t878 + t881 * t851 + t858 * t909 + 0.28e2 * t884 ^ 2 + 0.4e1 * t892 ^ 2) * t875 + t1122 * t773 + 0.8e1 * (t661 * t1109 - t670 * t769) * pkin(1) + (0.16e2 * t682 * t801 + t795 * t880 + 0.70e2 * t878 + t888 + t909) * t888;
	t1027 = -0.4e1 * t1108;
	t748 = 0.7e1 / 0.6e1 * t875 + t818 + t1045;
	t828 = t875 / 0.3e1;
	t966 = t818 + t828 + t882;
	t751 = t832 + t966;
	t688 = -t748 * t1096 + t751 * t793;
	t760 = t880 + t966;
	t784 = t853 + t799;
	t699 = t760 * t793 - t784 * t1096 / 0.2e1;
	t967 = t870 / 0.3e1 + t828 + t866;
	t923 = -0.8e1 / 0.3e1 * t1059 + t875 * t799 - 0.5e1 / 0.3e1 * t878 + t967 * t880 + t882 * (t820 + t788);
	t655 = t838 * t806 * t1027 + t688 * t1001 + t923 * t793 + (t699 * t1028 + t838 * t1101) * pkin(1);
	t1003 = -0.4e1 * t1058;
	t1041 = t849 - 0.2e1 * t875;
	t962 = t863 + t1041;
	t698 = t852 + (t843 + t962) * t875 + (t831 + t963) * t798;
	t1087 = t698 * t838;
	t684 = t888 + (t822 + t831 + t1042) * t875 + t857 + t962 * t880 + t882 * (t822 + t789);
	t680 = t684 * t793;
	t757 = 0.8e1 / 0.3e1 * t875 + t965;
	t759 = t820 + t827 + t1039;
	t692 = -t757 * t1096 + t759 * t793;
	t764 = 0.5e1 / 0.6e1 * t875 + t834 + t818;
	t703 = t764 * t1016 + t1065 * t1096;
	t989 = t884 * t793;
	t929 = t806 * t989;
	t656 = -0.8e1 * pkin(7) * t929 + t703 * t1003 + t680 + (t692 * t1028 - t1087) * pkin(1);
	t667 = -pkin(1) * t1087 + t680;
	t1023 = -0.2e1 * t1096;
	t696 = -0.3e1 * t888 + (t810 + t969) * t875 + t968 * t880 + t1033;
	t700 = -0.5e1 / 0.3e1 * t888 + (-t880 + t967) * t875 + t882 * (t830 + t965);
	t668 = t700 * t1023 + t696 * t793;
	t738 = 0.4e1 * t907;
	t744 = t793 + 0.2e1 * t1096;
	t762 = t821 + t782;
	t671 = t800 * t793 + t738 * t807 + (t744 * t1109 + t762 * t838) * t1026;
	t1079 = t797 * t838;
	t749 = t882 + 0.5e1 / 0.2e1 * t875 + 0.3e1 / 0.2e1 * t880 + t821;
	t701 = t749 * t793 + pkin(1) * t1079 / 0.2e1;
	t916 = 0.24e2 * t788 * t1059 - t872 - (0.21e2 * t880 + t1123) * t888 - (t1041 * t882 + t765 + t861 + 0.35e2 * t878) * t875 - (t856 + (t862 + t1040) * t880 + t882 * (-t875 + t1031)) * t798;
	t985 = -0.12e2 * t1061;
	t636 = t701 * t939 + t671 * t932 + t655 * t985 - 0.6e1 * t668 * t1058 + (-0.6e1 * t656 * t1082 + t916 * t839) * pkin(3) + (-0.6e1 * t667 * t1109 + t1125 * t838) * pkin(1);
	t626 = t631 * t739 + t636 * t883;
	t958 = t651 * t1106;
	t904 = t650 * t1099 + t626 * t958;
	t871 = 0.1e1 / pkin(4);
	t1062 = t871 / pkin(3) ^ 2;
	t976 = t685 * t1062;
	t619 = t904 * t976;
	t1072 = t837 * t840;
	t729 = t1070 - t1072;
	t617 = t729 * t619;
	t959 = t650 * t1106;
	t903 = t651 * t1100 + t626 * t959;
	t618 = t903 * t976;
	t1073 = t837 * t838;
	t728 = t1068 + t1073;
	t610 = -t618 * t728 + t617;
	t616 = t728 * t619;
	t611 = -t618 * t729 - t616;
	t601 = atan2(t610, t611);
	t598 = sin(t601);
	t599 = cos(t601);
	t1063 = t871 * t876;
	t946 = t1063 / 0.2e1;
	t622 = atan2(t883 * t946, t626 * t633 * t946);
	t620 = sin(t622);
	t621 = cos(t622);
	t630 = t639 * t838 - t640 * t840;
	t606 = t1126 * t621 - t620 * t630;
	t607 = t1126 * t620 + t621 * t630;
	t591 = -t598 * t606 - t599 * t607;
	t589 = 0.1e1 / t591 ^ 2;
	t912 = t598 * t607 - t599 * t606;
	t1090 = t589 * t912;
	t609 = 0.1e1 / t611 ^ 2;
	t1089 = t609 * t610;
	t1088 = 0.1e1 / t626 ^ 2 * t1132;
	t1076 = t802 * t888;
	t1075 = t803 * t887;
	t1067 = t839 * t875;
	t1066 = t840 * t880;
	t1055 = t884 * t807;
	t1002 = -0.2e1 * t1058;
	t1007 = 0.8e1 * t1066;
	t1008 = -0.4e1 * t1074;
	t1010 = -0.8e1 * t1077;
	t1014 = pkin(7) * t1055;
	t1015 = pkin(7) * t1058;
	t1020 = -0.6e1 * t792;
	t940 = -0.24e2 * t1014;
	t1051 = t940 * t1079 - 0.24e2 * t788 * t929;
	t919 = pkin(7) * t930;
	t747 = -0.4e1 * t919;
	t776 = pkin(7) * t1023;
	t920 = t989 * t1111;
	t943 = 0.32e2 / 0.3e1 * t878;
	t921 = t806 * t943;
	t922 = 0.64e2 / 0.3e1 * t750 * t884;
	t926 = t806 * t972;
	t927 = 0.32e2 * t975;
	t933 = t1065 * t1108;
	t941 = -0.48e2 * t1014;
	t945 = pkin(7) * t1001;
	t952 = t662 * t1104;
	t970 = t838 * t1066;
	t982 = -0.32e2 * t878 * t806;
	t983 = 0.24e2 * t1061;
	t986 = -0.24e2 * t1066;
	t988 = -0.96e2 * t788 * t806;
	t995 = pkin(1) * t1064;
	t997 = t763 * t1098;
	t612 = ((t762 * t1022 + t1008 + t945) * t932 + (0.12e2 * t804 * t807 * t1108 + t748 * t1008 + t805 * t1027) * t985 + 0.12e2 * t700 * t1074 + (t1101 * t985 + t1125) * t794 + (t1002 * t784 * t985 + t698 * t1000 + t797 * t1004) * pkin(7)) * t883 + t636 * t952 + t747 * t739 * t927 + (((pkin(7) * t757 * t1003 - t698 * t794 - 0.4e1 * t926) * t1113 + t1051 * t1117) * t1082 + ((-pkin(7) * t805 * t943 - 0.16e2 * t752 * t1015 - t806 * t922 - 0.4e1 * t840 * t997) * t983 - 0.64e2 * t805 * t933 + t884 * t763 * t988 - 0.48e2 * t697 * t1015 - 0.8e1 * t840 * t1093 + ((t995 * t1114 + t1008) * t987 + (-0.24e2 * t763 * t1015 + t1129 * t794) * t1017) * t773) * t739 * t839) * pkin(3) + ((0.16e2 * (t787 * t1114 - t780 + t941 + t982) * t1078 + (t716 * t1091 + t710 * t1114 + t940) * t927 + (-0.28e2 * t672 * t1066 + t673 * t1092 + t720 * t941 + t789 * t982) * t983 + t773 * (t678 * t1092 + t691 * t986) * t1017 - 0.4e1 * t743 * t806 - 0.96e2 * t693 * t1014 - 0.48e2 * t666 * t1066 - 0.8e1 * t661 * t1112) * t739 + ((-0.8e1 * t688 * t1066 + t921 * t793) * t985 + t839 * t988 * t1095 + t701 * t941 + 0.12e2 * t668 * t1066 + (0.2e1 * (-t744 * t1112 - t738 * t840) * t1010 + (t703 * t1007 + t692 * t1091 + 0.24e2 * t920) * t1020) * t773) * t883 + (-t1122 * t739 - t631 + (t656 * t1018 + t671 * t1009 + (-0.24e2 * t776 + 0.64e2 * t970) * t1078 + (0.48e2 * t699 * t1061 + 0.6e1 * t667) * pkin(7)) * t883) * pkin(1)) * t838;
	t1005 = 0.8e1 * t1061;
	t1019 = -0.4e1 * t792;
	t936 = pkin(1) * t991;
	t627 = (t804 * t802 * t999 + (t796 * t794 - 0.2e1 * t1074) * t1006 + 0.4e1 * t926 + t783 * t945 + t732 * t794) * t883 + t652 * t952 + ((-0.8e1 / 0.3e1 * t929 + t747 - 0.2e1 * t790 * t936) * t984 - 0.24e2 * t758 * t919 - 0.6e1 * t690 * t936 + t1051) * t739 + ((t737 * t840 * t1005 + t707 * t1114 - 0.24e2 * t920) * t883 + (0.12e2 * (-t712 * t1066 - t1014) * t984 + t689 * t986) * t739 + (0.4e1 * t674 * t837 * t1094 - t905 * t739 - t647 + ((t1005 * t793 + 0.4e1 * t705) * t883 + (-0.48e2 * t721 * t1061 - 0.6e1 * t675) * t739) * pkin(7)) * pkin(1)) * t838 + ((t1010 * t794 + ((0.4e1 * t840 * t769 - 0.2e1 * t1111) * t880 + (-0.2e1 * t745 * t1110 - t783 * t840) * pkin(1)) * t1019) * t883 + ((t776 - 0.8e1 * t970) * t1009 + (-0.8e1 * t919 - 0.2e1 * t778 * t1069 + (-t717 * t1110 - t758 * t991) * t1131) * t1018) * t739) * t773;
	t900 = t686 * t904;
	t955 = t650 * t659 / 0.8e1;
	t956 = t651 * t1105;
	t1054 = (t708 * t900 + (t646 * t1099 + t662 * t955 + t612 * t958 + (t644 * t1106 + t627 * t956) * t626) * t685) * t1062 + t618;
	t1012 = pkin(7) * t1066;
	t973 = t788 * t1055;
	t993 = pkin(3) * t1073;
	t719 = 0.24e2 * t973 * t993;
	t992 = pkin(3) * t1072;
	t942 = pkin(7) * t992;
	t910 = t880 * t838 * t942;
	t735 = 0.4e1 * t910;
	t746 = t942 * t1120;
	t1013 = t875 * t1110;
	t935 = pkin(1) * t993;
	t1049 = 0.2e1 * t935 + t775;
	t971 = t837 * t1067;
	t731 = t775 + 0.4e1 * t971;
	t657 = t731 * t1003 + (t779 * t1115 + t980) * t839 + (-t1049 * t753 + 0.2e1 * t839 ^ 2 * t1013 + (-t709 * t1068 - t736 * t1073) * pkin(3)) * t1131;
	t953 = t657 * t1104;
	t974 = t773 * t1075;
	t979 = -0.4e1 * t1024;
	t613 = t636 * t953 + (0.32e2 * t735 * t739 - 0.8e1 * t746 * t883) * t975 + (0.24e2 * (-0.4e1 * t722 * t1076 * t1096 - t655 * t1071 - t671 * t974) * t883 + (0.48e2 * t653 * t1071 + 0.64e2 * t682 * t1076 + 0.96e2 * t664 * t974) * t739) * t839 + ((t631 + (t656 * t1113 + t654 * t1117) * t773) * t839 + (t773 * t719 * t1117 + ((t751 * t1003 + t760 * t979 - t923) * t985 - 0.16e2 * t749 * t1011 + t696 * t1000 + t684 * t978 + ((-t800 + t1003) * t1010 + (0.8e1 * t764 * t1058 + t759 * t979 - t684 + t944) * t1020) * t773 - t916) * t883 + ((pkin(7) * t921 + 0.16e2 * t752 * t1012 + t807 * t922 + 0.4e1 * t997) * t983 + 0.64e2 * t806 * t933 + 0.96e2 * t763 * t973 + 0.48e2 * t697 * t1012 + 0.8e1 * t1093 + ((0.2e1 * t995 + 0.4e1 * t1055) * t987 + (0.24e2 * t763 * t1012 + t1130 * t697) * t1017) * t773) * t739 * t838) * t837) * pkin(3);
	t628 = (t746 * t1006 + (-0.8e1 * t677 * t1067 - t771 * t807 + ((-t799 + t1002) * t1006 + t723 + (t782 * t1021 - 0.8e1 * t1074) * pkin(7)) * pkin(3)) * t837 + ((t746 + (-t782 + 0.2e1 * t1058) * t792) * t1019 + (pkin(3) * t1118 - 0.24e2 * t1075 * t1096) * t839) * t773) * t883 + t652 * t953 + (0.24e2 * t726 * t839 * t974 + (t735 + (0.8e1 / 0.3e1 * t1055 + 0.2e1 * t1098) * t993) * t984 + 0.24e2 * t663 * t971 + t719 + 0.24e2 * t758 * t910 + 0.6e1 * t690 * t935 + 0.6e1 * ((pkin(7) * t1007 + t1131 * t758) * t838 * t1061 + t665 * t793) * t773) * t739 + t647 * t793;
	t642 = t657 * t951 + t731 * t838 * t1022 + ((t838 * t883 - t681) * t837 + (t840 * t883 + (t772 * t1121 + t734) * t838 + (-pkin(1) + 0.2e1 * t1097 + t1109) * t1016) * t839) * pkin(3);
	t643 = (t769 - t992) * t883 + t657 * t950 - 0.2e1 * t731 * t1097 - (t775 + 0.4e1 * t935) * t753 - 0.2e1 * t803 * t1013 - t766 * t993 + (t1071 * t1131 + (t754 * t1121 - t706 * t840) * pkin(3)) * t839;
	t704 = 0.2e1 * t936 + t1049;
	t1053 = (-t704 * t900 + (t643 * t1099 + t657 * t955 + t613 * t958 + (t642 * t1106 + t628 * t956) * t626) * t685) * t1062 - t618;
	t960 = -t626 * t634 / 0.2e1;
	t957 = t650 * t1105;
	t954 = -t651 * t659 / 0.8e1;
	t948 = t704 * t1102;
	t623 = 0.1e1 / (t660 * t1088 + 0.1e1);
	t913 = t623 / t626 * t635 * t1104;
	t901 = -0.2e1 * pkin(4) * t623 * t1063 * t1088 * t1094;
	t899 = t686 * t903;
	t614 = 0.2e1 * (t642 * t1103 + t651 * t948) * t917 - 0.2e1 * (t643 * t1103 + t650 * t948) * t908;
	t608 = 0.1e1 / t611;
	t605 = t630 * t614;
	t604 = t1126 * t614;
	t603 = t1133 * t1126;
	t602 = t1133 * t630;
	t600 = 0.1e1 / (t609 * t610 ^ 2 + 0.1e1);
	t596 = (-t704 * t899 + (t613 * t959 + t642 * t1100 + t657 * t954 + (t643 * t1106 + t628 * t957) * t626) * t685) * t1062;
	t594 = (t708 * t899 + (t612 * t959 + t644 * t1100 + t662 * t954 + (t646 * t1106 + t627 * t957) * t626) * t685) * t1062;
	t593 = t657 * t913 + (t613 * t1107 + t628 * t960) * t901;
	t592 = t662 * t913 + (t612 * t1107 + t627 * t960) * t901;
	t588 = 0.1e1 / t591;
	t587 = t606 * t593 + t604 * t621 - t605 * t620;
	t586 = -t607 * t593 - t604 * t620 - t605 * t621;
	t585 = t606 * t592 - t602 * t620 + t603 * t621;
	t584 = -t607 * t592 - t602 * t621 - t603 * t620;
	t583 = 0.1e1 / (t589 * t912 ^ 2 + 0.1e1);
	t582 = ((t1053 * t729 - t596 * t728 - t616) * t608 - ((-t596 - t619) * t729 - t1053 * t728) * t1089) * t600;
	t581 = ((t1054 * t729 + (-t594 + t619) * t728) * t608 - (-t1054 * t728 - t594 * t729 + t617) * t1089) * t600;
	t1 = [0, 0; 0, 0; ((t591 * t581 + t584 * t599 - t585 * t598) * t588 + (t912 * t581 - t584 * t598 - t585 * t599) * t1090) * t583, ((t591 * t582 + t586 * t599 - t587 * t598) * t588 + (t912 * t582 - t586 * t598 - t587 * t599) * t1090) * t583;];
	Ja_rot = t1;
end