% Calculate kinetic energy for
% picker2Dm1DE1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [2x1]
%   Generalized joint coordinates (joint angles)
% qJD [2x1]
%   Generalized joint velocities
% V_base [6x1]
%   Base Velocity (twist: stacked translational and angular velocity) in base frame
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[L1,L2,L3,L4,L5,L6,e,phi05,phi1]';
% m [11x1]
%   mass of all robot links (including the base)
% rSges [11x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [11x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% T [1x1]
%   kinetic energy

% Quelle: HybrDyn-Toolbox
% Datum: 2020-05-10 19:54
% Revision: 52c9de996ed1e2eb3528e92ec0df589a9be0640a (2020-05-10)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function T = picker2Dm1DE1_energykin_floatb_twist_slag_vp1(qJ, qJD, V_base, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(2,1),zeros(2,1),zeros(6,1),zeros(9,1),zeros(11,1),zeros(11,3),zeros(11,6)}
assert(isreal(qJ) && all(size(qJ) == [2 1]), ...
  'picker2Dm1DE1_energykin_floatb_twist_slag_vp1: qJ has to be [2x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [2 1]), ...
  'picker2Dm1DE1_energykin_floatb_twist_slag_vp1: qJD has to be [2x1] (double)');
assert(isreal(V_base) && all(size(V_base) == [6 1]), ...
  'picker2Dm1DE1_energykin_floatb_twist_slag_vp1: V_base has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'picker2Dm1DE1_energykin_floatb_twist_slag_vp1: pkin has to be [9x1] (double)');
assert(isreal(m) && all(size(m) == [11 1]), ...
  'picker2Dm1DE1_energykin_floatb_twist_slag_vp1: m has to be [11x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [11,3]), ...
  'picker2Dm1DE1_energykin_floatb_twist_slag_vp1: rSges has to be [11x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [11 6]), ...
  'picker2Dm1DE1_energykin_floatb_twist_slag_vp1: Icges has to be [11x6] (double)'); 

%% Symbolic Calculation
% From energy_kinetic_floatb_twist_worldframe_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2020-05-10 09:11:41
% EndTime: 2020-05-10 09:14:59
% DurationCPUTime: 144.22s
% Computational Cost: add. (2531349->1029), mult. (6948344->1618), div. (96360->45), fcn. (1837084->38), ass. (0->708)
t1219 = 0.1e1 / pkin(6);
t1243 = pkin(2) ^ 2;
t1218 = pkin(6) ^ 2;
t1216 = 2 * pkin(2);
t1183 = sin(pkin(9));
t1186 = cos(pkin(9));
t1182 = sin(qJ(1));
t1184 = cos(qJ(2));
t1454 = t1182 * t1184;
t1389 = pkin(3) * t1454;
t1332 = pkin(1) * t1389;
t1096 = -0.2e1 * t1332;
t1181 = sin(qJ(2));
t1537 = 0.2e1 * t1181;
t1442 = pkin(7) * t1537;
t1115 = pkin(3) * t1442;
t1233 = pkin(1) ^ 2;
t1236 = pkin(7) ^ 2;
t1140 = t1233 + t1236;
t1228 = pkin(3) ^ 2;
t1341 = t1228 + t1140;
t1134 = pkin(3) * t1181;
t1113 = t1134 + pkin(7);
t1185 = cos(qJ(1));
t1467 = t1113 * t1185;
t1392 = pkin(1) * t1467;
t992 = t1096 + t1115 + t1341 + 0.2e1 * t1392;
t1539 = 0.1e1 / t992;
t1489 = t1539 / 0.4e1;
t1544 = 0.1e1 / pkin(3);
t1402 = t1544 * t1489;
t1178 = sin(pkin(8));
t1179 = cos(pkin(8));
t1048 = -t1178 * t1182 - t1179 * t1185;
t1512 = pkin(5) * t1048;
t1542 = -0.2e1 * pkin(1);
t1035 = t1512 * t1542;
t1220 = pkin(5) ^ 2;
t1026 = t1035 + 0.2e1 * t1220;
t1033 = -pkin(1) + t1512;
t1047 = t1178 * t1185 - t1179 * t1182;
t1437 = t1035 + t1220;
t1566 = 0.2e1 * pkin(1);
t1012 = -(t1566 + pkin(5)) * pkin(5) + t1437;
t1013 = pkin(5) * (t1566 - pkin(5)) + t1437;
t1238 = sqrt(-t1012 * t1013);
t955 = pkin(5) * t1026 * t1047 - t1033 * t1238;
t1324 = t955 * t1402;
t1470 = t1047 * t1238;
t953 = -pkin(5) * t1470 - t1026 * t1033;
t1326 = t953 * t1402;
t1020 = t1233 + t1437;
t1016 = 0.1e1 / t1020;
t1475 = t1016 / pkin(5);
t1199 = 0.2e1 * t1228;
t1205 = 0.3e1 * t1233;
t1223 = pkin(4) ^ 2;
t1418 = t1236 - t1223;
t1108 = t1199 + t1205 + t1418;
t1311 = -0.4e1 * t1332;
t1019 = t1108 + t1115 + t1311;
t1452 = t1184 * t1185;
t1388 = pkin(3) * t1452;
t1468 = t1113 * t1182;
t1032 = t1388 + t1468;
t1095 = -pkin(1) + t1389;
t1120 = t1233 + t1418;
t1145 = t1181 ^ 2;
t1061 = t1115 + t1120;
t1024 = t1096 + t1061;
t1563 = 0.4e1 * t1233;
t1150 = t1228 * t1563;
t1446 = t1228 * t1236;
t1118 = t1150 - 0.4e1 * t1446;
t1214 = -0.2e1 * t1236;
t1510 = t1544 / 0.2e1;
t1215 = 0.1e1 / t1510;
t1231 = t1233 ^ 2;
t1545 = -0.4e1 * pkin(7);
t1379 = pkin(3) * t1120 * t1545;
t1422 = -t1228 + t1236;
t1461 = t1145 * t1228;
t1049 = t1115 + t1422 + 0.2e1 * t1461;
t1149 = t1185 ^ 2;
t1469 = t1049 * t1149;
t1485 = 0.4e1 * pkin(1);
t950 = t1118 * t1145 + t1181 * t1379 - t1231 - (t1236 - (t1215 + pkin(4)) * pkin(4)) * (t1236 + (t1215 - pkin(4)) * pkin(4)) + (t1214 + 0.2e1 * t1223 - 0.4e1 * t1228 - 0.4e1 * t1469) * t1233 + (-t1024 * t1467 + t1061 * t1389) * t1485;
t1237 = sqrt(t950);
t938 = -t1019 * t1467 + t1032 * t1237 + (t1095 * t1442 + t1108 * t1454) * pkin(3) + (-0.2e1 * t1469 + (0.2e1 * t1145 - 0.4e1) * t1228 - t1120) * pkin(1);
t1030 = -t1095 + t1467;
t1135 = pkin(3) * t1184;
t1057 = t1199 + t1061;
t1136 = pkin(1) * t1185;
t1416 = 0.2e1 * t1136;
t978 = t1049 * t1416 + t1057 * t1113;
t982 = t1057 * t1185 + (0.4e1 * t1149 - 0.2e1) * t1113 * pkin(1);
t940 = t1030 * t1237 + t1135 * t982 + t1182 * t978;
t910 = (t1324 * t940 + t1326 * t938) * t1475;
t1490 = -t1539 / 0.4e1;
t1404 = t1544 * t1490;
t1325 = t955 * t1404;
t911 = (t1325 * t938 + t1326 * t940) * t1475;
t885 = t1183 * t911 + t1186 * t910;
t1520 = pkin(6) * t885;
t882 = t1520 * t1216;
t1487 = t1218 + t882;
t879 = t1243 + t1487;
t1369 = t1219 / t879 / 0.2e1;
t875 = -(t1216 + pkin(6)) * pkin(6) + t1487;
t876 = pkin(6) * (t1216 - pkin(6)) + t1487;
t1500 = t875 * t876;
t1239 = sqrt(-t1500);
t887 = t1183 * t910 - t1186 * t911;
t1519 = pkin(6) * t887;
t1534 = 0.2e1 * t1218;
t880 = t882 + t1534;
t881 = -pkin(2) - t1520;
t818 = -t1239 * t1519 - t880 * t881;
t819 = -t1239 * t881 + t1519 * t880;
t788 = atan2(t819 * t1369, t818 * t1369);
t786 = sin(t788);
t787 = cos(t788);
t1403 = t1539 * t1510;
t1328 = t940 * t1403;
t1329 = t938 * t1403;
t1263 = atan2(t1328, t1329);
t1259 = sin(t1263);
t1260 = cos(t1263);
t907 = -t1182 * t1260 - t1185 * t1259;
t908 = t1182 * t1259 - t1185 * t1260;
t1296 = t786 * t907 - t787 * t908;
t773 = t786 * t908 + t787 * t907;
t1448 = t1219 / pkin(2);
t1561 = t1239 / 0.2e1;
t835 = atan2(t1448 * t1561, -t885);
t833 = sin(t835);
t834 = cos(t835);
t748 = -t1296 * t833 + t773 * t834;
t1581 = Icges(10,4) * t748;
t1224 = 0.1e1 / pkin(4);
t1381 = t1224 * t1510;
t1114 = t1136 + pkin(7);
t1064 = t1134 + t1114;
t1235 = t1236 ^ 2;
t1245 = t1228 ^ 2;
t1419 = t1235 + t1245;
t1086 = 0.16e2 * (t1419 - 0.6e1 * t1446) * t1231;
t1109 = -t1223 + t1341;
t1137 = -0.30e2 * t1223 + 0.60e2 * t1236;
t1143 = t1145 ^ 2;
t1147 = t1149 ^ 2;
t1195 = -0.2e1 * t1223;
t1197 = -0.6e1 * t1223;
t1204 = 0.6e1 * t1233;
t1211 = 0.4e1 * t1236;
t1213 = 0.2e1 * t1236;
t1244 = pkin(3) * t1228;
t1225 = t1244 ^ 2;
t1240 = pkin(1) * t1233;
t1249 = pkin(7) * t1236;
t1222 = t1223 ^ 2;
t1424 = t1222 - t1245;
t1444 = t1236 * t1223;
t1275 = 0.6e1 * t1235 + t1424 - 0.6e1 * t1444;
t1148 = t1185 * t1149;
t1458 = t1148 * t1240;
t1406 = pkin(7) * t1458;
t1336 = 0.32e2 * t1406;
t1445 = t1233 * t1149;
t1144 = t1181 * t1145;
t1462 = t1144 * t1244;
t1133 = t1140 ^ 2;
t1464 = t1133 * (-t1228 + t1120);
t1518 = pkin(7) * t1185;
t1139 = -0.3e1 * t1228 + t1236;
t1351 = 0.8e1 * t1406;
t1085 = t1139 * t1351;
t1417 = pkin(7) * t1136;
t1377 = 0.6e1 * t1417;
t1380 = 0.12e2 * t1445;
t1151 = 0.10e2 / 0.3e1 * t1233;
t1421 = t1231 + t1235;
t1425 = t1213 - t1223;
t1271 = t1425 * t1233 + t1222 / 0.6e1 + t1421 - t1444;
t1268 = 0.5e1 / 0.6e1 * t1245 + t1271;
t1004 = (t1151 + t1425) * t1228 + t1268;
t1165 = -0.3e1 / 0.2e1 * t1223;
t1187 = 0.15e2 * t1231;
t1194 = 0.18e2 * t1236;
t1208 = 0.3e1 * t1235;
t1434 = t1222 / 0.2e1 - t1245 / 0.2e1;
t1304 = -0.3e1 * t1444 + t1208 + t1434;
t1212 = 0.3e1 * t1236;
t1430 = 0.15e2 * t1233 + t1212;
t1439 = t1140 * ((t1165 + t1213) * t1233 - 0.3e1 / 0.2e1 * t1444 + t1421 + t1434) + t1225;
t958 = -0.6e1 * t1004 * t1332 + (t1187 + (t1194 - 0.9e1 * t1223) * t1233 + t1304) * t1228 + (t1165 + t1430) * t1245 + t1439;
t1163 = -t1223 / 0.2e1;
t1103 = t1163 + t1341;
t1339 = -0.4e1 * t1389;
t1303 = t1103 * t1339;
t1288 = pkin(1) * t1303;
t977 = t1288 + (t1204 + t1425) * t1228 + t1268;
t1172 = -t1228 / 0.3e1;
t1130 = t1172 + t1236;
t1051 = t1130 * t1096;
t1450 = (pkin(7) + pkin(3)) * (pkin(7) - pkin(3));
t997 = t1103 * t1450 + t1051;
t945 = t1377 * t977 + t1380 * t997 + t1085 + t958;
t1565 = 0.8e1 * t945;
t1038 = -t1245 / 0.6e1 + t1271;
t1161 = -t1223 / 0.4e1;
t1176 = t1233 / 0.2e1;
t1432 = t1176 + t1236;
t1042 = -0.2e1 / 0.3e1 * t1332 + t1161 + t1432;
t1124 = (t1211 + t1223) * t1233;
t1173 = -0.2e1 / 0.3e1 * t1228;
t1131 = t1173 + t1236;
t1132 = -t1233 / 0.3e1 + t1236;
t1141 = -t1233 + t1236;
t1337 = 0.16e2 * t1406;
t1460 = t1147 * t1231;
t1399 = 0.8e1 * t1460;
t1440 = 0.6e1 * t1518;
t1449 = (pkin(7) + pkin(1)) * (pkin(7) - pkin(1));
t1091 = t1236 + t1228 / 0.4e1 + t1233 / 0.4e1 - t1223 / 0.8e1;
t1431 = 0.4e1 / 0.7e1 * t1236 - t1223 / 0.7e1;
t970 = -0.32e2 / 0.21e2 * t1091 * t1332 + 0.5e1 / 0.42e2 * t1245 + (0.16e2 / 0.21e2 * t1233 + t1431) * t1228 + t1231 / 0.7e1 + t1431 * t1233 + t1235 - 0.3e1 / 0.7e1 * t1444 + t1222 / 0.42e2;
t1433 = t1233 / 0.3e1 + t1236;
t1549 = t1161 + t1228 / 0.2e1;
t1093 = t1433 + t1549;
t1162 = -t1223 / 0.3e1;
t1164 = -0.2e1 / 0.3e1 * t1223;
t1168 = 0.4e1 / 0.3e1 * t1228;
t1174 = 0.4e1 / 0.3e1 * t1233;
t972 = -0.8e1 / 0.3e1 * t1093 * t1332 + 0.5e1 / 0.18e2 * t1245 + (t1174 + t1162) * t1228 + t1235 - t1231 / 0.3e1 + t1222 / 0.18e2 + (t1168 + 0.2e1 / 0.3e1 * t1233 + t1164) * t1236;
t944 = t1131 * t1399 + t1042 * t1337 + 0.14e2 * t970 * t1445 + t1141 * t1245 + (t1124 - 0.10e2 / 0.3e1 * t1231 + 0.2e1 * t1235 - t1444) * t1228 + t1038 * t1449 + (t1132 * t1303 + t1440 * t972) * pkin(1);
t1209 = 0.8e1 * t1236;
t1533 = 0.4e1 * t1231;
t1025 = t1240 * t1339 + t1150 + t1533 + (t1195 + t1209) * t1233;
t1287 = t1236 - t1332;
t1036 = -t1233 + t1287 + t1549;
t1142 = -0.3e1 * t1233 + t1236;
t1338 = -0.2e1 * t1389;
t1441 = 0.4e1 * t1518;
t960 = t1351 + t1025 * t1149 + t1103 * t1142 + (t1036 * t1441 + t1338 * t1449) * pkin(1);
t1420 = t1235 - t1231;
t962 = t1130 * t1288 - t1225 + (-t1151 - t1418) * t1245 + (t1124 + t1245 / 0.6e1 - t1222 / 0.6e1 + t1420) * t1228 + t1038 * t1236;
t1196 = -0.5e1 * t1223;
t1202 = 0.7e1 * t1231;
t966 = (t1165 + t1212 + 0.7e1 * t1233) * t1245 + (t1202 + (t1196 + 0.10e2 * t1236) * t1233 + t1304) * t1228 + t1439;
t1119 = -0.12e2 * pkin(7) * t1240 + t1249 * t1485;
t1443 = t1236 * t1233;
t1126 = -0.8e1 * t1231 + 0.12e2 * t1443;
t985 = t1119 * t1185 + t1126 * t1149 + t1337 + t1399 + t1421 - 0.6e1 * t1443;
t999 = t1096 * t1450 + t1103 * t1139;
t909 = t1086 * t1147 + t999 * t1336 + 0.24e2 * t962 * t1445 + (t1195 + t1211 + 0.28e2 * t1233) * t1225 + t1109 * t1464 + (t1137 * t1231 + 0.24e2 * t944 * t1145 + t1197 * t1235 + t1204 * t1275 + t1213 * t1424 + 0.28e2 * t1240 ^ 2 + 0.4e1 * t1249 ^ 2) * t1228 + (t1134 * t1565 + 0.32e2 * t1462 * t960) * t1114 + 0.8e1 * (-t1389 * t966 + t1518 * t958) * pkin(1) + (t1137 * t1233 + 0.16e2 * t1143 * t985 + 0.70e2 * t1231 + t1245 + t1275) * t1245;
t1090 = t1236 + 0.5e1 / 0.2e1 * t1228 + 0.3e1 / 0.2e1 * t1233 + t1163;
t1384 = pkin(1) * t1139 / 0.2e1;
t1008 = t1090 * t1135 + t1182 * t1384;
t1116 = pkin(7) * t1416;
t1044 = 0.4e1 / 0.3e1 * t1445 + t1116 + t1132;
t1463 = t1143 * t1245;
t1316 = -0.24e2 * t1044 * t1463;
t1360 = t1114 * t1462;
t1321 = -0.8e1 * t1360;
t1383 = -0.12e2 * t1461;
t1398 = -0.6e1 * t1445;
t1466 = t1114 * t1181;
t1170 = t1228 / 0.3e1;
t1347 = t1223 / 0.3e1 + t1170 + t1213;
t1000 = t1228 * t1141 - 0.5e1 / 0.3e1 * t1231 + t1347 * t1233 + t1236 * (t1162 + t1130);
t1152 = -0.20e2 / 0.3e1 * t1233;
t1169 = 0.2e1 / 0.3e1 * t1228;
t1348 = 0.2e1 / 0.3e1 * t1223 + t1169 + t1211;
t1349 = 0.4e1 / 0.3e1 * t1223 + t1168 + t1214;
t1002 = -t1245 + (t1152 + t1348) * t1228 - 0.3e1 * t1231 + t1349 * t1233 + t1235;
t1160 = -t1223 / 0.6e1;
t1346 = t1160 + t1170 + t1236;
t1100 = t1233 + t1346;
t1123 = t1199 + t1141;
t1514 = pkin(1) * t1182;
t1006 = t1100 * t1135 - t1123 * t1514 / 0.2e1;
t1459 = t1148 * t1231;
t1358 = t1182 * t1459;
t1396 = 0.4e1 * t1445;
t1516 = -t1182 / 0.2e1;
t1089 = 0.7e1 / 0.6e1 * t1228 + t1160 + t1432;
t1092 = t1174 + t1346;
t993 = -t1089 * t1514 + t1092 * t1135;
t946 = t1358 * t1545 + t993 * t1396 + (-0.8e1 / 0.3e1 * t1460 + t1000) * t1135 + (t1002 * t1516 + t1006 * t1441) * pkin(1);
t1104 = 0.5e1 / 0.6e1 * t1228 + t1176 + t1160;
t1357 = t1182 * t1450;
t1414 = t1184 * t1215;
t1015 = pkin(1) * t1357 + t1104 * t1414;
t1386 = t1240 * t1135;
t1397 = -0.4e1 * t1445;
t1189 = 0.10e2 * t1233;
t1198 = 0.5e1 * t1245;
t1210 = 0.6e1 * t1236;
t1575 = -0.2e1 * t1228;
t1428 = t1195 + t1575;
t1342 = t1210 + t1428;
t1343 = t1164 + t1140;
t1005 = t1198 + (t1189 + t1342) * t1228 + (t1173 + t1343) * t1140;
t1476 = t1005 * t1182;
t1546 = -0.8e1 * pkin(7);
t1203 = 0.5e1 * t1231;
t1429 = t1189 + t1213;
t989 = t1245 + (t1164 + t1173 + t1429) * t1228 + t1203 + t1342 * t1233 + t1236 * (t1164 + t1131);
t981 = t989 * t1135;
t1345 = t1162 + t1140;
t1097 = 0.8e1 / 0.3e1 * t1228 + t1345;
t1426 = t1205 + t1236;
t1099 = t1162 + t1169 + t1426;
t998 = -t1097 * t1514 + t1099 * t1135;
t947 = t1148 * t1386 * t1546 + t1015 * t1397 + t981 + (t1441 * t998 - t1476) * pkin(1);
t963 = -pkin(1) * t1476 + t981;
t1003 = -0.3e1 * t1245 + (t1152 + t1349) * t1228 + t1348 * t1233 + t1420;
t1564 = 0.10e2 / 0.3e1 * t1245 + (-t1233 + t1347) * t1575 + (t1172 + t1345) * t1214;
t964 = t1003 * t1135 + t1514 * t1564;
t1548 = t1212 - t1223 - t1228;
t1105 = t1548 * t1189;
t1427 = t1196 - 0.5e1 * t1228;
t965 = t1225 + (0.21e2 * t1233 + t1548) * t1245 + (t1236 * t1428 + t1105 + t1208 + 0.35e2 * t1231) * t1228 + (t1202 + (t1209 + t1427) * t1233 + t1236 * (-t1228 + t1418)) * t1140;
t1387 = t1233 * t1135;
t1273 = -t1182 * t1240 + t1387;
t1063 = 0.4e1 * t1273;
t1087 = t1135 + 0.2e1 * t1514;
t1121 = t1228 + t1426;
t1102 = t1163 + t1121;
t967 = t1142 * t1135 + t1063 * t1149 + (t1087 * t1518 + t1102 * t1182) * t1566;
t975 = 0.7e1 * t1225 + (0.35e2 * t1233 + 0.15e2 * t1236 + t1427) * t1245 + (0.21e2 * t1231 + t1105 + 0.9e1 * t1235 + (t1197 - 0.6e1 * t1228) * t1236) * t1228 + t1464;
t918 = t1008 * t1337 + t967 * t1321 + t946 * t1383 + t964 * t1398 + (-0.6e1 * t947 * t1466 + (0.24e2 * t1130 * t1460 - t965) * t1184) * pkin(3) + (-0.6e1 * t963 * t1518 + (t975 + t1316) * t1182) * pkin(1);
t874 = t1064 * t909 + t1237 * t918;
t1050 = t1116 + t1396 + t1142;
t1382 = 0.12e2 * t1461;
t1484 = 0.6e1 * pkin(1);
t1029 = -0.4e1 / 0.9e1 * t1332 + 0.4e1 / 0.9e1 * t1228 - t1223 / 0.9e1 + t1433;
t1043 = t1160 + t1169 + t1287;
t1098 = t1168 + t1345;
t959 = 0.4e1 * t1406 + 0.6e1 * t1029 * t1445 + t1098 * t1449 + (t1043 * t1441 + t1132 * t1338) * pkin(1);
t1037 = t1096 + t1098;
t1117 = t1422 * t1563;
t1415 = 0.4e1 * t1136;
t1344 = t1164 + t1169 + t1213;
t1436 = (t1169 + t1343) * t1140 + t1245;
t974 = t1098 * t1311 + (t1204 + t1344) * t1228 + t1436;
t961 = pkin(7) * t1037 * t1415 + t1117 * t1149 + t974;
t994 = t1098 * t1450 + t1051;
t996 = (t1151 + t1344) * t1228 + t1436;
t928 = t959 * t1382 + t1085 + t994 * t1380 + t1225 + (-t1223 + t1228 + t1430) * t1245 + (t1187 + (t1194 + t1197 + 0.6e1 * t1228) * t1233 + t1208 + (t1195 + t1199) * t1236) * t1228 + t1133 * t1109 + (0.8e1 * t1050 * t1462 + 0.6e1 * t1134 * t961) * t1114 + (-t1389 * t996 + t1518 * t974) * t1484;
t1084 = t1121 * t1135;
t1122 = 0.3e1 * t1228 + t1140;
t1465 = t1122 * t1182;
t1018 = -pkin(1) * t1465 + t1084;
t1562 = 0.8e1 * t1233;
t1112 = pkin(3) * t1533 + t1244 * t1562;
t1532 = 0.4e1 * t1240;
t1021 = t1112 * t1184 + t1357 * t1532;
t1046 = t1228 * t1429 + t1203 + t1419 + 0.6e1 * t1443;
t1055 = t1198 + (t1189 + t1210) * t1228 + t1133;
t1400 = -0.4e1 * t1461;
t1088 = t1135 - t1514;
t973 = -0.2e1 * t1149 * t1387 + t1084 + (0.2e1 * t1088 * t1518 - t1465) * pkin(1);
t1062 = 0.2e1 * t1273;
t1206 = 0.2e1 * t1233;
t1138 = t1206 + t1228;
t1378 = pkin(7) * t1414;
t976 = t1141 * t1135 + t1062 * t1149 + (t1138 * t1182 + t1185 * t1378) * pkin(1);
t941 = t976 * t1400 + t1021 * t1149 + (-0.4e1 * t973 * t1466 + (-t1046 + t1351) * t1184) * pkin(3) + (-0.4e1 * t1018 * t1518 + (t1055 + t1321) * t1182) * pkin(1);
t917 = t1064 * t928 + t1237 * t941;
t915 = 0.1e1 / t917;
t856 = atan2(t1237 * t1381, t874 * t915 * t1381);
t854 = sin(t856);
t855 = cos(t856);
t1335 = -t854 * t907 + t908 * t855;
t1456 = t1181 * t1182;
t1284 = t1452 + t1456;
t1455 = t1181 * t1185;
t1285 = -t1454 + t1455;
t1374 = t915 * t1489;
t1314 = t938 * t1374;
t1368 = t1237 * t1490;
t1447 = t1224 / pkin(3) ^ 2;
t848 = (t1314 * t874 + t1368 * t940) * t1447;
t1313 = t940 * t1374;
t1367 = t1237 * t1489;
t849 = (t1313 * t874 + t1367 * t938) * t1447;
t825 = -t1284 * t848 - t1285 * t849;
t826 = -t1284 * t849 + t1285 * t848;
t810 = atan2(t825, t826);
t807 = sin(t810);
t808 = cos(t810);
t821 = t854 * t908 + t855 * t907;
t777 = t1335 * t807 + t808 * t821;
t1580 = Icges(11,4) * t777;
t1568 = -t1296 * t834 - t773 * t833;
t1579 = t1568 / 0.2e1;
t1569 = -t1335 * t808 + t807 * t821;
t1578 = t1569 / 0.2e1;
t1577 = Icges(10,4) * t1568;
t1576 = Icges(11,4) * t1569;
t1574 = Icges(4,4) * t773;
t1573 = Icges(5,4) * t821;
t847 = atan2(t887, t885);
t844 = sin(t847);
t845 = cos(t847);
t815 = t844 * t908 + t845 * t907;
t1572 = Icges(7,4) * t815;
t1531 = pkin(1) * pkin(3);
t1333 = t1456 * t1531;
t1300 = qJD(2) * t1333;
t1356 = qJD(1) * t1452;
t1301 = t1356 * t1531;
t1571 = -0.6e1 * t1301 + 0.6e1 * t1300;
t1570 = -t1301 + t1300;
t1567 = t917 ^ 2;
t1492 = 0.2e1 * pkin(7);
t1295 = t844 * t907 - t845 * t908;
t1560 = t1295 / 0.2e1;
t1559 = t1296 / 0.2e1;
t1558 = t1335 / 0.2e1;
t1557 = Icges(4,4) * t1296;
t1556 = Icges(5,4) * t1335;
t1555 = Icges(7,4) * t1295;
t1550 = qJD(1) - qJD(2);
t1302 = qJD(1) * t1333;
t1478 = qJD(2) * t1184;
t1363 = t1114 * t1478;
t1319 = pkin(3) * t1363;
t1547 = t1302 - t1319;
t1362 = qJD(2) * t1456;
t1270 = t1356 - t1362;
t1543 = -0.4e1 * pkin(1);
t1541 = 0.1e1 / t885;
t1540 = 0.1e1 / t953;
t1538 = 0.1e1 / t885 ^ 2;
t1536 = -0.8e1 * t1185;
t1535 = -0.2e1 * t1185;
t1530 = t908 / 0.2e1;
t1474 = t1016 / pkin(1);
t1353 = t1474 / 0.2e1;
t1354 = -t1474 / 0.2e1;
t1027 = t1035 + t1206;
t1034 = -pkin(1) * t1048 + pkin(5);
t954 = -pkin(1) * t1470 + t1027 * t1034;
t956 = pkin(1) * t1027 * t1047 + t1034 * t1238;
t936 = atan2(t956 * t1353, t954 * t1354);
t932 = sin(t936);
t934 = cos(t936);
t922 = -t1178 * t932 + t1179 * t934;
t1529 = t922 / 0.2e1;
t1355 = t1475 / 0.2e1;
t935 = atan2(t955 * t1355, t953 * t1355);
t931 = sin(t935);
t933 = cos(t935);
t924 = -t1182 * t931 + t1185 * t933;
t1528 = t924 / 0.2e1;
t1106 = qJD(2) * t1378;
t1435 = 0.2e1 * t1570;
t1350 = t1106 + t1435;
t1497 = ((-qJD(1) * t1468 + qJD(2) * t1388) * t1566 + t1350) / t992 ^ 2;
t1370 = t1497 / 0.4e1;
t1040 = t1048 * qJD(1);
t1039 = t1047 * qJD(1);
t1366 = t1039 * t1566;
t1498 = (t1012 + t1013) * pkin(5) * t1366 / t1238;
t1372 = t1498 / 0.2e1;
t1401 = 0.2e1 * t1039 * t1047;
t1472 = t1039 * t1238;
t930 = t1033 * t1372 + t1220 * pkin(1) * t1401 + (t1026 * t1040 + t1472) * pkin(5);
t1266 = t1370 * t1544 * t955 + t1404 * t930;
t1371 = -t1497 / 0.4e1;
t1272 = -t1040 * t1238 + t1047 * t1372;
t929 = (-(t1033 * t1566 - t1026) * t1039 + t1272) * pkin(5);
t1267 = t1371 * t1544 * t953 + t1402 * t929;
t1327 = t953 * t1403;
t1017 = 0.1e1 / t1020 ^ 2;
t1473 = t1017 * t1039;
t1393 = pkin(1) * t1473;
t1477 = qJD(2) * t1228;
t1306 = t1181 * t1184 * t1477;
t1298 = 0.4e1 * t1306;
t1041 = t1106 + t1298;
t1480 = qJD(1) * t1185;
t1364 = t1182 * t1480;
t1310 = t1049 * t1364;
t1471 = t1041 * t1149;
t1482 = qJD(1) * t1182;
t1499 = ((0.8e1 * t1310 - 0.4e1 * t1471) * t1233 + (t1118 * t1537 + t1379) * t1478 + (t1182 * t1184 ^ 2 * t1477 * t1492 + (t1024 * t1482 - t1185 * t1350) * t1113 + (t1061 * t1356 + (-t1024 * t1452 - t1061 * t1456) * qJD(2)) * pkin(3)) * t1485) / t1237;
t1373 = t1499 / 0.2e1;
t1451 = t1185 * t1237;
t1453 = t1182 * t1237;
t1481 = qJD(1) * t1184;
t1483 = 0.2e1 * pkin(3);
t912 = t1030 * t1373 + (-t1113 * t1453 + t1185 * t978) * qJD(1) + (t1041 * t1185 - t1049 * t1482) * t1182 * t1566 + ((-t1451 + (-t1057 - 0.8e1 * t1392) * t1182) * t1481 + ((-t982 + t1453) * t1181 + (t1451 + (t1113 * t1492 + t1057) * t1182 + (t1149 * t1566 - pkin(1) + t1518) * t1184 * t1483) * t1184) * qJD(2)) * pkin(3);
t1262 = 0.4e1 * t1270;
t1258 = t1262 * t1136;
t913 = t1032 * t1373 + (-t1106 * t1185 + (t1019 * t1182 + t1451) * qJD(1)) * t1113 + (t1298 + 0.4e1 * t1310 - 0.2e1 * t1471) * pkin(1) + ((t1108 * t1185 - t1453) * t1481 + (-t1019 * t1452 - t1108 * t1456 - t1237 * t1285) * qJD(2) + (t1095 * t1478 + t1134 * t1270) * t1492 + t1113 * t1258) * pkin(3);
t837 = -(t1327 * t938 + t1328 * t955) * t1393 + (-t1266 * t940 + t1267 * t938 + t1324 * t912 + t1326 * t913) * t1475;
t1511 = -t1544 / 0.2e1;
t1405 = t1539 * t1511;
t838 = -(t1405 * t938 * t955 + t1327 * t940) * t1393 + (t1266 * t938 + t1267 * t940 + t1325 * t913 + t1326 * t912) * t1475;
t811 = t1183 * t838 + t1186 * t837;
t1527 = pkin(2) * t811;
t1526 = pkin(2) * t908;
t1525 = pkin(3) * t908;
t1524 = pkin(4) * t821;
t1523 = pkin(4) * t1335;
t1522 = pkin(6) * t773;
t1521 = pkin(6) * t1296;
t1517 = t1181 / 0.2e1;
t1515 = -t1185 / 0.2e1;
t1513 = pkin(1) * t1149;
t1509 = Icges(3,4) * t907;
t921 = t1178 * t934 + t1179 * t932;
t1508 = Icges(6,4) * t921;
t923 = t1182 * t933 + t1185 * t931;
t1507 = Icges(9,4) * t923;
t1506 = (-t875 - t876) * pkin(6) * t1527 / t1561;
t1505 = t811 * t887;
t1128 = V_base(6) + qJD(1);
t1323 = t1497 * t1511;
t937 = 0.1e1 / t938 ^ 2;
t840 = t1128 + ((t1323 * t940 + t1403 * t912) / t1329 + (t1323 * t938 + t1403 * t913) * t940 * t937 / t1405) / (t937 * t940 ^ 2 + 0.1e1);
t1504 = t840 * t907;
t1503 = t840 * t908;
t1265 = t1270 * pkin(3);
t1001 = t1233 * t1265 * t1441;
t1395 = pkin(1) * t1482;
t1056 = pkin(3) * t1478 - t1395;
t1340 = pkin(7) * t1395;
t1107 = -0.2e1 * t1340;
t1146 = t1182 ^ 2;
t1286 = t1145 * t1244 * t1363;
t1274 = -0.24e2 * t1286;
t1280 = t1132 * t1300;
t1281 = t1132 * t1301;
t1457 = t1149 * t1240;
t1407 = pkin(7) * t1457;
t1299 = t1407 * t1482;
t1282 = -0.24e2 * t1299;
t1305 = t1233 * t1364;
t1291 = -0.24e2 * t1305;
t1479 = qJD(2) * t1181;
t1391 = pkin(3) * t1479;
t1292 = t1391 * t1458;
t1365 = qJD(1) * t1462;
t1320 = pkin(1) * t1365;
t1294 = t1182 * t1320;
t1308 = t1450 * t1480;
t1312 = -0.6e1 * t1340;
t1394 = pkin(1) * t1480;
t1317 = t1122 * t1394;
t1322 = -0.2e1 * t1364;
t1334 = t1445 * t1531;
t1361 = qJD(2) * t1455;
t1390 = pkin(3) * t1466;
t1438 = 0.4e1 * t1570 * t1098;
t1257 = pkin(1) * t1130 * t1265 * t1445;
t1488 = t1139 * t1282 - 0.24e2 * t1257;
t1502 = ((t1114 * t1320 * t1536 + t1146 * t1365 * t1562 + t1274 * t1514 + (0.2e1 * (-t1233 * t1391 - t1240 * t1480) * t1149 + t1062 * t1322 - t1141 * t1391 + (t1138 * t1480 + (-qJD(1) * t1454 - t1361) * pkin(7) * t1483) * pkin(1)) * t1400 - 0.8e1 * t976 * t1306 - 0.4e1 * (-t1317 + (0.4e1 * t1184 * t1305 + (-t1121 + 0.2e1 * t1445) * t1479) * pkin(3) + ((-t1391 - t1394) * t1136 - t1088 * t1395) * t1492) * t1390 + t1292 * t1546 + t1282 * t1135 + (-t1112 * t1479 + t1308 * t1532) * t1149 + t1021 * t1322 - 0.4e1 * (-t1121 * t1391 - t1317) * t1417 + 0.4e1 * t1018 * t1340 + t1046 * t1391 + t1055 * t1394 + 0.4e1 * t1547 * t973) * t1237 + t941 * t1373 + (0.8e1 * (t1107 - 0.8e1 * t1305) * t1360 + (-0.12e2 * t1299 + 0.6e1 * (-0.4e1 / 0.9e1 * t1356 + 0.4e1 / 0.9e1 * t1362) * t1334 - 0.12e2 * t1029 * t1305 - t1001 - 0.4e1 * t1043 * t1340 - 0.2e1 * t1281 + 0.2e1 * t1280) * t1382 + 0.24e2 * t959 * t1306 + 0.6e1 * (t1117 * t1322 + (-t1037 * t1482 + t1185 * t1435) * pkin(7) * t1485 + t1438) * t1390 + t994 * t1291 + t1438 * t1377 + t974 * t1312 + t1488 + t1571 * t996 - 0.6e1 * t1547 * t961 + (-0.8e1 * t1294 + 0.24e2 * t1286) * t1050) * t1064 + t928 * t1056) / t1567;
t1501 = 0.1e1 / t874 ^ 2 * t1567;
t1496 = t1571 * t1004;
t1495 = Icges(2,4) * t1182;
t1494 = Icges(2,4) * t1185;
t1493 = Icges(8,4) * t1184;
t1491 = t1239 * t811;
t1413 = 0.1e1 / t879 ^ 2 * t1527;
t1410 = t1128 * t1514 + V_base(1);
t1409 = V_base(5) * t1136 + V_base(3);
t1408 = pkin(5) * V_base(6);
t1385 = pkin(5) * t1473;
t1376 = t907 * V_base(4);
t1375 = -t1506 / 0.2e1;
t1359 = t1182 * t1463;
t1331 = pkin(3) * t1376 + t1409;
t1330 = pkin(2) * t1376 + t1409;
t1318 = pkin(3) * t1361;
t1315 = t1490 * t1502;
t1309 = qJD(1) * t1358;
t1307 = t1144 * t1245 * t1478;
t1297 = -t1128 * t1136 + V_base(2);
t1293 = t1391 * t1460;
t1283 = -0.48e2 * t1299;
t1279 = -pkin(2) * t1504 + t1410;
t1278 = -pkin(3) * t1504 + t1410;
t1277 = pkin(3) * t1503 + t1297;
t1276 = pkin(2) * t1503 + t1297;
t812 = t1183 * t837 - t1186 * t838;
t817 = 0.1e1 / t818 ^ 2;
t733 = t840 + 0.2e1 * (((t881 * t1375 + pkin(2) * t1505 * t1534 + (t812 * t880 + t1491) * pkin(6)) * t1369 - t819 * t1413) / t818 - (-t818 * t1413 + (t887 * t1375 - t1239 * t812 + (-0.2e1 * pkin(2) * t881 + t880) * t811) * pkin(6) * t1369) * t819 * t817) * pkin(6) / (t817 * t819 ^ 2 + 0.1e1) * t879;
t1261 = t1270 * t1566;
t1264 = -t1005 * t1394 - t1391 * t989;
t827 = (t1316 * t1394 - 0.24e2 * pkin(1) * (-0.8e1 / 0.3e1 * t1305 + t1107) * t1359 - 0.96e2 * t1044 * t1307 * t1514 + ((-t1142 + t1397) * t1391 + 0.2e1 * (pkin(1) * t1102 - t1063 * t1182 - 0.2e1 * t1457) * t1480 + (-0.2e1 * t1318 + (-0.2e1 * t1087 * t1182 + 0.4e1 * t1513) * qJD(1)) * pkin(1) * pkin(7)) * t1321 + (0.8e1 / 0.3e1 * t1293 + (-t1089 * t1394 - t1092 * t1391) * t1396 - t1000 * t1391 - t1002 * t1394 / 0.2e1 + (0.32e2 / 0.3e1 * t1459 * t1135 + t1233 * t993 * t1536) * t1482 + (t1100 * t1318 * t1543 + ((0.12e2 * t1146 * t1149 - 0.4e1 * t1147) * t1231 + (-0.4e1 * t1006 * t1182 - 0.2e1 * t1123 * t1513) * pkin(1)) * qJD(1)) * pkin(7)) * t1383 - 0.24e2 * t946 * t1306 - 0.6e1 * ((-0.4e1 * (pkin(1) * t1308 - 0.2e1 * t1104 * t1391) * t1149 + 0.8e1 * t1015 * t1364) * t1233 + (0.8e1 * t1292 + (-t1097 * t1394 - t1099 * t1391) * t1415 + (0.24e2 * t1149 * t1386 + t1543 * t998) * t1482) * pkin(7) + t1264) * t1390 + (-t1090 * t1391 + t1384 * t1480) * t1337 + t1008 * t1283 + (-t1003 * t1391 + t1394 * t1564) * t1398 + 0.12e2 * t964 * t1305 - 0.6e1 * t1264 * t1417 + 0.6e1 * t963 * t1340 + t965 * t1391 + t975 * t1394 + (0.8e1 * t1294 + t1274) * t967 + 0.6e1 * t1547 * t947 + (-0.96e2 * t1135 * t1309 - 0.24e2 * t1293) * t1130) * t1237 + t918 * t1373 + (0.16e2 * (t1126 * t1535 - t1119 - 0.48e2 * t1407 - 0.32e2 * t1459) * qJD(1) * t1359 + 0.64e2 * t985 * t1307 + 0.32e2 * (-t1001 + (t1025 * t1535 + (t1036 * t1543 - 0.24e2 * t1457) * pkin(7)) * t1482 + (-t1261 * t1449 - t1262 * t1457) * pkin(3)) * t1360 + 0.24e2 * (-0.32e2 * t1131 * t1309 + (-0.2e1 / 0.3e1 * t1356 + 0.2e1 / 0.3e1 * t1362) * t1337 * t1531 + t1042 * t1283 - 0.28e2 * t970 * t1305 + (-0.8e1 / 0.3e1 * t1356 + 0.8e1 / 0.3e1 * t1362) * t1093 * pkin(3) * t1233 * t1440 + t972 * t1312 + 0.4e1 * (-t1281 + t1280) * t1103 - 0.64e2 / 0.3e1 * t1270 * t1091 * t1334) * t1461 + 0.48e2 * t944 * t1306 - 0.8e1 * t945 * t1302 + 0.8e1 * (t997 * t1291 + (-pkin(3) * t1103 * t1258 - t1482 * t977) * pkin(7) * t1484 + t1488 + t1496) * t1390 + t1319 * t1565 - 0.4e1 * t1086 * t1148 * t1482 - pkin(3) * t1261 * t1336 * t1450 - 0.96e2 * t999 * t1299 - 0.96e2 * t1103 * t1257 - 0.48e2 * t962 * t1305 + 0.8e1 * t1496 * t1417 - 0.8e1 * t958 * t1340 + 0.8e1 * t1570 * t966 + (-0.32e2 * t1294 + 0.96e2 * t1286) * t960) * t1064 + t909 * t1056;
t782 = t840 + (0.1e1 / t874 * t917 * t1373 + (t1502 * t1511 * t874 + t1510 * t827 * t915) * t1224 * pkin(4) * t1237 * t1501 / t1511) / (t1501 * t950 + 0.1e1);
t1269 = t1237 * t1370 - t1539 * t1499 / 0.8e1;
t1129 = Icges(8,4) * t1181;
t1127 = V_base(6) + qJD(2);
t1083 = -rSges(2,1) * t1185 + rSges(2,2) * t1182;
t1082 = -rSges(8,1) * t1184 + rSges(8,2) * t1181;
t1081 = -rSges(2,1) * t1182 - rSges(2,2) * t1185;
t1080 = rSges(8,1) * t1181 + rSges(8,2) * t1184;
t1076 = -Icges(2,1) * t1185 + t1495;
t1075 = -Icges(2,1) * t1182 - t1494;
t1074 = -Icges(8,1) * t1184 + t1129;
t1073 = Icges(8,1) * t1181 + t1493;
t1072 = Icges(2,2) * t1182 - t1494;
t1071 = -Icges(2,2) * t1185 - t1495;
t1070 = Icges(8,2) * t1181 - t1493;
t1069 = Icges(8,2) * t1184 + t1129;
t1060 = -rSges(1,1) * V_base(5) + rSges(1,2) * V_base(4) + V_base(3);
t1059 = rSges(1,1) * V_base(6) - rSges(1,3) * V_base(4) + V_base(2);
t1058 = -rSges(1,2) * V_base(6) + rSges(1,3) * V_base(5) + V_base(1);
t1011 = V_base(5) * rSges(2,3) - t1081 * t1128 + V_base(1);
t1010 = V_base(5) * rSges(8,3) - t1082 * t1127 + V_base(1);
t1009 = -V_base(4) * rSges(2,3) + t1083 * t1128 + V_base(2);
t995 = -V_base(4) * rSges(8,3) + V_base(6) * pkin(7) + t1080 * t1127 + V_base(2);
t991 = t1081 * V_base(4) - t1083 * V_base(5) + V_base(3);
t988 = t1550 * t1284;
t987 = t1550 * t1285;
t984 = t1082 * V_base(4) + V_base(3) + (-pkin(7) - t1080) * V_base(5);
t952 = 0.1e1 / t954 ^ 2;
t951 = 0.1e1 / t953 ^ 2;
t920 = Icges(9,4) * t924;
t919 = Icges(6,4) * t922;
t906 = Icges(3,4) * t908;
t903 = rSges(9,1) * t924 - rSges(9,2) * t923;
t902 = rSges(9,1) * t923 + rSges(9,2) * t924;
t901 = Icges(9,1) * t924 - t1507;
t900 = Icges(9,1) * t923 + t920;
t899 = -Icges(9,2) * t923 + t920;
t898 = Icges(9,2) * t924 + t1507;
t895 = rSges(6,1) * t922 - rSges(6,2) * t921;
t894 = rSges(6,1) * t921 + rSges(6,2) * t922;
t893 = Icges(6,1) * t922 - t1508;
t892 = Icges(6,1) * t921 + t919;
t891 = -Icges(6,2) * t921 + t919;
t890 = Icges(6,2) * t922 + t1508;
t872 = V_base(6) + (((-t1034 * t1498 / 0.2e1 + t1233 * pkin(5) * t1401 + (t1027 * t1040 + t1472) * pkin(1)) * t1353 - t956 * t1385) / t954 + (t954 * t1385 + (-(-0.2e1 * pkin(5) * t1034 - t1027) * t1039 + t1272) * pkin(1) * t1354) * t956 * t952) * t1020 / (t952 * t956 ^ 2 + 0.1e1) * t1542;
t871 = (t930 * t1540 * t1475 + (-t929 * t951 * t1475 - (-t953 * t951 + t1540) * t1017 * t1366) * t955) / (t951 * t955 ^ 2 + 0.1e1) * t1020 * pkin(5) + t1128;
t868 = rSges(3,1) * t908 - rSges(3,2) * t907;
t867 = rSges(3,1) * t907 + rSges(3,2) * t908;
t866 = Icges(3,1) * t908 - t1509;
t865 = Icges(3,1) * t907 + t906;
t864 = -Icges(3,2) * t907 + t906;
t863 = Icges(3,2) * t908 + t1509;
t860 = -t903 * V_base(5) + (t902 - t1514) * V_base(4) + t1409;
t859 = t894 * V_base(4) - t895 * V_base(5) + V_base(3) + (t1178 * V_base(4) - t1179 * V_base(5)) * pkin(5);
t853 = V_base(5) * rSges(6,3) - t1178 * t1408 - t872 * t894 + V_base(1);
t852 = -V_base(4) * rSges(6,3) + t1179 * t1408 + t872 * t895 + V_base(2);
t851 = V_base(5) * rSges(9,3) - t871 * t902 + t1410;
t850 = -V_base(4) * rSges(9,3) + t871 * t903 + t1297;
t839 = -t868 * V_base(5) + (t867 - t1514) * V_base(4) + t1409;
t829 = V_base(5) * rSges(3,3) - t840 * t867 + t1410;
t828 = -V_base(4) * rSges(3,3) + t840 * t868 + t1297;
t824 = 0.1e1 / t826 ^ 2;
t806 = rSges(5,1) * t1335 - rSges(5,2) * t821;
t805 = rSges(5,1) * t821 + rSges(5,2) * t1335;
t804 = Icges(5,1) * t1335 - t1573;
t803 = Icges(5,1) * t821 + t1556;
t802 = -Icges(5,2) * t821 + t1556;
t801 = Icges(5,2) * t1335 + t1573;
t797 = rSges(7,1) * t1295 + rSges(7,2) * t815;
t796 = -rSges(7,1) * t815 + rSges(7,2) * t1295;
t795 = Icges(7,1) * t1295 + t1572;
t794 = -Icges(7,1) * t815 + t1555;
t793 = Icges(7,2) * t815 + t1555;
t792 = Icges(7,2) * t1295 - t1572;
t785 = (t913 * t1367 + t827 * t1313 - t1269 * t938 + (t940 * t1315 + (t1371 * t940 + t1489 * t912) * t915) * t874) * t1447;
t784 = (t827 * t1314 + t912 * t1368 + t1269 * t940 + (t938 * t1315 + (t1371 * t938 + t1489 * t913) * t915) * t874) * t1447;
t781 = (-t806 - t1525) * V_base(5) + (t805 - t1514) * V_base(4) + t1331;
t780 = -t797 * V_base(5) + (t796 - t1514) * V_base(4) + t1409;
t779 = (-t1505 * t1538 + t1541 * t812) / (t1538 * t887 ^ 2 + 0.1e1) + t840;
t770 = V_base(5) * rSges(5,3) - t782 * t805 + t1278;
t769 = -V_base(4) * rSges(5,3) + t782 * t806 + t1277;
t768 = V_base(5) * rSges(7,3) - t779 * t796 + t1410;
t767 = -V_base(4) * rSges(7,3) + t779 * t797 + t1297;
t766 = rSges(11,1) * t1569 + rSges(11,2) * t777;
t765 = -rSges(11,1) * t777 + rSges(11,2) * t1569;
t764 = Icges(11,1) * t1569 + t1580;
t763 = -Icges(11,1) * t777 + t1576;
t762 = Icges(11,2) * t777 + t1576;
t761 = Icges(11,2) * t1569 - t1580;
t758 = rSges(4,1) * t1296 + rSges(4,2) * t773;
t757 = -rSges(4,1) * t773 + rSges(4,2) * t1296;
t756 = Icges(4,1) * t1296 + t1574;
t755 = -Icges(4,1) * t773 + t1557;
t754 = Icges(4,2) * t773 + t1557;
t753 = Icges(4,2) * t1296 - t1574;
t744 = (-t758 - t1526) * V_base(5) + (t757 - t1514) * V_base(4) + t1330;
t743 = ((-t1284 * t784 - t1285 * t785 - t848 * t987 + t849 * t988) / t826 - (-t1284 * t785 + t1285 * t784 - t848 * t988 - t849 * t987) * t825 * t824) / (t824 * t825 ^ 2 + 0.1e1) + t782;
t742 = (-t1523 - t766 - t1525) * V_base(5) + (-t1514 + t765 + t1524) * V_base(4) + t1331;
t741 = rSges(10,1) * t1568 - rSges(10,2) * t748;
t740 = rSges(10,1) * t748 + rSges(10,2) * t1568;
t739 = Icges(10,1) * t1568 - t1581;
t738 = Icges(10,1) * t748 + t1577;
t737 = -Icges(10,2) * t748 + t1577;
t736 = Icges(10,2) * t1568 + t1581;
t732 = (-t1541 * t1506 / 0.4e1 + t1538 * t1491 / 0.2e1) / (0.1e1 - 0.1e1 / pkin(6) ^ 2 / t1243 * t1538 * t1500 / 0.4e1) * t1448 + t733;
t731 = V_base(5) * rSges(11,3) - t1524 * t782 - t743 * t765 + t1278;
t730 = -V_base(4) * rSges(11,3) + t1523 * t782 + t743 * t766 + t1277;
t729 = V_base(5) * rSges(4,3) - t733 * t757 + t1279;
t728 = -V_base(4) * rSges(4,3) + t733 * t758 + t1276;
t727 = (-t1521 - t741 - t1526) * V_base(5) + (-t1514 + t740 - t1522) * V_base(4) + t1330;
t726 = V_base(5) * rSges(10,3) + t1522 * t733 - t732 * t740 + t1279;
t725 = -V_base(4) * rSges(10,3) + t1521 * t733 + t732 * t741 + t1276;
t1 = Icges(1,3) * V_base(6) ^ 2 / 0.2e1 + Icges(9,3) * t871 ^ 2 / 0.2e1 + Icges(6,3) * t872 ^ 2 / 0.2e1 + Icges(2,3) * t1128 ^ 2 / 0.2e1 + Icges(5,3) * t782 ^ 2 / 0.2e1 + Icges(7,3) * t779 ^ 2 / 0.2e1 + m(3) * (t828 ^ 2 + t829 ^ 2 + t839 ^ 2) / 0.2e1 + m(4) * (t728 ^ 2 + t729 ^ 2 + t744 ^ 2) / 0.2e1 + Icges(10,3) * t732 ^ 2 / 0.2e1 + Icges(4,3) * t733 ^ 2 / 0.2e1 + Icges(8,3) * t1127 ^ 2 / 0.2e1 + m(5) * (t769 ^ 2 + t770 ^ 2 + t781 ^ 2) / 0.2e1 + Icges(3,3) * t840 ^ 2 / 0.2e1 + m(10) * (t725 ^ 2 + t726 ^ 2 + t727 ^ 2) / 0.2e1 + m(1) * (t1058 ^ 2 + t1059 ^ 2 + t1060 ^ 2) / 0.2e1 + m(7) * (t767 ^ 2 + t768 ^ 2 + t780 ^ 2) / 0.2e1 + m(11) * (t730 ^ 2 + t731 ^ 2 + t742 ^ 2) / 0.2e1 + m(8) * (t1010 ^ 2 + t984 ^ 2 + t995 ^ 2) / 0.2e1 + m(2) * (t1009 ^ 2 + t1011 ^ 2 + t991 ^ 2) / 0.2e1 + Icges(11,3) * t743 ^ 2 / 0.2e1 + (Icges(1,6) * V_base(6) + (-Icges(8,5) * t1184 + Icges(8,6) * t1181) * t1127 + (-Icges(2,5) * t1182 - Icges(2,6) * t1185) * t1128 + (Icges(10,5) * t748 + Icges(10,6) * t1568) * t732 + (-Icges(4,5) * t773 + Icges(4,6) * t1296) * t733 + (-Icges(11,5) * t777 + Icges(11,6) * t1569) * t743 + (-Icges(7,5) * t815 + Icges(7,6) * t1295) * t779 + (Icges(5,5) * t821 + Icges(5,6) * t1335) * t782 + (Icges(3,5) * t907 + Icges(3,6) * t908) * t840 + (Icges(9,5) * t923 + Icges(9,6) * t924) * t871 + (Icges(6,5) * t921 + Icges(6,6) * t922) * t872 + (t801 * t1558 + t803 * t821 / 0.2e1 + t1070 * t1517 - t1074 * t1184 / 0.2e1 + t1071 * t1515 + t1075 * t1516 + t898 * t1528 + t900 * t923 / 0.2e1 + t890 * t1529 + t892 * t921 / 0.2e1 + t753 * t1559 - t755 * t773 / 0.2e1 + t863 * t1530 + t865 * t907 / 0.2e1 + t792 * t1560 - t794 * t815 / 0.2e1 + t736 * t1579 + t738 * t748 / 0.2e1 + t761 * t1578 - t763 * t777 / 0.2e1 + Icges(1,2) / 0.2e1) * V_base(5)) * V_base(5) + m(6) * (t852 ^ 2 + t853 ^ 2 + t859 ^ 2) / 0.2e1 + m(9) * (t850 ^ 2 + t851 ^ 2 + t860 ^ 2) / 0.2e1 + (((t1071 - t1076) * t1182 + (t893 - t890) * t921 + (t891 + t892) * t922 + (t899 + t900) * t924 + (t754 + t755) * t1296 + (t802 + t803) * t1335 + (t866 - t863) * t907 + (t1074 + t1069) * t1181 + (-t1075 - t1072) * t1185 + (t901 - t898) * t923 + (t1070 - t1073) * t1184 + (t793 + t794) * t1295 + (t864 + t865) * t908 + (-t801 + t804) * t821 + (-t795 + t792) * t815 + (-t756 + t753) * t773 + (t763 + t762) * t1569 + (t738 + t737) * t1568 + (t761 - t764) * t777 + (-t736 + t739) * t748) * V_base(5) / 0.2e1 + (Icges(10,5) * t1568 - Icges(10,6) * t748) * t732 + (Icges(4,5) * t1296 + Icges(4,6) * t773) * t733 + (Icges(11,5) * t1569 + Icges(11,6) * t777) * t743 + (Icges(7,5) * t1295 + Icges(7,6) * t815) * t779 + (Icges(5,5) * t1335 - Icges(5,6) * t821) * t782 + (Icges(3,5) * t908 - Icges(3,6) * t907) * t840 + (Icges(6,5) * t922 - Icges(6,6) * t921) * t872 + (Icges(9,5) * t924 - Icges(9,6) * t923) * t871 + (Icges(8,5) * t1181 + Icges(8,6) * t1184) * t1127 + (-Icges(2,5) * t1185 + Icges(2,6) * t1182) * t1128 + Icges(1,4) * V_base(5) + Icges(1,5) * V_base(6) + (t793 * t815 / 0.2e1 + t795 * t1560 - t802 * t821 / 0.2e1 + t804 * t1558 - t737 * t748 / 0.2e1 + t739 * t1579 + t1069 * t1184 / 0.2e1 + t1073 * t1517 + t762 * t777 / 0.2e1 + t764 * t1578 + t1072 * t1182 / 0.2e1 + t1076 * t1515 - t899 * t923 / 0.2e1 + t901 * t1528 - t891 * t921 / 0.2e1 + t893 * t1529 - t864 * t907 / 0.2e1 + t866 * t1530 + t754 * t773 / 0.2e1 + t756 * t1559 + Icges(1,1) / 0.2e1) * V_base(4)) * V_base(4);
T = t1;
