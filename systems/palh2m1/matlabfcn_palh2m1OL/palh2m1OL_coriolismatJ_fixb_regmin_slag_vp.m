% Calculate minimal parameter regressor of coriolis matrix for
% palh2m1OL
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [6x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d5]';
% 
% Output:
% cmat_reg [(5*%NQJ)%x31]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2020-06-30 17:46
% Revision: b9e8aa5c608190a7b43c48aaebfd2074f0379b0d (2020-06-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = palh2m1OL_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(6,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'palh2m1OL_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'palh2m1OL_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [6 1]), ...
  'palh2m1OL_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [6x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2020-06-30 17:45:17
% EndTime: 2020-06-30 17:45:32
% DurationCPUTime: 6.43s
% Computational Cost: add. (5229->403), mult. (11315->564), div. (0->0), fcn. (13507->8), ass. (0->341)
t380 = qJD(2) + qJD(3);
t496 = qJD(4) + t380;
t281 = cos(qJ(5));
t279 = sin(qJ(3));
t280 = sin(qJ(2));
t282 = cos(qJ(3));
t283 = cos(qJ(2));
t250 = t279 * t283 + t282 * t280;
t456 = cos(qJ(4));
t246 = t456 * t250;
t249 = t279 * t280 - t282 * t283;
t278 = sin(qJ(4));
t433 = t278 * t249;
t479 = -t246 + t433;
t199 = t479 ^ 2;
t343 = t456 * t249 + t278 * t250;
t492 = -t343 ^ 2 + t199;
t494 = t492 * t281;
t498 = t494 * qJD(1);
t277 = sin(qJ(5));
t495 = t492 * t277;
t497 = t495 * qJD(1);
t493 = t492 * qJD(1);
t453 = t479 * pkin(4);
t454 = pkin(6) * t343;
t101 = t453 - t454;
t276 = t281 ^ 2;
t406 = qJD(1) * t479;
t486 = t343 * t406;
t474 = t277 ^ 2;
t342 = t474 / 0.2e1 - t276 / 0.2e1;
t82 = t342 * t479;
t75 = t82 * qJD(5);
t491 = -t276 * t486 - t75;
t489 = -t343 / 0.2e1;
t469 = t343 / 0.2e1;
t488 = t479 / 0.2e1;
t269 = t283 * pkin(2) + pkin(1);
t223 = -t249 * pkin(3) + t269;
t328 = -pkin(4) * t343 - pkin(6) * t479;
t66 = t223 + t328;
t448 = t479 * t66;
t487 = t281 * t479;
t340 = t380 * t343;
t391 = qJD(4) * t343;
t485 = t340 + t391;
t379 = -qJD(3) - qJD(4);
t345 = qJD(2) - t379;
t434 = t277 * t281;
t480 = t345 * t434;
t61 = -t82 * qJD(1) + t480;
t334 = -t246 / 0.2e1;
t478 = t334 + t433 / 0.2e1;
t484 = qJD(5) * t478;
t483 = t478 * qJD(1);
t482 = -0.2e1 * t479;
t377 = -t276 + t474;
t481 = t345 * t377;
t341 = t380 * t479;
t211 = t278 * pkin(3);
t372 = t211 * qJD(3);
t373 = t211 * qJD(4);
t366 = qJD(1) * t434;
t477 = t199 * t366 + t345 * t82;
t473 = pkin(4) / 0.2e1;
t468 = -t479 / 0.2e1;
t370 = t282 * pkin(2) + pkin(3);
t256 = t456 * t370;
t432 = t278 * t279;
t241 = pkin(2) * t432 - t256;
t234 = -pkin(4) + t241;
t466 = -t234 / 0.2e1;
t330 = t278 * t370;
t369 = t456 * t279;
t242 = pkin(2) * t369 + t330;
t235 = pkin(6) + t242;
t465 = -t235 / 0.2e1;
t464 = t242 / 0.2e1;
t239 = t246 / 0.2e1;
t368 = t456 * t282;
t248 = (t368 - t432) * pkin(2);
t463 = -t248 / 0.2e1;
t267 = pkin(6) + t211;
t462 = t267 / 0.2e1;
t376 = t456 * pkin(3);
t268 = -t376 - pkin(4);
t461 = -t268 / 0.2e1;
t460 = -t277 / 0.2e1;
t459 = t277 / 0.2e1;
t458 = -t281 / 0.2e1;
t457 = t281 / 0.2e1;
t455 = pkin(4) * t277;
t452 = t250 * pkin(3);
t451 = t280 * pkin(2);
t450 = pkin(2) * qJD(2);
t449 = pkin(2) * qJD(3);
t431 = t278 * t282;
t247 = (t369 + t431) * pkin(2);
t307 = t247 * t488 - t343 * t463;
t285 = (t234 / 0.2e1 + t461) * t343 + (t465 + t462) * t479 + t307;
t5 = t285 * t277;
t447 = t5 * qJD(1);
t348 = t241 / 0.2e1 + t466;
t291 = (t465 + t464) * t479 - t348 * t343;
t315 = pkin(4) * t469 + pkin(6) * t488;
t286 = t291 + t315;
t11 = t286 * t277;
t446 = t11 * qJD(1);
t70 = -t452 + t101;
t69 = t70 - t451;
t324 = -t343 * t69 + t448;
t16 = t324 * t277;
t445 = t16 * qJD(1);
t17 = t324 * t281;
t444 = t17 * qJD(1);
t323 = -t343 * t70 + t448;
t18 = t323 * t277;
t443 = t18 * qJD(1);
t19 = t323 * t281;
t442 = t19 * qJD(1);
t441 = t479 * t235;
t440 = t343 * t234;
t322 = -t101 * t343 + t448;
t24 = t322 * t277;
t439 = t24 * qJD(1);
t438 = t247 * t281;
t437 = t249 * t250;
t25 = t322 * t281;
t436 = t25 * qJD(1);
t435 = t277 * t479;
t84 = t277 * t343;
t91 = t281 * t343;
t349 = t489 + t469;
t41 = t377 * t349;
t428 = t41 * qJD(1);
t119 = t223 * t479;
t224 = -t451 - t452;
t51 = -t224 * t343 + t119;
t424 = t51 * qJD(1);
t120 = t223 * t343;
t52 = t224 * t479 + t120;
t423 = t52 * qJD(1);
t57 = -t343 * t452 - t119;
t420 = t57 * qJD(1);
t58 = t452 * t479 - t120;
t419 = t58 * qJD(1);
t74 = t349 * t434;
t417 = t74 * qJD(1);
t351 = t488 + t468;
t83 = t351 * t277;
t415 = t83 * qJD(1);
t414 = t84 * qJD(1);
t350 = 0.2e1 * t489;
t86 = t350 * t277;
t77 = t86 * qJD(1);
t89 = t351 * t281;
t413 = t89 * qJD(1);
t412 = t91 * qJD(1);
t93 = t350 * t281;
t80 = t93 * qJD(1);
t98 = t377 * t199;
t411 = t98 * qJD(1);
t355 = t343 * t460;
t357 = -t435 / 0.2e1;
t410 = pkin(4) * t355 + pkin(6) * t357;
t273 = pkin(4) * t458;
t353 = -t487 / 0.2e1;
t409 = pkin(6) * t353 + t273 * t343;
t233 = t242 * qJD(4);
t243 = t247 * qJD(3);
t408 = -t243 - t233;
t407 = qJD(1) * t343;
t405 = qJD(1) * t223;
t404 = qJD(1) * t269;
t403 = qJD(1) * t283;
t402 = qJD(2) * t234;
t401 = qJD(3) * t268;
t400 = qJD(3) * t269;
t399 = qJD(4) * t281;
t398 = qJD(5) * t277;
t274 = qJD(5) * t281;
t158 = t249 ^ 2 - t250 ^ 2;
t397 = t158 * qJD(1);
t185 = -t249 * t451 + t269 * t250;
t396 = t185 * qJD(1);
t186 = -t269 * t249 - t250 * t451;
t395 = t186 * qJD(1);
t197 = t239 + t334;
t393 = t197 * qJD(1);
t390 = t479 * qJD(4);
t389 = t211 * qJD(2);
t337 = -t376 / 0.2e1;
t316 = -t256 / 0.2e1 + t337;
t333 = -t368 / 0.2e1;
t213 = pkin(2) * t333 - t316;
t388 = t213 * qJD(2);
t387 = t241 * qJD(2);
t386 = t242 * qJD(2);
t385 = t247 * qJD(2);
t384 = t248 * qJD(2);
t265 = -t280 ^ 2 + t283 ^ 2;
t383 = t265 * qJD(1);
t382 = t280 * qJD(2);
t381 = t283 * qJD(2);
t375 = pkin(1) * t280 * qJD(1);
t374 = pkin(1) * t403;
t371 = t66 * t407;
t367 = t276 * t406;
t365 = t343 * t398;
t364 = t343 * t274;
t362 = t343 * t405;
t361 = t479 * t405;
t360 = t249 * t404;
t359 = t250 * t404;
t266 = t277 * t274;
t358 = t280 * t403;
t253 = t268 * t459;
t356 = t84 / 0.2e1;
t352 = t343 * t457;
t347 = t456 * qJD(3);
t346 = t456 * qJD(4);
t344 = pkin(2) * t380;
t339 = t380 * t281;
t338 = -qJD(5) + t407;
t335 = t479 * t366;
t332 = t211 / 0.2e1 + t464;
t331 = t473 + t348;
t329 = t379 * t211;
t327 = -0.2e1 * t335;
t326 = 0.2e1 * t335;
t325 = t463 + t461 + t466;
t321 = t343 * t335;
t311 = -t247 / 0.2e1 + t332;
t137 = t311 * t281;
t287 = t267 * t468 - t343 * t461 + (t278 * t488 + t456 * t469) * pkin(3);
t284 = t287 + t315;
t20 = t284 * t277;
t319 = t20 * qJD(1) - t137 * qJD(2);
t318 = t338 * t277;
t317 = t338 * t281;
t314 = -t454 / 0.2e1 + t453 / 0.2e1;
t8 = t285 * t281;
t310 = -t8 * qJD(1) - t277 * t385;
t309 = qJD(4) * t328;
t308 = t235 * t489 + t466 * t479;
t306 = -t343 * t462 + t461 * t479;
t14 = t286 * t281;
t305 = -t14 * qJD(1) - t277 * t386;
t297 = t69 / 0.2e1 + t308;
t27 = t297 * t277;
t304 = -t27 * qJD(1) - t281 * t402;
t30 = t297 * t281;
t303 = t30 * qJD(1) - t277 * t402;
t55 = -t407 * t479 + t484;
t302 = -t486 + t484;
t301 = qJD(2) * (t440 - t441);
t300 = qJD(3) * (-t267 * t479 + t268 * t343);
t299 = t337 + t473 + t461;
t298 = t101 / 0.2e1 + t314;
t296 = t70 / 0.2e1 + t306;
t295 = t485 * t479;
t125 = t325 * t277;
t34 = t296 * t281;
t294 = t34 * qJD(1) + t125 * qJD(2) - t277 * t401;
t126 = t325 * t281;
t31 = t296 * t277;
t293 = -t31 * qJD(1) + t126 * qJD(2) - t281 * t401;
t136 = t311 * t277;
t23 = t284 * t281;
t292 = -t23 * qJD(1) - t136 * qJD(2) - t277 * t372;
t131 = t331 * t277;
t210 = t299 * t277;
t40 = t298 * t281;
t290 = t40 * qJD(1) + t131 * qJD(2) + t210 * qJD(3) + qJD(4) * t455;
t132 = t331 * t281;
t212 = t299 * t281;
t37 = t298 * t277;
t289 = pkin(4) * t399 - t37 * qJD(1) + t132 * qJD(2) + t212 * qJD(3);
t288 = -t441 / 0.2e1 + t440 / 0.2e1 + t307;
t272 = -t455 / 0.2e1;
t263 = t277 * t373;
t255 = t377 * qJD(5);
t254 = t268 * t457;
t244 = t248 * qJD(3);
t232 = t241 * qJD(4);
t229 = t277 * t243;
t222 = t277 * t233;
t217 = t234 * t457;
t216 = t234 * t459;
t215 = t281 * t337 + t254 + t273;
t214 = t277 * t337 + t253 + t272;
t209 = qJD(1) * t437;
t208 = (t333 + t432) * pkin(2) + t316;
t207 = -t211 / 0.2e1 - t330 / 0.2e1 + (-t369 - t431 / 0.2e1) * pkin(2);
t206 = t380 * t250;
t205 = t380 * t249;
t193 = t197 * qJD(4);
t157 = t266 * t482;
t138 = -t438 / 0.2e1 - t332 * t281;
t135 = t247 * t459 + t332 * t277;
t134 = t241 * t457 + t217 + t273;
t133 = t241 * t459 + t216 + t272;
t130 = -t433 + 0.2e1 * t239;
t128 = t248 * t458 + t217 + t254;
t127 = t248 * t460 + t216 + t253;
t100 = t327 - t481;
t99 = t326 + t481;
t92 = -t91 / 0.2e1 + t352;
t88 = t479 * t459 + t435 / 0.2e1;
t87 = t356 + t355;
t73 = t277 * t352 + t281 * t356;
t72 = t274 + t80;
t71 = -t398 - t77;
t65 = t266 + t417;
t64 = t266 - t417;
t50 = t496 * t478;
t48 = t130 * qJD(4) - t341;
t42 = t276 * t469 - t342 * t343 + t474 * t489;
t39 = t101 * t457 - t314 * t281;
t38 = t101 * t460 + t314 * t277;
t36 = -t255 - t428;
t35 = -t255 + t428;
t33 = -t306 * t281 + t70 * t457;
t32 = t306 * t277 + t70 * t460;
t29 = -t308 * t281 + t69 * t457;
t28 = t308 * t277 + t69 * t460;
t26 = -t74 * qJD(4) + t491;
t22 = t281 * t287 + t409;
t21 = t277 * t287 + t410;
t15 = t41 * qJD(4) + t157 + 0.2e1 * t321;
t13 = t281 * t291 + t409;
t12 = t277 * t291 + t410;
t10 = -t83 * qJD(4) + t93 * qJD(5) - t498;
t9 = -t89 * qJD(4) - t86 * qJD(5) + t497;
t7 = t267 * t353 + t268 * t352 + t288 * t281;
t6 = t253 * t343 + t267 * t357 + t288 * t277;
t4 = t73 * qJD(4) - t75 + (t277 * t339 + t367) * t343;
t3 = t88 * qJD(4) + t92 * qJD(5) + t277 * t341 + t498;
t2 = qJD(4) * t487 + t87 * qJD(5) + t339 * t479 - t497;
t1 = t42 * qJD(4) - t377 * t340 + t157 - 0.2e1 * t321;
t43 = [0, 0, 0, t280 * t381, t265 * qJD(2), 0, 0, 0, -pkin(1) * t382, -pkin(1) * t381, -t380 * t437, t380 * t158, 0, 0, 0, -t185 * qJD(2) - t250 * t400, -t186 * qJD(2) + t249 * t400, t295, -t496 * t492, 0, 0, 0, t51 * qJD(2) - t57 * qJD(3) + t223 * t390, t52 * qJD(2) - t58 * qJD(3) + t223 * t391, -t199 * t266 + t276 * t295, -0.2e1 * t277 * t485 * t487 + t98 * qJD(5), t365 * t479 + t496 * t494, t364 * t479 - t496 * t495, -(t341 + t390) * t343, t17 * qJD(2) + t19 * qJD(3) + t25 * qJD(4) + t365 * t66, -t16 * qJD(2) - t18 * qJD(3) - t24 * qJD(4) + t364 * t66; 0, 0, 0, t358, t383, -t381, t382, 0, -t375, -t374, -t209, t397, t205, t206, 0, -t396, -t395, t486, -t493, t485, t48, 0, t424, t423, t4, t1, t3, t2, t55, t6 * qJD(3) + t12 * qJD(4) + t29 * qJD(5) + t277 * t301 + t444, t7 * qJD(3) + t13 * qJD(4) + t28 * qJD(5) + t281 * t301 - t445; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t209, t397, t205, t206, 0, -t359, t360, t486, -t493, t485, t48, 0, -t420, -t419, t4, t1, t3, t2, t55, t6 * qJD(2) + t21 * qJD(4) + t33 * qJD(5) + t277 * t300 + t442, t7 * qJD(2) + t22 * qJD(4) + t32 * qJD(5) + t281 * t300 - t443; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t486, -t493, t485, t130 * t380 - t390, 0, t361, t362, -t75 + t380 * t73 - (-t277 * t399 - t367) * t343, t157 + t380 * t42 - (qJD(4) * t377 + t326) * t343, t277 * t390 + t380 * t88 + t498, t281 * t390 + t380 * t487 - t497, t302, t12 * qJD(2) + t21 * qJD(3) + t39 * qJD(5) + t277 * t309 + t436, t13 * qJD(2) + t22 * qJD(3) + t38 * qJD(5) + t281 * t309 - t439; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t477, t480 * t482 + t411, t318 * t479 + t380 * t92, t317 * t479 + t380 * t87, t50, t29 * qJD(2) + t33 * qJD(3) + t39 * qJD(4) + t318 * t66, t28 * qJD(2) + t32 * qJD(3) + t38 * qJD(4) + t317 * t66; 0, 0, 0, -t358, -t383, 0, 0, 0, t375, t374, t209, -t397, 0, 0, 0, t396, t395, -t486, t493, 0, -t193, 0, -t424, -t423, t26, t15, t10, t9, -t55, t5 * qJD(3) + t11 * qJD(4) - t30 * qJD(5) - t444, t8 * qJD(3) + t14 * qJD(4) + t27 * qJD(5) + t445; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t279 * t449, -t282 * t449, 0, 0, 0, 0, 0, t408, -t244 + t232, t266, -t255, 0, 0, 0, t234 * t398 + t281 * t408, t234 * t274 + t222 + t229; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t279 * t344, -t282 * t344, 0, 0, 0, 0, 0, t207 * qJD(4) - t243 - t385, t208 * qJD(4) - t244 - t384, t266, -t255, 0, 0, 0, t138 * qJD(4) + t127 * qJD(5) - t380 * t438 + t447, t135 * qJD(4) + t128 * qJD(5) + t229 - t310; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t393, 0, t207 * qJD(3) - t233 - t386, t208 * qJD(3) + t232 + t387, t64, t35, -t415, -t413, 0, t446 + t138 * qJD(3) + t133 * qJD(5) + (-qJD(2) - qJD(4)) * t281 * t242, t135 * qJD(3) + t134 * qJD(5) + t222 - t305; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t61, t100, t72, t71, -t483, t127 * qJD(3) + t133 * qJD(4) - t235 * t274 - t303, t128 * qJD(3) + t134 * qJD(4) + t235 * t398 - t304; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t209, -t397, 0, 0, 0, t359, -t360, -t486, t493, 0, -t193, 0, t420, t419, t26, t15, t10, t9, -t55, -t5 * qJD(2) + t20 * qJD(4) - t34 * qJD(5) - t442, -t8 * qJD(2) + t23 * qJD(4) + t31 * qJD(5) + t443; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t279 * t450, t282 * t450, 0, 0, 0, 0, 0, t385 - t373, -t213 * qJD(4) + t384, t266, -t255, 0, 0, 0, -t137 * qJD(4) - t125 * qJD(5) + t281 * t385 - t447, t136 * qJD(4) - t126 * qJD(5) + t310; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t373, -pkin(3) * t346, t266, -t255, 0, 0, 0, t268 * t398 - t281 * t373, t268 * t274 + t263; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t393, 0, t329 - t389, -t388 + (-t347 - t346) * pkin(3), t64, t35, -t415, -t413, 0, t214 * qJD(5) + t281 * t329 + t319, t215 * qJD(5) + t263 - t292; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t61, t100, t72, t71, -t483, t214 * qJD(4) - t267 * t274 - t294, t215 * qJD(4) + t267 * t398 - t293; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t486, t493, 0, t380 * t197, 0, -t361, -t362, t380 * t74 + t491, -t327 * t343 - t380 * t41 + t157, -t91 * qJD(5) + t380 * t83 - t498, t84 * qJD(5) + t380 * t89 + t497, -t302, -t11 * qJD(2) - t20 * qJD(3) - t40 * qJD(5) - t436, -t14 * qJD(2) - t23 * qJD(3) + t37 * qJD(5) + t439; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t393, 0, t386 + t372, t213 * qJD(3) - t387, t65, t36, t415, t413, 0, t137 * qJD(3) - t131 * qJD(5) + t281 * t386 - t446, -t136 * qJD(3) - t132 * qJD(5) + t305; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t393, 0, t372 + t389, pkin(3) * t347 + t388, t65, t36, t415, t413, 0, -t210 * qJD(5) + t281 * t372 - t319, -t212 * qJD(5) + t292; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t266, -t255, 0, 0, 0, -pkin(4) * t398, -pkin(4) * t274; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t61, t100, t274 - t412, -t398 + t414, -t483, -pkin(6) * t274 - t290, pkin(6) * t398 - t289; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t477, 0.2e1 * t479 * t480 - t411, t91 * qJD(4) - t277 * t486 - t380 * t93, -t84 * qJD(4) - t281 * t486 + t380 * t86, t50, t30 * qJD(2) + t34 * qJD(3) + t40 * qJD(4) - t277 * t371, -t27 * qJD(2) - t31 * qJD(3) - t37 * qJD(4) - t281 * t371; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t61, t99, -t80, t77, t483, t125 * qJD(3) + t131 * qJD(4) + t303, t126 * qJD(3) + t132 * qJD(4) + t304; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t61, t99, -t80, t77, t483, t210 * qJD(4) + t294, t212 * qJD(4) + t293; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t61, t99, t412, -t414, t483, t290, t289; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t43;
