% Zeitableitung der rotatorischen Teilmatrix der geometrischen Jacobi-Matrix für beliebiges Segment von
% palh1m1DE2
% Use Code from Maple symbolic Code Generation
%
% Geometrische Jacobi-Matrix: Differentieller Zusammenhang zwischen
% Endeffektorgeschwindigkeit und Geschw. der verallgemeinerten Koordinaten.
% 
% 
% Input:
% qJ [4x1]
%   Generalized joint coordinates (joint angles)
% qJD [4x1]
%   Generalized joint velocities
% link_index [1x1 uint8]
%   Index des Segmentes, auf dem der Punkt C liegt. (0=Basis).
%   Siehe auch: bsp_3T1R_fkine_fixb_rotmat_mdh_sym_varpar.m
% pkin [23x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[AB,AM,BC,BE,BG,BL,DA,DC,EP,GH,GP,HW,ML,OT2,T1D,T2A,T2T1,phi1,phi2,phi312,phi413,phi710,phi711]';
% 
% Output:
% JgD_rot [3x4]
%   Zeitableitung der rotatorischen Teilmatrix der geometrischen Jacobi-Matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2020-04-15 19:16
% Revision: 2d0abd6fcc3afe6f578a07ad3d897ec57baa6ba1 (2020-04-13)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function JgD_rot = palh1m1DE2_jacobigD_rot_sym_varpar(qJ, qJD, link_index, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(4,1),zeros(4,1),uint8(0),zeros(23,1)}
assert(isreal(qJ) && all(size(qJ) == [4 1]), ...
  'palh1m1DE2_jacobigD_rot_sym_varpar: qJ has to be [4x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [4 1]), ...
  'palh1m1DE2_jacobigD_rot_sym_varpar: qJD has to be [4x1] (double)');
assert(isa(link_index,'uint8') && all(size(link_index) == [1 1]), ...
	'palh1m1DE2_jacobigD_rot_sym_varpar: link_index has to be [1x1] uint8');
assert(isreal(pkin) && all(size(pkin) == [23 1]), ...
  'palh1m1DE2_jacobigD_rot_sym_varpar: pkin has to be [23x1] (double)');
JgD_rot=NaN(3,4);
if link_index == 0
	%% Symbolic Calculation
	% From jacobigD_rot_0_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-15 18:49:35
	% EndTime: 2020-04-15 18:49:35
	% DurationCPUTime: 0.01s
	% Computational Cost: add. (0->0), mult. (0->0), div. (0->0), fcn. (0->0), ass. (0->1)
	t1 = [0, 0, 0, 0; 0, 0, 0, 0; 0, 0, 0, 0;];
	JgD_rot = t1;
elseif link_index == 1
	%% Symbolic Calculation
	% From jacobigD_rot_1_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-15 18:49:35
	% EndTime: 2020-04-15 18:49:35
	% DurationCPUTime: 0.01s
	% Computational Cost: add. (0->0), mult. (0->0), div. (0->0), fcn. (0->0), ass. (0->1)
	t1 = [0, 0, 0, 0; 0, 0, 0, 0; 0, 0, 0, 0;];
	JgD_rot = t1;
elseif link_index == 2
	%% Symbolic Calculation
	% From jacobigD_rot_2_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-15 18:49:35
	% EndTime: 2020-04-15 18:49:35
	% DurationCPUTime: 0.01s
	% Computational Cost: add. (0->0), mult. (2->2), div. (0->0), fcn. (2->2), ass. (0->1)
	t1 = [0, qJD(1) * cos(qJ(1)), 0, 0; 0, qJD(1) * sin(qJ(1)), 0, 0; 0, 0, 0, 0;];
	JgD_rot = t1;
elseif link_index == 3
	%% Symbolic Calculation
	% From jacobigD_rot_3_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-15 18:49:35
	% EndTime: 2020-04-15 18:49:35
	% DurationCPUTime: 0.01s
	% Computational Cost: add. (0->0), mult. (4->2), div. (0->0), fcn. (4->2), ass. (0->3)
	t29 = qJD(1) * cos(qJ(1));
	t28 = qJD(1) * sin(qJ(1));
	t1 = [0, t29, t29, 0; 0, t28, t28, 0; 0, 0, 0, 0;];
	JgD_rot = t1;
elseif link_index == 4
	%% Symbolic Calculation
	% From jacobigD_rot_4_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-15 18:50:36
	% EndTime: 2020-04-15 18:51:50
	% DurationCPUTime: 45.65s
	% Computational Cost: add. (1067500->212), mult. (1666316->434), div. (62252->14), fcn. (1041364->16), ass. (0->214)
	t508 = pkin(7) ^ 2;
	t512 = pkin(1) ^ 2;
	t502 = sin(qJ(2));
	t506 = cos(pkin(19));
	t612 = sin(pkin(19));
	t613 = cos(qJ(2));
	t531 = -t502 * t506 + t613 * t612;
	t608 = pkin(7) * t531;
	t631 = -2 * pkin(1);
	t576 = -t608 * t631 + t512;
	t486 = t508 + t576;
	t483 = 0.1e1 / t486;
	t492 = t502 * t612 + t613 * t506;
	t490 = t492 * qJD(2);
	t511 = 0.1e1 / pkin(3);
	t482 = pkin(3) ^ 2 - pkin(8) ^ 2 + t486;
	t487 = pkin(1) + t608;
	t628 = -pkin(8) - pkin(3);
	t480 = (pkin(7) - t628) * (pkin(7) + t628) + t576;
	t627 = -pkin(8) + pkin(3);
	t481 = (pkin(7) - t627) * (pkin(7) + t627) + t576;
	t594 = t481 * t480;
	t514 = sqrt(-t594);
	t590 = t492 * t514;
	t473 = -pkin(7) * t590 + t482 * t487;
	t504 = cos(qJ(3));
	t579 = t504 * t473;
	t607 = pkin(7) * t492;
	t474 = t482 * t607 + t487 * t514;
	t501 = sin(qJ(3));
	t584 = t501 * t474;
	t546 = -t579 + t584;
	t484 = 0.1e1 / t486 ^ 2;
	t629 = pkin(1) * pkin(7);
	t573 = t484 * t629;
	t526 = t546 * t573;
	t578 = t504 * t474;
	t585 = t501 * t473;
	t540 = t585 / 0.2e1 + t578 / 0.2e1;
	t544 = 0.2e1 * (t480 + t481) * t629;
	t475 = t490 * t544;
	t478 = 0.1e1 / t514;
	t619 = -t478 / 0.2e1;
	t467 = t475 * t607 * t619;
	t574 = t487 * t631;
	t558 = -t482 + t574;
	t489 = t531 * qJD(2);
	t592 = t489 * t514;
	t460 = t467 + (t558 * t490 - t592) * pkin(7);
	t583 = t504 * t460;
	t633 = t490 * t508;
	t569 = t492 * t633;
	t552 = pkin(1) * t569;
	t618 = t478 / 0.2e1;
	t562 = t487 * t618;
	t591 = t490 * t514;
	t461 = t475 * t562 - 0.2e1 * t552 + (t489 * t482 - t591) * pkin(7);
	t588 = t501 * t461;
	t436 = (t490 * t526 + (-t583 / 0.2e1 + t588 / 0.2e1 + t540 * qJD(3)) * t483) * t511;
	t538 = t579 / 0.2e1 - t584 / 0.2e1;
	t545 = t578 + t585;
	t582 = t504 * t461;
	t589 = t501 * t460;
	t437 = (t545 * t490 * t573 + (t589 / 0.2e1 + t582 / 0.2e1 + t538 * qJD(3)) * t483) * t511;
	t498 = pkin(23) + pkin(22);
	t494 = sin(t498);
	t495 = cos(t498);
	t431 = t436 * t494 - t437 * t495;
	t509 = pkin(5) ^ 2;
	t593 = t483 * t511;
	t465 = t540 * t593;
	t466 = t538 * t593;
	t454 = t465 * t495 + t466 * t494;
	t610 = pkin(4) * t454;
	t630 = -2 * pkin(5);
	t577 = -t610 * t630 + t509;
	t626 = -pkin(9) - pkin(11);
	t445 = (pkin(4) - t626) * (pkin(4) + t626) + t577;
	t625 = -pkin(9) + pkin(11);
	t446 = (pkin(4) - t625) * (pkin(4) + t625) + t577;
	t597 = t446 * t445;
	t513 = sqrt(-t597);
	t635 = t431 * t513;
	t575 = 2 * pkin(5);
	t543 = pkin(4) * (t445 + t446) * t575;
	t422 = t431 * t543;
	t510 = pkin(4) ^ 2;
	t451 = t510 + t577;
	t447 = -pkin(9) ^ 2 + pkin(11) ^ 2 + t451;
	t452 = pkin(5) + t610;
	t557 = t452 * t630 - t447;
	t439 = 0.1e1 / t513;
	t553 = t465 * t494 - t495 * t466;
	t620 = -t553 / 0.2e1;
	t566 = t439 * t620;
	t554 = t495 * t436 + t437 * t494;
	t632 = t554 * t513;
	t404 = (t422 * t566 + t557 * t431 - t632) * pkin(4);
	t559 = t553 * t510 * t630;
	t621 = t439 / 0.2e1;
	t567 = t452 * t621;
	t405 = t422 * t567 + t431 * t559 + (t447 * t554 - t635) * pkin(4);
	t448 = 0.1e1 / t451;
	t507 = 0.1e1 / pkin(11);
	t595 = t448 * t507;
	t609 = pkin(4) * t553;
	t427 = t447 * t609 + t452 * t513;
	t499 = sin(pkin(21));
	t600 = t427 * t499;
	t426 = t447 * t452 - t513 * t609;
	t500 = cos(pkin(21));
	t601 = t426 * t500;
	t421 = (-t601 / 0.2e1 + t600 / 0.2e1) * t595;
	t418 = 0.1e1 / t421 ^ 2;
	t449 = 0.1e1 / t451 ^ 2;
	t572 = pkin(4) * pkin(5) * t449;
	t525 = (t600 - t601) * t572;
	t616 = -t500 / 0.2e1;
	t617 = t499 / 0.2e1;
	t634 = ((t404 * t616 + t405 * t617) * t448 + t431 * t525) * t507 * t418;
	t417 = 0.1e1 / t421;
	t624 = -t422 / 0.2e1;
	t533 = t492 * t545;
	t476 = t492 * t544;
	t611 = pkin(1) * t508;
	t463 = t476 * t562 - 0.2e1 * t492 ^ 2 * t611 + (t482 * t531 - t590) * pkin(7);
	t580 = t504 * t463;
	t548 = t476 * t619 - t482;
	t462 = (-t531 * t514 + (t548 + t574) * t492) * pkin(7);
	t587 = t501 * t462;
	t541 = t587 / 0.2e1 + t580 / 0.2e1;
	t443 = (-t541 * t483 - t533 * t573) * t511;
	t581 = t504 * t462;
	t586 = t501 * t463;
	t539 = -t581 / 0.2e1 + t586 / 0.2e1;
	t444 = (t539 * t483 + t492 * t526) * t511;
	t433 = t443 * t495 + t444 * t494;
	t423 = t433 * t543;
	t623 = -t423 / 0.2e1;
	t432 = t553 * t543;
	t622 = -t432 / 0.2e1;
	t615 = t500 / 0.2e1;
	t614 = -t504 / 0.2e1;
	t599 = t427 * t500;
	t602 = t426 * t499;
	t524 = (t599 + t602) * t572;
	t396 = ((t404 * t617 + t405 * t615) * t448 + t431 * t524) * t507;
	t420 = (t602 / 0.2e1 + t599 / 0.2e1) * t595;
	t416 = t420 ^ 2;
	t410 = t416 * t418 + 0.1e1;
	t604 = t418 * t420;
	t605 = t417 * t634;
	t606 = 0.2e1 * (t396 * t604 - t416 * t605) / t410 ^ 2;
	t603 = t422 * t439 / t597;
	t598 = t431 * t510;
	t596 = t448 * t500;
	t503 = sin(qJ(1));
	t496 = qJD(1) * t503;
	t505 = cos(qJ(1));
	t497 = qJD(1) * t505;
	t571 = t509 * t598;
	t570 = t478 / t594 * t476 * t475;
	t568 = t603 / 0.4e1;
	t565 = t448 * t617;
	t564 = -t596 / 0.2e1;
	t563 = t596 / 0.2e1;
	t561 = t510 * t575;
	t560 = 0.4e1 * pkin(5) * t598;
	t408 = 0.1e1 / t410;
	t556 = t408 * t572;
	t555 = -0.8e1 * t571;
	t551 = t448 * t449 * t571;
	t550 = t512 * t569;
	t549 = -t553 * t603 / 0.4e1;
	t547 = t500 * t551;
	t542 = 0.4e1 * t499 * t551;
	t537 = -0.4e1 * t426 * t547;
	t536 = 0.4e1 * t427 * t547;
	t535 = t433 * t542;
	t534 = t553 * t542;
	t532 = -t408 * t634 - t417 * t606;
	t434 = -t443 * t494 + t444 * t495;
	t406 = (t423 * t566 + t557 * t433 - t434 * t513) * pkin(4);
	t472 = t489 * t544 - 0.8e1 * t550;
	t441 = t467 + (t570 / 0.4e1 + t472 * t618) * t487 + (-0.4e1 * t489 * t492 - 0.2e1 * t490 * t531) * t611 + (t548 * t490 - t592) * pkin(7);
	t442 = 0.4e1 * t552 + (t591 - t492 * t570 / 0.4e1 + t558 * t489 + (-t531 * t475 / 0.2e1 - t489 * t476 / 0.2e1 - t492 * t472 / 0.2e1) * t478) * pkin(7);
	t485 = t483 * t484;
	t424 = (0.4e1 * t546 * t485 * t550 + (t442 * t614 + t501 * t441 / 0.2e1 + t541 * qJD(3)) * t483 + ((-t581 + t586) * t490 + t546 * t489 + (t545 * qJD(3) - t583 + t588) * t492) * t573) * t511;
	t425 = (-0.4e1 * t512 * t485 * t533 * t633 + (-t501 * t442 / 0.2e1 + t441 * t614 + t539 * qJD(3)) * t483 + ((-t580 - t587) * t490 - t545 * t489 + (t546 * qJD(3) - t582 - t589) * t492) * t573) * t511;
	t412 = t424 * t494 + t425 * t495;
	t530 = t404 * t433 + t406 * t431 + t412 * t426;
	t414 = (t432 * t566 - t454 * t513 + t553 * t557) * pkin(4);
	t529 = t404 * t553 + t414 * t431 + t426 * t554;
	t407 = t423 * t567 + t433 * t559 + (-t433 * t513 + t434 * t447) * pkin(4);
	t528 = t405 * t433 + t407 * t431 + t412 * t427;
	t415 = t432 * t567 + t553 * t559 + (t447 * t454 - t513 * t553) * pkin(4);
	t527 = t405 * t553 + t415 * t431 + t427 * t554;
	t523 = t604 * t606 + (-t396 * t418 + 0.2e1 * t420 * t605) * t408;
	t413 = t543 * t554 + t553 * t555;
	t411 = t424 * t495 - t425 * t494;
	t403 = ((t414 * t616 + t415 * t617) * t448 + t553 * t525) * t507;
	t402 = ((t414 * t617 + t415 * t615) * t448 + t553 * t524) * t507;
	t401 = t412 * t543 + t433 * t555;
	t400 = ((t406 * t616 + t407 * t617) * t448 + t433 * t525) * t507;
	t399 = ((t406 * t617 + t407 * t615) * t448 + t433 * t524) * t507;
	t398 = t553 * t560 + (t635 + t432 * t549 + t557 * t554 + (t413 * t620 + t454 * t624 + t554 * t622) * t439) * pkin(4);
	t395 = (t413 * t621 + t432 * t568) * t452 + (-t431 * t454 - 0.2e1 * t553 * t554) * t561 + (-t632 - t431 * t447 + (t431 * t622 + t553 * t624) * t439) * pkin(4);
	t394 = t433 * t560 + (-t411 * t513 + t423 * t549 + t557 * t412 + (t401 * t620 + t434 * t624 + t554 * t623) * t439) * pkin(4);
	t393 = (t401 * t621 + t423 * t568) * t452 + (-t412 * t553 - t431 * t434 - t433 * t554) * t561 + (t411 * t447 - t412 * t513 + (t431 * t623 + t433 * t624) * t439) * pkin(4);
	t392 = (t402 * t417 - t403 * t604) * t408;
	t390 = (t399 * t417 - t400 * t604) * t408;
	t389 = t532 * t402 + t523 * t403 + (((t395 * t563 + t398 * t565 + t426 * t534 + t536 * t553) * t417 - (t395 * t565 + t398 * t564 + t427 * t534 + t537 * t553) * t604) * t408 + ((t417 * t527 + t529 * t604) * t500 + (t417 * t529 - t527 * t604) * t499) * t556) * t507;
	t388 = t532 * t399 + t523 * t400 + (((t393 * t563 + t394 * t565 + t426 * t535 + t433 * t536) * t417 - (t393 * t565 + t394 * t564 + t427 * t535 + t433 * t537) * t604) * t408 + ((t528 * t417 + t530 * t604) * t500 + (t417 * t530 - t528 * t604) * t499) * t556) * t507;
	t1 = [0, t388 * t503 + t390 * t497 + t497, t389 * t503 + t392 * t497 + t497, 0; 0, -t388 * t505 + t390 * t496 + t496, -t389 * t505 + t392 * t496 + t496, 0; 0, 0, 0, 0;];
	JgD_rot = t1;
elseif link_index == 5
	%% Symbolic Calculation
	% From jacobigD_rot_5_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-15 18:52:15
	% EndTime: 2020-04-15 18:53:45
	% DurationCPUTime: 49.98s
	% Computational Cost: add. (1168658->219), mult. (1823339->443), div. (68682->14), fcn. (1139268->19), ass. (0->219)
	t708 = pkin(7) ^ 2;
	t712 = pkin(1) ^ 2;
	t702 = sin(qJ(2));
	t706 = cos(pkin(19));
	t813 = sin(pkin(19));
	t814 = cos(qJ(2));
	t731 = -t702 * t706 + t814 * t813;
	t809 = pkin(7) * t731;
	t832 = -2 * pkin(1);
	t776 = -t809 * t832 + t712;
	t686 = t708 + t776;
	t683 = 0.1e1 / t686;
	t692 = t702 * t813 + t814 * t706;
	t690 = t692 * qJD(2);
	t711 = 0.1e1 / pkin(3);
	t682 = pkin(3) ^ 2 - pkin(8) ^ 2 + t686;
	t687 = pkin(1) + t809;
	t829 = -pkin(8) - pkin(3);
	t680 = (pkin(7) - t829) * (pkin(7) + t829) + t776;
	t828 = -pkin(8) + pkin(3);
	t681 = (pkin(7) - t828) * (pkin(7) + t828) + t776;
	t794 = t681 * t680;
	t714 = sqrt(-t794);
	t790 = t692 * t714;
	t673 = -pkin(7) * t790 + t682 * t687;
	t704 = cos(qJ(3));
	t779 = t704 * t673;
	t808 = pkin(7) * t692;
	t674 = t682 * t808 + t687 * t714;
	t701 = sin(qJ(3));
	t784 = t701 * t674;
	t746 = -t779 + t784;
	t684 = 0.1e1 / t686 ^ 2;
	t830 = pkin(1) * pkin(7);
	t773 = t684 * t830;
	t726 = t746 * t773;
	t778 = t704 * t674;
	t785 = t701 * t673;
	t740 = t785 / 0.2e1 + t778 / 0.2e1;
	t744 = 0.2e1 * (t680 + t681) * t830;
	t675 = t690 * t744;
	t678 = 0.1e1 / t714;
	t820 = -t678 / 0.2e1;
	t667 = t675 * t808 * t820;
	t774 = t687 * t832;
	t758 = -t682 + t774;
	t689 = t731 * qJD(2);
	t792 = t689 * t714;
	t660 = t667 + (t758 * t690 - t792) * pkin(7);
	t783 = t704 * t660;
	t834 = t690 * t708;
	t769 = t692 * t834;
	t752 = pkin(1) * t769;
	t819 = t678 / 0.2e1;
	t762 = t687 * t819;
	t791 = t690 * t714;
	t661 = t675 * t762 - 0.2e1 * t752 + (t689 * t682 - t791) * pkin(7);
	t788 = t701 * t661;
	t636 = (t690 * t726 + (-t783 / 0.2e1 + t788 / 0.2e1 + t740 * qJD(3)) * t683) * t711;
	t738 = t779 / 0.2e1 - t784 / 0.2e1;
	t745 = t778 + t785;
	t782 = t704 * t661;
	t789 = t701 * t660;
	t637 = (t745 * t690 * t773 + (t789 / 0.2e1 + t782 / 0.2e1 + t738 * qJD(3)) * t683) * t711;
	t698 = pkin(23) + pkin(22);
	t694 = sin(t698);
	t695 = cos(t698);
	t631 = t636 * t694 - t637 * t695;
	t709 = pkin(5) ^ 2;
	t793 = t683 * t711;
	t665 = t740 * t793;
	t666 = t738 * t793;
	t654 = t665 * t695 + t666 * t694;
	t811 = pkin(4) * t654;
	t831 = -2 * pkin(5);
	t777 = -t811 * t831 + t709;
	t827 = -pkin(9) - pkin(11);
	t645 = (pkin(4) - t827) * (pkin(4) + t827) + t777;
	t826 = -pkin(9) + pkin(11);
	t646 = (pkin(4) - t826) * (pkin(4) + t826) + t777;
	t797 = t646 * t645;
	t713 = sqrt(-t797);
	t836 = t631 * t713;
	t775 = 2 * pkin(5);
	t743 = pkin(4) * (t645 + t646) * t775;
	t622 = t631 * t743;
	t710 = pkin(4) ^ 2;
	t651 = t710 + t777;
	t647 = -pkin(9) ^ 2 + pkin(11) ^ 2 + t651;
	t652 = pkin(5) + t811;
	t757 = t652 * t831 - t647;
	t639 = 0.1e1 / t713;
	t753 = t665 * t694 - t695 * t666;
	t821 = -t753 / 0.2e1;
	t766 = t639 * t821;
	t754 = t695 * t636 + t637 * t694;
	t833 = t754 * t713;
	t601 = (t622 * t766 + t631 * t757 - t833) * pkin(4);
	t759 = t710 * t753 * t831;
	t822 = t639 / 0.2e1;
	t767 = t652 * t822;
	t602 = t622 * t767 + t631 * t759 + (t647 * t754 - t836) * pkin(4);
	t648 = 0.1e1 / t651;
	t707 = 0.1e1 / pkin(11);
	t649 = 0.1e1 / t651 ^ 2;
	t772 = pkin(4) * pkin(5) * t649;
	t810 = pkin(4) * t753;
	t627 = t647 * t810 + t652 * t713;
	t699 = sin(pkin(21));
	t800 = t627 * t699;
	t626 = t647 * t652 - t713 * t810;
	t700 = cos(pkin(21));
	t801 = t626 * t700;
	t725 = (t800 - t801) * t772;
	t817 = -t700 / 0.2e1;
	t818 = t699 / 0.2e1;
	t594 = ((t601 * t817 + t602 * t818) * t648 + t631 * t725) * t707;
	t795 = t648 * t707;
	t621 = (-t801 / 0.2e1 + t800 / 0.2e1) * t795;
	t618 = 0.1e1 / t621 ^ 2;
	t835 = t594 * t618;
	t617 = 0.1e1 / t621;
	t825 = -t622 / 0.2e1;
	t733 = t745 * t692;
	t676 = t692 * t744;
	t812 = pkin(1) * t708;
	t663 = t676 * t762 - 0.2e1 * t692 ^ 2 * t812 + (t682 * t731 - t790) * pkin(7);
	t780 = t704 * t663;
	t748 = t676 * t820 - t682;
	t662 = (-t731 * t714 + (t748 + t774) * t692) * pkin(7);
	t787 = t701 * t662;
	t741 = t787 / 0.2e1 + t780 / 0.2e1;
	t643 = (-t741 * t683 - t733 * t773) * t711;
	t781 = t704 * t662;
	t786 = t701 * t663;
	t739 = -t781 / 0.2e1 + t786 / 0.2e1;
	t644 = (t739 * t683 + t692 * t726) * t711;
	t633 = t643 * t695 + t644 * t694;
	t623 = t633 * t743;
	t824 = -t623 / 0.2e1;
	t632 = t753 * t743;
	t823 = -t632 / 0.2e1;
	t816 = t700 / 0.2e1;
	t815 = -t704 / 0.2e1;
	t799 = t627 * t700;
	t802 = t626 * t699;
	t724 = (t799 + t802) * t772;
	t593 = ((t601 * t818 + t602 * t816) * t648 + t631 * t724) * t707;
	t620 = (t802 / 0.2e1 + t799 / 0.2e1) * t795;
	t616 = t620 ^ 2;
	t610 = t616 * t618 + 0.1e1;
	t608 = 0.1e1 / t610;
	t804 = t618 * t620;
	t586 = qJD(2) + qJD(3) + (t593 * t617 - t594 * t804) * t608;
	t607 = qJ(2) + qJ(3) + atan2(t620, t621);
	t807 = t586 * cos(t607);
	t805 = t617 * t835;
	t806 = 0.2e1 * (t593 * t804 - t616 * t805) / t610 ^ 2;
	t803 = t622 * t639 / t797;
	t798 = t631 * t710;
	t796 = t648 * t700;
	t703 = sin(qJ(1));
	t696 = qJD(1) * t703;
	t705 = cos(qJ(1));
	t697 = qJD(1) * t705;
	t771 = t709 * t798;
	t770 = t678 / t794 * t676 * t675;
	t768 = t803 / 0.4e1;
	t765 = t648 * t818;
	t764 = -t796 / 0.2e1;
	t763 = t796 / 0.2e1;
	t761 = t710 * t775;
	t760 = 0.4e1 * pkin(5) * t798;
	t756 = t608 * t772;
	t755 = -0.8e1 * t771;
	t751 = t648 * t649 * t771;
	t750 = t712 * t769;
	t749 = -t753 * t803 / 0.4e1;
	t747 = t700 * t751;
	t742 = 0.4e1 * t699 * t751;
	t737 = -0.4e1 * t626 * t747;
	t736 = 0.4e1 * t627 * t747;
	t735 = t633 * t742;
	t734 = t753 * t742;
	t732 = -t608 * t835 - t617 * t806;
	t634 = -t643 * t694 + t644 * t695;
	t603 = (t623 * t766 + t633 * t757 - t634 * t713) * pkin(4);
	t672 = t689 * t744 - 0.8e1 * t750;
	t641 = t667 + (t770 / 0.4e1 + t672 * t819) * t687 + (-0.4e1 * t689 * t692 - 0.2e1 * t690 * t731) * t812 + (t748 * t690 - t792) * pkin(7);
	t642 = 0.4e1 * t752 + (t791 - t692 * t770 / 0.4e1 + t758 * t689 + (-t731 * t675 / 0.2e1 - t689 * t676 / 0.2e1 - t692 * t672 / 0.2e1) * t678) * pkin(7);
	t685 = t683 * t684;
	t624 = (0.4e1 * t746 * t685 * t750 + (t642 * t815 + t701 * t641 / 0.2e1 + t741 * qJD(3)) * t683 + ((-t781 + t786) * t690 + t746 * t689 + (t745 * qJD(3) - t783 + t788) * t692) * t773) * t711;
	t625 = (-0.4e1 * t712 * t685 * t733 * t834 + (-t701 * t642 / 0.2e1 + t641 * t815 + t739 * qJD(3)) * t683 + ((-t780 - t787) * t690 - t745 * t689 + (t746 * qJD(3) - t782 - t789) * t692) * t773) * t711;
	t612 = t624 * t694 + t625 * t695;
	t730 = t601 * t633 + t603 * t631 + t612 * t626;
	t614 = (t632 * t766 - t654 * t713 + t753 * t757) * pkin(4);
	t729 = t601 * t753 + t614 * t631 + t626 * t754;
	t604 = t623 * t767 + t633 * t759 + (-t633 * t713 + t634 * t647) * pkin(4);
	t728 = t602 * t633 + t604 * t631 + t612 * t627;
	t615 = t632 * t767 + t753 * t759 + (t647 * t654 - t713 * t753) * pkin(4);
	t727 = t602 * t753 + t615 * t631 + t627 * t754;
	t723 = t804 * t806 + (-t593 * t618 + 0.2e1 * t620 * t805) * t608;
	t613 = t743 * t754 + t753 * t755;
	t611 = t624 * t695 - t625 * t694;
	t605 = sin(t607);
	t600 = ((t614 * t817 + t615 * t818) * t648 + t753 * t725) * t707;
	t599 = ((t614 * t818 + t615 * t816) * t648 + t753 * t724) * t707;
	t598 = t612 * t743 + t633 * t755;
	t597 = ((t603 * t817 + t604 * t818) * t648 + t633 * t725) * t707;
	t596 = ((t603 * t818 + t604 * t816) * t648 + t633 * t724) * t707;
	t595 = t753 * t760 + (t836 + t632 * t749 + t757 * t754 + (t613 * t821 + t654 * t825 + t754 * t823) * t639) * pkin(4);
	t592 = (t613 * t822 + t632 * t768) * t652 + (-t631 * t654 - 0.2e1 * t753 * t754) * t761 + (-t833 - t631 * t647 + (t631 * t823 + t753 * t825) * t639) * pkin(4);
	t591 = t633 * t760 + (-t611 * t713 + t623 * t749 + t757 * t612 + (t598 * t821 + t634 * t825 + t754 * t824) * t639) * pkin(4);
	t590 = (t598 * t822 + t623 * t768) * t652 + (-t612 * t753 - t631 * t634 - t633 * t754) * t761 + (t611 * t647 - t612 * t713 + (t631 * t824 + t633 * t825) * t639) * pkin(4);
	t589 = (t599 * t617 - t600 * t804) * t608;
	t587 = (t596 * t617 - t597 * t804) * t608;
	t585 = t732 * t599 + t723 * t600 + (((t592 * t763 + t595 * t765 + t626 * t734 + t736 * t753) * t617 - (t592 * t765 + t595 * t764 + t627 * t734 + t737 * t753) * t804) * t608 + ((t617 * t727 + t729 * t804) * t700 + (t617 * t729 - t727 * t804) * t699) * t756) * t707;
	t584 = t732 * t596 + t723 * t597 + (((t590 * t763 + t591 * t765 + t626 * t735 + t633 * t736) * t617 - (t590 * t765 + t591 * t764 + t627 * t735 + t633 * t737) * t804) * t608 + ((t617 * t728 + t730 * t804) * t700 + (t617 * t730 - t728 * t804) * t699) * t756) * t707;
	t1 = [0, t584 * t703 + t587 * t697 + t697, t585 * t703 + t589 * t697 + t697, -t605 * t696 + t705 * t807; 0, -t584 * t705 + t587 * t696 + t696, -t585 * t705 + t589 * t696 + t696, t605 * t697 + t703 * t807; 0, 0, 0, t586 * t605;];
	JgD_rot = t1;
elseif link_index == 6
	%% Symbolic Calculation
	% From jacobigD_rot_6_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-15 18:49:39
	% EndTime: 2020-04-15 18:49:43
	% DurationCPUTime: 1.12s
	% Computational Cost: add. (12594->80), mult. (20244->170), div. (678->9), fcn. (12648->10), ass. (0->93)
	t275 = 2 * pkin(7);
	t210 = sin(qJ(2));
	t214 = cos(pkin(19));
	t263 = sin(pkin(19));
	t264 = cos(qJ(2));
	t208 = t210 * t263 + t264 * t214;
	t261 = pkin(1) * t208;
	t206 = t208 * qJD(2);
	t219 = pkin(1) ^ 2;
	t230 = -t210 * t214 + t264 * t263;
	t262 = pkin(1) * t230;
	t245 = t262 * t275 + t219;
	t269 = (-pkin(8) - pkin(3));
	t196 = ((pkin(7) - t269) * (pkin(7) + t269)) + t245;
	t268 = (-pkin(8) + pkin(3));
	t197 = ((pkin(7) - t268) * (pkin(7) + t268)) + t245;
	t270 = pkin(1) * pkin(7);
	t236 = (t196 + t197) * t270;
	t191 = t206 * t236;
	t254 = t197 * t196;
	t220 = sqrt(-t254);
	t194 = 0.1e1 / t220;
	t273 = t191 * t194;
	t187 = t261 * t273;
	t218 = pkin(7) ^ 2;
	t202 = t218 + t245;
	t198 = -pkin(3) ^ 2 + pkin(8) ^ 2 + t202;
	t203 = -pkin(7) - t262;
	t243 = t203 * t275;
	t239 = -t198 + t243;
	t205 = t230 * qJD(2);
	t252 = t205 * t220;
	t177 = -t187 + (t239 * t206 - t252) * pkin(1);
	t241 = t219 * t208 * t206;
	t237 = pkin(7) * t241;
	t251 = t206 * t220;
	t255 = t194 * t203;
	t178 = -t191 * t255 - 0.2e1 * t237 + (t205 * t198 - t251) * pkin(1);
	t250 = t208 * t220;
	t189 = -pkin(1) * t250 - t203 * t198;
	t215 = cos(pkin(18));
	t247 = t215 * t189;
	t190 = t198 * t261 - t203 * t220;
	t212 = sin(pkin(18));
	t249 = t212 * t190;
	t199 = 0.1e1 / t202;
	t217 = 0.1e1 / pkin(8);
	t253 = t199 * t217;
	t185 = (t247 / 0.2e1 - t249 / 0.2e1) * t253;
	t182 = 0.1e1 / t185 ^ 2;
	t200 = 0.1e1 / t202 ^ 2;
	t242 = t200 * t270;
	t227 = (t247 - t249) * t242;
	t265 = t215 / 0.2e1;
	t267 = -t212 / 0.2e1;
	t274 = ((t177 * t265 + t178 * t267) * t199 + t206 * t227) * t217 * t182;
	t192 = t208 * t236;
	t272 = t194 * t192;
	t235 = t218 * t241;
	t271 = -t194 * (t205 * t236 - 0.4e1 * t235) - 0.1e1 / t254 * t191 * t272;
	t181 = 0.1e1 / t185;
	t266 = t212 / 0.2e1;
	t260 = t219 * pkin(7);
	t246 = t215 * t190;
	t256 = t189 * t212;
	t226 = (t246 + t256) * t242;
	t169 = ((t177 * t266 + t178 * t265) * t199 + t206 * t226) * t217;
	t186 = (t246 / 0.2e1 + t256 / 0.2e1) * t253;
	t184 = t186 ^ 2;
	t176 = t184 * t182 + 0.1e1;
	t257 = t182 * t186;
	t258 = t181 * t274;
	t259 = (t169 * t257 - t184 * t258) / t176 ^ 2;
	t248 = t212 * t199;
	t238 = -t198 - t272;
	t179 = (-t230 * t220 + (t238 + t243) * t208) * pkin(1);
	t180 = -t192 * t255 - 0.2e1 * t208 ^ 2 * t260 + (t198 * t230 - t250) * pkin(1);
	t172 = ((t179 * t265 + t180 * t267) * t199 + t208 * t227) * t217;
	t173 = ((t179 * t266 + t180 * t265) * t199 + t208 * t226) * t217;
	t174 = 0.1e1 / t176;
	t244 = qJD(1) * (-t172 * t257 + t173 * t181) * t174;
	t240 = t199 * t265;
	t234 = t199 * t200 * t235;
	t232 = t212 * t234;
	t231 = 0.4e1 * t215 * t234;
	t229 = t177 * t208 + t179 * t206 + t189 * t205;
	t228 = t178 * t208 + t180 * t206 + t190 * t205;
	t213 = cos(qJ(1));
	t211 = sin(qJ(1));
	t171 = 0.4e1 * t237 + (-t230 * t273 + t251 + t271 * t208 + (t239 - t272) * t205) * pkin(1);
	t170 = -t187 + t271 * t203 + (-0.4e1 * t205 * t208 - 0.2e1 * t206 * t230) * t260 + (t238 * t206 - t252) * pkin(1);
	t165 = (-t174 * t274 - 0.2e1 * t181 * t259) * t173 + (0.2e1 * t257 * t259 + (-t169 * t182 + 0.2e1 * t186 * t258) * t174) * t172 + ((t170 * t240 + t190 * t231 + t171 * t248 / 0.2e1 + 0.4e1 * t189 * t232) * t181 - (t171 * t240 + t189 * t231 - t170 * t248 / 0.2e1 - 0.4e1 * t190 * t232) * t257 + ((t228 * t181 - t229 * t257) * t215 + (t229 * t181 + t228 * t257) * t212) * t242) * t174 * t217;
	t1 = [0, t165 * t211 + t213 * t244, 0, 0; 0, -t165 * t213 + t211 * t244, 0, 0; 0, 0, 0, 0;];
	JgD_rot = t1;
elseif link_index == 7
	%% Symbolic Calculation
	% From jacobigD_rot_7_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-15 18:49:38
	% EndTime: 2020-04-15 18:49:42
	% DurationCPUTime: 1.12s
	% Computational Cost: add. (12596->81), mult. (20246->170), div. (678->9), fcn. (12650->10), ass. (0->93)
	t217 = sin(qJ(2));
	t220 = cos(pkin(19));
	t268 = sin(pkin(19));
	t269 = cos(qJ(2));
	t213 = t217 * t268 + t269 * t220;
	t266 = pkin(7) * t213;
	t211 = t213 * qJD(2);
	t224 = pkin(1) ^ 2;
	t235 = -t217 * t220 + t269 * t268;
	t267 = pkin(7) * t235;
	t276 = -2 * pkin(1);
	t250 = -t267 * t276 + t224;
	t274 = -pkin(8) - pkin(3);
	t201 = (pkin(7) - t274) * (pkin(7) + t274) + t250;
	t273 = -pkin(8) + pkin(3);
	t202 = (pkin(7) - t273) * (pkin(7) + t273) + t250;
	t275 = pkin(1) * pkin(7);
	t241 = (t201 + t202) * t275;
	t196 = t211 * t241;
	t259 = t202 * t201;
	t225 = sqrt(-t259);
	t199 = 0.1e1 / t225;
	t279 = t196 * t199;
	t192 = t266 * t279;
	t222 = pkin(7) ^ 2;
	t207 = t222 + t250;
	t203 = pkin(3) ^ 2 - pkin(8) ^ 2 + t207;
	t208 = pkin(1) + t267;
	t249 = t208 * t276;
	t244 = -t203 + t249;
	t210 = t235 * qJD(2);
	t257 = t210 * t225;
	t182 = -t192 + (t244 * t211 - t257) * pkin(7);
	t247 = t222 * t213 * t211;
	t242 = pkin(1) * t247;
	t256 = t211 * t225;
	t260 = t199 * t208;
	t183 = t196 * t260 - 0.2e1 * t242 + (t210 * t203 - t256) * pkin(7);
	t255 = t213 * t225;
	t194 = -pkin(7) * t255 + t208 * t203;
	t216 = cos(pkin(23));
	t253 = t216 * t194;
	t195 = t203 * t266 + t208 * t225;
	t215 = sin(pkin(23));
	t254 = t215 * t195;
	t204 = 0.1e1 / t207;
	t223 = 0.1e1 / pkin(3);
	t258 = t204 * t223;
	t190 = (-t253 / 0.2e1 + t254 / 0.2e1) * t258;
	t187 = 0.1e1 / t190 ^ 2;
	t205 = 0.1e1 / t207 ^ 2;
	t248 = t205 * t275;
	t232 = (-t253 + t254) * t248;
	t271 = -t216 / 0.2e1;
	t272 = t215 / 0.2e1;
	t280 = ((t182 * t271 + t183 * t272) * t204 + t211 * t232) * t223 * t187;
	t197 = t213 * t241;
	t278 = t199 * t197;
	t239 = t224 * t247;
	t277 = 0.1e1 / t259 * t196 * t278 + t199 * (t210 * t241 - 0.4e1 * t239);
	t186 = 0.1e1 / t190;
	t270 = t216 / 0.2e1;
	t265 = t222 * pkin(1);
	t252 = t216 * t195;
	t261 = t194 * t215;
	t231 = (t252 + t261) * t248;
	t174 = ((t182 * t272 + t183 * t270) * t204 + t211 * t231) * t223;
	t191 = (t252 / 0.2e1 + t261 / 0.2e1) * t258;
	t189 = t191 ^ 2;
	t181 = t189 * t187 + 0.1e1;
	t262 = t187 * t191;
	t263 = t186 * t280;
	t264 = (t174 * t262 - t189 * t263) / t181 ^ 2;
	t251 = t216 * t204;
	t246 = t204 * t272;
	t243 = -t203 - t278;
	t184 = (-t235 * t225 + (t243 + t249) * t213) * pkin(7);
	t185 = t197 * t260 - 0.2e1 * t213 ^ 2 * t265 + (t203 * t235 - t255) * pkin(7);
	t177 = ((t184 * t271 + t185 * t272) * t204 + t213 * t232) * t223;
	t178 = ((t184 * t272 + t185 * t270) * t204 + t213 * t231) * t223;
	t179 = 0.1e1 / t181;
	t245 = qJD(1) * ((-t177 * t262 + t178 * t186) * t179 + 0.1e1);
	t238 = t204 * t205 * t239;
	t237 = t216 * t238;
	t236 = 0.4e1 * t215 * t238;
	t234 = t182 * t213 + t184 * t211 + t194 * t210;
	t233 = t183 * t213 + t185 * t211 + t195 * t210;
	t219 = cos(qJ(1));
	t218 = sin(qJ(1));
	t176 = 0.4e1 * t242 + (-t235 * t279 + t256 - t277 * t213 + (t244 - t278) * t210) * pkin(7);
	t175 = -t192 + t277 * t208 + (-0.4e1 * t210 * t213 - 0.2e1 * t211 * t235) * t265 + (t243 * t211 - t257) * pkin(7);
	t170 = (-t179 * t280 - 0.2e1 * t186 * t264) * t178 + (0.2e1 * t262 * t264 + (-t174 * t187 + 0.2e1 * t191 * t263) * t179) * t177 + ((t175 * t251 / 0.2e1 + 0.4e1 * t195 * t237 + t176 * t246 + t194 * t236) * t186 - (-t176 * t251 / 0.2e1 - 0.4e1 * t194 * t237 + t175 * t246 + t195 * t236) * t262 + ((t233 * t186 + t234 * t262) * t216 + (t234 * t186 - t233 * t262) * t215) * t248) * t179 * t223;
	t1 = [0, t170 * t218 + t219 * t245, 0, 0; 0, -t170 * t219 + t218 * t245, 0, 0; 0, 0, 0, 0;];
	JgD_rot = t1;
elseif link_index == 8
	%% Symbolic Calculation
	% From jacobigD_rot_8_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-15 18:49:37
	% EndTime: 2020-04-15 18:49:40
	% DurationCPUTime: 0.92s
	% Computational Cost: add. (6352->66), mult. (9880->147), div. (186->9), fcn. (6154->8), ass. (0->79)
	t181 = (pkin(1) ^ 2);
	t233 = -4 * t181;
	t179 = pkin(6) ^ 2;
	t174 = cos(pkin(20));
	t176 = cos(qJ(3));
	t216 = sin(pkin(20));
	t223 = sin(qJ(3));
	t171 = t174 * t223 + t176 * t216;
	t219 = pkin(6) * t171;
	t228 = 2 * pkin(1);
	t205 = t219 * t228 + t179;
	t166 = t181 + t205;
	t164 = 0.1e1 / t166 ^ 2;
	t221 = pkin(1) * t164;
	t172 = -t176 * t174 + t223 * t216;
	t170 = t172 * qJD(3);
	t227 = pkin(1) * pkin(6);
	t202 = t170 * t227;
	t226 = (-pkin(2) - pkin(13));
	t160 = ((pkin(1) - t226) * (pkin(1) + t226)) + t205;
	t225 = (-pkin(2) + pkin(13));
	t161 = ((pkin(1) - t225) * (pkin(1) + t225)) + t205;
	t206 = t160 + t161;
	t155 = t206 * t202;
	t211 = t161 * t160;
	t182 = sqrt(-t211);
	t158 = 0.1e1 / t182;
	t232 = t155 * t158;
	t193 = t206 * t227;
	t156 = t172 * t193;
	t230 = t158 * t156;
	t169 = t171 * qJD(3);
	t209 = t172 * t179;
	t197 = t170 * t209;
	t229 = -t158 * (t169 * t193 + t197 * t233) - 0.1e1 / t211 * t155 * t230;
	t162 = pkin(2) ^ 2 - pkin(13) ^ 2 + t166;
	t167 = -pkin(1) - t219;
	t208 = t172 * t182;
	t153 = -pkin(6) * t208 - t162 * t167;
	t149 = 0.1e1 / t153;
	t163 = 0.1e1 / t166;
	t150 = 0.1e1 / t153 ^ 2;
	t224 = t163 / 0.2e1;
	t222 = pkin(1) * t163;
	t220 = pkin(2) * t166;
	t218 = pkin(6) * t172;
	t217 = t167 * pkin(1);
	t212 = t158 * t167;
	t143 = -t156 * t212 - 0.2e1 * t179 * t172 ^ 2 * pkin(1) + (t162 * t171 - t208) * pkin(6);
	t154 = t162 * t218 - t167 * t182;
	t180 = 0.1e1 / pkin(2);
	t196 = t218 * t221;
	t139 = (t143 * t224 + t154 * t196) * t180;
	t215 = t139 * t149;
	t147 = t218 * t232;
	t210 = t169 * t182;
	t140 = -t147 + (-t210 - (t162 - 0.2e1 * t217) * t170) * pkin(6);
	t214 = t140 * t149 * t150;
	t213 = t150 * t154;
	t175 = sin(qJ(1));
	t204 = qJD(1) * t175;
	t177 = cos(qJ(1));
	t203 = qJD(1) * t177;
	t201 = t163 * t164 * t233;
	t152 = t154 ^ 2;
	t146 = t150 * t152 + 0.1e1;
	t144 = 0.1e1 / t146;
	t200 = t144 * t220;
	t199 = t149 * t220;
	t195 = t162 + t230;
	t142 = (-t171 * t182 + (-t195 + 0.2e1 * t217) * t172) * pkin(6);
	t138 = (t142 * t224 + t153 * t196) * t180;
	t198 = t138 * t213;
	t191 = 0.2e1 * t138 * t154 * t220;
	t188 = t169 * t162 - t170 * t182;
	t141 = pkin(6) * t188 - t155 * t212 - t197 * t228;
	t136 = 0.2e1 * (-t198 + t215) * t200;
	t135 = 0.2e1 * (-0.2e1 * t139 * t199 + t150 * t191) * (t141 * t213 - t152 * t214) / t146 ^ 2 + 0.2e1 * (-t139 * t140 - (-(t153 * t201 - 0.2e1 * t222) * t197 + ((-t171 * t232 + t229 * t172 - t188) * t224 + (t140 * t172 + t142 * t170) * t221 + (-t224 * t230 + (t153 * t164 + t167 * t163) * pkin(1)) * t169) * pkin(6)) * t180 * t154 - t138 * t141) * t150 * t200 + 0.2e1 * (-(0.2e1 * t215 - 0.2e1 * t198) * pkin(2) * t202 + ((-0.4e1 * pkin(1) * t169 * t209 + t229 * t167 - t147) * t224 - (t154 * t172 * t201 + t171 * t222) * t179 * t170 + ((-t170 * t195 - t210) * t224 + (t141 * t172 + t143 * t170 + t169 * t154) * t221) * pkin(6)) * t180 * t199 + t191 * t214) * t144;
	t1 = [0, t203, t135 * t175 + t136 * t203, 0; 0, t204, -t135 * t177 + t136 * t204, 0; 0, 0, 0, 0;];
	JgD_rot = t1;
elseif link_index == 9
	%% Symbolic Calculation
	% From jacobigD_rot_9_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-15 18:49:38
	% EndTime: 2020-04-15 18:49:42
	% DurationCPUTime: 1.17s
	% Computational Cost: add. (7622->82), mult. (11768->185), div. (258->13), fcn. (7134->8), ass. (0->95)
	t308 = -2 * pkin(1);
	t233 = cos(pkin(20));
	t235 = cos(qJ(3));
	t291 = sin(pkin(20));
	t298 = sin(qJ(3));
	t230 = t298 * t233 + t235 * t291;
	t231 = -t235 * t233 + t298 * t291;
	t294 = pkin(6) * t230;
	t272 = pkin(1) * t294;
	t227 = 0.2e1 * t272;
	t239 = pkin(6) ^ 2;
	t276 = t227 + t239;
	t301 = (-pkin(2) - pkin(13));
	t215 = ((pkin(1) - t301) * (pkin(1) + t301)) + t276;
	t300 = (-pkin(2) + pkin(13));
	t216 = ((pkin(1) - t300) * (pkin(1) + t300)) + t276;
	t284 = t216 * t215;
	t243 = sqrt(-t284);
	t240 = pkin(2) ^ 2;
	t242 = pkin(1) ^ 2;
	t275 = t239 + t242;
	t264 = -pkin(13) ^ 2 + t275;
	t221 = t227 + t240 + t264;
	t277 = t215 + t216;
	t302 = pkin(1) * pkin(6);
	t259 = t277 * t302;
	t208 = t231 * t259;
	t213 = 0.1e1 / t243;
	t286 = t213 * t208;
	t262 = t221 + t286;
	t226 = -pkin(1) - t294;
	t292 = t226 * pkin(1);
	t193 = (-t230 * t243 + (-t262 + 0.2e1 * t292) * t231) * pkin(6);
	t280 = t231 * t243;
	t268 = pkin(6) * t280;
	t205 = -t221 * t226 - t268;
	t241 = 0.1e1 / pkin(2);
	t293 = pkin(6) * t231;
	t225 = t227 + t275;
	t223 = 0.1e1 / t225 ^ 2;
	t296 = pkin(1) * t223;
	t263 = t293 * t296;
	t222 = 0.1e1 / t225;
	t299 = t222 / 0.2e1;
	t188 = (t193 * t299 + t205 * t263) * t241;
	t285 = t213 * t226;
	t194 = -t208 * t285 + t239 * t231 ^ 2 * t308 + (t221 * t230 - t280) * pkin(6);
	t206 = t221 * t293 - t226 * t243;
	t189 = (t194 * t299 + t206 * t263) * t241;
	t201 = 0.1e1 / t205;
	t202 = 0.1e1 / t205 ^ 2;
	t288 = t202 * t206;
	t307 = -t188 * t288 + t189 * t201;
	t295 = pkin(2) * t225;
	t306 = 0.4e1 * t188 * t206 * t295;
	t220 = t240 - t264 - 0.2e1 * t272;
	t217 = 0.1e1 / t220;
	t218 = 0.1e1 / t220 ^ 2;
	t303 = 0.2e1 * t213;
	t297 = pkin(1) * t222;
	t229 = t231 * qJD(3);
	t273 = t229 * t302;
	t207 = t277 * t273;
	t287 = t207 * t231;
	t199 = t213 * pkin(6) * t287;
	t228 = t230 * qJD(3);
	t282 = t228 * t243;
	t191 = -t199 + (-t282 - (t221 - 0.2e1 * t292) * t229) * pkin(6);
	t289 = t191 * t201 * t202;
	t283 = t216 * t218;
	t281 = t231 * t239;
	t251 = t228 * t221 - t229 * t243;
	t265 = t229 * t281;
	t192 = t251 * pkin(6) - t207 * t285 + t265 * t308;
	t204 = t206 ^ 2;
	t198 = t202 * t204 + 0.1e1;
	t196 = 0.1e1 / t198;
	t257 = t242 * t265;
	t200 = t228 * t259 - 0.4e1 * t257;
	t211 = -t215 * t283 + 0.1e1;
	t209 = 0.1e1 / t211;
	t219 = t217 * t218;
	t258 = 0.4e1 / t284 * t207 * t286;
	t252 = -t258 / 0.4e1;
	t254 = pkin(1) * t218 * t268;
	t266 = t217 * t286;
	t269 = t201 * t295;
	t270 = t196 * t295;
	t271 = -0.4e1 * t222 * t223 * t242;
	t274 = t218 * t302;
	t278 = -(-0.2e1 * t266 + 0.4e1 * t254) / t211 ^ 2 * (-t283 + (-0.2e1 * t216 * t219 - t218) * t215) * t273 + (t217 * t258 / 0.4e1 + (0.8e1 * t219 * t257 - 0.2e1 * t228 * t274) * t243 + (t200 * t217 / 0.2e1 + (-t208 * t229 - t287) * t274) * t303) * t209 + (-0.4e1 * t189 * t269 + t202 * t306) * (t192 * t288 - t204 * t289) / t198 ^ 2 - 0.2e1 * (t189 * t191 + (-(t205 * t271 - 0.2e1 * t297) * t265 + ((t231 * t252 + (-t230 * t207 / 0.2e1 - t228 * t208 / 0.2e1 - t231 * t200 / 0.2e1) * t303 - t251) * t299 + (t226 * t228 * t222 + (t191 * t231 + t193 * t229 + t205 * t228) * t223) * pkin(1)) * pkin(6)) * t241 * t206 + t188 * t192) * t202 * t270 + (-0.4e1 * t307 * pkin(2) * t273 + 0.2e1 * ((-0.4e1 * pkin(1) * t228 * t281 - t199 + (-t213 * t200 + t252) * t226) * t299 - (t206 * t231 * t271 + t230 * t297) * t239 * t229 + ((-t262 * t229 - t282) * t299 + (t192 * t231 + t194 * t229 + t228 * t206) * t296) * pkin(6)) * t241 * t269 + t289 * t306) * t196;
	t261 = qJD(1) * (0.2e1 * t307 * t270 + (-0.2e1 * t254 + t266) * t209);
	t236 = cos(qJ(1));
	t234 = sin(qJ(1));
	t1 = [0, qJD(1) * t236, t278 * t234 + t236 * t261, 0; 0, qJD(1) * t234, t234 * t261 - t278 * t236, 0; 0, 0, 0, 0;];
	JgD_rot = t1;
elseif link_index == 10
	%% Symbolic Calculation
	% From jacobigD_rot_10_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-15 18:50:14
	% EndTime: 2020-04-15 18:50:55
	% DurationCPUTime: 24.52s
	% Computational Cost: add. (542986->224), mult. (846766->491), div. (31210->18), fcn. (529626->16), ass. (0->228)
	t506 = pkin(7) ^ 2;
	t510 = pkin(1) ^ 2;
	t500 = sin(qJ(2));
	t504 = cos(pkin(19));
	t628 = sin(pkin(19));
	t629 = cos(qJ(2));
	t529 = -t500 * t504 + t629 * t628;
	t621 = pkin(7) * t529;
	t650 = -2 * pkin(1);
	t586 = -t621 * t650 + t510;
	t486 = t506 + t586;
	t483 = 0.1e1 / t486;
	t492 = t500 * t628 + t629 * t504;
	t490 = t492 * qJD(2);
	t509 = 0.1e1 / pkin(3);
	t482 = pkin(3) ^ 2 - pkin(8) ^ 2 + t486;
	t487 = pkin(1) + t621;
	t647 = -pkin(8) - pkin(3);
	t480 = (pkin(7) - t647) * (pkin(7) + t647) + t586;
	t646 = -pkin(8) + pkin(3);
	t481 = (pkin(7) - t646) * (pkin(7) + t646) + t586;
	t609 = t481 * t480;
	t512 = sqrt(-t609);
	t604 = t492 * t512;
	t473 = -pkin(7) * t604 + t482 * t487;
	t502 = cos(qJ(3));
	t590 = t502 * t473;
	t620 = pkin(7) * t492;
	t474 = t482 * t620 + t487 * t512;
	t499 = sin(qJ(3));
	t595 = t499 * t474;
	t544 = -t590 + t595;
	t484 = 0.1e1 / t486 ^ 2;
	t648 = pkin(1) * pkin(7);
	t582 = t484 * t648;
	t524 = t544 * t582;
	t589 = t502 * t474;
	t596 = t499 * t473;
	t535 = t596 / 0.2e1 + t589 / 0.2e1;
	t542 = 0.2e1 * (t480 + t481) * t648;
	t475 = t490 * t542;
	t478 = 0.1e1 / t512;
	t635 = -t478 / 0.2e1;
	t467 = t475 * t620 * t635;
	t583 = t487 * t650;
	t567 = -t482 + t583;
	t489 = t529 * qJD(2);
	t606 = t489 * t512;
	t454 = t467 + (t567 * t490 - t606) * pkin(7);
	t594 = t502 * t454;
	t655 = t490 * t506;
	t575 = t492 * t655;
	t557 = pkin(1) * t575;
	t634 = t478 / 0.2e1;
	t571 = t487 * t634;
	t605 = t490 * t512;
	t455 = t475 * t571 - 0.2e1 * t557 + (t489 * t482 - t605) * pkin(7);
	t599 = t499 * t455;
	t423 = (t490 * t524 + (-t594 / 0.2e1 + t599 / 0.2e1 + t535 * qJD(3)) * t483) * t509;
	t533 = t590 / 0.2e1 - t595 / 0.2e1;
	t543 = t589 + t596;
	t593 = t502 * t455;
	t600 = t499 * t454;
	t424 = (t543 * t490 * t582 + (t600 / 0.2e1 + t593 / 0.2e1 + t533 * qJD(3)) * t483) * t509;
	t496 = pkin(23) + pkin(22);
	t494 = sin(t496);
	t495 = cos(t496);
	t418 = t423 * t494 - t424 * t495;
	t508 = pkin(4) ^ 2;
	t507 = pkin(5) ^ 2;
	t607 = t483 * t509;
	t465 = t535 * t607;
	t466 = t533 * t607;
	t445 = t465 * t495 + t466 * t494;
	t624 = pkin(5) * t445;
	t649 = -2 * pkin(4);
	t587 = -t624 * t649 + t507;
	t442 = t508 + t587;
	t438 = pkin(9) ^ 2 - pkin(11) ^ 2 + t442;
	t645 = -pkin(9) - pkin(11);
	t436 = (pkin(4) - t645) * (pkin(4) + t645) + t587;
	t644 = -pkin(9) + pkin(11);
	t437 = (pkin(4) - t644) * (pkin(4) + t644) + t587;
	t613 = t437 * t436;
	t511 = sqrt(-t613);
	t561 = t495 * t423 + t424 * t494;
	t659 = -t418 * t511 + t561 * t438;
	t584 = 2 * pkin(4);
	t485 = t483 * t484;
	t556 = t510 * t575;
	t545 = t485 * t556;
	t658 = 0.4e1 * t545;
	t541 = pkin(5) * (t436 + t437) * t584;
	t400 = t418 * t541;
	t560 = t465 * t494 - t495 * t466;
	t568 = t560 * t507 * t649;
	t443 = -pkin(4) - t624;
	t426 = 0.1e1 / t511;
	t640 = -t426 / 0.2e1;
	t573 = t443 * t640;
	t390 = t659 * pkin(5) + t400 * t573 + t418 * t568;
	t623 = pkin(5) * t560;
	t413 = -t438 * t443 - t511 * t623;
	t410 = 0.1e1 / t413 ^ 2;
	t414 = t438 * t623 - t443 * t511;
	t412 = t414 ^ 2;
	t403 = t410 * t412 + 0.1e1;
	t616 = t410 * t414;
	t566 = t443 * t584 - t438;
	t636 = -t560 / 0.2e1;
	t572 = t426 * t636;
	t653 = t561 * t511;
	t389 = (t400 * t572 + t566 * t418 - t653) * pkin(5);
	t409 = 0.1e1 / t413;
	t618 = t389 * t409 * t410;
	t657 = 0.2e1 * (t390 * t616 - t412 * t618) / t403 ^ 2;
	t498 = cos(pkin(23));
	t602 = t498 * t473;
	t497 = sin(pkin(23));
	t603 = t497 * t474;
	t463 = (-t602 / 0.2e1 + t603 / 0.2e1) * t607;
	t460 = 0.1e1 / t463 ^ 2;
	t526 = (-t602 + t603) * t582;
	t632 = -t498 / 0.2e1;
	t633 = t497 / 0.2e1;
	t656 = ((t454 * t632 + t455 * t633) * t483 + t490 * t526) * t509 * t460;
	t401 = 0.1e1 / t403;
	t555 = pkin(4) * pkin(5) * pkin(9) * t401 * t418;
	t619 = pkin(9) * t442;
	t579 = t401 * t619;
	t559 = t410 * t579;
	t578 = t409 * t619;
	t652 = -t389 * t559 - 0.2e1 * t409 * t555 - t578 * t657;
	t577 = t414 * t619;
	t558 = t410 * t577;
	t651 = 0.2e1 * t401 * t577 * t618 - t390 * t559 + 0.2e1 * t555 * t616 + t558 * t657;
	t439 = 0.1e1 / t442;
	t459 = 0.1e1 / t463;
	t440 = 0.1e1 / t442 ^ 2;
	t643 = -t400 / 0.2e1;
	t531 = t492 * t543;
	t476 = t492 * t542;
	t627 = pkin(1) * t506;
	t457 = t476 * t571 - 0.2e1 * t492 ^ 2 * t627 + (t482 * t529 - t604) * pkin(7);
	t591 = t502 * t457;
	t553 = t476 * t635 - t482;
	t456 = (-t529 * t512 + (t553 + t583) * t492) * pkin(7);
	t598 = t499 * t456;
	t536 = t598 / 0.2e1 + t591 / 0.2e1;
	t434 = (-t483 * t536 - t531 * t582) * t509;
	t592 = t502 * t456;
	t597 = t499 * t457;
	t534 = -t592 / 0.2e1 + t597 / 0.2e1;
	t435 = (t483 * t534 + t492 * t524) * t509;
	t420 = t434 * t495 + t435 * t494;
	t404 = t420 * t541;
	t642 = -t404 / 0.2e1;
	t419 = t560 * t541;
	t641 = -t419 / 0.2e1;
	t472 = t489 * t542 - 0.8e1 * t556;
	t576 = t478 / t609 * t476 * t475;
	t430 = t467 + (t576 / 0.4e1 + t472 * t634) * t487 + (-0.4e1 * t489 * t492 - 0.2e1 * t490 * t529) * t627 + (t553 * t490 - t606) * pkin(7);
	t639 = t430 / 0.2e1;
	t431 = 0.4e1 * t557 + (t605 - t492 * t576 / 0.4e1 + t567 * t489 + (-t529 * t475 / 0.2e1 - t489 * t476 / 0.2e1 - t492 * t472 / 0.2e1) * t478) * pkin(7);
	t638 = -t431 / 0.2e1;
	t637 = t439 / 0.2e1;
	t631 = t498 / 0.2e1;
	t630 = -t502 / 0.2e1;
	t626 = pkin(4) * t439;
	t625 = pkin(4) * t440;
	t505 = 0.1e1 / pkin(9);
	t622 = pkin(5) * t505;
	t601 = t498 * t474;
	t610 = t473 * t497;
	t525 = (t601 + t610) * t582;
	t429 = ((t454 * t633 + t455 * t631) * t483 + t490 * t525) * t509;
	t464 = (t601 / 0.2e1 + t610 / 0.2e1) * t607;
	t462 = t464 ^ 2;
	t451 = t460 * t462 + 0.1e1;
	t611 = t460 * t464;
	t614 = t459 * t656;
	t617 = 0.2e1 * (t429 * t611 - t462 * t614) / t451 ^ 2;
	t615 = t418 * t507;
	t612 = t439 * t443;
	t608 = t483 * t498;
	t405 = (t544 * t658 + (t536 * qJD(3) + t431 * t630 + t499 * t639) * t483 + ((-t592 + t597) * t490 + t544 * t489 + (qJD(3) * t543 - t594 + t599) * t492) * t582) * t509;
	t406 = (-0.4e1 * t510 * t485 * t531 * t655 + (t534 * qJD(3) + t430 * t630 + t499 * t638) * t483 + ((-t591 - t598) * t490 - t543 * t489 + (qJD(3) * t544 - t593 - t600) * t492) * t582) * t509;
	t396 = t405 * t494 + t406 * t495;
	t562 = -0.8e1 * t508 * t615;
	t386 = t396 * t541 + t420 * t562;
	t421 = -t434 * t494 + t435 * t495;
	t391 = (t404 * t572 + t566 * t420 - t421 * t511) * pkin(5);
	t581 = pkin(5) * t625;
	t565 = t413 * t581;
	t387 = (t391 * t637 + t420 * t565) * t505;
	t392 = t404 * t573 + t420 * t568 + (-t420 * t511 + t421 * t438) * pkin(5);
	t564 = t414 * t581;
	t388 = (t392 * t637 + t420 * t564) * t505;
	t395 = t405 * t495 - t406 * t494;
	t432 = ((t456 * t632 + t457 * t633) * t483 + t492 * t526) * t509;
	t433 = ((t456 * t633 + t457 * t631) * t483 + t492 * t525) * t509;
	t449 = 0.1e1 / t451;
	t580 = 0.4e1 * t439 * t440 * t508;
	t523 = t505 * (t413 * t580 + 0.2e1 * t626) * t615;
	t527 = t455 * t492 + t457 * t490 + t474 * t489;
	t528 = t454 * t492 + t456 * t490 + t473 * t489;
	t532 = t497 * t658;
	t538 = t498 * t545;
	t546 = t401 * t558;
	t547 = t401 * t505 * t578;
	t574 = -t400 * t426 / t613 / 0.4e1;
	t554 = t560 * t574;
	t563 = t414 * t580;
	t569 = t507 * t584;
	t570 = t483 * t633;
	t588 = 0.2e1 * (((t386 * t640 + t404 * t574) * t443 + (-t396 * t560 - t420 * t561) * t569) * t637 + (t420 * t563 - t421 * t626) * t615 + ((t395 * t438 - t396 * t511 + (t418 * t642 + t420 * t643) * t426) * t637 + (t390 * t420 + t392 * t418 + t396 * t414) * t625) * pkin(5)) * t547 - 0.2e1 * (t420 * t523 + ((-t395 * t511 + t404 * t554 - t396 * t438 + (t386 * t636 + t421 * t643 + t561 * t642) * t426) * t637 + (t396 * t612 + (t389 * t420 + t391 * t418 + t396 * t413) * t440) * pkin(4)) * t622) * t546 + 0.2e1 * t652 * t388 + 0.2e1 * t651 * t387 + (-t449 * t656 - t459 * t617) * t433 + (t611 * t617 + (-t429 * t460 + 0.2e1 * t464 * t614) * t449) * t432 + ((t431 * t570 + t473 * t532 + 0.4e1 * t474 * t538 + t608 * t639) * t459 - (t430 * t570 - 0.4e1 * t473 * t538 + t474 * t532 + t608 * t638) * t611 + ((t459 * t527 + t528 * t611) * t498 + (t459 * t528 - t527 * t611) * t497) * t582) * t449 * t509;
	t398 = (t419 * t572 - t445 * t511 + t560 * t566) * pkin(5);
	t393 = (t398 * t637 + t560 * t565) * t505;
	t399 = t419 * t573 + t560 * t568 + (t438 * t445 - t511 * t560) * pkin(5);
	t394 = (t399 * t637 + t560 * t564) * t505;
	t551 = 0.2e1 * t579;
	t585 = qJD(1) * (-t393 * t616 + t394 * t409) * t551;
	t552 = qJD(1) * ((-t387 * t616 + t388 * t409) * t551 + (-t432 * t611 + t433 * t459) * t449 + 0.1e1);
	t503 = cos(qJ(1));
	t501 = sin(qJ(1));
	t397 = t541 * t561 + t560 * t562;
	t381 = 0.2e1 * (((t397 * t640 + t419 * t574) * t443 - 0.2e1 * t560 * t561 * t569) * t637 + (-t445 * t626 + t560 * t563) * t615 + ((-t653 - t418 * t438 + (t418 * t641 + t560 * t643) * t426) * t637 + (t390 * t560 + t399 * t418 + t414 * t561) * t625) * pkin(5)) * t547 - 0.2e1 * (t560 * t523 + ((t419 * t554 + (t397 * t636 + t445 * t643 + t561 * t641) * t426 - t659) * t637 + (t561 * t612 + (t389 * t560 + t398 * t418 + t413 * t561) * t440) * pkin(4)) * t622) * t546 + 0.2e1 * t652 * t394 + 0.2e1 * t651 * t393;
	t1 = [0, t588 * t501 + t503 * t552, t381 * t501 + t503 * t585, 0; 0, t501 * t552 - t588 * t503, -t381 * t503 + t501 * t585, 0; 0, 0, 0, 0;];
	JgD_rot = t1;
end