% Calculate kinetic energy for
% palh1m1DE2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [4x1]
%   Generalized joint coordinates (joint angles)
% qJD [4x1]
%   Generalized joint velocities
% pkin [23x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[AB,AM,BC,BE,BG,BL,DA,DC,EP,GH,GP,HW,ML,OT2,T1D,T2A,T2T1,phi1,phi2,phi312,phi413,phi710,phi711]';
% m [11x1]
%   mass of all robot links (including the base)
% rSges [11x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [11x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% T [1x1]
%   kinetic energy

% Quelle: HybrDyn-Toolbox
% Datum: 2020-04-15 19:16
% Revision: 2d0abd6fcc3afe6f578a07ad3d897ec57baa6ba1 (2020-04-13)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function T = palh1m1DE2_energykin_fixb_slag_vp1(qJ, qJD, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(4,1),zeros(4,1),zeros(23,1),zeros(11,1),zeros(11,3),zeros(11,6)}
assert(isreal(qJ) && all(size(qJ) == [4 1]), ...
  'palh1m1DE2_energykin_fixb_slag_vp1: qJ has to be [4x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [4 1]), ...
  'palh1m1DE2_energykin_fixb_slag_vp1: qJD has to be [4x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [23 1]), ...
  'palh1m1DE2_energykin_fixb_slag_vp1: pkin has to be [23x1] (double)');
assert(isreal(m) && all(size(m) == [11 1]), ...
  'palh1m1DE2_energykin_fixb_slag_vp1: m has to be [11x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [11,3]), ...
  'palh1m1DE2_energykin_fixb_slag_vp1: rSges has to be [11x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [11 6]), ...
  'palh1m1DE2_energykin_fixb_slag_vp1: Icges has to be [11x6] (double)'); 

%% Symbolic Calculation
% From energy_kinetic_fixb_worldframe_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2020-04-14 20:03:58
% EndTime: 2020-04-14 20:05:25
% DurationCPUTime: 82.60s
% Computational Cost: add. (1825355->614), mult. (2802149->1070), div. (120872->33), fcn. (1755800->48), ass. (0->457)
t1392 = -2 * pkin(1);
t1391 = (-pkin(2) - pkin(13));
t1390 = (-pkin(2) + pkin(13));
t1389 = -pkin(8) - pkin(3);
t1388 = -pkin(8) + pkin(3);
t1387 = -pkin(9) - pkin(11);
t1386 = pkin(11) - pkin(9);
t1174 = pkin(23) + pkin(22);
t1168 = sin(t1174);
t1169 = cos(t1174);
t1203 = pkin(7) ^ 2;
t1211 = pkin(1) ^ 2;
t1184 = sin(qJ(2));
t1186 = sin(pkin(19));
t1190 = cos(qJ(2));
t1192 = cos(pkin(19));
t1155 = t1184 * t1192 - t1186 * t1190;
t1363 = pkin(7) * t1155;
t1308 = t1363 * t1392 + t1211;
t1135 = t1203 + t1308;
t1304 = pkin(3) ^ 2 - pkin(8) ^ 2;
t1119 = t1135 + t1304;
t1142 = pkin(1) - t1363;
t1156 = t1184 * t1186 + t1190 * t1192;
t1146 = t1156 * qJD(2);
t1145 = t1155 * qJD(2);
t1105 = (pkin(7) - t1389) * (pkin(7) + t1389) + t1308;
t1106 = (pkin(7) - t1388) * (pkin(7) + t1388) + t1308;
t1214 = sqrt(-t1106 * t1105);
t1301 = pkin(1) * pkin(7) * t1146;
t1329 = 0.2e1 * (t1105 + t1106) * t1301 / t1214;
t1293 = -t1329 / 0.2e1;
t1228 = t1145 * t1214 + t1156 * t1293;
t1060 = ((t1142 * t1392 - t1119) * t1146 + t1228) * pkin(7);
t1129 = 0.1e1 / t1135;
t1183 = sin(qJ(3));
t1208 = 0.1e1 / pkin(3);
t1085 = pkin(7) * t1119 * t1156 + t1142 * t1214;
t1189 = cos(qJ(3));
t1314 = t1189 * t1085;
t1322 = t1156 * t1214;
t1084 = -pkin(7) * t1322 + t1119 * t1142;
t1319 = t1183 * t1084;
t1233 = t1319 / 0.2e1 + t1314 / 0.2e1;
t1286 = 0.1e1 / t1135 ^ 2 * t1301;
t1315 = t1189 * t1084;
t1318 = t1183 * t1085;
t1376 = -t1189 / 0.2e1;
t1299 = -0.2e1 * t1146 * t1156;
t1323 = t1146 * t1214;
t1061 = t1142 * t1329 / 0.2e1 + t1203 * pkin(1) * t1299 + (-t1119 * t1145 - t1323) * pkin(7);
t1380 = t1061 / 0.2e1;
t977 = ((-t1315 + t1318) * t1286 + (qJD(3) * t1233 + t1060 * t1376 + t1183 * t1380) * t1129) * t1208;
t1232 = -t1315 / 0.2e1 + t1318 / 0.2e1;
t1381 = -t1060 / 0.2e1;
t978 = ((-t1314 - t1319) * t1286 + (qJD(3) * t1232 + t1061 * t1376 + t1183 * t1381) * t1129) * t1208;
t970 = t1168 * t977 + t1169 * t978;
t1385 = pkin(4) * t970;
t1206 = pkin(4) ^ 2;
t1205 = pkin(5) ^ 2;
t1324 = t1129 * t1208;
t1074 = t1233 * t1324;
t1075 = t1232 * t1324;
t1042 = -t1074 * t1169 + t1075 * t1168;
t1369 = pkin(5) * t1042;
t1312 = -0.2e1 * pkin(4) * t1369 + t1205;
t1037 = t1206 + t1312;
t1306 = pkin(9) ^ 2 - pkin(11) ^ 2;
t1032 = t1037 + t1306;
t1038 = -pkin(4) + t1369;
t1027 = (pkin(4) - t1387) * (pkin(4) + t1387) + t1312;
t1028 = (pkin(4) - t1386) * (pkin(4) + t1386) + t1312;
t1212 = sqrt(-t1028 * t1027);
t1043 = t1074 * t1168 + t1075 * t1169;
t1368 = pkin(5) * t1043;
t967 = t1032 * t1368 - t1038 * t1212;
t1384 = pkin(5) * t967;
t1035 = 0.1e1 / t1037;
t1382 = t1035 / 0.2e1;
t1178 = sin(pkin(20));
t1181 = cos(pkin(20));
t1236 = t1178 * t1189 + t1181 * t1183;
t1365 = pkin(6) * t1236;
t1300 = pkin(1) * t1365;
t1137 = 0.2e1 * t1300;
t1204 = pkin(6) ^ 2;
t1305 = t1204 + t1211;
t1122 = t1137 + t1305;
t1120 = 0.1e1 / t1122;
t1379 = t1120 / 0.2e1;
t1176 = sin(pkin(23));
t1378 = t1176 / 0.2e1;
t1177 = sin(pkin(21));
t1377 = t1177 / 0.2e1;
t1193 = cos(pkin(18));
t1375 = t1193 / 0.2e1;
t1210 = 0.1e1 / pkin(2);
t1373 = t1210 / 0.2e1;
t1154 = t1178 * t1183 - t1181 * t1189;
t1141 = t1154 * qJD(3);
t1372 = pkin(1) * t1141;
t1209 = pkin(2) ^ 2;
t1288 = -pkin(13) ^ 2 + t1305;
t1117 = t1137 + t1209 + t1288;
t1136 = -pkin(1) - t1365;
t1309 = t1137 + t1204;
t1101 = ((pkin(1) - t1391) * (pkin(1) + t1391)) + t1309;
t1102 = ((pkin(1) - t1390) * (pkin(1) + t1390)) + t1309;
t1328 = t1102 * t1101;
t1213 = sqrt(-t1328);
t1364 = pkin(6) * t1154;
t1080 = -t1117 * t1136 - t1213 * t1364;
t1081 = t1117 * t1364 - t1136 * t1213;
t1292 = t1120 * t1373;
t1068 = qJ(2) + atan2(t1081 * t1292, t1080 * t1292);
t1067 = cos(t1068);
t1371 = pkin(2) * t1067;
t1179 = cos(pkin(23));
t1071 = (-t1179 * t1084 / 0.2e1 + t1085 * t1378) * t1324;
t1072 = (t1179 * t1085 / 0.2e1 + t1084 * t1378) * t1324;
t1048 = qJ(2) + atan2(t1072, t1071);
t1045 = pkin(22) - t1048;
t1370 = pkin(4) * cos(t1045);
t1175 = qJ(2) + qJ(3);
t1172 = sin(t1175);
t1367 = pkin(5) * t1172;
t1366 = pkin(6) * t1081;
t1185 = sin(qJ(1));
t1362 = pkin(16) * t1185;
t1180 = cos(pkin(21));
t1198 = 0.1e1 / pkin(11);
t1332 = t1035 * t1198;
t1033 = t1037 - t1306;
t1039 = -pkin(4) * t1042 + pkin(5);
t1331 = t1043 * t1212;
t966 = -pkin(4) * t1331 + t1033 * t1039;
t968 = pkin(4) * t1033 * t1043 + t1039 * t1212;
t946 = (t966 * t1377 + t968 * t1180 / 0.2e1) * t1332;
t947 = (-t966 * t1180 / 0.2e1 + t968 * t1377) * t1332;
t937 = atan2(t946, t947) + t1175;
t935 = sin(t937);
t1361 = Icges(5,4) * t935;
t936 = cos(t937);
t1360 = Icges(5,4) * t936;
t1303 = pkin(5) * t1385;
t1359 = 0.2e1 * (t1027 + t1028) * t1303 / t1212;
t1066 = sin(t1068);
t1358 = pkin(2) * t1066;
t1357 = t1184 * pkin(1);
t1200 = 0.1e1 / pkin(9);
t1295 = t1200 * t1382;
t965 = -pkin(5) * t1331 - t1032 * t1038;
t944 = -atan2(t967 * t1295, t965 * t1295) + t1045;
t942 = sin(t944);
t1356 = Icges(11,4) * t942;
t943 = cos(t944);
t1355 = Icges(11,4) * t943;
t1354 = Icges(3,4) * t1184;
t1353 = Icges(3,4) * t1190;
t1352 = Icges(4,4) * t1172;
t1173 = cos(t1175);
t1351 = Icges(4,4) * t1173;
t1118 = t1135 - t1304;
t1143 = pkin(1) * t1155 - pkin(7);
t1083 = -pkin(1) * t1322 - t1118 * t1143;
t1086 = pkin(1) * t1118 * t1156 - t1143 * t1214;
t1187 = sin(pkin(18));
t1202 = 0.1e1 / pkin(8);
t1325 = t1129 * t1202;
t1076 = (t1083 * t1375 - t1187 * t1086 / 0.2e1) * t1325;
t1077 = (t1086 * t1375 + t1083 * t1187 / 0.2e1) * t1325;
t1054 = atan2(t1077, t1076);
t1050 = sin(t1054);
t1350 = Icges(7,4) * t1050;
t1051 = cos(t1054);
t1349 = Icges(7,4) * t1051;
t1046 = sin(t1048);
t1348 = Icges(8,4) * t1046;
t1047 = cos(t1048);
t1347 = Icges(8,4) * t1047;
t1346 = Icges(9,4) * t1066;
t1345 = Icges(9,4) * t1067;
t1116 = t1209 - t1288 - 0.2e1 * t1300;
t1289 = 0.1e1 / pkin(13) * t1373;
t1058 = atan2(t1213 * t1289, t1116 * t1289) + t1068;
t1056 = sin(t1058);
t1344 = Icges(10,4) * t1056;
t1057 = cos(t1058);
t1343 = Icges(10,4) * t1057;
t1342 = t1185 * t935;
t1059 = ((0.2e1 * pkin(7) * t1143 - t1118) * t1146 + t1228) * pkin(1);
t1062 = t1143 * t1293 + t1211 * pkin(7) * t1299 + (-t1118 * t1145 - t1323) * pkin(1);
t1073 = 0.1e1 / t1076 ^ 2;
t1275 = t1193 * t1286;
t1276 = t1187 * t1286;
t1290 = t1129 * t1375;
t1326 = t1129 * t1187;
t961 = ((t1062 * t1290 + t1086 * t1275 + t1059 * t1326 / 0.2e1 + t1083 * t1276) / t1076 - (t1059 * t1290 + t1083 * t1275 - t1062 * t1326 / 0.2e1 - t1086 * t1276) * t1077 * t1073) / (t1073 * t1077 ^ 2 + 0.1e1) * t1202;
t1341 = t1185 * t961;
t1191 = cos(qJ(1));
t1340 = t1191 * t935;
t1339 = t1191 * t961;
t1338 = t1212 * t970;
t1070 = 0.1e1 / t1071 ^ 2;
t1277 = t1179 * t1286;
t1278 = t1176 * t1286;
t1291 = t1129 * t1378;
t1327 = t1129 * t1179;
t960 = ((t1060 * t1291 + t1084 * t1278 + t1085 * t1277 + t1327 * t1380) / t1071 - (t1061 * t1291 - t1084 * t1277 + t1085 * t1278 + t1327 * t1381) * t1072 * t1070) / (t1070 * t1072 ^ 2 + 0.1e1) * t1208;
t1337 = -qJD(2) - t960;
t1079 = 0.1e1 / t1080 ^ 2;
t1121 = 0.1e1 / t1122 ^ 2;
t1140 = t1236 * qJD(3);
t1302 = pkin(6) * t1372;
t1330 = 0.2e1 * (t1101 + t1102) * t1302 / t1213;
t1294 = -t1330 / 0.2e1;
t976 = 0.2e1 * (((t1136 * t1294 + (t1117 * t1140 - t1141 * t1213) * pkin(6)) * t1379 + (-t1120 * t1154 * t1204 + t1121 * t1366) * t1372) / t1080 - ((-t1141 * t1117 - t1140 * t1213 + t1154 * t1294) * t1379 + (t1080 * t1121 + t1120 * t1136) * t1372) * t1079 * t1366) * pkin(2) / (t1079 * t1081 ^ 2 + 0.1e1) * t1122 * t1210;
t1336 = -qJD(2) - t976;
t1171 = qJD(2) * t1185;
t957 = t960 * t1185 + t1171;
t973 = t976 * t1185 + t1171;
t1335 = qJD(2) * t1191;
t1334 = (Icges(7,5) * t1050 + Icges(7,6) * t1051) * qJD(1);
t1333 = t1035 * t1180;
t1182 = sin(qJ(4));
t1321 = t1182 * t1185;
t1320 = t1182 * t1191;
t1188 = cos(qJ(4));
t1317 = t1185 * t1188;
t1316 = t1188 * t1191;
t1313 = -qJD(2) - qJD(3);
t1311 = pkin(4) * sin(t1045);
t1147 = t1357 * t1185;
t1148 = t1357 * t1191;
t1310 = -t1147 * t1171 - t1148 * t1335;
t1307 = pkin(5) * t1173;
t1158 = qJD(3) * t1185 + t1171;
t1298 = pkin(1) * qJD(2) * t1190;
t1297 = -t1359 / 0.2e1;
t1036 = 0.1e1 / t1037 ^ 2;
t1287 = t1036 * t1303;
t1279 = t1180 * t1287;
t1280 = t1177 * t1287;
t1296 = t1035 * t1377;
t969 = -t1168 * t978 + t1169 * t977;
t1231 = t1043 * t1297 - t969 * t1212;
t916 = ((-0.2e1 * pkin(5) * t1039 - t1033) * t970 + t1231) * pkin(4);
t917 = t1039 * t1359 / 0.2e1 - 0.2e1 * t1206 * t970 * t1368 + (t1033 * t969 - t1338) * pkin(4);
t945 = 0.1e1 / t947 ^ 2;
t883 = ((t916 * t1296 + t966 * t1280 + t917 * t1333 / 0.2e1 + t968 * t1279) / t947 - (-t916 * t1333 / 0.2e1 - t966 * t1279 + t917 * t1296 + t968 * t1280) * t946 * t945) / (t945 * t946 ^ 2 + 0.1e1) * t1198;
t880 = t883 * t1185 + t1158;
t1285 = t1147 - t1362;
t1283 = t1191 * t1298;
t1281 = pkin(10) * t936 + pkin(12) * t935;
t1274 = rSges(5,1) * t936 - rSges(5,2) * t935;
t1103 = t1307 * t1185;
t1273 = -t1103 + t1285;
t881 = (-t883 + t1313) * t1191;
t1272 = -rSges(11,1) * t942 + rSges(11,2) * t943;
t1271 = -rSges(3,1) * t1184 - rSges(3,2) * t1190;
t1270 = rSges(4,1) * t1173 - rSges(4,2) * t1172;
t1269 = rSges(7,1) * t1051 - rSges(7,2) * t1050;
t1268 = -rSges(8,1) * t1046 - rSges(8,2) * t1047;
t1267 = -rSges(9,1) * t1066 - rSges(9,2) * t1067;
t1266 = rSges(10,1) * t1056 + rSges(10,2) * t1057;
t1265 = Icges(5,1) * t936 - t1361;
t1264 = -Icges(5,2) * t935 + t1360;
t1263 = Icges(5,5) * t936 - Icges(5,6) * t935;
t1262 = -Icges(11,1) * t942 + t1355;
t1261 = -Icges(3,1) * t1184 - t1353;
t1260 = Icges(4,1) * t1173 - t1352;
t1259 = Icges(7,1) * t1051 - t1350;
t1258 = -Icges(8,1) * t1046 - t1347;
t1257 = -Icges(9,1) * t1066 - t1345;
t1256 = Icges(10,1) * t1056 + t1343;
t1255 = Icges(11,2) * t943 - t1356;
t1254 = -Icges(3,2) * t1190 - t1354;
t1253 = -Icges(4,2) * t1172 + t1351;
t1252 = -Icges(7,2) * t1050 + t1349;
t1251 = -Icges(8,2) * t1047 - t1348;
t1250 = -Icges(9,2) * t1067 - t1346;
t1249 = Icges(10,2) * t1057 + t1344;
t1248 = -Icges(11,5) * t942 + Icges(11,6) * t943;
t1247 = -Icges(3,5) * t1184 - Icges(3,6) * t1190;
t1246 = Icges(4,5) * t1173 - Icges(4,6) * t1172;
t1245 = Icges(7,5) * t1051 - Icges(7,6) * t1050;
t1244 = -Icges(8,5) * t1046 - Icges(8,6) * t1047;
t1243 = -Icges(9,5) * t1066 - Icges(9,6) * t1067;
t1242 = Icges(10,5) * t1056 + Icges(10,6) * t1057;
t991 = -Icges(7,6) * t1191 + t1185 * t1252;
t993 = -Icges(7,5) * t1191 + t1185 * t1259;
t1241 = -t1050 * t991 + t1051 * t993;
t992 = Icges(7,6) * t1185 + t1191 * t1252;
t994 = Icges(7,5) * t1185 + t1191 * t1259;
t1240 = -t1050 * t992 + t1051 * t994;
t1125 = -Icges(3,6) * t1191 + t1185 * t1254;
t1127 = -Icges(3,5) * t1191 + t1185 * t1261;
t1239 = t1125 * t1190 + t1127 * t1184;
t1126 = Icges(3,6) * t1185 + t1191 * t1254;
t1128 = Icges(3,5) * t1185 + t1191 * t1261;
t1238 = -t1126 * t1190 - t1128 * t1184;
t1161 = -Icges(3,2) * t1184 + t1353;
t1162 = Icges(3,1) * t1190 - t1354;
t1237 = -t1161 * t1190 - t1162 * t1184;
t1159 = t1313 * t1191;
t1235 = t1159 * t1367 - t1283;
t1104 = t1307 * t1191;
t1234 = t1158 * t1103 - t1104 * t1159 + t1310;
t1167 = qJD(1) * t1191 * pkin(16);
t1230 = -qJD(1) * t1148 - t1185 * t1298 + t1167;
t1002 = Icges(7,2) * t1051 + t1350;
t1003 = Icges(7,1) * t1050 + t1349;
t1229 = (-t1002 * t1050 + t1003 * t1051) * qJD(1);
t1227 = (Icges(5,5) * t935 + Icges(5,6) * t936) * qJD(1) + (Icges(5,3) * t1185 + t1191 * t1263) * t880 + (-Icges(5,3) * t1191 + t1185 * t1263) * t881;
t964 = 0.1e1 / t965 ^ 2;
t888 = 0.2e1 * (((t1038 * t1297 + (t1032 * t969 - t1338) * pkin(5)) * t1382 + (-t1035 * t1043 * t1205 + t1036 * t1384) * t1385) / t965 - ((-t970 * t1032 + t1231) * t1382 + (t1035 * t1038 + t1036 * t965) * t1385) * t964 * t1384) * pkin(9) * t1037 * t1200 / (t964 * t967 ^ 2 + 0.1e1);
t886 = t1185 * t888 + t957;
t887 = (-t888 + t1337) * t1191;
t1226 = (-Icges(11,5) * t943 - Icges(11,6) * t942) * qJD(1) + (Icges(11,3) * t1185 + t1191 * t1248) * t886 + (-Icges(11,3) * t1191 + t1185 * t1248) * t887;
t958 = t1337 * t1191;
t1225 = (Icges(8,5) * t1047 - Icges(8,6) * t1046) * qJD(1) + (Icges(8,3) * t1185 + t1191 * t1244) * t957 + (-Icges(8,3) * t1191 + t1185 * t1244) * t958;
t1113 = 0.1e1 / t1116 ^ 2;
t1055 = (0.1e1 / t1116 * t1330 / 0.2e1 - 0.2e1 * t1213 * t1113 * t1302) / (-t1113 * t1328 + 0.1e1);
t971 = t1055 * t1185 + t973;
t972 = (-t1055 + t1336) * t1191;
t1224 = (-Icges(10,5) * t1057 + Icges(10,6) * t1056) * qJD(1) + (-Icges(10,3) * t1191 + t1185 * t1242) * t972 + (Icges(10,3) * t1185 + t1191 * t1242) * t971;
t974 = t1336 * t1191;
t1223 = (Icges(9,5) * t1067 - Icges(9,6) * t1066) * qJD(1) + (-Icges(9,3) * t1191 + t1185 * t1243) * t974 + (Icges(9,3) * t1185 + t1191 * t1243) * t973;
t1222 = (Icges(4,5) * t1172 + Icges(4,6) * t1173) * qJD(1) + (-Icges(4,3) * t1191 + t1185 * t1246) * t1159 + (Icges(4,3) * t1185 + t1191 * t1246) * t1158;
t1221 = qJD(1) * t1104 - t1158 * t1367 + t1230;
t903 = -Icges(5,6) * t1191 + t1185 * t1264;
t904 = Icges(5,6) * t1185 + t1191 * t1264;
t905 = -Icges(5,5) * t1191 + t1185 * t1265;
t906 = Icges(5,5) * t1185 + t1191 * t1265;
t912 = Icges(5,2) * t936 + t1361;
t913 = Icges(5,1) * t935 + t1360;
t1220 = (-t904 * t935 + t906 * t936) * t880 + (-t903 * t935 + t905 * t936) * t881 + (-t912 * t935 + t913 * t936) * qJD(1);
t920 = -Icges(11,6) * t1191 + t1185 * t1255;
t921 = Icges(11,6) * t1185 + t1191 * t1255;
t922 = -Icges(11,5) * t1191 + t1185 * t1262;
t923 = Icges(11,5) * t1185 + t1191 * t1262;
t927 = -Icges(11,2) * t942 - t1355;
t928 = -Icges(11,1) * t943 - t1356;
t1219 = (t921 * t943 - t923 * t942) * t886 + (t920 * t943 - t922 * t942) * t887 + (t927 * t943 - t928 * t942) * qJD(1);
t983 = -Icges(8,6) * t1191 + t1185 * t1251;
t984 = Icges(8,6) * t1185 + t1191 * t1251;
t985 = -Icges(8,5) * t1191 + t1185 * t1258;
t986 = Icges(8,5) * t1185 + t1191 * t1258;
t998 = -Icges(8,2) * t1046 + t1347;
t999 = Icges(8,1) * t1047 - t1348;
t1218 = (-t1046 * t986 - t1047 * t984) * t957 + (-t1046 * t985 - t1047 * t983) * t958 + (-t1046 * t999 - t1047 * t998) * qJD(1);
t1007 = -Icges(10,6) * t1191 + t1185 * t1249;
t1008 = Icges(10,6) * t1185 + t1191 * t1249;
t1009 = -Icges(10,5) * t1191 + t1185 * t1256;
t1010 = Icges(10,5) * t1185 + t1191 * t1256;
t1014 = Icges(10,2) * t1056 - t1343;
t1015 = -Icges(10,1) * t1057 + t1344;
t1217 = (t1008 * t1057 + t1010 * t1056) * t971 + (t1007 * t1057 + t1009 * t1056) * t972 + (t1014 * t1057 + t1015 * t1056) * qJD(1);
t1019 = -Icges(9,6) * t1191 + t1185 * t1250;
t1020 = Icges(9,6) * t1185 + t1191 * t1250;
t1021 = -Icges(9,5) * t1191 + t1185 * t1257;
t1022 = Icges(9,5) * t1185 + t1191 * t1257;
t1030 = -Icges(9,2) * t1066 + t1345;
t1031 = Icges(9,1) * t1067 - t1346;
t1216 = (-t1020 * t1067 - t1022 * t1066) * t973 + (-t1019 * t1067 - t1021 * t1066) * t974 + (-t1030 * t1067 - t1031 * t1066) * qJD(1);
t1109 = -Icges(4,6) * t1191 + t1185 * t1253;
t1110 = Icges(4,6) * t1185 + t1191 * t1253;
t1111 = -Icges(4,5) * t1191 + t1185 * t1260;
t1112 = Icges(4,5) * t1185 + t1191 * t1260;
t1150 = Icges(4,2) * t1173 + t1352;
t1151 = Icges(4,1) * t1172 + t1351;
t1215 = (-t1110 * t1172 + t1112 * t1173) * t1158 + (-t1109 * t1172 + t1111 * t1173) * t1159 + (-t1150 * t1172 + t1151 * t1173) * qJD(1);
t1165 = rSges(2,1) * t1191 - rSges(2,2) * t1185;
t1164 = rSges(3,1) * t1190 - rSges(3,2) * t1184;
t1163 = rSges(2,1) * t1185 + rSges(2,2) * t1191;
t1160 = Icges(3,5) * t1190 - Icges(3,6) * t1184;
t1152 = rSges(4,1) * t1172 + rSges(4,2) * t1173;
t1132 = rSges(3,3) * t1185 + t1191 * t1271;
t1131 = -rSges(3,3) * t1191 + t1185 * t1271;
t1124 = Icges(3,3) * t1185 + t1191 * t1247;
t1123 = -Icges(3,3) * t1191 + t1185 * t1247;
t1115 = rSges(4,3) * t1185 + t1191 * t1270;
t1114 = -rSges(4,3) * t1191 + t1185 * t1270;
t1098 = qJD(1) * t1132 - t1164 * t1171 + t1167;
t1097 = -t1164 * t1335 + (-t1131 - t1362) * qJD(1);
t1096 = (t1131 * t1185 + t1132 * t1191) * qJD(2);
t1090 = qJD(1) * t1115 - t1152 * t1158 + t1230;
t1089 = -t1283 + t1152 * t1159 + (-t1114 + t1285) * qJD(1);
t1082 = t1114 * t1158 - t1115 * t1159 + t1310;
t1064 = t1358 * t1191;
t1063 = t1358 * t1185;
t1034 = rSges(9,1) * t1067 - rSges(9,2) * t1066;
t1026 = t1311 * t1191;
t1025 = t1311 * t1185;
t1024 = rSges(9,3) * t1185 + t1191 * t1267;
t1023 = -rSges(9,3) * t1191 + t1185 * t1267;
t1016 = -rSges(10,1) * t1057 + rSges(10,2) * t1056;
t1012 = rSges(10,3) * t1185 + t1191 * t1266;
t1011 = -rSges(10,3) * t1191 + t1185 * t1266;
t1004 = rSges(7,1) * t1050 + rSges(7,2) * t1051;
t1000 = rSges(8,1) * t1047 - rSges(8,2) * t1046;
t996 = rSges(7,3) * t1185 + t1191 * t1269;
t995 = -rSges(7,3) * t1191 + t1185 * t1269;
t990 = Icges(7,3) * t1185 + t1191 * t1245;
t989 = -Icges(7,3) * t1191 + t1185 * t1245;
t988 = rSges(8,3) * t1185 + t1191 * t1268;
t987 = -rSges(8,3) * t1191 + t1185 * t1268;
t963 = qJD(1) * t1024 - t1034 * t973 + t1167;
t962 = t1034 * t974 + (-t1023 - t1362) * qJD(1);
t956 = t1023 * t973 - t1024 * t974;
t954 = -t1004 * t1341 + (-pkin(15) * t1191 + t996) * qJD(1);
t953 = -t1004 * t1339 + (pkin(15) * t1185 - t995) * qJD(1);
t952 = qJD(1) * t988 - t1000 * t957 + t1230;
t951 = -t1283 + t1000 * t958 + (t1285 - t987) * qJD(1);
t949 = -t973 * t1371 - t1016 * t971 + t1167 + (t1012 - t1064) * qJD(1);
t948 = t974 * t1371 + t1016 * t972 + (-t1011 + t1063 - t1362) * qJD(1);
t941 = (t1185 * t995 + t1191 * t996) * t961;
t940 = t957 * t987 - t958 * t988 + t1310;
t939 = t1011 * t971 - t1012 * t972 - t1063 * t973 + t1064 * t974;
t934 = -qJD(4) * t936 + qJD(1);
t933 = t1316 * t936 + t1321;
t932 = -t1320 * t936 + t1317;
t931 = t1317 * t936 - t1320;
t930 = -t1321 * t936 - t1316;
t929 = -rSges(11,1) * t943 - rSges(11,2) * t942;
t925 = rSges(11,3) * t1185 + t1191 * t1272;
t924 = -rSges(11,3) * t1191 + t1185 * t1272;
t915 = pkin(10) * t935 - pkin(12) * t936;
t914 = rSges(5,1) * t935 + rSges(5,2) * t936;
t910 = t1281 * t1191;
t909 = t1281 * t1185;
t908 = rSges(5,3) * t1185 + t1191 * t1274;
t907 = -rSges(5,3) * t1191 + t1185 * t1274;
t900 = -rSges(6,3) * t936 + (rSges(6,1) * t1188 - rSges(6,2) * t1182) * t935;
t899 = -Icges(6,5) * t936 + (Icges(6,1) * t1188 - Icges(6,4) * t1182) * t935;
t898 = -Icges(6,6) * t936 + (Icges(6,4) * t1188 - Icges(6,2) * t1182) * t935;
t897 = -Icges(6,3) * t936 + (Icges(6,5) * t1188 - Icges(6,6) * t1182) * t935;
t896 = rSges(6,1) * t933 + rSges(6,2) * t932 + rSges(6,3) * t1340;
t895 = rSges(6,1) * t931 + rSges(6,2) * t930 + rSges(6,3) * t1342;
t894 = Icges(6,1) * t933 + Icges(6,4) * t932 + Icges(6,5) * t1340;
t893 = Icges(6,1) * t931 + Icges(6,4) * t930 + Icges(6,5) * t1342;
t892 = Icges(6,4) * t933 + Icges(6,2) * t932 + Icges(6,6) * t1340;
t891 = Icges(6,4) * t931 + Icges(6,2) * t930 + Icges(6,6) * t1342;
t890 = Icges(6,5) * t933 + Icges(6,6) * t932 + Icges(6,3) * t1340;
t889 = Icges(6,5) * t931 + Icges(6,6) * t930 + Icges(6,3) * t1342;
t885 = -t957 * t1370 - t886 * t929 + (t1026 + t925) * qJD(1) + t1230;
t884 = -t1283 + t958 * t1370 + t887 * t929 + (-t1025 + t1285 - t924) * qJD(1);
t879 = qJD(4) * t1342 + t881;
t878 = qJD(4) * t1340 + t880;
t877 = t1025 * t957 - t1026 * t958 + t886 * t924 - t887 * t925 + t1310;
t876 = qJD(1) * t908 - t880 * t914 + t1221;
t875 = t881 * t914 + (t1273 - t907) * qJD(1) + t1235;
t874 = t880 * t907 - t881 * t908 + t1234;
t873 = qJD(1) * t910 - t878 * t900 - t880 * t915 + t896 * t934 + t1221;
t872 = t879 * t900 + t881 * t915 - t895 * t934 + (t1273 - t909) * qJD(1) + t1235;
t871 = t878 * t895 - t879 * t896 + t880 * t909 - t881 * t910 + t1234;
t1 = m(5) * (t874 ^ 2 + t875 ^ 2 + t876 ^ 2) / 0.2e1 + m(6) * (t871 ^ 2 + t872 ^ 2 + t873 ^ 2) / 0.2e1 + m(9) * (t956 ^ 2 + t962 ^ 2 + t963 ^ 2) / 0.2e1 + m(7) * (t941 ^ 2 + t953 ^ 2 + t954 ^ 2) / 0.2e1 + m(8) * (t940 ^ 2 + t951 ^ 2 + t952 ^ 2) / 0.2e1 + m(11) * (t877 ^ 2 + t884 ^ 2 + t885 ^ 2) / 0.2e1 + t1158 * (t1185 * t1222 + t1191 * t1215) / 0.2e1 + t1159 * (t1185 * t1215 - t1191 * t1222) / 0.2e1 + t973 * (t1185 * t1223 + t1191 * t1216) / 0.2e1 + t974 * (t1185 * t1216 - t1191 * t1223) / 0.2e1 + t971 * (t1185 * t1224 + t1191 * t1217) / 0.2e1 + t972 * (t1185 * t1217 - t1191 * t1224) / 0.2e1 + t957 * (t1185 * t1225 + t1191 * t1218) / 0.2e1 + t958 * (t1185 * t1218 - t1191 * t1225) / 0.2e1 + t886 * (t1185 * t1226 + t1191 * t1219) / 0.2e1 + t887 * (t1185 * t1219 - t1191 * t1226) / 0.2e1 + t880 * (t1185 * t1227 + t1191 * t1220) / 0.2e1 + t881 * (t1185 * t1220 - t1191 * t1227) / 0.2e1 + m(4) * (t1082 ^ 2 + t1089 ^ 2 + t1090 ^ 2) / 0.2e1 + m(3) * (t1096 ^ 2 + t1097 ^ 2 + t1098 ^ 2) / 0.2e1 + m(10) * (t939 ^ 2 + t948 ^ 2 + t949 ^ 2) / 0.2e1 + t934 * ((-t890 * t878 - t889 * t879 - t897 * t934) * t936 + ((-t1182 * t892 + t1188 * t894) * t878 + (-t1182 * t891 + t1188 * t893) * t879 + (-t1182 * t898 + t1188 * t899) * t934) * t935) / 0.2e1 + (m(2) * (t1163 ^ 2 + t1165 ^ 2) + Icges(2,3)) * qJD(1) ^ 2 / 0.2e1 + (((-t1126 * t1184 + t1128 * t1190) * t1185 - (-t1125 * t1184 + t1127 * t1190) * t1191) * qJD(2) + ((t1050 * t994 + t1051 * t992) * t1185 - (t1050 * t993 + t1051 * t991) * t1191) * t961 + (t1110 * t1173 + t1112 * t1172) * t1158 + (t1109 * t1173 + t1111 * t1172) * t1159 + (-t1020 * t1066 + t1022 * t1067) * t973 + (-t1019 * t1066 + t1021 * t1067) * t974 + (t1008 * t1056 - t1010 * t1057) * t971 + (t1007 * t1056 - t1009 * t1057) * t972 + (-t1046 * t984 + t1047 * t986) * t957 + (-t1046 * t983 + t1047 * t985) * t958 + (-t921 * t942 - t923 * t943) * t886 + (-t920 * t942 - t922 * t943) * t887 + (t904 * t936 + t906 * t935) * t880 + (t903 * t936 + t905 * t935) * t881 + (-t1161 * t1184 + t1162 * t1190 + t1002 * t1051 + t1003 * t1050 + t1150 * t1173 + t1151 * t1172 - t1030 * t1066 + t1031 * t1067 + t1014 * t1056 - t1015 * t1057 - t1046 * t998 + t1047 * t999 - t927 * t942 - t928 * t943 + t912 * t936 + t913 * t935) * qJD(1)) * qJD(1) / 0.2e1 + t878 * ((t1340 * t890 + t892 * t932 + t894 * t933) * t878 + (t1340 * t889 + t891 * t932 + t893 * t933) * t879 + (t1340 * t897 + t898 * t932 + t899 * t933) * t934) / 0.2e1 + ((t990 * t1341 + t1334) * t1185 + (t1229 + (-t1241 * t1191 + (t1240 - t989) * t1185) * t961) * t1191) * t1341 / 0.2e1 + t879 * ((t1342 * t890 + t892 * t930 + t894 * t931) * t878 + (t1342 * t889 + t891 * t930 + t893 * t931) * t879 + (t1342 * t897 + t898 * t930 + t899 * t931) * t934) / 0.2e1 - ((t989 * t1339 - t1334) * t1191 + (t1229 + (t1240 * t1185 + (-t1241 - t990) * t1191) * t961) * t1185) * t1339 / 0.2e1 - ((-t1191 * t1160 + t1185 * t1237) * qJD(1) + (t1191 ^ 2 * t1123 + (t1238 * t1185 + (-t1124 + t1239) * t1191) * t1185) * qJD(2)) * t1335 / 0.2e1 + ((t1185 * t1160 + t1191 * t1237) * qJD(1) + (t1185 ^ 2 * t1124 + (t1239 * t1191 + (-t1123 + t1238) * t1185) * t1191) * qJD(2)) * t1171 / 0.2e1;
T = t1;
