% Calculate inertial parameters regressor of coriolis matrix for
% palh1m1DE2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [4x1]
%   Generalized joint coordinates (joint angles)
% qJD [4x1]
%   Generalized joint velocities
% pkin [23x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[AB,AM,BC,BE,BG,BL,DA,DC,EP,GH,GP,HW,ML,OT2,T1D,T2A,T2T1,phi1,phi2,phi312,phi413,phi710,phi711]';
% 
% Output:
% cmat_reg [(4*4)x(4*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2020-04-15 19:16
% Revision: 2d0abd6fcc3afe6f578a07ad3d897ec57baa6ba1 (2020-04-13)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = palh1m1DE2_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(4,1),zeros(4,1),zeros(23,1)}
assert(isreal(qJ) && all(size(qJ) == [4 1]), ...
  'palh1m1DE2_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [4x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [4 1]), ...
  'palh1m1DE2_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [4x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [23 1]), ...
  'palh1m1DE2_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [23x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2020-04-15 07:02:03
% EndTime: 2020-04-15 11:25:34
% DurationCPUTime: 5400.74s
% Computational Cost: add. (145044825->1209), mult. (219573500->2237), div. (9297912->44), fcn. (139386955->44), ass. (0->1128)
t1192 = pkin(23) + pkin(22);
t1082 = sin(t1192);
t1083 = cos(t1192);
t1417 = sin(qJ(3));
t1419 = cos(qJ(3));
t1465 = 0.1e1 / pkin(3);
t623 = pkin(3) ^ 2;
t1283 = pkin(8) ^ 2 - t623;
t1462 = pkin(7) ^ 2;
t1418 = sin(pkin(19));
t1420 = cos(pkin(19));
t609 = sin(qJ(2));
t612 = cos(qJ(2));
t982 = -t1418 * t612 + t1420 * t609;
t975 = pkin(7) * t982;
t943 = (-0.2e1 * t975 + pkin(1)) * pkin(1);
t920 = t943 + t1462;
t911 = t920 - t1283;
t955 = -t975 + pkin(1);
t1442 = pkin(7) + pkin(8);
t1443 = pkin(7) - pkin(8);
t894 = (pkin(3) + t1442) * (-pkin(3) + t1443) + t943;
t895 = (-pkin(3) + t1442) * (pkin(3) + t1443) + t943;
t890 = t895 * t894;
t621 = sqrt(-t890);
t981 = t609 * t1418 + t612 * t1420;
t1536 = t981 * t621;
t959 = pkin(7) * t1536;
t888 = t1465 * (t911 * t955 - t959);
t918 = 0.1e1 / t920;
t874 = t918 * t888;
t872 = t874 / 0.2e1;
t904 = pkin(7) * t911;
t1535 = t981 * t904;
t889 = t1465 * (t621 * t955 + t1535);
t875 = t918 * t889;
t1289 = t1419 * t872 - t1417 * t875 / 0.2e1;
t873 = t875 / 0.2e1;
t858 = t1417 * t872 + t1419 * t873;
t487 = -t1082 * t858 + t1083 * t1289;
t625 = pkin(9) ^ 2;
t1282 = pkin(11) ^ 2 - t625;
t1464 = pkin(4) ^ 2;
t1463 = pkin(5) ^ 2;
t1576 = t1082 * t1289 + t1083 * t858;
t850 = pkin(4) * t1576;
t848 = 0.2e1 * t850;
t839 = pkin(5) * t848 + t1463;
t836 = -t839 - t1464;
t828 = -t836 + t1282;
t819 = pkin(4) * t828;
t1587 = t487 * t819;
t1441 = -pkin(9) - pkin(11);
t799 = (pkin(4) - t1441) * (pkin(4) + t1441) + t839;
t1440 = pkin(11) - pkin(9);
t800 = (pkin(4) - t1440) * (pkin(4) + t1440) + t839;
t783 = t800 * t799;
t1468 = sqrt(-t783);
t1557 = t487 * t1468;
t1286 = t1417 * t612 + t1419 * t609;
t1500 = t1286 * qJD(3);
t1556 = qJD(2) * t1286 + t1500;
t587 = -t1417 * t609 + t1419 * t612;
t1586 = t1556 * t587;
t1585 = t1468 * t1576;
t1457 = 0.1e1 / t920 ^ 2;
t1467 = pkin(1) ^ 2;
t977 = t981 ^ 2;
t961 = t977 * t1467 * t1462;
t1584 = 0.4e1 * t918 * t1457 * t961;
t973 = t981 * pkin(1);
t963 = pkin(7) * t973;
t952 = t1457 * t963;
t1583 = 0.2e1 * t952;
t912 = t918 / 0.2e1;
t1582 = pkin(4) * t1557;
t1581 = pkin(5) * t1557;
t1450 = pkin(1) * pkin(7);
t552 = 0.4e1 * (t1442 * t1443 + t943) * t963 - 0.4e1 * t981 * t623 * t1450;
t892 = t982 * t904;
t1458 = 0.1e1 / t621;
t924 = t1458 * t955 / 0.2e1;
t972 = t977 * pkin(1);
t962 = t1462 * t972;
t869 = t1465 * (t552 * t924 - t892 - t959 - 0.2e1 * t962);
t1196 = t1457 * t1450;
t887 = t889 * t1196;
t1518 = t869 * t912 + t981 * t887;
t970 = t1458 * t981;
t954 = -t970 / 0.2e1;
t946 = t552 * t954;
t968 = t982 * t621;
t960 = pkin(7) * t968;
t974 = pkin(7) * t981;
t868 = t1465 * (t960 + pkin(7) * t946 - (-t1283 + t1462) * t974 + (0.4e1 * t974 * t982 - 0.3e1 * t973) * t1450);
t886 = t888 * t1196;
t1520 = t868 * t912 + t981 * t886;
t603 = sin(pkin(23));
t605 = cos(pkin(23));
t469 = t1518 * t603 - t1520 * t605;
t514 = -t605 * t874 / 0.2e1 + t603 * t873;
t510 = 0.1e1 / t514;
t511 = 0.1e1 / t514 ^ 2;
t1580 = t469 * t510 * t511;
t1579 = t799 + t800;
t786 = t1417 * t1520 + t1419 * t1518;
t787 = t1417 * t1518 - t1419 * t1520;
t766 = -t1082 * t787 + t1083 * t786;
t778 = t1468 * t766;
t617 = 0.1e1 / pkin(8);
t964 = t982 * t1450;
t1578 = (-t1457 * t964 + t1584) * t617;
t1466 = 0.1e1 / pkin(2);
t1382 = t1466 / 0.2e1;
t1380 = sin(pkin(20));
t607 = cos(pkin(20));
t584 = t1380 * t1419 + t1417 * t607;
t1403 = t584 * pkin(6);
t1545 = 0.2e1 * t1403;
t618 = pkin(6) ^ 2;
t1287 = pkin(1) * t1545 + t618;
t575 = t1287 + t1467;
t1459 = 0.1e1 / t575;
t1180 = t1459 * t1382;
t585 = -t1380 * t1417 + t1419 * t607;
t1444 = -pkin(2) - pkin(13);
t568 = (pkin(1) - t1444) * (pkin(1) + t1444) + t1287;
t1439 = pkin(13) - pkin(2);
t569 = (pkin(1) - t1439) * (pkin(1) + t1439) + t1287;
t1313 = t569 * t568;
t620 = sqrt(-t1313);
t1309 = t585 * t620;
t614 = pkin(13) ^ 2;
t619 = pkin(2) ^ 2;
t570 = t575 - t614 + t619;
t580 = -pkin(1) - t1403;
t538 = pkin(6) * t1309 - t570 * t580;
t1406 = pkin(6) * t585;
t539 = -t1406 * t570 - t580 * t620;
t958 = atan2(t539 * t1180, t538 * t1180);
t949 = sin(t958);
t931 = t949 * t612;
t950 = cos(t958);
t934 = t950 * t609;
t482 = -t931 - t934;
t1179 = 0.1e1 / pkin(13) * t1382;
t978 = t614 - t618 + t619 + (-pkin(1) - 0.2e1 * t1403) * pkin(1);
t548 = atan2(t620 * t1179, t978 * t1179);
t547 = cos(t548);
t1317 = t547 * t482;
t932 = t949 * t609;
t933 = t950 * t612;
t481 = t932 - t933;
t546 = sin(t548);
t1323 = t546 * t481;
t454 = t1317 + t1323;
t1319 = t547 * t454;
t1318 = t547 * t481;
t1322 = t546 * t482;
t1029 = -t1318 + t1322;
t1324 = t546 * t1029;
t1577 = t1324 + t1319;
t1487 = t1082 * t786 + t1083 * t787;
t1449 = pkin(4) * pkin(5);
t1508 = (-t625 + (pkin(4) + pkin(11)) * (pkin(4) - pkin(11)) + (t848 + pkin(5)) * pkin(5)) * t1449;
t1551 = -0.4e1 * t766;
t390 = t1508 * t1551;
t782 = 0.1e1 / t1468;
t774 = -t782 / 0.2e1;
t757 = t487 * t774;
t1527 = -t1468 * t1487 - t390 * t757;
t608 = sin(qJ(4));
t611 = cos(qJ(4));
t1305 = t608 * t611;
t1574 = 0.2e1 * t1305;
t1573 = 0.2e1 * t487;
t1381 = cos(pkin(21));
t1379 = sin(pkin(21));
t1542 = t1379 / 0.2e1;
t1461 = 0.1e1 / pkin(11);
t843 = t850 + pkin(5);
t742 = t1461 * (t1468 * t843 - t1587);
t833 = 0.1e1 / t836;
t830 = -t833 / 0.2e1;
t733 = t742 * t830;
t741 = t1461 * (t828 * t843 + t1582);
t734 = t833 * t741;
t376 = t1381 * t733 - t1542 * t734;
t1541 = -t1381 / 0.2e1;
t701 = t1379 * t733 - t1541 * t734;
t695 = atan2(t376, t701);
t691 = sin(t695);
t692 = cos(t695);
t1486 = t691 * t1286 - t692 * t587;
t375 = t376 ^ 2;
t699 = 0.1e1 / t701 ^ 2;
t355 = t375 * t699 + 0.1e1;
t1460 = 0.1e1 / t355;
t834 = 0.1e1 / t836 ^ 2;
t829 = t834 * t1449;
t731 = t741 * t829;
t732 = t742 * t829;
t1530 = t1379 * t732 - t1381 * t731;
t430 = -0.4e1 * t1508 * t487;
t1544 = t843 / 0.2e1;
t751 = t782 * t1544;
t849 = pkin(5) * t487;
t844 = 0.2e1 * t1464 * t849;
t726 = t1461 * (t1576 * t819 + t430 * t751 - t487 * t844 + t1582);
t719 = t726 * t830;
t1547 = -0.2e1 * t843;
t1522 = t1449 * t1547 - t819;
t1526 = -t430 * t757 - t1585;
t725 = t1461 * (pkin(4) * t1526 - t1522 * t487);
t720 = t833 * t725;
t676 = t1379 * t719 - t1530 * t487 - t1541 * t720;
t674 = t1460 * t676;
t671 = t699 * t674;
t1531 = t1379 * t731 + t1381 * t732;
t675 = t1381 * t719 - t1531 * t487 - t1542 * t720;
t698 = 0.1e1 / t701;
t697 = t1460 * t698;
t670 = -t376 * t671 + t675 * t697;
t663 = t670 * t691;
t664 = t670 * t692;
t215 = t1286 * t663 - t587 * t664 + t1486;
t1562 = t1487 * t819;
t712 = t1461 * (pkin(4) * t778 + t390 * t751 - t766 * t844 + t1562);
t708 = t712 * t830;
t711 = t1461 * (pkin(4) * t1527 - t1522 * t766);
t709 = t833 * t711;
t673 = t1379 * t708 - t1530 * t766 - t1541 * t709;
t667 = t1460 * t699 * t673;
t672 = t1381 * t708 - t1531 * t766 - t1542 * t709;
t665 = -t376 * t667 + t672 * t697;
t263 = 0.1e1 + t665;
t1369 = t215 * t263;
t1572 = -t1369 / 0.2e1;
t1197 = pkin(1) * t1406;
t1288 = t568 + t569;
t550 = 0.2e1 * t1288 * t1197;
t554 = 0.1e1 / t620;
t1456 = 0.1e1 / t978 ^ 2;
t1312 = t569 * t1456;
t1060 = -t1312 * t568 + 0.1e1;
t1058 = 0.1e1 / t1060;
t976 = 0.1e1 / t978;
t921 = t1058 * t976;
t910 = t554 * t921 / 0.2e1;
t984 = pkin(1) * pkin(6) * t1456 * t1058;
t971 = 0.2e1 * t585 * t984;
t503 = -t550 * t910 + t620 * t971;
t1570 = t454 * t503;
t706 = t711 * t829;
t707 = t712 * t829;
t1569 = t1379 * t706 + t1381 * t707;
t717 = t725 * t829;
t718 = t726 * t829;
t1568 = t1379 * t717 + t1381 * t718;
t480 = -t836 - t1282;
t1407 = pkin(5) * t480;
t484 = -pkin(5) * t1576 - pkin(4);
t1550 = 0.2e1 * t484;
t1496 = t1449 * t1550 - t1407;
t338 = pkin(5) * t1527 - t1496 * t766;
t771 = t484 * t774;
t1448 = pkin(4) * t1463;
t845 = t1448 * t1573;
t339 = pkin(5) * t778 + t1407 * t1487 + t390 * t771 - t766 * t845;
t420 = -t484 * t480 + t1581;
t416 = 0.1e1 / t420;
t417 = 0.1e1 / t420 ^ 2;
t418 = t416 * t417;
t421 = -t1468 * t484 - t480 * t849;
t419 = t421 ^ 2;
t385 = t417 * t419 + 0.1e1;
t383 = 0.1e1 / t385;
t1405 = pkin(9) * t383;
t827 = t836 * t1405;
t804 = t418 * t421 * t827;
t817 = t417 * t827;
t813 = 0.2e1 * t817;
t1567 = -0.4e1 * t338 * t804 + t339 * t813;
t616 = 0.1e1 / pkin(9);
t822 = t766 * t829;
t332 = (t338 * t830 - t420 * t822) * t616;
t333 = (t339 * t830 - t421 * t822) * t616;
t384 = 0.1e1 / t385 ^ 2;
t1345 = t417 * t421;
t824 = t836 * t1345;
t815 = pkin(9) * t824;
t803 = t384 * t815;
t831 = t416 * t836;
t826 = pkin(9) * t831;
t816 = t384 * t826;
t1566 = -0.2e1 * t332 * t803 + 0.2e1 * t333 * t816;
t372 = pkin(5) * t1526 - t1496 * t487;
t821 = t487 * t829;
t358 = (t372 * t830 - t420 * t821) * t616;
t373 = t1407 * t1576 + t430 * t771 - t487 * t845 + t1581;
t359 = (t373 * t830 - t421 * t821) * t616;
t1565 = -t358 * t803 + t359 * t816;
t571 = t920 + t1283;
t966 = t981 * t571;
t1564 = t968 - t966;
t601 = t608 ^ 2;
t602 = t611 ^ 2;
t1284 = t601 + t602;
t597 = pkin(1) * t1417 + pkin(5);
t690 = pkin(1) * t692;
t684 = t1419 * t690;
t322 = t691 * t597 - t684;
t248 = t263 * pkin(12) + t322;
t1094 = t1284 * t248;
t515 = t603 * t872 + t605 * t873;
t1563 = t515 * t1580;
t281 = 0.1e1 + t670;
t687 = t691 * pkin(5);
t274 = t281 * pkin(12) + t687;
t1098 = t274 * t1284;
t1505 = qJD(1) * t1286;
t1561 = t587 * t1505;
t1447 = t1464 * t1463;
t1194 = t833 * t834 * t1447;
t1161 = -0.4e1 * t1194;
t1074 = t616 * t1161;
t1539 = t766 * t487;
t765 = pkin(5) * t1487;
t764 = pkin(4) * t765;
t1560 = t616 * t834 * t764 + t1074 * t1539;
t1120 = t1405 * t1449;
t1061 = t416 * t1120;
t1454 = 0.4e1 * t766;
t1559 = t1061 * t1454 + t338 * t813;
t1453 = 0.2e1 * t766;
t1555 = t1453 * t1576 + 0.2e1 * t1487 * t1573;
t1554 = t868 * t1583 + t888 * t1584 - t982 * t886;
t1488 = t869 * t1583 + t889 * t1584 - t982 * t887;
t739 = t742 * t1161;
t740 = t741 * t1194;
t1528 = t1379 * t739 + 0.4e1 * t1381 * t740;
t1529 = -0.4e1 * t1379 * t740 + t1381 * t739;
t696 = t376 * t699;
t694 = t1460 * t696;
t1474 = -t1528 * t694 + t1529 * t697;
t1475 = -t1530 * t694 + t1531 * t697;
t1549 = -0.2e1 * t487;
t485 = t487 ^ 2;
t1193 = 0.2e1 / t355 ^ 2;
t700 = t698 * t699;
t651 = (-t375 * t676 * t700 + t675 * t696) * t1193;
t647 = t651 * t696;
t648 = t698 * t651;
t1446 = pkin(5) * t1464;
t1525 = t430 * t487 * t782 - t1585;
t1296 = -0.4e1 * t1447;
t1523 = t1579 * t1449;
t422 = 0.2e1 * t1296 * t485 + 0.2e1 * t1523 * t1576;
t429 = t430 ^ 2;
t825 = t1461 * t830;
t457 = t782 / t783;
t835 = t457 * t843 / 0.4e1;
t846 = 0.4e1 * t487 * t1576;
t681 = (pkin(4) * t1525 + t846 * t1446 + t1576 * t844 + t422 * t751 + t429 * t835 + t1587) * t825;
t1295 = 0.4e1 * t1446;
t761 = t782 * t1576;
t1426 = -t457 / 0.4e1;
t842 = t487 * t1426;
t1483 = -t422 * t757 - t429 * t842 - t430 * t761 - t1557;
t832 = t1461 * t833;
t682 = (pkin(4) * t1483 + t1295 * t485 + t1522 * t1576) * t832;
t1553 = 0.2e1 * t376;
t693 = t1460 * t700 * t1553;
t714 = t1381 * t717;
t715 = t1379 * t718;
t124 = (t1381 * t681 - t682 * t1542 + t1549 * t1568) * t697 - (t1379 * t681 - t1541 * t682 + t1549 * t715 + t1573 * t714) * t694 + (t676 * t693 + t647) * t676 + (-0.2e1 * t671 - t648) * t675 + t1475 * t1576 + t1474 * t485;
t1263 = qJD(2) * t263;
t668 = t699 * t672;
t669 = t700 * t673;
t649 = (-t375 * t669 + t376 * t668) * t1193;
t645 = t649 * t696;
t646 = t698 * t649;
t1540 = t390 * t430;
t1187 = t1463 * t1539;
t722 = 0.2e1 * t782 * (-0.4e1 * t1464 * t1187 + t1579 * t764);
t721 = -t722 / 0.2e1;
t748 = t782 * t1487;
t1478 = -t430 * t748 / 0.2e1 - t487 * t721 - t778 - t390 * t761 / 0.2e1 - t842 * t1540;
t1492 = -(pkin(4) * t1478 + t1295 * t1539 + t1547 * t764 - t1562) * t832 / 0.2e1 + t1487 * t731;
t1490 = -t430 * t766 * t774 + t1527;
t1533 = (t1490 * pkin(4) + t1446 * t1555 + t835 * t1540 + t722 * t1544 + t766 * t819) * t825 + t1487 * t732;
t666 = t1460 * t668;
t703 = t1381 * t706;
t704 = t1379 * t707;
t650 = t669 * t674 * t1553 + (-t1569 * t487 + t1533 * t1381 + t1492 * t1379 - (-t1529 * t487 + t1568) * t766) * t697 - (-(-t703 + t704) * t487 - t1492 * t1381 + t1533 * t1379 - (-t1528 * t487 - t714 + t715) * t766) * t694 - t676 * t666 - t675 * t667;
t87 = t645 * t676 - t646 * t675 + t650;
t98 = t647 * t673 - t648 * t672 + t650;
t1399 = t87 - t98;
t936 = t98 * t1263 + (t124 * t263 - t1399 * t281) * qJD(3);
t1252 = qJD(3) * t281;
t1552 = -0.2e1 * t766;
t1314 = t1458 / t890 * t552 ^ 2;
t1107 = -t1314 / 0.4e1;
t543 = -0.8e1 * t961 - 0.2e1 * (t894 + t895) * t964;
t1480 = t982 * t1458 * t552 + t981 * t1107 + t543 * t954 + t1536;
t476 = pkin(7) * t1480 + 0.2e1 * t955 * t964 + t892 + 0.4e1 * t962;
t913 = -t918 / 0.2e1;
t909 = t1465 * t913;
t1482 = t476 * t909 - t1554;
t897 = 0.6e1 * t982 * t973;
t956 = t552 * t970;
t478 = t960 - pkin(7) * t956 + t955 * t1314 / 0.4e1 + t543 * t924 - t1535 + t1462 * t897;
t896 = t1419 * t909;
t425 = t1482 * t1417 - t1419 * t1488 + t478 * t896;
t908 = t1465 * t912;
t1481 = t478 * t908 + t1488;
t426 = t1417 * t1481 - t1419 * t1554 + t476 * t896;
t387 = t1082 * t426 + t1083 * t425;
t444 = t766 ^ 2;
t1524 = t390 * t766 * t782 - t387 * t1468;
t356 = 0.2e1 * t1296 * t444 + 0.2e1 * t1523 * t387;
t388 = -t1082 * t425 + t1083 * t426;
t389 = t390 ^ 2;
t763 = t1487 * t1454;
t679 = (pkin(4) * t1524 + t763 * t1446 + t356 * t751 + t387 * t844 + t388 * t819 + t389 * t835) * t825;
t1484 = -t388 * t1468 - t356 * t757 - t389 * t842 - t390 * t748;
t680 = (pkin(4) * t1484 + t1295 * t444 + t1522 * t387) * t832;
t99 = (t1381 * t679 - t680 * t1542 + t1552 * t1569) * t697 - t672 * t646 - (t1379 * t679 + t703 * t1453 - t1541 * t680 + t1552 * t704) * t694 + t1474 * t444 + t1475 * t387 + (t673 * t693 + t645 - 0.2e1 * t666) * t673;
t937 = (t1399 * t263 + t281 * t99) * qJD(2) + t87 * t1252;
t513 = t515 ^ 2;
t493 = t511 * t513 + 0.1e1;
t491 = 0.1e1 / t493;
t1548 = 0.2e1 * t491;
t1330 = t511 * t515;
t1167 = t491 * t1330;
t1335 = t491 * t510;
t470 = t1518 * t605 + t1520 * t603;
t406 = -t469 * t1167 + t1335 * t470;
t405 = t406 + 0.1e1;
t823 = t616 * t830;
t1543 = pkin(5) * t823;
t1185 = t1419 * pkin(1);
t689 = pkin(1) * t691;
t350 = t1419 * t689;
t217 = t663 * t1185 + t1417 * t690 + t597 * t664 + t350;
t59 = pkin(12) * t98 + t217;
t658 = t665 * t692;
t656 = pkin(5) * t658;
t69 = t87 * pkin(12) + t656;
t1401 = t59 - t69;
t535 = 0.1e1 / t538 ^ 2;
t1327 = t539 * t535;
t1310 = t584 * t620;
t1316 = t554 * t550;
t1404 = t580 * pkin(1);
t505 = (-t1310 + (-t1316 / 0.2e1 + t570 - 0.2e1 * t1404) * t585) * pkin(6);
t534 = 0.1e1 / t538;
t1331 = t505 * t534 * t535;
t1108 = t1316 / 0.2e1;
t1311 = t585 ^ 2 * t618;
t1186 = pkin(1) * t1311;
t507 = t580 * t1108 - 0.2e1 * t1186 + (t584 * t570 + t1309) * pkin(6);
t537 = t539 ^ 2;
t528 = t535 * t537 + 0.1e1;
t1538 = 0.2e1 * (t1327 * t507 - t1331 * t537) / t528 ^ 2;
t582 = pkin(1) * t982 - pkin(7);
t506 = (0.2e1 * t582 * t974 + t1564 + t946) * pkin(1);
t1199 = -t1458 / 0.2e1;
t969 = t982 * t571;
t509 = t582 * t552 * t1199 + (-0.2e1 * pkin(7) * t972 - t1536 - t969) * pkin(1);
t540 = -pkin(1) * t1536 - t582 * t571;
t541 = pkin(1) * t966 - t582 * t621;
t613 = cos(pkin(18));
t905 = t617 * t912;
t898 = t613 * t905;
t610 = sin(pkin(18));
t907 = t610 * t913;
t900 = t617 * t907;
t941 = t617 * t952;
t927 = t613 * t941;
t929 = t610 * t941;
t471 = t506 * t898 + t509 * t900 + t540 * t927 - t541 * t929;
t906 = t613 * t912;
t520 = (t540 * t906 + t541 * t907) * t617;
t516 = 0.1e1 / t520;
t517 = 0.1e1 / t520 ^ 2;
t1537 = t471 * t516 * t517;
t1041 = t487 * t1061;
t1344 = t418 * t419;
t323 = -0.2e1 * t1344 * t372 + 0.2e1 * t1345 * t373;
t1109 = t484 * t1426;
t805 = t383 * t815;
t795 = 0.2e1 * t805;
t820 = t616 * t829;
t809 = t487 * t820;
t811 = t766 * t820;
t818 = t383 * t826;
t814 = -0.2e1 * t818;
t652 = (t1560 * t421 - t339 * t809 - t373 * t811 + (t1109 * t1540 + t1407 * t766 + t1448 * t1555 + t484 * t721) * t823) * t814 + ((0.4e1 * pkin(4) * t1187 + t1550 * t764 - t480 * t765) * t823 - t338 * t809 - t372 * t811 + t1560 * t420) * t795 + (t1478 * t795 + t1490 * t814) * t1543;
t793 = t372 * t804;
t806 = t373 * t817;
t807 = t372 * t817;
t1040 = t1120 * t1345;
t990 = 0.4e1 * t332 * t1040;
t139 = -t487 * t990 + t652 + (0.4e1 * t1041 + 0.2e1 * t807) * t333 + (-0.4e1 * t793 + 0.2e1 * t806) * t332 + t1566 * t323;
t1011 = t358 * t1040;
t304 = -0.2e1 * t1344 * t338 + 0.2e1 * t1345 * t339;
t144 = t1011 * t1551 + t1559 * t359 + 0.2e1 * t1565 * t304 + t1567 * t358 + t652;
t1534 = t139 + t144;
t1285 = t601 - t602;
t347 = t692 * t1286;
t686 = t691 * t587;
t1532 = t686 + t347;
t1517 = t1578 * t613;
t1516 = t1578 * t610;
t1515 = t1029 * t503;
t1178 = t98 / 0.2e1 - t87 / 0.2e1;
t1514 = t1178 * t1532;
t572 = 0.1e1 / t575 ^ 2;
t1513 = t1466 * t572;
t593 = t609 * pkin(1) - pkin(16);
t574 = -pkin(5) * t587 + t593;
t297 = pkin(10) * t1486 - pkin(12) * t1532 + t574;
t1512 = t297 * t1284;
t1511 = t444 * t1074 + t387 * t820;
t1510 = t485 * t1074 + t1576 * t820;
t659 = t1286 * t664;
t660 = t587 * t663;
t216 = t659 + t660 + t1532;
t1436 = -t216 / 0.2e1;
t321 = t597 * t692 + t350;
t247 = -t263 * pkin(10) - t321;
t1004 = -t247 * t215 / 0.2e1 + t248 * t1436;
t653 = t1286 * t658;
t657 = t665 * t691;
t193 = t587 * t657 + t1532 + t653;
t1362 = t274 * t193;
t1432 = -t1486 / 0.2e1;
t218 = t1185 * t664 - t1417 * t689 - t597 * t663 + t684;
t60 = -t98 * pkin(10) - t218;
t1445 = t60 / 0.2e1;
t1509 = t1432 * t59 + t1445 * t1532 + t1004 - t1362 / 0.2e1;
t192 = t1286 * t657 - t587 * t658 + t1486;
t1372 = t192 * t281;
t1119 = -t1372 / 0.2e1;
t1485 = -t1119 + t1572 + t1514;
t20 = t1485 * t1305;
t1370 = t20 * qJD(1);
t1247 = qJD(4) * t611;
t1144 = t608 * t1247;
t1363 = t263 * t281;
t225 = t1144 * t1363;
t1507 = t1370 + t225;
t1506 = t225 - t1370;
t994 = qJD(2) * (t1486 * t99 + t193 * t263);
t1504 = qJD(2) * (t1532 * t99 - t192 * t263);
t989 = qJD(3) * (t124 * t1486 + t216 * t281);
t1502 = qJD(3) * (t124 * t1532 - t215 * t281);
t526 = 0.1e1 / t528;
t1063 = pkin(2) * t526 * t1197;
t1195 = pkin(6) * t1513;
t1415 = pkin(1) * t585;
t1062 = t1195 * t1415;
t502 = -t1062 * t539 + t1180 * t507;
t1334 = t502 * t534;
t1010 = t1063 * t1334;
t1410 = pkin(2) * t575;
t1188 = t535 * t1410;
t1085 = t526 * t1188;
t1014 = t502 * t505 * t1085;
t1189 = t534 * t1410;
t1015 = t502 * t1189 * t1538;
t500 = -t1062 * t538 + t1180 * t505;
t1016 = t500 * t507 * t1085;
t1315 = t554 / t1313 * t550 ^ 2;
t1421 = -0.2e1 * t1456;
t1455 = t976 * t1456;
t542 = (t1288 * t1545 - 0.8e1 * t1186) * pkin(1);
t1000 = -t1315 / 0.4e1 - t554 * t542 / 0.2e1;
t1090 = t570 - t1316;
t1163 = 0.4e1 * pkin(1) * t1459 * t1513;
t884 = ((0.6e1 * t618 * t584 * t1415 + t1000 * t580 + (t1090 * t585 - t1310) * pkin(6)) * t1180 - 0.2e1 * t507 * t1062 + (t1163 * t1311 + t1195 * t584) * pkin(1) * t539) * t526 * t1189;
t1084 = t539 * t1188;
t1451 = -0.2e1 * t1466;
t885 = ((0.2e1 / t1410 + t538 * t1163) * t1186 + (((-t620 - t1000) * t585 + (-t1090 + 0.2e1 * t1404) * t584) * t1180 + (t1451 * t505 * t585 + t1466 * t538 * t584) * pkin(1) * t572) * pkin(6)) * t526 * t1084;
t953 = 0.1e1 / t1060 ^ 2 * (-0.2e1 * t1312 + (-0.4e1 * t1455 * t569 + t1421) * t568);
t1166 = t500 * t1327;
t983 = t1063 * t1166;
t1190 = t526 * t1410;
t991 = t500 * t539 * t1190 * t1331;
t992 = t500 * t1084 * t1538;
t337 = 0.2e1 * t884 - 0.2e1 * t1014 + 0.4e1 * t1010 - 0.2e1 * t1015 - 0.2e1 * t885 - 0.2e1 * t1016 - 0.4e1 * t983 + 0.4e1 * t991 + 0.2e1 * t992 + t921 * t1315 / 0.4e1 + t542 * t910 - t971 * t1316 + t976 * t953 * t1108 * t1197 - 0.2e1 * t984 * t1310 + (0.8e1 * t1058 * t1455 + t1421 * t953) * t620 * t1467 * t1311;
t357 = 0.4e1 * t1010 - 0.2e1 * t1014 - 0.2e1 * t1015 + 0.2e1 * t884 - 0.2e1 * t885 - 0.4e1 * t983 + 0.4e1 * t991 + 0.2e1 * t992 - 0.2e1 * t1016;
t1501 = qJD(3) * (t337 + t357);
t1104 = t601 / 0.2e1 - t602 / 0.2e1;
t1057 = t1532 * t1104;
t211 = t281 * t1057;
t1225 = t211 * qJD(4);
t1389 = t1532 * t98;
t1008 = t1572 + t1389 / 0.2e1;
t1423 = -t611 / 0.2e1;
t1106 = t192 * t1423;
t1422 = t611 / 0.2e1;
t1110 = t1532 * t1422;
t1359 = t281 * t608;
t19 = t1110 * t608 * t87 + t1008 * t1305 + t1106 * t1359;
t1499 = qJD(2) * t19 + t1305 * t1502 - t1225;
t188 = t263 * t1057;
t1229 = t188 * qJD(4);
t1498 = qJD(3) * t19 + t1305 * t1504 - t1229;
t1390 = t1532 * t87;
t1497 = t1119 + t1390 / 0.2e1;
t378 = atan2(t421 * t823, t420 * t823);
t1416 = sin(t378);
t377 = cos(t378);
t604 = sin(pkin(22));
t606 = cos(pkin(22));
t353 = -t604 * t1416 - t606 * t377;
t1495 = -qJD(2) * t20 - t1225;
t521 = (t540 * t610 * t912 + t541 * t906) * t617;
t1328 = t517 * t521;
t899 = t610 * t905;
t472 = t506 * t899 + t509 * t898 + t540 * t929 + t541 * t927;
t1494 = t471 * t1328 - t472 * t516;
t1493 = qJD(3) * t20 - t1229;
t1118 = t216 * t263 / 0.2e1;
t1371 = t193 * t281;
t26 = t1178 * t1486 - t1371 / 0.2e1 + t1118;
t280 = t281 ^ 2;
t122 = t1305 * (qJD(3) * t280 + t1263 * t281) - qJD(1) * t211;
t262 = t263 ^ 2;
t115 = t1305 * (qJD(2) * t262 + t1252 * t263) - qJD(1) * t188;
t1059 = t1532 * t1574;
t318 = t1532 ^ 2;
t298 = t1285 * t318;
t1479 = (t1252 + t1263) * t1059 - qJD(1) * t298;
t661 = pkin(5) * t663;
t112 = -t124 * pkin(10) + t661;
t655 = pkin(5) * t657;
t68 = -t87 * pkin(10) + t655;
t1400 = t60 - t68;
t688 = t692 * pkin(5);
t275 = -t281 * pkin(10) - t688;
t1477 = -t112 * t263 - t124 * t247 + t1399 * t275 - t1400 * t281;
t195 = t1185 * t658 - t597 * t657;
t56 = -t99 * pkin(10) - t195;
t1476 = t1399 * t247 - t1400 * t263 + t275 * t99 + t281 * t56;
t1438 = t192 / 0.2e1;
t1437 = t215 / 0.2e1;
t293 = t332 * t795 + t333 * t814 + t405;
t1435 = t293 / 0.2e1;
t1177 = atan2(t515, t514);
t1073 = sin(t1177);
t490 = cos(t1177);
t460 = t1073 * t612 + t490 * t609;
t1336 = t490 * t612;
t489 = t1073 * t609;
t461 = -t489 + t1336;
t999 = t1416 * t606 - t377 * t604;
t314 = -t353 * t460 + t461 * t999;
t1434 = t314 / 0.2e1;
t1431 = t1486 / 0.2e1;
t1430 = -t1532 / 0.2e1;
t449 = 0.2e1 * (-t1166 + t1334) * t1190;
t437 = t449 * t932;
t1429 = t437 / 0.2e1;
t1428 = -t449 / 0.2e1;
t1427 = t449 / 0.2e1;
t1425 = -t608 / 0.2e1;
t1424 = t608 / 0.2e1;
t1414 = pkin(2) * t454;
t1413 = pkin(2) * t1029;
t479 = -pkin(2) * t482 - pkin(16);
t1412 = pkin(2) * t479;
t1411 = pkin(2) * t481;
t1409 = pkin(4) * t604;
t1408 = pkin(4) * t606;
t600 = t612 * pkin(1);
t1398 = pkin(1) * qJD(2);
t1397 = pkin(2) * qJD(2);
t1396 = pkin(2) * qJD(3);
t893 = t1362 / 0.2e1 + t275 * t1438 + (t1445 - t68 / 0.2e1) * t1532 + (-t59 / 0.2e1 + t69 / 0.2e1) * t1486 + t1004;
t1 = t893 * t608;
t1395 = t1 * qJD(1);
t1394 = t247 * t60;
t1392 = t275 * t68;
t4 = t893 * t611;
t1388 = t4 * qJD(1);
t1018 = t1104 * t1369;
t5 = -t1104 * t1372 - t1285 * t1514 + t1018;
t1387 = t5 * qJD(1);
t1386 = t608 * t59;
t1385 = t608 * t69;
t1384 = t611 * t59;
t1383 = t611 * t69;
t1378 = qJD(1) * pkin(16);
t1376 = qJD(2) * t99;
t1100 = 0.2e1 * t1405;
t303 = (t358 * t824 - t359 * t831) * t1100;
t277 = t353 * t303;
t278 = t999 * t303;
t393 = pkin(1) * t1073 + t1409 * t405;
t394 = pkin(1) * t490 + t1408 * t405;
t227 = t277 * t394 + t278 * t393;
t1368 = t227 * t293;
t228 = -t277 * t393 + t278 * t394;
t1367 = t228 * t293;
t1366 = t247 * t281;
t1365 = t1485 * qJD(1);
t1364 = t26 * qJD(1);
t1361 = t275 * t263;
t1360 = t281 * t601;
t294 = (t332 * t824 - t333 * t831) * t1100;
t260 = t353 * t294;
t261 = t999 * t294;
t368 = t405 * t460;
t369 = t1336 * t405 - t406 * t489 - t489;
t184 = -t260 * t460 + t261 * t461 - t353 * t368 + t369 * t999;
t1358 = t303 * t184;
t185 = -t260 * t461 - t261 * t460 - t353 * t369 - t368 * t999;
t1357 = t303 * t185;
t654 = t657 / 0.2e1;
t644 = t688 * t1438 - t193 * t687 / 0.2e1 + t656 * t1432 + pkin(5) * t1532 * t654;
t925 = t1430 * t218 + t1432 * t217 + t1436 * t322 + t1437 * t321;
t33 = t644 - t925;
t1356 = t33 * qJD(1);
t1355 = t337 * t449;
t1092 = t1284 * t1532;
t1103 = t1286 * pkin(5);
t577 = t600 + t1103;
t118 = t193 * pkin(10) + t192 * pkin(12) + t577;
t35 = t1092 * t118 - t1512 * t192;
t1354 = t35 * qJD(1);
t401 = t449 * t482;
t1321 = t547 * t401;
t402 = t449 * t933 - t437;
t1325 = t546 * t402;
t366 = -t1321 + t1325 - t1570;
t1353 = t366 * t547;
t1320 = t547 * t402;
t1326 = t546 * t401;
t367 = t1320 + t1326 + t1515;
t1352 = t367 * t546;
t1351 = t368 * t461;
t1350 = t369 * t460;
t135 = t216 * pkin(10) + t215 * pkin(12) + t1103;
t40 = t1092 * t135 - t1512 * t215;
t1349 = t40 * qJD(1);
t1348 = t406 * t490;
t1347 = 0.2e1 * (t1330 * t470 - t513 * t1580) / t493 ^ 2;
t1105 = t139 / 0.2e1 - t144 / 0.2e1;
t230 = -t277 * t461 - t278 * t460;
t1113 = t230 * t1435;
t42 = t1113 - t1357 / 0.2e1 + t1105 * t314;
t1343 = t42 * qJD(1);
t432 = t449 + t503;
t1342 = t432 * t1029;
t1341 = t432 * t454;
t229 = -t277 * t460 + t278 * t461;
t1114 = t229 * t1435;
t315 = t353 * t461 + t460 * t999;
t44 = t1114 - t1358 / 0.2e1 + t1105 * t315;
t1340 = t44 * qJD(1);
t45 = t118 * t1512;
t1339 = t45 * qJD(1);
t1338 = t470 * t511;
t1333 = t503 * t546;
t1332 = t503 * t547;
t1308 = t593 * t587;
t1306 = t608 * t192;
t65 = t135 * t1512;
t1304 = t65 * qJD(1);
t1033 = t118 * t1486 + t193 * t297;
t70 = t1033 * t608;
t1303 = t70 * qJD(1);
t71 = t1033 * t611;
t1302 = t71 * qJD(1);
t308 = t353 * t394 + t393 * t999;
t309 = t353 * t393 - t394 * t999;
t73 = -t228 * t315 / 0.2e1 - t308 * t229 / 0.2e1 + t227 * t1434 + t309 * t230 / 0.2e1;
t1301 = t73 * qJD(1);
t1300 = t73 * qJD(2);
t1003 = t1430 * t247 + t1431 * t248;
t980 = t118 / 0.2e1 + t1003;
t74 = t980 * t608;
t1299 = t74 * qJD(1);
t77 = t980 * t611;
t1298 = t77 * qJD(1);
t1297 = 0.4e1 * t1448;
t1294 = t139 - t144;
t1115 = t1359 / 0.2e1;
t1116 = t1361 / 0.2e1;
t1293 = t247 * t1115 + t608 * t1116;
t1292 = t611 * t1116 + t1366 * t1422;
t194 = t657 * t1185 + t597 * t658;
t1052 = t1431 * t263 + t1438;
t140 = t1052 * t608;
t1281 = qJD(1) * t140;
t143 = t1052 * t611;
t1280 = qJD(1) * t143;
t1051 = t1431 * t281 + t1437;
t169 = t1051 * t608;
t1279 = qJD(1) * t169;
t172 = t1051 * t611;
t1278 = qJD(1) * t172;
t1274 = qJD(1) * t314;
t1273 = qJD(1) * t315;
t1272 = qJD(1) * t1486;
t1271 = qJD(1) * t1532;
t431 = (t460 * t606 - t461 * t604) * pkin(4) + t593;
t1270 = qJD(1) * t431;
t1269 = qJD(1) * t454;
t1268 = qJD(1) * t1029;
t1267 = qJD(1) * t481;
t1266 = qJD(1) * t482;
t1265 = qJD(1) * t611;
t1264 = qJD(1) * t612;
t519 = t521 ^ 2;
t498 = t517 * t519 + 0.1e1;
t496 = 0.1e1 / t498;
t408 = t1494 * t496;
t1262 = qJD(2) * t408;
t1261 = qJD(2) * t1029;
t1260 = qJD(2) * t454;
t1259 = qJD(2) * t481;
t1258 = qJD(2) * t482;
t1257 = qJD(2) * t608;
t1256 = qJD(2) * t609;
t1255 = qJD(2) * t611;
t1254 = qJD(2) * t612;
t1253 = qJD(3) * t124;
t1251 = qJD(3) * t431;
t1250 = qJD(3) * t608;
t1249 = qJD(3) * t611;
t1248 = qJD(4) * t608;
t1030 = t135 * t1486 + t216 * t297;
t100 = t1030 * t608;
t1246 = t100 * qJD(1);
t101 = t1030 * t611;
t1245 = t101 * qJD(1);
t1002 = t1430 * t275 + t1431 * t274;
t979 = t135 / 0.2e1 + t1002;
t104 = t979 * t608;
t1244 = t104 * qJD(1);
t107 = t979 * t611;
t1243 = t107 * qJD(1);
t108 = t184 * t314 + t185 * t315;
t1242 = t108 * qJD(1);
t111 = t1486 * t192 - t1532 * t193;
t109 = t111 * t611;
t1241 = t109 * qJD(1);
t110 = t111 * t608;
t1240 = t110 * qJD(1);
t1239 = t111 * qJD(1);
t127 = t1486 * t215 - t1532 * t216;
t125 = t127 * t611;
t1238 = t125 * qJD(1);
t126 = t127 * t608;
t1237 = t126 * qJD(1);
t1236 = t127 * qJD(1);
t130 = t227 * t309 + t228 * t308;
t1235 = t130 * qJD(2);
t138 = t229 * t314 + t230 * t315;
t1234 = t138 * qJD(1);
t334 = t600 + (t368 * t604 + t369 * t606) * pkin(4);
t173 = -t185 * t431 - t314 * t334;
t1233 = t173 * qJD(1);
t174 = t184 * t431 + t315 * t334;
t1232 = t174 * qJD(1);
t179 = t1486 * t577 + t193 * t574;
t1231 = t179 * qJD(1);
t180 = t1532 * t577 - t192 * t574;
t1230 = t180 * qJD(1);
t683 = t347 / 0.2e1 + t686 / 0.2e1;
t191 = t653 / 0.2e1 + t587 * t654 + t683;
t1228 = t191 * qJD(1);
t198 = -t1103 * t1486 - t574 * t216;
t1227 = t198 * qJD(1);
t199 = -t1103 * t1532 + t574 * t215;
t1226 = t199 * qJD(1);
t214 = t659 / 0.2e1 + t660 / 0.2e1 + t683;
t1224 = t214 * qJD(1);
t312 = ((t454 * t1428 - t366 / 0.2e1 - t1570 / 0.2e1) * t547 + (t1029 * t1428 - t1515 / 0.2e1 + t367 / 0.2e1) * t546) * pkin(2);
t1223 = t312 * qJD(1);
t327 = -t1029 * t367 - t366 * t454;
t1222 = t327 * qJD(1);
t328 = t368 * t460 - t369 * t461;
t1221 = t328 * qJD(1);
t335 = -t1414 * t402 + t479 * t367;
t1220 = t335 * qJD(1);
t336 = t1413 * t402 - t479 * t366;
t1219 = t336 * qJD(1);
t1218 = t337 * qJD(3);
t915 = (-t1323 / 0.2e1 - t1317 / 0.2e1) * t503 + t1325 / 0.2e1 - t1321 / 0.2e1;
t341 = t1341 / 0.2e1 + t915;
t1217 = t341 * qJD(1);
t914 = (-t1318 / 0.2e1 + t1322 / 0.2e1) * t503 + t1326 / 0.2e1 + t1320 / 0.2e1;
t343 = -t1342 / 0.2e1 + t914;
t1216 = t343 * qJD(1);
t1215 = t357 * qJD(3);
t362 = t369 * t593 + t460 * t600;
t1214 = t362 * qJD(1);
t363 = -t368 * t593 + t461 * t600;
t1213 = t363 * qJD(1);
t370 = t401 * t482 + t402 * t481;
t1212 = t370 * qJD(1);
t499 = atan2(t521, t520);
t494 = sin(t499);
t495 = cos(t499);
t371 = (t494 ^ 2 - t495 ^ 2) * t408;
t1211 = t371 * qJD(1);
t891 = -t931 / 0.2e1 - t934 / 0.2e1;
t380 = (-t482 / 0.2e1 + t891) * t449;
t1210 = t380 * qJD(1);
t919 = -t933 / 0.2e1;
t382 = t1429 + (t919 - t481 / 0.2e1) * t449;
t1209 = t382 * qJD(1);
t386 = -t1029 ^ 2 + t454 ^ 2;
t1208 = t386 * qJD(1);
t403 = t1029 * t479 + t1411 * t454;
t1207 = t403 * qJD(1);
t404 = -t1029 * t1411 + t479 * t454;
t1206 = t404 * qJD(1);
t450 = -t481 ^ 2 + t482 ^ 2;
t1205 = t450 * qJD(1);
t559 = -t1286 ^ 2 + t587 ^ 2;
t1204 = t559 * qJD(1);
t561 = t1286 * t600 + t1308;
t1203 = t561 * qJD(1);
t562 = t1286 * t593 - t587 * t600;
t1202 = t562 * qJD(1);
t590 = t609 ^ 2 - t612 ^ 2;
t1201 = t590 * qJD(1);
t1198 = qJD(2) + qJD(3);
t1191 = t593 * t600;
t1184 = qJD(1) * t1412;
t1183 = t503 * t1397;
t1182 = t503 * t1396;
t1181 = pkin(15) * t408 * t494;
t1176 = t401 * t1378;
t1175 = t402 * t1378;
t1174 = pkin(16) * t1267;
t1173 = pkin(16) * t1266;
t1172 = t609 * t1378;
t1171 = pkin(16) * t1264;
t1164 = t87 * t1424;
t67 = -t1383 / 0.2e1;
t1157 = t608 * t1272;
t1156 = t1486 * t1265;
t1155 = qJD(1) * t408 * t495;
t1154 = t608 * t1265;
t1153 = t247 * t1263;
t1152 = t495 * t1262;
t1151 = t275 * t1252;
t1150 = t263 * t1248;
t1149 = t263 * t1247;
t1148 = t281 * t1248;
t1147 = t281 * t1247;
t1146 = t1486 * t1248;
t1145 = t1486 * t1247;
t1143 = t185 * t1274;
t1142 = t230 * t1274;
t1141 = t184 * t1273;
t1140 = t229 * t1273;
t1139 = t193 * t1272;
t1138 = t216 * t1272;
t1137 = t192 * t1271;
t1136 = t215 * t1271;
t1135 = t229 * t1270;
t1134 = t230 * t1270;
t1133 = t334 * t1270;
t1132 = t367 * t1269;
t1131 = t1029 * t1269;
t1130 = t366 * t1268;
t1129 = t454 * t1268;
t1128 = qJD(1) * t1350;
t1127 = qJD(1) * t1351;
t1126 = t401 * t1267;
t1125 = t402 * t1266;
t1124 = t481 * t1266;
t1123 = t574 * t577 * qJD(1);
t1122 = qJD(1) * t1308;
t1121 = t609 * t1254;
t1112 = t1486 * t1425;
t1111 = t1486 * t1422;
t1102 = t1417 * qJD(2);
t1101 = t1417 * qJD(3);
t1099 = t263 * t1284;
t1095 = t1285 * t1532;
t1093 = t1284 * t281;
t1081 = t402 * t1184;
t1080 = t481 * t1184;
t1079 = -qJD(4) - t1272;
t1078 = qJD(2) * t1185;
t1077 = qJD(1) * t1181;
t1076 = pkin(15) * t1155;
t1075 = t1330 * t1347;
t1072 = t601 * t1137;
t1071 = t602 * t1137;
t1070 = t601 * t1136;
t1069 = t602 * t1136;
t1068 = t262 * t1144;
t1067 = t280 * t1144;
t1066 = t318 * t1144;
t1065 = t494 * t1152;
t1064 = t1532 * t1154;
t1056 = t593 * t1505;
t1055 = -0.2e1 * t1532 * t1144;
t1054 = -0.2e1 * t1064;
t1053 = 0.2e1 * t1064;
t1050 = t247 * t99 + t263 * t56;
t1049 = t247 * t98 + t263 * t60;
t1047 = t275 * t87 + t281 * t68;
t47 = -t217 * t263 - t322 * t98;
t48 = t218 * t263 + t321 * t98;
t55 = pkin(12) * t99 + t194;
t1042 = qJD(2) * (-t247 * t263 - t55);
t22 = t26 * t608;
t37 = t1178 * t608;
t1039 = qJD(1) * t22 + qJD(4) * t37;
t23 = t26 * t611;
t39 = t1178 * t611;
t1038 = -qJD(1) * t23 - qJD(4) * t39;
t1034 = t112 * t281 + t124 * t275;
t128 = t322 * t217 + t321 * t218;
t662 = pkin(5) * t664;
t113 = t124 * pkin(12) + t662;
t1028 = qJD(3) * (-t275 * t281 - t113);
t1027 = t1079 * t608;
t1026 = t1079 * t611;
t1025 = t574 * pkin(5) * t1505;
t1024 = qJD(2) * t192 + qJD(3) * t215;
t1022 = -qJD(3) * t401 - t1258;
t1021 = -qJD(3) * t402 + t1259;
t1020 = t406 * t1073;
t901 = t603 * t908;
t1019 = -t470 * t510 * t1347 + t1335 * (t1481 * t605 + t1554 * t603 + t476 * t901) - (t1482 * t605 + t1488 * t603 + t478 * t901) * t1167;
t1017 = (t546 ^ 2 + t547 ^ 2) * t619 * t1215;
t1009 = t1371 / 0.2e1 + t87 * t1431;
t1007 = t1431 * t98 + t1118;
t1001 = -t1361 / 0.2e1 - t1366 / 0.2e1;
t998 = qJD(4) * t191 + t1139;
t997 = qJD(4) * t214 + t1138;
t993 = (qJD(3) * t98 + t1376) * t263;
t988 = (qJD(2) * t87 + t1253) * t281;
t987 = t503 * (qJD(2) + (t432 + t449) * qJD(3));
t986 = t1024 * t1532;
t985 = (qJD(2) * t193 + qJD(3) * t216) * t1486;
t119 = qJD(2) * t188 + qJD(3) * t211 + t1154 * t318;
t146 = -t1360 * t263 + t1363 * t602;
t204 = t1285 * t262;
t945 = qJD(2) * t204 - qJD(3) * t146 + t1053 * t263;
t231 = t1285 * t280;
t944 = -qJD(2) * t146 + qJD(3) * t231 + t1053 * t281;
t939 = qJD(2) * (-t1486 * t55 + t1532 * t56 - t192 * t247 - t193 * t248);
t938 = qJD(3) * (t112 * t1532 - t113 * t1486 - t215 * t275 - t216 * t274);
t923 = 0.2e1 * t927;
t802 = -0.2e1 * t811;
t801 = -0.2e1 * t809;
t50 = -t281 * t656 - t687 * t87;
t49 = -t281 * t655 + t688 * t87;
t598 = qJD(3) * t1185;
t591 = t609 * t1264;
t589 = qJD(2) * t1191;
t588 = qJD(1) * t1191;
t565 = t1198 * t587;
t477 = (t1199 * t543 + t1107) * t582 + (pkin(7) * t897 + t1564 - t956) * pkin(1);
t475 = (t969 + (-0.2e1 * t582 * t982 + 0.4e1 * t972) * pkin(7) + t1480) * pkin(1);
t407 = t408 ^ 2;
t391 = t494 * t1155;
t381 = t1427 * t481 + t449 * t919 + t1429;
t379 = t1427 * t482 + t449 * t891;
t342 = t1342 / 0.2e1 + t914;
t340 = -t1341 / 0.2e1 + t915;
t331 = 0.2e1 * t1494 * (t1328 * t472 - t1537 * t519) / t498 ^ 2 + ((t475 * t899 + t477 * t898 + 0.2e1 * t506 * t929 + t509 * t923) * t516 - (t475 * t898 + t477 * t900 + t506 * t923 - 0.2e1 * t509 * t929) * t1328 + (t1328 * t1516 + t1517 * t516) * t541 + (-t1328 * t1517 + t1516 * t516) * t540 + 0.2e1 * (t1537 * t521 - t472 * t517) * t471) * t496;
t330 = (t1075 + (-t1338 + t1563) * t1548) * t469 + t1019;
t325 = pkin(1) * t1348 + t1409 * t330;
t324 = -pkin(1) * t1020 + t1408 * t330;
t313 = t1333 * t1413 / 0.2e1 + t1332 * t1414 / 0.2e1 + t1352 / t1451 + (t1353 / 0.2e1 + (-t1319 / 0.2e1 - t1324 / 0.2e1) * t449) * pkin(2);
t264 = t281 * t1055;
t242 = t263 * t1055;
t181 = -0.2e1 * ((pkin(5) * t1525 + t1109 * t429 + t1407 * t487 + t846 * t1448 + t1576 * t845 + t422 * t771) * t823 + t373 * t801 + t1510 * t421) * t818 + 0.2e1 * ((t1297 * t485 + t1496 * t1576) * t823 + t372 * t801 + t1510 * t420 + t1483 * t1543) * t805 + 0.2e1 * t1011 * t1549 + 0.2e1 * (t807 + 0.2e1 * t1041) * t359 + 0.2e1 * (t806 - 0.2e1 * t793) * t358 + 0.2e1 * t1565 * t323;
t178 = -t260 * t393 + t261 * t394 + t324 * t353 + t325 * t999;
t177 = t260 * t394 + t261 * t393 - t324 * t999 + t325 * t353;
t171 = t1111 * t281 + t1423 * t215;
t170 = t1112 * t281 + t1424 * t215;
t145 = t146 * qJD(4);
t142 = t1111 * t263 + t1106;
t141 = t263 * t1112 + t1306 / 0.2e1;
t129 = ((pkin(5) * t1524 + t1109 * t389 + t1407 * t388 + t763 * t1448 + t356 * t771 + t387 * t845) * t823 + t339 * t802 + t1511 * t421) * t814 + ((t1297 * t444 + t1496 * t387) * t823 + t338 * t802 + t1511 * t420 + t1484 * t1543) * t795 - t766 * t990 + t1019 + t1559 * t333 + t1567 * t332 + t1566 * t304 + (-0.2e1 * t1338 * t491 + t1548 * t1563 + t1075) * t469;
t123 = qJD(2) * t191 + qJD(3) * t214;
t106 = -t1002 * t611 + t135 * t1422;
t105 = t1002 * t608 + t135 * t1425;
t103 = t139 * t308 + t1367;
t102 = -t139 * t309 - t1368;
t76 = -t1003 * t611 + t118 * t1422;
t75 = t1003 * t608 + t118 * t1425;
t72 = t73 * qJD(3);
t66 = -t1385 / 0.2e1;
t58 = -t1384 / 0.2e1;
t57 = -t1386 / 0.2e1;
t43 = t1114 + t1358 / 0.2e1 + t1534 * t315 / 0.2e1;
t41 = t1113 + t1357 / 0.2e1 + t1534 * t1434;
t38 = (t87 + t98) * t1422;
t36 = t1424 * t98 + t1164;
t34 = t644 + t925;
t32 = t1047 * t611;
t31 = t1047 * t608;
t30 = t1049 * t611;
t29 = t1049 * t608;
t28 = -t1007 - t1009;
t27 = t1008 + t1497;
t24 = t1111 * t98 + (t1009 + t1118) * t611;
t21 = t1007 * t608 + t1115 * t193 + t1164 * t1486;
t16 = t1001 * t611 + t58 + t67;
t15 = t1001 * t608 + t57 + t66;
t14 = t67 + t1384 / 0.2e1 + t1292;
t13 = t58 + t1383 / 0.2e1 + t1292;
t12 = t66 + t1386 / 0.2e1 + t1293;
t11 = t57 + t1385 / 0.2e1 + t1293;
t10 = t1098 * t69 + t1392;
t9 = t1094 * t59 + t1394;
t8 = t1093 * t69 + t1098 * t87;
t7 = t1094 * t98 + t1099 * t59;
t6 = -t601 * t1390 / 0.2e1 + t1360 * t1438 - t1104 * t1389 + t1018 + t1497 * t602;
t3 = t1106 * t275 + t1110 * t68 + t1486 * t67 + t1509 * t611;
t2 = t69 * t1112 + t68 * t1532 * t1424 - t275 * t1306 / 0.2e1 + t1509 * t608;
t17 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1121, t590 * qJD(2), 0, t1121, 0, 0, -pkin(16) * t1254, pkin(16) * t1256, 0, 0, t1586, t1198 * t559, 0, -t1586, 0, 0, t562 * qJD(2) + t1500 * t593, qJD(2) * t561 + qJD(3) * t1308, 0, t589, -t986, qJD(2) * t111 + qJD(3) * t127, 0, t985, 0, 0, qJD(2) * t179 - qJD(3) * t198, qJD(2) * t180 - qJD(3) * t199, 0, (pkin(5) * t1500 + t577 * qJD(2)) * t574, -t602 * t986 - t1066, qJD(4) * t298 + t1024 * t1059, -qJD(2) * t109 - qJD(3) * t125 - t1146 * t1532, -t601 * t986 + t1066, qJD(2) * t110 + qJD(3) * t126 - t1145 * t1532, t985, qJD(2) * t71 + qJD(3) * t101 - t1146 * t297, -qJD(2) * t70 - qJD(3) * t100 - t1145 * t297, -qJD(2) * t35 - qJD(3) * t40, qJD(2) * t45 + qJD(3) * t65, -t1065, t371 * qJD(2), 0, t1065, 0, 0, -qJD(2) * t1181, -pkin(15) * t1152, 0, 0, -qJD(2) * t1351, t328 * qJD(2), 0, qJD(2) * t1350, 0, 0, t362 * qJD(2), t363 * qJD(2), 0, t589, t1022 * t481, qJD(2) * t450 + qJD(3) * t370, 0, t1021 * t482, 0, 0, t1021 * pkin(16), t1022 * pkin(16), 0, 0, (-qJD(3) * t366 + t1260) * t1029, qJD(2) * t386 + qJD(3) * t327, 0, -(qJD(3) * t367 + t1261) * t454, 0, 0, -qJD(2) * t403 - qJD(3) * t335, -qJD(2) * t404 - qJD(3) * t336, 0, -t1021 * t1412, (qJD(2) * t184 + qJD(3) * t229) * t315, qJD(2) * t108 + qJD(3) * t138, 0, (qJD(2) * t185 + qJD(3) * t230) * t314, 0, 0, qJD(2) * t173 - t1251 * t230, qJD(2) * t174 + t1251 * t229, 0, t431 * t334 * qJD(2); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t591, t1201, -t1256, t591, -t1254, 0, -t1171, t1172, 0, 0, t1561, t1204, t565, -t1561, -t1556, 0, t1202, t1203, (t1286 * t1419 - t1417 * t587) * t1398, t588, -t1137, t1239, t27 * qJD(3) + t1504, t1139, t28 * qJD(3) - t994, 0, t1231, t1230, (-t1486 * t194 - t1532 * t195 + t192 * t321 - t193 * t322) * qJD(2) + t34 * qJD(3), t1123, -t1071 + t1498, t6 * qJD(3) + t242 - t1095 * t1376 + (t1263 * t1285 + t1053) * t192, t21 * qJD(3) + t142 * qJD(4) + t608 * t994 - t1241, -t1072 - t1498, t24 * qJD(3) + t141 * qJD(4) + t611 * t994 + t1240, t998, t2 * qJD(3) + t76 * qJD(4) + t608 * t939 + t1302, t3 * qJD(3) + t75 * qJD(4) + t611 * t939 - t1303, -t1354, t1339, -t391, t1211, (t331 * t494 + t407 * t495) * qJD(2), t391, (t331 * t495 - t407 * t494) * qJD(2), 0, -t1077, -t1076, 0, 0, -t1127, t1221, (t330 * t461 - t368 * t405) * qJD(2), t1128, (-t330 * t460 - t369 * t405) * qJD(2), 0, t1214, t1213, (-t1073 * t369 + t368 * t490 + (t1073 * t461 - t460 * t490) * t406) * t1398, t588, -t1124, t1205, qJD(3) * t379 + t1258, t1124, qJD(3) * t381 + t1259, 0, t1174, -t1173, 0, 0, t1129, t1208, qJD(3) * t340 - t1260, -t1131, qJD(3) * t342 + t1261, 0, -t1207, -t1206, t313 * qJD(3) - t1397 * t1577, -t1080, t1141, t1242, (t129 * t315 + t184 * t293) * qJD(2) + t43 * qJD(3), t1143, (t129 * t314 + t185 * t293) * qJD(2) + t41 * qJD(3), 0, t1233, t1232, (t177 * t314 - t178 * t315 - t184 * t308 + t185 * t309) * qJD(2) + t72, t1133; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1561, t1204, t565, -t1561, -t1556, 0, t1056, t1122, 0, 0, -t1136, t1236, t27 * qJD(2) + t1502, t1138, t28 * qJD(2) - t989, 0, -t1227, -t1226, t34 * qJD(2) + (-t1486 * t662 + t1532 * t661 + t215 * t688 - t216 * t687) * qJD(3), t1025, -t1069 + t1499, t6 * qJD(2) + t264 - t1095 * t1253 + (t1252 * t1285 + t1053) * t215, t21 * qJD(2) + t171 * qJD(4) + t608 * t989 - t1238, -t1070 - t1499, t24 * qJD(2) + t170 * qJD(4) + t611 * t989 + t1237, t997, t2 * qJD(2) + t106 * qJD(4) + t608 * t938 + t1245, t3 * qJD(2) + t105 * qJD(4) + t611 * t938 - t1246, -t1349, t1304, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1126, t1212, t379 * qJD(2) + (-t357 * t481 + t401 * t449) * qJD(3), -t1125, t381 * qJD(2) + (t357 * t482 - t402 * t449) * qJD(3), 0, -t1175, -t1176, 0, 0, -t1130, t1222, t340 * qJD(2) + (-t1029 * t337 + t366 * t432) * qJD(3), -t1132, t342 * qJD(2) + (-t337 * t454 + t367 * t432) * qJD(3), 0, -t1220, -t1219, t313 * qJD(2) + ((-t1029 * t547 + t454 * t546) * t357 + (t1577 * t503 - t1352 + t1353) * t449) * t1396, t1081, t1140, t1234, t43 * qJD(2) + (t181 * t315 + t229 * t303) * qJD(3), t1142, t41 * qJD(2) + (t181 * t314 + t230 * t303) * qJD(3), 0, -t1134, t1135, t1300, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t119, -t1479, qJD(2) * t142 + qJD(3) * t171 + t1027 * t1532, t119, qJD(2) * t141 + qJD(3) * t170 + t1026 * t1532, t123, qJD(2) * t76 + qJD(3) * t106 + t1027 * t297, qJD(2) * t75 + qJD(3) * t105 + t1026 * t297, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t591, -t1201, 0, -t591, 0, 0, t1171, -t1172, 0, 0, -t1561, -t1204, 0, t1561, 0, 0, -t1202, -t1203, 0, -t588, t1137, -t1239, t1485 * qJD(3), -t1139, -t26 * qJD(3), 0, -t1231, -t1230, -t33 * qJD(3), -t1123, t1071 + t1493, qJD(3) * t5 + t1054 * t192 + t242, qJD(3) * t22 + qJD(4) * t143 + t1241, t1072 - t1493, qJD(3) * t23 - qJD(4) * t140 - t1240, -t998, qJD(3) * t1 - qJD(4) * t77 - t1302, qJD(3) * t4 + qJD(4) * t74 + t1303, t1354, -t1339, t391, -t1211, 0, -t391, 0, 0, t1077, t1076, 0, 0, t1127, -t1221, 0, -t1128, 0, 0, -t1214, -t1213, 0, -t588, t1124, -t1205, t380 * qJD(3), -t1124, t382 * qJD(3), 0, -t1174, t1173, 0, 0, -t1129, -t1208, t341 * qJD(3), t1131, t343 * qJD(3), 0, t1207, t1206, -t312 * qJD(3), t1080, -t1141, -t1242, t44 * qJD(3), -t1143, t42 * qJD(3), 0, -t1233, -t1232, t72, -t1133; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t598, -pkin(1) * t1101, 0, 0, 0, 0, 0, 0, 0, t993, (t195 * t263 + t321 * t99) * qJD(2) + t48 * qJD(3), (-t194 * t263 - t322 * t99) * qJD(2) + t47 * qJD(3), 0, (t194 * t322 + t195 * t321) * qJD(2) + t128 * qJD(3), t601 * t993 + t1068, -qJD(4) * t204 + t1574 * t993, 0, t602 * t993 - t1068, 0, 0, -t30 * qJD(3) - t1050 * t1255 + t1150 * t247, t29 * qJD(3) + t1050 * t1257 + t1149 * t247, (t1094 * t99 + t1099 * t55) * qJD(2) + t7 * qJD(3), (t1094 * t55 + t247 * t56) * qJD(2) + t9 * qJD(3), 0, 0, 0, 0, 0, -t331 * t1262, 0, 0, 0, 0, 0, 0, 0, 0, 0, t405 * t330 * qJD(2), (-t1020 * t405 + t330 * t490) * t1398, (-t1073 * t330 - t1348 * t405) * t1398, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t546 * t1182, t547 * t1182, 0, 0, 0, 0, 0, 0, 0, (qJD(2) * t129 + qJD(3) * t139) * t293, (t129 * t308 + t178 * t293) * qJD(2) + t103 * qJD(3), (-t129 * t309 - t177 * t293) * qJD(2) + t102 * qJD(3), 0, (t177 * t309 + t178 * t308) * qJD(2) + t130 * qJD(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1078 + t598, (-t1102 - t1101) * pkin(1), 0, 0, 0, 0, t1365, 0, -t1364, t936, t48 * qJD(2) + (t321 * t124 + t218 * t281 - t263 * t661 + t688 * t98 - t49) * qJD(3), t47 * qJD(2) + (-t322 * t124 - t217 * t281 - t263 * t662 - t687 * t98 - t50) * qJD(3), -t1356, t128 * qJD(2) + (t217 * t687 + t218 * t688 - t321 * t661 + t322 * t662) * qJD(3), t601 * t936 + t1507, t1574 * t936 + t1387 + t145, t1039, t602 * t936 - t1507, -t1038, 0, -t30 * qJD(2) + t11 * qJD(4) + t1249 * t1477 + t1395, t29 * qJD(2) + t13 * qJD(4) - t1250 * t1477 + t1388, t7 * qJD(2) + t1284 * qJD(3) * (t113 * t263 + t124 * t248 - t1399 * t274 + t1401 * t281), t9 * qJD(2) + (t1094 * t113 + t1098 * t1401 + t112 * t247 + t275 * t60 - t1392) * qJD(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1210, 0, t1209, t1215, 0, 0, 0, 0, 0, 0, t1217, 0, t1216, t1218, (-t1501 * t547 + t546 * t987) * pkin(2), (t1501 * t546 + t547 * t987) * pkin(2), -t1223, t1017, 0, 0, t1340, 0, t1343, t293 * t139 * qJD(2) + (t1294 * t303 + t181 * t293) * qJD(3), t103 * qJD(2) + (t181 * t308 + t228 * t303) * qJD(3), t102 * qJD(2) + (-t181 * t309 - t227 * t303) * qJD(3), t1301, t1235; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t115, -t945, qJD(3) * t37 + t1149 + t1280, -t115, qJD(3) * t39 - t1150 - t1281, -t1228, qJD(3) * t11 + t1153 * t608 - t1247 * t248 - t1298, qJD(3) * t13 + t1153 * t611 + t1248 * t248 + t1299, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1561, -t1204, 0, t1561, 0, 0, -t1056, -t1122, 0, 0, t1136, -t1236, -t1485 * qJD(2), -t1138, t26 * qJD(2), 0, t1227, t1226, t33 * qJD(2), -t1025, t1069 + t1495, -qJD(2) * t5 + t1054 * t215 + t264, -qJD(2) * t22 + qJD(4) * t172 + t1238, t1070 - t1495, -qJD(2) * t23 - qJD(4) * t169 - t1237, -t997, -qJD(2) * t1 - qJD(4) * t107 - t1245, -qJD(2) * t4 + qJD(4) * t104 + t1246, t1349, -t1304, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1126, -t1212, -t380 * qJD(2), t1125, -t382 * qJD(2), 0, t1175, t1176, 0, 0, t1130, -t1222, -t341 * qJD(2), t1132, -t343 * qJD(2), 0, t1220, t1219, t312 * qJD(2), -t1081, -t1140, -t1234, -t44 * qJD(2), -t1142, -t42 * qJD(2), 0, t1134, -t1135, -t1300, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1078, pkin(1) * t1102, 0, 0, 0, 0, -t1365, 0, t1364, t937, (t195 * t281 - t263 * t655 + t321 * t87 + t688 * t99 - t48) * qJD(2) + t49 * qJD(3), (-t194 * t281 - t263 * t656 - t322 * t87 - t687 * t99 - t47) * qJD(2) + t50 * qJD(3), t1356, (t194 * t687 + t195 * t688 - t321 * t655 + t322 * t656 - t128) * qJD(2), t601 * t937 + t1506, t1574 * t937 - t1387 + t145, -t1039, t602 * t937 - t1506, t1038, 0, -t32 * qJD(3) + t12 * qJD(4) - t1255 * t1476 - t1395, t31 * qJD(3) + t14 * qJD(4) + t1257 * t1476 - t1388, t8 * qJD(3) + t1284 * qJD(2) * (t1399 * t248 - t1401 * t263 + t274 * t99 + t281 * t55), t10 * qJD(3) + (-t1094 * t1401 + t1098 * t55 + t247 * t68 + t275 * t56 - t1394) * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1210, 0, -t1209, 0, 0, 0, 0, 0, 0, 0, -t1217, 0, -t1216, 0, -t546 * t1183, -t547 * t1183, t1223, 0, 0, 0, -t1340, 0, -t1343, (t129 * t303 - t1294 * t293) * qJD(2) + t303 * t144 * qJD(3), (-t1294 * t308 + t178 * t303 - t1367) * qJD(2), (t1294 * t309 - t177 * t303 + t1368) * qJD(2), -t1301, -t1235; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t988, t49 * qJD(2) + (t124 * t688 - t281 * t661) * qJD(3), t50 * qJD(2) + (-t124 * t687 - t281 * t662) * qJD(3), 0, 0, t601 * t988 + t1067, -qJD(4) * t231 + t1574 * t988, 0, t602 * t988 - t1067, 0, 0, -t32 * qJD(2) - t1034 * t1249 + t1148 * t275, t31 * qJD(2) + t1034 * t1250 + t1147 * t275, t8 * qJD(2) + (t1093 * t113 + t1098 * t124) * qJD(3), t10 * qJD(2) + (t1098 * t113 + t112 * t275) * qJD(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t449 * t1215, 0, 0, 0, 0, 0, 0, 0, 0, 0, t432 * t1218, (-t547 * t1355 + (t1333 * t449 - t357 * t547) * t432) * t1396, (t546 * t1355 + (t1332 * t449 + t357 * t546) * t432) * t1396, 0, t449 * t1017, 0, 0, 0, 0, 0, (qJD(2) * t144 + qJD(3) * t181) * t303, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t122, -t944, -qJD(2) * t37 + t1147 + t1278, -t122, -qJD(2) * t39 - t1148 - t1279, -t1224, qJD(2) * t12 + t1151 * t608 - t1247 * t274 - t1243, qJD(2) * t14 + t1151 * t611 + t1248 * t274 + t1244, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t119, t1479, -qJD(2) * t143 - qJD(3) * t172 + t1157 * t1532, -t119, qJD(2) * t140 + qJD(3) * t169 + t1156 * t1532, t123, qJD(2) * t77 + qJD(3) * t107 + t1157 * t297, -qJD(2) * t74 - qJD(3) * t104 + t1156 * t297, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t115, t945, qJD(3) * t36 + t1257 * t99 - t1280, t115, qJD(3) * t38 + t1255 * t99 + t1281, t1228, t15 * qJD(3) + t1042 * t608 + t1298, t16 * qJD(3) + t1042 * t611 - t1299, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t122, t944, qJD(2) * t36 + t124 * t1250 - t1278, t122, qJD(2) * t38 + t124 * t1249 + t1279, t1224, t15 * qJD(2) + t1028 * t608 + t1243, t16 * qJD(2) + t1028 * t611 - t1244, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t17;
