% Calculate kinetic energy for
% palh1m1TE
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [4x1]
%   Generalized joint coordinates (joint angles)
% qJD [4x1]
%   Generalized joint velocities
% pkin [23x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[AB,AM,BC,BE,BG,BL,DA,DC,EP,GH,GP,HW,ML,OT2,T1D,T2A,T2T1,phi1,phi2,phi312,phi413,phi710,phi711]';
% m [11x1]
%   mass of all robot links (including the base)
% rSges [11x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [11x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% T [1x1]
%   kinetic energy

% Quelle: HybrDyn-Toolbox
% Datum: 2020-04-13 14:34
% Revision: 394980f89398455cc479283a21eae791ed9f69cb (2020-04-12)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function T = palh1m1TE_energykin_fixb_slag_vp1(qJ, qJD, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(4,1),zeros(4,1),zeros(23,1),zeros(11,1),zeros(11,3),zeros(11,6)}
assert(isreal(qJ) && all(size(qJ) == [4 1]), ...
  'palh1m1TE_energykin_fixb_slag_vp1: qJ has to be [4x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [4 1]), ...
  'palh1m1TE_energykin_fixb_slag_vp1: qJD has to be [4x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [23 1]), ...
  'palh1m1TE_energykin_fixb_slag_vp1: pkin has to be [23x1] (double)');
assert(isreal(m) && all(size(m) == [11 1]), ...
  'palh1m1TE_energykin_fixb_slag_vp1: m has to be [11x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [11,3]), ...
  'palh1m1TE_energykin_fixb_slag_vp1: rSges has to be [11x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [11 6]), ...
  'palh1m1TE_energykin_fixb_slag_vp1: Icges has to be [11x6] (double)'); 

%% Symbolic Calculation
% From energy_kinetic_fixb_worldframe_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2020-04-12 20:12:20
% EndTime: 2020-04-12 20:13:52
% DurationCPUTime: 95.95s
% Computational Cost: add. (1943939->706), mult. (2983847->1210), div. (129344->33), fcn. (1870888->28), ass. (0->430)
t1166 = pkin(6) ^ 2;
t1148 = sin(pkin(20));
t1152 = cos(pkin(20));
t1154 = sin(qJ(3));
t1157 = cos(qJ(3));
t1215 = t1148 * t1157 + t1152 * t1154;
t1279 = pkin(6) * t1215;
t1312 = -2 * pkin(1);
t1252 = -t1279 * t1312 + t1166;
t1309 = (-pkin(2) - pkin(13));
t1092 = ((pkin(1) - t1309) * (pkin(1) + t1309)) + t1252;
t1303 = (pkin(13) - pkin(2));
t1093 = ((pkin(1) - t1303) * (pkin(1) + t1303)) + t1252;
t1260 = t1093 * t1092;
t1173 = sqrt(-t1260);
t1286 = t1173 / 0.2e1;
t1297 = sin(qJ(2));
t1298 = sin(pkin(19));
t1300 = cos(qJ(2));
t1301 = cos(pkin(19));
t1199 = t1297 * t1301 - t1298 * t1300;
t1196 = pkin(7) * t1199;
t1189 = (-0.2e1 * t1196 + pkin(1)) * pkin(1);
t1306 = -pkin(8) - pkin(3);
t1307 = pkin(7) + pkin(8);
t1308 = pkin(7) - pkin(8);
t1174 = sqrt(-((-pkin(3) + t1307) * (pkin(3) + t1308) + t1189) * ((pkin(7) - t1306) * (pkin(7) + t1306) + t1189));
t1175 = pkin(3) ^ 2;
t1200 = t1297 * t1298 + t1300 * t1301;
t1123 = t1200 * qJD(2);
t1310 = pkin(1) * pkin(7);
t1247 = t1123 * t1310;
t1261 = 0.4e1 * (t1307 * t1308 - t1175 + t1189) * t1247 / t1174;
t1317 = -t1261 / 0.2e1;
t1316 = pkin(1) * t1297;
t1102 = (pkin(1) ^ 2) + t1252;
t1160 = pkin(13) ^ 2;
t1170 = pkin(2) ^ 2;
t1097 = t1102 - t1160 + t1170;
t1117 = -pkin(1) - t1279;
t1125 = t1148 * t1154 - t1152 * t1157;
t1278 = pkin(6) * t1125;
t1066 = -t1097 * t1117 - t1173 * t1278;
t1067 = t1097 * t1278 - t1117 * t1173;
t1246 = -t1300 / 0.2e1;
t1100 = 0.1e1 / t1102;
t1171 = 0.1e1 / pkin(2);
t1259 = t1100 * t1171;
t1315 = (t1297 * t1067 / 0.2e1 + t1066 * t1246) * t1259;
t1314 = pkin(7) ^ 2;
t1313 = 0.1e1 / pkin(8);
t1112 = t1189 + t1314;
t1311 = 0.1e1 / t1112;
t1305 = -pkin(9) - pkin(11);
t1304 = -pkin(9) + pkin(11);
t1302 = cos(pkin(18));
t1299 = sin(pkin(18));
t1142 = pkin(23) + pkin(22);
t1138 = sin(t1142);
t1139 = cos(t1142);
t1169 = 0.1e1 / pkin(3);
t1250 = pkin(8) ^ 2 - t1175;
t1098 = t1112 - t1250;
t1121 = -t1196 + pkin(1);
t1122 = t1199 * qJD(2);
t1197 = pkin(7) * t1200;
t1188 = (t1197 * t1312 - t1174) * t1123;
t1041 = t1121 * t1261 / 0.2e1 + (-t1122 * t1098 + t1188) * pkin(7);
t1195 = t1174 * t1200;
t1068 = -pkin(7) * t1195 + t1121 * t1098;
t1069 = t1098 * t1197 + t1121 * t1174;
t1109 = 0.1e1 / t1112 ^ 2;
t1232 = t1109 * t1247;
t1224 = t1069 * t1232;
t1255 = t1311 / 0.2e1;
t1190 = t1224 + (qJD(3) * t1068 + t1041) * t1255;
t1186 = t1122 * t1174 + t1200 * t1317;
t1040 = ((t1121 * t1312 - t1098) * t1123 + t1186) * pkin(7);
t1225 = t1068 * t1232;
t1239 = t1069 * t1255;
t1256 = -t1311 / 0.2e1;
t1191 = qJD(3) * t1239 + t1040 * t1256 - t1225;
t969 = (t1154 * t1190 + t1157 * t1191) * t1169;
t970 = (t1154 * t1191 - t1157 * t1190) * t1169;
t950 = t1138 * t969 + t1139 * t970;
t1296 = pkin(4) * t950;
t1168 = pkin(4) ^ 2;
t1167 = pkin(5) ^ 2;
t1234 = t1157 * t1256;
t1053 = (t1068 * t1154 * t1256 + t1069 * t1234) * t1169;
t1054 = (t1068 * t1234 + t1154 * t1239) * t1169;
t1028 = t1053 * t1139 + t1054 * t1138;
t1284 = pkin(5) * t1028;
t1253 = -0.2e1 * pkin(4) * t1284 + t1167;
t1012 = t1168 + t1253;
t1251 = pkin(9) ^ 2 - pkin(11) ^ 2;
t1004 = t1012 + t1251;
t1013 = -pkin(4) + t1284;
t1002 = (pkin(4) - t1305) * (pkin(4) + t1305) + t1253;
t1003 = (pkin(4) - t1304) * (pkin(4) + t1304) + t1253;
t1172 = sqrt(-t1003 * t1002);
t1029 = -t1053 * t1138 + t1054 * t1139;
t1283 = pkin(5) * t1029;
t947 = t1004 * t1283 - t1013 * t1172;
t1295 = pkin(5) * t947;
t1010 = 0.1e1 / t1012;
t1293 = t1010 / 0.2e1;
t1096 = t1160 - t1166 + t1170 + (-pkin(1) - 0.2e1 * t1279) * pkin(1);
t1292 = -t1096 / 0.2e1;
t1291 = t1100 / 0.2e1;
t1147 = sin(pkin(21));
t1290 = t1147 / 0.2e1;
t1150 = cos(pkin(22));
t1289 = -t1150 / 0.2e1;
t1287 = -t1173 / 0.2e1;
t1120 = t1125 * qJD(3);
t1285 = pkin(1) * t1120;
t1155 = sin(qJ(1));
t1141 = qJD(2) * t1155;
t1128 = qJD(3) * t1155 + t1141;
t1282 = pkin(5) * t1128;
t1158 = cos(qJ(1));
t1254 = -qJD(2) - qJD(3);
t1129 = t1254 * t1158;
t1281 = pkin(5) * t1129;
t1280 = pkin(6) * t1067;
t1277 = pkin(16) * t1155;
t1249 = pkin(5) * t1296;
t1276 = 0.2e1 * (t1002 + t1003) * t1249 / t1172;
t1184 = t1112 + t1250;
t1193 = pkin(1) * t1199 - pkin(7);
t1181 = t1313 * (-pkin(1) * t1195 - t1184 * t1193);
t1177 = t1181 * t1255;
t1183 = pkin(1) * t1184;
t1182 = t1313 * (-t1174 * t1193 + t1183 * t1200);
t1178 = t1299 * t1182;
t1055 = t1177 * t1302 + t1178 * t1256;
t1275 = Icges(7,4) * t1055;
t1179 = t1302 * t1182;
t1056 = t1177 * t1299 + t1179 * t1255;
t1274 = Icges(7,4) * t1056;
t1039 = ((-0.3e1 * t1314 + (0.4e1 * t1196 - pkin(1)) * pkin(1) - t1250) * t1123 + t1186) * pkin(1);
t1042 = pkin(1) * t1188 - t1122 * t1183 + t1193 * t1317;
t1052 = 0.1e1 / t1055 ^ 2;
t1180 = t1181 * t1310;
t1222 = t1313 * t1302 * t1255;
t1231 = t1313 * t1311 * t1299;
t1258 = t1109 * t1123;
t937 = ((t1042 * t1222 + t1039 * t1231 / 0.2e1 + (t1179 * t1310 + t1180 * t1299) * t1258) / t1055 - (t1039 * t1222 - t1042 * t1231 / 0.2e1 + (-t1178 * t1310 + t1180 * t1302) * t1258) * t1056 * t1052) / (t1052 * t1056 ^ 2 + 0.1e1);
t1273 = t1155 * t937;
t1272 = t1158 * t937;
t1271 = t1172 * t950;
t1149 = cos(pkin(23));
t1236 = t1149 * t1256;
t1145 = sin(pkin(23));
t1237 = t1145 * t1255;
t1050 = (t1068 * t1236 + t1069 * t1237) * t1169;
t1049 = 0.1e1 / t1050 ^ 2;
t1235 = t1149 * t1255;
t1051 = (t1068 * t1237 + t1069 * t1235) * t1169;
t936 = ((t1040 * t1237 + t1041 * t1235 + t1145 * t1225 + t1149 * t1224) / t1050 - (t1040 * t1236 + t1041 * t1237 + t1145 * t1224 - t1149 * t1225) * t1051 * t1049) / (t1049 * t1051 ^ 2 + 0.1e1) * t1169;
t1270 = -qJD(2) - t936;
t1065 = 0.1e1 / t1066 ^ 2;
t1101 = 0.1e1 / t1102 ^ 2;
t1119 = t1215 * qJD(3);
t1248 = pkin(6) * t1285;
t1262 = (t1092 + t1093) * t1248 / t1286;
t1238 = -t1262 / 0.2e1;
t956 = 0.2e1 * (((t1117 * t1238 + (t1097 * t1119 - t1120 * t1173) * pkin(6)) * t1291 + (-t1100 * t1125 * t1166 + t1101 * t1280) * t1285) / t1066 - ((-t1120 * t1097 - t1119 * t1173 + t1125 * t1238) * t1291 + (t1066 * t1101 + t1100 * t1117) * t1285) * t1065 * t1280) * pkin(2) / (t1065 * t1067 ^ 2 + 0.1e1) * t1102 * t1171;
t1269 = -qJD(2) - t956;
t933 = t936 * t1155 + t1141;
t953 = t956 * t1155 + t1141;
t1268 = qJD(2) * t1158;
t1151 = cos(pkin(21));
t1267 = t1010 * t1151;
t1163 = 0.1e1 / pkin(11);
t1266 = t1010 * t1163;
t1165 = 0.1e1 / pkin(9);
t1265 = t1010 * t1165;
t1264 = t1029 * t1172;
t1263 = (Icges(7,5) * t1056 + Icges(7,6) * t1055) * qJD(1);
t1257 = 0.1e1 / pkin(13) * t1171;
t1245 = Icges(3,4) * t1300;
t1244 = Icges(3,4) * t1297;
t1243 = -t1276 / 0.2e1;
t1242 = qJD(2) * t1300;
t1241 = t1158 * t1297;
t1011 = 0.1e1 / t1012 ^ 2;
t1233 = t1011 * t1249;
t1226 = t1151 * t1233;
t1227 = t1147 * t1233;
t1240 = t1010 * t1290;
t1005 = t1012 - t1251;
t1014 = -pkin(4) * t1028 + pkin(5);
t949 = -t1138 * t970 + t1139 * t969;
t1213 = t1029 * t1243 - t949 * t1172;
t896 = ((-0.2e1 * pkin(5) * t1014 - t1005) * t950 + t1213) * pkin(4);
t897 = t1014 * t1276 / 0.2e1 - 0.2e1 * t1168 * t950 * t1283 + (t1005 * t949 - t1271) * pkin(4);
t946 = -pkin(4) * t1264 + t1005 * t1014;
t948 = pkin(4) * t1005 * t1029 + t1014 * t1172;
t925 = (-t946 * t1151 / 0.2e1 + t948 * t1290) * t1266;
t921 = 0.1e1 / t925 ^ 2;
t924 = (t946 * t1290 + t948 * t1151 / 0.2e1) * t1266;
t851 = ((t896 * t1240 + t946 * t1227 + t897 * t1267 / 0.2e1 + t948 * t1226) / t925 - (-t896 * t1267 / 0.2e1 - t946 * t1226 + t897 * t1240 + t948 * t1227) * t924 * t921) / (t921 * t924 ^ 2 + 0.1e1) * t1163;
t848 = t851 * t1155 + t1128;
t1228 = t1155 * t1242;
t849 = (-t851 + t1254) * t1158;
t1127 = -t1154 * t1297 + t1157 * t1300;
t1113 = t1127 * t1155;
t1223 = -pkin(5) * t1113 - t1277;
t1221 = rSges(7,1) * t1055 - rSges(7,2) * t1056;
t1220 = Icges(7,1) * t1055 - t1274;
t1219 = -Icges(7,2) * t1056 + t1275;
t1218 = Icges(7,5) * t1055 - Icges(7,6) * t1056;
t1018 = -Icges(7,6) * t1158 + t1155 * t1219;
t1020 = -Icges(7,5) * t1158 + t1155 * t1220;
t1217 = -t1018 * t1056 + t1020 * t1055;
t1019 = Icges(7,6) * t1155 + t1158 * t1219;
t1021 = Icges(7,5) * t1155 + t1158 * t1220;
t1216 = -t1019 * t1056 + t1021 * t1055;
t1214 = -pkin(1) * t1158 * t1242 + qJD(1) * t1155 * t1316;
t1212 = -rSges(3,1) * t1297 - rSges(3,2) * t1300;
t1033 = Icges(7,2) * t1055 + t1274;
t1034 = Icges(7,1) * t1056 + t1275;
t1211 = (-t1033 * t1056 + t1034 * t1055) * qJD(1);
t1210 = -Icges(3,2) * t1300 - t1244;
t1209 = -Icges(3,1) * t1297 - t1245;
t1208 = -Icges(3,5) * t1297 - Icges(3,6) * t1300;
t1031 = -t1050 * t1297 - t1051 * t1300;
t1207 = -t1050 * t1300 + t1051 * t1297;
t1105 = -Icges(3,6) * t1158 + t1155 * t1210;
t1107 = -Icges(3,5) * t1158 + t1155 * t1209;
t1206 = -t1105 * t1300 - t1107 * t1297;
t1106 = Icges(3,6) * t1155 + t1158 * t1210;
t1108 = Icges(3,5) * t1155 + t1158 * t1209;
t1205 = -t1106 * t1300 - t1108 * t1297;
t1131 = -Icges(3,2) * t1297 + t1245;
t1132 = Icges(3,1) * t1300 - t1244;
t1204 = -t1131 * t1300 - t1132 * t1297;
t1203 = -t1154 * t1300 - t1157 * t1297;
t1202 = -t1203 * t1281 + t1214;
t1198 = (-t1155 ^ 2 - t1158 ^ 2) * qJD(2) * t1316;
t1048 = (t1067 * t1246 - t1297 * t1066 / 0.2e1) * t1259;
t1137 = qJD(1) * t1158 * pkin(16);
t1192 = t1137 + (-qJD(1) * t1241 - t1228) * pkin(1);
t1115 = t1127 * t1158;
t1187 = t1113 * t1282 - t1115 * t1281 + t1198;
t1185 = qJD(1) * t1115 * pkin(5) + t1203 * t1282 + t1192;
t1156 = cos(qJ(4));
t1153 = sin(qJ(4));
t1146 = sin(pkin(22));
t1135 = rSges(2,1) * t1158 - rSges(2,2) * t1155;
t1134 = rSges(3,1) * t1300 - rSges(3,2) * t1297;
t1133 = rSges(2,1) * t1155 + rSges(2,2) * t1158;
t1130 = Icges(3,5) * t1300 - Icges(3,6) * t1297;
t1116 = t1203 * t1158;
t1114 = t1203 * t1155;
t1111 = t1155 * rSges(3,3) + t1158 * t1212;
t1110 = -t1158 * rSges(3,3) + t1155 * t1212;
t1104 = Icges(3,3) * t1155 + t1158 * t1208;
t1103 = -Icges(3,3) * t1158 + t1155 * t1208;
t1095 = 0.1e1 / t1096 ^ 2;
t1091 = -rSges(4,1) * t1203 + rSges(4,2) * t1127;
t1089 = -Icges(4,1) * t1203 + Icges(4,4) * t1127;
t1088 = -Icges(4,4) * t1203 + Icges(4,2) * t1127;
t1087 = -Icges(4,5) * t1203 + Icges(4,6) * t1127;
t1086 = qJD(1) * t1111 - t1134 * t1141 + t1137;
t1085 = -t1134 * t1268 + (-t1110 - t1277) * qJD(1);
t1084 = rSges(4,1) * t1115 + rSges(4,2) * t1116 + rSges(4,3) * t1155;
t1083 = rSges(4,1) * t1113 + rSges(4,2) * t1114 - rSges(4,3) * t1158;
t1082 = Icges(4,1) * t1115 + Icges(4,4) * t1116 + Icges(4,5) * t1155;
t1081 = Icges(4,1) * t1113 + Icges(4,4) * t1114 - Icges(4,5) * t1158;
t1080 = Icges(4,4) * t1115 + Icges(4,2) * t1116 + Icges(4,6) * t1155;
t1079 = Icges(4,4) * t1113 + Icges(4,2) * t1114 - Icges(4,6) * t1158;
t1078 = Icges(4,5) * t1115 + Icges(4,6) * t1116 + Icges(4,3) * t1155;
t1077 = Icges(4,5) * t1113 + Icges(4,6) * t1114 - Icges(4,3) * t1158;
t1076 = (t1110 * t1155 + t1111 * t1158) * qJD(2);
t1064 = qJD(1) * t1084 - t1128 * t1091 + t1192;
t1063 = t1129 * t1091 + (-t1083 - t1277) * qJD(1) + t1214;
t1062 = t1128 * t1083 - t1129 * t1084 + t1198;
t1046 = t1158 * t1315;
t1045 = t1158 * t1048;
t1044 = t1155 * t1315;
t1043 = t1155 * t1048;
t1038 = (0.1e1 / t1096 * t1262 / 0.2e1 - 0.2e1 * t1173 * t1095 * t1248) / (-t1095 * t1260 + 0.1e1);
t1035 = rSges(7,1) * t1056 + rSges(7,2) * t1055;
t1027 = rSges(7,3) * t1155 + t1158 * t1221;
t1026 = -rSges(7,3) * t1158 + t1155 * t1221;
t1025 = t1207 * t1158;
t1024 = t1031 * t1158;
t1023 = t1207 * t1155;
t1022 = t1031 * t1155;
t1017 = Icges(7,3) * t1155 + t1158 * t1218;
t1016 = -Icges(7,3) * t1158 + t1155 * t1218;
t1009 = -rSges(9,1) * t1315 + rSges(9,2) * t1048;
t1008 = -Icges(9,1) * t1315 + Icges(9,4) * t1048;
t1007 = -Icges(9,4) * t1315 + Icges(9,2) * t1048;
t1006 = -Icges(9,5) * t1315 + Icges(9,6) * t1048;
t1001 = rSges(9,1) * t1045 + rSges(9,2) * t1046 + rSges(9,3) * t1155;
t1000 = rSges(9,1) * t1043 + rSges(9,2) * t1044 - rSges(9,3) * t1158;
t999 = Icges(9,1) * t1045 + Icges(9,4) * t1046 + Icges(9,5) * t1155;
t998 = Icges(9,1) * t1043 + Icges(9,4) * t1044 - Icges(9,5) * t1158;
t997 = Icges(9,4) * t1045 + Icges(9,2) * t1046 + Icges(9,6) * t1155;
t996 = Icges(9,4) * t1043 + Icges(9,2) * t1044 - Icges(9,6) * t1158;
t995 = Icges(9,5) * t1045 + Icges(9,6) * t1046 + Icges(9,3) * t1155;
t994 = Icges(9,5) * t1043 + Icges(9,6) * t1044 - Icges(9,3) * t1158;
t993 = (t1048 * t1292 - t1286 * t1315) * t1257;
t992 = (t1048 * t1287 - t1292 * t1315) * t1257;
t991 = (t1045 * t1286 + t1046 * t1292) * t1257;
t990 = (t1045 * t1292 + t1046 * t1287) * t1257;
t989 = (t1043 * t1286 + t1044 * t1292) * t1257;
t988 = (t1043 * t1292 + t1044 * t1287) * t1257;
t987 = -rSges(8,1) * t1207 + rSges(8,2) * t1031;
t986 = -Icges(8,1) * t1207 + Icges(8,4) * t1031;
t985 = -Icges(8,4) * t1207 + Icges(8,2) * t1031;
t984 = -Icges(8,5) * t1207 + Icges(8,6) * t1031;
t983 = (-t1031 * t1146 - t1150 * t1207) * pkin(4);
t982 = rSges(8,1) * t1024 + rSges(8,2) * t1025 + rSges(8,3) * t1155;
t981 = rSges(8,1) * t1022 + rSges(8,2) * t1023 - rSges(8,3) * t1158;
t980 = Icges(8,1) * t1024 + Icges(8,4) * t1025 + Icges(8,5) * t1155;
t979 = Icges(8,1) * t1022 + Icges(8,4) * t1023 - Icges(8,5) * t1158;
t978 = Icges(8,4) * t1024 + Icges(8,2) * t1025 + Icges(8,6) * t1155;
t977 = Icges(8,4) * t1022 + Icges(8,2) * t1023 - Icges(8,6) * t1158;
t976 = Icges(8,5) * t1024 + Icges(8,6) * t1025 + Icges(8,3) * t1155;
t975 = Icges(8,5) * t1022 + Icges(8,6) * t1023 - Icges(8,3) * t1158;
t974 = (t1024 * t1150 - t1025 * t1146) * pkin(4);
t973 = (t1022 * t1150 - t1023 * t1146) * pkin(4);
t968 = rSges(10,1) * t992 + rSges(10,2) * t993;
t967 = Icges(10,1) * t992 + Icges(10,4) * t993;
t966 = Icges(10,4) * t992 + Icges(10,2) * t993;
t965 = Icges(10,5) * t992 + Icges(10,6) * t993;
t964 = rSges(10,1) * t990 + rSges(10,2) * t991 + rSges(10,3) * t1155;
t963 = rSges(10,1) * t988 + rSges(10,2) * t989 - rSges(10,3) * t1158;
t962 = Icges(10,1) * t990 + Icges(10,4) * t991 + Icges(10,5) * t1155;
t961 = Icges(10,1) * t988 + Icges(10,4) * t989 - Icges(10,5) * t1158;
t960 = Icges(10,4) * t990 + Icges(10,2) * t991 + Icges(10,6) * t1155;
t959 = Icges(10,4) * t988 + Icges(10,2) * t989 - Icges(10,6) * t1158;
t958 = Icges(10,5) * t990 + Icges(10,6) * t991 + Icges(10,3) * t1155;
t957 = Icges(10,5) * t988 + Icges(10,6) * t989 - Icges(10,3) * t1158;
t954 = t1269 * t1158;
t952 = (-t1038 + t1269) * t1158;
t951 = t1038 * t1155 + t953;
t945 = -pkin(5) * t1264 - t1004 * t1013;
t944 = 0.1e1 / t945 ^ 2;
t943 = qJD(1) * t1001 - t1009 * t953 + t1137;
t942 = t1009 * t954 + (-t1000 - t1277) * qJD(1);
t934 = t1270 * t1158;
t932 = t1000 * t953 - t1001 * t954;
t931 = -t1035 * t1273 + (-pkin(15) * t1158 + t1027) * qJD(1);
t930 = -t1035 * t1272 + (pkin(15) * t1155 - t1026) * qJD(1);
t928 = qJD(1) * t982 - t933 * t987 + t1192;
t927 = t934 * t987 + (-t981 - t1277) * qJD(1) + t1214;
t923 = (t945 * t1289 - t1146 * t947 / 0.2e1) * t1265;
t922 = (t1146 * t945 / 0.2e1 + t947 * t1289) * t1265;
t920 = qJD(1) * t964 - t951 * t968 + t1137 + (qJD(1) * t1045 + t1315 * t953) * pkin(2);
t919 = -pkin(2) * t1315 * t954 + t952 * t968 + (-pkin(2) * t1043 - t1277 - t963) * qJD(1);
t918 = (t1026 * t1155 + t1027 * t1158) * t937;
t917 = t933 * t981 - t934 * t982 + t1198;
t916 = t951 * t963 - t952 * t964 + (t1043 * t953 - t1045 * t954) * pkin(2);
t914 = t1127 * t924 - t1203 * t925;
t913 = t1127 * t925 + t1203 * t924;
t912 = -qJD(4) * t913 + qJD(1);
t911 = t1115 * t925 + t1116 * t924;
t910 = -t1115 * t924 + t1116 * t925;
t909 = t1113 * t925 + t1114 * t924;
t908 = -t1113 * t924 + t1114 * t925;
t907 = t1153 * t1155 + t1156 * t911;
t906 = -t1153 * t911 + t1155 * t1156;
t905 = -t1153 * t1158 + t1156 * t909;
t904 = -t1153 * t909 - t1156 * t1158;
t903 = t1031 * t923 + t1207 * t922;
t902 = t1031 * t922 - t1207 * t923;
t901 = -t1024 * t922 + t1025 * t923;
t900 = t1024 * t923 + t1025 * t922;
t899 = -t1022 * t922 + t1023 * t923;
t898 = t1022 * t923 + t1023 * t922;
t895 = pkin(10) * t914 - pkin(12) * t913;
t894 = rSges(5,1) * t914 + rSges(5,2) * t913;
t893 = Icges(5,1) * t914 + Icges(5,4) * t913;
t892 = Icges(5,4) * t914 + Icges(5,2) * t913;
t891 = Icges(5,5) * t914 + Icges(5,6) * t913;
t890 = pkin(10) * t911 - pkin(12) * t910;
t889 = pkin(10) * t909 - pkin(12) * t908;
t888 = rSges(5,1) * t911 + rSges(5,2) * t910 + rSges(5,3) * t1155;
t887 = rSges(5,1) * t909 + rSges(5,2) * t908 - rSges(5,3) * t1158;
t886 = Icges(5,1) * t911 + Icges(5,4) * t910 + Icges(5,5) * t1155;
t885 = Icges(5,1) * t909 + Icges(5,4) * t908 - Icges(5,5) * t1158;
t884 = Icges(5,4) * t911 + Icges(5,2) * t910 + Icges(5,6) * t1155;
t883 = Icges(5,4) * t909 + Icges(5,2) * t908 - Icges(5,6) * t1158;
t882 = Icges(5,5) * t911 + Icges(5,6) * t910 + Icges(5,3) * t1155;
t881 = Icges(5,5) * t909 + Icges(5,6) * t908 - Icges(5,3) * t1158;
t880 = rSges(11,1) * t902 + rSges(11,2) * t903;
t879 = Icges(11,1) * t902 + Icges(11,4) * t903;
t878 = Icges(11,4) * t902 + Icges(11,2) * t903;
t877 = Icges(11,5) * t902 + Icges(11,6) * t903;
t876 = rSges(11,1) * t900 + rSges(11,2) * t901 + rSges(11,3) * t1155;
t875 = rSges(11,1) * t898 + rSges(11,2) * t899 - rSges(11,3) * t1158;
t874 = Icges(11,1) * t900 + Icges(11,4) * t901 + Icges(11,5) * t1155;
t873 = Icges(11,1) * t898 + Icges(11,4) * t899 - Icges(11,5) * t1158;
t872 = Icges(11,4) * t900 + Icges(11,2) * t901 + Icges(11,6) * t1155;
t871 = Icges(11,4) * t898 + Icges(11,2) * t899 - Icges(11,6) * t1158;
t870 = Icges(11,5) * t900 + Icges(11,6) * t901 + Icges(11,3) * t1155;
t869 = Icges(11,5) * t898 + Icges(11,6) * t899 - Icges(11,3) * t1158;
t868 = -rSges(6,3) * t913 + (rSges(6,1) * t1156 - rSges(6,2) * t1153) * t914;
t867 = -Icges(6,5) * t913 + (Icges(6,1) * t1156 - Icges(6,4) * t1153) * t914;
t866 = -Icges(6,6) * t913 + (Icges(6,4) * t1156 - Icges(6,2) * t1153) * t914;
t865 = -Icges(6,3) * t913 + (Icges(6,5) * t1156 - Icges(6,6) * t1153) * t914;
t864 = rSges(6,1) * t907 + rSges(6,2) * t906 - rSges(6,3) * t910;
t863 = rSges(6,1) * t905 + rSges(6,2) * t904 - rSges(6,3) * t908;
t862 = Icges(6,1) * t907 + Icges(6,4) * t906 - Icges(6,5) * t910;
t861 = Icges(6,1) * t905 + Icges(6,4) * t904 - Icges(6,5) * t908;
t860 = Icges(6,4) * t907 + Icges(6,2) * t906 - Icges(6,6) * t910;
t859 = Icges(6,4) * t905 + Icges(6,2) * t904 - Icges(6,6) * t908;
t858 = Icges(6,5) * t907 + Icges(6,6) * t906 - Icges(6,3) * t910;
t857 = Icges(6,5) * t905 + Icges(6,6) * t904 - Icges(6,3) * t908;
t856 = 0.2e1 * (((t1013 * t1243 + (t1004 * t949 - t1271) * pkin(5)) * t1293 + (-t1010 * t1029 * t1167 + t1011 * t1295) * t1296) / t945 - ((-t950 * t1004 + t1213) * t1293 + (t1010 * t1013 + t1011 * t945) * t1296) * t944 * t1295) * pkin(9) * t1012 * t1165 / (t944 * t947 ^ 2 + 0.1e1);
t855 = (-t856 + t1270) * t1158;
t854 = t1155 * t856 + t933;
t853 = -pkin(1) * t1228 - t854 * t880 - t933 * t983 + t1137 + (-pkin(1) * t1241 + t876 + t974) * qJD(1);
t852 = t855 * t880 + t934 * t983 + (-t875 - t973 - t1277) * qJD(1) + t1214;
t847 = -qJD(4) * t908 + t849;
t846 = -qJD(4) * t910 + t848;
t845 = qJD(1) * t888 - t848 * t894 + t1185;
t844 = t849 * t894 + (t1223 - t887) * qJD(1) + t1202;
t843 = t854 * t875 - t855 * t876 + t933 * t973 - t934 * t974 + t1198;
t842 = t848 * t887 - t849 * t888 + t1187;
t841 = qJD(1) * t890 - t846 * t868 - t848 * t895 + t912 * t864 + t1185;
t840 = t847 * t868 + t849 * t895 - t912 * t863 + (t1223 - t889) * qJD(1) + t1202;
t839 = t846 * t863 - t847 * t864 + t848 * t889 - t849 * t890 + t1187;
t1 = (Icges(2,3) + m(2) * (t1133 ^ 2 + t1135 ^ 2)) * qJD(1) ^ 2 / 0.2e1 + m(9) * (t932 ^ 2 + t942 ^ 2 + t943 ^ 2) / 0.2e1 + m(10) * (t916 ^ 2 + t919 ^ 2 + t920 ^ 2) / 0.2e1 + m(11) * (t843 ^ 2 + t852 ^ 2 + t853 ^ 2) / 0.2e1 + m(7) * (t918 ^ 2 + t930 ^ 2 + t931 ^ 2) / 0.2e1 + t912 * ((-t846 * t858 - t847 * t857 - t865 * t912) * t913 + ((-t1153 * t860 + t1156 * t862) * t846 + (-t1153 * t859 + t1156 * t861) * t847 + (-t1153 * t866 + t1156 * t867) * t912) * t914) / 0.2e1 + m(8) * (t917 ^ 2 + t927 ^ 2 + t928 ^ 2) / 0.2e1 + m(4) * (t1062 ^ 2 + t1063 ^ 2 + t1064 ^ 2) / 0.2e1 + t854 * ((t1155 * t870 + t872 * t901 + t874 * t900) * t854 + (t1155 * t869 + t871 * t901 + t873 * t900) * t855 + (t1155 * t877 + t878 * t901 + t879 * t900) * qJD(1)) / 0.2e1 + t849 * ((-t1158 * t882 + t884 * t908 + t886 * t909) * t848 + (-t1158 * t881 + t883 * t908 + t885 * t909) * t849 + (-t1158 * t891 + t892 * t908 + t893 * t909) * qJD(1)) / 0.2e1 + t855 * ((-t1158 * t870 + t872 * t899 + t874 * t898) * t854 + (-t1158 * t869 + t871 * t899 + t873 * t898) * t855 + (-t1158 * t877 + t878 * t899 + t879 * t898) * qJD(1)) / 0.2e1 + t1129 * ((-t1078 * t1158 + t1080 * t1114 + t1082 * t1113) * t1128 + (-t1077 * t1158 + t1079 * t1114 + t1081 * t1113) * t1129 + (-t1087 * t1158 + t1088 * t1114 + t1089 * t1113) * qJD(1)) / 0.2e1 + t954 * ((t1043 * t999 + t1044 * t997 - t1158 * t995) * t953 + (t1043 * t998 + t1044 * t996 - t1158 * t994) * t954 + (-t1006 * t1158 + t1007 * t1044 + t1008 * t1043) * qJD(1)) / 0.2e1 + t934 * ((t1022 * t980 + t1023 * t978 - t1158 * t976) * t933 + (t1022 * t979 + t1023 * t977 - t1158 * t975) * t934 + (t1022 * t986 + t1023 * t985 - t1158 * t984) * qJD(1)) / 0.2e1 + t952 * ((-t1158 * t958 + t960 * t989 + t962 * t988) * t951 + (-t1158 * t957 + t959 * t989 + t961 * t988) * t952 + (-t1158 * t965 + t966 * t989 + t967 * t988) * qJD(1)) / 0.2e1 + t848 * ((t1155 * t882 + t884 * t910 + t886 * t911) * t848 + (t1155 * t881 + t883 * t910 + t885 * t911) * t849 + (t1155 * t891 + t892 * t910 + t893 * t911) * qJD(1)) / 0.2e1 + t1128 * ((t1078 * t1155 + t1080 * t1116 + t1082 * t1115) * t1128 + (t1077 * t1155 + t1079 * t1116 + t1081 * t1115) * t1129 + (t1087 * t1155 + t1088 * t1116 + t1089 * t1115) * qJD(1)) / 0.2e1 + t953 * ((t1045 * t999 + t1046 * t997 + t1155 * t995) * t953 + (t1045 * t998 + t1046 * t996 + t1155 * t994) * t954 + (t1006 * t1155 + t1007 * t1046 + t1008 * t1045) * qJD(1)) / 0.2e1 + t933 * ((t1024 * t980 + t1025 * t978 + t1155 * t976) * t933 + (t1024 * t979 + t1025 * t977 + t1155 * t975) * t934 + (t1024 * t986 + t1025 * t985 + t1155 * t984) * qJD(1)) / 0.2e1 + t951 * ((t1155 * t958 + t960 * t991 + t962 * t990) * t951 + (t1155 * t957 + t959 * t991 + t961 * t990) * t952 + (t1155 * t965 + t966 * t991 + t967 * t990) * qJD(1)) / 0.2e1 + ((t1155 * t1104 + t1158 * t1205) * t1141 - (t1155 * t1103 + t1158 * t1206) * t1268 + (t1155 * t1130 + t1158 * t1204) * qJD(1)) * t1141 / 0.2e1 + ((t1017 * t1273 + t1263) * t1155 + (t1211 + (-t1217 * t1158 + (-t1016 + t1216) * t1155) * t937) * t1158) * t1273 / 0.2e1 - ((t1016 * t1272 - t1263) * t1158 + (t1211 + (t1216 * t1155 + (-t1017 - t1217) * t1158) * t937) * t1155) * t1272 / 0.2e1 + m(5) * (t842 ^ 2 + t844 ^ 2 + t845 ^ 2) / 0.2e1 + (((-t1106 * t1297 + t1108 * t1300) * t1155 - (-t1105 * t1297 + t1107 * t1300) * t1158) * qJD(2) + ((t1019 * t1055 + t1021 * t1056) * t1155 - (t1018 * t1055 + t1020 * t1056) * t1158) * t937 + (t1080 * t1127 - t1082 * t1203) * t1128 + (t1079 * t1127 - t1081 * t1203) * t1129 + (t1048 * t997 - t1315 * t999) * t953 + (t1048 * t996 - t1315 * t998) * t954 + (t1031 * t978 - t1207 * t980) * t933 + (t1031 * t977 - t1207 * t979) * t934 + (t960 * t993 + t962 * t992) * t951 + (t959 * t993 + t961 * t992) * t952 + (t884 * t913 + t886 * t914) * t848 + (t883 * t913 + t885 * t914) * t849 + (t872 * t903 + t874 * t902) * t854 + (t871 * t903 + t873 * t902) * t855 + (-t1131 * t1297 + t1132 * t1300 + t1033 * t1055 + t1034 * t1056 + t1088 * t1127 - t1089 * t1203 + t1007 * t1048 - t1008 * t1315 - t1207 * t986 + t1031 * t985 + t966 * t993 + t967 * t992 + t892 * t913 + t893 * t914 + t878 * t903 + t879 * t902) * qJD(1)) * qJD(1) / 0.2e1 + m(3) * (t1076 ^ 2 + t1085 ^ 2 + t1086 ^ 2) / 0.2e1 - ((-t1158 * t1104 + t1155 * t1205) * t1141 - (-t1158 * t1103 + t1155 * t1206) * t1268 + (-t1158 * t1130 + t1155 * t1204) * qJD(1)) * t1268 / 0.2e1 + t847 * ((-t858 * t908 + t860 * t904 + t862 * t905) * t846 + (-t857 * t908 + t859 * t904 + t861 * t905) * t847 + (-t865 * t908 + t866 * t904 + t867 * t905) * t912) / 0.2e1 + t846 * ((-t858 * t910 + t860 * t906 + t862 * t907) * t846 + (-t857 * t910 + t859 * t906 + t861 * t907) * t847 + (-t865 * t910 + t866 * t906 + t867 * t907) * t912) / 0.2e1 + m(6) * (t839 ^ 2 + t840 ^ 2 + t841 ^ 2) / 0.2e1;
T = t1;
