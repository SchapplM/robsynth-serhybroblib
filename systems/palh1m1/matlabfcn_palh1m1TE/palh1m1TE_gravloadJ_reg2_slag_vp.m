% Calculate inertial parameters regressor of gravitation load for
% palh1m1TE
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [4x1]
%   Generalized joint coordinates (joint angles)
% g_base [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [23x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[AB,AM,BC,BE,BG,BL,DA,DC,EP,GH,GP,HW,ML,OT2,T1D,T2A,T2T1,phi1,phi2,phi312,phi413,phi710,phi711]';
% 
% Output:
% taug_reg [4x(4*10)]
%   inertial parameter regressor of gravitation joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2020-04-13 14:34
% Revision: 394980f89398455cc479283a21eae791ed9f69cb (2020-04-12)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function taug_reg = palh1m1TE_gravloadJ_reg2_slag_vp(qJ, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(4,1),zeros(3,1),zeros(23,1)}
assert(isreal(qJ) && all(size(qJ) == [4 1]), ...
  'palh1m1TE_gravloadJ_reg2_slag_vp: qJ has to be [4x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'palh1m1TE_gravloadJ_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [23 1]), ...
  'palh1m1TE_gravloadJ_reg2_slag_vp: pkin has to be [23x1] (double)');

%% Symbolic Calculation
% From gravload_joint_fixb_regressor_matlab.m
t354 = sin(qJ(2));
t355 = sin(pkin(19));
t357 = cos(qJ(2));
t358 = cos(pkin(19));
t272 = t354 * t358 - t357 * t355;
t261 = pkin(7) * t272;
t254 = (-0.2e1 * t261 + pkin(1)) * pkin(1);
t381 = pkin(7) ^ 2;
t136 = t254 + t381;
t180 = pkin(3) ^ 2;
t325 = pkin(8) ^ 2 - t180;
t252 = t136 - t325;
t256 = -t261 + pkin(1);
t150 = t354 * t355 + t357 * t358;
t371 = pkin(7) + pkin(8);
t372 = pkin(7) - pkin(8);
t179 = sqrt(-((-pkin(3) + t371) * (pkin(3) + t372) + t254) * ((pkin(3) + t371) * (-pkin(3) + t372) + t254));
t331 = t150 * t179;
t314 = pkin(7) * t331;
t383 = 0.1e1 / pkin(3);
t246 = t383 * (t256 * t252 - t314);
t375 = 0.1e1 / t136;
t245 = t375 * t246;
t242 = t245 / 0.2e1;
t251 = pkin(7) * t252;
t247 = t383 * (t150 * t251 + t256 * t179);
t321 = t375 / 0.2e1;
t244 = t247 * t321;
t353 = sin(qJ(3));
t356 = cos(qJ(3));
t238 = t353 * t242 + t356 * t244;
t243 = -t245 / 0.2e1;
t239 = t356 * t243 + t353 * t244;
t315 = pkin(23) + pkin(22);
t294 = sin(t315);
t295 = cos(t315);
t231 = t295 * t238 - t294 * t239;
t230 = pkin(4) * t231;
t222 = (0.2e1 * t230 + pkin(5)) * pkin(5);
t369 = -pkin(9) + pkin(11);
t370 = -pkin(9) - pkin(11);
t178 = sqrt(-((pkin(4) - t369) * (pkin(4) + t369) + t222) * ((pkin(4) - t370) * (pkin(4) + t370) + t222));
t385 = t294 * t238 + t295 * t239;
t407 = t385 * t178;
t412 = pkin(4) * t407;
t411 = pkin(5) * t407;
t173 = 0.1e1 / pkin(8);
t410 = t173 * t321;
t182 = pkin(9) ^ 2;
t324 = pkin(11) ^ 2 - t182;
t229 = pkin(5) * t231;
t382 = pkin(5) ^ 2;
t72 = t382 + (0.2e1 * t229 + pkin(4)) * pkin(4);
t219 = t72 + t324;
t224 = t230 + pkin(5);
t379 = 0.1e1 / pkin(11);
t204 = t379 * (t224 * t219 - t412);
t217 = pkin(4) * t219;
t205 = t379 * (t224 * t178 + t217 * t385);
t337 = sin(pkin(21));
t339 = cos(pkin(21));
t409 = t337 * t204 + t339 * t205;
t171 = pkin(13) ^ 2;
t174 = pkin(6) ^ 2;
t175 = pkin(2) ^ 2;
t162 = sin(pkin(20));
t164 = cos(pkin(20));
t145 = t356 * t162 + t353 * t164;
t350 = pkin(6) * t145;
t361 = -t171 / 0.2e1 + t174 / 0.2e1 - t175 / 0.2e1 + (t350 + pkin(1) / 0.2e1) * pkin(1);
t377 = 0.2e1 * pkin(1);
t326 = t350 * t377 + t174;
t373 = -pkin(2) - pkin(13);
t122 = (pkin(1) - t373) * (pkin(1) + t373) + t326;
t368 = pkin(13) - pkin(2);
t123 = (pkin(1) - t368) * (pkin(1) + t368) + t326;
t146 = t353 * t162 - t356 * t164;
t349 = pkin(6) * t146;
t318 = pkin(1) * t349;
t177 = sqrt(-t123 * t122);
t359 = t177 / 0.2e1;
t335 = (t122 + t123) * t318 / t359;
t300 = -t335 / 0.4e1;
t130 = pkin(1) ^ 2 + t326;
t128 = 0.1e1 / t130;
t176 = 0.1e1 / pkin(2);
t297 = 0.1e1 / t130 ^ 2 * t318;
t125 = t130 - t171 + t175;
t141 = -pkin(1) - t350;
t111 = t125 * t349 - t141 * t177;
t302 = t354 * t111;
t332 = t146 * t177;
t110 = -pkin(6) * t332 - t125 * t141;
t305 = t357 * t110;
t310 = -t357 / 0.2e1;
t301 = -t335 / 0.2e1;
t86 = (-t145 * t177 + (t141 * t377 - t125 + t301) * t146) * pkin(6);
t378 = -0.2e1 * pkin(1);
t88 = t141 * t301 + t174 * t146 ^ 2 * t378 + (t125 * t145 - t332) * pkin(6);
t408 = t176 * ((t354 * t88 / 0.2e1 + t86 * t310) * t128 - (t305 - t302) * t297);
t165 = sin(qJ(4));
t168 = cos(qJ(4));
t169 = cos(qJ(1));
t149 = -t354 * t353 + t357 * t356;
t166 = sin(qJ(1));
t137 = t149 * t166;
t148 = -t357 * t353 - t354 * t356;
t138 = t148 * t166;
t376 = 0.1e1 / t72;
t327 = t376 / 0.2e1;
t45 = t409 * t327;
t199 = t339 * t204;
t200 = t337 * t205;
t328 = -t376 / 0.2e1;
t46 = t199 * t328 + t200 * t327;
t28 = -t137 * t46 - t138 * t45;
t406 = t169 * t165 + t168 * t28;
t405 = t165 * t28 - t168 * t169;
t404 = -0.2e1 * t385;
t259 = t272 * t179;
t352 = pkin(1) * t150;
t317 = pkin(7) * t352;
t334 = 0.4e1 / t179 * (t371 * t372 - t180 + t254) * t317;
t299 = -t334 / 0.2e1;
t87 = (t259 + (t299 + t325 - t381) * t150) * pkin(7) + (-0.3e1 * pkin(1) + 0.4e1 * t261) * t317;
t403 = -t87 / 0.2e1;
t319 = t150 ^ 2 * t378;
t93 = -t314 + t256 * t334 / 0.2e1 - t272 * t251 + t381 * t319;
t402 = t93 / 0.2e1;
t161 = sin(pkin(22));
t401 = t161 / 0.2e1;
t163 = cos(pkin(22));
t400 = -t163 / 0.2e1;
t399 = -t385 / 0.2e1;
t398 = t337 / 0.2e1;
t397 = -t339 / 0.2e1;
t303 = t354 * t110;
t304 = t357 * t111;
t333 = t128 * t176;
t95 = (t303 / 0.2e1 + t304 / 0.2e1) * t333;
t374 = pkin(4) * pkin(5);
t320 = 0.1e1 / t72 ^ 2 * t374;
t396 = t409 * t320;
t395 = (-t199 + t200) * t320;
t386 = 0.4e1 / t178 * ((pkin(4) + pkin(11)) * (pkin(4) - pkin(11)) + t222 - t182) * t374;
t213 = t385 * t386;
t394 = -t178 * t231 + t213 * t399;
t131 = 0.1e1 / t136 ^ 2;
t240 = t246 * t317;
t241 = t247 * t317;
t322 = -t375 / 0.2e1;
t279 = t383 * t356 * t322;
t351 = t383 * t375;
t293 = t353 * t351;
t234 = t293 * t403 + t93 * t279 + (-t353 * t240 - t356 * t241) * t131;
t235 = t87 * t279 + t293 * t402 + (-t356 * t240 + t353 * t241) * t131;
t210 = -t294 * t234 + t295 * t235;
t60 = t295 * t234 + t294 * t235;
t214 = t60 * t386;
t393 = -t178 * t210 + t214 * t399;
t218 = t72 - t324;
t216 = pkin(5) * t218;
t223 = -t229 - pkin(4);
t392 = 0.2e1 * t223 * t374 - t216;
t391 = -0.2e1 * t224 * t374 - t217;
t126 = t136 + t325;
t143 = pkin(1) * t272 - pkin(7);
t112 = -pkin(1) * t331 - t143 * t126;
t285 = t131 * t173 * t317;
t390 = pkin(1) * (t259 + (0.2e1 * t143 * pkin(7) - t126 + t299) * t150) * t410 + t112 * t285;
t380 = 0.1e1 / pkin(9);
t206 = t380 * (-t223 * t178 + t216 * t385);
t202 = t206 * t320;
t53 = -t223 * t218 - t411;
t362 = t53 * t380;
t292 = t320 * t362;
t389 = -t161 * t202 - t163 * t292;
t388 = t161 * t292 - t163 * t202;
t113 = t126 * t352 - t143 * t179;
t387 = (t143 * t299 + (pkin(7) * t319 - t272 * t126 - t331) * pkin(1)) * t410 + t113 * t285;
t367 = t380 * t376;
t366 = t379 * t376;
t94 = (t302 / 0.2e1 - t305 / 0.2e1) * t333;
t90 = t166 * t94;
t365 = g(1) * t90;
t91 = t169 * t95;
t364 = g(2) * t91;
t363 = g(3) * (-t148 * t46 + t149 * t45);
t360 = -t177 / 0.2e1;
t212 = t214 / 0.2e1;
t225 = pkin(5) * pkin(4) ^ 2 * t404;
t311 = t379 * t327;
t341 = t60 * t178;
t184 = (-pkin(4) * t341 + t210 * t217 + t224 * t212 + t60 * t225) * t311;
t186 = (t393 * pkin(4) + t391 * t60) * t366;
t15 = t339 * t184 + t186 * t398 + t396 * t60;
t348 = t15 + t46;
t16 = t337 * t184 + t186 * t397 + t395 * t60;
t347 = t16 - t45;
t211 = t213 / 0.2e1;
t188 = (t224 * t211 + t231 * t217 + t225 * t385 - t412) * t311;
t190 = (t394 * pkin(4) + t385 * t391) * t366;
t19 = t339 * t188 + t190 * t398 + t385 * t396;
t346 = t19 + t46;
t20 = t337 * t188 + t190 * t397 + t385 * t395;
t345 = t20 - t45;
t344 = -t137 * t45 + t138 * t46;
t139 = t149 * t169;
t140 = t148 * t169;
t30 = -t139 * t45 + t140 * t46;
t343 = t148 * t45 + t149 * t46;
t342 = pkin(16) * t166;
t338 = cos(pkin(23));
t336 = sin(pkin(23));
t329 = 0.1e1 / pkin(13) * t176;
t313 = g(3) * t329;
t312 = t380 * t328;
t309 = t166 * t357;
t308 = t166 * t354;
t307 = t169 * t357;
t306 = t169 * t354;
t167 = sin(pkin(18));
t298 = t167 * t322;
t296 = pkin(1) * t308 - t342;
t291 = t338 * t351;
t290 = t329 * t361;
t289 = t329 * t359;
t286 = -g(1) * t344 + g(2) * t30;
t144 = t149 * pkin(5);
t284 = -t354 * pkin(1) + t144;
t283 = -t137 * pkin(5) + t296;
t152 = g(1) * t169 + g(2) * t166;
t282 = g(1) * t166 - g(2) * t169;
t278 = t383 * t336 * t321;
t133 = t138 * pkin(5);
t275 = -pkin(1) * t309 + t133;
t135 = t140 * pkin(5);
t274 = -pkin(1) * t307 + t135;
t160 = t169 * pkin(16);
t273 = -pkin(1) * t306 + t160;
t89 = t166 * t95;
t271 = t89 * t360 + t90 * t361;
t92 = t169 * t94;
t270 = t92 * t359 + t91 * t361;
t1 = -t348 * t137 + t347 * t138;
t3 = -t348 * t139 + t347 * t140;
t5 = t348 * t148 + t347 * t149;
t269 = g(1) * t3 + g(2) * t1 + g(3) * t5;
t2 = t137 * t16 + t138 * t15 + t344;
t4 = t139 * t16 + t140 * t15 + t30;
t6 = -t148 * t16 + t149 * t15 + t343;
t268 = g(1) * t4 + g(2) * t2 + g(3) * t6;
t267 = t173 * t282;
t11 = t346 * t148 + t345 * t149;
t7 = -t346 * t137 + t345 * t138;
t9 = -t346 * t139 + t345 * t140;
t266 = g(1) * t9 + g(2) * t7 + g(3) * t11;
t10 = t139 * t20 + t140 * t19 + t30;
t12 = -t148 * t20 + t149 * t19 + t343;
t8 = t137 * t20 + t138 * t19 + t344;
t265 = g(1) * t10 + g(2) * t8 + g(3) * t12;
t264 = t139 * pkin(5) + t273;
t66 = ((t88 * t310 - t354 * t86 / 0.2e1) * t128 + (-t304 - t303) * t297) * t176;
t61 = t166 * t66;
t63 = t169 * t66;
t263 = -g(1) * t63 - g(2) * t61 + g(3) * t408;
t262 = -g(1) * t92 - g(2) * t90 + g(3) * t95;
t117 = -g(1) * t140 - g(2) * t138 - g(3) * t149;
t96 = t338 * t243 + t336 * t244;
t97 = t336 * t242 + t338 * t244;
t78 = -t354 * t97 + t357 * t96;
t260 = t354 * t96 + t357 * t97;
t253 = g(1) * t307 + g(2) * t309 + g(3) * t354;
t121 = -g(1) * t296 - g(2) * t273;
t127 = t253 * pkin(1);
t67 = t291 * t403 + t93 * t278 + (-t338 * t240 + t336 * t241) * t131;
t68 = t291 * t402 + t87 * t278 + (t336 * t240 + t338 * t241) * t131;
t58 = -t354 * t68 + t357 * t67 - t260;
t59 = -t354 * t67 - t357 * t68 - t78;
t226 = pkin(4) * t382 * t404;
t203 = t206 * t328;
t191 = (t394 * pkin(5) + t385 * t392) * t367;
t189 = (-t223 * t211 + t231 * t216 + t226 * t385 - t411) * t312;
t187 = (t393 * pkin(5) + t392 * t60) * t367;
t185 = (-pkin(5) * t341 + t210 * t216 - t223 * t212 + t60 * t226) * t312;
t170 = cos(pkin(18));
t151 = t282 * pkin(16);
t116 = g(1) * t139 + g(2) * t137 - g(3) * t148;
t83 = t92 * t290;
t82 = t89 * t290;
t76 = t78 * t169;
t75 = t260 * t169;
t74 = t78 * t166;
t73 = t260 * t166;
t70 = t390 * t167 + t387 * t170;
t69 = -t387 * t167 + t390 * t170;
t64 = t169 * t408;
t62 = t166 * t408;
t57 = t58 * t169;
t56 = t59 * t169;
t55 = t58 * t166;
t54 = t59 * t166;
t44 = t163 * t53 * t312 + t161 * t203;
t43 = t161 * t327 * t362 + t163 * t203;
t31 = t139 * t46 + t140 * t45;
t26 = t165 * t166 + t168 * t31;
t25 = -t165 * t31 + t166 * t168;
t18 = t161 * t189 + t191 * t400 + t385 * t389;
t17 = t163 * t189 + t191 * t401 + t385 * t388;
t14 = t161 * t185 + t187 * t400 + t389 * t60;
t13 = t163 * t185 + t187 * t401 + t388 * t60;
t21 = [0, 0, 0, 0, 0, 0, t282, t152, 0, 0, 0, 0, 0, 0, 0, 0, -g(1) * t308 + g(2) * t306, -g(1) * t309 + g(2) * t307, -t152, t151, 0, 0, 0, 0, 0, 0, g(1) * t137 - g(2) * t139, g(1) * t138 - g(2) * t140, -t152, t121, 0, 0, 0, 0, 0, 0, -g(1) * t28 - g(2) * t31, -t286, -t152, -g(1) * t283 - g(2) * t264, 0, 0, 0, 0, 0, 0, -g(1) * t406 - g(2) * t26, g(1) * t405 - g(2) * t25, t286, -g(2) * (t31 * pkin(10) - t30 * pkin(12) + t264) - g(1) * (pkin(10) * t28 + pkin(12) * t344 + t283), 0, 0, 0, 0, 0, 0, (t170 * t112 * t321 + t113 * t298) * t267, (t113 * t170 * t322 + t112 * t298) * t267, -t152, -t282 * pkin(15), 0, 0, 0, 0, 0, 0, -g(1) * t73 + g(2) * t75, -g(1) * t74 + g(2) * t76, -t152, t121, 0, 0, 0, 0, 0, 0, -g(1) * t89 + t364, -g(2) * t92 + t365, -t152, t151, 0, 0, 0, 0, 0, 0, -g(1) * t82 + (g(2) * t270 + t360 * t365) * t329, -g(2) * t83 + (g(1) * t271 - t360 * t364) * t329, -t152, -g(2) * (-pkin(2) * t91 + t160) - g(1) * (pkin(2) * t89 - t342), 0, 0, 0, 0, 0, 0, -g(2) * (-t43 * t76 - t44 * t75) - g(1) * (t43 * t74 + t44 * t73), -g(2) * (t43 * t75 - t44 * t76) - g(1) * (-t43 * t73 + t44 * t74), -t152, (-g(2) * (t161 * t76 - t163 * t75) - g(1) * (-t161 * t74 + t163 * t73)) * pkin(4) + t121; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t253, -g(1) * t306 - g(2) * t308 + g(3) * t357, 0, 0, 0, 0, 0, 0, 0, 0, t117, t116, 0, t127, 0, 0, 0, 0, 0, 0, -t268, -t269, 0, -g(1) * t274 - g(2) * t275 - g(3) * t284, 0, 0, 0, 0, 0, 0, -t268 * t168, t268 * t165, t269, -g(3) * (t6 * pkin(10) - t5 * pkin(12) + t284) - g(2) * (t2 * pkin(10) - t1 * pkin(12) + t275) - g(1) * (t4 * pkin(10) - t3 * pkin(12) + t274), 0, 0, 0, 0, 0, 0, -g(3) * t70 - t152 * t69, -g(3) * t69 + t152 * t70, 0, 0, 0, 0, 0, 0, 0, 0, -g(1) * t56 - g(2) * t54 - g(3) * t58, g(1) * t57 + g(2) * t55 - g(3) * t59, 0, t127, 0, 0, 0, 0, 0, 0, t262, -g(1) * t91 - g(2) * t89 - g(3) * t94, 0, 0, 0, 0, 0, 0, 0, 0, -(t94 * t360 - t95 * t361) * t313 - g(2) * t271 * t329 - g(1) * (-t289 * t91 + t83), -(-t95 * t359 + t94 * t361) * t313 - g(2) * (t289 * t90 + t82) - g(1) * t270 * t329, 0, t262 * pkin(2), 0, 0, 0, 0, 0, 0, -g(3) * (-t13 * t260 + t14 * t78 + t43 * t59 + t44 * t58) - g(2) * (-t13 * t74 - t14 * t73 - t43 * t55 + t44 * t54) - g(1) * (-t13 * t76 - t14 * t75 - t43 * t57 + t44 * t56), -g(3) * (-t13 * t78 - t14 * t260 - t43 * t58 + t44 * t59) - g(2) * (t13 * t73 - t14 * t74 - t43 * t54 - t44 * t55) - g(1) * (t13 * t75 - t14 * t76 - t43 * t56 - t44 * t57), 0, t127 + (-g(3) * (-t161 * t59 + t163 * t58) - g(2) * (t161 * t55 + t163 * t54) - g(1) * (t161 * t57 + t163 * t56)) * pkin(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t117, t116, 0, 0, 0, 0, 0, 0, 0, 0, -t265, -t266, 0, t117 * pkin(5), 0, 0, 0, 0, 0, 0, -t265 * t168, t265 * t165, t266, -g(3) * (pkin(10) * t12 - pkin(12) * t11 + t144) - g(2) * (pkin(10) * t8 - pkin(12) * t7 + t133) - g(1) * (pkin(10) * t10 - pkin(12) * t9 + t135), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t263, -g(1) * t64 - g(2) * t62 - g(3) * t66, 0, 0, 0, 0, 0, 0, 0, 0, (-g(3) * (-t95 * t300 + t94 * t318 + t66 * t360 - t361 * t408) - g(2) * (t90 * t300 + t89 * t318 + t62 * t360 + t61 * t361) - g(1) * (t92 * t300 + t91 * t318 + t64 * t360 + t63 * t361)) * t329, (-g(3) * (t94 * t300 + t95 * t318 - t359 * t408 + t66 * t361) - g(2) * (t89 * t300 - t90 * t318 + t61 * t359 + t62 * t361) - g(1) * (t91 * t300 - t92 * t318 + t63 * t359 + t64 * t361)) * t329, 0, t263 * pkin(2), 0, 0, 0, 0, 0, 0, -g(3) * (-t17 * t260 + t18 * t78) - g(2) * (-t17 * t74 - t18 * t73) - g(1) * (-t17 * t76 - t18 * t75), -g(3) * (-t17 * t78 - t18 * t260) - g(2) * (t17 * t73 - t18 * t74) - g(1) * (t17 * t75 - t18 * t76), 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1) * t25 - g(2) * t405 + t165 * t363, g(1) * t26 - g(2) * t406 + t168 * t363, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
taug_reg = t21;
