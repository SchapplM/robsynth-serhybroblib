% Jacobian time derivative of explicit kinematic constraints of
% palh1m1DE1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [4x1]
%   Generalized joint coordinates (joint angles)
% qJD [4x1]
%   Generalized joint velocities
% pkin [23x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[AB,AM,BC,BE,BG,BL,DA,DC,EP,GH,GP,HW,ML,OT2,T1D,T2A,T2T1,phi1,phi2,phi312,phi413,phi710,phi711]';
% 
% Output:
% WD [16x4]
%
% Sources:
% [NakamuraGho1989] Nakamura, Yoshihiko and Ghodoussi, Modjtaba: Dynamics computation of closed-link robot mechanisms with nonredundant and redundant actuators (1989)
% [ParkChoPlo1999] Park, FC and Choi, Jihyeon and Ploen, SR: Symbolic formulation of closed chain dynamics in independent coordinates

% Quelle: HybrDyn-Toolbox
% Datum: 2020-04-14 19:47
% Revision: 2d0abd6fcc3afe6f578a07ad3d897ec57baa6ba1 (2020-04-13)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function WD = palh1m1DE1_kinconstr_expl_jacobianD_mdh_sym_varpar(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(4,1),zeros(4,1),zeros(23,1)}
assert(isreal(qJ) && all(size(qJ) == [4 1]), ...
  'palh1m1DE1_kinconstr_expl_jacobianD_mdh_sym_varpar: qJ has to be [4x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [4 1]), ...
  'palh1m1DE1_kinconstr_expl_jacobianD_mdh_sym_varpar: qJD has to be [4x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [23 1]), ...
  'palh1m1DE1_kinconstr_expl_jacobianD_mdh_sym_varpar: pkin has to be [23x1] (double)');

%% Symbolic Calculation
% From kinconstr_expl_jacobianD_matlab.m
% OptimizationMode: 2
% StartTime: 2020-04-13 14:45:06
% EndTime: 2020-04-13 14:45:44
% DurationCPUTime: 38.58s
% Computational Cost: add. (790700->506), mult. (1238022->1095), div. (45072->54), fcn. (772396->22), ass. (0->515)
t617 = cos(pkin(20));
t620 = cos(qJ(3));
t921 = sin(pkin(20));
t939 = sin(qJ(3));
t603 = t939 * t617 + t620 * t921;
t929 = pkin(6) * t603;
t822 = pkin(1) * t929;
t594 = 0.2e1 * t822;
t623 = pkin(13) ^ 2;
t637 = pkin(2) ^ 2;
t632 = pkin(6) ^ 2;
t639 = pkin(1) ^ 2;
t835 = t632 + t639;
t801 = -t637 + t835;
t577 = t594 + t623 + t801;
t593 = pkin(1) * t603 + pkin(6);
t604 = -t620 * t617 + t939 * t921;
t838 = t594 + t632;
t970 = -pkin(2) - pkin(13);
t568 = (pkin(1) - t970) * (pkin(1) + t970) + t838;
t969 = -pkin(2) + pkin(13);
t569 = (pkin(1) - t969) * (pkin(1) + t969) + t838;
t876 = t569 * t568;
t641 = sqrt(-t876);
t856 = t604 * t641;
t545 = -pkin(1) * t856 + t577 * t593;
t540 = 0.1e1 / t545 ^ 2;
t547 = pkin(1) * t604 * t577 + t593 * t641;
t543 = t547 ^ 2;
t525 = t540 * t543 + 0.1e1;
t521 = 0.1e1 / t525;
t994 = 0.2e1 * t521;
t618 = sin(qJ(2));
t621 = cos(pkin(19));
t940 = sin(pkin(19));
t941 = cos(qJ(2));
t697 = -t618 * t621 + t941 * t940;
t927 = pkin(7) * t697;
t821 = pkin(1) * t927;
t599 = 0.2e1 * t821;
t631 = pkin(7) ^ 2;
t836 = t631 + t639;
t591 = t599 + t836;
t588 = 0.1e1 / t591;
t607 = t618 * t940 + t941 * t621;
t601 = t607 * qJD(2);
t636 = 0.1e1 / pkin(3);
t629 = pkin(8) ^ 2;
t635 = pkin(3) ^ 2;
t583 = -t629 + t635 + t591;
t597 = pkin(1) + t927;
t837 = t599 + t639;
t968 = -pkin(8) - pkin(3);
t570 = (pkin(7) - t968) * (pkin(7) + t968) + t837;
t967 = -pkin(8) + pkin(3);
t571 = (pkin(7) - t967) * (pkin(7) + t967) + t837;
t874 = t571 * t570;
t642 = sqrt(-t874);
t550 = pkin(7) * t607 * t583 + t597 * t642;
t794 = t939 * t550;
t854 = t607 * t642;
t814 = pkin(7) * t854;
t549 = t583 * t597 - t814;
t845 = t620 * t549;
t714 = t794 - t845;
t589 = 0.1e1 / t591 ^ 2;
t972 = pkin(1) * pkin(7);
t828 = t589 * t972;
t678 = t714 * t828;
t795 = t939 * t549;
t844 = t620 * t550;
t695 = t795 / 0.2e1 + t844 / 0.2e1;
t993 = 0.2e1 * pkin(1);
t725 = pkin(7) * (t570 + t571) * t993;
t553 = t601 * t725;
t600 = t697 * qJD(2);
t861 = t601 * t607;
t937 = pkin(1) * t631;
t754 = t861 * t937;
t566 = 0.1e1 / t642;
t954 = t566 / 0.2e1;
t781 = t597 * t954;
t860 = t601 * t642;
t493 = t553 * t781 - 0.2e1 * t754 + (t600 * t583 - t860) * pkin(7);
t798 = t939 * t493;
t879 = t553 * t607;
t955 = -t566 / 0.2e1;
t744 = t879 * t955;
t529 = pkin(7) * t744;
t978 = -0.2e1 * pkin(1);
t831 = t597 * t978;
t772 = -t583 + t831;
t862 = t600 * t642;
t492 = t529 + (t772 * t601 - t862) * pkin(7);
t849 = t620 * t492;
t435 = (t601 * t678 + (-t849 / 0.2e1 + t798 / 0.2e1 + t695 * qJD(3)) * t588) * t636;
t698 = t845 / 0.2e1 - t794 / 0.2e1;
t715 = t795 + t844;
t799 = t939 * t492;
t827 = t601 * t972;
t848 = t620 * t493;
t436 = (t715 * t589 * t827 + (t799 / 0.2e1 + t848 / 0.2e1 + t698 * qJD(3)) * t588) * t636;
t612 = pkin(23) + pkin(22);
t610 = sin(t612);
t611 = cos(t612);
t427 = t435 * t610 - t436 * t611;
t867 = t588 * t636;
t514 = t695 * t867;
t515 = t698 * t867;
t471 = t514 * t611 + t515 * t610;
t932 = pkin(5) * t471;
t823 = pkin(4) * t932;
t470 = 0.2e1 * t823;
t633 = pkin(5) ^ 2;
t840 = t470 + t633;
t966 = -pkin(9) - pkin(11);
t456 = (pkin(4) - t966) * (pkin(4) + t966) + t840;
t965 = -pkin(9) + pkin(11);
t457 = (pkin(4) - t965) * (pkin(4) + t965) + t840;
t896 = t457 * t456;
t640 = sqrt(-t896);
t901 = t427 * t640;
t992 = -0.4e1 * t639;
t590 = t588 * t589;
t803 = t639 * t861;
t750 = t631 * t803;
t730 = t590 * t750;
t721 = 0.4e1 * t730;
t761 = t514 * t610 - t611 * t515;
t991 = -0.2e1 * t761;
t832 = 0.2e1 * pkin(5);
t724 = pkin(4) * (t456 + t457) * t832;
t407 = t427 * t724;
t438 = 0.1e1 / t640;
t958 = -t761 / 0.2e1;
t789 = t438 * t958;
t762 = t611 * t435 + t436 * t610;
t906 = t762 * t640;
t706 = t407 * t789 - t906;
t625 = pkin(11) ^ 2;
t627 = pkin(9) ^ 2;
t634 = pkin(4) ^ 2;
t834 = t633 + t634;
t800 = -t627 + t834;
t463 = t470 + t625 + t800;
t469 = pkin(4) * t471 + pkin(5);
t770 = -0.2e1 * pkin(5) * t469 - t463;
t381 = (t770 * t427 + t706) * pkin(4);
t931 = pkin(5) * t761;
t773 = -0.2e1 * t634 * t931;
t962 = t438 / 0.2e1;
t790 = t469 * t962;
t383 = t407 * t790 + t427 * t773 + (t463 * t762 - t901) * pkin(4);
t467 = t470 + t834;
t464 = 0.1e1 / t467;
t626 = 0.1e1 / pkin(11);
t892 = t464 * t626;
t423 = pkin(4) * t463 * t761 + t469 * t640;
t614 = sin(pkin(21));
t908 = t423 * t614;
t981 = t761 * t640;
t421 = -pkin(4) * t981 + t463 * t469;
t616 = cos(pkin(21));
t909 = t421 * t616;
t406 = (-t909 / 0.2e1 + t908 / 0.2e1) * t892;
t403 = 0.1e1 / t406 ^ 2;
t465 = 0.1e1 / t467 ^ 2;
t934 = pkin(4) * t465;
t824 = pkin(5) * t934;
t681 = (t908 - t909) * t824;
t947 = -t616 / 0.2e1;
t950 = t614 / 0.2e1;
t990 = ((t381 * t947 + t383 * t950) * t464 + t427 * t681) * t626 * t403;
t933 = pkin(4) * t633;
t775 = t933 * t991;
t468 = -pkin(4) - t932;
t791 = -t438 * t468 / 0.2e1;
t462 = -t625 + t627 + t467;
t984 = t462 * t762;
t382 = t407 * t791 + t427 * t775 + (-t901 + t984) * pkin(5);
t420 = -pkin(5) * t981 - t462 * t468;
t417 = 0.1e1 / t420 ^ 2;
t422 = t462 * t931 - t468 * t640;
t419 = t422 ^ 2;
t410 = t417 * t419 + 0.1e1;
t911 = t417 * t422;
t771 = 0.2e1 * pkin(4) * t468 - t462;
t380 = (t771 * t427 + t706) * pkin(5);
t416 = 0.1e1 / t420;
t918 = t380 * t416 * t417;
t989 = 0.2e1 * (t382 * t911 - t419 * t918) / t410 ^ 2;
t596 = t604 * qJD(3);
t726 = (t568 + t569) * pkin(6) * t993;
t552 = t596 * t726;
t592 = -pkin(1) - t929;
t563 = 0.1e1 / t641;
t957 = -t563 / 0.2e1;
t784 = t592 * t957;
t858 = t604 * t632;
t805 = t596 * t858;
t863 = t596 * t641;
t587 = t594 + t835;
t576 = -t623 + t637 + t587;
t595 = t603 * qJD(3);
t866 = t595 * t576;
t489 = t552 * t784 - t805 * t993 + (-t863 + t866) * pkin(6);
t815 = pkin(6) * t856;
t544 = -t576 * t592 - t815;
t537 = 0.1e1 / t544 ^ 2;
t928 = pkin(6) * t604;
t546 = t576 * t928 - t592 * t641;
t542 = t546 ^ 2;
t524 = t537 * t542 + 0.1e1;
t884 = t537 * t546;
t880 = t552 * t604;
t745 = t880 * t957;
t526 = pkin(6) * t745;
t864 = t595 * t641;
t923 = t592 * pkin(1);
t487 = t526 + (-t864 - (t576 - 0.2e1 * t923) * t596) * pkin(6);
t536 = 0.1e1 / t544;
t888 = t487 * t536 * t537;
t988 = 0.2e1 * (t489 * t884 - t542 * t888) / t524 ^ 2;
t956 = t563 / 0.2e1;
t783 = t593 * t956;
t857 = t604 * t639;
t804 = t596 * t857;
t865 = t595 * t577;
t976 = 0.2e1 * pkin(6);
t490 = t552 * t783 - t804 * t976 + (-t863 + t865) * pkin(1);
t883 = t540 * t547;
t527 = pkin(1) * t745;
t922 = t593 * pkin(6);
t488 = t527 + (-t864 - (t577 + 0.2e1 * t922) * t596) * pkin(1);
t539 = 0.1e1 / t545;
t887 = t488 * t539 * t540;
t987 = 0.2e1 * (t490 * t883 - t543 * t887) / t525 ^ 2;
t615 = cos(pkin(23));
t852 = t615 * t549;
t613 = sin(pkin(23));
t853 = t613 * t550;
t508 = (-t852 / 0.2e1 + t853 / 0.2e1) * t867;
t505 = 0.1e1 / t508 ^ 2;
t683 = (-t852 + t853) * t828;
t949 = -t615 / 0.2e1;
t951 = t613 / 0.2e1;
t986 = ((t492 * t949 + t493 * t951) * t588 + t601 * t683) * t636 * t505;
t528 = pkin(1) * t744;
t802 = -t635 + t836;
t582 = t599 + t629 + t802;
t598 = -pkin(1) * t697 - pkin(7);
t830 = 0.2e1 * t598 * pkin(7);
t769 = -t582 + t830;
t491 = t528 + (t769 * t601 - t862) * pkin(1);
t753 = pkin(7) * t803;
t780 = t598 * t955;
t494 = t553 * t780 - 0.2e1 * t753 + (t600 * t582 - t860) * pkin(1);
t548 = -pkin(1) * t854 - t582 * t598;
t622 = cos(pkin(18));
t842 = t622 * t548;
t551 = pkin(1) * t607 * t582 - t598 * t642;
t619 = sin(pkin(18));
t850 = t619 * t551;
t630 = 0.1e1 / pkin(8);
t868 = t588 * t630;
t516 = (t842 / 0.2e1 - t850 / 0.2e1) * t868;
t511 = 0.1e1 / t516 ^ 2;
t685 = (t842 - t850) * t828;
t942 = t622 / 0.2e1;
t945 = -t619 / 0.2e1;
t985 = ((t491 * t942 + t494 * t945) * t588 + t601 * t685) * t630 * t511;
t554 = t604 * t726;
t878 = t563 * t554;
t555 = t607 * t725;
t877 = t566 * t555;
t628 = 0.1e1 / pkin(9);
t408 = 0.1e1 / t410;
t971 = pkin(4) * pkin(5);
t826 = t427 * t971;
t747 = pkin(9) * t408 * t826;
t925 = pkin(9) * t467;
t758 = t408 * t417 * t925;
t813 = t416 * t925;
t980 = t628 * (-t380 * t758 - 0.2e1 * t416 * t747 - t813 * t989);
t812 = t422 * t925;
t757 = t417 * t812;
t979 = t628 * (0.2e1 * t408 * t812 * t918 - t382 * t758 + 0.2e1 * t747 * t911 + t757 * t989);
t402 = 0.1e1 / t406;
t461 = t625 - t800 - 0.2e1 * t823;
t458 = 0.1e1 / t461;
t504 = 0.1e1 / t508;
t510 = 0.1e1 / t516;
t575 = t623 - t801 - 0.2e1 * t822;
t572 = 0.1e1 / t575;
t581 = t629 - t802 - 0.2e1 * t821;
t578 = 0.1e1 / t581;
t584 = 0.1e1 / t587;
t459 = 0.1e1 / t461 ^ 2;
t573 = 0.1e1 / t575 ^ 2;
t579 = 0.1e1 / t581 ^ 2;
t585 = 0.1e1 / t587 ^ 2;
t975 = -0.2e1 * t604 ^ 2;
t974 = -0.2e1 * t607 ^ 2;
t973 = pkin(1) * pkin(6);
t964 = -t407 / 0.2e1;
t963 = -t762 / 0.2e1;
t738 = -0.8e1 * t750;
t535 = t600 * t725 + t738;
t806 = 0.1e1 / t874 * t553 * t877;
t700 = t806 / 0.4e1 + t535 * t954;
t727 = -0.4e1 * t600 * t607 - 0.2e1 * t601 * t697;
t782 = -t877 / 0.2e1;
t740 = t782 - t583;
t447 = t529 + t700 * t597 + t727 * t937 + (t740 * t601 - t862) * pkin(7);
t961 = t447 / 0.2e1;
t673 = t860 + (-t697 * t553 / 0.2e1 - t600 * t555 / 0.2e1 - t607 * t535 / 0.2e1) * t566 - t607 * t806 / 0.4e1;
t449 = 0.4e1 * t754 + (t772 * t600 + t673) * pkin(7);
t960 = -t449 / 0.2e1;
t959 = t464 / 0.2e1;
t953 = -t584 / 0.2e1;
t952 = t584 / 0.2e1;
t948 = t615 / 0.2e1;
t946 = t616 / 0.2e1;
t944 = t619 / 0.2e1;
t943 = -t620 / 0.2e1;
t938 = pkin(1) * t585;
t936 = pkin(2) * t587;
t935 = pkin(4) * t464;
t930 = pkin(5) * t628;
t926 = pkin(7) * t639;
t924 = pkin(13) * t587;
t907 = t423 * t616;
t910 = t421 * t614;
t680 = (t907 + t910) * t824;
t369 = ((t381 * t950 + t383 * t946) * t464 + t427 * t680) * t626;
t405 = (t910 / 0.2e1 + t907 / 0.2e1) * t892;
t401 = t405 ^ 2;
t390 = t401 * t403 + 0.1e1;
t915 = t403 * t405;
t919 = t402 * t990;
t920 = 0.2e1 * (t369 * t915 - t401 * t919) / t390 ^ 2;
t895 = t457 * t459;
t433 = -t456 * t895 + 0.1e1;
t460 = t458 * t459;
t917 = (0.2e1 * t895 + (0.4e1 * t457 * t460 + 0.2e1 * t459) * t456) * t826 / t433 ^ 2;
t855 = t697 * t642;
t498 = (-t855 + (t740 + t831) * t607) * pkin(7);
t797 = t939 * t498;
t502 = t555 * t781 + t937 * t974 + (t583 * t697 - t854) * pkin(7);
t846 = t620 * t502;
t696 = t797 / 0.2e1 + t846 / 0.2e1;
t796 = t939 * t502;
t847 = t620 * t498;
t412 = (t714 * t721 + (t696 * qJD(3) + t449 * t943 + t939 * t961) * t588 + ((t796 - t847) * t601 + t714 * t600 + (t715 * qJD(3) + t798 - t849) * t607) * t828) * t636;
t686 = t607 * t715;
t699 = -t847 / 0.2e1 + t796 / 0.2e1;
t413 = (t631 * t601 * t590 * t686 * t992 + (t699 * qJD(3) + t447 * t943 + t939 * t960) * t588 + ((-t797 - t846) * t601 - t715 * t600 + (t714 * qJD(3) - t799 - t848) * t607) * t828) * t636;
t395 = t412 * t610 + t413 * t611;
t916 = t395 * t640;
t914 = t407 * t438 / t896;
t851 = t615 * t550;
t881 = t549 * t613;
t682 = (t851 + t881) * t828;
t443 = ((t492 * t951 + t493 * t948) * t588 + t601 * t682) * t636;
t509 = (t851 / 0.2e1 + t881 / 0.2e1) * t867;
t507 = t509 ^ 2;
t477 = t505 * t507 + 0.1e1;
t886 = t505 * t509;
t898 = t504 * t986;
t913 = 0.2e1 * (t443 * t886 - t507 * t898) / t477 ^ 2;
t841 = t622 * t551;
t882 = t548 * t619;
t684 = (t841 + t882) * t828;
t445 = ((t491 * t944 + t494 * t942) * t588 + t601 * t684) * t630;
t517 = (t841 / 0.2e1 + t882 / 0.2e1) * t868;
t513 = t517 ^ 2;
t480 = t511 * t513 + 0.1e1;
t885 = t511 * t517;
t897 = t510 * t985;
t912 = 0.2e1 * (t445 * t885 - t513 * t897) / t480 ^ 2;
t452 = (-t696 * t588 - t686 * t828) * t636;
t453 = (t699 * t588 + t607 * t678) * t636;
t429 = t452 * t611 + t453 * t610;
t411 = t429 * t724;
t905 = t427 * t411;
t428 = t761 * t724;
t904 = t427 * t428;
t903 = t427 * t633;
t902 = t427 * t634;
t900 = t429 * t407;
t899 = t429 * t640;
t894 = t464 * t468;
t893 = t464 * t616;
t891 = t761 * t407;
t875 = t569 * t573;
t873 = t571 * t579;
t872 = t584 * t595;
t871 = t584 * t603;
t870 = t588 * t615;
t869 = t588 * t619;
t859 = t603 * t641;
t829 = t596 * t973;
t825 = t459 * t971;
t466 = t464 * t465;
t820 = 0.4e1 * t466 * t634;
t819 = -0.4e1 * t858;
t818 = -0.4e1 * t857;
t817 = t536 * t936;
t816 = t537 * t936;
t811 = t539 * t924;
t810 = t540 * t924;
t808 = t633 * t902;
t807 = 0.1e1 / t876 * t552 * t878;
t793 = t914 / 0.4e1;
t792 = t458 * t962;
t788 = t464 * t950;
t787 = -t893 / 0.2e1;
t786 = t893 / 0.2e1;
t785 = t878 / 0.2e1;
t779 = t588 * t951;
t778 = t588 * t942;
t777 = 0.2e1 * t933;
t776 = t634 * t832;
t774 = 0.4e1 * pkin(5) * t902;
t768 = t928 * t938;
t388 = 0.1e1 / t390;
t767 = t388 * t824;
t766 = t429 * t824;
t765 = t761 * t824;
t764 = t422 * t820;
t763 = -0.8e1 * t808;
t519 = 0.1e1 / t524;
t760 = t519 * t816;
t759 = t546 * t816;
t756 = t521 * t810;
t755 = t547 * t810;
t752 = t466 * t808;
t751 = t632 * t804;
t749 = -0.2e1 * t640 * t825;
t748 = pkin(2) * t519 * t829;
t746 = -t761 * t914 / 0.4e1;
t743 = t785 + t576;
t742 = t785 + t577;
t741 = t782 - t582;
t734 = t408 * t628 * t813;
t733 = t408 * t757;
t732 = pkin(13) * t829 * t994;
t731 = t616 * t752;
t729 = -t395 * t761 - t429 * t762;
t728 = t762 * t991;
t723 = t460 * t640 * t763;
t722 = 0.4e1 * t614 * t752;
t718 = t615 * t730;
t717 = t619 * t730;
t713 = -0.4e1 * t421 * t731;
t712 = 0.4e1 * t423 * t731;
t711 = t429 * t722;
t710 = t761 * t722;
t709 = t613 * t721;
t708 = t622 * t721;
t430 = -t452 * t610 + t453 * t611;
t705 = t411 * t789 - t430 * t640;
t704 = t428 * t789 - t471 * t640;
t375 = t395 * t724 + t429 * t763;
t703 = t375 * t962 + t411 * t793;
t396 = t724 * t762 + t761 * t763;
t702 = t396 * t962 + t428 * t793;
t534 = t595 * t726 - 0.8e1 * t751;
t701 = t807 / 0.4e1 + t534 * t956;
t385 = (t770 * t429 + t705) * pkin(4);
t694 = t381 * t429 + t385 * t427 + t395 * t421;
t398 = (t761 * t770 + t704) * pkin(4);
t693 = t381 * t761 + t398 * t427 + t421 * t762;
t387 = t411 * t790 + t429 * t773 + (t430 * t463 - t899) * pkin(4);
t692 = t383 * t429 + t387 * t427 + t395 * t423;
t400 = t428 * t790 + t761 * t773 + (t463 * t471 - t981) * pkin(4);
t691 = t383 * t761 + t400 * t427 + t423 * t762;
t497 = (-t855 + (t741 + t830) * t607) * pkin(1);
t690 = t491 * t607 + t497 * t601 + t548 * t600;
t689 = t492 * t607 + t498 * t601 + t549 * t600;
t688 = t493 * t607 + t502 * t601 + t550 * t600;
t501 = t555 * t780 + t926 * t974 + (t582 * t697 - t854) * pkin(1);
t687 = t494 * t607 + t501 * t601 + t551 * t600;
t679 = t626 * (-t388 * t990 - t402 * t920);
t677 = t628 * (t420 * t820 + 0.2e1 * t935) * t903;
t676 = (-t900 / 0.2e1 - t905 / 0.2e1) * t438 - t916;
t675 = (-t891 / 0.2e1 - t904 / 0.2e1) * t438 - t906;
t674 = t626 * (t915 * t920 + (-t369 * t403 + 0.2e1 * t405 * t919) * t388);
t394 = t412 * t611 - t413 * t610;
t672 = (t375 * t958 + t411 * t963 + t430 * t964) * t438 - t394 * t640 + t411 * t746;
t671 = (t396 * t958 + t428 * t963 + t471 * t964) * t438 + t901 + t428 * t746;
t670 = (-t603 * t552 / 0.2e1 - t595 * t554 / 0.2e1 - t604 * t534 / 0.2e1) * t563 + t863 - t604 * t807 / 0.4e1;
t586 = t584 * t585;
t580 = t578 * t579;
t574 = t572 * t573;
t561 = -t570 * t873 + 0.1e1;
t558 = -t568 * t875 + 0.1e1;
t500 = t554 * t783 + t639 * pkin(6) * t975 + (t577 * t603 - t856) * pkin(1);
t499 = t554 * t784 + t632 * pkin(1) * t975 + (t576 * t603 - t856) * pkin(6);
t496 = (-t859 + (-t742 - 0.2e1 * t922) * t604) * pkin(1);
t495 = (-t859 + (-t743 + 0.2e1 * t923) * t604) * pkin(6);
t478 = 0.1e1 / t480;
t475 = 0.1e1 / t477;
t448 = 0.4e1 * t753 + (t769 * t600 + t673) * pkin(1);
t446 = t528 - t700 * t598 + t727 * t926 + (t741 * t601 - t862) * pkin(1);
t431 = 0.1e1 / t433;
t399 = t428 * t791 + t761 * t775 + (t462 * t471 - t981) * pkin(5);
t397 = (t761 * t771 + t704) * pkin(5);
t386 = t411 * t791 + t429 * t775 + (t430 * t462 - t899) * pkin(5);
t384 = (t771 * t429 + t705) * pkin(5);
t371 = t761 * t774 + (t762 * t770 + t671) * pkin(4);
t368 = t702 * t469 + (-t427 * t471 + t728) * t776 + (-t427 * t463 + t675) * pkin(4);
t367 = t429 * t774 + (t770 * t395 + t672) * pkin(4);
t366 = t703 * t469 + (-t427 * t430 + t729) * t776 + (t394 * t463 + t676) * pkin(4);
t1 = [0, 0, 0, 0; 0, 0, 0, 0; 0, 0, 0, 0; 0, ((t385 * t950 + t387 * t946) * t464 + t429 * t680) * t679 + ((t385 * t947 + t387 * t950) * t464 + t429 * t681) * t674 + (((t366 * t786 + t367 * t788 + t421 * t711 + t429 * t712) * t402 - (t366 * t788 + t367 * t787 + t423 * t711 + t429 * t713) * t915) * t388 + ((t692 * t402 + t694 * t915) * t616 + (t694 * t402 - t692 * t915) * t614) * t767) * t626, ((t398 * t950 + t400 * t946) * t464 + t761 * t680) * t679 + ((t398 * t947 + t400 * t950) * t464 + t761 * t681) * t674 + (((t368 * t786 + t371 * t788 + t421 * t710 + t712 * t761) * t402 - (t368 * t788 + t371 * t787 + t423 * t710 + t713 * t761) * t915) * t388 + ((t402 * t691 + t693 * t915) * t616 + (t402 * t693 - t691 * t915) * t614) * t767) * t626, 0; 0, 0, 0, 0; 0, ((-t478 * t985 - t510 * t912) * ((t497 * t944 + t501 * t942) * t588 + t607 * t684) + (t885 * t912 + (-t445 * t511 + 0.2e1 * t517 * t897) * t478) * ((t497 * t942 + t501 * t945) * t588 + t607 * t685) + ((t446 * t778 + t551 * t708 + t448 * t869 / 0.2e1 + 0.4e1 * t548 * t717) * t510 - (t448 * t778 + t548 * t708 - t446 * t869 / 0.2e1 - 0.4e1 * t551 * t717) * t885 + ((t687 * t510 - t690 * t885) * t622 + (t690 * t510 + t687 * t885) * t619) * t828) * t478) * t630, 0, 0; 0, ((-t475 * t986 - t504 * t913) * ((t498 * t951 + t502 * t948) * t588 + t607 * t682) + (t886 * t913 + (-t443 * t505 + 0.2e1 * t509 * t898) * t475) * ((t498 * t949 + t502 * t951) * t588 + t607 * t683) + ((t449 * t779 + t549 * t709 + 0.4e1 * t550 * t718 + t870 * t961) * t504 - (t447 * t779 - 0.4e1 * t549 * t718 + t550 * t709 + t870 * t960) * t886 + ((t688 * t504 + t689 * t886) * t615 + (t689 * t504 - t688 * t886) * t613) * t828) * t475) * t636, 0, 0; 0, 0, 0.2e1 * ((((pkin(1) * t595 * t819 - t592 * t701 + t526) * t952 - (t546 * t586 * t818 + pkin(1) * t871) * t632 * t596 + ((-t596 * t743 - t864) * t952 + (t489 * t604 + t499 * t596 + t546 * t595) * t938) * pkin(6)) * t817 - (-(t544 * t586 * t992 + t584 * t978) * t805 + ((t670 - t866) * t952 + (t592 * t872 + (t487 * t604 + t495 * t596 + t544 * t595) * t585) * pkin(1)) * pkin(6)) * t759) * t519 + (-t487 * t760 - 0.2e1 * t536 * t748 - t817 * t988) * (t499 * t952 + t546 * t768) + (0.2e1 * t546 * t519 * t888 * t936 - t489 * t760 + 0.2e1 * t748 * t884 + t759 * t988) * (t495 * t952 + t544 * t768)) / pkin(2), 0; 0, 0, -(-t572 * t878 / 0.2e1 + t573 * t815 * t993) / t558 ^ 2 * (-0.2e1 * t875 + (-0.4e1 * t569 * t574 - 0.2e1 * t573) * t568) * t829 + (0.8e1 * t641 * t574 * t751 + t701 * t572 + (-0.2e1 * t864 + (-t554 * t596 - t880) * t563) * t573 * t973) / t558, 0; 0, 0.2e1 * ((-t703 * t468 + t729 * t777) * t959 + (t429 * t764 - t430 * t935) * t903 + ((t394 * t462 + t676) * t959 + (t382 * t429 + t386 * t427 + t395 * t422) * t934) * pkin(5)) * t734 - 0.2e1 * (t429 * t677 + ((-t395 * t462 + t672) * t959 + (t395 * t894 + (t380 * t429 + t384 * t427 + t395 * t420) * t465) * pkin(4)) * t930) * t733 + 0.2e1 * (t386 * t959 + t422 * t766) * t980 + 0.2e1 * (t384 * t959 + t420 * t766) * t979, 0.2e1 * ((-t468 * t702 + t728 * t777) * t959 + (-t471 * t935 + t761 * t764) * t903 + ((-t427 * t462 + t675) * t959 + (t382 * t761 + t399 * t427 + t422 * t762) * t934) * pkin(5)) * t734 - 0.2e1 * (t761 * t677 + ((t671 - t984) * t959 + (t762 * t894 + (t380 * t761 + t397 * t427 + t420 * t762) * t465) * pkin(4)) * t930) * t733 + 0.2e1 * (t399 * t959 + t422 * t765) * t980 + 0.2e1 * (t397 * t959 + t420 * t765) * t979, 0; 0, (t578 * t877 / 0.2e1 + t579 * t814 * t978) / t561 ^ 2 * (0.2e1 * t873 + (0.4e1 * t571 * t580 + 0.2e1 * t579) * t570) * t827 + (t642 * t580 * t738 - t700 * t578 + (0.2e1 * t862 + (t555 * t601 + t879) * t566) * t579 * t972) / t561, 0, 0; 0, 0, 0.2e1 * ((-((pkin(6) * t595 * t818 + t593 * t701 + t527) * t952 - (t547 * t586 * t819 + pkin(6) * t871) * t639 * t596 + ((-t596 * t742 - t864) * t952 + (t490 * t604 + t500 * t596 + t547 * t595) * t585 * pkin(6)) * pkin(1)) * t811 - (-(0.4e1 * t545 * t586 * t632 + t584 * t976) * t804 + ((t670 - t865) * t953 + (t593 * t872 + (-t488 * t604 - t496 * t596 - t545 * t595) * t585) * pkin(6)) * pkin(1)) * t755) * t521 + (t488 * t756 + t539 * t732 + t811 * t987) * (t500 * t952 + t547 * t768) + (t547 * t887 * t924 * t994 - t490 * t756 + t732 * t883 + t755 * t987) * (t496 * t953 - t545 * t768)) / pkin(13), 0; 0, (t411 * t792 + t429 * t749) * t917 + (t429 * t723 - t703 * t458 + (0.2e1 * t916 + (t900 + t905) * t438) * t825) * t431, (t428 * t792 + t749 * t761) * t917 + (t761 * t723 - t702 * t458 + (0.2e1 * t906 + (t891 + t904) * t438) * t825) * t431, 0; 0, 0, 0, 0; 0, 0, 0, 0; 0, 0, 0, 0;];
WD = t1;
