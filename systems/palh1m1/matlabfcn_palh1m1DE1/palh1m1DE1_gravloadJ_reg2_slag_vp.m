% Calculate inertial parameters regressor of gravitation load for
% palh1m1DE1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [4x1]
%   Generalized joint coordinates (joint angles)
% g_base [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [23x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[AB,AM,BC,BE,BG,BL,DA,DC,EP,GH,GP,HW,ML,OT2,T1D,T2A,T2T1,phi1,phi2,phi312,phi413,phi710,phi711]';
% 
% Output:
% taug_reg [4x(4*10)]
%   inertial parameter regressor of gravitation joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2020-04-14 19:47
% Revision: 2d0abd6fcc3afe6f578a07ad3d897ec57baa6ba1 (2020-04-13)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function taug_reg = palh1m1DE1_gravloadJ_reg2_slag_vp(qJ, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(4,1),zeros(3,1),zeros(23,1)}
assert(isreal(qJ) && all(size(qJ) == [4 1]), ...
  'palh1m1DE1_gravloadJ_reg2_slag_vp: qJ has to be [4x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'palh1m1DE1_gravloadJ_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [23 1]), ...
  'palh1m1DE1_gravloadJ_reg2_slag_vp: pkin has to be [23x1] (double)');

%% Symbolic Calculation
% From gravload_joint_fixb_regressor_matlab.m
t211 = cos(pkin(21));
t406 = pkin(5) * pkin(4);
t232 = pkin(4) ^ 2;
t231 = pkin(5) ^ 2;
t229 = pkin(7) ^ 2;
t237 = pkin(1) ^ 2;
t215 = sin(qJ(2));
t220 = cos(qJ(2));
t222 = cos(pkin(19));
t388 = sin(pkin(19));
t190 = t215 * t222 - t220 * t388;
t382 = pkin(7) * t190;
t409 = -2 * pkin(1);
t340 = t382 * t409 + t237;
t175 = t229 + t340;
t338 = pkin(3) ^ 2 - pkin(8) ^ 2;
t164 = t175 + t338;
t182 = pkin(1) - t382;
t403 = -pkin(8) - pkin(3);
t158 = (pkin(7) - t403) * (pkin(7) + t403) + t340;
t402 = -pkin(8) + pkin(3);
t159 = (pkin(7) - t402) * (pkin(7) + t402) + t340;
t239 = sqrt(-t159 * t158);
t192 = t215 * t388 + t220 * t222;
t381 = pkin(7) * t192;
t141 = t164 * t381 + t182 * t239;
t219 = cos(qJ(3));
t346 = t219 * t141;
t354 = t192 * t239;
t140 = -pkin(7) * t354 + t164 * t182;
t214 = sin(qJ(3));
t353 = t214 * t140;
t169 = 0.1e1 / t175;
t234 = 0.1e1 / pkin(3);
t357 = t169 * t234;
t131 = (t353 / 0.2e1 + t346 / 0.2e1) * t357;
t347 = t219 * t140;
t352 = t214 * t141;
t132 = (-t347 / 0.2e1 + t352 / 0.2e1) * t357;
t204 = pkin(23) + pkin(22);
t201 = sin(t204);
t202 = cos(t204);
t101 = t131 * t202 - t132 * t201;
t271 = pkin(5) * t101;
t342 = 0.2e1 * pkin(4) * t271 + t231;
t98 = t232 + t342;
t336 = 0.1e1 / t98 ^ 2 * t406;
t314 = t211 * t336;
t335 = pkin(1) * t381;
t362 = 0.2e1 / t239 * (t158 + t159) * t335;
t407 = -0.2e1 * t192 ^ 2;
t122 = t182 * t362 / 0.2e1 + t229 * pkin(1) * t407 + (-t164 * t190 - t354) * pkin(7);
t310 = 0.1e1 / t175 ^ 2 * t335;
t391 = -t219 / 0.2e1;
t320 = -t362 / 0.2e1;
t355 = t190 * t239;
t116 = (t355 + (t182 * t409 - t164 + t320) * t192) * pkin(7);
t396 = -t116 / 0.2e1;
t85 = ((t122 * t391 + t214 * t396) * t169 + (-t346 - t353) * t310) * t234;
t395 = t122 / 0.2e1;
t86 = ((t116 * t391 + t214 * t395) * t169 + (-t347 + t352) * t310) * t234;
t74 = t201 * t86 + t202 * t85;
t303 = t74 * t314;
t207 = sin(pkin(21));
t315 = t207 * t336;
t304 = t74 * t315;
t401 = -pkin(9) - pkin(11);
t91 = (pkin(4) - t401) * (pkin(4) + t401) + t342;
t400 = -pkin(9) + pkin(11);
t92 = (pkin(4) - t400) * (pkin(4) + t400) + t342;
t240 = sqrt(-t92 * t91);
t308 = t131 * t201 + t202 * t132;
t78 = 0.1e1 / t240;
t417 = -t78 / 0.2e1;
t327 = t308 * t417;
t418 = 0.2e1 * t406;
t280 = (t91 + t92) * t418;
t62 = t74 * t280;
t75 = -t201 * t85 + t202 * t86;
t273 = -t75 * t240 + t62 * t327;
t408 = -0.2e1 * pkin(5);
t337 = -pkin(9) ^ 2 + pkin(11) ^ 2;
t93 = t98 + t337;
t99 = pkin(4) * t101 + pkin(5);
t322 = t99 * t408 - t93;
t31 = (t322 * t74 + t273) * pkin(4);
t313 = t308 * t232 * t408;
t330 = t78 * t99 / 0.2e1;
t32 = t62 * t330 + t74 * t313 + (-t240 * t74 + t75 * t93) * pkin(4);
t96 = 0.1e1 / t98;
t371 = t211 * t96;
t324 = t371 / 0.2e1;
t325 = -t371 / 0.2e1;
t392 = t207 / 0.2e1;
t326 = t96 * t392;
t226 = 0.1e1 / pkin(11);
t369 = t226 * t96;
t368 = t308 * t240;
t71 = -pkin(4) * t368 + t93 * t99;
t386 = pkin(4) * t308;
t72 = t240 * t99 + t93 * t386;
t60 = (-t71 * t211 / 0.2e1 + t72 * t392) * t369;
t58 = 0.1e1 / t60 ^ 2;
t59 = (t71 * t392 + t72 * t211 / 0.2e1) * t369;
t370 = t226 / (t58 * t59 ^ 2 + 0.1e1);
t380 = t58 * t59;
t57 = 0.1e1 / t60;
t416 = ((t72 * t303 + t71 * t304 + t31 * t326 + t32 * t324) * t57 - (-t71 * t303 + t72 * t304 + t31 * t325 + t32 * t326) * t380) * t370 + 0.1e1;
t301 = t308 * t314;
t302 = t308 * t315;
t73 = t308 * t280;
t270 = -t101 * t240 + t73 * t327;
t54 = (t308 * t322 + t270) * pkin(4);
t55 = t73 * t330 + t308 * t313 + (t101 * t93 - t368) * pkin(4);
t18 = ((t72 * t301 + t71 * t302 + t55 * t324 + t54 * t326) * t57 - (-t71 * t301 + t72 * t302 + t54 * t325 + t55 * t326) * t380) * t370;
t399 = t18 + 0.1e1;
t213 = sin(qJ(4));
t218 = cos(qJ(4));
t221 = cos(qJ(1));
t216 = sin(qJ(1));
t345 = t219 * t220;
t351 = t215 * t216;
t176 = t214 * t351 - t216 * t345;
t47 = atan2(t59, t60);
t45 = cos(t47);
t33 = t176 * t45;
t281 = t220 * t214 + t215 * t219;
t177 = t281 * t216;
t44 = sin(t47);
t376 = t177 * t44;
t27 = -t376 - t33;
t420 = -t221 * t213 + t218 * t27;
t419 = t213 * t27 + t218 * t221;
t379 = t96 * t98;
t208 = sin(pkin(20));
t212 = cos(pkin(20));
t186 = t208 * t219 + t212 * t214;
t384 = pkin(6) * t186;
t334 = pkin(1) * t384;
t181 = 0.2e1 * t334;
t235 = pkin(2) ^ 2;
t230 = pkin(6) ^ 2;
t339 = t230 + t237;
t323 = -pkin(13) ^ 2 + t339;
t162 = t181 + t235 + t323;
t180 = -pkin(1) - t384;
t187 = t208 * t214 - t212 * t219;
t341 = t181 + t230;
t405 = -pkin(2) - pkin(13);
t156 = (pkin(1) - t405) * (pkin(1) + t405) + t341;
t404 = -pkin(2) + pkin(13);
t157 = (pkin(1) - t404) * (pkin(1) + t404) + t341;
t361 = t157 * t156;
t238 = sqrt(-t361);
t356 = t187 * t238;
t333 = pkin(6) * t356;
t137 = -t162 * t180 - t333;
t383 = pkin(6) * t187;
t138 = t162 * t383 - t180 * t238;
t168 = t181 + t339;
t166 = 0.1e1 / t168;
t236 = 0.1e1 / pkin(2);
t389 = t236 / 0.2e1;
t319 = t166 * t389;
t126 = atan2(t138 * t319, t137 * t319);
t123 = sin(t126);
t124 = cos(t126);
t282 = t123 * t220 + t124 * t215;
t136 = 0.1e1 / t137 ^ 2;
t167 = 0.1e1 / t168 ^ 2;
t363 = 0.2e1 / t238 * (t156 + t157) * pkin(1) * t383;
t321 = -t363 / 0.2e1;
t385 = pkin(6) * t138;
t387 = pkin(1) * t187;
t394 = t166 / 0.2e1;
t76 = 0.2e1 * (((t180 * t321 + (t186 * t162 - t356) * pkin(6)) * t394 + (-t166 * t187 * t230 + t167 * t385) * t387) / t137 - ((-t186 * t238 + (t321 - t162) * t187) * t394 + (t137 * t167 + t166 * t180) * t387) * t136 * t385) * pkin(2) / (t136 * t138 ^ 2 + 0.1e1) * t168 * t236;
t67 = t282 * t76;
t35 = t177 * t45;
t25 = t176 * t44 - t35;
t179 = t281 * t221;
t191 = -t214 * t215 + t345;
t178 = t191 * t221;
t38 = t178 * t45;
t29 = -t179 * t44 + t38;
t415 = t191 * t44 + t281 * t45;
t267 = -t271 - pkin(4);
t284 = t98 - t337;
t261 = -pkin(5) * t368 - t267 * t284;
t260 = 0.1e1 / t261 ^ 2;
t274 = pkin(5) * t284;
t262 = -t267 * t240 + t274 * t308;
t257 = 0.1e1 / (t262 ^ 2 * t260 + 0.1e1);
t251 = t257 * t260 * t262;
t252 = t257 / t261;
t263 = t267 * t418 - t274;
t264 = t267 * t417;
t278 = -pkin(5) * t240 - 0.2e1 * t231 * t386;
t414 = (t101 * t274 + t73 * t264 + t278 * t308) * t252 - (t270 * pkin(5) + t263 * t308) * t251;
t413 = (t62 * t264 + t75 * t274 + t278 * t74) * t252 - (t273 * pkin(5) + t263 * t74) * t251;
t206 = sin(pkin(22));
t210 = cos(pkin(22));
t332 = t96 / pkin(9) / 0.2e1;
t256 = atan2(t262 * t332, t261 * t332);
t255 = sin(t256);
t61 = cos(t256);
t412 = -t206 * t61 + t210 * t255;
t43 = -t206 * t255 - t210 * t61;
t411 = t379 * t43;
t410 = t412 * t379;
t209 = cos(pkin(23));
t205 = sin(pkin(23));
t393 = t205 / 0.2e1;
t128 = (-t209 * t140 / 0.2e1 + t141 * t393) * t357;
t127 = 0.1e1 / t128 ^ 2;
t129 = (t209 * t141 / 0.2e1 + t140 * t393) * t357;
t294 = t141 * t310;
t295 = t140 * t310;
t318 = t169 * t393;
t360 = t169 * t209;
t69 = ((t116 * t318 + t205 * t295 + t209 * t294 + t360 * t395) / t128 - (t122 * t318 + t205 * t294 - t209 * t295 + t360 * t396) * t129 * t127) / (t127 * t129 ^ 2 + 0.1e1) * t234;
t398 = t69 + 0.1e1;
t397 = g(3) * t415;
t223 = cos(pkin(18));
t390 = t223 / 0.2e1;
t286 = -t178 * t44 - t179 * t45;
t285 = t191 * t45 - t281 * t44;
t378 = pkin(16) * t216;
t111 = atan2(t129, t128);
t106 = sin(t111);
t367 = t106 * t215;
t366 = t106 * t220;
t107 = cos(t111);
t365 = t107 * t215;
t364 = t107 * t220;
t217 = sin(pkin(18));
t359 = t169 * t217;
t228 = 0.1e1 / pkin(8);
t358 = t169 * t228;
t350 = t215 * t221;
t349 = t216 * t220;
t344 = t220 * t124;
t343 = t220 * t221;
t331 = t399 * t44;
t329 = t398 * t220;
t328 = t398 * t215;
t317 = t169 * t390;
t316 = 0.1e1 / pkin(13) * t389;
t185 = t191 * pkin(5);
t312 = -pkin(1) * t215 + t185;
t309 = pkin(1) * t351 - t378;
t306 = t107 * t329;
t305 = t106 * t328;
t172 = t177 * pkin(5);
t300 = -pkin(1) * t349 - t172;
t174 = t179 * pkin(5);
t299 = -pkin(1) * t343 - t174;
t203 = t221 * pkin(16);
t298 = -pkin(1) * t350 + t203;
t297 = g(1) * t25 - g(2) * t286;
t163 = t175 - t338;
t183 = pkin(1) * t190 - pkin(7);
t139 = -pkin(1) * t354 - t163 * t183;
t296 = t139 * t310;
t142 = pkin(1) * t192 * t163 - t183 * t239;
t293 = t142 * t310;
t292 = t176 * pkin(5) + t309;
t194 = g(1) * t221 + g(2) * t216;
t291 = g(1) * t216 - g(2) * t221;
t161 = t235 - t323 - 0.2e1 * t334;
t145 = atan2(t238 * t316, t161 * t316);
t143 = sin(t145);
t144 = cos(t145);
t87 = t123 * t351 - t216 * t344;
t88 = t282 * t216;
t290 = t143 * t88 + t144 * t87;
t289 = t143 * t87 - t144 * t88;
t94 = t123 * t215 - t344;
t89 = t94 * t221;
t90 = -t123 * t343 - t124 * t350;
t288 = t143 * t90 - t144 * t89;
t287 = t143 * t89 + t144 * t90;
t283 = t365 + t366;
t279 = t178 * pkin(5) + t298;
t1 = t416 * t27;
t3 = t416 * t29;
t5 = t416 * t415;
t277 = g(1) * t3 + g(2) * t1 + g(3) * t5;
t2 = t416 * t25;
t4 = t416 * t286;
t6 = t416 * t285;
t276 = g(1) * t4 + g(2) * t2 + g(3) * t6;
t11 = t399 * t415;
t7 = -t18 * t33 - t399 * t376 - t33;
t9 = -t179 * t331 + t18 * t38 + t38;
t275 = g(1) * t9 + g(2) * t7 + g(3) * t11;
t10 = t399 * t286;
t12 = t399 * t285;
t8 = t176 * t331 - t18 * t35 - t35;
t272 = g(1) * t10 + g(2) * t8 + g(3) * t12;
t68 = t94 * t76;
t63 = t216 * t68;
t65 = t76 * t89;
t269 = -g(1) * t65 - g(2) * t63 + g(3) * t67;
t268 = -g(1) * t89 - g(2) * t87 + g(3) * t282;
t150 = g(1) * t179 + g(2) * t177 - g(3) * t191;
t266 = g(3) * t215 + t194 * t220;
t265 = t107 * t328 + t398 * t366;
t165 = t266 * pkin(1);
t155 = -g(1) * t309 - g(2) * t298;
t259 = -g(3) * (-t143 * t282 - t144 * t94) - g(2) * t289 - g(1) * t287;
t258 = -g(3) * (-t143 * t94 + t144 * t282) + g(2) * t290 - g(1) * t288;
t193 = t291 * pkin(16);
t160 = 0.1e1 / t161 ^ 2;
t149 = g(1) * t178 - g(2) * t176 + g(3) * t281;
t134 = (t142 * t390 + t139 * t217 / 0.2e1) * t358;
t133 = (t139 * t390 - t217 * t142 / 0.2e1) * t358;
t130 = 0.1e1 / t133 ^ 2;
t121 = t183 * t320 + t237 * pkin(7) * t407 + (-t163 * t190 - t354) * pkin(1);
t115 = (t355 + (0.2e1 * t183 * pkin(7) - t163 + t320) * t192) * pkin(1);
t114 = (0.1e1 / t161 * t363 / 0.2e1 + t160 * t333 * t409) / (-t160 * t361 + 0.1e1);
t113 = atan2(t134, t133);
t110 = cos(t113);
t109 = sin(t113);
t105 = t106 * t350;
t104 = t107 * t349;
t84 = t364 - t367;
t82 = t283 * t221;
t81 = -t107 * t343 + t105;
t80 = t283 * t216;
t79 = t106 * t351 - t104;
t70 = ((t121 * t317 + t223 * t293 + t115 * t359 / 0.2e1 + t217 * t296) / t133 - (t115 * t317 + t223 * t296 - t121 * t359 / 0.2e1 - t217 * t293) * t134 * t130) / (t130 * t134 ^ 2 + 0.1e1) * t228;
t66 = t221 * t67;
t64 = t76 * t88;
t53 = -t106 * t329 - t398 * t365;
t52 = -t306 + t305;
t51 = t105 + (t69 * t367 - t306) * t221;
t50 = t265 * t221;
t49 = -t104 + (-t69 * t364 + t305) * t216;
t48 = t265 * t216;
t24 = t213 * t216 + t218 * t29;
t23 = -t213 * t29 + t216 * t218;
t17 = t414 * t410;
t16 = t414 * t411;
t14 = t413 * t410;
t13 = t413 * t411;
t15 = [0, 0, 0, 0, 0, 0, t291, t194, 0, 0, 0, 0, 0, 0, 0, 0, -t291 * t215, -t291 * t220, -t194, t193, 0, 0, 0, 0, 0, 0, -g(1) * t176 - g(2) * t178, -g(1) * t177 + g(2) * t179, -t194, t155, 0, 0, 0, 0, 0, 0, g(1) * t27 - g(2) * t29, t297, -t194, -g(1) * t292 - g(2) * t279, 0, 0, 0, 0, 0, 0, g(1) * t420 - g(2) * t24, -g(1) * t419 - g(2) * t23, -t297, -g(2) * (pkin(10) * t29 - pkin(12) * t286 + t279) - g(1) * (-pkin(10) * t27 + pkin(12) * t25 + t292), 0, 0, 0, 0, 0, 0, t291 * t110, -t291 * t109, -t194, -t291 * pkin(15), 0, 0, 0, 0, 0, 0, -g(1) * t80 + g(2) * t82, g(1) * t79 - g(2) * t81, -t194, t155, 0, 0, 0, 0, 0, 0, -g(1) * t88 - g(2) * t90, g(1) * t87 - g(2) * t89, -t194, t193, 0, 0, 0, 0, 0, 0, -g(1) * t289 + g(2) * t287, -g(1) * t290 - g(2) * t288, -t194, -g(2) * (pkin(2) * t90 + t203) - g(1) * (pkin(2) * t88 - t378), 0, 0, 0, 0, 0, 0, -g(2) * (-t412 * t81 - t43 * t82) - g(1) * (t412 * t79 + t43 * t80), -g(2) * (-t412 * t82 + t43 * t81) - g(1) * (t412 * t80 - t43 * t79), -t194, (-g(2) * (-t206 * t81 - t210 * t82) - g(1) * (t206 * t79 + t210 * t80)) * pkin(4) + t155; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t266, g(3) * t220 - t194 * t215, 0, 0, 0, 0, 0, 0, 0, 0, t150, t149, 0, t165, 0, 0, 0, 0, 0, 0, -t276, t277, 0, -g(1) * t299 - g(2) * t300 - g(3) * t312, 0, 0, 0, 0, 0, 0, -t276 * t218, t276 * t213, -t277, -g(3) * (pkin(10) * t6 + pkin(12) * t5 + t312) - g(2) * (pkin(10) * t2 + pkin(12) * t1 + t300) - g(1) * (pkin(10) * t4 + pkin(12) * t3 + t299), 0, 0, 0, 0, 0, 0, (-g(3) * t110 + t109 * t194) * t70, (g(3) * t109 + t110 * t194) * t70, 0, 0, 0, 0, 0, 0, 0, 0, -g(1) * t51 - g(2) * t49 - g(3) * t53, -g(1) * t50 - g(2) * t48 - g(3) * t52, 0, t165, 0, 0, 0, 0, 0, 0, t268, g(1) * t90 - g(2) * t88 - g(3) * t94, 0, 0, 0, 0, 0, 0, 0, 0, t258, t259, 0, t268 * pkin(2), 0, 0, 0, 0, 0, 0, -g(3) * (-t13 * t283 + t14 * t84 - t412 * t52 + t43 * t53) - g(2) * (t13 * t79 - t14 * t80 - t412 * t48 + t43 * t49) - g(1) * (t13 * t81 - t14 * t82 - t412 * t50 + t43 * t51), -g(3) * (-t13 * t84 - t14 * t283 + t412 * t53 + t43 * t52) - g(2) * (t13 * t80 + t14 * t79 + t412 * t49 + t43 * t48) - g(1) * (t13 * t82 + t14 * t81 + t412 * t51 + t43 * t50), 0, t165 + (-g(3) * (-t206 * t52 + t210 * t53) - g(2) * (-t206 * t48 + t210 * t49) - g(1) * (-t206 * t50 + t210 * t51)) * pkin(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t150, t149, 0, 0, 0, 0, 0, 0, 0, 0, -t272, t275, 0, t150 * pkin(5), 0, 0, 0, 0, 0, 0, -t272 * t218, t272 * t213, -t275, -g(3) * (pkin(10) * t12 + pkin(12) * t11 + t185) - g(2) * (pkin(10) * t8 + pkin(12) * t7 - t172) - g(1) * (pkin(10) * t10 + pkin(12) * t9 - t174), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t269, -g(1) * t66 - g(2) * t64 - g(3) * t68, 0, 0, 0, 0, 0, 0, 0, 0, -g(3) * (-t143 * t68 + t144 * t67) - g(2) * (-t143 * t64 - t144 * t63) - g(1) * (-t143 * t66 - t144 * t65) + t258 * t114, -g(3) * (-t143 * t67 - t144 * t68) - g(2) * (t143 * t63 - t144 * t64) - g(1) * (t143 * t65 - t144 * t66) + t259 * t114, 0, t269 * pkin(2), 0, 0, 0, 0, 0, 0, -g(3) * (-t16 * t283 + t17 * t84) - g(2) * (t16 * t79 - t17 * t80) - g(1) * (t16 * t81 - t17 * t82), -g(3) * (-t16 * t84 - t17 * t283) - g(2) * (t16 * t80 + t17 * t79) - g(1) * (t16 * t82 + t17 * t81), 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1) * t23 + g(2) * t419 + t213 * t397, g(1) * t24 + g(2) * t420 + t218 * t397, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
taug_reg = t15;
