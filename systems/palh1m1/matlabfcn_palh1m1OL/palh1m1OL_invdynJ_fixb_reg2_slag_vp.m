% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% palh1m1OL
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [13x1]
%   Generalized joint coordinates (joint angles)
% qJD [13x1]
%   Generalized joint velocities
% qJDD [13x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [20x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[AB,AM,BC,BE,BG,BL,DC,EP,GH,GP,HW,ML,OT2,T1D,T2A,T2T1,phi312,phi413,phi710,phi711]';
% 
% Output:
% tau_reg [13x(13*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2020-04-15 19:46
% Revision: 2d0abd6fcc3afe6f578a07ad3d897ec57baa6ba1 (2020-04-13)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = palh1m1OL_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(13,1),zeros(13,1),zeros(13,1),zeros(3,1),zeros(20,1)}
assert(isreal(qJ) && all(size(qJ) == [13 1]), ...
  'palh1m1OL_invdynJ_fixb_reg2_slag_vp: qJ has to be [13x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [13 1]), ...
  'palh1m1OL_invdynJ_fixb_reg2_slag_vp: qJD has to be [13x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [13 1]), ...
  'palh1m1OL_invdynJ_fixb_reg2_slag_vp: qJDD has to be [13x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'palh1m1OL_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [20 1]), ...
  'palh1m1OL_invdynJ_fixb_reg2_slag_vp: pkin has to be [20x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2020-04-15 19:39:43
% EndTime: 2020-04-15 19:41:30
% DurationCPUTime: 17.42s
% Computational Cost: add. (10289->766), mult. (24285->1048), div. (0->0), fcn. (20089->36), ass. (0->400)
t346 = cos(qJ(5));
t475 = qJD(5) * t346;
t339 = sin(qJ(3));
t340 = sin(qJ(2));
t347 = cos(qJ(3));
t348 = cos(qJ(2));
t209 = t339 * t348 + t340 * t347;
t197 = t209 * qJD(1);
t483 = qJD(1) * t348;
t484 = qJD(1) * t340;
t199 = -t339 * t484 + t347 * t483;
t338 = sin(qJ(4));
t556 = cos(qJ(4));
t126 = t197 * t338 - t556 * t199;
t578 = t126 * t346;
t584 = t475 + t578;
t343 = cos(qJ(8));
t555 = sin(qJ(8));
t446 = t555 * t340;
t421 = qJD(1) * t446;
t193 = -t343 * t483 + t421;
t207 = t343 * t340 + t555 * t348;
t194 = t207 * qJD(1);
t334 = sin(qJ(9));
t342 = cos(qJ(9));
t129 = t193 * t334 - t194 * t342;
t323 = qJD(2) + qJD(8);
t309 = qJD(9) + t323;
t474 = qJD(9) * t334;
t438 = qJDD(1) * t555;
t463 = t348 * qJDD(1);
t153 = t323 * t207;
t485 = qJD(1) * t153;
t98 = -t340 * t438 + t343 * t463 - t485;
t383 = -t323 * t421 + t348 * t438;
t426 = t323 * t348;
t465 = t340 * qJDD(1);
t99 = (qJD(1) * t426 + t465) * t343 + t383;
t40 = t334 * t99 - t193 * t474 + (qJD(9) * t194 - t98) * t342;
t24 = t129 * t309 + t40;
t337 = sin(qJ(5));
t391 = t556 * t197 + t338 * t199;
t325 = qJD(2) + qJD(3);
t437 = qJD(4) + t325;
t409 = t346 * t437;
t104 = t337 * t391 - t409;
t106 = t337 * t437 + t346 * t391;
t385 = qJD(3) * t209;
t412 = t339 * t465 - t347 * t463;
t102 = (qJD(2) * t209 + t385) * qJD(1) + t412;
t402 = t339 * t340 - t347 * t348;
t384 = t402 * qJD(3);
t359 = -qJD(2) * t402 - t384;
t103 = qJD(1) * t359 + qJDD(1) * t209;
t442 = t556 * qJD(4);
t479 = qJD(4) * t338;
t42 = t338 * t102 - t556 * t103 + t197 * t479 - t199 * t442;
t322 = qJDD(2) + qJDD(3);
t424 = qJDD(4) + t322;
t476 = qJD(5) * t337;
t20 = -qJD(5) * t409 - t337 * t424 + t346 * t42 + t391 * t476;
t478 = qJD(5) * t106;
t21 = -t337 * t42 - t346 * t424 + t478;
t573 = qJD(5) + t126;
t582 = t573 * t337;
t1 = -t584 * t104 - t106 * t582 - t20 * t346 - t337 * t21;
t436 = t556 * t102 + t338 * t103;
t43 = qJD(4) * t391 + t436;
t37 = qJDD(5) + t43;
t8 = t104 * t391 + t346 * t37 - t573 * t582;
t404 = -t193 * t342 - t194 * t334;
t473 = qJD(9) * t342;
t41 = -t193 * t473 - t194 * t474 + t334 * t98 + t342 * t99;
t25 = -t309 * t404 + t41;
t332 = qJ(2) + qJ(3);
t316 = cos(t332);
t341 = sin(qJ(1));
t349 = cos(qJ(1));
t235 = g(1) * t349 + g(2) * t341;
t313 = sin(t332);
t394 = t235 * t313;
t581 = -g(3) * t316 + t394;
t17 = t20 * t337;
t10 = t584 * t106 - t17;
t9 = -t106 * t391 + t337 * t37 + t584 * t573;
t335 = sin(qJ(7));
t344 = cos(qJ(7));
t208 = t335 * t348 + t340 * t344;
t195 = t208 * qJD(1);
t445 = t335 * t484;
t198 = t344 * t483 - t445;
t333 = sin(pkin(19));
t530 = cos(pkin(19));
t539 = sin(qJ(10));
t540 = cos(qJ(10));
t206 = t333 * t539 + t530 * t540;
t369 = -t333 * t540 + t530 * t539;
t403 = t195 * t206 + t198 * t369;
t84 = t195 * t369 - t198 * t206;
t579 = t403 * t84;
t318 = qJ(4) + t332;
t294 = cos(t318);
t545 = g(3) * t294;
t538 = pkin(1) * qJD(2);
t455 = qJD(3) * t538;
t529 = pkin(1) * qJDD(2);
t489 = t339 * t529 + t347 * t455;
t173 = pkin(5) * t322 + t489;
t460 = t339 * t538;
t216 = pkin(5) * t325 + t460;
t301 = t347 * t529;
t423 = t556 * t538;
t407 = t347 * t423;
t77 = qJD(4) * t407 + t556 * t173 + (-qJD(4) * t216 - t339 * t455 + t301) * t338;
t68 = -pkin(9) * t424 - t77;
t444 = -t68 - t545;
t459 = t347 * t538;
t254 = t338 * t459;
t160 = t556 * t216 + t254;
t157 = -pkin(9) * t437 - t160;
t516 = t126 * t157;
t577 = t126 * t391;
t575 = t404 * t129;
t292 = sin(t318);
t504 = t292 * t349;
t505 = t292 * t341;
t574 = g(1) * t504 + g(2) * t505;
t15 = -t403 ^ 2 + t84 ^ 2;
t33 = -t126 ^ 2 + t391 ^ 2;
t32 = -t129 ^ 2 + t404 ^ 2;
t64 = pkin(9) * t391 + pkin(11) * t126;
t324 = qJD(2) + qJD(7);
t155 = t324 * t208;
t413 = t335 * t465 - t344 * t463;
t100 = qJD(1) * t155 + t413;
t469 = qJD(1) * qJD(2);
t441 = t340 * t469;
t396 = -qJD(7) * t445 + (-t441 + t463) * t335;
t427 = t324 * t348;
t101 = (qJD(1) * t427 + t465) * t344 + t396;
t186 = t206 * qJD(10);
t187 = t369 * qJD(10);
t23 = -t100 * t369 + t206 * t101 + t186 * t198 - t187 * t195;
t307 = qJD(10) + t324;
t13 = t307 * t84 + t23;
t528 = qJD(1) * pkin(15);
t234 = pkin(1) * t484 - t528;
t107 = (t530 * t195 - t198 * t333) * pkin(4) + t234;
t331 = qJ(2) + qJ(7);
t310 = pkin(19) - t331;
t284 = -qJ(10) + t310;
t264 = sin(t284);
t265 = cos(t284);
t300 = t344 * t529;
t321 = qJDD(2) + qJDD(7);
t448 = t530 * pkin(4);
t461 = t335 * t538;
t165 = -qJD(7) * t461 + t321 * t448 + t300;
t467 = qJDD(2) * t335;
t481 = qJD(2) * t344;
t551 = pkin(4) * t333;
t166 = t321 * t551 + (qJD(7) * t481 + t467) * pkin(1);
t202 = t324 * t551 + t461;
t203 = pkin(1) * t481 + t324 * t448;
t47 = -t206 * t165 + t166 * t369 + t186 * t202 + t187 * t203;
t362 = g(3) * t264 - t107 * t84 - t235 * t265 + t47;
t26 = t126 * t437 - t42;
t159 = -pkin(5) * t199 + t234;
t278 = g(3) * t292;
t502 = t294 * t349;
t503 = t294 * t341;
t450 = g(1) * t502 + g(2) * t503 + t278;
t408 = t339 * t423;
t447 = t556 * t347;
t425 = pkin(1) * t447;
t76 = qJD(3) * t408 + qJD(4) * t254 - qJDD(2) * t425 + t338 * t173 + t216 * t442;
t366 = t159 * t126 + t450 - t76;
t167 = pkin(2) * t194 - t528;
t330 = qJ(2) + qJ(8);
t317 = qJ(9) + t330;
t291 = sin(t317);
t293 = cos(t317);
t458 = pkin(2) * qJD(9) * t323;
t320 = qJDD(2) + qJDD(8);
t568 = pkin(2) * t320;
t572 = -g(3) * t293 + t129 * t167 + t235 * t291 + t334 * t568 + t342 * t458;
t525 = t573 * t391;
t296 = pkin(1) * t339 + pkin(5);
t189 = t338 * t296 - t425;
t181 = pkin(11) + t189;
t304 = pkin(1) * t483;
t550 = pkin(5) * t197;
t59 = t550 + t64;
t54 = t304 + t59;
t566 = (qJD(5) * t181 + t54) * t573;
t417 = g(1) * t341 - g(2) * t349;
t563 = t417 * t292;
t74 = -t199 * t325 + t103;
t490 = t294 * pkin(9) + t292 * pkin(11);
t161 = -t338 * t216 + t407;
t158 = pkin(11) * t437 - t161;
t53 = pkin(9) * t126 - pkin(11) * t391 + t159;
t44 = -t158 * t337 + t346 * t53;
t45 = t158 * t346 + t337 * t53;
t410 = -t337 * t44 + t346 * t45;
t562 = t339 ^ 2 + t347 ^ 2;
t22 = t100 * t206 + t101 * t369 + t186 * t195 + t187 * t198;
t12 = -t307 * t403 + t22;
t399 = t157 * t476 + t574 * t346 - t391 * t44;
t401 = t157 * t475 - t444 * t337 + t391 * t45;
t46 = -t165 * t369 - t166 * t206 - t186 * t203 + t187 * t202;
t355 = -g(3) * t265 - t107 * t403 - t235 * t264 - t46;
t356 = -t159 * t391 - t545 + t574 + t77;
t559 = -g(3) * t291 + t404 * t167 - t235 * t293 + t334 * t458;
t27 = t391 * t325 - t436;
t554 = pkin(1) * t335;
t553 = pkin(1) * t348;
t154 = -t323 * t446 + t343 * t426;
t552 = pkin(2) * t154;
t67 = pkin(11) * t424 + t76;
t440 = t348 * t469;
t471 = qJDD(1) * pkin(15);
t185 = -t471 + (t440 + t465) * pkin(1);
t75 = pkin(5) * t102 + t185;
t7 = pkin(9) * t43 + pkin(11) * t42 + t75;
t3 = qJD(5) * t44 + t337 * t7 + t346 * t67;
t2 = t3 * t346;
t319 = t340 * pkin(1);
t537 = t573 * t44;
t536 = t573 * t45;
t19 = t21 * t346;
t533 = t45 * t337;
t531 = t319 - pkin(15);
t527 = t104 * t337;
t526 = t106 * t104;
t150 = t556 * t209 - t338 * t402;
t514 = t150 * t337;
t513 = t150 * t346;
t512 = t194 * t193;
t510 = t197 * t199;
t509 = t197 * t325;
t508 = t198 * t195;
t507 = t198 * t324;
t501 = t309 * t323;
t500 = t335 * t340;
t336 = sin(qJ(6));
t345 = cos(qJ(6));
t499 = t336 * t345;
t498 = t337 * t341;
t497 = t337 * t349;
t496 = t338 * t347;
t495 = t341 * t346;
t494 = t346 * t349;
t388 = pkin(1) * (-t206 * t344 + t335 * t369);
t493 = (-t530 * t186 + t187 * t333) * pkin(4) - qJD(2) * t388;
t389 = pkin(1) * (t206 * t335 + t344 * t369);
t492 = (t186 * t333 + t530 * t187) * pkin(4) - qJD(2) * t389;
t282 = sin(t310);
t491 = pkin(4) * t282 - t319;
t288 = pkin(5) * t316;
t488 = t288 - t319;
t326 = t336 ^ 2;
t328 = t345 ^ 2;
t487 = t326 - t328;
t327 = t340 ^ 2;
t329 = t348 ^ 2;
t486 = t327 - t329;
t482 = qJD(2) * t340;
t480 = qJD(3) * t339;
t477 = qJD(5) * t573;
t472 = qJDD(1) * pkin(14);
t468 = qJD(1) * qJD(6);
t466 = qJDD(2) * pkin(1) ^ 2;
t464 = t345 * qJDD(1);
t457 = pkin(11) * t477;
t305 = t348 * t538;
t352 = qJD(1) ^ 2;
t454 = t352 * t499;
t453 = t348 * t352 * t340;
t449 = t288 + t490;
t217 = -pkin(5) * t313 - t553;
t439 = -pkin(9) * t292 + t217;
t431 = 0.2e1 * pkin(14) * t468;
t430 = t2 - t450;
t429 = qJD(2) * (-qJD(7) + t324);
t428 = qJD(7) * (-qJD(2) - t324);
t422 = pkin(5) * t442;
t420 = t340 * t440;
t419 = t468 * t499;
t183 = (t338 * t339 - t447) * t538;
t418 = pkin(5) * t479 - t183;
t86 = t202 * t369 - t203 * t206;
t87 = t202 * t206 + t203 * t369;
t416 = t403 * t86 - t84 * t87;
t414 = -pkin(11) * t37 + t516;
t411 = t44 * t346 + t533;
t295 = t338 * pkin(5) + pkin(11);
t406 = -t295 * t37 + t516;
t405 = -t126 * t160 - t161 * t391;
t210 = t343 * t348 - t446;
t147 = t207 * t342 + t210 * t334;
t149 = -t207 * t334 + t210 * t342;
t400 = -t126 * t533 - t44 * t578 + t430;
t397 = -qJD(5) * t53 + t278 - t67;
t395 = t235 * t292;
t360 = t325 * t209;
t375 = t556 * t402;
t57 = qJD(4) * t375 + t209 * t479 + t338 * t360 - t556 * t359;
t393 = t150 * t475 - t337 * t57;
t392 = -t150 * t476 - t346 * t57;
t312 = sin(t331);
t315 = cos(t331);
t387 = g(3) * t312 - t198 * t234 + t235 * t315 + t300;
t386 = g(3) * t313 - t199 * t234 + t235 * t316 + t301;
t188 = pkin(1) * t496 + t556 * t296;
t382 = -pkin(14) * t352 + t235;
t381 = pkin(15) * t352 + t235;
t379 = -t417 + 0.2e1 * t472;
t378 = -t417 - 0.2e1 * t471;
t377 = g(3) * t319 - t234 * t304 + t235 * t553;
t138 = t296 * t442 + (t347 * t479 + (t556 * t339 + t496) * qJD(3)) * pkin(1);
t376 = -t138 * t573 - t181 * t37 + t516;
t119 = (t195 * t333 + t530 * t198) * pkin(4);
t133 = pkin(5) * t360 + t305;
t58 = t150 * qJD(4) + t338 * t359 + t556 * t360;
t14 = t58 * pkin(9) + t57 * pkin(11) + t133;
t148 = t209 * t338 + t375;
t168 = pkin(5) * t402 + t531;
t62 = t148 * pkin(9) - t150 * pkin(11) + t168;
t373 = qJD(5) * t150 * t157 + t14 * t573 + t37 * t62;
t372 = t150 * t68 - t157 * t57 - t477 * t62;
t371 = -t197 * t234 + t489 + t581;
t311 = sin(t330);
t314 = cos(t330);
t370 = g(3) * t311 + t235 * t314;
t367 = g(3) * t315 + t195 * t234 - t235 * t312;
t6 = t346 * t7;
t4 = -qJD(5) * t45 - t337 * t67 + t6;
t365 = -qJD(5) * t411 - t4 * t337 + t2;
t219 = pkin(11) * t503;
t220 = pkin(11) * t502;
t363 = -g(1) * (-pkin(9) * t504 + t220) - g(2) * (-pkin(9) * t505 + t219);
t351 = qJD(2) ^ 2;
t350 = qJD(6) ^ 2;
t306 = qJDD(9) + t320;
t302 = qJDD(10) + t321;
t297 = -t556 * pkin(5) - pkin(9);
t283 = cos(t310);
t233 = t344 * pkin(1) + t448;
t232 = t551 + t554;
t215 = pkin(15) + t488;
t211 = t344 * t348 - t500;
t201 = (t417 + t471) * pkin(15);
t191 = pkin(2) * t207 - pkin(15);
t184 = t408 + t254;
t180 = -pkin(9) - t188;
t179 = t294 * t494 + t498;
t178 = -t294 * t497 + t495;
t177 = -t294 * t495 + t497;
t176 = t294 * t498 + t494;
t162 = t304 + t550;
t156 = -qJD(7) * t500 - t335 * t482 + t344 * t427;
t139 = -t296 * t479 + (-t338 * t480 + (t556 * qJD(3) + t442) * t347) * pkin(1);
t135 = (-t206 * t333 - t369 * t530) * pkin(4);
t134 = (-t530 * t206 + t333 * t369) * pkin(4);
t120 = (t530 * t208 - t211 * t333) * pkin(4) + t531;
t118 = -t193 * t528 + t370;
t117 = g(3) * t314 - t194 * t528 - t235 * t311;
t113 = t304 + t119;
t112 = t197 ^ 2 - t199 ^ 2;
t111 = -t195 ^ 2 + t198 ^ 2;
t110 = t193 ^ 2 - t194 ^ 2;
t109 = -t206 * t232 - t233 * t369;
t108 = -t206 * t233 + t232 * t369;
t93 = -t206 * t211 + t208 * t369;
t92 = t206 * t208 + t211 * t369;
t89 = pkin(2) * t99 - t471;
t85 = t234 * t305 - (-t185 + t417) * t531;
t73 = -qJD(1) * t360 - t412 + t509;
t72 = t507 + (-t324 * t483 - t465) * t344 - t396;
t70 = -t193 * t323 + (-t323 * t483 - t465) * t343 - t383;
t69 = t194 * t323 + t98;
t66 = t305 + (t155 * t333 + t530 * t156) * pkin(4);
t63 = (t167 * t193 + t370 + (t334 ^ 2 + t342 ^ 2) * t568) * pkin(2);
t61 = qJD(7) * t389 + t186 * t232 + t187 * t233;
t60 = qJD(7) * t388 - t186 * t233 + t187 * t232;
t56 = qJD(9) * t149 - t153 * t334 + t154 * t342;
t55 = qJD(9) * t147 + t153 * t342 + t154 * t334;
t52 = t160 * t346 + t337 * t64;
t51 = -t160 * t337 + t346 * t64;
t50 = t184 * t346 + t337 * t59;
t49 = -t184 * t337 + t346 * t59;
t48 = (t100 * t333 + t530 * t101) * pkin(4) + t185;
t39 = -t155 * t369 + t156 * t206 + t186 * t211 - t187 * t208;
t38 = t155 * t206 + t156 * t369 + t186 * t208 + t187 * t211;
t31 = (-t193 * t404 + t306 * t334 + t309 * t473) * pkin(2) + t572;
t30 = (t309 * t474 + t129 * t193 + (-t306 - t320) * t342) * pkin(2) + t559;
t11 = t527 * t573 - t19;
t5 = (t24 * t342 - t25 * t334) * pkin(2);
t16 = [0, 0, 0, 0, 0, qJDD(1), t417, t235, 0, 0, qJDD(1) * t329 - 0.2e1 * t420, -0.2e1 * t340 * t463 + 0.2e1 * t469 * t486, qJDD(2) * t348 - t340 * t351, qJDD(1) * t327 + 0.2e1 * t420, -qJDD(2) * t340 - t348 * t351, 0, -0.2e1 * pkin(15) * t440 + t340 * t378, 0.2e1 * pkin(15) * t441 + t348 * t378, -t235, t201, t103 * t209 + t197 * t359, -t209 * t102 - t103 * t402 + t325 * (-t197 * t209 - t199 * t402), t209 * t322 + t325 * t359, t102 * t402 - t199 * t360, -t322 * t402 - t325 * t360, 0, t531 * t102 + t185 * t402 + t417 * t316 + t234 * t385 + (-t199 * t553 + t209 * t234) * qJD(2), t531 * t103 + t185 * t209 - t417 * t313 - t234 * t384 + (t197 * t553 - t234 * t402) * qJD(2), ((-t339 * t209 + t347 * t402) * qJDD(2) + t562 * qJD(2) * t482) * pkin(1) - t235, t85, -t150 * t42 - t391 * t57, t126 * t57 + t148 * t42 - t150 * t43 - t391 * t58, t150 * t424 - t437 * t57, t126 * t58 + t148 * t43, -t148 * t424 - t437 * t58, 0, t126 * t133 + t148 * t75 + t159 * t58 + t168 * t43 + t294 * t417, t133 * t391 + t150 * t75 - t159 * t57 - t168 * t42 - t563, -t148 * t76 - t150 * t77 + t160 * t57 + t161 * t58 - t235, t133 * t159 + t168 * t75 + t215 * t417, t106 * t392 - t20 * t513, (t104 * t346 + t106 * t337) * t57 + (t17 - t19 + (-t106 * t346 + t527) * qJD(5)) * t150, t106 * t58 - t148 * t20 + t37 * t513 + t392 * t573, t104 * t393 + t21 * t514, -t104 * t58 - t148 * t21 - t37 * t514 - t393 * t573, t148 * t37 + t573 * t58, -g(1) * t177 - g(2) * t179 + t148 * t4 + t337 * t372 + t346 * t373 + t44 * t58, -g(1) * t176 - g(2) * t178 - t148 * t3 - t337 * t373 + t346 * t372 - t45 * t58, t563 + (-t106 * t14 - t150 * t4 + t20 * t62 + t44 * t57 + (-t104 * t62 - t150 * t45) * qJD(5)) * t346 + (-t104 * t14 - t150 * t3 - t21 * t62 + t45 * t57 + (t106 * t62 + t150 * t44) * qJD(5)) * t337, t411 * t14 + (qJD(5) * t410 + t3 * t337 + t4 * t346) * t62 + t417 * (t215 + t490), qJDD(1) * t326 + 0.2e1 * t419, 0.2e1 * t336 * t464 - 0.2e1 * t468 * t487, qJDD(6) * t336 + t345 * t350, qJDD(1) * t328 - 0.2e1 * t419, qJDD(6) * t345 - t336 * t350, 0, t336 * t431 - t345 * t379, t336 * t379 + t345 * t431, -t235, (-t417 + t472) * pkin(14), -t100 * t211 - t155 * t198, t100 * t208 - t101 * t211 + t155 * t195 - t156 * t198, -t155 * t324 + t211 * t321, t101 * t208 + t156 * t195, -t156 * t324 - t208 * t321, 0, t101 * t531 + t156 * t234 + t185 * t208 + t195 * t305 - t312 * t417, -t100 * t531 - t155 * t234 + t185 * t211 + t198 * t305 - t315 * t417, ((-t208 * t335 - t211 * t344) * qJDD(2) + (t155 * t344 - t156 * t335 + (-t208 * t344 + t211 * t335) * qJD(7)) * qJD(2)) * pkin(1) - t235, t85, t153 * t193 + t210 * t98, t153 * t194 + t154 * t193 - t207 * t98 - t210 * t99, -t153 * t323 + t210 * t320, t154 * t194 + t207 * t99, -t154 * t323 - t207 * t320, 0, -t417 * t311 + (-qJD(1) * t154 - qJDD(1) * t207 - t99) * pkin(15), -t417 * t314 + (-qJDD(1) * t210 + t485 - t98) * pkin(15), -t235, t201, -t149 * t40 - t404 * t55, -t129 * t55 + t147 * t40 - t149 * t41 - t404 * t56, -t149 * t306 + t309 * t55, -t129 * t56 + t147 * t41, t147 * t306 + t309 * t56, 0, t129 * t552 - t147 * t89 - t167 * t56 - t191 * t41 + t291 * t417, -t149 * t89 + t167 * t55 + t191 * t40 + t293 * t417 - t404 * t552, ((-t147 * t334 - t149 * t342) * t320 + (-t334 * t56 + t342 * t55 + (-t147 * t342 + t149 * t334) * qJD(9)) * t323) * pkin(2) - t235, t167 * t552 + t191 * t89 + t417 * (-pkin(2) * t311 + pkin(15)), t22 * t93 + t38 * t84, t22 * t92 + t23 * t93 + t38 * t403 + t39 * t84, t302 * t93 + t307 * t38, t23 * t92 + t39 * t403, t302 * t92 + t307 * t39, 0, -t107 * t39 - t120 * t23 - t264 * t417 - t403 * t66 - t48 * t92, t107 * t38 + t120 * t22 + t265 * t417 + t48 * t93 + t66 * t84, -t38 * t86 - t39 * t87 + t46 * t92 - t47 * t93 - t235, t107 * t66 + t120 * t48 + t417 * (pkin(15) + t491); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t453, -t486 * t352, t463, -t453, -t465, qJDD(2), g(3) * t340 + t348 * t381, g(3) * t348 - t340 * t381, 0, 0, -t510, t112, t74, t510, t73, t322, (qJD(3) * t325 * t347 + t199 * t483 + t339 * t322) * pkin(1) + t371, (-t197 * t483 + t347 * t322 + (-qJD(2) - t325) * t480) * pkin(1) + t386, ((t102 - t509) * t347 - t74 * t339) * pkin(1), t562 * t466 + t377, t577, t33, t26, -t577, t27, t424, -t162 * t126 + t139 * t437 + t188 * t424 + t356, -t138 * t437 - t162 * t391 - t189 * t424 + t366, -t126 * t138 - t139 * t391 + t188 * t42 - t189 * t43 + t405, -g(3) * t488 - t161 * t138 + t160 * t139 - t159 * t162 + t77 * t188 + t76 * t189 - t217 * t235, t10, t1, t9, t11, t8, -t525, -t104 * t139 + t180 * t21 + t376 * t337 + (t444 - t566) * t346 + t399, -t106 * t139 - t180 * t20 + t376 * t346 + (-t395 + t566) * t337 + t401, (-t104 * t138 + t106 * t54 - t181 * t21 + (t106 * t181 - t44) * qJD(5)) * t346 + (t104 * t54 + t106 * t138 - t181 * t20 - t4 + (t104 * t181 - t45) * qJD(5)) * t337 + t400, t68 * t180 - t157 * t139 - g(1) * (t349 * t439 + t220) - g(2) * (t341 * t439 + t219) - g(3) * (-t319 + t449) - t411 * t54 + t410 * t138 + t365 * t181, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t508, t111, -t413, -t508, t72, t321, (-t195 * t483 + t321 * t344 + t335 * t428) * pkin(1) + t387, (-t198 * t483 + (-qJDD(2) - t321) * t335 + t344 * t428) * pkin(1) + t367, ((-t195 * t324 + t100) * t344 + (-t101 + t507) * t335) * pkin(1), (t335 ^ 2 + t344 ^ 2) * t466 + t377, -t512, t110, t69, t512, t70, t320, t118, t117, 0, 0, -t575, t32, t24, t575, t25, t306, t30, t31, t5, t63, -t579, t15, t12, t579, t13, t302, t108 * t302 + t113 * t403 + t307 * t61 + t362, -t109 * t302 - t113 * t84 - t307 * t60 + t355, -t108 * t22 + t109 * t23 + t403 * t60 - t61 * t84 + t416, t46 * t109 - t87 * t60 + t47 * t108 + t86 * t61 - t107 * t113 - g(3) * t491 - t235 * (-pkin(4) * t283 - t553); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t510, t112, t74, t510, t73, t322, -t325 * t459 + t371, (-qJD(3) + t325) * t460 + t386, 0, 0, t577, t33, t26, -t577, t27, t424, t183 * t437 + (-t197 * t126 + t556 * t424 - t437 * t479) * pkin(5) + t356, t184 * t437 + (-t197 * t391 - t338 * t424 - t437 * t442) * pkin(5) + t366, t184 * t126 - t183 * t391 + (t556 * t42 - t338 * t43 + (-t556 * t126 + t338 * t391) * qJD(4)) * pkin(5) + t405, t160 * t183 + t161 * t184 + (t556 * t77 - t159 * t197 + t338 * t76 + (-t160 * t338 - t556 * t161) * qJD(4) + t581) * pkin(5), t10, t1, t9, t11, t8, -t525, t297 * t21 + t444 * t346 + t406 * t337 + t418 * t104 + (-t295 * t475 - t337 * t422 - t49) * t573 + t399, -t297 * t20 + t406 * t346 - t337 * t395 + t418 * t106 + (t295 * t476 - t346 * t422 + t50) * t573 + t401, t50 * t104 + t49 * t106 + (-t104 * t422 - t21 * t295 + (t106 * t295 - t44) * qJD(5)) * t346 + (t106 * t422 - t20 * t295 - t4 + (t104 * t295 - t45) * qJD(5)) * t337 + t400, t68 * t297 - t45 * t50 - t44 * t49 - t157 * t183 - g(3) * t449 + (t394 + (t157 * t338 + t410 * t556) * qJD(4)) * pkin(5) + t365 * t295 + t363, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t577, t33, t26, -t577, t27, t424, -t161 * t437 + t356, t160 * t437 + t366, 0, 0, t10, t1, t9, t104 * t582 - t19, t8, -t525, -pkin(9) * t21 + t104 * t161 - t573 * t51 + t414 * t337 + (t444 - t457) * t346 + t399, pkin(9) * t20 + t106 * t161 + t573 * t52 + t414 * t346 + (-t395 + t457) * t337 + t401, t104 * t52 + t106 * t51 + (-t537 + (-t21 + t478) * pkin(11)) * t346 + (-t4 - t536 + (qJD(5) * t104 - t20) * pkin(11)) * t337 + t430, -t68 * pkin(9) + pkin(11) * t365 - g(3) * t490 + t157 * t161 - t44 * t51 - t45 * t52 + t363, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t526, -t104 ^ 2 + t106 ^ 2, t104 * t573 - t20, -t526, t106 * t573 - t21, t37, -g(1) * t178 + g(2) * t176 - t106 * t157 - t158 * t475 + t337 * t397 + t536 + t6, g(1) * t179 - g(2) * t177 + t104 * t157 + t537 + (qJD(5) * t158 - t7) * t337 + t397 * t346, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t454, t487 * t352, t336 * qJDD(1), t454, t464, qJDD(6), -g(3) * t345 + t336 * t382, g(3) * t336 + t345 * t382, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t508, t111, -t413, -t508, t72, t321, t429 * t554 + t387, (t344 * t429 - t467) * pkin(1) + t367, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t579, t15, t12, t579, t13, t302, t119 * t403 + t134 * t302 + t307 * t492 + t362, -t119 * t84 - t135 * t302 - t307 * t493 + t355, -t134 * t22 + t135 * t23 + t403 * t493 - t492 * t84 + t416, -t107 * t119 + t134 * t47 + t135 * t46 - t493 * t87 + t492 * t86 + (-g(3) * t282 + t235 * t283) * pkin(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t512, t110, t69, t512, t70, t320, t118, t117, 0, 0, -t575, t32, t24, t575, t25, t306, t30, t31, t5, t63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t575, t32, t24, t575, t25, t306, (-t320 * t342 - t334 * t501) * pkin(2) + t559, -pkin(2) * t342 * t501 + t572, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t579, t15, t12, t579, t13, t302, -t307 * t87 + t362, t307 * t86 + t355, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
tau_reg = t16;
