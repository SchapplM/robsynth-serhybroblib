% Calculate inertial parameters regressor of inverse dynamics joint torque vector with Newton-Euler for
% palh1m1OL
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [13x1]
%   Generalized joint coordinates (joint angles)
% qJD [13x1]
%   Generalized joint velocities
% qJDD [13x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [20x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[AB,AM,BC,BE,BG,BL,DC,EP,GH,GP,HW,ML,OT2,T1D,T2A,T2T1,phi312,phi413,phi710,phi711]';
% 
% Output:
% tauJ_reg [13x(13*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2020-04-15 19:46
% Revision: 2d0abd6fcc3afe6f578a07ad3d897ec57baa6ba1 (2020-04-13)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauJ_reg = palh1m1OL_invdynJ_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(13,1),zeros(13,1),zeros(13,1),zeros(3,1),zeros(20,1)}
assert(isreal(qJ) && all(size(qJ) == [13 1]), ...
  'palh1m1OL_invdynJ_fixb_reg2_snew_vp: qJ has to be [13x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [13 1]), ...
  'palh1m1OL_invdynJ_fixb_reg2_snew_vp: qJD has to be [13x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [13 1]), ...
  'palh1m1OL_invdynJ_fixb_reg2_snew_vp: qJDD has to be [13x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'palh1m1OL_invdynJ_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [20 1]), ...
  'palh1m1OL_invdynJ_fixb_reg2_snew_vp: pkin has to be [20x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauJ_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2020-04-15 19:36:52
% EndTime: 2020-04-15 19:38:29
% DurationCPUTime: 13.33s
% Computational Cost: add. (22585->697), mult. (50536->1014), div. (0->0), fcn. (40372->22), ass. (0->451)
t420 = sin(qJ(3));
t433 = qJD(1) ^ 2;
t422 = sin(qJ(1));
t525 = cos(qJ(1));
t440 = t525 * g(1) + t422 * g(2);
t365 = -t433 * pkin(15) - t440;
t421 = sin(qJ(2));
t430 = cos(qJ(2));
t326 = -t421 * g(3) + t365 * t430;
t377 = t421 * t433 * t430;
t471 = qJDD(2) - t377;
t310 = pkin(1) * t471 - t326;
t324 = g(3) * t430 + t365 * t421;
t395 = t421 ^ 2 * t433;
t432 = qJD(2) ^ 2;
t314 = (-t432 - t395) * pkin(1) - t324;
t429 = cos(qJ(3));
t234 = -t429 * t310 + t420 * t314;
t478 = qJD(1) * t430;
t479 = qJD(1) * t421;
t349 = -t420 * t479 + t429 * t478;
t342 = t349 ^ 2;
t407 = qJD(2) + qJD(3);
t402 = t407 ^ 2;
t527 = -t342 - t402;
t215 = t527 * pkin(5) + t234;
t419 = sin(qJ(4));
t428 = cos(qJ(4));
t236 = t420 * t310 + t429 * t314;
t483 = t420 * t430;
t346 = (t421 * t429 + t483) * qJD(1);
t313 = t349 * t346;
t469 = qJDD(2) + qJDD(3);
t529 = t313 + t469;
t435 = pkin(5) * t529 + t236;
t142 = t419 * t215 - t428 * t435;
t143 = t428 * t215 + t419 * t435;
t66 = t142 * t428 - t143 * t419;
t545 = t420 * t66;
t404 = qJDD(2) + qJDD(7);
t425 = cos(qJ(7));
t416 = sin(qJ(7));
t484 = t416 * t430;
t344 = (-t421 * t425 - t484) * qJD(1);
t348 = -t416 * t479 + t425 * t478;
t500 = t348 * t344;
t300 = t404 + t500;
t544 = t300 * t425;
t412 = sin(pkin(19));
t413 = cos(qJ(10));
t518 = cos(pkin(19));
t519 = sin(qJ(10));
t361 = t412 * t413 - t518 * t519;
t362 = -t412 * t519 - t518 * t413;
t258 = t344 * t362 - t348 * t361;
t259 = t344 * t361 + t348 * t362;
t201 = t258 * t259;
t384 = qJDD(10) + t404;
t531 = t201 + t384;
t543 = t361 * t531;
t542 = t362 * t531;
t418 = sin(qJ(5));
t297 = t346 * t428 + t349 * t419;
t474 = qJD(1) * qJD(2);
t461 = t430 * t474;
t472 = t421 * qJDD(1);
t369 = -t461 - t472;
t393 = t430 * qJDD(1);
t462 = t421 * t474;
t372 = t393 - t462;
t270 = t349 * qJD(3) - t429 * t369 + t420 * t372;
t480 = t420 * t369 + t429 * t372;
t273 = -qJD(3) * t346 + t480;
t453 = t270 * t419 - t428 * t273;
t179 = -qJD(4) * t297 - t453;
t177 = qJDD(5) - t179;
t390 = qJD(4) + t407;
t427 = cos(qJ(5));
t264 = t297 * t418 - t427 * t390;
t266 = t297 * t427 + t390 * t418;
t207 = t266 * t264;
t532 = t177 - t207;
t541 = t418 * t532;
t293 = t346 * t419 - t428 * t349;
t229 = t297 * t293;
t387 = qJDD(4) + t469;
t530 = -t229 + t387;
t540 = t419 * t530;
t539 = t420 * t529;
t538 = t427 * t532;
t537 = t428 * t530;
t272 = t344 * qJD(7) + t416 * t369 + t425 * t372;
t406 = qJD(2) + qJD(7);
t491 = t406 * t344;
t536 = t272 + t491;
t330 = t407 * t346;
t250 = t273 - t330;
t535 = t369 - t461;
t444 = t270 * t428 + t273 * t419;
t181 = -qJD(4) * t293 + t444;
t283 = t390 * t293;
t162 = t181 - t283;
t460 = t422 * g(1) - t525 * g(2);
t363 = qJDD(1) * pkin(15) + t460;
t309 = t535 * pkin(1) + t363;
t205 = t250 * pkin(5) + t309;
t54 = -t162 * pkin(11) + (t297 * t390 - t179) * pkin(9) - t205;
t225 = pkin(9) * t293 - pkin(11) * t297;
t526 = t390 ^ 2;
t92 = -t526 * pkin(9) + t387 * pkin(11) - t293 * t225 + t143;
t21 = t418 * t92 - t427 * t54;
t22 = t418 * t54 + t427 * t92;
t14 = t418 * t21 + t427 * t22;
t415 = sin(qJ(8));
t424 = cos(qJ(8));
t443 = -t415 * t430 - t421 * t424;
t343 = t443 * qJD(1);
t442 = t415 * t421 - t424 * t430;
t347 = t442 * qJD(1);
t414 = sin(qJ(9));
t423 = cos(qJ(9));
t292 = -t423 * t343 - t347 * t414;
t295 = t343 * t414 - t347 * t423;
t228 = t292 * t295;
t403 = qJDD(2) + qJDD(8);
t386 = qJDD(9) + t403;
t220 = -t228 + t386;
t534 = t220 * t423;
t451 = -t425 * t369 + t372 * t416;
t269 = -qJD(7) * t348 - t451;
t152 = -t259 * qJD(10) + t269 * t362 - t272 * t361;
t388 = qJD(10) + t406;
t254 = t388 * t259;
t533 = t152 + t254;
t311 = t343 * t347;
t298 = -t311 + t403;
t331 = t407 * t349;
t528 = t331 + t270;
t287 = qJD(5) + t293;
t455 = t181 * t418 - t427 * t387;
t104 = (qJD(5) - t287) * t266 + t455;
t256 = t258 ^ 2;
t257 = t259 ^ 2;
t262 = t264 ^ 2;
t263 = t266 ^ 2;
t286 = t287 ^ 2;
t288 = t292 ^ 2;
t289 = t293 ^ 2;
t290 = t295 ^ 2;
t291 = t297 ^ 2;
t338 = t344 ^ 2;
t339 = t346 ^ 2;
t340 = t347 ^ 2;
t341 = t348 ^ 2;
t383 = t388 ^ 2;
t405 = qJD(2) + qJD(8);
t389 = qJD(9) + t405;
t385 = t389 ^ 2;
t401 = t406 ^ 2;
t524 = pkin(4) * t412;
t523 = pkin(9) * t419;
t233 = -t425 * t310 + t416 * t314;
t284 = (-t518 * t344 - t348 * t412) * pkin(4);
t183 = -t348 * t284 + (t401 * t412 + t518 * t404) * pkin(4) - t233;
t235 = t416 * t310 + t425 * t314;
t184 = t344 * t284 + (-t518 * t401 + t404 * t412) * pkin(4) + t235;
t95 = t362 * t183 - t361 * t184;
t96 = t361 * t183 + t362 * t184;
t39 = t361 * t96 + t362 * t95;
t40 = -t361 * t95 + t362 * t96;
t463 = pkin(4) * t518;
t522 = t39 * t463 + t40 * t524;
t445 = t269 * t361 + t272 * t362;
t153 = qJD(10) * t258 + t445;
t253 = t388 * t258;
t126 = t153 - t253;
t49 = -t126 * t362 + t361 * t533;
t51 = t126 * t361 + t362 * t533;
t521 = t49 * t463 + t51 * t524;
t91 = -t387 * pkin(9) - t526 * pkin(11) + t225 * t297 + t142;
t520 = -pkin(9) * t91 + pkin(11) * t14;
t86 = t418 * t91;
t87 = t427 * t91;
t129 = t177 + t207;
t517 = t129 * t418;
t516 = t129 * t427;
t198 = -t201 + t384;
t515 = t198 * t361;
t514 = t198 * t362;
t513 = t205 * t419;
t512 = t205 * t428;
t511 = t205 * t429;
t452 = t424 * t369 - t372 * t415;
t268 = qJD(8) * t347 + t452;
t219 = t363 + (t347 * t405 + t268) * pkin(2);
t510 = t219 * t414;
t509 = t219 * t423;
t508 = t219 * t424;
t223 = t229 + t387;
t507 = t223 * t419;
t506 = t223 * t428;
t505 = t287 * t418;
t504 = t287 * t427;
t503 = t292 * t389;
t502 = t309 * t425;
t501 = t343 * t405;
t167 = -t348 * t406 * t463 + (t518 * t269 + t412 * t536) * pkin(4) + t309;
t499 = t361 * t167;
t498 = t362 * t167;
t497 = t389 * t414;
t496 = t389 * t423;
t495 = t390 * t419;
t494 = t390 * t428;
t493 = t405 * t415;
t492 = t405 * t424;
t490 = t406 * t416;
t489 = t406 * t425;
t488 = t407 * t420;
t487 = t407 * t429;
t221 = t228 + t386;
t486 = t414 * t221;
t301 = -t500 + t404;
t485 = t416 * t301;
t303 = -t313 + t469;
t482 = t429 * t303;
t481 = t429 * t430;
t477 = qJD(4) + t390;
t475 = qJD(5) + t287;
t473 = qJD(1) * qJD(6);
t9 = t14 * t419 - t428 * t91;
t470 = pkin(5) * t9 + t520;
t448 = -t181 * t427 - t387 * t418;
t109 = t264 * t475 + t448;
t195 = -t263 - t286;
t72 = -t195 * t418 - t516;
t468 = pkin(9) * t109 + pkin(11) * t72 + t86;
t105 = -t266 * t475 - t455;
t182 = -t286 - t262;
t69 = t182 * t427 - t541;
t467 = pkin(9) * t105 + pkin(11) * t69 - t87;
t466 = t419 * t207;
t465 = t428 * t207;
t271 = t343 * qJD(8) + t415 * t369 + t424 * t372;
t464 = -pkin(9) * t428 - pkin(5);
t176 = t262 + t263;
t140 = -qJD(5) * t264 - t448;
t214 = t287 * t264;
t108 = t140 + t214;
t45 = -t104 * t427 + t108 * t418;
t459 = pkin(9) * t176 + pkin(11) * t45 + t14;
t32 = t109 * t428 + t419 * t72;
t458 = pkin(5) * t32 + t468;
t30 = t105 * t428 + t419 * t69;
t457 = pkin(5) * t30 + t467;
t456 = t142 * t419 + t428 * t143;
t274 = -t324 * t415 + t424 * t326;
t217 = t298 * pkin(2) - t274;
t275 = -t324 * t424 - t326 * t415;
t337 = t343 ^ 2;
t400 = t405 ^ 2;
t232 = (-t337 - t400) * pkin(2) + t275;
t171 = -t423 * t217 + t414 * t232;
t454 = -t268 * t423 + t414 * t271;
t24 = t176 * t428 + t419 * t45;
t450 = pkin(5) * t24 + t459;
t218 = -t526 - t289;
t170 = t218 * t419 + t537;
t449 = pkin(5) * t170 - t142;
t417 = sin(qJ(6));
t391 = t417 * qJDD(1);
t426 = cos(qJ(6));
t368 = 0.2e1 * t426 * t473 + t391;
t392 = t426 * qJDD(1);
t371 = -0.2e1 * t417 * t473 + t392;
t13 = -t21 * t427 + t22 * t418;
t172 = t414 * t217 + t423 * t232;
t93 = t171 * t423 - t172 * t414;
t447 = t233 * t425 - t235 * t416;
t446 = t234 * t429 - t236 * t420;
t244 = t271 + t501;
t439 = -t292 * qJD(9) + t268 * t414 + t271 * t423;
t178 = qJD(9) * t295 + t454;
t196 = -t383 - t256;
t114 = t196 * t361 + t542;
t115 = t196 * t362 - t543;
t438 = t114 * t463 + t115 * t524 + t95;
t230 = -t257 - t383;
t133 = t230 * t362 - t515;
t134 = -t230 * t361 - t514;
t437 = t133 * t463 + t134 * t524 - t96;
t436 = (-qJD(4) + t390) * t297 - t453;
t240 = (-qJD(7) + t406) * t348 - t451;
t160 = t439 - t503;
t267 = -t291 - t526;
t186 = t267 * t428 - t507;
t434 = pkin(5) * t186 - t143;
t431 = qJD(6) ^ 2;
t397 = t430 ^ 2 * t433;
t396 = t426 ^ 2 * t433;
t394 = t417 ^ 2 * t433;
t378 = t426 * t433 * t417;
t370 = -0.2e1 * t461 - t472;
t367 = -t393 + 0.2e1 * t462;
t366 = t433 * pkin(14) - t440;
t364 = -qJDD(1) * pkin(14) + t460;
t360 = pkin(15) * t363;
t325 = -g(3) * t417 + t366 * t426;
t323 = g(3) * t426 + t366 * t417;
t322 = t342 - t402;
t321 = -t341 + t401;
t320 = -t340 + t400;
t319 = -t339 + t402;
t318 = t338 - t401;
t317 = t337 - t400;
t308 = t341 - t338;
t307 = t340 - t337;
t306 = t339 - t342;
t299 = t311 + t403;
t282 = t389 * t295;
t281 = -t291 + t526;
t280 = -t290 + t385;
t279 = t289 - t526;
t278 = t288 - t385;
t277 = -t338 - t341;
t276 = -t342 - t339;
t252 = -t257 + t383;
t251 = t256 - t383;
t249 = t273 + t330;
t248 = -t491 + t272;
t245 = t271 - t501;
t243 = -t331 + t270;
t239 = (qJD(7) + t406) * t348 + t451;
t238 = -(-qJD(8) - t405) * t347 + t452;
t237 = -(-qJD(8) + t405) * t347 + t452;
t231 = (-t421 * pkin(1) + pkin(15)) * t309;
t227 = t291 - t289;
t226 = t290 - t288;
t213 = -t263 + t286;
t212 = t262 - t286;
t211 = (-t293 * t428 + t297 * t419) * t390;
t210 = (-t292 * t423 + t295 * t414) * t389;
t209 = (-t293 * t419 - t297 * t428) * t390;
t208 = (-t292 * t414 - t295 * t423) * t389;
t206 = t263 - t262;
t203 = -t289 - t291;
t202 = -t288 - t290;
t200 = t257 - t256;
t194 = t279 * t428 - t507;
t193 = -t281 * t419 + t537;
t192 = -t278 * t423 + t486;
t191 = t280 * t414 - t534;
t190 = t279 * t419 + t506;
t189 = t281 * t428 + t540;
t188 = -t221 * t423 - t278 * t414;
t187 = -t220 * t414 - t280 * t423;
t174 = (t258 * t362 + t259 * t361) * t388;
t173 = (t258 * t361 - t259 * t362) * t388;
t168 = -t256 - t257;
t166 = (-t264 * t427 + t266 * t418) * t287;
t165 = (-t264 * t418 - t266 * t427) * t287;
t164 = -t293 * t477 + t444;
t163 = t181 + t283;
t159 = t439 + t503;
t156 = t297 * t477 + t453;
t155 = t178 + t282;
t154 = t178 - t282;
t151 = t181 * t428 - t297 * t495;
t150 = -t295 * t497 + t423 * t439;
t149 = t181 * t419 + t297 * t494;
t148 = t295 * t496 + t414 * t439;
t147 = -t179 * t419 + t293 * t494;
t146 = t178 * t414 + t292 * t496;
t145 = t179 * t428 + t293 * t495;
t144 = -t178 * t423 + t292 * t497;
t139 = -qJD(5) * t266 - t455;
t138 = t251 * t362 - t515;
t137 = -t252 * t361 + t542;
t136 = t251 * t361 + t514;
t135 = t252 * t362 + t543;
t127 = (qJD(10) + t388) * t258 + t445;
t125 = t153 + t253;
t123 = t152 - t254;
t121 = pkin(2) * t155 - t509;
t120 = pkin(2) * t160 + t510;
t119 = t153 * t362 - t361 * t254;
t118 = t153 * t361 + t362 * t254;
t117 = -t152 * t361 - t362 * t253;
t116 = t152 * t362 - t361 * t253;
t111 = -pkin(5) * t156 + t512;
t110 = -pkin(5) * t164 - t513;
t107 = t140 - t214;
t101 = pkin(2) * (t486 - t423 * (-t290 - t385)) + t172;
t100 = t140 * t427 - t266 * t505;
t99 = t140 * t418 + t266 * t504;
t98 = -t139 * t418 + t264 * t504;
t97 = t139 * t427 + t264 * t505;
t90 = pkin(2) * t93;
t88 = pkin(2) * (-t414 * (-t385 - t288) - t534) + t171;
t85 = t166 * t428 + t177 * t419;
t84 = t166 * t419 - t177 * t428;
t83 = t212 * t427 - t517;
t82 = -t213 * t418 + t538;
t81 = t212 * t418 + t516;
t80 = t213 * t427 + t541;
t79 = -t156 * t428 - t162 * t419;
t78 = -t155 * t423 - t160 * t414;
t77 = -t163 * t428 + t419 * t436;
t76 = -t156 * t419 + t162 * t428;
t75 = -t155 * t414 + t160 * t423;
t74 = pkin(2) * (-t414 * ((qJD(9) - t389) * t295 + t454) - t423 * t159);
t73 = pkin(5) * t77;
t71 = t195 * t427 - t517;
t68 = t182 * t418 + t538;
t64 = t100 * t428 + t466;
t63 = t428 * t98 - t466;
t62 = t100 * t419 - t465;
t61 = t419 * t98 + t465;
t60 = pkin(5) * t66;
t59 = -pkin(2) * t202 + t171 * t414 + t172 * t423;
t58 = -t127 * t524 - t498;
t57 = t123 * t463 + t498;
t56 = t123 * t524 - t499;
t55 = -t127 * t463 - t499;
t52 = -pkin(5) * t203 + t456;
t50 = t123 * t362 - t125 * t361;
t48 = t123 * t361 + t125 * t362;
t44 = t105 * t427 - t107 * t418;
t43 = -t104 * t418 - t108 * t427;
t42 = t105 * t418 + t107 * t427;
t38 = -t104 * t419 + t428 * t83;
t37 = t108 * t419 + t428 * t82;
t36 = t104 * t428 + t419 * t83;
t35 = -t108 * t428 + t419 * t82;
t28 = t206 * t419 + t428 * t44;
t27 = -t206 * t428 + t419 * t44;
t26 = -pkin(11) * t71 + t87;
t25 = -pkin(11) * t68 + t86;
t18 = -t168 * t524 - t39;
t17 = -t168 * t463 + t40;
t16 = -pkin(9) * t71 + t22;
t15 = -pkin(9) * t68 + t21;
t11 = -t16 * t419 + t26 * t428;
t10 = -t15 * t419 + t25 * t428;
t7 = -pkin(11) * t43 - t13;
t6 = -pkin(5) * t71 + t16 * t428 + t26 * t419;
t5 = -pkin(5) * t68 + t15 * t428 + t25 * t419;
t4 = t428 * t7 + t43 * t523;
t3 = (-pkin(11) * t428 + t523) * t13;
t2 = t419 * t7 + t43 * t464;
t1 = (-pkin(11) * t419 + t464) * t13;
t8 = [0, 0, 0, 0, 0, qJDD(1), t460, t440, 0, 0, (t372 - t462) * t430, t367 * t421 + t370 * t430, t430 * t471 - t421 * (-t397 + t432), -t535 * t421, t430 * (t395 - t432) - t421 * (qJDD(2) + t377), 0, pkin(15) * t370 - t363 * t421, pkin(15) * t367 - t363 * t430, t430 * t326 + t421 * t324 + pkin(15) * (t397 + t395), t360, t430 * (t270 * t420 + t346 * t487) - t421 * (-t270 * t429 + t346 * t488), t430 * (t250 * t420 + t429 * t528) - t421 * (-t250 * t429 + t420 * t528), t430 * (t319 * t429 + t539) - t421 * (t319 * t420 - t429 * t529), t430 * (t273 * t429 - t349 * t488) - t421 * (t273 * t420 + t349 * t487), t430 * (t322 * t420 + t482) - t421 * (t303 * t420 - t322 * t429), (t430 * (-t346 * t429 + t349 * t420) - t421 * (-t346 * t420 - t349 * t429)) * t407, t309 * t481 - t421 * (pkin(1) * t250 + t309 * t420) + pkin(15) * t250, -t309 * t483 - t421 * (-pkin(1) * t528 + t309 * t429) - pkin(15) * t528, t430 * t446 - t421 * (-pkin(1) * t276 + t234 * t420 + t236 * t429) - pkin(15) * t276, t231, t430 * (t149 * t429 + t151 * t420) - t421 * (t149 * t420 - t151 * t429), t430 * (t420 * t79 + t429 * t76) - t421 * (t420 * t76 - t429 * t79), t430 * (t189 * t429 + t193 * t420) - t421 * (t189 * t420 - t193 * t429), t430 * (t145 * t429 + t147 * t420) - t421 * (t145 * t420 - t147 * t429), t430 * (t190 * t429 + t194 * t420) - t421 * (t190 * t420 - t194 * t429), t430 * (t209 * t429 + t211 * t420) - t421 * (t209 * t420 - t211 * t429), t430 * (t111 * t429 - t420 * t513) - t421 * (-pkin(1) * t156 + t111 * t420 + t419 * t511) - pkin(15) * t156, t430 * (t110 * t429 - t420 * t512) - t421 * (-pkin(1) * t164 + t110 * t420 + t428 * t511) - pkin(15) * t164, t430 * (t429 * t52 + t545) - t421 * (-pkin(1) * t203 + t420 * t52 - t429 * t66) - pkin(15) * t203, (pkin(5) * t481 - t421 * (pkin(5) * t420 + pkin(1)) + pkin(15)) * t205, t430 * (t420 * t64 + t429 * t62) - t421 * (t420 * t62 - t429 * t64), t430 * (t27 * t429 + t28 * t420) - t421 * (t27 * t420 - t28 * t429), t430 * (t35 * t429 + t37 * t420) - t421 * (t35 * t420 - t37 * t429), t430 * (t420 * t63 + t429 * t61) - t421 * (t420 * t61 - t429 * t63), t430 * (t36 * t429 + t38 * t420) - t421 * (t36 * t420 - t38 * t429), t430 * (t420 * t85 + t429 * t84) - t421 * (t420 * t84 - t429 * t85), t430 * (t10 * t420 + t429 * t5) - t421 * (-pkin(1) * t68 - t10 * t429 + t420 * t5) - pkin(15) * t68, t430 * (t11 * t420 + t429 * t6) - t421 * (-pkin(1) * t71 - t11 * t429 + t420 * t6) - pkin(15) * t71, t430 * (t2 * t429 + t4 * t420) - t421 * (-pkin(1) * t43 + t2 * t420 - t4 * t429) - pkin(15) * t43, t430 * (t1 * t429 + t3 * t420) - t421 * (-pkin(1) * t13 + t1 * t420 - t3 * t429) - pkin(15) * t13, t368 * t417, t368 * t426 + t371 * t417, t417 * (qJDD(6) + t378) + t426 * (-t394 + t431), t371 * t426, t417 * (t396 - t431) + t426 * (qJDD(6) - t378), 0, -pkin(14) * t371 + t364 * t426, pkin(14) * t368 - t364 * t417, t417 * t323 + t426 * t325 - pkin(14) * (t394 + t396), -pkin(14) * t364, t430 * (t272 * t425 - t348 * t490) - t421 * (t272 * t416 + t348 * t489), t430 * (-t239 * t425 - t416 * t536) - t421 * (-t239 * t416 + t425 * t536), t430 * (-t321 * t416 + t544) - t421 * (t300 * t416 + t321 * t425), t430 * (-t269 * t416 - t344 * t489) - t421 * (t269 * t425 - t344 * t490), t430 * (t318 * t425 - t485) - t421 * (t301 * t425 + t318 * t416), (t430 * (t344 * t425 + t348 * t416) - t421 * (t344 * t416 - t348 * t425)) * t406, -t309 * t484 - t421 * (-pkin(1) * t239 + t502) - pkin(15) * t239, -t430 * t502 - t421 * (-pkin(1) * t536 - t309 * t416) - pkin(15) * t536, t430 * t447 - t421 * (-pkin(1) * t277 + t233 * t416 + t235 * t425) - pkin(15) * t277, t231, t430 * (t271 * t424 + t347 * t493) - t421 * (t271 * t415 - t347 * t492), t430 * (t238 * t424 - t244 * t415) - t421 * (t238 * t415 + t244 * t424), t430 * (t298 * t424 - t320 * t415) - t421 * (t298 * t415 + t320 * t424), t430 * (-t268 * t415 - t343 * t492) - t421 * (t268 * t424 - t343 * t493), t430 * (-t299 * t415 + t317 * t424) - t421 * (t299 * t424 + t317 * t415), (t430 * (t343 * t424 - t347 * t415) - t421 * (t343 * t415 + t347 * t424)) * t405, pkin(15) * t238 + t363 * t443, -pkin(15) * t244 + t363 * t442, t430 * (t274 * t424 - t275 * t415) - t421 * (t274 * t415 + t275 * t424) + pkin(15) * (t337 + t340), t360, t430 * (-t148 * t415 + t150 * t424) - t421 * (t148 * t424 + t150 * t415), t430 * (-t415 * t75 + t424 * t78) - t421 * (t415 * t78 + t424 * t75), t430 * (-t187 * t415 + t191 * t424) - t421 * (t187 * t424 + t191 * t415), t430 * (-t144 * t415 + t146 * t424) - t421 * (t144 * t424 + t146 * t415), t430 * (-t188 * t415 + t192 * t424) - t421 * (t188 * t424 + t192 * t415), t430 * (-t208 * t415 + t210 * t424) - t421 * (t208 * t424 + t210 * t415), t430 * (-t121 * t415 + t414 * t508) - t421 * (t121 * t424 + t415 * t510) + pkin(15) * t155, t430 * (-t120 * t415 + t423 * t508) - t421 * (t120 * t424 + t415 * t509) + pkin(15) * t160, t430 * (-t415 * t59 + t424 * t93) - t421 * (t415 * t93 + t424 * t59) - pkin(15) * t202, (pkin(2) * t443 + pkin(15)) * t219, t430 * (-t118 * t416 + t119 * t425) - t421 * (t118 * t425 + t119 * t416), t430 * (-t416 * t48 + t425 * t50) - t421 * (t416 * t50 + t425 * t48), t430 * (-t135 * t416 + t137 * t425) - t421 * (t135 * t425 + t137 * t416), t430 * (-t116 * t416 + t117 * t425) - t421 * (t116 * t425 + t117 * t416), t430 * (-t136 * t416 + t138 * t425) - t421 * (t136 * t425 + t138 * t416), t430 * (-t173 * t416 + t174 * t425) - t421 * (t173 * t425 + t174 * t416), t430 * (-t416 * t57 + t425 * t56) - t421 * (pkin(1) * t123 + t416 * t56 + t425 * t57) + pkin(15) * t123, t430 * (-t416 * t55 + t425 * t58) - t421 * (-pkin(1) * t127 + t416 * t58 + t425 * t55) - pkin(15) * t127, t430 * (-t17 * t416 + t18 * t425) - t421 * (-pkin(1) * t168 + t17 * t425 + t18 * t416) - pkin(15) * t168, (t430 * (t412 * t425 - t518 * t416) * pkin(4) - t421 * (pkin(1) + (t412 * t416 + t518 * t425) * pkin(4)) + pkin(15)) * t167; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t377, t397 - t395, t393, -t377, -t472, qJDD(2), -t326, t324, 0, 0, -t313, t306, t243, t313, t249, t469, pkin(1) * (-t429 * t527 + t539) + t236, pkin(1) * (t482 + t420 * (-t339 - t402)) - t234, pkin(1) * (-t429 * ((-qJD(3) + t407) * t346 + t480) - t420 * t243), -pkin(1) * t446, t229, t227, t163, -t229, t436, t387, pkin(1) * (-t429 * (t218 * t428 - t540) + t420 * t170) + t449, pkin(1) * (-t429 * (-t267 * t419 - t506) + t420 * t186) + t434, pkin(1) * (-t429 * (t163 * t419 + t428 * t436) + t420 * t77) + t73, pkin(1) * (-t429 * t456 - t545) - t60, t99, t42, t80, t97, t81, t165, pkin(1) * (-t429 * (-t105 * t419 + t428 * t69) + t420 * t30) + t457, pkin(1) * (-t429 * (-t109 * t419 + t428 * t72) + t420 * t32) + t458, pkin(1) * (-t429 * (-t176 * t419 + t428 * t45) + t420 * t24) + t450, pkin(1) * (-t429 * (t14 * t428 + t419 * t91) + t420 * t9) + t470, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t500, t308, t248, t500, t240, t404, pkin(1) * (t416 * (-t401 - t338) + t544) - t233, pkin(1) * (-t485 + t425 * (-t341 - t401)) - t235, pkin(1) * (t240 * t416 - t425 * t248), -pkin(1) * t447, t311, t307, t245, -t311, t237, t403, -t274, -t275, 0, 0, t228, t226, -t159, -t228, t154, t386, t88, t101, t74, -t90, -t201, t200, t126, t201, t533, t384, pkin(1) * (t114 * t425 + t115 * t416) + t438, pkin(1) * (t133 * t425 + t134 * t416) + t437, pkin(1) * (t416 * t51 + t425 * t49) + t521, pkin(1) * (t39 * t425 + t40 * t416) + t522; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t313, t306, t243, t313, t249, t469, t236, -t234, 0, 0, t229, t227, t163, -t229, t436, t387, t449, t434, t73, -t60, t99, t42, t80, t97, t81, t165, t457, t458, t450, t470, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t229, t227, t163, -t229, t436, t387, -t142, -t143, 0, 0, t99, t42, t80, t97, t81, t165, t467, t468, t459, t520, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t207, t206, t108, -t207, -t104, t177, -t21, -t22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t378, t394 - t396, t391, t378, t392, qJDD(6), -t323, -t325, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t500, t308, t248, t500, t240, t404, -t233, -t235, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t201, t200, t126, t201, t533, t384, t438, t437, t521, t522; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t311, t307, t245, -t311, t237, t403, -t274, -t275, 0, 0, t228, t226, -t159, -t228, t154, t386, t88, t101, t74, -t90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t228, t226, -t159, -t228, t154, t386, t171, t172, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t201, t200, t126, t201, t533, t384, t95, -t96, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
tauJ_reg = t8;
