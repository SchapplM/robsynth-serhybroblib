% Calculate inertial parameters regressor of coriolis joint torque vector for
% palh1m1OL
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [13x1]
%   Generalized joint coordinates (joint angles)
% qJD [13x1]
%   Generalized joint velocities
% pkin [20x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[AB,AM,BC,BE,BG,BL,DC,EP,GH,GP,HW,ML,OT2,T1D,T2A,T2T1,phi312,phi413,phi710,phi711]';
% 
% Output:
% tauc_reg [13x(13*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2020-04-15 19:46
% Revision: 2d0abd6fcc3afe6f578a07ad3d897ec57baa6ba1 (2020-04-13)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = palh1m1OL_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(13,1),zeros(13,1),zeros(20,1)}
assert(isreal(qJ) && all(size(qJ) == [13 1]), ...
  'palh1m1OL_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [13x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [13 1]), ...
  'palh1m1OL_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [13x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [20 1]), ...
  'palh1m1OL_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [20x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2020-04-15 19:36:45
% EndTime: 2020-04-15 19:38:04
% DurationCPUTime: 10.98s
% Computational Cost: add. (8209->556), mult. (21558->822), div. (0->0), fcn. (17714->20), ass. (0->325)
t244 = sin(qJ(2));
t424 = sin(qJ(8));
t335 = t424 * t244;
t309 = qJD(1) * t335;
t246 = cos(qJ(8));
t251 = cos(qJ(2));
t363 = qJD(1) * t251;
t333 = t246 * t363;
t178 = t309 - t333;
t190 = -t246 * t244 - t424 * t251;
t179 = t190 * qJD(1);
t240 = sin(qJ(9));
t245 = cos(qJ(9));
t115 = t178 * t240 + t179 * t245;
t233 = qJD(2) + qJD(8);
t231 = qJD(9) + t233;
t143 = t233 * t190;
t125 = qJD(1) * t143;
t374 = t246 * t251;
t301 = t233 * t374;
t369 = t233 * t309;
t126 = qJD(1) * t301 - t369;
t359 = qJD(9) * t240;
t43 = t126 * t240 - t178 * t359 + (-qJD(9) * t179 - t125) * t245;
t26 = t115 * t231 + t43;
t289 = -t178 * t245 + t179 * t240;
t358 = qJD(9) * t245;
t44 = t240 * t125 + t126 * t245 - t178 * t358 + t179 * t359;
t27 = -t231 * t289 + t44;
t426 = sin(qJ(3));
t427 = cos(qJ(4));
t311 = t427 * t426;
t243 = sin(qJ(4));
t250 = cos(qJ(3));
t375 = t243 * t250;
t282 = t311 + t375;
t411 = pkin(1) * qJD(3);
t344 = qJD(2) * t411;
t192 = t250 * t244 + t426 * t251;
t182 = qJD(1) * t192;
t338 = t426 * t244;
t184 = -qJD(1) * t338 + t250 * t363;
t112 = t243 * t182 - t427 * t184;
t232 = t244 * pkin(1);
t396 = qJD(1) * pkin(15);
t200 = qJD(1) * t232 - t396;
t150 = -pkin(5) * t184 + t200;
t383 = t150 * t112;
t452 = -t282 * t344 + t383;
t249 = cos(qJ(5));
t283 = t427 * t182 + t243 * t184;
t353 = -qJD(3) - qJD(4);
t325 = qJD(2) - t353;
t296 = t249 * t325;
t242 = sin(qJ(5));
t361 = qJD(5) * t242;
t284 = t250 * t251 - t338;
t278 = t284 * qJD(2);
t260 = t284 * qJD(3) + t278;
t129 = t260 * qJD(1);
t354 = qJD(2) + qJD(3);
t259 = t354 * t192;
t257 = t259 * qJD(1);
t331 = t427 * qJD(4);
t362 = qJD(4) * t243;
t45 = -t427 * t129 + t182 * t362 - t184 * t331 + t243 * t257;
t22 = -qJD(5) * t296 + t249 * t45 + t283 * t361;
t19 = t22 * t242;
t360 = qJD(5) * t249;
t450 = t112 * t249;
t84 = t242 * t325 + t249 * t283;
t8 = -t19 + (t360 + t450) * t84;
t255 = t427 * t259;
t322 = qJD(1) * t255 + t243 * t129;
t46 = qJD(4) * t283 + t322;
t38 = t242 * t46;
t445 = qJD(5) + t112;
t416 = t360 * t445 + t38;
t7 = -t283 * t84 + t445 * t450 + t416;
t425 = sin(qJ(7));
t336 = t425 * t244;
t310 = qJD(1) * t336;
t247 = cos(qJ(7));
t334 = t247 * t363;
t183 = -t310 + t334;
t239 = sin(pkin(19));
t397 = cos(pkin(19));
t413 = sin(qJ(10));
t414 = cos(qJ(10));
t189 = t239 * t413 + t397 * t414;
t271 = -t239 * t414 + t397 * t413;
t191 = t247 * t244 + t425 * t251;
t365 = qJD(1) * t191;
t288 = t183 * t271 + t189 * t365;
t68 = -t183 * t189 + t271 * t365;
t451 = t288 * t68;
t412 = pkin(1) * qJD(2);
t349 = t250 * t412;
t208 = t243 * t349;
t330 = t426 * qJD(2);
t314 = pkin(1) * t330;
t274 = t354 * pkin(5) + t314;
t268 = t427 * t274;
t432 = t208 + t268;
t147 = -pkin(9) * t325 - t432;
t385 = t112 * t147;
t449 = t112 * t283;
t447 = t289 * t115;
t329 = t426 * qJD(3);
t316 = pkin(1) * t329;
t423 = pkin(1) * t250;
t446 = (t427 * qJD(3) + t331) * t423 - t243 * t316;
t234 = qJD(2) + qJD(7);
t13 = -t288 ^ 2 + t68 ^ 2;
t31 = -t112 ^ 2 + t283 ^ 2;
t30 = -t115 ^ 2 + t289 ^ 2;
t171 = t189 * qJD(10);
t172 = t271 * qJD(10);
t328 = t425 * qJD(2);
t313 = pkin(1) * t328;
t420 = t239 * pkin(4);
t186 = t234 * t420 + t313;
t340 = t397 * pkin(4);
t347 = t247 * t412;
t187 = t234 * t340 + t347;
t291 = qJD(7) * t313;
t312 = qJD(7) * t347;
t51 = t171 * t186 + t172 * t187 + t189 * t291 + t271 * t312;
t87 = (-t183 * t239 + t365 * t397) * pkin(4) + t200;
t265 = -t68 * t87 + t51;
t62 = pkin(9) * t283 + pkin(11) * t112;
t230 = qJD(10) + t234;
t145 = t234 * t191;
t127 = t145 * qJD(1);
t373 = t247 * t251;
t302 = t234 * t373;
t368 = t234 * t310;
t128 = qJD(1) * t302 - t368;
t25 = -t127 * t271 + t189 * t128 + t171 * t183 - t172 * t365;
t15 = t230 * t68 + t25;
t28 = t112 * t325 - t45;
t82 = t242 * t283 - t296;
t297 = t242 * t84 + t249 * t82;
t436 = -t22 * t249 - t84 * t361;
t395 = qJD(5) * t84;
t23 = -t242 * t45 + t395;
t437 = t242 * t23 + t82 * t360;
t1 = -t112 * t297 + t436 - t437;
t154 = -pkin(2) * t179 - t396;
t422 = pkin(2) * t233;
t348 = qJD(9) * t422;
t444 = t115 * t154 + t245 * t348;
t443 = -0.2e1 * pkin(15);
t185 = t243 * t274;
t339 = t427 * t250;
t318 = pkin(1) * t339;
t152 = qJD(2) * t318 - t185;
t148 = pkin(11) * t325 - t152;
t49 = pkin(9) * t112 - pkin(11) * t283 + t150;
t35 = t148 * t249 + t242 * t49;
t356 = qJD(1) * qJD(2);
t326 = t251 * t356;
t221 = pkin(1) * t326;
t97 = pkin(5) * t257 + t221;
t11 = t46 * pkin(9) + t45 * pkin(11) + t97;
t272 = t282 * qJD(3);
t95 = qJD(4) * t432 + t272 * t412;
t4 = -qJD(5) * t35 + t249 * t11 - t242 * t95;
t438 = -t35 * t445 - t4;
t394 = t445 * t283;
t223 = -pkin(15) + t232;
t433 = qJD(1) * t223 + t200;
t327 = t425 * qJD(7);
t431 = t328 + t327;
t292 = t148 * t242 - t249 * t49;
t298 = t242 * t292 + t249 * t35;
t40 = t249 * t46;
t430 = t283 * t82 + t40;
t96 = t446 * qJD(2) - qJD(4) * t185;
t263 = -t150 * t283 + t96;
t24 = t127 * t189 + t128 * t271 + t171 * t365 + t172 * t183;
t14 = -t230 * t288 + t24;
t266 = t171 * t187 - t172 * t186 + t189 * t312 - t271 * t291;
t264 = -t288 * t87 + t266;
t287 = t147 * t361 + t96 * t249 + t283 * t292;
t306 = t147 * t360 - t96 * t242 + t283 * t35;
t428 = t289 * t154 + t240 * t348;
t29 = t283 * t354 - t322;
t3 = -qJD(5) * t292 + t11 * t242 + t249 * t95;
t253 = qJD(2) ^ 2;
t421 = pkin(5) * t182;
t2 = t3 * t249;
t417 = t84 * t82;
t410 = pkin(15) * t244;
t409 = t445 * t292;
t273 = t427 * t284;
t138 = t192 * t243 - t273;
t407 = t138 * t46;
t279 = t243 * t284;
t140 = t427 * t192 + t279;
t406 = t140 * t96;
t21 = t23 * t249;
t404 = t242 * t35;
t402 = t242 * t82;
t400 = t249 * t84;
t281 = pkin(1) * (-t189 * t247 + t271 * t425);
t399 = qJD(2) * t281 - (-t397 * t171 + t172 * t239) * pkin(4);
t393 = t445 * t242;
t382 = t179 * t178;
t381 = t365 * t200;
t379 = t182 * t184;
t378 = t183 * t365;
t377 = t200 * t183;
t376 = t200 * t184;
t248 = cos(qJ(6));
t254 = qJD(1) ^ 2;
t372 = t248 * t254;
t371 = t251 * t254;
t280 = pkin(1) * (t425 * t189 + t247 * t271);
t370 = (t171 * t239 + t397 * t172) * pkin(4) - qJD(2) * t280;
t241 = sin(qJ(6));
t367 = t241 ^ 2 - t248 ^ 2;
t366 = t244 ^ 2 - t251 ^ 2;
t355 = qJD(1) * qJD(6);
t352 = -t112 * t404 + t292 * t450 + t2;
t351 = t231 * t422;
t350 = t426 * pkin(1);
t229 = t251 * t412;
t228 = pkin(1) * t363;
t346 = 0.2e1 * t356;
t345 = 0.2e1 * t355;
t342 = t241 * t372;
t341 = t244 * t371;
t337 = t425 * t234;
t225 = t350 + pkin(5);
t174 = t243 * t225 - t318;
t167 = pkin(11) + t174;
t57 = t421 + t62;
t52 = t228 + t57;
t323 = qJD(5) * t167 + t52;
t220 = t250 * t344;
t321 = -t200 * t182 + t220;
t320 = pkin(14) * t345;
t319 = t250 * t354;
t317 = t200 * t228;
t315 = pkin(5) * t331;
t308 = t241 * t248 * t355;
t307 = t244 * t326;
t169 = (t426 * t243 - t339) * t412;
t305 = pkin(5) * t362 - t169;
t69 = t186 * t271 - t187 * t189;
t70 = t186 * t189 + t187 * t271;
t304 = t288 * t69 - t68 * t70;
t299 = -t249 * t292 + t404;
t294 = -t167 * t46 + t385;
t224 = t243 * pkin(5) + pkin(11);
t293 = -t224 * t46 + t385;
t290 = -t112 * t432 - t152 * t283;
t193 = -t335 + t374;
t137 = -t190 * t245 + t193 * t240;
t139 = t190 * t240 + t193 * t245;
t286 = t311 * t412;
t173 = pkin(1) * t375 + t427 * t225;
t101 = (t397 * t183 + t239 * t365) * pkin(4);
t119 = pkin(5) * t259 + t229;
t55 = -qJD(4) * t273 + t192 * t362 + t243 * t259 - t427 * t260;
t56 = qJD(4) * t279 + t192 * t331 + t243 * t260 + t255;
t12 = t56 * pkin(9) + t55 * pkin(11) + t119;
t157 = -pkin(5) * t284 + t223;
t60 = t138 * pkin(9) - t140 * pkin(11) + t157;
t276 = qJD(5) * t140 * t147 + t12 * t445 + t46 * t60;
t275 = -qJD(5) * t445 * t60 - t147 * t55 - t406;
t267 = -qJD(5) * t299 - t4 * t242 + t2;
t256 = t259 * t423;
t252 = qJD(6) ^ 2;
t226 = -t427 * pkin(5) - pkin(9);
t199 = t247 * pkin(1) + t340;
t198 = t425 * pkin(1) + t420;
t194 = -t336 + t373;
t176 = -pkin(2) * t190 - pkin(15);
t170 = t286 + t208;
t166 = -pkin(9) - t173;
t165 = t178 * t396;
t164 = t179 * t396;
t153 = t228 + t421;
t149 = t433 * t229;
t146 = -t431 * t244 + t302;
t144 = -t233 * t335 + t301;
t124 = -t225 * t362 + t446;
t123 = t225 * t331 + (t250 * t362 + t272) * pkin(1);
t122 = (-t189 * t239 - t271 * t397) * pkin(4);
t121 = (-t397 * t189 + t239 * t271) * pkin(4);
t120 = t154 * t178 * pkin(2);
t102 = (t397 * t191 - t194 * t239) * pkin(4) + t223;
t94 = t228 + t101;
t93 = t182 ^ 2 - t184 ^ 2;
t92 = t183 ^ 2 - t365 ^ 2;
t91 = t178 ^ 2 - t179 ^ 2;
t90 = -t189 * t198 - t199 * t271;
t89 = -t189 * t199 + t198 * t271;
t81 = -t189 * t194 + t191 * t271;
t80 = t189 * t191 + t194 * t271;
t77 = -t184 * t354 + t129;
t76 = t182 * t354 - t257;
t75 = t368 + (t183 - t334) * t234;
t73 = t369 + (-t178 - t333) * t233;
t72 = -t179 * t233 + t125;
t63 = t229 + (t145 * t239 + t397 * t146) * pkin(4);
t61 = t221 + (t127 * t239 + t397 * t128) * pkin(4);
t59 = qJD(7) * t280 + t171 * t198 + t172 * t199;
t58 = qJD(7) * t281 - t171 * t199 + t172 * t198;
t54 = qJD(9) * t139 + t143 * t240 + t144 * t245;
t53 = qJD(9) * t137 - t143 * t245 + t144 * t240;
t48 = t242 * t62 + t249 * t432;
t47 = -t242 * t432 + t249 * t62;
t42 = t170 * t249 + t242 * t57;
t41 = -t170 * t242 + t249 * t57;
t37 = (-t178 * t289 + t231 * t358) * pkin(2) + t444;
t36 = (t115 * t178 + t231 * t359) * pkin(2) + t428;
t33 = -t145 * t271 + t146 * t189 + t171 * t194 - t172 * t191;
t32 = t145 * t189 + t146 * t271 + t171 * t191 + t172 * t194;
t9 = t402 * t445 - t21;
t6 = -t393 * t445 + t430;
t5 = (-t27 * t240 + t26 * t245) * pkin(2);
t10 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t307, t366 * t346, -t253 * t244, 0.2e1 * t307, -t253 * t251, 0, t326 * t443, t346 * t410, 0, 0, t129 * t192 + t182 * t260, t129 * t284 - t192 * t257 + t354 * (-t182 * t192 + t184 * t284), t260 * t354, -t184 * t259 - t257 * t284, -t259 * t354, 0, -t184 * t229 - t228 * t278 + t433 * t259, t223 * t129 + t182 * t229 + t192 * t221 + t200 * t260, qJD(2) * t256 - t192 * t220 - t278 * t314, t149, -t140 * t45 - t283 * t55, t112 * t55 + t138 * t45 - t140 * t46 - t283 * t56, -t55 * t325, t112 * t56 + t407, -t56 * t325, 0, t112 * t119 + t138 * t97 + t150 * t56 + t157 * t46, t119 * t283 + t140 * t97 - t150 * t55 - t157 * t45, -t138 * t95 + t152 * t56 + t432 * t55 - t406, t119 * t150 + t157 * t97, t436 * t140 - t55 * t400, t297 * t55 + (t19 - t21 + (-t400 + t402) * qJD(5)) * t140, t140 * t40 - t138 * t22 + t56 * t84 + (-t140 * t361 - t249 * t55) * t445, t140 * t437 - t55 * t402, -t140 * t38 - t138 * t23 - t56 * t82 + (-t140 * t360 + t242 * t55) * t445, t445 * t56 + t407, t138 * t4 + t242 * t275 + t249 * t276 - t292 * t56, -t138 * t3 - t242 * t276 + t249 * t275 - t35 * t56, (-t12 * t84 - t140 * t4 + t22 * t60 - t292 * t55 + (-t140 * t35 - t60 * t82) * qJD(5)) * t249 + (-t12 * t82 - t140 * t3 - t23 * t60 + t35 * t55 + (-t140 * t292 + t60 * t84) * qJD(5)) * t242, t299 * t12 + (qJD(5) * t298 + t242 * t3 + t249 * t4) * t60, 0.2e1 * t308, -t367 * t345, t252 * t248, -0.2e1 * t308, -t252 * t241, 0, t241 * t320, t248 * t320, 0, 0, -t127 * t194 - t145 * t183, t127 * t191 - t128 * t194 + t145 * t365 - t146 * t183, -t145 * t234, t128 * t191 + t146 * t365, -t146 * t234, 0, t128 * t223 + t146 * t200 + 0.2e1 * t365 * t229, -t127 * t223 - t145 * t200 + (qJD(1) * t194 + t183) * t229, (-t425 * t146 + t145 * t247 + (-t191 * t247 + t425 * t194) * qJD(7)) * t412, t149, t125 * t193 - t143 * t178, t125 * t190 - t126 * t193 + t143 * t179 + t144 * t178, t143 * t233, -t126 * t190 - t144 * t179, -t144 * t233, 0, (-qJD(1) * t144 - t126) * pkin(15), t125 * t443, 0, 0, -t139 * t43 - t289 * t53, -t115 * t53 + t137 * t43 - t139 * t44 - t289 * t54, t53 * t231, -t115 * t54 + t137 * t44, t54 * t231, 0, -t154 * t54 - t176 * t44 + (t115 * t144 - t126 * t137) * pkin(2), t154 * t53 + t176 * t43 + (-t126 * t139 - t144 * t289) * pkin(2), (-t240 * t54 + t245 * t53 + (-t137 * t245 + t139 * t240) * qJD(9)) * t422, (t126 * t176 + t144 * t154) * pkin(2), t24 * t81 + t32 * t68, t24 * t80 + t25 * t81 + t288 * t32 + t33 * t68, t230 * t32, t25 * t80 + t288 * t33, t33 * t230, 0, -t102 * t25 - t288 * t63 - t33 * t87 - t61 * t80, t102 * t24 + t32 * t87 + t61 * t81 + t63 * t68, -t266 * t80 - t32 * t69 - t33 * t70 - t51 * t81, t102 * t61 + t63 * t87; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t341, -t366 * t254, 0, -t341, 0, 0, pkin(15) * t371, -t254 * t410, 0, 0, -t379, t93, t77, t379, t76, 0, (qJD(3) * t319 + t184 * t363) * pkin(1) + t321, -t376 + (-t182 * t363 + (-0.2e1 * t330 - t329) * qJD(3)) * pkin(1), qJD(1) * t256 - t129 * t350 + (t314 + t316) * t184 + (-t250 * t411 - t349) * t182, -t317, t449, t31, t28, -t449, t29, 0, -t153 * t112 + t124 * t325 + t263, -t123 * t354 - t153 * t283 + (-t123 - t432) * qJD(4) + t452, -t112 * t123 - t124 * t283 + t173 * t45 - t174 * t46 + t290, -t123 * t152 + t124 * t432 - t150 * t153 + t173 * t96 + t174 * t95, t8, t1, t7, t9, t6, -t394, -t124 * t82 + t166 * t23 + t294 * t242 + (-t123 * t242 - t249 * t323) * t445 + t287, -t124 * t84 - t166 * t22 + t294 * t249 + (-t123 * t249 + t242 * t323) * t445 + t306, (-t123 * t82 - t167 * t23 + t52 * t84 + (t167 * t84 + t292) * qJD(5)) * t249 + (t123 * t84 - t167 * t22 + t52 * t82 - t4 + (t167 * t82 - t35) * qJD(5)) * t242 + t352, t123 * t298 - t124 * t147 - t166 * t96 + t167 * t267 - t299 * t52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t378, t92, 0, -t378, t75, 0, -t377 + (-t365 * t363 + (-t328 - t337) * qJD(7)) * pkin(1), t381 + (-t183 * t363 + (-qJD(2) - t234) * t247 * qJD(7)) * pkin(1), (-t425 * t128 + t431 * t183 + (-t234 * t365 + t127) * t247) * pkin(1), -t317, t382, t91, t72, -t382, t73, 0, -t165, t164, 0, 0, -t447, t30, t26, t447, t27, 0, t36, t37, t5, t120, -t451, t13, t14, t451, t15, 0, t59 * t230 + t288 * t94 + t265, -t230 * t58 - t68 * t94 + t264, -t24 * t89 + t25 * t90 + t288 * t58 - t59 * t68 + t304, -t266 * t90 + t51 * t89 - t58 * t70 + t59 * t69 - t87 * t94; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t379, t93, t77, t379, t76, 0, -t319 * t412 + t321, t253 * t350 - t376, 0, 0, t449, t31, t28, -t449, t29, 0, t169 * t325 + (-t182 * t112 - t325 * t362) * pkin(5) + t263, -qJD(3) * t286 - qJD(4) * t268 - t283 * t421 + t208 * t353 + t383 + (t170 - t315) * t325, t170 * t112 - t169 * t283 + (t427 * t45 - t243 * t46 + (-t427 * t112 + t243 * t283) * qJD(4)) * pkin(5) + t290, t432 * t169 + t152 * t170 + (t427 * t96 - t150 * t182 + t243 * t95 + (-t427 * t152 - t243 * t432) * qJD(4)) * pkin(5), t8, t1, t7, t9, t6, -t394, t226 * t23 + t305 * t82 + t293 * t242 + (-t224 * t360 - t242 * t315 - t41) * t445 + t287, -t226 * t22 + t305 * t84 + t293 * t249 + (t224 * t361 - t249 * t315 + t42) * t445 + t306, t41 * t84 + t42 * t82 + (-t82 * t315 - t224 * t23 + (t224 * t84 + t292) * qJD(5)) * t249 + (t84 * t315 - t22 * t224 - t4 + (t224 * t82 - t35) * qJD(5)) * t242 + t352, -t147 * t169 - t96 * t226 + t292 * t41 - t35 * t42 + (t147 * t243 + t298 * t427) * qJD(4) * pkin(5) + t267 * t224, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t449, t31, t28, -t449, t29, 0, -t152 * t325 + t263, t432 * t354 + t452, 0, 0, t8, t1, t7, t393 * t82 - t21, -t242 * t445 ^ 2 + t430, -t394, -pkin(9) * t23 - pkin(11) * t416 + t152 * t82 + t242 * t385 - t445 * t47 + t287, t147 * t450 + pkin(9) * t22 + t445 * t48 + t152 * t84 + (t361 * t445 - t40) * pkin(11) + t306, t47 * t84 + t48 * t82 + t2 + (t409 + (-t23 + t395) * pkin(11)) * t249 + ((qJD(5) * t82 - t22) * pkin(11) + t438) * t242, pkin(9) * t96 + pkin(11) * t267 + t147 * t152 + t292 * t47 - t35 * t48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t417, -t82 ^ 2 + t84 ^ 2, t445 * t82 - t22, -t417, t445 * t84 - t23, t46, -t147 * t84 - t438, t147 * t82 - t3 - t409, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t342, t367 * t254, 0, t342, 0, 0, -t254 * pkin(14) * t241, -pkin(14) * t372, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t378, t92, 0, -t378, t75, 0, -t377 + (-t327 + t337) * t412, t381 + (-qJD(7) + t234) * t347, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t451, t13, t14, t451, t15, 0, t101 * t288 + t230 * t370 + t265, -t101 * t68 + t230 * t399 + t264, -t121 * t24 + t122 * t25 - t288 * t399 - t370 * t68 + t304, -t101 * t87 + t121 * t51 - t122 * t266 + t370 * t69 + t399 * t70; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t382, t91, t72, -t382, t73, 0, -t165, t164, 0, 0, -t447, t30, t26, t447, t27, 0, t36, t37, t5, t120, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t447, t30, t26, t447, t27, 0, -t240 * t351 + t428, -t245 * t351 + t444, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t451, t13, t14, t451, t15, 0, -t70 * t230 + t265, t230 * t69 + t264, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
tauc_reg = t10;
