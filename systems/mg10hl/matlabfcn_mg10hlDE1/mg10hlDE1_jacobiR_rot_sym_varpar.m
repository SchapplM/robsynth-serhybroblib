% Rotatorische Teilmatrix der Rotationsmatrix-Jacobi-Matrix für beliebiges Segment von
% mg10hlDE1
% Use Code from Maple symbolic Code Generation
% 
% Rotationsmatrix-Jacobi-Matrix: Differentieller Zusammenhang zwischen
% gestapelter Endeffektor-Rotationsmatrix und verallgemeinerten Koordinaten.
% 
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% link_index [1x1 uint8]
%   Index des Segmentes, auf dem der Punkt C liegt. (0=Basis).
%   Siehe auch: bsp_3T1R_fkine_fixb_rotmat_mdh_sym_varpar.m
% pkin [17x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[AC,AE,CG,DC,ED,GK,GP,HP,LW,ML,OT,PM,TA,TE,phi23,phi3,phi34]';
% 
% Output:
% JR_rot [9x6]
%   Jacobi-Matrix der Endeffektor-Rotationsmatrix

% Quelle: HybrDyn-Toolbox
% Datum: 2020-04-11 12:53
% Revision: 6ae2d958c5b90587a0d08029b131cb7b66342a68 (2020-04-11)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function JR_rot = mg10hlDE1_jacobiR_rot_sym_varpar(qJ, link_index, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),uint8(0),zeros(17,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'mg10hlDE1_jacobiR_rot_sym_varpar: qJ has to be [6x1] (double)');
assert(isa(link_index,'uint8') && all(size(link_index) == [1 1]), ...
	'mg10hlDE1_jacobiR_rot_sym_varpar: link_index has to be [1x1] uint8');
assert(isreal(pkin) && all(size(pkin) == [17 1]), ...
  'mg10hlDE1_jacobiR_rot_sym_varpar: pkin has to be [17x1] (double)');
if link_index == 0
	%% Symbolic Calculation
	% From jacobiR_rot_0_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-04-11 12:36:05
	% EndTime: 2020-04-11 12:36:05
	% DurationCPUTime: 0.02s
	% Computational Cost: add. (0->0), mult. (0->0), div. (0->0), fcn. (0->0), ass. (0->54)
	unknown=NaN(9,6);
	unknown(1,1) = 0;
	unknown(1,2) = 0;
	unknown(1,3) = 0;
	unknown(1,4) = 0;
	unknown(1,5) = 0;
	unknown(1,6) = 0;
	unknown(2,1) = 0;
	unknown(2,2) = 0;
	unknown(2,3) = 0;
	unknown(2,4) = 0;
	unknown(2,5) = 0;
	unknown(2,6) = 0;
	unknown(3,1) = 0;
	unknown(3,2) = 0;
	unknown(3,3) = 0;
	unknown(3,4) = 0;
	unknown(3,5) = 0;
	unknown(3,6) = 0;
	unknown(4,1) = 0;
	unknown(4,2) = 0;
	unknown(4,3) = 0;
	unknown(4,4) = 0;
	unknown(4,5) = 0;
	unknown(4,6) = 0;
	unknown(5,1) = 0;
	unknown(5,2) = 0;
	unknown(5,3) = 0;
	unknown(5,4) = 0;
	unknown(5,5) = 0;
	unknown(5,6) = 0;
	unknown(6,1) = 0;
	unknown(6,2) = 0;
	unknown(6,3) = 0;
	unknown(6,4) = 0;
	unknown(6,5) = 0;
	unknown(6,6) = 0;
	unknown(7,1) = 0;
	unknown(7,2) = 0;
	unknown(7,3) = 0;
	unknown(7,4) = 0;
	unknown(7,5) = 0;
	unknown(7,6) = 0;
	unknown(8,1) = 0;
	unknown(8,2) = 0;
	unknown(8,3) = 0;
	unknown(8,4) = 0;
	unknown(8,5) = 0;
	unknown(8,6) = 0;
	unknown(9,1) = 0;
	unknown(9,2) = 0;
	unknown(9,3) = 0;
	unknown(9,4) = 0;
	unknown(9,5) = 0;
	unknown(9,6) = 0;
	JR_rot = unknown;
elseif link_index == 1
	%% Symbolic Calculation
	% From jacobiR_rot_1_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-04-11 12:36:05
	% EndTime: 2020-04-11 12:36:05
	% DurationCPUTime: 0.03s
	% Computational Cost: add. (3->3), mult. (0->0), div. (0->0), fcn. (4->2), ass. (0->56)
	unknown=NaN(9,6);
	t1 = sin(qJ(1));
	t2 = cos(qJ(1));
	unknown(1,1) = -t1;
	unknown(1,2) = 0.0e0;
	unknown(1,3) = 0.0e0;
	unknown(1,4) = 0.0e0;
	unknown(1,5) = 0.0e0;
	unknown(1,6) = 0.0e0;
	unknown(2,1) = t2;
	unknown(2,2) = 0.0e0;
	unknown(2,3) = 0.0e0;
	unknown(2,4) = 0.0e0;
	unknown(2,5) = 0.0e0;
	unknown(2,6) = 0.0e0;
	unknown(3,1) = 0.0e0;
	unknown(3,2) = 0.0e0;
	unknown(3,3) = 0.0e0;
	unknown(3,4) = 0.0e0;
	unknown(3,5) = 0.0e0;
	unknown(3,6) = 0.0e0;
	unknown(4,1) = -t2;
	unknown(4,2) = 0.0e0;
	unknown(4,3) = 0.0e0;
	unknown(4,4) = 0.0e0;
	unknown(4,5) = 0.0e0;
	unknown(4,6) = 0.0e0;
	unknown(5,1) = -t1;
	unknown(5,2) = 0.0e0;
	unknown(5,3) = 0.0e0;
	unknown(5,4) = 0.0e0;
	unknown(5,5) = 0.0e0;
	unknown(5,6) = 0.0e0;
	unknown(6,1) = 0.0e0;
	unknown(6,2) = 0.0e0;
	unknown(6,3) = 0.0e0;
	unknown(6,4) = 0.0e0;
	unknown(6,5) = 0.0e0;
	unknown(6,6) = 0.0e0;
	unknown(7,1) = 0.0e0;
	unknown(7,2) = 0.0e0;
	unknown(7,3) = 0.0e0;
	unknown(7,4) = 0.0e0;
	unknown(7,5) = 0.0e0;
	unknown(7,6) = 0.0e0;
	unknown(8,1) = 0.0e0;
	unknown(8,2) = 0.0e0;
	unknown(8,3) = 0.0e0;
	unknown(8,4) = 0.0e0;
	unknown(8,5) = 0.0e0;
	unknown(8,6) = 0.0e0;
	unknown(9,1) = 0.0e0;
	unknown(9,2) = 0.0e0;
	unknown(9,3) = 0.0e0;
	unknown(9,4) = 0.0e0;
	unknown(9,5) = 0.0e0;
	unknown(9,6) = 0.0e0;
	JR_rot = unknown;
elseif link_index == 2
	%% Symbolic Calculation
	% From jacobiR_rot_2_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-04-11 12:36:05
	% EndTime: 2020-04-11 12:36:05
	% DurationCPUTime: 0.03s
	% Computational Cost: add. (6->6), mult. (8->4), div. (0->0), fcn. (20->4), ass. (0->62)
	unknown=NaN(9,6);
	t1 = sin(qJ(1));
	t2 = sin(qJ(2));
	t3 = t1 * t2;
	t4 = cos(qJ(1));
	t5 = cos(qJ(2));
	t6 = t4 * t5;
	t7 = t4 * t2;
	t8 = t1 * t5;
	unknown(1,1) = t3;
	unknown(1,2) = -t6;
	unknown(1,3) = 0.0e0;
	unknown(1,4) = 0.0e0;
	unknown(1,5) = 0.0e0;
	unknown(1,6) = 0.0e0;
	unknown(2,1) = -t7;
	unknown(2,2) = -t8;
	unknown(2,3) = 0.0e0;
	unknown(2,4) = 0.0e0;
	unknown(2,5) = 0.0e0;
	unknown(2,6) = 0.0e0;
	unknown(3,1) = 0.0e0;
	unknown(3,2) = -t2;
	unknown(3,3) = 0.0e0;
	unknown(3,4) = 0.0e0;
	unknown(3,5) = 0.0e0;
	unknown(3,6) = 0.0e0;
	unknown(4,1) = t8;
	unknown(4,2) = t7;
	unknown(4,3) = 0.0e0;
	unknown(4,4) = 0.0e0;
	unknown(4,5) = 0.0e0;
	unknown(4,6) = 0.0e0;
	unknown(5,1) = -t6;
	unknown(5,2) = t3;
	unknown(5,3) = 0.0e0;
	unknown(5,4) = 0.0e0;
	unknown(5,5) = 0.0e0;
	unknown(5,6) = 0.0e0;
	unknown(6,1) = 0.0e0;
	unknown(6,2) = -t5;
	unknown(6,3) = 0.0e0;
	unknown(6,4) = 0.0e0;
	unknown(6,5) = 0.0e0;
	unknown(6,6) = 0.0e0;
	unknown(7,1) = t4;
	unknown(7,2) = 0.0e0;
	unknown(7,3) = 0.0e0;
	unknown(7,4) = 0.0e0;
	unknown(7,5) = 0.0e0;
	unknown(7,6) = 0.0e0;
	unknown(8,1) = t1;
	unknown(8,2) = 0.0e0;
	unknown(8,3) = 0.0e0;
	unknown(8,4) = 0.0e0;
	unknown(8,5) = 0.0e0;
	unknown(8,6) = 0.0e0;
	unknown(9,1) = 0.0e0;
	unknown(9,2) = 0.0e0;
	unknown(9,3) = 0.0e0;
	unknown(9,4) = 0.0e0;
	unknown(9,5) = 0.0e0;
	unknown(9,6) = 0.0e0;
	JR_rot = unknown;
elseif link_index == 3
	%% Symbolic Calculation
	% From jacobiR_rot_3_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-04-11 12:36:09
	% EndTime: 2020-04-11 12:36:10
	% DurationCPUTime: 0.40s
	% Computational Cost: add. (13990->63), mult. (21320->122), div. (720->9), fcn. (13546->10), ass. (0->111)
	unknown=NaN(9,6);
	t1 = sin(qJ(1));
	t2 = sin(qJ(2));
	t3 = t2 * t1;
	t4 = cos(pkin(15));
	t5 = cos(qJ(2));
	t7 = sin(pkin(15));
	t9 = -t7 * t2 + t4 * t5;
	t10 = t9 * pkin(2);
	t13 = t4 * t2 + t7 * t5;
	t16 = 0.2e1 * pkin(2) * pkin(1) * t13;
	t17 = pkin(1) ^ 2;
	t21 = -t16 + t17 + (pkin(2) + pkin(5) + pkin(4)) * (pkin(2) - pkin(5) - pkin(4));
	t25 = -t16 + t17 + (pkin(2) + pkin(5) - pkin(4)) * (pkin(2) - pkin(5) + pkin(4));
	t27 = sqrt(-t25 * t21);
	t28 = t27 * t10;
	t30 = -t13 * pkin(2) + pkin(1);
	t31 = pkin(2) ^ 2;
	t32 = pkin(5) ^ 2;
	t33 = pkin(4) ^ 2;
	t34 = -t16 + t17 + t31 - t32 + t33;
	t36 = t34 * t30 - t28;
	t38 = 0.1e1 / pkin(4);
	t39 = -t16 + t17 + t31;
	t40 = 0.1e1 / t39;
	t43 = t34 * t10;
	t44 = t27 * t30 + t43;
	t45 = t44 ^ 2;
	t46 = 0.1e1 / t33;
	t48 = t39 ^ 2;
	t49 = 0.1e1 / t48;
	t51 = t36 ^ 2;
	t55 = sqrt(t49 * t46 * t45 + t49 * t46 * t51);
	t57 = 0.1e1 / t55 * t40 * t38;
	t61 = -t57 * t36 * t4 + t57 * t44 * t7;
	t62 = t61 * t3;
	t63 = t5 * t1;
	t68 = -t57 * t36 * t7 - t57 * t44 * t4;
	t71 = cos(qJ(1));
	t72 = t5 * t71;
	t73 = t61 * t72;
	t74 = t2 * t71;
	t75 = 0.1e1 / t27;
	t77 = pkin(1) * t9;
	t81 = pkin(1) * pkin(2);
	t83 = t25 * pkin(2) * t77 + t81 * t9 * t21;
	t86 = -t13 * pkin(2);
	t88 = t9 ^ 2;
	t97 = pkin(2) * t77;
	t104 = 0.1e1 / t51;
	t107 = 0.1e1 / (t104 * t45 + 0.1e1);
	t130 = t107 * t39 * pkin(4) / t36 * (t40 * t38 * (-0.2e1 * pkin(1) * t88 * t31 + t83 * t75 * t30 + t34 * t86 - t28) + 0.2e1 * t97 * t49 * t38 * t44) - t107 * t104 * t39 * pkin(4) * t44 * (t40 * t38 * (-t83 * t75 * t10 - 0.2e1 * t81 * t9 * t30 - t27 * t86 - t43) + 0.2e1 * t97 * t49 * t38 * t36);
	t131 = t130 * t4;
	t134 = t130 * t7;
	t137 = t57 * t44 * t131 + t57 * t36 * t134;
	t144 = -t57 * t36 * t131 + t57 * t44 * t134;
	t147 = t61 * t74;
	t150 = t61 * t63;
	unknown(1,1) = t68 * t63 + t62;
	unknown(1,2) = -t137 * t74 - t144 * t72 + t68 * t74 - t73;
	unknown(1,3) = 0.0e0;
	unknown(1,4) = 0.0e0;
	unknown(1,5) = 0.0e0;
	unknown(1,6) = 0.0e0;
	unknown(2,1) = -t68 * t72 - t147;
	unknown(2,2) = -t137 * t3 - t144 * t63 + t68 * t3 - t150;
	unknown(2,3) = 0.0e0;
	unknown(2,4) = 0.0e0;
	unknown(2,5) = 0.0e0;
	unknown(2,6) = 0.0e0;
	unknown(3,1) = 0.0e0;
	unknown(3,2) = t137 * t5 - t144 * t2 - t61 * t2 - t68 * t5;
	unknown(3,3) = 0.0e0;
	unknown(3,4) = 0.0e0;
	unknown(3,5) = 0.0e0;
	unknown(3,6) = 0.0e0;
	unknown(4,1) = -t68 * t3 + t150;
	unknown(4,2) = -t137 * t72 + t144 * t74 + t68 * t72 + t147;
	unknown(4,3) = 0.0e0;
	unknown(4,4) = 0.0e0;
	unknown(4,5) = 0.0e0;
	unknown(4,6) = 0.0e0;
	unknown(5,1) = t68 * t74 - t73;
	unknown(5,2) = -t137 * t63 + t144 * t3 + t68 * t63 + t62;
	unknown(5,3) = 0.0e0;
	unknown(5,4) = 0.0e0;
	unknown(5,5) = 0.0e0;
	unknown(5,6) = 0.0e0;
	unknown(6,1) = 0.0e0;
	unknown(6,2) = -t137 * t2 - t144 * t5 + t68 * t2 - t61 * t5;
	unknown(6,3) = 0.0e0;
	unknown(6,4) = 0.0e0;
	unknown(6,5) = 0.0e0;
	unknown(6,6) = 0.0e0;
	unknown(7,1) = t71;
	unknown(7,2) = 0.0e0;
	unknown(7,3) = 0.0e0;
	unknown(7,4) = 0.0e0;
	unknown(7,5) = 0.0e0;
	unknown(7,6) = 0.0e0;
	unknown(8,1) = t1;
	unknown(8,2) = 0.0e0;
	unknown(8,3) = 0.0e0;
	unknown(8,4) = 0.0e0;
	unknown(8,5) = 0.0e0;
	unknown(8,6) = 0.0e0;
	unknown(9,1) = 0.0e0;
	unknown(9,2) = 0.0e0;
	unknown(9,3) = 0.0e0;
	unknown(9,4) = 0.0e0;
	unknown(9,5) = 0.0e0;
	unknown(9,6) = 0.0e0;
	JR_rot = unknown;
elseif link_index == 4
	%% Symbolic Calculation
	% From jacobiR_rot_4_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-04-11 12:36:11
	% EndTime: 2020-04-11 12:36:14
	% DurationCPUTime: 0.89s
	% Computational Cost: add. (36496->111), mult. (51312->202), div. (2320->16), fcn. (31482->17), ass. (0->158)
	unknown=NaN(9,6);
	t1 = sin(qJ(1));
	t2 = sin(qJ(2));
	t3 = t2 * t1;
	t4 = cos(pkin(15));
	t5 = cos(qJ(2));
	t7 = sin(pkin(15));
	t9 = -t2 * t7 + t4 * t5;
	t10 = t9 * pkin(2);
	t13 = t2 * t4 + t5 * t7;
	t16 = 0.2e1 * pkin(2) * pkin(1) * t13;
	t17 = pkin(1) ^ 2;
	t21 = -t16 + t17 + (pkin(2) + pkin(5) + pkin(4)) * (pkin(2) - pkin(5) - pkin(4));
	t25 = -t16 + t17 + (pkin(2) + pkin(5) - pkin(4)) * (pkin(2) - pkin(5) + pkin(4));
	t27 = sqrt(-t25 * t21);
	t28 = t27 * t10;
	t30 = -t13 * pkin(2) + pkin(1);
	t31 = pkin(2) ^ 2;
	t32 = pkin(5) ^ 2;
	t33 = pkin(4) ^ 2;
	t34 = -t16 + t17 + t31 - t32 + t33;
	t36 = t30 * t34 - t28;
	t38 = 0.1e1 / pkin(4);
	t39 = -t16 + t17 + t31;
	t40 = 0.1e1 / t39;
	t43 = t34 * t10;
	t44 = t27 * t30 + t43;
	t45 = t44 ^ 2;
	t46 = 0.1e1 / t33;
	t48 = t39 ^ 2;
	t49 = 0.1e1 / t48;
	t51 = t36 ^ 2;
	t55 = sqrt(t45 * t46 * t49 + t46 * t49 * t51);
	t57 = 0.1e1 / t55 * t40 * t38;
	t61 = -t36 * t4 * t57 + t44 * t57 * t7;
	t62 = t61 * t3;
	t63 = t5 * t1;
	t68 = -t36 * t57 * t7 - t4 * t44 * t57;
	t70 = t63 * t68 + t62;
	t71 = cos(pkin(17));
	t72 = 0.1e1 / pkin(7);
	t73 = qJ(6) + pkin(8);
	t75 = 0.1e1 / t73 * t72;
	t76 = pkin(6) - pkin(7) - pkin(8) - qJ(6);
	t77 = pkin(6) - pkin(7) + pkin(8) + qJ(6);
	t78 = t77 * t76;
	t79 = pkin(6) + pkin(7) - pkin(8) - qJ(6);
	t80 = pkin(6) + pkin(7) + pkin(8) + qJ(6);
	t81 = t80 * t79;
	t83 = sqrt(-t81 * t78);
	t85 = (pkin(6) ^ 2);
	t86 = (pkin(7) ^ 2);
	t87 = (pkin(8) ^ 2);
	t90 = (qJ(6) ^ 2);
	t91 = -2 * pkin(8) * qJ(6) + t85 - t86 - t87 - t90;
	t93 = atan2(t83 * t75, t91 * t75);
	t94 = t93 + pkin(16);
	t95 = cos(t94);
	t97 = sin(pkin(17));
	t98 = sin(t94);
	t100 = -t71 * t95 - t97 * t98;
	t103 = t61 * t63;
	t104 = -t3 * t68 + t103;
	t107 = t71 * t98 - t95 * t97;
	t110 = cos(qJ(1));
	t111 = t5 * t110;
	t112 = t61 * t111;
	t113 = t2 * t110;
	t114 = 0.1e1 / t27;
	t116 = pkin(1) * t9;
	t120 = pkin(1) * pkin(2);
	t122 = pkin(2) * t116 * t25 + t120 * t21 * t9;
	t125 = -t13 * pkin(2);
	t127 = t9 ^ 2;
	t136 = pkin(2) * t116;
	t143 = 0.1e1 / t51;
	t146 = 0.1e1 / (t143 * t45 + 0.1e1);
	t169 = t146 * t39 * pkin(4) / t36 * (t40 * t38 * (-0.2e1 * pkin(1) * t127 * t31 + t114 * t122 * t30 + t125 * t34 - t28) + 0.2e1 * t136 * t49 * t38 * t44) - t146 * t143 * t39 * pkin(4) * t44 * (t40 * t38 * (-t10 * t114 * t122 - 0.2e1 * t120 * t30 * t9 - t125 * t27 - t43) + 0.2e1 * t136 * t49 * t38 * t36);
	t170 = t169 * t4;
	t173 = t169 * t7;
	t176 = t170 * t44 * t57 + t173 * t36 * t57;
	t183 = -t170 * t36 * t57 + t173 * t44 * t57;
	t185 = -t111 * t183 - t113 * t176 + t113 * t68 - t112;
	t189 = t61 * t113;
	t191 = -t111 * t176 + t111 * t68 + t113 * t183 + t189;
	t195 = -t111 * t68 - t189;
	t196 = t73 ^ 2;
	t198 = 0.1e1 / t196 * t72;
	t215 = t91 ^ 2;
	t216 = 1 / t215;
	t220 = 0.1e1 / (-t216 * t78 * t81 + 0.1e1);
	t231 = t220 / t91 * t73 * pkin(7) * (-t83 * t198 + (-t76 * t79 * t80 + t77 * t79 * t80 - t78 * t79 + t78 * t80) / t83 * t75 / 0.2e1) - t220 * t216 * t83 * t73 * pkin(7) * (-t198 * t91 - 0.2e1 * t73 * t75);
	t232 = t231 * t71;
	t234 = t231 * t97;
	t236 = t232 * t98 - t234 * t95;
	t239 = t113 * t68 - t112;
	t242 = t232 * t95 + t234 * t98;
	t251 = -t176 * t3 - t183 * t63 + t3 * t68 - t103;
	t256 = -t176 * t63 + t183 * t3 + t63 * t68 + t62;
	t262 = t61 * t2;
	t266 = t176 * t5 - t183 * t2 - t5 * t68 - t262;
	t270 = t61 * t5;
	t272 = -t176 * t2 - t183 * t5 + t2 * t68 - t270;
	t276 = -t2 * t68 + t270;
	t279 = -t5 * t68 - t262;
	unknown(1,1) = t100 * t70 + t104 * t107;
	unknown(1,2) = t100 * t185 + t107 * t191;
	unknown(1,3) = 0.0e0;
	unknown(1,4) = 0.0e0;
	unknown(1,5) = 0.0e0;
	unknown(1,6) = t195 * t236 + t239 * t242;
	unknown(2,1) = t100 * t195 + t107 * t239;
	unknown(2,2) = t100 * t251 + t107 * t256;
	unknown(2,3) = 0.0e0;
	unknown(2,4) = 0.0e0;
	unknown(2,5) = 0.0e0;
	unknown(2,6) = -t104 * t242 - t236 * t70;
	unknown(3,1) = 0.0e0;
	unknown(3,2) = t100 * t266 + t107 * t272;
	unknown(3,3) = 0.0e0;
	unknown(3,4) = 0.0e0;
	unknown(3,5) = 0.0e0;
	unknown(3,6) = t236 * t276 + t242 * t279;
	unknown(4,1) = t100 * t104 - t107 * t70;
	unknown(4,2) = t100 * t191 - t107 * t185;
	unknown(4,3) = 0.0e0;
	unknown(4,4) = 0.0e0;
	unknown(4,5) = 0.0e0;
	unknown(4,6) = -t195 * t242 + t236 * t239;
	unknown(5,1) = t100 * t239 - t107 * t195;
	unknown(5,2) = t100 * t256 - t107 * t251;
	unknown(5,3) = 0.0e0;
	unknown(5,4) = 0.0e0;
	unknown(5,5) = 0.0e0;
	unknown(5,6) = -t104 * t236 + t242 * t70;
	unknown(6,1) = 0.0e0;
	unknown(6,2) = t100 * t272 - t107 * t266;
	unknown(6,3) = 0.0e0;
	unknown(6,4) = 0.0e0;
	unknown(6,5) = 0.0e0;
	unknown(6,6) = t236 * t279 - t242 * t276;
	unknown(7,1) = t110;
	unknown(7,2) = 0.0e0;
	unknown(7,3) = 0.0e0;
	unknown(7,4) = 0.0e0;
	unknown(7,5) = 0.0e0;
	unknown(7,6) = 0.0e0;
	unknown(8,1) = t1;
	unknown(8,2) = 0.0e0;
	unknown(8,3) = 0.0e0;
	unknown(8,4) = 0.0e0;
	unknown(8,5) = 0.0e0;
	unknown(8,6) = 0.0e0;
	unknown(9,1) = 0.0e0;
	unknown(9,2) = 0.0e0;
	unknown(9,3) = 0.0e0;
	unknown(9,4) = 0.0e0;
	unknown(9,5) = 0.0e0;
	unknown(9,6) = 0.0e0;
	JR_rot = unknown;
elseif link_index == 5
	%% Symbolic Calculation
	% From jacobiR_rot_5_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-04-11 12:36:17
	% EndTime: 2020-04-11 12:36:23
	% DurationCPUTime: 1.99s
	% Computational Cost: add. (101624->168), mult. (129960->375), div. (9080->23), fcn. (72778->21), ass. (0->215)
	unknown=NaN(9,6);
	t1 = sin(qJ(1));
	t2 = sin(qJ(2));
	t3 = t2 * t1;
	t4 = cos(pkin(15));
	t5 = cos(qJ(2));
	t7 = sin(pkin(15));
	t9 = -t7 * t2 + t4 * t5;
	t10 = t9 * pkin(2);
	t13 = t4 * t2 + t7 * t5;
	t16 = 0.2e1 * pkin(2) * pkin(1) * t13;
	t17 = pkin(1) ^ 2;
	t21 = -t16 + t17 + (pkin(2) + pkin(5) + pkin(4)) * (pkin(2) - pkin(5) - pkin(4));
	t25 = -t16 + t17 + (pkin(2) + pkin(5) - pkin(4)) * (pkin(2) - pkin(5) + pkin(4));
	t27 = sqrt(-t25 * t21);
	t28 = t27 * t10;
	t30 = -t13 * pkin(2) + pkin(1);
	t31 = pkin(2) ^ 2;
	t32 = pkin(5) ^ 2;
	t33 = pkin(4) ^ 2;
	t34 = -t16 + t17 + t31 - t32 + t33;
	t36 = t34 * t30 - t28;
	t38 = 0.1e1 / pkin(4);
	t39 = -t16 + t17 + t31;
	t40 = 0.1e1 / t39;
	t43 = t34 * t10;
	t44 = t27 * t30 + t43;
	t45 = t44 ^ 2;
	t46 = 0.1e1 / t33;
	t48 = t39 ^ 2;
	t49 = 0.1e1 / t48;
	t51 = t36 ^ 2;
	t55 = sqrt(t49 * t46 * t45 + t49 * t46 * t51);
	t57 = 0.1e1 / t55 * t40 * t38;
	t61 = -t57 * t36 * t4 + t57 * t44 * t7;
	t62 = t61 * t3;
	t63 = t5 * t1;
	t68 = -t57 * t36 * t7 - t57 * t44 * t4;
	t70 = t68 * t63 + t62;
	t71 = cos(pkin(17));
	t72 = 1 / pkin(7);
	t73 = qJ(6) + pkin(8);
	t75 = 0.1e1 / t73 * t72;
	t76 = (pkin(6) - pkin(7) - pkin(8) - qJ(6));
	t77 = pkin(6) - pkin(7) + pkin(8) + qJ(6);
	t78 = t77 * t76;
	t79 = (pkin(6) + pkin(7) - pkin(8) - qJ(6));
	t80 = (pkin(6) + pkin(7) + pkin(8) + qJ(6));
	t81 = t80 * t79;
	t83 = sqrt(-t81 * t78);
	t85 = (pkin(6) ^ 2);
	t86 = (pkin(7) ^ 2);
	t87 = (pkin(8) ^ 2);
	t89 = 2 * pkin(8) * qJ(6);
	t90 = qJ(6) ^ 2;
	t91 = t85 - t86 - t87 - t89 - t90;
	t93 = atan2(t83 * t75, t91 * t75);
	t94 = t93 + pkin(16);
	t95 = cos(t94);
	t97 = sin(pkin(17));
	t98 = sin(t94);
	t100 = -t95 * t71 - t98 * t97;
	t103 = t61 * t63;
	t104 = -t68 * t3 + t103;
	t107 = t98 * t71 - t95 * t97;
	t109 = t100 * t70 + t107 * t104;
	t110 = 0.1e1 / pkin(6);
	t111 = t73 ^ 2;
	t112 = 1 / t111;
	t113 = (t112 * t110);
	t114 = t85 - t86 + t87 + t89 + t90;
	t115 = t72 * t114;
	t116 = t91 * t115;
	t118 = (t76 * t113);
	t119 = (t79 * t77);
	t121 = t72 * t80 * t119;
	t123 = t116 * t113 - t121 * t118;
	t124 = cos(pkin(16));
	t126 = t72 * t83;
	t127 = t91 * t126;
	t129 = t83 * t115;
	t131 = -t127 * t113 + t129 * t113;
	t132 = sin(pkin(16));
	t134 = -t124 * t123 / 0.4e1 + t132 * t131 / 0.4e1;
	t138 = t124 * t131 / 0.4e1 + t132 * t123 / 0.4e1;
	t139 = t138 ^ 2;
	t140 = t134 ^ 2;
	t142 = sqrt(t139 + t140);
	t143 = 0.1e1 / t142;
	t147 = t100 * t104 - t107 * t70;
	t151 = cos(qJ(1));
	t152 = t5 * t151;
	t153 = t61 * t152;
	t154 = t2 * t151;
	t155 = 0.1e1 / t27;
	t157 = pkin(1) * t9;
	t161 = pkin(1) * pkin(2);
	t163 = t25 * pkin(2) * t157 + t161 * t9 * t21;
	t166 = -t13 * pkin(2);
	t168 = t9 ^ 2;
	t177 = pkin(2) * t157;
	t184 = 0.1e1 / t51;
	t187 = 0.1e1 / (t184 * t45 + 0.1e1);
	t210 = t187 * t39 * pkin(4) / t36 * (t40 * t38 * (-0.2e1 * pkin(1) * t168 * t31 + t163 * t155 * t30 + t34 * t166 - t28) + 0.2e1 * t177 * t49 * t38 * t44) - t187 * t184 * t39 * pkin(4) * t44 * (t40 * t38 * (-t163 * t155 * t10 - 0.2e1 * t161 * t9 * t30 - t27 * t166 - t43) + 0.2e1 * t177 * t49 * t38 * t36);
	t211 = t210 * t4;
	t214 = t210 * t7;
	t217 = t57 * t44 * t211 + t57 * t36 * t214;
	t224 = -t57 * t36 * t211 + t57 * t44 * t214;
	t226 = -t224 * t152 - t217 * t154 + t68 * t154 - t153;
	t230 = t61 * t154;
	t232 = -t217 * t152 + t68 * t152 + t224 * t154 + t230;
	t234 = t100 * t226 + t107 * t232;
	t239 = t100 * t232 - t107 * t226;
	t244 = -t68 * t152 - t230;
	t245 = t112 * t72;
	t247 = 0.1e1 / t83;
	t253 = -(t80 * t79 * t76) + (t80 * t119) - t79 * t78 + t80 * t78;
	t261 = t91 ^ 2;
	t262 = 1 / t261;
	t266 = 0.1e1 / (-t262 * t81 * t78 + 0.1e1);
	t277 = t266 / t91 * t73 * pkin(7) * (-t83 * t245 + t253 * t247 * t75 / 0.2e1) - t266 * t262 * t83 * t73 * pkin(7) * (-(t91 * t245) - 0.2e1 * t73 * t75);
	t278 = t277 * t71;
	t280 = t277 * t97;
	t282 = t98 * t278 - t95 * t280;
	t285 = t68 * t154 - t153;
	t288 = t95 * t278 + t98 * t280;
	t290 = t282 * t244 + t288 * t285;
	t295 = t100 * t244 + t107 * t285;
	t298 = 0.1e1 / t111 / t73 * t110;
	t311 = 0.2e1 * t72 * t73;
	t320 = t127 * t298 / 0.2e1 - t253 * t91 * t72 * t247 * t113 / 0.8e1 + t73 * t126 * t113 / 0.2e1 - t129 * t298 / 0.2e1 + t83 * t311 * t113 / 0.4e1 + t253 * t247 * t72 * t114 * t113 / 0.8e1;
	t334 = t72 * t81;
	t346 = -t116 * t298 / 0.2e1 + t91 * t311 * t113 / 0.4e1 - t73 * t115 * t113 / 0.2e1 + t121 * t76 * t298 / 0.2e1 + t334 * t77 * t113 / 0.4e1 - t334 * t118 / 0.4e1 + t72 * t80 * t77 * t118 / 0.4e1 - (t72 * t119 * t118) / 0.4e1;
	t351 = 0.1e1 / t140;
	t354 = 0.1e1 / (t351 * t139 + 0.1e1);
	t362 = t354 / t134 * (t124 * t320 + t132 * t346) - t354 * t351 * t138 * (-t124 * t346 + t132 * t320);
	t363 = t362 * t295;
	t364 = t143 * t138;
	t368 = -t288 * t244 + t282 * t285;
	t373 = t100 * t285 - t107 * t244;
	t374 = t362 * t373;
	t375 = t143 * t134;
	t386 = -t217 * t3 - t224 * t63 + t68 * t3 - t103;
	t391 = -t217 * t63 + t224 * t3 + t68 * t63 + t62;
	t393 = t100 * t386 + t107 * t391;
	t398 = t100 * t391 - t107 * t386;
	t404 = -t288 * t104 - t282 * t70;
	t410 = t362 * (-t100 * t70 - t107 * t104);
	t414 = -t282 * t104 + t288 * t70;
	t420 = t362 * (-t100 * t104 + t107 * t70);
	t423 = t61 * t2;
	t427 = -t224 * t2 + t217 * t5 - t68 * t5 - t423;
	t431 = t61 * t5;
	t433 = -t217 * t2 + t68 * t2 - t224 * t5 - t431;
	t435 = t100 * t427 + t107 * t433;
	t440 = t100 * t433 - t107 * t427;
	t445 = -t68 * t2 + t431;
	t448 = -t68 * t5 - t423;
	t450 = t282 * t445 + t288 * t448;
	t456 = t362 * (t100 * t445 + t107 * t448);
	t460 = t282 * t448 - t288 * t445;
	t466 = t362 * (t100 * t448 - t107 * t445);
	unknown(1,1) = -t143 * t134 * t109 - t143 * t138 * t147;
	unknown(1,2) = -t143 * t134 * t234 - t143 * t138 * t239;
	unknown(1,3) = 0.0e0;
	unknown(1,4) = 0.0e0;
	unknown(1,5) = 0.0e0;
	unknown(1,6) = -t143 * t134 * t290 - t143 * t138 * t368 + t364 * t363 - t375 * t374;
	unknown(2,1) = -t143 * t134 * t295 - t143 * t138 * t373;
	unknown(2,2) = -t143 * t134 * t393 - t143 * t138 * t398;
	unknown(2,3) = 0.0e0;
	unknown(2,4) = 0.0e0;
	unknown(2,5) = 0.0e0;
	unknown(2,6) = -t143 * t134 * t404 - t143 * t138 * t414 + t364 * t410 - t375 * t420;
	unknown(3,1) = 0.0e0;
	unknown(3,2) = -t143 * t134 * t435 - t143 * t138 * t440;
	unknown(3,3) = 0.0e0;
	unknown(3,4) = 0.0e0;
	unknown(3,5) = 0.0e0;
	unknown(3,6) = -t143 * t134 * t450 - t143 * t138 * t460 + t364 * t456 - t375 * t466;
	unknown(4,1) = t143 * t138 * t109 - t143 * t134 * t147;
	unknown(4,2) = -t143 * t134 * t239 + t143 * t138 * t234;
	unknown(4,3) = 0.0e0;
	unknown(4,4) = 0.0e0;
	unknown(4,5) = 0.0e0;
	unknown(4,6) = -t143 * t134 * t368 + t143 * t138 * t290 + t375 * t363 + t364 * t374;
	unknown(5,1) = -t143 * t134 * t373 + t143 * t138 * t295;
	unknown(5,2) = -t143 * t134 * t398 + t143 * t138 * t393;
	unknown(5,3) = 0.0e0;
	unknown(5,4) = 0.0e0;
	unknown(5,5) = 0.0e0;
	unknown(5,6) = -t143 * t134 * t414 + t143 * t138 * t404 + t364 * t420 + t375 * t410;
	unknown(6,1) = 0.0e0;
	unknown(6,2) = -t143 * t134 * t440 + t143 * t138 * t435;
	unknown(6,3) = 0.0e0;
	unknown(6,4) = 0.0e0;
	unknown(6,5) = 0.0e0;
	unknown(6,6) = -t143 * t134 * t460 + t143 * t138 * t450 + t364 * t466 + t375 * t456;
	unknown(7,1) = t151;
	unknown(7,2) = 0.0e0;
	unknown(7,3) = 0.0e0;
	unknown(7,4) = 0.0e0;
	unknown(7,5) = 0.0e0;
	unknown(7,6) = 0.0e0;
	unknown(8,1) = t1;
	unknown(8,2) = 0.0e0;
	unknown(8,3) = 0.0e0;
	unknown(8,4) = 0.0e0;
	unknown(8,5) = 0.0e0;
	unknown(8,6) = 0.0e0;
	unknown(9,1) = 0.0e0;
	unknown(9,2) = 0.0e0;
	unknown(9,3) = 0.0e0;
	unknown(9,4) = 0.0e0;
	unknown(9,5) = 0.0e0;
	unknown(9,6) = 0.0e0;
	JR_rot = unknown;
elseif link_index == 6
	%% Symbolic Calculation
	% From jacobiR_rot_6_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-04-11 12:36:50
	% EndTime: 2020-04-11 12:36:57
	% DurationCPUTime: 3.14s
	% Computational Cost: add. (163606->185), mult. (209774->407), div. (14820->23), fcn. (117538->23), ass. (0->235)
	unknown=NaN(9,6);
	t1 = sin(qJ(1));
	t2 = sin(qJ(2));
	t3 = t2 * t1;
	t4 = cos(pkin(15));
	t5 = cos(qJ(2));
	t7 = sin(pkin(15));
	t9 = -t7 * t2 + t4 * t5;
	t10 = t9 * pkin(2);
	t13 = t4 * t2 + t7 * t5;
	t16 = 0.2e1 * pkin(2) * pkin(1) * t13;
	t17 = pkin(1) ^ 2;
	t21 = -t16 + t17 + (pkin(2) + pkin(5) + pkin(4)) * (pkin(2) - pkin(5) - pkin(4));
	t25 = -t16 + t17 + (pkin(2) + pkin(5) - pkin(4)) * (pkin(2) - pkin(5) + pkin(4));
	t27 = sqrt(-t25 * t21);
	t28 = t27 * t10;
	t30 = -t13 * pkin(2) + pkin(1);
	t31 = pkin(2) ^ 2;
	t32 = pkin(5) ^ 2;
	t33 = pkin(4) ^ 2;
	t34 = -t16 + t17 + t31 - t32 + t33;
	t36 = t34 * t30 - t28;
	t38 = 0.1e1 / pkin(4);
	t39 = -t16 + t17 + t31;
	t40 = 0.1e1 / t39;
	t43 = t34 * t10;
	t44 = t27 * t30 + t43;
	t45 = t44 ^ 2;
	t46 = 0.1e1 / t33;
	t48 = t39 ^ 2;
	t49 = 0.1e1 / t48;
	t51 = t36 ^ 2;
	t55 = sqrt(t49 * t46 * t45 + t49 * t46 * t51);
	t57 = 0.1e1 / t55 * t40 * t38;
	t61 = -t57 * t36 * t4 + t57 * t44 * t7;
	t62 = t61 * t3;
	t63 = t5 * t1;
	t68 = -t57 * t36 * t7 - t57 * t44 * t4;
	t70 = t68 * t63 + t62;
	t71 = cos(pkin(17));
	t72 = 0.1e1 / pkin(7);
	t73 = qJ(6) + pkin(8);
	t75 = 0.1e1 / t73 * t72;
	t76 = pkin(6) - pkin(7) - pkin(8) - qJ(6);
	t77 = pkin(6) - pkin(7) + pkin(8) + qJ(6);
	t78 = t77 * t76;
	t79 = pkin(6) + pkin(7) - pkin(8) - qJ(6);
	t80 = pkin(6) + pkin(7) + pkin(8) + qJ(6);
	t81 = t80 * t79;
	t83 = sqrt(-t81 * t78);
	t85 = (pkin(6) ^ 2);
	t86 = (pkin(7) ^ 2);
	t87 = (pkin(8) ^ 2);
	t89 = 2 * pkin(8) * qJ(6);
	t90 = qJ(6) ^ 2;
	t91 = t85 - t86 - t87 - t89 - t90;
	t93 = atan2(t83 * t75, t91 * t75);
	t94 = t93 + pkin(16);
	t95 = cos(t94);
	t97 = sin(pkin(17));
	t98 = sin(t94);
	t100 = -t95 * t71 - t98 * t97;
	t103 = t61 * t63;
	t104 = -t68 * t3 + t103;
	t107 = t98 * t71 - t95 * t97;
	t109 = t100 * t70 + t107 * t104;
	t110 = 0.1e1 / pkin(6);
	t111 = t73 ^ 2;
	t112 = 0.1e1 / t111;
	t113 = t112 * t110;
	t114 = t72 * t83;
	t115 = t91 * t114;
	t117 = t85 - t86 + t87 + t89 + t90;
	t118 = t72 * t117;
	t119 = t83 * t118;
	t121 = -t115 * t113 + t119 * t113;
	t122 = cos(pkin(16));
	t124 = t91 * t118;
	t126 = t76 * t113;
	t127 = t79 * t77;
	t129 = t72 * t80 * t127;
	t131 = t124 * t113 - t129 * t126;
	t132 = sin(pkin(16));
	t134 = t122 * t121 / 0.4e1 + t132 * t131 / 0.4e1;
	t136 = t134 ^ 2;
	t139 = -t122 * t131 / 0.4e1 + t132 * t121 / 0.4e1;
	t140 = t139 ^ 2;
	t142 = sqrt(t136 + t140);
	t143 = 0.1e1 / t142;
	t147 = t100 * t104 - t107 * t70;
	t150 = t143 * t134 * t109 - t143 * t139 * t147;
	t151 = cos(qJ(3));
	t153 = cos(qJ(1));
	t154 = sin(qJ(3));
	t155 = t154 * t153;
	t157 = t5 * t153;
	t158 = t61 * t157;
	t159 = t2 * t153;
	t160 = 0.1e1 / t27;
	t162 = pkin(1) * t9;
	t166 = pkin(1) * pkin(2);
	t168 = t25 * pkin(2) * t162 + t166 * t9 * t21;
	t171 = -t13 * pkin(2);
	t173 = t9 ^ 2;
	t182 = pkin(2) * t162;
	t189 = 0.1e1 / t51;
	t192 = 0.1e1 / (t189 * t45 + 0.1e1);
	t215 = t192 * t39 * pkin(4) / t36 * (t40 * t38 * (-0.2e1 * pkin(1) * t173 * t31 + t168 * t160 * t30 + t34 * t171 - t28) + 0.2e1 * t182 * t49 * t38 * t44) - t192 * t189 * t39 * pkin(4) * t44 * (t40 * t38 * (-t168 * t160 * t10 - 0.2e1 * t166 * t9 * t30 - t27 * t171 - t43) + 0.2e1 * t182 * t49 * t38 * t36);
	t216 = t215 * t4;
	t219 = t215 * t7;
	t222 = t57 * t44 * t216 + t57 * t36 * t219;
	t229 = -t57 * t36 * t216 + t57 * t44 * t219;
	t231 = -t229 * t157 - t222 * t159 + t68 * t159 - t158;
	t235 = t61 * t159;
	t237 = -t222 * t157 + t68 * t157 + t229 * t159 + t235;
	t239 = t100 * t231 + t107 * t237;
	t244 = t100 * t237 - t107 * t231;
	t247 = t143 * t134 * t239 - t143 * t139 * t244;
	t250 = -t68 * t157 - t235;
	t253 = t68 * t159 - t158;
	t255 = t100 * t250 + t107 * t253;
	t260 = t100 * t253 - t107 * t250;
	t263 = t143 * t134 * t255 - t143 * t139 * t260;
	t266 = t151 * t1 - t154 * t263;
	t267 = t112 * t72;
	t269 = 0.1e1 / t83;
	t275 = -t80 * t79 * t76 + t80 * t127 - t79 * t78 + t80 * t78;
	t283 = t91 ^ 2;
	t284 = 1 / t283;
	t288 = 0.1e1 / (-t284 * t81 * t78 + 0.1e1);
	t299 = t288 / t91 * t73 * pkin(7) * (-t83 * t267 + t275 * t269 * t75 / 0.2e1) - t288 * t284 * t83 * t73 * pkin(7) * (-t91 * t267 - 0.2e1 * t73 * t75);
	t300 = t299 * t71;
	t302 = t299 * t97;
	t304 = t98 * t300 - t95 * t302;
	t308 = t95 * t300 + t98 * t302;
	t310 = t304 * t250 + t308 * t253;
	t315 = 0.1e1 / t111 / t73 * t110;
	t328 = 0.2e1 * t72 * t73;
	t337 = t115 * t315 / 0.2e1 - t275 * t91 * t72 * t269 * t113 / 0.8e1 + t73 * t114 * t113 / 0.2e1 - t119 * t315 / 0.2e1 + t83 * t328 * t113 / 0.4e1 + t275 * t269 * t72 * t117 * t113 / 0.8e1;
	t351 = t72 * t81;
	t363 = -t124 * t315 / 0.2e1 + t91 * t328 * t113 / 0.4e1 - t73 * t118 * t113 / 0.2e1 + t129 * t76 * t315 / 0.2e1 + t351 * t77 * t113 / 0.4e1 - t351 * t126 / 0.4e1 + t72 * t80 * t77 * t126 / 0.4e1 - t72 * t127 * t126 / 0.4e1;
	t368 = 0.1e1 / t140;
	t371 = 0.1e1 / (t368 * t136 + 0.1e1);
	t379 = t371 / t139 * (t122 * t337 + t132 * t363) - t371 * t368 * t134 * (-t122 * t363 + t132 * t337);
	t380 = t379 * t255;
	t381 = t143 * t139;
	t385 = -t308 * t250 + t304 * t253;
	t388 = t379 * t260;
	t389 = t143 * t134;
	t391 = t143 * t134 * t310 - t143 * t139 * t385 + t381 * t380 + t389 * t388;
	t395 = t154 * t1 + t151 * t263;
	t399 = -t222 * t3 - t229 * t63 + t68 * t3 - t103;
	t404 = -t222 * t63 + t229 * t3 + t68 * t63 + t62;
	t406 = t100 * t399 + t107 * t404;
	t411 = t100 * t404 - t107 * t399;
	t414 = t143 * t134 * t406 - t143 * t139 * t411;
	t418 = -t100 * t70 - t107 * t104;
	t423 = -t100 * t104 + t107 * t70;
	t426 = t143 * t134 * t418 - t143 * t139 * t423;
	t428 = t151 * t153;
	t432 = -t308 * t104 - t304 * t70;
	t435 = t379 * t418;
	t439 = -t304 * t104 + t308 * t70;
	t442 = t379 * t423;
	t444 = t143 * t134 * t432 - t143 * t139 * t439 + t381 * t435 + t389 * t442;
	t446 = t61 * t2;
	t450 = -t229 * t2 + t222 * t5 - t68 * t5 - t446;
	t454 = t61 * t5;
	t456 = -t222 * t2 + t68 * t2 - t229 * t5 - t454;
	t458 = t100 * t450 + t107 * t456;
	t463 = t100 * t456 - t107 * t450;
	t466 = t143 * t134 * t458 - t143 * t139 * t463;
	t469 = -t68 * t2 + t454;
	t472 = -t68 * t5 - t446;
	t474 = t100 * t469 + t107 * t472;
	t479 = t100 * t472 - t107 * t469;
	t482 = t143 * t134 * t474 - t143 * t139 * t479;
	t486 = t304 * t469 + t308 * t472;
	t489 = t379 * t474;
	t493 = t304 * t472 - t308 * t469;
	t496 = t379 * t479;
	t498 = t143 * t134 * t486 - t143 * t139 * t493 + t381 * t489 + t389 * t496;
	unknown(1,1) = t151 * t150 + t155;
	unknown(1,2) = t151 * t247;
	unknown(1,3) = t266;
	unknown(1,4) = 0.0e0;
	unknown(1,5) = 0.0e0;
	unknown(1,6) = t151 * t391;
	unknown(2,1) = t395;
	unknown(2,2) = t151 * t414;
	unknown(2,3) = -t154 * t426 - t428;
	unknown(2,4) = 0.0e0;
	unknown(2,5) = 0.0e0;
	unknown(2,6) = t151 * t444;
	unknown(3,1) = 0.0e0;
	unknown(3,2) = t151 * t466;
	unknown(3,3) = -t154 * t482;
	unknown(3,4) = 0.0e0;
	unknown(3,5) = 0.0e0;
	unknown(3,6) = t151 * t498;
	unknown(4,1) = -t154 * t150 + t428;
	unknown(4,2) = -t154 * t247;
	unknown(4,3) = -t395;
	unknown(4,4) = 0.0e0;
	unknown(4,5) = 0.0e0;
	unknown(4,6) = -t154 * t391;
	unknown(5,1) = t266;
	unknown(5,2) = -t154 * t414;
	unknown(5,3) = -t151 * t426 + t155;
	unknown(5,4) = 0.0e0;
	unknown(5,5) = 0.0e0;
	unknown(5,6) = -t154 * t444;
	unknown(6,1) = 0.0e0;
	unknown(6,2) = -t154 * t466;
	unknown(6,3) = -t151 * t482;
	unknown(6,4) = 0.0e0;
	unknown(6,5) = 0.0e0;
	unknown(6,6) = -t154 * t498;
	unknown(7,1) = -t143 * t139 * t109 - t143 * t134 * t147;
	unknown(7,2) = -t143 * t134 * t244 - t143 * t139 * t239;
	unknown(7,3) = 0.0e0;
	unknown(7,4) = 0.0e0;
	unknown(7,5) = 0.0e0;
	unknown(7,6) = -t143 * t134 * t385 - t143 * t139 * t310 + t389 * t380 - t381 * t388;
	unknown(8,1) = -t143 * t134 * t260 - t143 * t139 * t255;
	unknown(8,2) = -t143 * t134 * t411 - t143 * t139 * t406;
	unknown(8,3) = 0.0e0;
	unknown(8,4) = 0.0e0;
	unknown(8,5) = 0.0e0;
	unknown(8,6) = -t143 * t134 * t439 - t143 * t139 * t432 - t381 * t442 + t389 * t435;
	unknown(9,1) = 0.0e0;
	unknown(9,2) = -t143 * t134 * t463 - t143 * t139 * t458;
	unknown(9,3) = 0.0e0;
	unknown(9,4) = 0.0e0;
	unknown(9,5) = 0.0e0;
	unknown(9,6) = -t143 * t134 * t493 - t143 * t139 * t486 - t381 * t496 + t389 * t489;
	JR_rot = unknown;
elseif link_index == 7
	%% Symbolic Calculation
	% From jacobiR_rot_7_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-04-11 12:37:07
	% EndTime: 2020-04-11 12:37:16
	% DurationCPUTime: 5.06s
	% Computational Cost: add. (293146->210), mult. (376819->461), div. (26900->23), fcn. (211237->25), ass. (0->260)
	unknown=NaN(9,6);
	t1 = sin(qJ(1));
	t2 = sin(qJ(2));
	t3 = t2 * t1;
	t4 = cos(pkin(15));
	t5 = cos(qJ(2));
	t7 = sin(pkin(15));
	t9 = -t7 * t2 + t4 * t5;
	t10 = t9 * pkin(2);
	t13 = t4 * t2 + t7 * t5;
	t16 = 0.2e1 * pkin(2) * pkin(1) * t13;
	t17 = pkin(1) ^ 2;
	t21 = -t16 + t17 + (pkin(2) + pkin(5) + pkin(4)) * (pkin(2) - pkin(5) - pkin(4));
	t25 = -t16 + t17 + (pkin(2) + pkin(5) - pkin(4)) * (pkin(2) - pkin(5) + pkin(4));
	t27 = sqrt(-t25 * t21);
	t28 = t27 * t10;
	t30 = -t13 * pkin(2) + pkin(1);
	t31 = pkin(2) ^ 2;
	t32 = pkin(5) ^ 2;
	t33 = pkin(4) ^ 2;
	t34 = -t16 + t17 + t31 - t32 + t33;
	t36 = t34 * t30 - t28;
	t38 = 0.1e1 / pkin(4);
	t39 = -t16 + t17 + t31;
	t40 = 0.1e1 / t39;
	t43 = t34 * t10;
	t44 = t27 * t30 + t43;
	t45 = t44 ^ 2;
	t46 = 0.1e1 / t33;
	t48 = t39 ^ 2;
	t49 = 0.1e1 / t48;
	t51 = t36 ^ 2;
	t55 = sqrt(t49 * t46 * t45 + t49 * t46 * t51);
	t57 = 0.1e1 / t55 * t40 * t38;
	t61 = -t57 * t36 * t4 + t57 * t44 * t7;
	t62 = t61 * t3;
	t63 = t5 * t1;
	t68 = -t57 * t36 * t7 - t57 * t44 * t4;
	t70 = t68 * t63 + t62;
	t71 = cos(pkin(17));
	t72 = 0.1e1 / pkin(7);
	t73 = qJ(6) + pkin(8);
	t75 = 0.1e1 / t73 * t72;
	t76 = pkin(6) - pkin(7) - pkin(8) - qJ(6);
	t77 = pkin(6) - pkin(7) + pkin(8) + qJ(6);
	t78 = t77 * t76;
	t79 = pkin(6) + pkin(7) - pkin(8) - qJ(6);
	t80 = pkin(6) + pkin(7) + pkin(8) + qJ(6);
	t81 = t80 * t79;
	t83 = sqrt(-t81 * t78);
	t85 = (pkin(6) ^ 2);
	t86 = (pkin(7) ^ 2);
	t87 = (pkin(8) ^ 2);
	t89 = 2 * pkin(8) * qJ(6);
	t90 = qJ(6) ^ 2;
	t91 = t85 - t86 - t87 - t89 - t90;
	t93 = atan2(t83 * t75, t91 * t75);
	t94 = t93 + pkin(16);
	t95 = cos(t94);
	t97 = sin(pkin(17));
	t98 = sin(t94);
	t100 = -t95 * t71 - t98 * t97;
	t103 = t61 * t63;
	t104 = -t68 * t3 + t103;
	t107 = t98 * t71 - t95 * t97;
	t109 = t100 * t70 + t107 * t104;
	t110 = 0.1e1 / pkin(6);
	t111 = t73 ^ 2;
	t112 = 0.1e1 / t111;
	t113 = t112 * t110;
	t114 = t72 * t83;
	t115 = t91 * t114;
	t117 = t85 - t86 + t87 + t89 + t90;
	t118 = t72 * t117;
	t119 = t83 * t118;
	t121 = -t115 * t113 + t119 * t113;
	t122 = cos(pkin(16));
	t124 = t91 * t118;
	t126 = t76 * t113;
	t127 = t79 * t77;
	t129 = t72 * t80 * t127;
	t131 = t124 * t113 - t129 * t126;
	t132 = sin(pkin(16));
	t134 = t122 * t121 / 0.4e1 + t132 * t131 / 0.4e1;
	t136 = t134 ^ 2;
	t139 = -t122 * t131 / 0.4e1 + t132 * t121 / 0.4e1;
	t140 = t139 ^ 2;
	t142 = sqrt(t136 + t140);
	t143 = 0.1e1 / t142;
	t147 = t100 * t104 - t107 * t70;
	t150 = t143 * t134 * t109 - t143 * t139 * t147;
	t151 = cos(qJ(3));
	t153 = cos(qJ(1));
	t154 = sin(qJ(3));
	t155 = t154 * t153;
	t156 = t151 * t150 + t155;
	t157 = sin(qJ(4));
	t163 = -t143 * t139 * t109 - t143 * t134 * t147;
	t164 = cos(qJ(4));
	t167 = t5 * t153;
	t168 = t61 * t167;
	t169 = t2 * t153;
	t170 = 0.1e1 / t27;
	t172 = pkin(1) * t9;
	t176 = pkin(1) * pkin(2);
	t178 = t25 * pkin(2) * t172 + t176 * t9 * t21;
	t181 = -t13 * pkin(2);
	t183 = t9 ^ 2;
	t192 = pkin(2) * t172;
	t199 = 0.1e1 / t51;
	t202 = 0.1e1 / (t199 * t45 + 0.1e1);
	t225 = t202 * t39 * pkin(4) / t36 * (t40 * t38 * (-0.2e1 * pkin(1) * t183 * t31 + t178 * t170 * t30 + t34 * t181 - t28) + 0.2e1 * t192 * t49 * t38 * t44) - t202 * t199 * t39 * pkin(4) * t44 * (t40 * t38 * (-t178 * t170 * t10 - 0.2e1 * t176 * t9 * t30 - t27 * t181 - t43) + 0.2e1 * t192 * t49 * t38 * t36);
	t226 = t225 * t4;
	t229 = t225 * t7;
	t232 = t57 * t44 * t226 + t57 * t36 * t229;
	t239 = -t57 * t36 * t226 + t57 * t44 * t229;
	t241 = -t239 * t167 - t232 * t169 + t68 * t169 - t168;
	t245 = t61 * t169;
	t247 = -t232 * t167 + t68 * t167 + t239 * t169 + t245;
	t249 = t100 * t241 + t107 * t247;
	t254 = t100 * t247 - t107 * t241;
	t257 = t143 * t134 * t249 - t143 * t139 * t254;
	t258 = t151 * t257;
	t264 = -t143 * t134 * t254 - t143 * t139 * t249;
	t268 = -t68 * t167 - t245;
	t271 = t68 * t169 - t168;
	t273 = t100 * t268 + t107 * t271;
	t278 = t100 * t271 - t107 * t268;
	t281 = t143 * t134 * t273 - t143 * t139 * t278;
	t284 = t151 * t1 - t154 * t281;
	t288 = t154 * t1 + t151 * t281;
	t294 = -t143 * t134 * t278 - t143 * t139 * t273;
	t296 = -t157 * t294 + t164 * t288;
	t297 = t112 * t72;
	t299 = 0.1e1 / t83;
	t305 = -t80 * t79 * t76 + t80 * t127 - t79 * t78 + t80 * t78;
	t313 = t91 ^ 2;
	t314 = 1 / t313;
	t318 = 0.1e1 / (-t314 * t81 * t78 + 0.1e1);
	t329 = t318 / t91 * t73 * pkin(7) * (-t83 * t297 + t305 * t299 * t75 / 0.2e1) - t318 * t314 * t83 * t73 * pkin(7) * (-t91 * t297 - 0.2e1 * t73 * t75);
	t330 = t329 * t71;
	t332 = t329 * t97;
	t334 = t98 * t330 - t95 * t332;
	t338 = t95 * t330 + t98 * t332;
	t340 = t334 * t268 + t338 * t271;
	t345 = 0.1e1 / t111 / t73 * t110;
	t358 = 0.2e1 * t72 * t73;
	t367 = t115 * t345 / 0.2e1 - t305 * t91 * t72 * t299 * t113 / 0.8e1 + t73 * t114 * t113 / 0.2e1 - t119 * t345 / 0.2e1 + t83 * t358 * t113 / 0.4e1 + t305 * t299 * t72 * t117 * t113 / 0.8e1;
	t381 = t72 * t81;
	t393 = -t124 * t345 / 0.2e1 + t91 * t358 * t113 / 0.4e1 - t73 * t118 * t113 / 0.2e1 + t129 * t76 * t345 / 0.2e1 + t381 * t77 * t113 / 0.4e1 - t381 * t126 / 0.4e1 + t72 * t80 * t77 * t126 / 0.4e1 - t72 * t127 * t126 / 0.4e1;
	t398 = 0.1e1 / t140;
	t401 = 0.1e1 / (t398 * t136 + 0.1e1);
	t409 = t401 / t139 * (t122 * t367 + t132 * t393) - t401 * t398 * t134 * (-t122 * t393 + t132 * t367);
	t410 = t409 * t273;
	t411 = t143 * t139;
	t415 = -t338 * t268 + t334 * t271;
	t418 = t409 * t278;
	t419 = t143 * t134;
	t421 = t143 * t134 * t340 - t143 * t139 * t415 + t411 * t410 + t419 * t418;
	t422 = t151 * t421;
	t430 = -t143 * t134 * t415 - t143 * t139 * t340 + t419 * t410 - t411 * t418;
	t435 = t157 * t288 + t164 * t294;
	t439 = -t232 * t3 - t239 * t63 + t68 * t3 - t103;
	t444 = -t232 * t63 + t239 * t3 + t68 * t63 + t62;
	t446 = t100 * t439 + t107 * t444;
	t451 = t100 * t444 - t107 * t439;
	t454 = t143 * t134 * t446 - t143 * t139 * t451;
	t455 = t151 * t454;
	t461 = -t143 * t134 * t451 - t143 * t139 * t446;
	t466 = -t100 * t70 - t107 * t104;
	t471 = -t100 * t104 + t107 * t70;
	t474 = t143 * t134 * t466 - t143 * t139 * t471;
	t476 = t151 * t153;
	t477 = -t154 * t474 - t476;
	t480 = t151 * t474 - t155;
	t486 = -t143 * t134 * t471 - t143 * t139 * t466;
	t491 = -t338 * t104 - t334 * t70;
	t494 = t409 * t466;
	t498 = -t334 * t104 + t338 * t70;
	t501 = t409 * t471;
	t503 = t143 * t134 * t491 - t143 * t139 * t498 + t411 * t494 + t419 * t501;
	t504 = t151 * t503;
	t512 = -t143 * t134 * t498 - t143 * t139 * t491 - t411 * t501 + t419 * t494;
	t515 = t61 * t2;
	t519 = -t239 * t2 + t232 * t5 - t68 * t5 - t515;
	t523 = t61 * t5;
	t525 = -t232 * t2 + t68 * t2 - t239 * t5 - t523;
	t527 = t100 * t519 + t107 * t525;
	t532 = t100 * t525 - t107 * t519;
	t535 = t143 * t134 * t527 - t143 * t139 * t532;
	t536 = t151 * t535;
	t542 = -t143 * t134 * t532 - t143 * t139 * t527;
	t546 = -t68 * t2 + t523;
	t549 = -t68 * t5 - t515;
	t551 = t100 * t546 + t107 * t549;
	t556 = t100 * t549 - t107 * t546;
	t559 = t143 * t134 * t551 - t143 * t139 * t556;
	t560 = t154 * t559;
	t562 = t151 * t559;
	t568 = -t143 * t134 * t556 - t143 * t139 * t551;
	t573 = t334 * t546 + t338 * t549;
	t576 = t409 * t551;
	t580 = t334 * t549 - t338 * t546;
	t583 = t409 * t556;
	t585 = t143 * t134 * t573 - t143 * t139 * t580 + t411 * t576 + t419 * t583;
	t586 = t151 * t585;
	t594 = -t143 * t134 * t580 - t143 * t139 * t573 - t411 * t583 + t419 * t576;
	unknown(1,1) = t157 * t156 + t164 * t163;
	unknown(1,2) = t157 * t258 + t164 * t264;
	unknown(1,3) = t157 * t284;
	unknown(1,4) = t296;
	unknown(1,5) = 0.0e0;
	unknown(1,6) = t157 * t422 + t164 * t430;
	unknown(2,1) = t435;
	unknown(2,2) = t157 * t455 + t164 * t461;
	unknown(2,3) = t157 * t477;
	unknown(2,4) = -t157 * t486 + t164 * t480;
	unknown(2,5) = 0.0e0;
	unknown(2,6) = t157 * t504 + t164 * t512;
	unknown(3,1) = 0.0e0;
	unknown(3,2) = t157 * t536 + t164 * t542;
	unknown(3,3) = -t157 * t560;
	unknown(3,4) = -t157 * t568 + t164 * t562;
	unknown(3,5) = 0.0e0;
	unknown(3,6) = t157 * t586 + t164 * t594;
	unknown(4,1) = t164 * t156 - t157 * t163;
	unknown(4,2) = -t157 * t264 + t164 * t258;
	unknown(4,3) = t164 * t284;
	unknown(4,4) = -t435;
	unknown(4,5) = 0.0e0;
	unknown(4,6) = -t157 * t430 + t164 * t422;
	unknown(5,1) = t296;
	unknown(5,2) = -t157 * t461 + t164 * t455;
	unknown(5,3) = t164 * t477;
	unknown(5,4) = -t157 * t480 - t164 * t486;
	unknown(5,5) = 0.0e0;
	unknown(5,6) = -t157 * t512 + t164 * t504;
	unknown(6,1) = 0.0e0;
	unknown(6,2) = -t157 * t542 + t164 * t536;
	unknown(6,3) = -t164 * t560;
	unknown(6,4) = -t157 * t562 - t164 * t568;
	unknown(6,5) = 0.0e0;
	unknown(6,6) = -t157 * t594 + t164 * t586;
	unknown(7,1) = -t154 * t150 + t476;
	unknown(7,2) = -t154 * t257;
	unknown(7,3) = -t288;
	unknown(7,4) = 0.0e0;
	unknown(7,5) = 0.0e0;
	unknown(7,6) = -t154 * t421;
	unknown(8,1) = t284;
	unknown(8,2) = -t154 * t454;
	unknown(8,3) = -t480;
	unknown(8,4) = 0.0e0;
	unknown(8,5) = 0.0e0;
	unknown(8,6) = -t154 * t503;
	unknown(9,1) = 0.0e0;
	unknown(9,2) = -t154 * t535;
	unknown(9,3) = -t562;
	unknown(9,4) = 0.0e0;
	unknown(9,5) = 0.0e0;
	unknown(9,6) = -t154 * t585;
	JR_rot = unknown;
elseif link_index == 8
	%% Symbolic Calculation
	% From jacobiR_rot_8_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-04-11 12:38:01
	% EndTime: 2020-04-11 12:38:33
	% DurationCPUTime: 8.97s
	% Computational Cost: add. (501410->230), mult. (645933->520), div. (46520->23), fcn. (362253->27), ass. (0->284)
	unknown=NaN(9,6);
	t1 = sin(qJ(1));
	t2 = sin(qJ(2));
	t3 = t2 * t1;
	t4 = cos(pkin(15));
	t5 = cos(qJ(2));
	t7 = sin(pkin(15));
	t9 = -t7 * t2 + t4 * t5;
	t10 = t9 * pkin(2);
	t13 = t4 * t2 + t7 * t5;
	t16 = 0.2e1 * pkin(2) * pkin(1) * t13;
	t17 = pkin(1) ^ 2;
	t21 = -t16 + t17 + (pkin(2) + pkin(5) + pkin(4)) * (pkin(2) - pkin(5) - pkin(4));
	t25 = -t16 + t17 + (pkin(2) + pkin(5) - pkin(4)) * (pkin(2) - pkin(5) + pkin(4));
	t27 = sqrt(-t25 * t21);
	t28 = t27 * t10;
	t30 = -t13 * pkin(2) + pkin(1);
	t31 = pkin(2) ^ 2;
	t32 = pkin(5) ^ 2;
	t33 = pkin(4) ^ 2;
	t34 = -t16 + t17 + t31 - t32 + t33;
	t36 = t34 * t30 - t28;
	t38 = 0.1e1 / pkin(4);
	t39 = -t16 + t17 + t31;
	t40 = 0.1e1 / t39;
	t43 = t34 * t10;
	t44 = t27 * t30 + t43;
	t45 = t44 ^ 2;
	t46 = 0.1e1 / t33;
	t48 = t39 ^ 2;
	t49 = 0.1e1 / t48;
	t51 = t36 ^ 2;
	t55 = sqrt(t49 * t46 * t45 + t49 * t46 * t51);
	t57 = 0.1e1 / t55 * t40 * t38;
	t61 = -t57 * t36 * t4 + t57 * t44 * t7;
	t62 = t61 * t3;
	t63 = t5 * t1;
	t68 = -t57 * t36 * t7 - t57 * t44 * t4;
	t70 = t68 * t63 + t62;
	t71 = cos(pkin(17));
	t72 = 0.1e1 / pkin(7);
	t73 = qJ(6) + pkin(8);
	t75 = 0.1e1 / t73 * t72;
	t76 = pkin(6) - pkin(7) - pkin(8) - qJ(6);
	t77 = pkin(6) - pkin(7) + pkin(8) + qJ(6);
	t78 = t77 * t76;
	t79 = pkin(6) + pkin(7) - pkin(8) - qJ(6);
	t80 = pkin(6) + pkin(7) + pkin(8) + qJ(6);
	t81 = t80 * t79;
	t83 = sqrt(-t81 * t78);
	t85 = (pkin(6) ^ 2);
	t86 = (pkin(7) ^ 2);
	t87 = (pkin(8) ^ 2);
	t89 = 2 * pkin(8) * qJ(6);
	t90 = qJ(6) ^ 2;
	t91 = t85 - t86 - t87 - t89 - t90;
	t93 = atan2(t83 * t75, t91 * t75);
	t94 = t93 + pkin(16);
	t95 = cos(t94);
	t97 = sin(pkin(17));
	t98 = sin(t94);
	t100 = -t95 * t71 - t98 * t97;
	t103 = t61 * t63;
	t104 = -t68 * t3 + t103;
	t107 = t98 * t71 - t95 * t97;
	t109 = t100 * t70 + t107 * t104;
	t110 = 0.1e1 / pkin(6);
	t111 = t73 ^ 2;
	t112 = 0.1e1 / t111;
	t113 = t112 * t110;
	t114 = t72 * t83;
	t115 = t91 * t114;
	t117 = t85 - t86 + t87 + t89 + t90;
	t118 = t72 * t117;
	t119 = t83 * t118;
	t121 = -t115 * t113 + t119 * t113;
	t122 = cos(pkin(16));
	t124 = t91 * t118;
	t126 = t76 * t113;
	t127 = t79 * t77;
	t129 = t72 * t80 * t127;
	t131 = t124 * t113 - t129 * t126;
	t132 = sin(pkin(16));
	t134 = t122 * t121 / 0.4e1 + t132 * t131 / 0.4e1;
	t136 = t134 ^ 2;
	t139 = -t122 * t131 / 0.4e1 + t132 * t121 / 0.4e1;
	t140 = t139 ^ 2;
	t142 = sqrt(t136 + t140);
	t143 = 0.1e1 / t142;
	t147 = t100 * t104 - t107 * t70;
	t150 = t143 * t134 * t109 - t143 * t139 * t147;
	t151 = cos(qJ(3));
	t153 = cos(qJ(1));
	t154 = sin(qJ(3));
	t155 = t154 * t153;
	t156 = t151 * t150 + t155;
	t157 = cos(qJ(4));
	t163 = -t143 * t139 * t109 - t143 * t134 * t147;
	t164 = sin(qJ(4));
	t166 = t157 * t156 - t164 * t163;
	t167 = cos(qJ(5));
	t170 = t151 * t153;
	t171 = -t154 * t150 + t170;
	t172 = sin(qJ(5));
	t175 = t5 * t153;
	t176 = t61 * t175;
	t177 = t2 * t153;
	t178 = 0.1e1 / t27;
	t180 = pkin(1) * t9;
	t184 = pkin(1) * pkin(2);
	t186 = t25 * pkin(2) * t180 + t184 * t9 * t21;
	t189 = -t13 * pkin(2);
	t191 = t9 ^ 2;
	t200 = pkin(2) * t180;
	t207 = 0.1e1 / t51;
	t210 = 0.1e1 / (t207 * t45 + 0.1e1);
	t233 = t210 * t39 * pkin(4) / t36 * (t40 * t38 * (-0.2e1 * pkin(1) * t191 * t31 + t186 * t178 * t30 + t34 * t189 - t28) + 0.2e1 * t200 * t49 * t38 * t44) - t210 * t207 * t39 * pkin(4) * t44 * (t40 * t38 * (-t186 * t178 * t10 - 0.2e1 * t184 * t9 * t30 - t27 * t189 - t43) + 0.2e1 * t200 * t49 * t38 * t36);
	t234 = t233 * t4;
	t237 = t233 * t7;
	t240 = t57 * t44 * t234 + t57 * t36 * t237;
	t247 = -t57 * t36 * t234 + t57 * t44 * t237;
	t249 = -t247 * t175 - t240 * t177 + t68 * t177 - t176;
	t253 = t61 * t177;
	t255 = -t240 * t175 + t68 * t175 + t247 * t177 + t253;
	t257 = t100 * t249 + t107 * t255;
	t262 = t100 * t255 - t107 * t249;
	t265 = t143 * t134 * t257 - t143 * t139 * t262;
	t266 = t151 * t265;
	t272 = -t143 * t134 * t262 - t143 * t139 * t257;
	t274 = t157 * t266 - t164 * t272;
	t276 = t154 * t265;
	t280 = -t68 * t175 - t253;
	t283 = t68 * t177 - t176;
	t285 = t100 * t280 + t107 * t283;
	t290 = t100 * t283 - t107 * t280;
	t293 = t143 * t134 * t285 - t143 * t139 * t290;
	t296 = t151 * t1 - t154 * t293;
	t297 = t157 * t296;
	t301 = -t154 * t1 - t151 * t293;
	t309 = -t143 * t134 * t290 - t143 * t139 * t285;
	t311 = -t157 * t309 + t164 * t301;
	t315 = -t157 * t301 - t164 * t309;
	t318 = t167 * t296 - t172 * t315;
	t319 = t112 * t72;
	t321 = 0.1e1 / t83;
	t327 = -t80 * t79 * t76 + t80 * t127 - t79 * t78 + t80 * t78;
	t335 = t91 ^ 2;
	t336 = 1 / t335;
	t340 = 0.1e1 / (-t336 * t81 * t78 + 0.1e1);
	t351 = t340 / t91 * t73 * pkin(7) * (-t83 * t319 + t327 * t321 * t75 / 0.2e1) - t340 * t336 * t83 * t73 * pkin(7) * (-t91 * t319 - 0.2e1 * t73 * t75);
	t352 = t351 * t71;
	t354 = t351 * t97;
	t356 = t98 * t352 - t95 * t354;
	t360 = t95 * t352 + t98 * t354;
	t362 = t356 * t280 + t360 * t283;
	t367 = 0.1e1 / t111 / t73 * t110;
	t380 = 0.2e1 * t72 * t73;
	t389 = t115 * t367 / 0.2e1 - t327 * t91 * t72 * t321 * t113 / 0.8e1 + t73 * t114 * t113 / 0.2e1 - t119 * t367 / 0.2e1 + t83 * t380 * t113 / 0.4e1 + t327 * t321 * t72 * t117 * t113 / 0.8e1;
	t403 = t72 * t81;
	t415 = -t124 * t367 / 0.2e1 + t91 * t380 * t113 / 0.4e1 - t73 * t118 * t113 / 0.2e1 + t129 * t76 * t367 / 0.2e1 + t403 * t77 * t113 / 0.4e1 - t403 * t126 / 0.4e1 + t72 * t80 * t77 * t126 / 0.4e1 - t72 * t127 * t126 / 0.4e1;
	t420 = 0.1e1 / t140;
	t423 = 0.1e1 / (t420 * t136 + 0.1e1);
	t431 = t423 / t139 * (t122 * t389 + t132 * t415) - t423 * t420 * t134 * (-t122 * t415 + t132 * t389);
	t432 = t431 * t285;
	t433 = t143 * t139;
	t437 = -t360 * t280 + t356 * t283;
	t440 = t431 * t290;
	t441 = t143 * t134;
	t443 = t143 * t134 * t362 - t143 * t139 * t437 + t433 * t432 + t441 * t440;
	t444 = t151 * t443;
	t452 = -t143 * t134 * t437 - t143 * t139 * t362 + t441 * t432 - t433 * t440;
	t454 = t157 * t444 - t164 * t452;
	t456 = t154 * t443;
	t461 = t167 * t315 + t172 * t296;
	t465 = -t240 * t3 - t247 * t63 + t68 * t3 - t103;
	t470 = -t240 * t63 + t247 * t3 + t68 * t63 + t62;
	t472 = t100 * t465 + t107 * t470;
	t477 = t100 * t470 - t107 * t465;
	t480 = t143 * t134 * t472 - t143 * t139 * t477;
	t481 = t151 * t480;
	t487 = -t143 * t134 * t477 - t143 * t139 * t472;
	t489 = t157 * t481 - t164 * t487;
	t491 = t154 * t480;
	t496 = -t100 * t70 - t107 * t104;
	t501 = -t100 * t104 + t107 * t70;
	t504 = t143 * t134 * t496 - t143 * t139 * t501;
	t506 = -t154 * t504 - t170;
	t507 = t157 * t506;
	t510 = -t151 * t504 + t155;
	t518 = -t143 * t134 * t501 - t143 * t139 * t496;
	t520 = -t157 * t518 + t164 * t510;
	t524 = -t157 * t510 - t164 * t518;
	t530 = -t360 * t104 - t356 * t70;
	t533 = t431 * t496;
	t537 = -t356 * t104 + t360 * t70;
	t540 = t431 * t501;
	t542 = t143 * t134 * t530 - t143 * t139 * t537 + t433 * t533 + t441 * t540;
	t543 = t151 * t542;
	t551 = -t143 * t134 * t537 - t143 * t139 * t530 - t433 * t540 + t441 * t533;
	t553 = t157 * t543 - t164 * t551;
	t555 = t154 * t542;
	t558 = t61 * t2;
	t562 = -t247 * t2 + t240 * t5 - t68 * t5 - t558;
	t566 = t61 * t5;
	t568 = -t240 * t2 + t68 * t2 - t247 * t5 - t566;
	t570 = t100 * t562 + t107 * t568;
	t575 = t100 * t568 - t107 * t562;
	t578 = t143 * t134 * t570 - t143 * t139 * t575;
	t579 = t151 * t578;
	t585 = -t143 * t134 * t575 - t143 * t139 * t570;
	t587 = t157 * t579 - t164 * t585;
	t589 = t154 * t578;
	t593 = -t68 * t2 + t566;
	t596 = -t68 * t5 - t558;
	t598 = t100 * t593 + t107 * t596;
	t603 = t100 * t596 - t107 * t593;
	t606 = t143 * t134 * t598 - t143 * t139 * t603;
	t607 = t154 * t606;
	t610 = t151 * t606;
	t618 = -t143 * t134 * t603 - t143 * t139 * t598;
	t620 = -t157 * t618 - t164 * t610;
	t624 = t157 * t610 - t164 * t618;
	t630 = t356 * t593 + t360 * t596;
	t633 = t431 * t598;
	t637 = t356 * t596 - t360 * t593;
	t640 = t431 * t603;
	t642 = t143 * t134 * t630 - t143 * t139 * t637 + t433 * t633 + t441 * t640;
	t643 = t151 * t642;
	t651 = -t143 * t134 * t637 - t143 * t139 * t630 - t433 * t640 + t441 * t633;
	t653 = t157 * t643 - t164 * t651;
	t655 = t154 * t642;
	unknown(1,1) = t167 * t166 + t172 * t171;
	unknown(1,2) = t167 * t274 - t172 * t276;
	unknown(1,3) = t167 * t297 + t172 * t301;
	unknown(1,4) = t167 * t311;
	unknown(1,5) = t318;
	unknown(1,6) = t167 * t454 - t172 * t456;
	unknown(2,1) = t461;
	unknown(2,2) = t167 * t489 - t172 * t491;
	unknown(2,3) = t167 * t507 + t172 * t510;
	unknown(2,4) = t167 * t520;
	unknown(2,5) = t167 * t506 - t172 * t524;
	unknown(2,6) = t167 * t553 - t172 * t555;
	unknown(3,1) = 0.0e0;
	unknown(3,2) = t167 * t587 - t172 * t589;
	unknown(3,3) = -t167 * t157 * t607 - t172 * t610;
	unknown(3,4) = t167 * t620;
	unknown(3,5) = -t167 * t607 - t172 * t624;
	unknown(3,6) = t167 * t653 - t172 * t655;
	unknown(4,1) = -t172 * t166 + t167 * t171;
	unknown(4,2) = -t167 * t276 - t172 * t274;
	unknown(4,3) = t167 * t301 - t172 * t297;
	unknown(4,4) = -t172 * t311;
	unknown(4,5) = -t461;
	unknown(4,6) = -t167 * t456 - t172 * t454;
	unknown(5,1) = t318;
	unknown(5,2) = -t167 * t491 - t172 * t489;
	unknown(5,3) = t167 * t510 - t172 * t507;
	unknown(5,4) = -t172 * t520;
	unknown(5,5) = -t167 * t524 - t172 * t506;
	unknown(5,6) = -t167 * t555 - t172 * t553;
	unknown(6,1) = 0.0e0;
	unknown(6,2) = -t167 * t589 - t172 * t587;
	unknown(6,3) = t172 * t157 * t607 - t167 * t610;
	unknown(6,4) = -t172 * t620;
	unknown(6,5) = -t167 * t624 + t172 * t607;
	unknown(6,6) = -t167 * t655 - t172 * t653;
	unknown(7,1) = t164 * t156 + t157 * t163;
	unknown(7,2) = t157 * t272 + t164 * t266;
	unknown(7,3) = t164 * t296;
	unknown(7,4) = t315;
	unknown(7,5) = 0.0e0;
	unknown(7,6) = t157 * t452 + t164 * t444;
	unknown(8,1) = -t311;
	unknown(8,2) = t157 * t487 + t164 * t481;
	unknown(8,3) = t164 * t506;
	unknown(8,4) = t524;
	unknown(8,5) = 0.0e0;
	unknown(8,6) = t157 * t551 + t164 * t543;
	unknown(9,1) = 0.0e0;
	unknown(9,2) = t157 * t585 + t164 * t579;
	unknown(9,3) = -t164 * t607;
	unknown(9,4) = t624;
	unknown(9,5) = 0.0e0;
	unknown(9,6) = t157 * t651 + t164 * t643;
	JR_rot = unknown;
elseif link_index == 9
	%% Symbolic Calculation
	% From jacobiR_rot_9_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-04-11 12:36:16
	% EndTime: 2020-04-11 12:36:22
	% DurationCPUTime: 1.86s
	% Computational Cost: add. (84822->144), mult. (117460->292), div. (5840->18), fcn. (71262->19), ass. (0->190)
	unknown=NaN(9,6);
	t1 = sin(qJ(1));
	t2 = sin(qJ(2));
	t3 = t2 * t1;
	t4 = cos(pkin(15));
	t5 = cos(qJ(2));
	t7 = sin(pkin(15));
	t9 = -t7 * t2 + t4 * t5;
	t10 = t9 * pkin(2);
	t13 = t4 * t2 + t7 * t5;
	t16 = 0.2e1 * pkin(2) * pkin(1) * t13;
	t17 = pkin(1) ^ 2;
	t21 = -t16 + t17 + (pkin(2) + pkin(5) + pkin(4)) * (pkin(2) - pkin(5) - pkin(4));
	t25 = -t16 + t17 + (pkin(2) + pkin(5) - pkin(4)) * (pkin(2) - pkin(5) + pkin(4));
	t27 = sqrt(-t25 * t21);
	t28 = t27 * t10;
	t30 = -t13 * pkin(2) + pkin(1);
	t31 = pkin(2) ^ 2;
	t32 = pkin(5) ^ 2;
	t33 = pkin(4) ^ 2;
	t34 = -t16 + t17 + t31 - t32 + t33;
	t36 = t34 * t30 - t28;
	t38 = 0.1e1 / pkin(4);
	t39 = -t16 + t17 + t31;
	t40 = 0.1e1 / t39;
	t43 = t34 * t10;
	t44 = t27 * t30 + t43;
	t45 = t44 ^ 2;
	t46 = 0.1e1 / t33;
	t48 = t39 ^ 2;
	t49 = 0.1e1 / t48;
	t51 = t36 ^ 2;
	t55 = sqrt(t49 * t46 * t45 + t49 * t46 * t51);
	t57 = 0.1e1 / t55 * t40 * t38;
	t61 = -t57 * t36 * t4 + t57 * t44 * t7;
	t62 = t61 * t3;
	t63 = t5 * t1;
	t68 = -t57 * t36 * t7 - t57 * t44 * t4;
	t70 = t68 * t63 + t62;
	t71 = cos(pkin(17));
	t72 = 0.1e1 / pkin(7);
	t73 = qJ(6) + pkin(8);
	t74 = 0.1e1 / t73;
	t75 = t74 * t72;
	t76 = (pkin(6) - pkin(7) - pkin(8) - qJ(6));
	t77 = pkin(6) - pkin(7) + pkin(8) + qJ(6);
	t78 = t77 * t76;
	t79 = (pkin(6) + pkin(7) - pkin(8) - qJ(6));
	t80 = (pkin(6) + pkin(7) + pkin(8) + qJ(6));
	t81 = t80 * t79;
	t83 = sqrt(-t81 * t78);
	t85 = (pkin(6) ^ 2);
	t86 = (pkin(7) ^ 2);
	t87 = (pkin(8) ^ 2);
	t90 = (qJ(6) ^ 2);
	t91 = -2 * pkin(8) * qJ(6) + t85 - t86 - t87 - t90;
	t93 = atan2(t83 * t75, t91 * t75);
	t94 = t93 + pkin(16);
	t95 = cos(t94);
	t97 = sin(pkin(17));
	t98 = sin(t94);
	t100 = -t95 * t71 - t98 * t97;
	t103 = t61 * t63;
	t104 = -t68 * t3 + t103;
	t107 = t98 * t71 - t95 * t97;
	t110 = t72 * (t100 * t70 + t107 * t104);
	t113 = t73 ^ 2;
	t114 = 1 / t113;
	t115 = t114 / t86;
	t118 = (t80 * t79 * t77);
	t120 = t91 ^ 2;
	t123 = sqrt((-t118 * t76 * t115 + t120 * t115));
	t124 = 0.1e1 / t123;
	t125 = t124 * t91 * t74;
	t130 = t72 * (t100 * t104 - t107 * t70);
	t132 = t124 * t83 * t74;
	t135 = cos(qJ(1));
	t136 = t5 * t135;
	t137 = t61 * t136;
	t138 = t2 * t135;
	t139 = 0.1e1 / t27;
	t141 = pkin(1) * t9;
	t145 = pkin(1) * pkin(2);
	t147 = t25 * pkin(2) * t141 + t145 * t9 * t21;
	t150 = -t13 * pkin(2);
	t152 = t9 ^ 2;
	t161 = pkin(2) * t141;
	t168 = 0.1e1 / t51;
	t171 = 0.1e1 / (t168 * t45 + 0.1e1);
	t194 = t171 * t39 * pkin(4) / t36 * (t40 * t38 * (-0.2e1 * pkin(1) * t152 * t31 + t147 * t139 * t30 + t34 * t150 - t28) + 0.2e1 * t161 * t49 * t38 * t44) - t171 * t168 * t39 * pkin(4) * t44 * (t40 * t38 * (-t147 * t139 * t10 - 0.2e1 * t145 * t9 * t30 - t27 * t150 - t43) + 0.2e1 * t161 * t49 * t38 * t36);
	t195 = t194 * t4;
	t198 = t194 * t7;
	t201 = t57 * t44 * t195 + t57 * t36 * t198;
	t208 = -t57 * t36 * t195 + t57 * t44 * t198;
	t210 = -t208 * t136 - t201 * t138 + t68 * t138 - t137;
	t214 = t61 * t138;
	t216 = -t201 * t136 + t68 * t136 + t208 * t138 + t214;
	t219 = t72 * (t100 * t210 + t107 * t216);
	t224 = t72 * (t100 * t216 - t107 * t210);
	t228 = -t68 * t136 - t214;
	t229 = t114 * t72;
	t244 = 1 / t120;
	t248 = 0.1e1 / (-t244 * t81 * t78 + 0.1e1);
	t259 = t248 / t91 * t73 * pkin(7) * (-t83 * t229 + (-(t80 * t79 * t76) - t79 * t78 + t80 * t78 + t118) / t83 * t75 / 0.2e1) - t248 * t244 * t83 * t73 * pkin(7) * (-t91 * t229 - 0.2e1 * t73 * t75);
	t260 = t259 * t71;
	t262 = t259 * t97;
	t264 = t98 * t260 - t95 * t262;
	t267 = t68 * t138 - t137;
	t270 = t95 * t260 + t98 * t262;
	t273 = t72 * (t264 * t228 + t270 * t267);
	t277 = t100 * t228 + t107 * t267;
	t279 = t72 * t259 * t277;
	t284 = t72 * (-t270 * t228 + t264 * t267);
	t288 = t100 * t267 - t107 * t228;
	t290 = t72 * t259 * t288;
	t293 = t72 * t277;
	t295 = t72 * t288;
	t301 = -t201 * t3 - t208 * t63 + t68 * t3 - t103;
	t306 = -t201 * t63 + t208 * t3 + t68 * t63 + t62;
	t309 = t72 * (t100 * t301 + t107 * t306);
	t314 = t72 * (t100 * t306 - t107 * t301);
	t320 = t72 * (-t270 * t104 - t264 * t70);
	t326 = t72 * t259 * (-t100 * t70 - t107 * t104);
	t331 = t72 * (-t264 * t104 + t270 * t70);
	t337 = t72 * t259 * (-t100 * t104 + t107 * t70);
	t340 = t61 * t2;
	t344 = -t208 * t2 + t201 * t5 - t68 * t5 - t340;
	t348 = t61 * t5;
	t350 = -t201 * t2 + t68 * t2 - t208 * t5 - t348;
	t353 = t72 * (t100 * t344 + t107 * t350);
	t358 = t72 * (t100 * t350 - t107 * t344);
	t362 = -t68 * t2 + t348;
	t365 = -t68 * t5 - t340;
	t368 = t72 * (t264 * t362 + t270 * t365);
	t374 = t72 * t259 * (t100 * t362 + t107 * t365);
	t379 = t72 * (t264 * t365 - t270 * t362);
	t385 = t72 * t259 * (t100 * t365 - t107 * t362);
	unknown(1,1) = t125 * t110 + t132 * t130;
	unknown(1,2) = t125 * t219 + t132 * t224;
	unknown(1,3) = 0.0e0;
	unknown(1,4) = 0.0e0;
	unknown(1,5) = 0.0e0;
	unknown(1,6) = t125 * t273 + t125 * t290 - t132 * t279 + t132 * t284;
	unknown(2,1) = t125 * t293 + t132 * t295;
	unknown(2,2) = t125 * t309 + t132 * t314;
	unknown(2,3) = 0.0e0;
	unknown(2,4) = 0.0e0;
	unknown(2,5) = 0.0e0;
	unknown(2,6) = t125 * t320 + t125 * t337 - t132 * t326 + t132 * t331;
	unknown(3,1) = 0.0e0;
	unknown(3,2) = t125 * t353 + t132 * t358;
	unknown(3,3) = 0.0e0;
	unknown(3,4) = 0.0e0;
	unknown(3,5) = 0.0e0;
	unknown(3,6) = t125 * t368 + t125 * t385 - t132 * t374 + t132 * t379;
	unknown(4,1) = -t132 * t110 + t125 * t130;
	unknown(4,2) = t125 * t224 - t132 * t219;
	unknown(4,3) = 0.0e0;
	unknown(4,4) = 0.0e0;
	unknown(4,5) = 0.0e0;
	unknown(4,6) = -t125 * t279 + t125 * t284 - t132 * t273 - t132 * t290;
	unknown(5,1) = t125 * t295 - t132 * t293;
	unknown(5,2) = t125 * t314 - t132 * t309;
	unknown(5,3) = 0.0e0;
	unknown(5,4) = 0.0e0;
	unknown(5,5) = 0.0e0;
	unknown(5,6) = -t125 * t326 + t125 * t331 - t132 * t320 - t132 * t337;
	unknown(6,1) = 0.0e0;
	unknown(6,2) = t125 * t358 - t132 * t353;
	unknown(6,3) = 0.0e0;
	unknown(6,4) = 0.0e0;
	unknown(6,5) = 0.0e0;
	unknown(6,6) = -t125 * t374 + t125 * t379 - t132 * t368 - t132 * t385;
	unknown(7,1) = t135;
	unknown(7,2) = 0.0e0;
	unknown(7,3) = 0.0e0;
	unknown(7,4) = 0.0e0;
	unknown(7,5) = 0.0e0;
	unknown(7,6) = 0.0e0;
	unknown(8,1) = t1;
	unknown(8,2) = 0.0e0;
	unknown(8,3) = 0.0e0;
	unknown(8,4) = 0.0e0;
	unknown(8,5) = 0.0e0;
	unknown(8,6) = 0.0e0;
	unknown(9,1) = 0.0e0;
	unknown(9,2) = 0.0e0;
	unknown(9,3) = 0.0e0;
	unknown(9,4) = 0.0e0;
	unknown(9,5) = 0.0e0;
	unknown(9,6) = 0.0e0;
	JR_rot = unknown;
elseif link_index == 10
	%% Symbolic Calculation
	% From jacobiR_rot_10_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-04-11 12:36:08
	% EndTime: 2020-04-11 12:36:08
	% DurationCPUTime: 0.16s
	% Computational Cost: add. (2999->43), mult. (4540->95), div. (144->9), fcn. (2886->10), ass. (0->98)
	unknown=NaN(9,6);
	t1 = sin(qJ(1));
	t2 = cos(qJ(2));
	t3 = cos(pkin(15));
	t5 = sin(qJ(2));
	t6 = sin(pkin(15));
	t8 = t3 * t2 - t6 * t5;
	t11 = t6 * t2 + t3 * t5;
	t12 = pkin(1) * t11;
	t14 = 0.2e1 * pkin(2) * t12;
	t15 = pkin(1) ^ 2;
	t19 = -t14 + t15 + (pkin(2) + pkin(5) + pkin(4)) * (pkin(2) - pkin(5) - pkin(4));
	t23 = -t14 + t15 + (pkin(2) + pkin(5) - pkin(4)) * (pkin(2) - pkin(5) + pkin(4));
	t25 = sqrt(-t23 * t19);
	t27 = pkin(1) * t25 * t8;
	t28 = t12 - pkin(2);
	t29 = pkin(2) ^ 2;
	t30 = pkin(5) ^ 2;
	t31 = pkin(4) ^ 2;
	t32 = -t14 + t15 + t29 + t30 - t31;
	t34 = -t32 * t28 - t27;
	t36 = 0.1e1 / pkin(5);
	t37 = -t14 + t15 + t29;
	t38 = 0.1e1 / t37;
	t41 = t8 * pkin(1);
	t42 = t32 * t41;
	t43 = -t25 * t28 + t42;
	t44 = t43 ^ 2;
	t45 = 0.1e1 / t30;
	t47 = t37 ^ 2;
	t48 = 0.1e1 / t47;
	t50 = t34 ^ 2;
	t54 = sqrt(t48 * t45 * t44 + t48 * t45 * t50);
	t56 = 0.1e1 / t54 * t38 * t36;
	t58 = cos(qJ(1));
	t59 = 0.1e1 / t25;
	t64 = pkin(1) * pkin(2);
	t66 = t23 * pkin(2) * t41 + t64 * t8 * t19;
	t71 = t8 ^ 2;
	t80 = pkin(2) * t41;
	t87 = 0.1e1 / t50;
	t90 = 0.1e1 / (t87 * t44 + 0.1e1);
	t115 = t90 * t37 * pkin(5) / t34 * (t38 * t36 * (-t32 * pkin(1) * t11 - 0.2e1 * pkin(2) * t71 * t15 - t66 * t59 * t28 - t27) + 0.2e1 * t80 * t48 * t36 * t43) - t90 * t87 * t37 * pkin(5) * t43 * (t38 * t36 * (-t66 * pkin(1) * t59 * t8 + pkin(1) * t25 * t11 + 0.2e1 * t64 * t8 * t28 - t42) + 0.2e1 * t80 * t48 * t36 * t34);
	t116 = t115 * t58;
	t121 = t115 * t1;
	unknown(1,1) = -t56 * t34 * t1;
	unknown(1,2) = -t56 * t43 * t116;
	unknown(1,3) = 0.0e0;
	unknown(1,4) = 0.0e0;
	unknown(1,5) = 0.0e0;
	unknown(1,6) = 0.0e0;
	unknown(2,1) = t56 * t34 * t58;
	unknown(2,2) = -t56 * t43 * t121;
	unknown(2,3) = 0.0e0;
	unknown(2,4) = 0.0e0;
	unknown(2,5) = 0.0e0;
	unknown(2,6) = 0.0e0;
	unknown(3,1) = 0.0e0;
	unknown(3,2) = t56 * t34 * t115;
	unknown(3,3) = 0.0e0;
	unknown(3,4) = 0.0e0;
	unknown(3,5) = 0.0e0;
	unknown(3,6) = 0.0e0;
	unknown(4,1) = t56 * t43 * t1;
	unknown(4,2) = -t56 * t34 * t116;
	unknown(4,3) = 0.0e0;
	unknown(4,4) = 0.0e0;
	unknown(4,5) = 0.0e0;
	unknown(4,6) = 0.0e0;
	unknown(5,1) = -t56 * t43 * t58;
	unknown(5,2) = -t56 * t34 * t121;
	unknown(5,3) = 0.0e0;
	unknown(5,4) = 0.0e0;
	unknown(5,5) = 0.0e0;
	unknown(5,6) = 0.0e0;
	unknown(6,1) = 0.0e0;
	unknown(6,2) = -t56 * t43 * t115;
	unknown(6,3) = 0.0e0;
	unknown(6,4) = 0.0e0;
	unknown(6,5) = 0.0e0;
	unknown(6,6) = 0.0e0;
	unknown(7,1) = t58;
	unknown(7,2) = 0.0e0;
	unknown(7,3) = 0.0e0;
	unknown(7,4) = 0.0e0;
	unknown(7,5) = 0.0e0;
	unknown(7,6) = 0.0e0;
	unknown(8,1) = t1;
	unknown(8,2) = 0.0e0;
	unknown(8,3) = 0.0e0;
	unknown(8,4) = 0.0e0;
	unknown(8,5) = 0.0e0;
	unknown(8,6) = 0.0e0;
	unknown(9,1) = 0.0e0;
	unknown(9,2) = 0.0e0;
	unknown(9,3) = 0.0e0;
	unknown(9,4) = 0.0e0;
	unknown(9,5) = 0.0e0;
	unknown(9,6) = 0.0e0;
	JR_rot = unknown;
elseif link_index == 11
	%% Symbolic Calculation
	% From jacobiR_rot_11_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-04-11 12:36:29
	% EndTime: 2020-04-11 12:36:39
	% DurationCPUTime: 3.89s
	% Computational Cost: add. (190756->183), mult. (265070->417), div. (13696->24), fcn. (160574->21), ass. (0->233)
	unknown=NaN(9,6);
	t1 = sin(qJ(1));
	t2 = sin(qJ(2));
	t3 = t2 * t1;
	t4 = cos(pkin(15));
	t5 = cos(qJ(2));
	t7 = sin(pkin(15));
	t9 = -t7 * t2 + t4 * t5;
	t10 = t9 * pkin(2);
	t13 = t4 * t2 + t7 * t5;
	t16 = 0.2e1 * pkin(2) * pkin(1) * t13;
	t17 = pkin(1) ^ 2;
	t21 = -t16 + t17 + (pkin(2) + pkin(5) + pkin(4)) * (pkin(2) - pkin(5) - pkin(4));
	t25 = -t16 + t17 + (pkin(2) + pkin(5) - pkin(4)) * (pkin(2) - pkin(5) + pkin(4));
	t26 = t25 * t21;
	t27 = sqrt(-t26);
	t28 = t27 * t10;
	t30 = -t13 * pkin(2) + pkin(1);
	t31 = pkin(2) ^ 2;
	t32 = pkin(5) ^ 2;
	t33 = pkin(4) ^ 2;
	t34 = -t16 + t17 + t31 - t32 + t33;
	t36 = t34 * t30 - t28;
	t38 = 0.1e1 / pkin(4);
	t39 = -t16 + t17 + t31;
	t40 = 0.1e1 / t39;
	t43 = t34 * t10;
	t44 = t27 * t30 + t43;
	t45 = t44 ^ 2;
	t46 = 0.1e1 / t33;
	t48 = t39 ^ 2;
	t49 = 0.1e1 / t48;
	t51 = t36 ^ 2;
	t55 = sqrt(t49 * t46 * t45 + t49 * t46 * t51);
	t57 = 0.1e1 / t55 * t40 * t38;
	t61 = -t57 * t36 * t4 + t57 * t44 * t7;
	t62 = t61 * t3;
	t63 = t5 * t1;
	t68 = -t57 * t36 * t7 - t57 * t44 * t4;
	t70 = t68 * t63 + t62;
	t71 = cos(pkin(17));
	t72 = 0.1e1 / pkin(7);
	t73 = qJ(6) + pkin(8);
	t74 = 0.1e1 / t73;
	t75 = t74 * t72;
	t76 = (pkin(6) - pkin(7) - pkin(8) - qJ(6));
	t77 = pkin(6) - pkin(7) + pkin(8) + qJ(6);
	t78 = t77 * t76;
	t79 = (pkin(6) + pkin(7) - pkin(8) - qJ(6));
	t80 = (pkin(6) + pkin(7) + pkin(8) + qJ(6));
	t81 = t80 * t79;
	t83 = sqrt(-t81 * t78);
	t85 = (pkin(6) ^ 2);
	t86 = (pkin(7) ^ 2);
	t87 = (pkin(8) ^ 2);
	t90 = (qJ(6) ^ 2);
	t91 = -2 * pkin(8) * qJ(6) + t85 - t86 - t87 - t90;
	t93 = atan2(t83 * t75, t91 * t75);
	t94 = t93 + pkin(16);
	t95 = cos(t94);
	t97 = sin(pkin(17));
	t98 = sin(t94);
	t100 = -t95 * t71 - t98 * t97;
	t103 = t61 * t63;
	t104 = -t68 * t3 + t103;
	t107 = t98 * t71 - t95 * t97;
	t110 = t72 * (t100 * t70 + t107 * t104);
	t113 = t73 ^ 2;
	t114 = 1 / t113;
	t115 = t114 / t86;
	t118 = (t80 * t79 * t77);
	t120 = t91 ^ 2;
	t123 = sqrt((-t118 * t76 * t115 + t120 * t115));
	t124 = 0.1e1 / t123;
	t125 = t124 * t91 * t74;
	t130 = t72 * (t100 * t104 - t107 * t70);
	t132 = t124 * t83 * t74;
	t134 = t125 * t110 + t132 * t130;
	t135 = t16 - t17 - t31 + t32 + t33;
	t137 = 0.1e1 / pkin(5);
	t139 = 0.1e1 / t32;
	t142 = t135 ^ 2;
	t146 = sqrt(t46 * t139 * t142 - t26 * t46 * t139);
	t147 = 0.1e1 / t146;
	t148 = t147 * t38 * t137;
	t152 = -t132 * t110 + t125 * t130;
	t155 = t147 * t27 * t38;
	t158 = cos(qJ(1));
	t159 = t5 * t158;
	t160 = t61 * t159;
	t161 = t2 * t158;
	t162 = 0.1e1 / t27;
	t164 = pkin(1) * t9;
	t168 = pkin(1) * pkin(2);
	t170 = t25 * pkin(2) * t164 + t168 * t9 * t21;
	t173 = -t13 * pkin(2);
	t175 = t9 ^ 2;
	t184 = pkin(2) * t164;
	t191 = 0.1e1 / t51;
	t194 = 0.1e1 / (t191 * t45 + 0.1e1);
	t198 = 0.2e1 * t170 * t162;
	t217 = t194 * t39 * pkin(4) / t36 * (t40 * t38 * (-0.2e1 * pkin(1) * t175 * t31 + t170 * t162 * t30 + t34 * t173 - t28) + 0.2e1 * t184 * t49 * t38 * t44) - t194 * t191 * t39 * pkin(4) * t44 * (t40 * t38 * (-t27 * t173 - t198 * t10 / 0.2e1 - t43 - 0.2e1 * t168 * t9 * t30) + 0.2e1 * t184 * t49 * t38 * t36);
	t218 = t217 * t4;
	t221 = t217 * t7;
	t224 = t57 * t44 * t218 + t57 * t36 * t221;
	t231 = -t57 * t36 * t218 + t57 * t44 * t221;
	t233 = -t231 * t159 - t224 * t161 + t68 * t161 - t160;
	t237 = t61 * t161;
	t239 = -t224 * t159 + t68 * t159 + t231 * t161 + t237;
	t242 = t72 * (t100 * t233 + t107 * t239);
	t247 = t72 * (t100 * t239 - t107 * t233);
	t249 = t125 * t242 + t132 * t247;
	t253 = -t68 * t159 - t237;
	t256 = t68 * t161 - t160;
	t258 = t100 * t253 + t107 * t256;
	t259 = t72 * t258;
	t263 = t100 * t256 - t107 * t253;
	t264 = t72 * t263;
	t266 = t125 * t259 + t132 * t264;
	t268 = 0.1e1 / t142;
	t271 = 0.1e1 / (-t268 * t26 + 0.1e1);
	t279 = t271 / t135 * t198 / 0.2e1 - 0.2e1 * t271 * t268 * t27 * t184;
	t280 = t279 * t266;
	t285 = t125 * t247 - t132 * t242;
	t290 = t125 * t264 - t132 * t259;
	t291 = t279 * t290;
	t295 = t114 * t72;
	t310 = 1 / t120;
	t314 = 0.1e1 / (-t310 * t81 * t78 + 0.1e1);
	t325 = t314 / t91 * t73 * pkin(7) * (-t83 * t295 + (-(t80 * t79 * t76) - t79 * t78 + t80 * t78 + t118) / t83 * t75 / 0.2e1) - t314 * t310 * t83 * t73 * pkin(7) * (-t91 * t295 - 0.2e1 * t73 * t75);
	t326 = t325 * t71;
	t328 = t325 * t97;
	t330 = t98 * t326 - t95 * t328;
	t334 = t95 * t326 + t98 * t328;
	t337 = t72 * (t330 * t253 + t334 * t256);
	t340 = t72 * t325 * t258;
	t345 = t72 * (-t334 * t253 + t330 * t256);
	t348 = t72 * t325 * t263;
	t350 = t125 * t337 + t125 * t348 - t132 * t340 + t132 * t345;
	t357 = -t125 * t340 + t125 * t345 - t132 * t337 - t132 * t348;
	t369 = -t224 * t3 - t231 * t63 + t68 * t3 - t103;
	t374 = -t224 * t63 + t231 * t3 + t68 * t63 + t62;
	t377 = t72 * (t100 * t369 + t107 * t374);
	t382 = t72 * (t100 * t374 - t107 * t369);
	t384 = t125 * t377 + t132 * t382;
	t389 = -t100 * t70 - t107 * t104;
	t390 = t72 * t389;
	t394 = -t100 * t104 + t107 * t70;
	t395 = t72 * t394;
	t398 = t279 * (t125 * t390 + t132 * t395);
	t403 = t125 * t382 - t132 * t377;
	t409 = t279 * (t125 * t395 - t132 * t390);
	t416 = t72 * (-t334 * t104 - t330 * t70);
	t419 = t72 * t325 * t389;
	t424 = t72 * (-t330 * t104 + t334 * t70);
	t427 = t72 * t325 * t394;
	t429 = t125 * t416 + t125 * t427 - t132 * t419 + t132 * t424;
	t436 = -t125 * t419 + t125 * t424 - t132 * t416 - t132 * t427;
	t440 = t61 * t2;
	t444 = -t231 * t2 + t224 * t5 - t68 * t5 - t440;
	t448 = t61 * t5;
	t450 = -t224 * t2 + t68 * t2 - t231 * t5 - t448;
	t453 = t72 * (t100 * t444 + t107 * t450);
	t458 = t72 * (t100 * t450 - t107 * t444);
	t460 = t125 * t453 + t132 * t458;
	t464 = -t68 * t2 + t448;
	t467 = -t68 * t5 - t440;
	t469 = t100 * t464 + t107 * t467;
	t470 = t72 * t469;
	t474 = t100 * t467 - t107 * t464;
	t475 = t72 * t474;
	t478 = t279 * (t125 * t470 + t132 * t475);
	t483 = t125 * t458 - t132 * t453;
	t489 = t279 * (t125 * t475 - t132 * t470);
	t496 = t72 * (t330 * t464 + t334 * t467);
	t499 = t72 * t325 * t469;
	t504 = t72 * (t330 * t467 - t334 * t464);
	t507 = t72 * t325 * t474;
	t509 = t125 * t496 + t125 * t507 - t132 * t499 + t132 * t504;
	t516 = -t125 * t499 + t125 * t504 - t132 * t496 - t132 * t507;
	unknown(1,1) = -t148 * t135 * t134 - t155 * t137 * t152;
	unknown(1,2) = -t148 * t135 * t249 - t148 * t135 * t291 + t155 * t137 * t280 - t155 * t137 * t285;
	unknown(1,3) = 0.0e0;
	unknown(1,4) = 0.0e0;
	unknown(1,5) = 0.0e0;
	unknown(1,6) = -t148 * t135 * t350 - t155 * t137 * t357;
	unknown(2,1) = -t148 * t135 * t266 - t155 * t137 * t290;
	unknown(2,2) = -t148 * t135 * t384 - t148 * t135 * t409 + t155 * t137 * t398 - t155 * t137 * t403;
	unknown(2,3) = 0.0e0;
	unknown(2,4) = 0.0e0;
	unknown(2,5) = 0.0e0;
	unknown(2,6) = -t148 * t135 * t429 - t155 * t137 * t436;
	unknown(3,1) = 0.0e0;
	unknown(3,2) = -t148 * t135 * t460 - t148 * t135 * t489 + t155 * t137 * t478 - t155 * t137 * t483;
	unknown(3,3) = 0.0e0;
	unknown(3,4) = 0.0e0;
	unknown(3,5) = 0.0e0;
	unknown(3,6) = -t148 * t135 * t509 - t155 * t137 * t516;
	unknown(4,1) = t155 * t137 * t134 - t148 * t135 * t152;
	unknown(4,2) = t148 * t135 * t280 - t148 * t135 * t285 + t155 * t137 * t249 + t155 * t137 * t291;
	unknown(4,3) = 0.0e0;
	unknown(4,4) = 0.0e0;
	unknown(4,5) = 0.0e0;
	unknown(4,6) = -t148 * t135 * t357 + t155 * t137 * t350;
	unknown(5,1) = -t148 * t135 * t290 + t155 * t137 * t266;
	unknown(5,2) = t148 * t135 * t398 - t148 * t135 * t403 + t155 * t137 * t384 + t155 * t137 * t409;
	unknown(5,3) = 0.0e0;
	unknown(5,4) = 0.0e0;
	unknown(5,5) = 0.0e0;
	unknown(5,6) = -t148 * t135 * t436 + t155 * t137 * t429;
	unknown(6,1) = 0.0e0;
	unknown(6,2) = t148 * t135 * t478 - t148 * t135 * t483 + t155 * t137 * t460 + t155 * t137 * t489;
	unknown(6,3) = 0.0e0;
	unknown(6,4) = 0.0e0;
	unknown(6,5) = 0.0e0;
	unknown(6,6) = -t148 * t135 * t516 + t155 * t137 * t509;
	unknown(7,1) = t158;
	unknown(7,2) = 0.0e0;
	unknown(7,3) = 0.0e0;
	unknown(7,4) = 0.0e0;
	unknown(7,5) = 0.0e0;
	unknown(7,6) = 0.0e0;
	unknown(8,1) = t1;
	unknown(8,2) = 0.0e0;
	unknown(8,3) = 0.0e0;
	unknown(8,4) = 0.0e0;
	unknown(8,5) = 0.0e0;
	unknown(8,6) = 0.0e0;
	unknown(9,1) = 0.0e0;
	unknown(9,2) = 0.0e0;
	unknown(9,3) = 0.0e0;
	unknown(9,4) = 0.0e0;
	unknown(9,5) = 0.0e0;
	unknown(9,6) = 0.0e0;
	JR_rot = unknown;
elseif link_index == 12
	%% Symbolic Calculation
	% From jacobiR_rot_12_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-04-11 12:36:10
	% EndTime: 2020-04-11 12:36:12
	% DurationCPUTime: 0.43s
	% Computational Cost: add. (15560->94), mult. (16772->226), div. (2016->19), fcn. (7282->14), ass. (0->169)
	unknown=NaN(9,6);
	t1 = sin(qJ(1));
	t2 = cos(qJ(2));
	t3 = cos(pkin(15));
	t5 = sin(qJ(2));
	t6 = sin(pkin(15));
	t8 = t3 * t2 - t6 * t5;
	t11 = t6 * t2 + t3 * t5;
	t12 = pkin(1) * t11;
	t14 = 0.2e1 * pkin(2) * t12;
	t15 = pkin(1) ^ 2;
	t19 = -t14 + t15 + (pkin(2) + pkin(5) + pkin(4)) * (pkin(2) - pkin(5) - pkin(4));
	t23 = -t14 + t15 + (pkin(2) + pkin(5) - pkin(4)) * (pkin(2) - pkin(5) + pkin(4));
	t25 = sqrt(-t23 * t19);
	t27 = pkin(1) * t25 * t8;
	t28 = t12 - pkin(2);
	t29 = pkin(2) ^ 2;
	t30 = pkin(5) ^ 2;
	t31 = pkin(4) ^ 2;
	t32 = -t14 + t15 + t29 + t30 - t31;
	t34 = -t32 * t28 - t27;
	t35 = t34 * t1;
	t36 = 0.1e1 / pkin(5);
	t37 = t36 * t35;
	t38 = -t14 + t15 + t29;
	t39 = 0.1e1 / t38;
	t41 = t8 * pkin(1);
	t42 = t32 * t41;
	t43 = -t25 * t28 + t42;
	t44 = t43 ^ 2;
	t45 = 0.1e1 / t30;
	t47 = t38 ^ 2;
	t48 = 0.1e1 / t47;
	t50 = t34 ^ 2;
	t54 = sqrt(t48 * t45 * t44 + t48 * t45 * t50);
	t55 = 0.1e1 / t54;
	t56 = t55 * t39;
	t57 = 0.1e1 / pkin(6);
	t58 = (qJ(6) + pkin(8));
	t59 = t58 ^ 2;
	t61 = (0.1e1 / t59 * t57);
	t62 = (pkin(6) ^ 2);
	t63 = (pkin(7) ^ 2);
	t64 = (pkin(8) ^ 2);
	t66 = 2 * pkin(8) * qJ(6);
	t67 = qJ(6) ^ 2;
	t68 = t62 - t63 + t64 + t66 + t67;
	t69 = 1 / pkin(7);
	t70 = t69 * t68;
	t71 = t62 - t63 - t64 - t66 - t67;
	t72 = t71 * t70;
	t74 = pkin(6) - pkin(7) - pkin(8) - qJ(6);
	t75 = t74 * t61;
	t76 = pkin(6) - pkin(7) + pkin(8) + qJ(6);
	t77 = pkin(6) + pkin(7) - pkin(8) - qJ(6);
	t78 = t77 * t76;
	t79 = pkin(6) + pkin(7) + pkin(8) + qJ(6);
	t81 = t69 * t79 * t78;
	t83 = t72 * t61 - t81 * t75;
	t84 = t76 * t74;
	t85 = t79 * t77;
	t87 = sqrt(-(t85 * t84));
	t88 = t69 * t87;
	t89 = t71 * t88;
	t91 = t87 * t70;
	t93 = -t89 * t61 + t91 * t61;
	t94 = t93 ^ 2 / 0.16e2;
	t95 = (t83 ^ 2) / 0.16e2;
	t97 = sqrt(t94 + t95);
	t98 = 0.1e1 / t97;
	t99 = t98 * t83 / 0.4e1;
	t100 = t99 * t56;
	t102 = t43 * t1;
	t103 = t36 * t102;
	t104 = t98 * t93 / 0.4e1;
	t105 = t104 * t56;
	t108 = cos(qJ(1));
	t109 = 0.1e1 / t25;
	t114 = pkin(1) * pkin(2);
	t116 = t23 * pkin(2) * t41 + t114 * t8 * t19;
	t121 = t8 ^ 2;
	t128 = t36 * t43;
	t130 = pkin(2) * t41;
	t137 = 0.1e1 / t50;
	t140 = 0.1e1 / (t137 * t44 + 0.1e1);
	t155 = t36 * t34;
	t165 = t140 * t38 * pkin(5) / t34 * (t39 * t36 * (-t32 * pkin(1) * t11 - 0.2e1 * pkin(2) * t121 * t15 - t116 * t109 * t28 - t27) + 0.2e1 * t130 * t48 * t128) - t140 * t137 * t38 * pkin(5) * t43 * (t39 * t36 * (-t116 * pkin(1) * t109 * t8 + pkin(1) * t25 * t11 + 0.2e1 * t114 * t8 * t28 - t42) + 0.2e1 * t130 * t48 * t155);
	t166 = t165 * t108;
	t167 = t128 * t166;
	t169 = t155 * t166;
	t172 = t34 * t108;
	t173 = t39 * t36;
	t174 = t173 * t172;
	t177 = 0.1e1 / t59 / t58 * t57;
	t180 = 0.1e1 / t87;
	t188 = -t79 * t77 * t74 - t77 * t84 + t79 * t78 + t79 * t84;
	t197 = 2 * t69 * t58;
	t209 = 0.1e1 / t95;
	t212 = 0.1e1 / (t209 * t94 + 0.1e1);
	t226 = t69 * t85;
	t243 = (0.4e1 * t212 / t83 * (t89 * t177 / 0.2e1 - t188 * t71 * t69 * t180 * t61 / 0.8e1 + t58 * t88 * t61 / 0.2e1 - t91 * t177 / 0.2e1 + t87 * t197 * t61 / 0.4e1 + t188 * t180 * t69 * t68 * t61 / 0.8e1) - t212 * t209 * t93 * (-t72 * t177 / 0.2e1 + (t71 * t197 * t61) / 0.4e1 - (t58 * t70 * t61) / 0.2e1 + t81 * t74 * t177 / 0.2e1 + (t226 * t76 * t61) / 0.4e1 - (t226 * t75) / 0.4e1 + (t69 * t79 * t76 * t75) / 0.4e1 - (t69 * t78 * t75) / 0.4e1) / 0.4e1) * t55;
	t244 = t104 * t243;
	t246 = t43 * t108;
	t247 = t173 * t246;
	t248 = t99 * t243;
	t251 = t36 * t172;
	t253 = t36 * t246;
	t256 = t165 * t1;
	t257 = t128 * t256;
	t259 = t155 * t256;
	t262 = t173 * t35;
	t264 = t173 * t102;
	t268 = t36 * t34 * t165;
	t271 = t36 * t43 * t165;
	t274 = t39 * t128;
	t276 = t39 * t155;
	unknown(1,1) = t100 * t37 - t105 * t103;
	unknown(1,2) = t100 * t167 + t105 * t169;
	unknown(1,3) = 0.0e0;
	unknown(1,4) = 0.0e0;
	unknown(1,5) = 0.0e0;
	unknown(1,6) = t244 * t174 + t248 * t247;
	unknown(2,1) = -t100 * t251 + t105 * t253;
	unknown(2,2) = t100 * t257 + t105 * t259;
	unknown(2,3) = 0.0e0;
	unknown(2,4) = 0.0e0;
	unknown(2,5) = 0.0e0;
	unknown(2,6) = t244 * t262 + t248 * t264;
	unknown(3,1) = 0.0e0;
	unknown(3,2) = -t100 * t268 + t105 * t271;
	unknown(3,3) = 0.0e0;
	unknown(3,4) = 0.0e0;
	unknown(3,5) = 0.0e0;
	unknown(3,6) = t244 * t274 - t248 * t276;
	unknown(4,1) = -t100 * t103 - t105 * t37;
	unknown(4,2) = t100 * t169 - t105 * t167;
	unknown(4,3) = 0.0e0;
	unknown(4,4) = 0.0e0;
	unknown(4,5) = 0.0e0;
	unknown(4,6) = t248 * t174 - t244 * t247;
	unknown(5,1) = t100 * t253 + t105 * t251;
	unknown(5,2) = t100 * t259 - t105 * t257;
	unknown(5,3) = 0.0e0;
	unknown(5,4) = 0.0e0;
	unknown(5,5) = 0.0e0;
	unknown(5,6) = -t244 * t264 + t248 * t262;
	unknown(6,1) = 0.0e0;
	unknown(6,2) = t100 * t271 + t105 * t268;
	unknown(6,3) = 0.0e0;
	unknown(6,4) = 0.0e0;
	unknown(6,5) = 0.0e0;
	unknown(6,6) = t244 * t276 + t248 * t274;
	unknown(7,1) = t108;
	unknown(7,2) = 0.0e0;
	unknown(7,3) = 0.0e0;
	unknown(7,4) = 0.0e0;
	unknown(7,5) = 0.0e0;
	unknown(7,6) = 0.0e0;
	unknown(8,1) = t1;
	unknown(8,2) = 0.0e0;
	unknown(8,3) = 0.0e0;
	unknown(8,4) = 0.0e0;
	unknown(8,5) = 0.0e0;
	unknown(8,6) = 0.0e0;
	unknown(9,1) = 0.0e0;
	unknown(9,2) = 0.0e0;
	unknown(9,3) = 0.0e0;
	unknown(9,4) = 0.0e0;
	unknown(9,5) = 0.0e0;
	unknown(9,6) = 0.0e0;
	JR_rot = unknown;
else
	JR_rot=NaN(9,6);
end