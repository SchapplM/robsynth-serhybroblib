% Rotatorische Teilmatrix der analytischen Jacobi-Matrix für beliebiges Segment von
% hybBKplanar
% Use Code from Maple symbolic Code Generation
% 
% analytische Jacobi-Matrix: Differentieller Zusammenhang zwischen
% Endeffektorposition und verallgemeinerten Koordinaten.
% Zeitableitung der Winkeldarstellung des Endeffektors in Basis-Koordinaten
% 
% Winkeldarstellung: Euler-XYZ-Winkel, rotx(alpha)*roty(beta)*rotz(gamma)
% 
% Input:
% qJ [3x1]
%   Generalized joint coordinates (joint angles)
% link_index [1x1 uint8]
%   Index des Segmentes, auf dem der Punkt C liegt.
%   Wie in hybBKplanar_fkine_fixb_rotmat_mdh_sym_varpar.m (1=Basis).
% pkin [6x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[AB,AE,BC,CD,CF,ED]';
% 
% Output:
% Ja_rot [3x3]
%   Rotatorische Teilmatrix der analytischen Jacobi-Matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2020-04-11 19:03
% Revision: 6ae2d958c5b90587a0d08029b131cb7b66342a68 (2020-04-11)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function Ja_rot = hybBKplanar_jacobia_rot_sym_varpar(qJ, link_index, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(3,1),uint8(0),zeros(6,1)}
assert(isreal(qJ) && all(size(qJ) == [3 1]), ...
  'hybBKplanar_jacobia_rot_sym_varpar: qJ has to be [3x1] (double)');
assert(isa(link_index,'uint8') && all(size(link_index) == [1 1]), ...
	'hybBKplanar_jacobia_rot_sym_varpar: link_index has to be [1x1] uint8');
assert(isreal(pkin) && all(size(pkin) == [6 1]), ...
  'hybBKplanar_jacobia_rot_sym_varpar: pkin has to be [6x1] (double)');
if link_index == 0
	%% Symbolic Calculation
	% From jacobia_rot_0_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-11 18:54:59
	% EndTime: 2020-04-11 18:54:59
	% DurationCPUTime: 0.01s
	% Computational Cost: add. (0->0), mult. (0->0), div. (0->0), fcn. (0->0), ass. (0->1)
	t1 = [0, 0, 0; 0, 0, 0; 0, 0, 0;];
	Ja_rot = t1;
elseif link_index == 1
	%% Symbolic Calculation
	% From jacobia_rot_1_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-11 18:54:59
	% EndTime: 2020-04-11 18:54:59
	% DurationCPUTime: 0.01s
	% Computational Cost: add. (3->0), mult. (6->0), div. (5->0), fcn. (6->0), ass. (0->1)
	t1 = [0, 0, 0; 0, 0, 0; 1, 0, 0;];
	Ja_rot = t1;
elseif link_index == 2
	%% Symbolic Calculation
	% From jacobia_rot_2_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-11 18:55:24
	% EndTime: 2020-04-11 18:55:40
	% DurationCPUTime: 14.69s
	% Computational Cost: add. (137436->627), mult. (413300->977), div. (972->9), fcn. (49696->6), ass. (0->426)
	t757 = (pkin(2) ^ 2);
	t753 = (pkin(3) ^ 2);
	t759 = pkin(1) ^ 2;
	t902 = t753 - t759;
	t655 = t902 * t757;
	t993 = 2 * pkin(1);
	t992 = 2 * pkin(3);
	t991 = 4 * pkin(3);
	t716 = sin(qJ(2));
	t717 = sin(qJ(1));
	t937 = t716 * t717;
	t644 = pkin(2) * t937;
	t807 = pkin(3) * t644;
	t639 = -0.2e1 * t807;
	t719 = cos(qJ(1));
	t962 = pkin(2) * t719;
	t883 = pkin(1) * t962;
	t654 = -0.2e1 * t883;
	t900 = (t757 + t759);
	t825 = t753 + t900;
	t649 = pkin(1) - t962;
	t718 = cos(qJ(2));
	t633 = t649 * t718;
	t854 = pkin(3) * t633;
	t569 = t639 + t654 + t825 + 0.2e1 * t854;
	t990 = -0.2e1 / t569 ^ 2;
	t672 = pkin(3) * t718;
	t621 = t649 + t672;
	t980 = 0.8e1 * t621;
	t989 = 2 * t753;
	t988 = 8 * t757;
	t686 = t719 ^ 2;
	t939 = t686 * t757;
	t882 = pkin(1) * t672;
	t652 = 0.2e1 * t882;
	t666 = -t753 / 0.3e1 + t759;
	t683 = t718 ^ 2;
	t926 = t753 * t683;
	t600 = 0.4e1 / 0.3e1 * t926 + t652 + t666;
	t746 = pkin(6) ^ 2;
	t749 = pkin(4) ^ 2;
	t674 = -t746 - t749;
	t742 = 0.3e1 * t759;
	t658 = t742 + t674;
	t948 = t658 * t753;
	t632 = 0.10e2 * t948;
	t731 = 7 * t753;
	t765 = t757 ^ 2;
	t735 = 5 * t765;
	t751 = t753 ^ 2;
	t764 = pkin(2) * t757;
	t754 = t764 ^ 2;
	t758 = t759 ^ 2;
	t684 = t686 ^ 2;
	t942 = t684 * t765;
	t945 = t674 * t759;
	t676 = t753 + t759;
	t669 = t676 ^ 2;
	t897 = t759 - t746;
	t824 = t753 + t897;
	t946 = t669 * (-t749 + t824);
	t987 = 0.7e1 * t754 + (t731 + t658) * t735 + (t632 + (21 * t751) + 0.9e1 * t758 + 0.6e1 * t945) * t757 + t946 - 0.24e2 * t600 * t942;
	t678 = -(3 * t753) + t759;
	t866 = 0.4e1 * t926;
	t986 = t678 + t866;
	t697 = -t746 / 0.3e1;
	t985 = t697 - t749 / 0.3e1;
	t745 = t746 ^ 2;
	t748 = t749 ^ 2;
	t984 = -t745 / 0.6e1 + t748 / 0.6e1;
	t983 = -0.4e1 * pkin(2);
	t670 = 0.10e2 / 0.3e1 * t753;
	t903 = t751 + t758;
	t743 = 0.2e1 * t759;
	t906 = t743 - t746;
	t925 = t759 * t746;
	t597 = t906 * t753 + t903 - t925 - t984;
	t779 = t597 + t765;
	t571 = (t670 + t906) * t757 + t779;
	t982 = -0.6e1 * t571;
	t874 = 0.2e1 * t939;
	t901 = -t757 + t759;
	t605 = t654 + t874 + t901;
	t981 = -0.2e1 * t605;
	t682 = t718 * t683;
	t979 = -0.8e1 * t682;
	t978 = 0.4e1 * t683;
	t977 = -0.8e1 * t718;
	t976 = 0.8e1 * t718;
	t975 = 4 * t751;
	t732 = 6 * t753;
	t974 = 2 * t757;
	t973 = pkin(1) * pkin(3);
	t972 = -pkin(4) - pkin(6);
	t971 = pkin(6) - pkin(4);
	t711 = t753 / 0.3e1;
	t587 = -0.4e1 / 0.9e1 * t807 + t759 + t757 / 0.3e1 + t711 + t749 / 0.9e1 - t746 / 0.9e1;
	t695 = -t746 / 0.6e1;
	t714 = t757 / 0.2e1;
	t909 = t714 + t759;
	t782 = -t807 + t909;
	t595 = t749 / 0.6e1 + t695 + t782;
	t705 = t749 / 0.3e1;
	t620 = t697 + t705 + t825;
	t896 = 4 * pkin(1);
	t930 = (pkin(1) + pkin(3)) * (pkin(1) - pkin(3));
	t768 = pkin(3) * t753;
	t943 = t682 * t768;
	t542 = t666 * t639 + 0.6e1 * t587 * t926 + t620 * t930 + (t595 * t672 + t943) * t896;
	t794 = -0.4e1 * t807;
	t699 = -0.2e1 / 0.3e1 * t746;
	t704 = 0.2e1 / 0.3e1 * t749;
	t828 = t699 + t704 + t743;
	t827 = t699 + t676;
	t915 = (t704 + t827) * t676 + t765;
	t554 = t620 * t794 + (t732 + t828) * t757 + t915;
	t593 = t639 + t620;
	t656 = t901 * t753;
	t836 = 0.4e1 * t882;
	t543 = t593 * t836 + t656 * t978 + t554;
	t667 = t759 - t757 / 0.3e1;
	t606 = t667 * t639;
	t929 = (pkin(1) + pkin(2)) * (pkin(1) - pkin(2));
	t568 = t620 * t929 + t606;
	t570 = (t670 + t828) * t757 + t915;
	t604 = t652 + t986;
	t737 = -3 * t757;
	t679 = t737 + t759;
	t864 = pkin(1) * t943;
	t815 = 0.8e1 * t864;
	t624 = t679 * t815;
	t642 = t749 + t824;
	t724 = 15 * t751;
	t725 = 15 * t753;
	t739 = 0.3e1 * t758;
	t650 = pkin(1) + t672;
	t685 = t719 * t686;
	t941 = t685 * t764;
	t842 = t650 * t941;
	t801 = -0.8e1 * t842;
	t904 = -t746 + t749;
	t826 = t742 + t904;
	t835 = 0.6e1 * t882;
	t845 = 0.12e2 * t926;
	t852 = pkin(3) * t937;
	t949 = t650 * t719;
	t528 = t604 * t801 + t624 + t568 * t845 + t554 * t835 + t754 + (t725 + t826) * t765 + t669 * t642 + (0.12e2 * t542 * t686 + t732 * t826 + t743 * t904 + t724 + t739) * t757 + 0.6e1 * (-t543 * t949 - t570 * t852) * pkin(2);
	t733 = 3 * t753;
	t661 = t733 + t900;
	t673 = pkin(2) * t717;
	t625 = t661 * t673;
	t959 = pkin(3) * t716;
	t630 = t673 - t959;
	t858 = t753 * t673;
	t797 = t683 * t858;
	t736 = 3 * t757;
	t659 = t736 + t676;
	t947 = t659 * t716;
	t964 = pkin(1) * t718;
	t555 = -0.2e1 * t797 + t625 + (0.2e1 * t630 * t964 - t947) * pkin(3);
	t675 = t989 + t757;
	t935 = t716 * t768;
	t622 = t858 - t935;
	t950 = t622 * t683;
	t556 = t675 * t959 + 0.2e1 * t950 + (-t902 + t652) * t673;
	t586 = -pkin(3) * t947 + t625;
	t657 = pkin(2) * t975 + 0.8e1 * t753 * t764;
	t838 = t768 * t929;
	t588 = t657 * t717 + 0.4e1 * t716 * t838;
	t730 = 5 * t751;
	t898 = t758 + t765;
	t726 = 10 * t753;
	t907 = t726 + t743;
	t924 = t759 * t753;
	t603 = t907 * t757 + t730 + t898 + 0.6e1 * t924;
	t611 = t735 + (t726 + 0.6e1 * t759) * t757 + t669;
	t800 = 0.8e1 * t842;
	t875 = -0.4e1 * t939;
	t532 = t556 * t875 + t588 * t683 + (-0.4e1 * t586 * t964 + (t611 + t800) * t716) * pkin(3) + (0.4e1 * t555 * t949 + (-t603 + t815) * t717) * pkin(2);
	t823 = t757 + t897;
	t789 = t753 + t823;
	t636 = -t749 + t789;
	t602 = t654 + t636;
	t583 = t639 + t602;
	t785 = t683 * t981 - t897;
	t760 = sqrt(0.4e1 * t655 * t686 + 0.4e1 * t636 * t883 - t751 - (t759 + (pkin(2) - t971) * (pkin(2) + t971)) * (t759 + (pkin(2) - t972) * (pkin(2) + t972)) + (t737 + t749 + t785) * t989 + (-t583 * t633 + t602 * t644) * t991);
	t522 = t528 * t621 + t532 * t760;
	t970 = 0.1e1 / t522 / 0.4e1;
	t969 = -0.1e1 / t522 ^ 2 / 0.4e1;
	t968 = 0.4e1 / 0.3e1 * t757;
	t967 = -t760 / 0.4e1;
	t966 = t760 / 0.4e1;
	t965 = pkin(1) * (t644 - pkin(3));
	t963 = pkin(1) * t751;
	t961 = pkin(3) * t649;
	t960 = pkin(3) * t683;
	t913 = t745 / 0.2e1 - t748 / 0.2e1;
	t793 = -0.3e1 * t925 + t739 + t913;
	t700 = -0.3e1 / 0.2e1 * t746;
	t910 = t700 + t742;
	t916 = ((t700 + t743) * t753 - 0.3e1 / 0.2e1 * t925 + t903 + t913) * t676 + t754;
	t541 = t807 * t982 + (t724 + (-0.9e1 * t746 + 0.18e2 * t759) * t753 + t793) * t757 + (t725 + t910) * t765 + t916;
	t958 = t541 * pkin(3);
	t728 = -0.5e1 * t746;
	t729 = 7 * t751;
	t551 = (t731 + t910) * t765 + (t729 + (t728 + 0.10e2 * t759) * t753 + t793) * t757 + t916;
	t957 = t551 * pkin(3);
	t956 = t666 * pkin(3);
	t628 = t759 + t757 / 0.4e1 + t753 / 0.4e1 - t746 / 0.8e1;
	t908 = 0.4e1 / 0.7e1 * t759 - t746 / 0.7e1;
	t548 = -0.32e2 / 0.21e2 * t628 * t807 + t765 / 0.7e1 + (0.16e2 / 0.21e2 * t753 + t908) * t757 + t751 / 0.7e1 + t908 * t753 + t758 - 0.3e1 / 0.7e1 * t925 + t745 / 0.42e2 - t748 / 0.42e2;
	t696 = -t746 / 0.4e1;
	t629 = t696 + t711 + t909;
	t710 = 0.4e1 / 0.3e1 * t753;
	t552 = -0.8e1 / 0.3e1 * t629 * t807 + t765 / 0.3e1 + (t710 + t697) * t757 + t758 - t751 / 0.3e1 + (t968 + 0.2e1 / 0.3e1 * t753 + t699) * t759 + t745 / 0.18e2 - t748 / 0.18e2;
	t712 = t753 / 0.2e1;
	t599 = -0.2e1 / 0.3e1 * t807 + t759 + t712 + t696;
	t741 = 0.4e1 * t759;
	t662 = (t741 + t746) * t753;
	t668 = t759 - 0.2e1 / 0.3e1 * t757;
	t698 = -t746 / 0.2e1;
	t641 = t698 + t825;
	t783 = t641 * t794;
	t849 = 0.16e2 * t943;
	t681 = t683 ^ 2;
	t927 = t751 * t681;
	t870 = 0.8e1 * t927;
	t531 = t668 * t870 + 0.14e2 * t548 * t926 + t666 * t783 - t902 * t765 + (t662 - 0.10e2 / 0.3e1 * t751 + 0.2e1 * t758 - t925) * t757 + t597 * t930 + (0.6e1 * t552 * t672 + t599 * t849) * pkin(1);
	t557 = t783 + (t732 + t906) * t757 + t779;
	t574 = t641 * t929 + t606;
	t533 = t557 * t835 + t574 * t845 + t541 + t624;
	t727 = -0.2e1 * t746;
	t740 = 0.8e1 * t759;
	t811 = t935 * t983;
	t592 = t717 * t811 + t975 + ((4 * t757) + t727 + t740) * t753;
	t598 = t696 - t753 + t782;
	t878 = 0.8e1 * t943;
	t885 = 0.4e1 * t672;
	t544 = t639 * t930 + t592 * t683 + t641 * t678 + (t598 * t885 + t878) * pkin(1);
	t899 = t758 - t751;
	t546 = t667 * t783 - t754 + (-t670 - t897) * t765 + (t662 + t899 + t984) * t757 + t759 * t597;
	t761 = pkin(1) * t759;
	t648 = -(12 * pkin(1) * t768) + t761 * t991;
	t665 = -(8 * t751) + 0.12e2 * t924;
	t804 = pkin(1) * t849;
	t562 = t648 * t718 + t665 * t683 + t804 + t870 + t903 - 0.6e1 * t924;
	t577 = t639 * t929 + t641 * t679;
	t634 = (-0.6e1 * t757 * t759 + t898) * t751;
	t671 = -0.30e2 * t746 + 0.60e2 * t759;
	t905 = t745 - t748;
	t792 = -0.6e1 * t925 + 0.6e1 * t758 + t905;
	t519 = -0.32e2 * t544 * t842 + 0.16e2 * t634 * t681 + 0.24e2 * t546 * t926 + (t727 + t741 + (28 * t753)) * t754 + t642 * t946 + (0.24e2 * t531 * t686 + t671 * t751 + t732 * t792 + t743 * t905 - 0.6e1 * t758 * t746 + 0.4e1 * t761 ^ 2 + (28 * t768 ^ 2)) * t757 + 0.8e1 * (-t533 * t949 - t551 * t852) * pkin(2) + (0.32e2 * t577 * t943 + t958 * t976) * pkin(1) + (0.16e2 * t562 * t684 + t671 * t753 + (70 * t751) + t765 + t792) * t765;
	t912 = t695 - t749 / 0.6e1;
	t831 = t759 + t912;
	t613 = t968 + t712 + t831;
	t791 = t714 + t831;
	t614 = t710 + t791;
	t563 = -t613 * t959 + t614 * t673;
	t616 = t753 + t791;
	t660 = t974 - t902;
	t575 = t616 * t673 - t660 * t959 / 0.2e1;
	t830 = t759 + t985;
	t832 = t746 / 0.3e1 + t705 + t743;
	t788 = -0.8e1 / 0.3e1 * t927 - t655 - 0.5e1 / 0.3e1 * t751 + t832 * t753 + t759 * t830;
	t816 = 0.20e2 / 0.3e1 * t753;
	t833 = 0.2e1 / 0.3e1 * t746 + t704 + t741;
	t834 = 0.4e1 / 0.3e1 * t746 + 0.4e1 / 0.3e1 * t749 - 0.2e1 * t759;
	t844 = -(-t765 + (-t816 + t833) * t757 - (3 * t751) + t834 * t753 + t758) * pkin(3) / 0.2e1;
	t944 = t682 * t751;
	t534 = t563 * t866 + t716 * t844 + t788 * t673 + (t575 * t672 - t716 * t944) * t896;
	t709 = -0.2e1 / 0.3e1 * t749;
	t911 = t699 + t709;
	t564 = t765 + (t907 + t911) * t757 + t730 + 0.2e1 * t948 + t759 * (t759 + t911);
	t576 = t735 + ((5 * t753) + t658) * t974 + (t709 + t827) * t676;
	t545 = t564 * t673 - t576 * t959;
	t790 = t753 + t830;
	t618 = t736 + t790;
	t619 = t661 + t985;
	t565 = -t618 * t959 + t619 * t673;
	t627 = t712 + t757 + t912;
	t893 = 0.2e1 * t673;
	t580 = t627 * t893 + t929 * t959;
	t857 = t768 * t673;
	t868 = -0.4e1 * t926;
	t535 = t580 * t868 + (t565 * t885 + t857 * t979) * pkin(1) + t545;
	t573 = -(3 * t765) + (-t816 + t834) * t757 + t833 * t753 + t899;
	t581 = -0.5e1 / 0.3e1 * t765 + (-t753 + t832) * t757 + t759 * t790;
	t888 = -0.2e1 * t959;
	t547 = t573 * t673 + t581 * t888;
	t829 = t698 - t749 / 0.2e1 + t759;
	t615 = 0.3e1 / 0.2e1 * t757 + t733 + t829;
	t631 = t673 + 0.2e1 * t959;
	t550 = t678 * t673 + 0.4e1 * t950 + (t615 * t716 + t631 * t964) * t992;
	t617 = t736 + 0.3e1 / 0.2e1 * t753 + t829;
	t579 = t617 * t673 + t679 * t959 / 0.2e1;
	t784 = 0.24e2 * t667 * t927 - t754 - ((21 * t753) + t658) * t765 - (t632 + t739 + (35 * t751) + 0.2e1 * t945) * t757 - (t729 + (t728 + t740 - 0.5e1 * t749) * t753 + t759 * (-t749 + t897)) * t676;
	t847 = -0.12e2 * t939;
	t869 = -0.6e1 * t926;
	t523 = t579 * t804 + t550 * t800 + t534 * t847 + t547 * t869 + (-0.6e1 * t545 * t964 + t987 * t716) * pkin(3) + (0.6e1 * t535 * t949 + t717 * t784) * pkin(2);
	t516 = t519 * t621 + t523 * t760;
	t601 = t654 + t749 + t789;
	t855 = t605 * t672;
	t558 = t601 * t649 + 0.2e1 * t855;
	t561 = t601 * t718 + (t978 - 0.2e1) * t961;
	t914 = -t644 + t633;
	t594 = pkin(3) + t914;
	t530 = t558 * t716 + t561 * t673 + t594 * t760;
	t635 = t733 + t749 + t823;
	t584 = t635 + t654 + t794;
	t934 = t718 * t717;
	t596 = pkin(2) * t934 + t649 * t716;
	t952 = t596 * t760;
	t529 = -t584 * t633 + t952 + (t635 * t937 - 0.2e1 * t719 * t965) * pkin(2) + (-t736 - t749 - t753 + t785 + t874) * pkin(3);
	t822 = t529 * t970;
	t780 = t516 * t822 + t530 * t967;
	t566 = 0.1e1 / t569;
	t928 = 0.1e1 / pkin(6) / pkin(4) ^ 2;
	t843 = t566 * t928;
	t514 = t780 * t843;
	t821 = t530 * t970;
	t781 = t516 * t821 + t529 * t966;
	t515 = t781 * t843;
	t933 = t718 * t719;
	t609 = -t933 - t937;
	t936 = t716 * t719;
	t610 = -t934 + t936;
	t511 = t514 * t609 + t515 * t610;
	t509 = t719 * t511;
	t510 = t514 * t610 - t515 * t609;
	t508 = t510 * t717 + t509;
	t506 = 0.1e1 / t508 ^ 2;
	t507 = -t510 * t719 + t511 * t717;
	t955 = t506 * t507;
	t538 = 0.1e1 / t760;
	t664 = pkin(1) * t673;
	t653 = 0.2e1 * t664;
	t931 = t719 * t757;
	t871 = -0.4e1 * t931;
	t799 = t717 * t871;
	t608 = t653 + t799;
	t859 = pkin(2) * t936;
	t806 = pkin(3) * t859;
	t809 = -0.8e1 * t854;
	t887 = -0.4e1 * t672;
	t954 = (t608 * t868 + (t664 - t806) * t809 + 0.4e1 * t602 * t806 + (pkin(2) * t583 * t887 - 0.8e1 * t655 * t719 + (t636 * t983 + t852 * t988) * pkin(1)) * t717) * t538;
	t867 = 0.2e1 * t926;
	t932 = t718 * t753;
	t953 = t538 * ((t583 * t961 + 0.2e1 * t605 * t932) * t716 + (t602 * t672 + t649 * t867) * t673);
	t923 = t768 * t683;
	t863 = pkin(1) * t923;
	t802 = -0.12e2 * t863;
	t951 = t621 * t716 * t802;
	t940 = t685 * t765;
	t938 = t686 * t764;
	t922 = -2 * t973;
	t856 = pkin(2) * t933;
	t808 = pkin(1) * t856;
	t612 = -0.4e1 * t753 * t716 * t808;
	t626 = t808 * t992;
	t817 = 0.32e2 / 0.3e1 * t751;
	t786 = t682 * t817;
	t787 = 0.64e2 / 0.3e1 * t628 * t768;
	t798 = t929 * t963;
	t805 = -0.16e2 * pkin(1) * t629 * t753;
	t810 = -0.4e1 * t641 * t956;
	t818 = t954 / 0.2e1;
	t840 = t667 * t923;
	t841 = t650 * t938;
	t851 = pkin(3) * t930;
	t862 = pkin(1) * t932;
	t873 = 0.3e1 * t939;
	t876 = 0.8e1 * t941;
	t890 = 0.6e1 * t962;
	t513 = t523 * t818 + (-0.32e2 * t612 * t621 + 0.8e1 * t626 * t760) * t842 + (0.24e2 * (0.4e1 * t600 * t940 * t959 + t534 * t931 - t550 * t841) * t760 + (-0.6e1 * t531 * t931 + 0.12e2 * t544 * t841 - 0.8e1 * t562 * t940) * t980) * t717 + ((t519 + (t533 * t980 - 0.6e1 * t535 * t760) * t650) * t717 + (((t614 * t866 + t616 * t836 + t788) * t847 + t617 * t804 + t573 * t869 - 0.6e1 * t564 * t882 + (t986 * t876 + (t619 * t836 - 0.8e1 * t627 * t926 + t564 - 0.8e1 * t864) * t890) * t650 + t784) * t760 + ((-pkin(1) * t786 - t683 * t787 + t718 * t805 + t810) * t873 + t798 * t979 - 0.12e2 * t641 * t840 + t862 * t982 - t957 + (-0.4e1 * (-(2 * t851) - 0.4e1 * t923) * t941 - (pkin(3) * t982 - 0.24e2 * t641 * t862 - 0.24e2 * t840) * t962) * t650) * t716 * t980) * t719) * pkin(2);
	t872 = t717 * t988;
	t884 = -0.2e1 * t956;
	t889 = -0.4e1 * pkin(3) * t620;
	t891 = 0.4e1 * t962;
	t894 = t555 * t983;
	t518 = (t626 * t875 + (t556 * t872 + t657 * t683 + ((-t902 + t867) * t875 - t603 + (t661 * t887 + t878) * pkin(1)) * pkin(2)) * t719 + ((t626 + (t661 - 0.2e1 * t926) * t962) * t891 + (-0.24e2 * t938 * t959 + t894) * t717) * t650) * t760 + t532 * t818 + t528 * t673 + 0.6e1 * t621 * (0.4e1 * t604 * t717 * t841 + (t612 + (-0.8e1 / 0.3e1 * t923 + t884) * t859) * t874 + t542 * t799 + t667 * t719 * t683 * t811 + t620 * t612 - t570 * t806 + (-(-0.8e1 * t862 + t889) * t716 * t939 + t543 * t673) * t650);
	t886 = 0.2e1 * t672;
	t524 = t594 * t818 + t608 * t716 * t886 + ((-t716 * t760 + t561) * t719 + (t718 * t760 + (t649 * t993 + t601) * t716 + (-pkin(3) + 0.2e1 * t960 + t964) * t893) * t717) * pkin(2);
	t895 = -2 * pkin(1) * t757;
	t525 = (t644 + t856) * t760 + t596 * t818 - 0.2e1 * t608 * t960 - (t653 - 0.4e1 * t806) * t633 + t686 * t716 * t895 + t635 * t859 + (pkin(3) * t871 + (-t584 * t718 + 0.2e1 * t965) * pkin(2)) * t717;
	t585 = -pkin(2) * pkin(3) * t610 + t664;
	t778 = t781 * t990;
	t819 = t530 * t969;
	t917 = (t585 * t778 + (t525 * t966 + t529 * t954 / 0.8e1 + t513 * t821 + (t518 * t819 + t524 * t970) * t516) * t566) * t928 - t514;
	t777 = t780 * t990;
	t820 = t529 * t969;
	t918 = (t585 * t777 + (t513 * t822 + t524 * t967 - t530 * t954 / 0.8e1 + (t518 * t820 + t525 * t970) * t516) * t566) * t928 + t515;
	t921 = t609 * t918 + t610 * t917 + t510;
	t651 = pkin(1) * t888;
	t680 = t716 ^ 2;
	t795 = t682 * t838;
	t803 = -0.48e2 * t863;
	t861 = pkin(1) * t926;
	t812 = 0.4e1 * t861;
	t813 = -0.2e1 * t861;
	t814 = -0.4e1 * t861;
	t837 = t716 * t932;
	t839 = t667 * t943;
	t848 = -0.64e2 * t941;
	t850 = -0.32e2 * t944;
	t853 = pkin(3) * t941;
	t860 = t621 * t673;
	t865 = pkin(1) * t927;
	t877 = -0.8e1 * t941;
	t879 = -0.2e1 * t943;
	t880 = -0.4e1 * t943;
	t881 = 0.2e1 * t953;
	t892 = -0.6e1 * t962;
	t512 = ((0.12e2 * t680 * t683 * t963 + t613 * t880 + t660 * t813 + t718 * t844 - 0.4e1 * t865) * t847 + 0.8e1 * t679 * t865 + 0.12e2 * t581 * t943 + 0.6e1 * t576 * t861 + t987 * t672) * t760 + t523 * t881 + (((t615 * t886 + t812 + t880) * t876 + (-t576 * t672 + t618 * t814 - 0.4e1 * t795) * t890) * t760 + t848 * t951) * t650 + (0.24e2 * (-pkin(1) * t681 * t817 - t682 * t787 + t683 * t805 + t718 * t810) * t939 - 0.64e2 * t681 * t798 - 0.96e2 * t641 * t839 - 0.48e2 * t571 * t861 + t957 * t977 + ((-t718 * t851 + t813 + t879) * t848 - 0.48e2 * (-t571 * t672 + t641 * t814 - 0.4e1 * t839) * t962) * t650) * t860 + (-pkin(3) * t519 + (0.2e1 * (-0.2e1 * t665 * t718 - t648 + t803 + t850) * t942 + (-t592 * t718 + t598 * t922) * t801 + 0.4e1 * t544 * t853 + (-0.28e2 * t548 * t932 - 0.6e1 * t552 * t973 + t599 * t803 + t668 * t850) * t873 + pkin(3) * t533 * t962 + t650 * (-t557 * t973 - 0.4e1 * t574 * t932 - 0.4e1 * t679 * t863) * t892 + t634 * t979 + t577 * t802 - 0.6e1 * t546 * t932 - pkin(1) * t958) * t980 + ((-0.8e1 * t563 * t932 + t673 * t786) * t847 - 0.96e2 * t667 * t944 * t673 + t579 * t803 + 0.12e2 * t547 * t932 + (t535 * t892 + t550 * t877 + (-0.24e2 * t651 + 0.64e2 * t837) * t942 + (0.48e2 * t575 * t939 + 0.6e1 * t545) * pkin(1)) * pkin(3) + ((t622 * t977 + t631 * t922) * t876 + (0.24e2 * pkin(1) * t683 * t857 - 0.4e1 * t565 * t973 + 0.8e1 * t580 * t932) * t890) * t650) * t760) * t716;
	t846 = 0.12e2 * t939;
	t517 = (t753 * t680 * t877 + (t672 * t675 + t879) * t875 + 0.4e1 * t795 + t659 * t812 + t611 * t672) * t760 + t532 * t881 + t846 * t951 + ((-0.8e1 / 0.3e1 * t943 + t814 + t718 * t884) * t846 - 0.24e2 * t839 - 0.24e2 * t620 * t861 - 0.6e1 * t570 * t672) * t860 + (0.24e2 * (-t621 * t679 - t673 * t760) * t863 + ((0.16e2 * t622 * t939 - 0.2e1 * t588) * t760 + t621 * (-0.144e3 * t587 * t939 - 0.24e2 * t568) * t753) * t718 + (t719 * t760 * t894 - t528 + t621 * (t543 * t890 + t604 * t876) + ((pkin(2) * t686 * t872 + 0.4e1 * t586) * t760 + t621 * (-0.48e2 * t595 * t939 - 0.6e1 * t554)) * pkin(1)) * pkin(3)) * t716 + ((t853 * t976 + ((-pkin(3) * t659 + 0.4e1 * t644 * t753) * t718 + (-t630 * t959 - t926) * t993) * t891) * t760 + t621 * ((t651 - 0.8e1 * t837) * t877 + ((-0.8e1 * t656 * t716 + t673 * t889) * t718 + (-0.4e1 * t593 * t959 - 0.8e1 * t797) * pkin(1)) * t892)) * t650;
	t526 = -t952 + t594 * t881 + pkin(3) * t680 * t981 + t558 * t718 + (-t601 + t809) * t644;
	t527 = t914 * t760 + t596 * t881 + (t584 * t649 + 0.4e1 * t855) * t716 + (t895 * t933 + (t635 * t718 + 0.4e1 * t649 * t960) * pkin(2)) * t717;
	t589 = t596 * pkin(3);
	t920 = (-t589 * t777 + (t512 * t822 + t526 * t967 - t530 * t953 / 0.2e1 + (t517 * t820 + t527 * t970) * t516) * t566) * t928 - t515;
	t919 = (-t589 * t778 + (t527 * t966 + t529 * t953 / 0.2e1 + t512 * t821 + (t517 * t819 + t526 * t970) * t516) * t566) * t928 + t514;
	t505 = 0.1e1 / t508;
	t500 = 0.1e1 / (t506 * t507 ^ 2 + 0.1e1);
	t498 = -t609 * t917 + t610 * t918;
	t497 = t609 * t920 + t610 * t919;
	t496 = -t609 * t919 + t610 * t920;
	t1 = [0, 0, 0; 0, 0, 0; ((-t498 * t719 + t717 * t921 + t509) * t505 - (t921 * t719 + (t498 - t511) * t717) * t955) * t500, ((-t496 * t719 + t497 * t717) * t505 - (t496 * t717 + t497 * t719) * t955) * t500, 0;];
	Ja_rot = t1;
elseif link_index == 3
	%% Symbolic Calculation
	% From jacobia_rot_3_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-11 18:54:59
	% EndTime: 2020-04-11 18:54:59
	% DurationCPUTime: 0.01s
	% Computational Cost: add. (3->0), mult. (6->0), div. (5->0), fcn. (6->0), ass. (0->1)
	t1 = [0, 0, 0; 0, 0, 0; 0, 1, 0;];
	Ja_rot = t1;
elseif link_index == 4
	%% Symbolic Calculation
	% From jacobia_rot_4_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-11 18:55:00
	% EndTime: 2020-04-11 18:55:01
	% DurationCPUTime: 0.67s
	% Computational Cost: add. (3990->111), mult. (8702->195), div. (108->7), fcn. (2208->6), ass. (0->93)
	t149 = sin(qJ(2));
	t201 = -t149 / 0.2e1;
	t151 = cos(qJ(2));
	t209 = t151 / 0.2e1;
	t155 = (pkin(4) ^ 2);
	t157 = (pkin(3) ^ 2);
	t158 = pkin(2) ^ 2;
	t159 = pkin(1) ^ 2;
	t178 = -pkin(6) ^ 2 + t159;
	t170 = (t158 + t178);
	t137 = 3 * t157 + t155 + t170;
	t152 = cos(qJ(1));
	t196 = pkin(2) * t152;
	t176 = pkin(1) * t196;
	t144 = -0.2e1 * t176;
	t150 = sin(qJ(1));
	t185 = t149 * t150;
	t141 = pkin(2) * t185;
	t167 = pkin(3) * t141;
	t127 = t137 + t144 - 0.4e1 * t167;
	t142 = pkin(1) - t196;
	t136 = t142 * t151;
	t147 = t151 ^ 2;
	t179 = t144 + t159;
	t148 = t152 ^ 2;
	t204 = 0.2e1 * t148;
	t134 = t158 * t204 - t158 + t179;
	t206 = -0.2e1 * t134;
	t164 = t147 * t206 - t178;
	t183 = t150 * t151;
	t131 = pkin(2) * t183 + t142 * t149;
	t165 = t157 + t170;
	t138 = -t155 + t165;
	t133 = t144 + t138;
	t140 = -0.2e1 * t167;
	t126 = t140 + t133;
	t145 = (t157 - t159) * t158;
	t202 = -pkin(4) + pkin(6);
	t203 = -pkin(4) - pkin(6);
	t160 = sqrt(0.4e1 * t145 * t148 + 0.4e1 * t138 * t176 - (t159 + (pkin(2) - t202) * (pkin(2) + t202)) * (t159 + (pkin(2) - t203) * (pkin(2) + t203)) + 0.4e1 * (-t126 * t136 + t133 * t141) * pkin(3) + ((2 * t155) - 0.6e1 * t158 + 0.2e1 * t164 - t157) * t157);
	t189 = t131 * t160;
	t198 = pkin(1) * (t141 - pkin(3));
	t114 = -t127 * t136 + t189 + (t137 * t185 - 0.2e1 * t152 * t198) * pkin(2) + (-t155 - t157 + (t204 - 0.3e1) * t158 + t164) * pkin(3);
	t132 = t144 + t155 + t165;
	t188 = t134 * t151;
	t172 = pkin(3) * t188;
	t121 = t132 * t142 + 0.2e1 * t172;
	t195 = pkin(3) * t142;
	t122 = t132 * t151 + (0.4e1 * t147 - 0.2e1) * t195;
	t180 = -t141 + t136;
	t130 = pkin(3) + t180;
	t197 = pkin(2) * t150;
	t115 = t121 * t149 + t122 * t197 + t130 * t160;
	t208 = t114 * t209 + t115 * t201;
	t207 = -0.4e1 * pkin(2);
	t205 = 0.2e1 * t142;
	t200 = t149 / 0.2e1;
	t199 = -t151 / 0.2e1;
	t194 = pkin(3) * t147;
	t193 = pkin(3) * t151;
	t171 = pkin(3) * t136;
	t125 = t140 + t157 + t158 + 0.2e1 * t171 + t179;
	t123 = 0.1e1 / t125;
	t156 = 0.1e1 / pkin(4);
	t190 = t123 * t156;
	t108 = t208 * t190;
	t106 = 0.1e1 / t108 ^ 2;
	t163 = t114 * t200 + t115 * t209;
	t107 = t163 * t190;
	t103 = 0.1e1 / (t106 * t107 ^ 2 + 0.1e1);
	t192 = t103 * t156;
	t191 = t106 * t107;
	t187 = t147 * t157;
	t184 = t149 * t152;
	t181 = t151 * t152;
	t177 = -0.2e1 * pkin(1) * t158;
	t118 = 0.1e1 / t160;
	t175 = 0.2e1 * t118 * ((t126 * t195 + 0.2e1 * t157 * t188) * t149 + (t133 * t193 + t187 * t205) * t197);
	t174 = -0.4e1 * t152 * t158;
	t173 = pkin(2) * t184;
	t146 = pkin(1) * t197;
	t143 = 0.2e1 * t146;
	t135 = t150 * t174 + t143;
	t166 = pkin(3) * t173;
	t168 = -0.8e1 * t171;
	t169 = (-0.4e1 * t135 * t187 + (t146 - t166) * t168 + 0.4e1 * t133 * t166 + (t126 * t193 * t207 - 0.8e1 * t145 * t152 + (0.8e1 * pkin(3) * t158 * t185 + t138 * t207) * pkin(1)) * t150) * t118 / 0.2e1;
	t105 = 0.1e1 / t108;
	t162 = 0.2e1 / t125 ^ 2 * (-t163 * t105 + t208 * t191);
	t111 = t180 * t160 + t131 * t175 + (t142 * t127 + 0.4e1 * t172) * t149 + (t177 * t181 + (t137 * t151 + 0.4e1 * t142 * t194) * pkin(2)) * t150;
	t110 = -t189 + t130 * t175 + t121 * t151 + ((-t132 + t168) * t197 + pkin(3) * t149 * t206) * t149;
	t109 = (pkin(2) * t181 + t141) * t160 + t131 * t169 - 0.2e1 * t135 * t194 - (t143 - 0.4e1 * t166) * t136 + t148 * t149 * t177 + t137 * t173 + (pkin(3) * t174 + (-t127 * t151 + 0.2e1 * t198) * pkin(2)) * t150;
	t104 = t130 * t169 + 0.2e1 * t135 * t149 * t193 + ((-t149 * t160 + t122) * t152 + (t151 * t160 + (pkin(1) * t205 + t132) * t149 + 0.2e1 * (pkin(1) * t151 - pkin(3) + 0.2e1 * t194) * t197) * t150) * pkin(2);
	t1 = [0, 0, 0; 0, 0, 0; ((-(t104 * t199 + t109 * t201) * t105 + (t104 * t200 + t109 * t199) * t191) * t123 + (t146 + (t183 - t184) * pkin(3) * pkin(2)) * t162) * t192, t108 * t105 * t103 + (-t131 * pkin(3) * t162 + (-(t110 * t199 + t111 * t201) * t105 + (t110 * t200 + t111 * t199 + t163) * t191) * t123) * t192, 0;];
	Ja_rot = t1;
elseif link_index == 5
	%% Symbolic Calculation
	% From jacobia_rot_5_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-11 18:55:01
	% EndTime: 2020-04-11 18:55:03
	% DurationCPUTime: 0.93s
	% Computational Cost: add. (10018->120), mult. (21704->218), div. (265->7), fcn. (5530->8), ass. (0->106)
	t253 = -4 * pkin(2);
	t190 = sin(qJ(2));
	t191 = sin(qJ(1));
	t230 = t190 * t191;
	t181 = pkin(2) * t230;
	t210 = pkin(3) * t181;
	t180 = -0.2e1 * t210;
	t199 = pkin(3) ^ 2;
	t200 = pkin(2) ^ 2;
	t194 = cos(qJ(1));
	t240 = pkin(2) * t194;
	t182 = pkin(1) - t240;
	t193 = cos(qJ(2));
	t176 = t182 * t193;
	t216 = pkin(3) * t176;
	t221 = pkin(1) * t240;
	t184 = -0.2e1 * t221;
	t201 = pkin(1) ^ 2;
	t224 = t184 + t201;
	t165 = t180 + t199 + t200 + 0.2e1 * t216 + t224;
	t252 = 0.2e1 / t165 ^ 2;
	t188 = t194 ^ 2;
	t249 = 0.2e1 * t188;
	t174 = t200 * t249 - t200 + t224;
	t251 = -0.2e1 * t174;
	t250 = 0.2e1 * t182;
	t248 = (-pkin(4) - pkin(6));
	t247 = (-pkin(4) + pkin(6));
	t197 = pkin(4) ^ 2;
	t223 = -pkin(6) ^ 2 + t201;
	t215 = t200 + t223;
	t208 = t199 + t215;
	t172 = t184 + t197 + t208;
	t233 = t174 * t193;
	t217 = pkin(3) * t233;
	t161 = t182 * t172 + 0.2e1 * t217;
	t187 = t193 ^ 2;
	t239 = pkin(3) * t182;
	t162 = t172 * t193 + (0.4e1 * t187 - 0.2e1) * t239;
	t225 = -t181 + t176;
	t170 = pkin(3) + t225;
	t178 = -t197 + t208;
	t173 = t184 + t178;
	t166 = t180 + t173;
	t185 = (t199 - t201) * t200;
	t207 = t187 * t251 - t223;
	t202 = sqrt(0.4e1 * t185 * t188 + 0.4e1 * t178 * t221 - (t201 + ((pkin(2) - t247) * (pkin(2) + t247))) * (t201 + ((pkin(2) - t248) * (pkin(2) + t248))) + 0.4e1 * (-t166 * t176 + t173 * t181) * pkin(3) + (0.2e1 * t197 - (6 * t200) + 0.2e1 * t207 - t199) * t199);
	t241 = pkin(2) * t191;
	t155 = t161 * t190 + t162 * t241 + t170 * t202;
	t246 = -t155 / 0.2e1;
	t245 = t190 / 0.2e1;
	t244 = -t193 / 0.2e1;
	t243 = t193 / 0.2e1;
	t242 = pkin(1) * (t181 - pkin(3));
	t238 = pkin(3) * t187;
	t237 = pkin(3) * t193;
	t177 = 0.3e1 * t199 + t197 + t215;
	t167 = t177 + t184 - 0.4e1 * t210;
	t228 = t191 * t193;
	t171 = pkin(2) * t228 + t190 * t182;
	t234 = t171 * t202;
	t154 = -t167 * t176 + t234 + (t177 * t230 - 0.2e1 * t194 * t242) * pkin(2) + (-t197 - t199 + (t249 - 0.3e1) * t200 + t207) * pkin(3);
	t206 = t154 * t243 + t190 * t246;
	t163 = 0.1e1 / t165;
	t198 = 0.1e1 / pkin(4);
	t235 = t163 * t198;
	t147 = t206 * t235;
	t227 = t193 * t155;
	t231 = t190 * t154;
	t148 = (t227 + t231) * t235 / 0.2e1;
	t189 = sin(qJ(3));
	t192 = cos(qJ(3));
	t145 = -t147 * t192 + t148 * t189;
	t143 = 0.1e1 / t145 ^ 2;
	t144 = -t147 * t189 - t148 * t192;
	t236 = t143 * t144;
	t232 = t187 * t199;
	t229 = t190 * t194;
	t226 = t193 * t194;
	t222 = -0.2e1 * pkin(1) * t200;
	t158 = 0.1e1 / t202;
	t220 = 0.2e1 * t158 * ((t166 * t239 + 0.2e1 * t199 * t233) * t190 + (t173 * t237 + t232 * t250) * t241);
	t219 = -0.4e1 * t194 * t200;
	t218 = pkin(2) * t229;
	t186 = pkin(1) * t241;
	t183 = 0.2e1 * t186;
	t175 = t191 * t219 + t183;
	t209 = pkin(3) * t218;
	t211 = -0.8e1 * t216;
	t214 = (-0.4e1 * t175 * t232 + (t186 - t209) * t211 + 0.4e1 * t173 * t209 + (t166 * t237 * t253 - 0.8e1 * t185 * t194 + (0.8e1 * pkin(3) * t200 * t230 + t178 * t253) * pkin(1)) * t191) * t158 / 0.2e1;
	t212 = t144 ^ 2 * t143 + 0.1e1;
	t205 = t206 * t252;
	t204 = (-t227 / 0.2e1 - t231 / 0.2e1) * t252;
	t169 = t171 * pkin(3);
	t168 = t186 + (t228 - t229) * pkin(3) * pkin(2);
	t151 = t225 * t202 + t171 * t220 + (t182 * t167 + 0.4e1 * t217) * t190 + (t222 * t226 + (t177 * t193 + 0.4e1 * t182 * t238) * pkin(2)) * t191;
	t150 = -t234 + t170 * t220 + t161 * t193 + ((-t172 + t211) * t241 + pkin(3) * t190 * t251) * t190;
	t149 = (pkin(2) * t226 + t181) * t202 + t171 * t214 - 0.2e1 * t175 * t238 - (t183 - 0.4e1 * t209) * t176 + t188 * t190 * t222 + t177 * t218 + (pkin(3) * t219 + (-t167 * t193 + 0.2e1 * t242) * pkin(2)) * t191;
	t146 = t170 * t214 + 0.2e1 * t175 * t190 * t237 + ((-t190 * t202 + t162) * t194 + (t193 * t202 + (pkin(1) * t250 + t172) * t190 + 0.2e1 * (pkin(1) * t193 - pkin(3) + 0.2e1 * t238) * t241) * t191) * pkin(2);
	t142 = 0.1e1 / t145;
	t141 = ((t146 * t243 + t149 * t245) * t163 + t168 * t204) * t198;
	t140 = ((t146 * t245 + t149 * t244) * t163 + t168 * t205) * t198;
	t139 = (-t169 * t204 + ((t150 / 0.2e1 + t154 / 0.2e1) * t193 + (t246 + t151 / 0.2e1) * t190) * t163) * t198;
	t138 = ((t150 * t245 + t151 * t244) * t163 - t169 * t205) * t198 + t148;
	t137 = 0.1e1 / t212;
	t1 = [0, 0, 0; 0, 0, 0; ((t140 * t189 - t141 * t192) * t142 - (t140 * t192 + t141 * t189) * t236) * t137, ((t138 * t189 - t139 * t192) * t142 - (t138 * t192 + t139 * t189) * t236) * t137, t212 * t137;];
	Ja_rot = t1;
elseif link_index == 6
	%% Symbolic Calculation
	% From jacobia_rot_6_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-11 18:55:13
	% EndTime: 2020-04-11 18:55:25
	% DurationCPUTime: 8.34s
	% Computational Cost: add. (31588->617), mult. (90458->974), div. (374->10), fcn. (12606->6), ass. (0->427)
	t771 = (pkin(2) ^ 2);
	t767 = (pkin(3) ^ 2);
	t773 = pkin(1) ^ 2;
	t919 = t767 - t773;
	t669 = t919 * t771;
	t1013 = 2 * pkin(1);
	t1012 = 2 * pkin(3);
	t1011 = 4 * pkin(3);
	t733 = cos(qJ(1));
	t979 = pkin(2) * t733;
	t663 = pkin(1) - t979;
	t732 = cos(qJ(2));
	t686 = pkin(3) * t732;
	t638 = t663 + t686;
	t998 = 0.8e1 * t638;
	t1010 = 2 * t767;
	t1009 = 8 * t771;
	t725 = t767 / 0.3e1;
	t760 = pkin(6) ^ 2;
	t763 = pkin(4) ^ 2;
	t730 = sin(qJ(2));
	t731 = sin(qJ(1));
	t950 = t730 * t731;
	t661 = pkin(2) * t950;
	t822 = pkin(3) * t661;
	t606 = -0.4e1 / 0.9e1 * t822 + t773 + t771 / 0.3e1 + t725 + t763 / 0.9e1 - t760 / 0.9e1;
	t709 = -t760 / 0.6e1;
	t728 = t771 / 0.2e1;
	t926 = t728 + t773;
	t795 = -t822 + t926;
	t614 = t763 / 0.6e1 + t709 + t795;
	t711 = -t760 / 0.3e1;
	t719 = t763 / 0.3e1;
	t917 = t771 + t773;
	t842 = t767 + t917;
	t637 = t711 + t719 + t842;
	t656 = -0.2e1 * t822;
	t680 = -t767 / 0.3e1 + t773;
	t913 = 4 * pkin(1);
	t697 = t732 ^ 2;
	t938 = t767 * t697;
	t942 = (pkin(1) + pkin(3)) * (pkin(1) - pkin(3));
	t696 = t732 * t697;
	t782 = pkin(3) * t767;
	t957 = t696 * t782;
	t561 = t680 * t656 + 0.6e1 * t606 * t938 + t637 * t942 + (t614 * t686 + t957) * t913;
	t746 = 6 * t767;
	t809 = -0.4e1 * t822;
	t713 = -0.2e1 / 0.3e1 * t760;
	t718 = 0.2e1 / 0.3e1 * t763;
	t757 = 0.2e1 * t773;
	t845 = t713 + t718 + t757;
	t690 = t767 + t773;
	t779 = t771 ^ 2;
	t844 = t713 + t690;
	t932 = (t718 + t844) * t690 + t779;
	t573 = t637 * t809 + (t746 + t845) * t771 + t932;
	t612 = t656 + t637;
	t918 = -t771 + t773;
	t670 = t918 * t767;
	t899 = pkin(1) * t686;
	t853 = 0.4e1 * t899;
	t996 = 0.4e1 * t697;
	t562 = t612 * t853 + t670 * t996 + t573;
	t681 = t773 - t771 / 0.3e1;
	t625 = t681 * t656;
	t941 = (pkin(1) + pkin(2)) * (pkin(1) - pkin(2));
	t587 = t637 * t941 + t625;
	t684 = 0.10e2 / 0.3e1 * t767;
	t589 = (t684 + t845) * t771 + t932;
	t692 = -(3 * t767) + t773;
	t883 = 0.4e1 * t938;
	t1005 = t692 + t883;
	t666 = 0.2e1 * t899;
	t623 = t666 + t1005;
	t751 = -3 * t771;
	t693 = t751 + t773;
	t881 = pkin(1) * t957;
	t830 = 0.8e1 * t881;
	t641 = t693 * t830;
	t914 = t773 - t760;
	t841 = t767 + t914;
	t659 = t763 + t841;
	t683 = t690 ^ 2;
	t700 = t733 ^ 2;
	t765 = t767 ^ 2;
	t738 = 15 * t765;
	t739 = 15 * t767;
	t772 = t773 ^ 2;
	t753 = 0.3e1 * t772;
	t778 = pkin(2) * t771;
	t768 = t778 ^ 2;
	t664 = pkin(1) + t686;
	t699 = t733 * t700;
	t955 = t699 * t778;
	t859 = t664 * t955;
	t816 = -0.8e1 * t859;
	t756 = 0.3e1 * t773;
	t921 = -t760 + t763;
	t843 = t756 + t921;
	t852 = 0.6e1 * t899;
	t862 = 0.12e2 * t938;
	t869 = pkin(3) * t950;
	t963 = t664 * t733;
	t545 = t623 * t816 + t641 + t587 * t862 + t573 * t852 + t768 + (t739 + t843) * t779 + t683 * t659 + (0.12e2 * t561 * t700 + t746 * t843 + t757 * t921 + t738 + t753) * t771 + 0.6e1 * (-t562 * t963 - t589 * t869) * pkin(2);
	t747 = 3 * t767;
	t675 = t747 + t917;
	t687 = pkin(2) * t731;
	t642 = t675 * t687;
	t976 = pkin(3) * t730;
	t647 = t687 - t976;
	t875 = t767 * t687;
	t812 = t697 * t875;
	t750 = 3 * t771;
	t673 = t750 + t690;
	t961 = t673 * t730;
	t981 = pkin(1) * t732;
	t574 = -0.2e1 * t812 + t642 + (0.2e1 * t647 * t981 - t961) * pkin(3);
	t689 = t1010 + t771;
	t948 = t730 * t782;
	t639 = t875 - t948;
	t964 = t639 * t697;
	t575 = t689 * t976 + 0.2e1 * t964 + (-t919 + t666) * t687;
	t605 = -pkin(3) * t961 + t642;
	t993 = 4 * t765;
	t671 = pkin(2) * t993 + 0.8e1 * t767 * t778;
	t855 = t782 * t941;
	t607 = t671 * t731 + 0.4e1 * t730 * t855;
	t744 = 5 * t765;
	t915 = t772 + t779;
	t740 = 10 * t767;
	t924 = t740 + t757;
	t936 = t773 * t767;
	t622 = t924 * t771 + t744 + t915 + 0.6e1 * t936;
	t749 = 5 * t779;
	t628 = t749 + (t740 + 0.6e1 * t773) * t771 + t683;
	t815 = 0.8e1 * t859;
	t953 = t700 * t771;
	t892 = -0.4e1 * t953;
	t551 = t575 * t892 + t607 * t697 + (-0.4e1 * t605 * t981 + (t628 + t815) * t730) * pkin(3) + (0.4e1 * t574 * t963 + (-t622 + t830) * t731) * pkin(2);
	t840 = t771 + t914;
	t804 = t767 + t840;
	t653 = -t763 + t804;
	t900 = pkin(1) * t979;
	t668 = -0.2e1 * t900;
	t621 = t668 + t653;
	t602 = t656 + t621;
	t650 = t663 * t732;
	t891 = 0.2e1 * t953;
	t624 = t668 + t891 + t918;
	t999 = -0.2e1 * t624;
	t798 = t697 * t999 - t914;
	t989 = -pkin(4) + pkin(6);
	t990 = -pkin(4) - pkin(6);
	t774 = sqrt(0.4e1 * t669 * t700 + 0.4e1 * t653 * t900 - t765 - (t773 + (pkin(2) - t989) * (pkin(2) + t989)) * (t773 + (pkin(2) - t990) * (pkin(2) + t990)) + (t751 + t763 + t798) * t1010 + (-t602 * t650 + t621 * t661) * t1011);
	t537 = t545 * t638 + t551 * t774;
	t535 = 0.1e1 / t537;
	t1008 = -t535 / 0.2e1;
	t645 = t773 + t771 / 0.4e1 + t767 / 0.4e1 - t760 / 0.8e1;
	t759 = t760 ^ 2;
	t762 = t763 ^ 2;
	t925 = 0.4e1 / 0.7e1 * t773 - t760 / 0.7e1;
	t937 = t773 * t760;
	t567 = -0.32e2 / 0.21e2 * t645 * t822 + t779 / 0.7e1 + (0.16e2 / 0.21e2 * t767 + t925) * t771 + t765 / 0.7e1 + t925 * t767 + t772 - 0.3e1 / 0.7e1 * t937 + t759 / 0.42e2 - t762 / 0.42e2;
	t710 = -t760 / 0.4e1;
	t646 = t710 + t725 + t926;
	t724 = 0.4e1 / 0.3e1 * t767;
	t984 = 0.4e1 / 0.3e1 * t771;
	t571 = -0.8e1 / 0.3e1 * t646 * t822 + t779 / 0.3e1 + (t724 + t711) * t771 + t772 - t765 / 0.3e1 + (t984 + 0.2e1 / 0.3e1 * t767 + t713) * t773 + t759 / 0.18e2 - t762 / 0.18e2;
	t1003 = -t759 / 0.6e1 + t762 / 0.6e1;
	t920 = t765 + t772;
	t923 = t757 - t760;
	t616 = t923 * t767 - t1003 + t920 - t937;
	t726 = t767 / 0.2e1;
	t618 = -0.2e1 / 0.3e1 * t822 + t773 + t726 + t710;
	t755 = 0.4e1 * t773;
	t676 = (t755 + t760) * t767;
	t682 = t773 - 0.2e1 / 0.3e1 * t771;
	t712 = -t760 / 0.2e1;
	t658 = t712 + t842;
	t796 = t658 * t809;
	t866 = 0.16e2 * t957;
	t695 = t697 ^ 2;
	t939 = t765 * t695;
	t887 = 0.8e1 * t939;
	t550 = t682 * t887 + 0.14e2 * t567 * t938 + t680 * t796 - t919 * t779 + (t676 - 0.10e2 / 0.3e1 * t765 + 0.2e1 * t772 - t937) * t771 + t616 * t942 + (0.6e1 * t571 * t686 + t618 * t866) * pkin(1);
	t791 = t616 + t779;
	t590 = (t684 + t923) * t771 + t791;
	t1000 = -0.6e1 * t590;
	t930 = t759 / 0.2e1 - t762 / 0.2e1;
	t808 = -0.3e1 * t937 + t753 + t930;
	t714 = -0.3e1 / 0.2e1 * t760;
	t927 = t714 + t756;
	t933 = ((t714 + t757) * t767 - 0.3e1 / 0.2e1 * t937 + t920 + t930) * t690 + t768;
	t560 = t822 * t1000 + (t738 + (-0.9e1 * t760 + 0.18e2 * t773) * t767 + t808) * t771 + (t739 + t927) * t779 + t933;
	t576 = t796 + (t746 + t923) * t771 + t791;
	t593 = t658 * t941 + t625;
	t552 = t576 * t852 + t593 * t862 + t560 + t641;
	t741 = -0.2e1 * t760;
	t754 = 0.8e1 * t773;
	t1002 = -0.4e1 * pkin(2);
	t826 = t948 * t1002;
	t611 = t731 * t826 + t993 + ((4 * t771) + t741 + t754) * t767;
	t617 = t710 - t767 + t795;
	t895 = 0.8e1 * t957;
	t902 = 0.4e1 * t686;
	t563 = t656 * t942 + t611 * t697 + t658 * t692 + (t617 * t902 + t895) * pkin(1);
	t916 = t772 - t765;
	t565 = t681 * t796 - t768 + (-t684 - t914) * t779 + (t676 + t916 + t1003) * t771 + t773 * t616;
	t742 = -0.5e1 * t760;
	t743 = 7 * t765;
	t745 = 7 * t767;
	t570 = (t745 + t927) * t779 + (t743 + (t742 + 0.10e2 * t773) * t767 + t808) * t771 + t933;
	t775 = pkin(1) * t773;
	t662 = -(12 * pkin(1) * t782) + t1011 * t775;
	t679 = -(8 * t765) + 0.12e2 * t936;
	t819 = pkin(1) * t866;
	t581 = t662 * t732 + t679 * t697 + t819 + t887 + t920 - 0.6e1 * t936;
	t596 = t656 * t941 + t658 * t693;
	t651 = (-0.6e1 * t771 * t773 + t915) * t765;
	t685 = -0.30e2 * t760 + 0.60e2 * t773;
	t698 = t700 ^ 2;
	t922 = t759 - t762;
	t807 = -0.6e1 * t937 + 0.6e1 * t772 + t922;
	t960 = t683 * (-t763 + t841);
	t975 = t560 * pkin(3);
	t994 = 0.8e1 * t732;
	t534 = -0.32e2 * t563 * t859 + 0.16e2 * t651 * t695 + 0.24e2 * t565 * t938 + (t741 + t755 + (28 * t767)) * t768 + t659 * t960 + (0.24e2 * t550 * t700 + t685 * t765 + t746 * t807 + t757 * t922 - 0.6e1 * t772 * t760 + 0.4e1 * t775 ^ 2 + (28 * t782 ^ 2)) * t771 + 0.8e1 * (-t552 * t963 - t570 * t869) * pkin(2) + (0.32e2 * t596 * t957 + t975 * t994) * pkin(1) + (0.16e2 * t581 * t698 + t685 * t767 + (70 * t765) + t779 + t807) * t779;
	t619 = 0.4e1 / 0.3e1 * t938 + t666 + t680;
	t688 = -t760 - t763;
	t672 = t756 + t688;
	t962 = t672 * t767;
	t649 = 0.10e2 * t962;
	t956 = t698 * t779;
	t959 = t688 * t773;
	t1006 = 0.7e1 * t768 + (t745 + t672) * t749 + (t649 + (21 * t765) + 0.9e1 * t772 + 0.6e1 * t959) * t771 + t960 - 0.24e2 * t619 * t956;
	t929 = t709 - t763 / 0.6e1;
	t848 = t773 + t929;
	t630 = t984 + t726 + t848;
	t806 = t728 + t848;
	t631 = t724 + t806;
	t582 = -t630 * t976 + t631 * t687;
	t633 = t767 + t806;
	t992 = 2 * t771;
	t674 = t992 - t919;
	t594 = t633 * t687 - t674 * t976 / 0.2e1;
	t1004 = t711 - t763 / 0.3e1;
	t847 = t773 + t1004;
	t849 = t760 / 0.3e1 + t719 + t757;
	t801 = -0.8e1 / 0.3e1 * t939 - t669 - 0.5e1 / 0.3e1 * t765 + t849 * t767 + t773 * t847;
	t831 = 0.20e2 / 0.3e1 * t767;
	t850 = 0.2e1 / 0.3e1 * t760 + t718 + t755;
	t851 = 0.4e1 / 0.3e1 * t760 + 0.4e1 / 0.3e1 * t763 - 0.2e1 * t773;
	t861 = -(-t779 + (-t831 + t850) * t771 - (3 * t765) + t851 * t767 + t772) * pkin(3) / 0.2e1;
	t958 = t696 * t765;
	t553 = t582 * t883 + t730 * t861 + t801 * t687 + (t594 * t686 - t730 * t958) * t913;
	t723 = -0.2e1 / 0.3e1 * t763;
	t928 = t713 + t723;
	t583 = t779 + (t924 + t928) * t771 + t744 + 0.2e1 * t962 + t773 * (t773 + t928);
	t595 = t749 + ((5 * t767) + t672) * t992 + (t723 + t844) * t690;
	t564 = t583 * t687 - t595 * t976;
	t805 = t767 + t847;
	t635 = t750 + t805;
	t636 = t675 + t1004;
	t584 = -t635 * t976 + t636 * t687;
	t644 = t726 + t771 + t929;
	t910 = 0.2e1 * t687;
	t599 = t644 * t910 + t941 * t976;
	t874 = t782 * t687;
	t885 = -0.4e1 * t938;
	t997 = -0.8e1 * t696;
	t554 = t599 * t885 + (t584 * t902 + t874 * t997) * pkin(1) + t564;
	t592 = -(3 * t779) + (-t831 + t851) * t771 + t850 * t767 + t916;
	t600 = -0.5e1 / 0.3e1 * t779 + (-t767 + t849) * t771 + t773 * t805;
	t905 = -0.2e1 * t976;
	t566 = t592 * t687 + t600 * t905;
	t846 = t712 - t763 / 0.2e1 + t773;
	t632 = 0.3e1 / 0.2e1 * t771 + t747 + t846;
	t648 = t687 + 0.2e1 * t976;
	t569 = t692 * t687 + 0.4e1 * t964 + (t632 * t730 + t648 * t981) * t1012;
	t634 = t750 + 0.3e1 / 0.2e1 * t767 + t846;
	t598 = t634 * t687 + t693 * t976 / 0.2e1;
	t797 = 0.24e2 * t681 * t939 - t768 - ((21 * t767) + t672) * t779 - (t649 + t753 + (35 * t765) + 0.2e1 * t959) * t771 - (t743 + (t742 + t754 - 0.5e1 * t763) * t767 + t773 * (-t763 + t914)) * t690;
	t864 = -0.12e2 * t953;
	t886 = -0.6e1 * t938;
	t538 = t598 * t819 + t569 * t815 + t553 * t864 + t566 * t886 + (t1006 * t730 - 0.6e1 * t564 * t981) * pkin(3) + (0.6e1 * t554 * t963 + t731 * t797) * pkin(2);
	t531 = t534 * t638 + t538 * t774;
	t1007 = t531 / t537 ^ 2 / 0.2e1;
	t871 = pkin(3) * t650;
	t588 = t656 + t668 + t842 + 0.2e1 * t871;
	t1001 = 0.2e1 / t588 ^ 2;
	t995 = -0.8e1 * t732;
	t991 = pkin(3) * pkin(1);
	t620 = t668 + t763 + t804;
	t872 = t624 * t686;
	t577 = t620 * t663 + 0.2e1 * t872;
	t978 = pkin(3) * t663;
	t580 = t620 * t732 + (t996 - 0.2e1) * t978;
	t931 = -t661 + t650;
	t613 = pkin(3) + t931;
	t549 = t577 * t730 + t580 * t687 + t613 * t774;
	t988 = -t549 / 0.2e1;
	t987 = t730 / 0.2e1;
	t986 = -t732 / 0.2e1;
	t985 = t732 / 0.2e1;
	t983 = t774 / 0.2e1;
	t982 = pkin(1) * (t661 - pkin(3));
	t980 = pkin(1) * t765;
	t977 = pkin(3) * t697;
	t974 = t570 * pkin(3);
	t973 = t680 * pkin(3);
	t946 = t732 * t549;
	t652 = t747 + t763 + t840;
	t603 = t652 + t668 + t809;
	t947 = t731 * t732;
	t615 = pkin(2) * t947 + t663 * t730;
	t966 = t615 * t774;
	t548 = -t603 * t650 + t966 + (t652 * t950 - 0.2e1 * t733 * t982) * pkin(2) + (-t750 - t763 - t767 + t798 + t891) * pkin(3);
	t951 = t730 * t548;
	t585 = 0.1e1 / t588;
	t764 = 0.1e1 / pkin(4);
	t967 = t585 * t764;
	t541 = (t946 + t951) * t967 / 0.2e1;
	t794 = t548 * t985 + t730 * t988;
	t540 = t794 * t967;
	t837 = t540 * t1008;
	t940 = 0.1e1 / pkin(6) * t764;
	t524 = (t531 * t837 + t541 * t983) * t940;
	t523 = 0.1e1 / t524 ^ 2;
	t836 = t541 * t1008;
	t525 = (t531 * t836 - t540 * t983) * t940;
	t972 = t523 * t525;
	t971 = t531 * t535;
	t557 = 0.1e1 / t774;
	t678 = pkin(1) * t687;
	t667 = 0.2e1 * t678;
	t943 = t733 * t771;
	t888 = -0.4e1 * t943;
	t814 = t731 * t888;
	t627 = t667 + t814;
	t949 = t730 * t733;
	t876 = pkin(2) * t949;
	t821 = pkin(3) * t876;
	t824 = -0.8e1 * t871;
	t904 = -0.4e1 * t686;
	t969 = (t627 * t885 + (t678 - t821) * t824 + 0.4e1 * t621 * t821 + (pkin(2) * t602 * t904 - 0.8e1 * t669 * t733 + (t1002 * t653 + t1009 * t869) * pkin(1)) * t731) * t557;
	t884 = 0.2e1 * t938;
	t944 = t732 * t767;
	t968 = t557 * ((t602 * t978 + 0.2e1 * t624 * t944) * t730 + (t621 * t686 + t663 * t884) * t687);
	t935 = t782 * t697;
	t880 = pkin(1) * t935;
	t817 = -0.12e2 * t880;
	t965 = t638 * t730 * t817;
	t954 = t699 * t779;
	t952 = t700 * t778;
	t945 = t732 * t733;
	t934 = -2 * t991;
	t912 = -2 * pkin(1) * t771;
	t911 = t574 * t1002;
	t909 = -0.6e1 * t979;
	t908 = 0.4e1 * t979;
	t907 = 0.6e1 * t979;
	t906 = -0.4e1 * pkin(3) * t637;
	t903 = 0.2e1 * t686;
	t901 = -0.2e1 * t973;
	t898 = 0.2e1 * t968;
	t897 = -0.4e1 * t957;
	t896 = -0.2e1 * t957;
	t894 = -0.8e1 * t955;
	t893 = 0.8e1 * t955;
	t890 = 0.3e1 * t953;
	t889 = t731 * t1009;
	t882 = pkin(1) * t939;
	t879 = pkin(1) * t944;
	t878 = pkin(1) * t938;
	t877 = t638 * t687;
	t873 = pkin(2) * t945;
	t870 = pkin(3) * t955;
	t868 = pkin(3) * t942;
	t867 = -0.32e2 * t958;
	t865 = -0.64e2 * t955;
	t863 = 0.12e2 * t953;
	t860 = 0.1e1 / (t523 * t525 ^ 2 + 0.1e1) * t940;
	t858 = t664 * t952;
	t857 = t681 * t935;
	t856 = t681 * t957;
	t854 = t730 * t944;
	t839 = -t971 / 0.2e1;
	t838 = t971 / 0.2e1;
	t835 = t969 / 0.2e1;
	t834 = t969 / 0.4e1;
	t832 = 0.32e2 / 0.3e1 * t765;
	t829 = -0.4e1 * t878;
	t828 = -0.2e1 * t878;
	t827 = 0.4e1 * t878;
	t825 = -0.4e1 * t658 * t973;
	t823 = pkin(1) * t873;
	t820 = -0.16e2 * pkin(1) * t646 * t767;
	t818 = -0.48e2 * t880;
	t813 = t941 * t980;
	t810 = t696 * t855;
	t803 = t540 * t1007;
	t802 = t541 * t1007;
	t800 = 0.64e2 / 0.3e1 * t645 * t782;
	t799 = t696 * t832;
	t629 = -0.4e1 * t767 * t730 * t823;
	t793 = t794 * t1001;
	t792 = (-t946 / 0.2e1 - t951 / 0.2e1) * t1001;
	t694 = t730 ^ 2;
	t665 = pkin(1) * t905;
	t643 = t823 * t1012;
	t608 = t615 * pkin(3);
	t604 = t678 + (t947 - t949) * pkin(3) * pkin(2);
	t544 = t931 * t774 + t615 * t898 + (t603 * t663 + 0.4e1 * t872) * t730 + (t912 * t945 + (t652 * t732 + 0.4e1 * t663 * t977) * pkin(2)) * t731;
	t543 = -t966 + t613 * t898 + pkin(3) * t694 * t999 + t577 * t732 + (-t620 + t824) * t661;
	t542 = (t661 + t873) * t774 + t615 * t835 - 0.2e1 * t627 * t977 - (t667 - 0.4e1 * t821) * t650 + t700 * t730 * t912 + t652 * t876 + (pkin(3) * t888 + (-t603 * t732 + 0.2e1 * t982) * pkin(2)) * t731;
	t539 = t613 * t835 + t627 * t730 * t903 + ((-t730 * t774 + t580) * t733 + (t732 * t774 + (t1013 * t663 + t620) * t730 + (-pkin(3) + 0.2e1 * t977 + t981) * t910) * t731) * pkin(2);
	t533 = (t643 * t892 + (t575 * t889 + t671 * t697 + ((-t919 + t884) * t892 - t622 + (t675 * t904 + t895) * pkin(1)) * pkin(2)) * t733 + ((t643 + (t675 - 0.2e1 * t938) * t979) * t908 + (-0.24e2 * t952 * t976 + t911) * t731) * t664) * t774 + t551 * t835 + t545 * t687 + 0.6e1 * t638 * (0.4e1 * t623 * t731 * t858 + (t629 + (-0.8e1 / 0.3e1 * t935 + t901) * t876) * t891 + t561 * t814 + t681 * t733 * t697 * t826 + t637 * t629 - t589 * t821 + (-(-0.8e1 * t879 + t906) * t730 * t953 + t562 * t687) * t664);
	t532 = (t767 * t694 * t894 + (t686 * t689 + t896) * t892 + 0.4e1 * t810 + t673 * t827 + t628 * t686) * t774 + t551 * t898 + t863 * t965 + ((-0.8e1 / 0.3e1 * t957 + t829 + t732 * t901) * t863 - 0.24e2 * t856 - 0.24e2 * t637 * t878 - 0.6e1 * t589 * t686) * t877 + (0.24e2 * (-t638 * t693 - t687 * t774) * t880 + ((0.16e2 * t639 * t953 - 0.2e1 * t607) * t774 + t638 * (-0.144e3 * t606 * t953 - 0.24e2 * t587) * t767) * t732 + (t733 * t774 * t911 - t545 + t638 * (t562 * t907 + t623 * t893) + ((pkin(2) * t700 * t889 + 0.4e1 * t605) * t774 + t638 * (-0.48e2 * t614 * t953 - 0.6e1 * t573)) * pkin(1)) * pkin(3)) * t730 + ((t870 * t994 + ((-pkin(3) * t673 + 0.4e1 * t661 * t767) * t732 + (-t647 * t976 - t938) * t1013) * t908) * t774 + t638 * ((t665 - 0.8e1 * t854) * t894 + ((-0.8e1 * t670 * t730 + t687 * t906) * t732 + (-0.4e1 * t612 * t976 - 0.8e1 * t812) * pkin(1)) * t909)) * t664;
	t530 = ((t539 * t985 + t542 * t987) * t585 + t604 * t792) * t764;
	t529 = ((t539 * t987 + t542 * t986) * t585 + t604 * t793) * t764;
	t528 = (-t608 * t792 + ((t543 / 0.2e1 + t548 / 0.2e1) * t732 + (t988 + t544 / 0.2e1) * t730) * t585) * t764;
	t527 = ((t543 * t987 + t544 * t986) * t585 - t608 * t793) * t764 + t541;
	t526 = t538 * t835 + (-0.32e2 * t629 * t638 + 0.8e1 * t643 * t774) * t859 + (0.24e2 * (0.4e1 * t619 * t954 * t976 + t553 * t943 - t569 * t858) * t774 + (-0.6e1 * t550 * t943 + 0.12e2 * t563 * t858 - 0.8e1 * t581 * t954) * t998) * t731 + ((t534 + (t552 * t998 - 0.6e1 * t554 * t774) * t664) * t731 + (((t631 * t883 + t633 * t853 + t801) * t864 + t634 * t819 + t592 * t886 - 0.6e1 * t583 * t899 + (t1005 * t893 + (t636 * t853 - 0.8e1 * t644 * t938 + t583 - 0.8e1 * t881) * t907) * t664 + t797) * t774 + ((-pkin(1) * t799 - t697 * t800 + t732 * t820 + t825) * t890 + t813 * t997 - 0.12e2 * t658 * t857 + t879 * t1000 - t974 + (-0.4e1 * (-(2 * t868) - 0.4e1 * t935) * t955 - (pkin(3) * t1000 - 0.24e2 * t658 * t879 - 0.24e2 * t857) * t979) * t664) * t730 * t998) * t733) * pkin(2);
	t522 = 0.1e1 / t524;
	t521 = ((0.12e2 * t694 * t697 * t980 + t630 * t897 + t674 * t828 + t732 * t861 - 0.4e1 * t882) * t864 + 0.8e1 * t693 * t882 + 0.12e2 * t600 * t957 + 0.6e1 * t595 * t878 + t1006 * t686) * t774 + t538 * t898 + (((t632 * t903 + t827 + t897) * t893 + (-t595 * t686 + t635 * t829 - 0.4e1 * t810) * t907) * t774 + t865 * t965) * t664 + (0.24e2 * (-pkin(1) * t695 * t832 - t696 * t800 + t697 * t820 + t732 * t825) * t953 - 0.64e2 * t695 * t813 - 0.96e2 * t658 * t856 - 0.48e2 * t590 * t878 + t974 * t995 + ((-t732 * t868 + t828 + t896) * t865 - 0.48e2 * (-t590 * t686 + t658 * t829 - 0.4e1 * t856) * t979) * t664) * t877 + (-pkin(3) * t534 + (0.2e1 * (-0.2e1 * t679 * t732 - t662 + t818 + t867) * t956 + (-t611 * t732 + t617 * t934) * t816 + 0.4e1 * t563 * t870 + (-0.28e2 * t567 * t944 - 0.6e1 * t571 * t991 + t618 * t818 + t682 * t867) * t890 + pkin(3) * t552 * t979 + t664 * (-t576 * t991 - 0.4e1 * t593 * t944 - 0.4e1 * t693 * t880) * t909 + t651 * t997 + t596 * t817 - 0.6e1 * t565 * t944 - pkin(1) * t975) * t998 + ((-0.8e1 * t582 * t944 + t687 * t799) * t864 - 0.96e2 * t681 * t958 * t687 + t598 * t818 + 0.12e2 * t566 * t944 + (t554 * t909 + t569 * t894 + (-0.24e2 * t665 + 0.64e2 * t854) * t956 + (0.48e2 * t594 * t953 + 0.6e1 * t564) * pkin(1)) * pkin(3) + ((t639 * t995 + t648 * t934) * t893 + (0.24e2 * pkin(1) * t697 * t874 - 0.4e1 * t584 * t991 + 0.8e1 * t599 * t944) * t907) * t664) * t774) * t730;
	t1 = [0, 0, 0; 0, 0, 0; ((t526 * t836 + t529 * t983 + t530 * t839 + t533 * t802 - t540 * t834) * t522 - (t526 * t837 + t529 * t838 + t530 * t983 + t533 * t803 + t541 * t834) * t972) * t860, ((t521 * t836 + t527 * t983 + t528 * t839 + t532 * t802 - t540 * t968) * t522 - (t521 * t837 + t527 * t838 + t528 * t983 + t532 * t803 + t541 * t968) * t972) * t860, 0;];
	Ja_rot = t1;
else
	Ja_rot=NaN(3,3);
end