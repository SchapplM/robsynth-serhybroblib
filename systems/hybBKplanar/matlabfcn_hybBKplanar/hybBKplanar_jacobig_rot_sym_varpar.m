% Rotatorische Teilmatrix der geometrischen Jacobi-Matrix für beliebiges Segment von
% hybBKplanar
% Use Code from Maple symbolic Code Generation
%
% Geometrische Jacobi-Matrix: Differentieller Zusammenhang zwischen
% Endeffektorgeschwindigkeit und Geschw. der verallgemeinerten Koordinaten.
% 
% 
% Input:
% qJ [3x1]
%   Generalized joint coordinates (joint angles)
% link_index [1x1 uint8]
%   Index des Segmentes, auf dem der Punkt C liegt. (0=Basis).
%   Siehe auch: bsp_3T1R_fkine_fixb_rotmat_mdh_sym_varpar.m
% pkin [6x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[AB,AE,BC,CD,CF,ED]';
% 
% Output:
% Jg_rot [3x3]
%   Rotatorische Teilmatrix der geometrischen Jacobi-Matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2020-04-11 19:03
% Revision: 6ae2d958c5b90587a0d08029b131cb7b66342a68 (2020-04-11)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function Jg_rot = hybBKplanar_jacobig_rot_sym_varpar(qJ, link_index, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(3,1),uint8(0),zeros(6,1)}
assert(isreal(qJ) && all(size(qJ) == [3 1]), ...
  'hybBKplanar_jacobig_rot_sym_varpar: qJ has to be [3x1] (double)');
assert(isa(link_index,'uint8') && all(size(link_index) == [1 1]), ...
	'hybBKplanar_jacobig_rot_sym_varpar: link_index has to be [1x1] uint8');
assert(isreal(pkin) && all(size(pkin) == [6 1]), ...
  'hybBKplanar_jacobig_rot_sym_varpar: pkin has to be [6x1] (double)');
if link_index == 0
	%% Symbolic Calculation
	% From jacobig_rot_0_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-11 18:54:59
	% EndTime: 2020-04-11 18:54:59
	% DurationCPUTime: 0.01s
	% Computational Cost: add. (0->0), mult. (0->0), div. (0->0), fcn. (0->0), ass. (0->1)
	t1 = [0, 0, 0; 0, 0, 0; 0, 0, 0;];
	Jg_rot = t1;
elseif link_index == 1
	%% Symbolic Calculation
	% From jacobig_rot_1_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-11 18:54:59
	% EndTime: 2020-04-11 18:54:59
	% DurationCPUTime: 0.01s
	% Computational Cost: add. (0->0), mult. (0->0), div. (0->0), fcn. (0->0), ass. (0->1)
	t1 = [0, 0, 0; 0, 0, 0; 1, 0, 0;];
	Jg_rot = t1;
elseif link_index == 2
	%% Symbolic Calculation
	% From jacobig_rot_2_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-11 18:55:40
	% EndTime: 2020-04-11 18:55:50
	% DurationCPUTime: 9.92s
	% Computational Cost: add. (65317->621), mult. (196552->965), div. (464->9), fcn. (23660->6), ass. (0->421)
	t1250 = (pkin(2) ^ 2);
	t1246 = (pkin(3) ^ 2);
	t1252 = pkin(1) ^ 2;
	t1393 = t1246 - t1252;
	t1148 = t1393 * t1250;
	t1483 = 2 * pkin(1);
	t1482 = 2 * pkin(3);
	t1481 = 4 * pkin(3);
	t1209 = sin(qJ(2));
	t1210 = sin(qJ(1));
	t1424 = t1209 * t1210;
	t1137 = pkin(2) * t1424;
	t1300 = pkin(3) * t1137;
	t1132 = -0.2e1 * t1300;
	t1212 = cos(qJ(1));
	t1452 = pkin(2) * t1212;
	t1376 = pkin(1) * t1452;
	t1147 = -0.2e1 * t1376;
	t1391 = (t1250 + t1252);
	t1311 = t1246 + t1391;
	t1142 = pkin(1) - t1452;
	t1211 = cos(qJ(2));
	t1126 = t1142 * t1211;
	t1347 = pkin(3) * t1126;
	t1062 = t1132 + t1147 + t1311 + 0.2e1 * t1347;
	t1480 = -0.2e1 / t1062 ^ 2;
	t1165 = pkin(3) * t1211;
	t1114 = t1142 + t1165;
	t1470 = 0.8e1 * t1114;
	t1479 = 2 * t1246;
	t1478 = 8 * t1250;
	t1179 = t1212 ^ 2;
	t1412 = t1250 * t1179;
	t1375 = pkin(1) * t1165;
	t1145 = 0.2e1 * t1375;
	t1159 = -t1246 / 0.3e1 + t1252;
	t1176 = t1211 ^ 2;
	t1413 = t1246 * t1176;
	t1093 = 0.4e1 / 0.3e1 * t1413 + t1145 + t1159;
	t1239 = pkin(6) ^ 2;
	t1242 = pkin(4) ^ 2;
	t1167 = -t1239 - t1242;
	t1235 = 0.3e1 * t1252;
	t1151 = t1235 + t1167;
	t1434 = t1151 * t1246;
	t1125 = 0.10e2 * t1434;
	t1224 = 7 * t1246;
	t1258 = t1250 ^ 2;
	t1228 = 5 * t1258;
	t1244 = t1246 ^ 2;
	t1257 = pkin(2) * t1250;
	t1247 = t1257 ^ 2;
	t1251 = t1252 ^ 2;
	t1177 = t1179 ^ 2;
	t1428 = t1177 * t1258;
	t1431 = t1167 * t1252;
	t1169 = t1246 + t1252;
	t1162 = t1169 ^ 2;
	t1310 = -t1239 + t1169;
	t1432 = t1162 * (-t1242 + t1310);
	t1477 = 0.7e1 * t1247 + (t1224 + t1151) * t1228 + (t1125 + (21 * t1244) + 0.9e1 * t1251 + 0.6e1 * t1431) * t1250 + t1432 - 0.24e2 * t1093 * t1428;
	t1171 = -(3 * t1246) + t1252;
	t1362 = 0.4e1 * t1413;
	t1476 = t1171 + t1362;
	t1190 = -t1239 / 0.3e1;
	t1475 = t1190 - t1242 / 0.3e1;
	t1238 = t1239 ^ 2;
	t1241 = t1242 ^ 2;
	t1474 = -t1238 / 0.6e1 + t1241 / 0.6e1;
	t1473 = -0.4e1 * pkin(2);
	t1163 = 0.10e2 / 0.3e1 * t1246;
	t1394 = t1244 + t1251;
	t1236 = 0.2e1 * t1252;
	t1398 = t1236 - t1239;
	t1411 = t1252 * t1239;
	t1090 = t1398 * t1246 + t1394 - t1411 - t1474;
	t1272 = t1090 + t1258;
	t1064 = (t1163 + t1398) * t1250 + t1272;
	t1472 = -0.6e1 * t1064;
	t1360 = 0.2e1 * t1412;
	t1392 = -t1250 + t1252;
	t1098 = t1147 + t1360 + t1392;
	t1471 = -0.2e1 * t1098;
	t1175 = t1211 * t1176;
	t1469 = -0.8e1 * t1175;
	t1468 = 0.4e1 * t1176;
	t1467 = -0.8e1 * t1211;
	t1466 = 0.8e1 * t1211;
	t1465 = 4 * t1244;
	t1225 = 6 * t1246;
	t1464 = 2 * t1250;
	t1463 = pkin(1) * pkin(3);
	t1462 = -pkin(4) - pkin(6);
	t1461 = pkin(6) - pkin(4);
	t1204 = t1246 / 0.3e1;
	t1080 = -0.4e1 / 0.9e1 * t1300 + t1252 + t1250 / 0.3e1 + t1204 + t1242 / 0.9e1 - t1239 / 0.9e1;
	t1188 = -t1239 / 0.6e1;
	t1207 = t1250 / 0.2e1;
	t1401 = t1207 + t1252;
	t1275 = -t1300 + t1401;
	t1088 = t1242 / 0.6e1 + t1188 + t1275;
	t1198 = t1242 / 0.3e1;
	t1113 = t1190 + t1198 + t1311;
	t1417 = (pkin(1) + pkin(3)) * (pkin(1) - pkin(3));
	t1261 = pkin(3) * t1246;
	t1429 = t1175 * t1261;
	t1442 = 4 * pkin(1);
	t1035 = t1159 * t1132 + 0.6e1 * t1080 * t1413 + t1113 * t1417 + (t1088 * t1165 + t1429) * t1442;
	t1288 = -0.4e1 * t1300;
	t1192 = -0.2e1 / 0.3e1 * t1239;
	t1197 = 0.2e1 / 0.3e1 * t1242;
	t1314 = t1192 + t1197 + t1236;
	t1313 = t1192 + t1169;
	t1407 = (t1197 + t1313) * t1169 + t1258;
	t1047 = t1113 * t1288 + (t1225 + t1314) * t1250 + t1407;
	t1086 = t1132 + t1113;
	t1149 = t1392 * t1246;
	t1336 = 0.4e1 * t1375;
	t1036 = t1086 * t1336 + t1149 * t1468 + t1047;
	t1160 = t1252 - t1250 / 0.3e1;
	t1099 = t1160 * t1132;
	t1416 = (pkin(1) + pkin(2)) * (pkin(1) - pkin(2));
	t1061 = t1113 * t1416 + t1099;
	t1063 = (t1163 + t1314) * t1250 + t1407;
	t1097 = t1145 + t1476;
	t1230 = -3 * t1250;
	t1172 = t1230 + t1252;
	t1357 = pkin(1) * t1429;
	t1308 = 0.8e1 * t1357;
	t1117 = t1172 * t1308;
	t1135 = t1242 + t1310;
	t1217 = 15 * t1244;
	t1218 = 15 * t1246;
	t1232 = 0.3e1 * t1251;
	t1143 = pkin(1) + t1165;
	t1178 = t1212 * t1179;
	t1427 = t1178 * t1257;
	t1331 = t1143 * t1427;
	t1294 = -0.8e1 * t1331;
	t1396 = -t1239 + t1242;
	t1312 = t1235 + t1396;
	t1335 = 0.6e1 * t1375;
	t1339 = 0.12e2 * t1413;
	t1345 = pkin(3) * t1424;
	t1435 = t1143 * t1212;
	t1021 = t1097 * t1294 + t1117 + t1061 * t1339 + t1047 * t1335 + t1247 + (t1218 + t1312) * t1258 + t1162 * t1135 + (0.12e2 * t1035 * t1179 + t1312 * t1225 + t1396 * t1236 + t1217 + t1232) * t1250 + 0.6e1 * (-t1036 * t1435 - t1063 * t1345) * pkin(2);
	t1226 = 3 * t1246;
	t1154 = t1226 + t1391;
	t1166 = pkin(2) * t1210;
	t1118 = t1154 * t1166;
	t1449 = pkin(3) * t1209;
	t1123 = t1166 - t1449;
	t1351 = t1246 * t1166;
	t1290 = t1176 * t1351;
	t1229 = 3 * t1250;
	t1152 = t1229 + t1169;
	t1433 = t1152 * t1209;
	t1454 = pkin(1) * t1211;
	t1048 = -0.2e1 * t1290 + t1118 + (0.2e1 * t1123 * t1454 - t1433) * pkin(3);
	t1168 = t1479 + t1250;
	t1422 = t1209 * t1261;
	t1115 = t1351 - t1422;
	t1436 = t1115 * t1176;
	t1049 = t1168 * t1449 + 0.2e1 * t1436 + (-t1393 + t1145) * t1166;
	t1079 = -pkin(3) * t1433 + t1118;
	t1150 = pkin(2) * t1465 + 0.8e1 * t1246 * t1257;
	t1327 = t1261 * t1416;
	t1081 = t1150 * t1210 + 0.4e1 * t1209 * t1327;
	t1223 = 5 * t1244;
	t1389 = t1251 + t1258;
	t1219 = 10 * t1246;
	t1399 = t1219 + t1236;
	t1410 = t1252 * t1246;
	t1096 = t1399 * t1250 + t1223 + t1389 + 0.6e1 * t1410;
	t1104 = t1228 + (t1219 + 0.6e1 * t1252) * t1250 + t1162;
	t1293 = 0.8e1 * t1331;
	t1361 = -0.4e1 * t1412;
	t1025 = t1049 * t1361 + t1081 * t1176 + (-0.4e1 * t1079 * t1454 + (t1104 + t1293) * t1209) * pkin(3) + (0.4e1 * t1048 * t1435 + (-t1096 + t1308) * t1210) * pkin(2);
	t1309 = -t1239 + t1391;
	t1279 = t1246 + t1309;
	t1129 = -t1242 + t1279;
	t1095 = t1147 + t1129;
	t1076 = t1132 + t1095;
	t1395 = t1239 - t1252;
	t1278 = t1176 * t1471 + t1395;
	t1253 = sqrt(0.4e1 * t1148 * t1179 + 0.4e1 * t1129 * t1376 - t1244 - (t1252 + (pkin(2) - t1461) * (pkin(2) + t1461)) * (t1252 + (pkin(2) - t1462) * (pkin(2) + t1462)) + (t1230 + t1242 + t1278) * t1479 + (-t1076 * t1126 + t1095 * t1137) * t1481);
	t1015 = t1021 * t1114 + t1025 * t1253;
	t1460 = 0.1e1 / t1015 / 0.4e1;
	t1459 = -0.1e1 / t1015 ^ 2 / 0.4e1;
	t1458 = 0.4e1 / 0.3e1 * t1250;
	t1457 = -t1253 / 0.4e1;
	t1456 = t1253 / 0.4e1;
	t1455 = pkin(1) * (t1137 - pkin(3));
	t1453 = pkin(1) * t1244;
	t1451 = pkin(3) * t1142;
	t1450 = pkin(3) * t1176;
	t1405 = t1238 / 0.2e1 - t1241 / 0.2e1;
	t1283 = -0.3e1 * t1411 + t1232 + t1405;
	t1193 = -0.3e1 / 0.2e1 * t1239;
	t1402 = t1193 + t1235;
	t1408 = ((t1193 + t1236) * t1246 - 0.3e1 / 0.2e1 * t1411 + t1394 + t1405) * t1169 + t1247;
	t1034 = t1300 * t1472 + (t1217 + (-0.9e1 * t1239 + 0.18e2 * t1252) * t1246 + t1283) * t1250 + (t1218 + t1402) * t1258 + t1408;
	t1448 = t1034 * pkin(3);
	t1221 = -0.5e1 * t1239;
	t1222 = 7 * t1244;
	t1044 = (t1224 + t1402) * t1258 + (t1222 + (t1221 + 0.10e2 * t1252) * t1246 + t1283) * t1250 + t1408;
	t1447 = t1044 * pkin(3);
	t1446 = t1159 * pkin(3);
	t1445 = -2 * t1463;
	t1121 = t1252 + t1250 / 0.4e1 + t1246 / 0.4e1 - t1239 / 0.8e1;
	t1400 = 0.4e1 / 0.7e1 * t1252 - t1239 / 0.7e1;
	t1041 = -0.32e2 / 0.21e2 * t1121 * t1300 + t1258 / 0.7e1 + (0.16e2 / 0.21e2 * t1246 + t1400) * t1250 + t1244 / 0.7e1 + t1400 * t1246 + t1251 - 0.3e1 / 0.7e1 * t1411 + t1238 / 0.42e2 - t1241 / 0.42e2;
	t1189 = -t1239 / 0.4e1;
	t1122 = t1189 + t1204 + t1401;
	t1203 = 0.4e1 / 0.3e1 * t1246;
	t1045 = -0.8e1 / 0.3e1 * t1122 * t1300 + t1258 / 0.3e1 + (t1203 + t1190) * t1250 + t1251 - t1244 / 0.3e1 + (t1458 + 0.2e1 / 0.3e1 * t1246 + t1192) * t1252 + t1238 / 0.18e2 - t1241 / 0.18e2;
	t1205 = t1246 / 0.2e1;
	t1092 = -0.2e1 / 0.3e1 * t1300 + t1252 + t1205 + t1189;
	t1234 = 0.4e1 * t1252;
	t1155 = (t1234 + t1239) * t1246;
	t1161 = t1252 - 0.2e1 / 0.3e1 * t1250;
	t1191 = -t1239 / 0.2e1;
	t1134 = t1191 + t1311;
	t1276 = t1134 * t1288;
	t1341 = 0.16e2 * t1429;
	t1174 = t1176 ^ 2;
	t1414 = t1244 * t1174;
	t1366 = 0.8e1 * t1414;
	t1024 = t1161 * t1366 + 0.14e2 * t1041 * t1413 + t1159 * t1276 - t1393 * t1258 + (t1155 - 0.10e2 / 0.3e1 * t1244 + 0.2e1 * t1251 - t1411) * t1250 + t1090 * t1417 + (0.6e1 * t1045 * t1165 + t1092 * t1341) * pkin(1);
	t1050 = t1276 + (t1225 + t1398) * t1250 + t1272;
	t1067 = t1134 * t1416 + t1099;
	t1026 = t1050 * t1335 + t1067 * t1339 + t1034 + t1117;
	t1220 = -0.2e1 * t1239;
	t1233 = 0.8e1 * t1252;
	t1304 = t1422 * t1473;
	t1085 = t1210 * t1304 + t1465 + ((4 * t1250) + t1220 + t1233) * t1246;
	t1091 = t1189 - t1246 + t1275;
	t1371 = 0.8e1 * t1429;
	t1378 = 0.4e1 * t1165;
	t1037 = t1132 * t1417 + t1085 * t1176 + t1134 * t1171 + (t1091 * t1378 + t1371) * pkin(1);
	t1390 = t1251 - t1244;
	t1039 = t1160 * t1276 - t1247 + (-t1163 + t1395) * t1258 + (t1155 + t1390 + t1474) * t1250 + t1252 * t1090;
	t1254 = pkin(1) * t1252;
	t1141 = -(12 * pkin(1) * t1261) + t1254 * t1481;
	t1158 = -(8 * t1244) + 0.12e2 * t1410;
	t1297 = pkin(1) * t1341;
	t1055 = t1141 * t1211 + t1158 * t1176 + t1297 + t1366 + t1394 - 0.6e1 * t1410;
	t1070 = t1132 * t1416 + t1134 * t1172;
	t1127 = (-0.6e1 * t1250 * t1252 + t1389) * t1244;
	t1164 = -0.30e2 * t1239 + 0.60e2 * t1252;
	t1397 = t1238 - t1241;
	t1282 = -0.6e1 * t1411 + 0.6e1 * t1251 + t1397;
	t1012 = -0.32e2 * t1037 * t1331 + 0.16e2 * t1127 * t1174 + 0.24e2 * t1039 * t1413 + (t1220 + t1234 + (28 * t1246)) * t1247 + t1135 * t1432 + (0.24e2 * t1024 * t1179 + t1164 * t1244 + t1282 * t1225 + t1397 * t1236 - 0.6e1 * t1251 * t1239 + 0.4e1 * t1254 ^ 2 + (28 * t1261 ^ 2)) * t1250 + 0.8e1 * (-t1026 * t1435 - t1044 * t1345) * pkin(2) + (0.32e2 * t1070 * t1429 + t1448 * t1466) * pkin(1) + (0.16e2 * t1055 * t1177 + t1164 * t1246 + (70 * t1244) + t1258 + t1282) * t1258;
	t1404 = t1188 - t1242 / 0.6e1;
	t1317 = t1252 + t1404;
	t1106 = t1458 + t1205 + t1317;
	t1281 = t1207 + t1317;
	t1107 = t1203 + t1281;
	t1056 = -t1106 * t1449 + t1107 * t1166;
	t1109 = t1246 + t1281;
	t1153 = t1464 - t1393;
	t1068 = t1109 * t1166 - t1153 * t1449 / 0.2e1;
	t1316 = t1252 + t1475;
	t1318 = t1239 / 0.3e1 + t1198 + t1236;
	t1284 = -0.8e1 / 0.3e1 * t1414 - t1148 - 0.5e1 / 0.3e1 * t1244 + t1318 * t1246 + t1252 * t1316;
	t1319 = 0.2e1 / 0.3e1 * t1239 + t1197 + t1234;
	t1320 = 0.4e1 / 0.3e1 * t1239 + 0.4e1 / 0.3e1 * t1242 - 0.2e1 * t1252;
	t1333 = 0.20e2 / 0.3e1 * t1246;
	t1343 = -(-t1258 + (t1319 - t1333) * t1250 - (3 * t1244) + t1320 * t1246 + t1251) * pkin(3) / 0.2e1;
	t1430 = t1175 * t1244;
	t1027 = t1056 * t1362 + t1209 * t1343 + t1284 * t1166 + (t1068 * t1165 - t1209 * t1430) * t1442;
	t1202 = -0.2e1 / 0.3e1 * t1242;
	t1403 = t1192 + t1202;
	t1057 = t1258 + (t1399 + t1403) * t1250 + t1223 + 0.2e1 * t1434 + t1252 * (t1252 + t1403);
	t1069 = t1228 + ((5 * t1246) + t1151) * t1464 + (t1202 + t1313) * t1169;
	t1038 = t1057 * t1166 - t1069 * t1449;
	t1280 = t1246 + t1316;
	t1111 = t1229 + t1280;
	t1112 = t1154 + t1475;
	t1058 = -t1111 * t1449 + t1112 * t1166;
	t1120 = t1205 + t1250 + t1404;
	t1386 = 0.2e1 * t1166;
	t1073 = t1120 * t1386 + t1416 * t1449;
	t1350 = t1261 * t1166;
	t1364 = -0.4e1 * t1413;
	t1028 = t1073 * t1364 + (t1058 * t1378 + t1350 * t1469) * pkin(1) + t1038;
	t1066 = -(3 * t1258) + (t1320 - t1333) * t1250 + t1319 * t1246 + t1390;
	t1074 = -0.5e1 / 0.3e1 * t1258 + (-t1246 + t1318) * t1250 + t1252 * t1280;
	t1381 = -0.2e1 * t1449;
	t1040 = t1066 * t1166 + t1074 * t1381;
	t1315 = t1191 - t1242 / 0.2e1 + t1252;
	t1108 = 0.3e1 / 0.2e1 * t1250 + t1226 + t1315;
	t1124 = t1166 + 0.2e1 * t1449;
	t1043 = t1171 * t1166 + 0.4e1 * t1436 + (t1108 * t1209 + t1124 * t1454) * t1482;
	t1110 = t1229 + 0.3e1 / 0.2e1 * t1246 + t1315;
	t1072 = t1110 * t1166 + t1172 * t1449 / 0.2e1;
	t1277 = 0.24e2 * t1160 * t1414 - t1247 - ((21 * t1246) + t1151) * t1258 - (t1125 + t1232 + (35 * t1244) + 0.2e1 * t1431) * t1250 - (t1222 + (t1221 + t1233 - 0.5e1 * t1242) * t1246 + t1252 * (-t1242 - t1395)) * t1169;
	t1338 = -0.12e2 * t1412;
	t1365 = -0.6e1 * t1413;
	t1016 = t1072 * t1297 + t1043 * t1293 + t1027 * t1338 + t1040 * t1365 + (-0.6e1 * t1038 * t1454 + t1477 * t1209) * pkin(3) + (0.6e1 * t1028 * t1435 + t1277 * t1210) * pkin(2);
	t1144 = pkin(1) * t1381;
	t1173 = t1209 ^ 2;
	t1285 = t1175 * t1327;
	t1334 = 0.32e2 / 0.3e1 * t1244;
	t1286 = t1175 * t1334;
	t1287 = 0.64e2 / 0.3e1 * t1121 * t1261;
	t1291 = t1416 * t1453;
	t1409 = t1261 * t1176;
	t1356 = pkin(1) * t1409;
	t1295 = -0.12e2 * t1356;
	t1296 = -0.48e2 * t1356;
	t1298 = -0.16e2 * pkin(1) * t1122 * t1246;
	t1303 = -0.4e1 * t1134 * t1446;
	t1354 = pkin(1) * t1413;
	t1305 = 0.4e1 * t1354;
	t1306 = -0.2e1 * t1354;
	t1307 = -0.4e1 * t1354;
	t1419 = t1211 * t1246;
	t1326 = t1209 * t1419;
	t1328 = t1160 * t1429;
	t1340 = -0.64e2 * t1427;
	t1342 = -0.32e2 * t1430;
	t1344 = pkin(3) * t1417;
	t1346 = pkin(3) * t1427;
	t1353 = t1114 * t1166;
	t1358 = pkin(1) * t1414;
	t1359 = 0.3e1 * t1412;
	t1369 = 0.8e1 * t1427;
	t1370 = -0.8e1 * t1427;
	t1372 = -0.2e1 * t1429;
	t1373 = -0.4e1 * t1429;
	t1031 = 0.1e1 / t1253;
	t1363 = 0.2e1 * t1413;
	t1439 = t1031 * ((t1076 * t1451 + 0.2e1 * t1098 * t1419) * t1209 + (t1095 * t1165 + t1142 * t1363) * t1166);
	t1374 = 0.2e1 * t1439;
	t1379 = 0.2e1 * t1165;
	t1383 = 0.6e1 * t1452;
	t1385 = -0.6e1 * t1452;
	t1437 = t1114 * t1209 * t1295;
	t1003 = ((0.12e2 * t1173 * t1176 * t1453 + t1106 * t1373 + t1153 * t1306 + t1211 * t1343 - 0.4e1 * t1358) * t1338 + 0.8e1 * t1172 * t1358 + 0.12e2 * t1074 * t1429 + 0.6e1 * t1069 * t1354 + t1477 * t1165) * t1253 + t1016 * t1374 + (((t1108 * t1379 + t1305 + t1373) * t1369 + (-t1069 * t1165 + t1111 * t1307 - 0.4e1 * t1285) * t1383) * t1253 + t1340 * t1437) * t1143 + (0.24e2 * (-pkin(1) * t1174 * t1334 - t1175 * t1287 + t1176 * t1298 + t1211 * t1303) * t1412 - 0.64e2 * t1174 * t1291 - 0.96e2 * t1134 * t1328 - 0.48e2 * t1064 * t1354 + t1447 * t1467 + ((-t1211 * t1344 + t1306 + t1372) * t1340 - 0.48e2 * (-t1064 * t1165 + t1134 * t1307 - 0.4e1 * t1328) * t1452) * t1143) * t1353 + (-pkin(3) * t1012 + (0.2e1 * (-0.2e1 * t1158 * t1211 - t1141 + t1296 + t1342) * t1428 + (-t1085 * t1211 + t1091 * t1445) * t1294 + 0.4e1 * t1037 * t1346 + (-0.28e2 * t1041 * t1419 - 0.6e1 * t1045 * t1463 + t1092 * t1296 + t1161 * t1342) * t1359 + pkin(3) * t1026 * t1452 + t1143 * (-t1050 * t1463 - 0.4e1 * t1067 * t1419 - 0.4e1 * t1172 * t1356) * t1385 + t1127 * t1469 + t1070 * t1295 - 0.6e1 * t1039 * t1419 - pkin(1) * t1448) * t1470 + ((-0.8e1 * t1056 * t1419 + t1286 * t1166) * t1338 - 0.96e2 * t1160 * t1430 * t1166 + t1072 * t1296 + 0.12e2 * t1040 * t1419 + (t1028 * t1385 + t1043 * t1370 + (-0.24e2 * t1144 + 0.64e2 * t1326) * t1428 + (0.48e2 * t1068 * t1412 + 0.6e1 * t1038) * pkin(1)) * pkin(3) + ((t1115 * t1467 + t1124 * t1445) * t1369 + (0.24e2 * pkin(1) * t1176 * t1350 - 0.4e1 * t1058 * t1463 + 0.8e1 * t1073 * t1419) * t1383) * t1143) * t1253) * t1209;
	t1009 = t1012 * t1114 + t1016 * t1253;
	t1128 = t1226 + t1242 + t1309;
	t1077 = t1128 + t1147 + t1288;
	t1421 = t1211 * t1210;
	t1089 = pkin(2) * t1421 + t1142 * t1209;
	t1438 = t1089 * t1253;
	t1022 = -t1077 * t1126 + t1438 + (t1128 * t1424 - 0.2e1 * t1212 * t1455) * pkin(2) + (-t1229 - t1242 - t1246 + t1278 + t1360) * pkin(3);
	t1094 = t1147 + t1242 + t1279;
	t1348 = t1098 * t1165;
	t1051 = t1094 * t1142 + 0.2e1 * t1348;
	t1054 = t1094 * t1211 + (t1468 - 0.2e1) * t1451;
	t1406 = -t1137 + t1126;
	t1087 = pkin(3) + t1406;
	t1023 = t1051 * t1209 + t1054 * t1166 + t1087 * t1253;
	t1324 = t1023 * t1460;
	t1274 = t1009 * t1324 + t1022 * t1456;
	t1059 = 0.1e1 / t1062;
	t1415 = 0.1e1 / pkin(6) / pkin(4) ^ 2;
	t1332 = t1059 * t1415;
	t1008 = t1274 * t1332;
	t1337 = 0.12e2 * t1412;
	t1368 = t1210 * t1478;
	t1377 = -0.2e1 * t1446;
	t1382 = -0.4e1 * pkin(3) * t1113;
	t1384 = 0.4e1 * t1452;
	t1387 = t1048 * t1473;
	t1010 = (t1246 * t1173 * t1370 + (t1168 * t1165 + t1372) * t1361 + 0.4e1 * t1285 + t1152 * t1305 + t1104 * t1165) * t1253 + t1025 * t1374 + t1337 * t1437 + ((-0.8e1 / 0.3e1 * t1429 + t1307 + t1211 * t1377) * t1337 - 0.24e2 * t1328 - 0.24e2 * t1113 * t1354 - 0.6e1 * t1063 * t1165) * t1353 + (0.24e2 * (-t1114 * t1172 - t1253 * t1166) * t1356 + ((0.16e2 * t1115 * t1412 - 0.2e1 * t1081) * t1253 + t1114 * (-0.144e3 * t1080 * t1412 - 0.24e2 * t1061) * t1246) * t1211 + (t1212 * t1253 * t1387 - t1021 + t1114 * (t1036 * t1383 + t1097 * t1369) + ((pkin(2) * t1179 * t1368 + 0.4e1 * t1079) * t1253 + t1114 * (-0.48e2 * t1088 * t1412 - 0.6e1 * t1047)) * pkin(1)) * pkin(3)) * t1209 + ((t1346 * t1466 + ((-pkin(3) * t1152 + 0.4e1 * t1246 * t1137) * t1211 + (-t1123 * t1449 - t1413) * t1483) * t1384) * t1253 + t1114 * ((t1144 - 0.8e1 * t1326) * t1370 + ((-0.8e1 * t1149 * t1209 + t1382 * t1166) * t1211 + (-0.4e1 * t1086 * t1449 - 0.8e1 * t1290) * pkin(1)) * t1385)) * t1143;
	t1302 = -0.8e1 * t1347;
	t1019 = -t1438 + t1087 * t1374 + pkin(3) * t1173 * t1471 + t1051 * t1211 + (-t1094 + t1302) * t1137;
	t1388 = -2 * pkin(1) * t1250;
	t1420 = t1211 * t1212;
	t1020 = t1406 * t1253 + t1089 * t1374 + (t1142 * t1077 + 0.4e1 * t1348) * t1209 + (t1388 * t1420 + (t1128 * t1211 + 0.4e1 * t1142 * t1450) * pkin(2)) * t1210;
	t1082 = t1089 * pkin(3);
	t1325 = t1022 * t1460;
	t1273 = t1009 * t1325 + t1023 * t1457;
	t1270 = t1273 * t1480;
	t1323 = t1022 * t1459;
	t1444 = t1008 - (-t1082 * t1270 + (t1003 * t1325 + t1019 * t1457 - t1023 * t1439 / 0.2e1 + (t1010 * t1323 + t1020 * t1460) * t1009) * t1059) * t1415;
	t1349 = pkin(2) * t1420;
	t1301 = pkin(1) * t1349;
	t1105 = -0.4e1 * t1246 * t1209 * t1301;
	t1119 = t1301 * t1482;
	t1157 = pkin(1) * t1166;
	t1146 = 0.2e1 * t1157;
	t1418 = t1212 * t1250;
	t1367 = -0.4e1 * t1418;
	t1292 = t1210 * t1367;
	t1101 = t1146 + t1292;
	t1423 = t1209 * t1212;
	t1352 = pkin(2) * t1423;
	t1299 = pkin(3) * t1352;
	t1380 = -0.4e1 * t1165;
	t1440 = (t1101 * t1364 + (t1157 - t1299) * t1302 + 0.4e1 * t1095 * t1299 + (pkin(2) * t1076 * t1380 - 0.8e1 * t1148 * t1212 + (t1129 * t1473 + t1345 * t1478) * pkin(1)) * t1210) * t1031;
	t1321 = t1440 / 0.2e1;
	t1329 = t1160 * t1409;
	t1425 = t1179 * t1257;
	t1330 = t1143 * t1425;
	t1355 = pkin(1) * t1419;
	t1426 = t1178 * t1258;
	t1004 = t1016 * t1321 + (-0.32e2 * t1105 * t1114 + 0.8e1 * t1119 * t1253) * t1331 + (0.24e2 * (0.4e1 * t1093 * t1426 * t1449 + t1027 * t1418 - t1043 * t1330) * t1253 + (-0.6e1 * t1024 * t1418 + 0.12e2 * t1037 * t1330 - 0.8e1 * t1055 * t1426) * t1470) * t1210 + ((t1012 + (t1026 * t1470 - 0.6e1 * t1028 * t1253) * t1143) * t1210 + (((t1107 * t1362 + t1109 * t1336 + t1284) * t1338 + t1110 * t1297 + t1066 * t1365 - 0.6e1 * t1057 * t1375 + (t1476 * t1369 + (t1112 * t1336 - 0.8e1 * t1120 * t1413 + t1057 - 0.8e1 * t1357) * t1383) * t1143 + t1277) * t1253 + ((-pkin(1) * t1286 - t1176 * t1287 + t1211 * t1298 + t1303) * t1359 + t1291 * t1469 - 0.12e2 * t1134 * t1329 + t1355 * t1472 - t1447 + (-0.4e1 * (-(2 * t1344) - 0.4e1 * t1409) * t1427 - (pkin(3) * t1472 - 0.24e2 * t1134 * t1355 - 0.24e2 * t1329) * t1452) * t1143) * t1209 * t1470) * t1212) * pkin(2);
	t1011 = (t1119 * t1361 + (t1049 * t1368 + t1150 * t1176 + ((-t1393 + t1363) * t1361 - t1096 + (t1154 * t1380 + t1371) * pkin(1)) * pkin(2)) * t1212 + ((t1119 + (t1154 - 0.2e1 * t1413) * t1452) * t1384 + (-0.24e2 * t1425 * t1449 + t1387) * t1210) * t1143) * t1253 + t1025 * t1321 + t1021 * t1166 + 0.6e1 * t1114 * (0.4e1 * t1097 * t1210 * t1330 + (t1105 + (-0.8e1 / 0.3e1 * t1409 + t1377) * t1352) * t1360 + t1035 * t1292 + t1160 * t1212 * t1176 * t1304 + t1113 * t1105 - t1063 * t1299 + (-(-0.8e1 * t1355 + t1382) * t1209 * t1412 + t1036 * t1166) * t1143);
	t1017 = t1087 * t1321 + t1101 * t1209 * t1379 + ((-t1209 * t1253 + t1054) * t1212 + (t1211 * t1253 + (t1142 * t1483 + t1094) * t1209 + (-pkin(3) + 0.2e1 * t1450 + t1454) * t1386) * t1210) * pkin(2);
	t1018 = (t1137 + t1349) * t1253 + t1089 * t1321 - 0.2e1 * t1101 * t1450 - (t1146 - 0.4e1 * t1299) * t1126 + t1179 * t1209 * t1388 + t1128 * t1352 + (pkin(3) * t1367 + (-t1077 * t1211 + 0.2e1 * t1455) * pkin(2)) * t1210;
	t1103 = -t1421 + t1423;
	t1078 = -t1103 * pkin(3) * pkin(2) + t1157;
	t1443 = t1008 + (t1078 * t1270 + (t1004 * t1325 + t1017 * t1457 - t1023 * t1440 / 0.8e1 + (t1011 * t1323 + t1018 * t1460) * t1009) * t1059) * t1415;
	t1007 = t1273 * t1332;
	t1102 = -t1420 - t1424;
	t1006 = t1007 * t1102;
	t1002 = -t1008 * t1103 - t1006;
	t1000 = 0.1e1 / t1002 ^ 2;
	t1005 = t1007 * t1103;
	t1001 = -t1008 * t1102 + t1005;
	t1441 = t1000 * t1001;
	t1322 = t1023 * t1459;
	t1271 = t1274 * t1480;
	t999 = 0.1e1 / t1002;
	t998 = 0.1e1 / (t1000 * t1001 ^ 2 + 0.1e1);
	t997 = (t1078 * t1271 + (t1018 * t1456 + t1022 * t1440 / 0.8e1 + t1004 * t1324 + (t1011 * t1322 + t1017 * t1460) * t1009) * t1059) * t1415;
	t995 = (-t1082 * t1271 + (t1020 * t1456 + t1022 * t1439 / 0.2e1 + t1003 * t1324 + (t1010 * t1322 + t1019 * t1460) * t1009) * t1059) * t1415;
	t1 = [0, 0, 0; 0, 0, 0; 0.1e1 + ((t1443 * t1103 + (t1007 - t997) * t1102) * t999 - (-t1443 * t1102 - t1103 * t997 + t1005) * t1441) * t998, ((-t1102 * t995 - t1444 * t1103 - t1006) * t999 - ((-t1007 - t995) * t1103 + t1444 * t1102) * t1441) * t998, 0;];
	Jg_rot = t1;
elseif link_index == 3
	%% Symbolic Calculation
	% From jacobig_rot_3_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-11 18:54:59
	% EndTime: 2020-04-11 18:54:59
	% DurationCPUTime: 0.01s
	% Computational Cost: add. (0->0), mult. (0->0), div. (0->0), fcn. (0->0), ass. (0->1)
	t1 = [0, 0, 0; 0, 0, 0; 0, 1, 0;];
	Jg_rot = t1;
elseif link_index == 4
	%% Symbolic Calculation
	% From jacobig_rot_4_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-11 18:55:01
	% EndTime: 2020-04-11 18:55:02
	% DurationCPUTime: 0.58s
	% Computational Cost: add. (1788->105), mult. (3903->181), div. (28->6), fcn. (958->6), ass. (0->81)
	t302 = -4 * pkin(2);
	t257 = pkin(2) ^ 2;
	t251 = cos(qJ(1));
	t293 = pkin(2) * t251;
	t276 = pkin(1) * t293;
	t243 = -0.2e1 * t276;
	t258 = pkin(1) ^ 2;
	t279 = t243 + t258;
	t247 = t251 ^ 2;
	t299 = 0.2e1 * t247;
	t233 = t257 * t299 - t257 + t279;
	t301 = -0.2e1 * t233;
	t241 = pkin(1) - t293;
	t300 = 0.2e1 * t241;
	t298 = (-pkin(4) - pkin(6));
	t297 = (-pkin(4) + pkin(6));
	t248 = sin(qJ(2));
	t249 = sin(qJ(1));
	t284 = t248 * t249;
	t240 = pkin(2) * t284;
	t267 = pkin(3) * t240;
	t239 = -0.2e1 * t267;
	t256 = pkin(3) ^ 2;
	t250 = cos(qJ(2));
	t235 = t241 * t250;
	t271 = pkin(3) * t235;
	t224 = t239 + t256 + t257 + 0.2e1 * t271 + t279;
	t222 = 0.1e1 / t224;
	t296 = t222 / 0.2e1;
	t295 = pkin(1) * (t240 - pkin(3));
	t294 = pkin(2) * t249;
	t292 = pkin(3) * t241;
	t246 = t250 ^ 2;
	t291 = pkin(3) * t246;
	t290 = pkin(3) * t250;
	t223 = 0.1e1 / t224 ^ 2;
	t245 = pkin(1) * t294;
	t282 = t249 * t250;
	t283 = t248 * t251;
	t289 = t223 * (t245 + (t282 - t283) * pkin(3) * pkin(2));
	t230 = pkin(2) * t282 + t248 * t241;
	t288 = t223 * t230 * pkin(3);
	t254 = pkin(4) ^ 2;
	t278 = -pkin(6) ^ 2 + t258;
	t270 = t257 + t278;
	t264 = t256 + t270;
	t237 = -t254 + t264;
	t232 = t243 + t237;
	t225 = t239 + t232;
	t244 = (t256 - t258) * t257;
	t263 = t246 * t301 - t278;
	t259 = sqrt(0.4e1 * t244 * t247 + 0.4e1 * t237 * t276 - (t258 + ((pkin(2) - t297) * (pkin(2) + t297))) * (t258 + ((pkin(2) - t298) * (pkin(2) + t298))) + 0.4e1 * (-t225 * t235 + t232 * t240) * pkin(3) + (0.2e1 * t254 - (6 * t257) + 0.2e1 * t263 - t256) * t256);
	t287 = t230 * t259;
	t286 = t233 * t250;
	t285 = t246 * t256;
	t281 = t250 * t251;
	t280 = -t240 + t235;
	t277 = -0.2e1 * pkin(1) * t257;
	t217 = 0.1e1 / t259;
	t275 = 0.2e1 * t217 * ((t225 * t292 + 0.2e1 * t256 * t286) * t248 + (t232 * t290 + t285 * t300) * t294);
	t274 = -0.4e1 * t251 * t257;
	t273 = pkin(2) * t283;
	t272 = pkin(3) * t286;
	t242 = 0.2e1 * t245;
	t234 = t249 * t274 + t242;
	t266 = pkin(3) * t273;
	t268 = -0.8e1 * t271;
	t269 = (-0.4e1 * t234 * t285 + (t245 - t266) * t268 + 0.4e1 * t232 * t266 + (t225 * t290 * t302 - 0.8e1 * t244 * t251 + (0.8e1 * pkin(3) * t257 * t284 + t237 * t302) * pkin(1)) * t249) * t217 / 0.2e1;
	t236 = 0.3e1 * t256 + t254 + t270;
	t226 = t236 + t243 - 0.4e1 * t267;
	t213 = -t226 * t235 + t287 + (t236 * t284 - 0.2e1 * t251 * t295) * pkin(2) + (-t254 - t256 + (t299 - 0.3e1) * t257 + t263) * pkin(3);
	t212 = 0.1e1 / t213 ^ 2;
	t231 = t243 + t254 + t264;
	t220 = t231 * t241 + 0.2e1 * t272;
	t221 = t231 * t250 + (0.4e1 * t246 - 0.2e1) * t292;
	t229 = pkin(3) + t280;
	t214 = t220 * t248 + t221 * t294 + t229 * t259;
	t265 = 0.1e1 / (t212 * t214 ^ 2 + 0.1e1) * t224;
	t262 = 0.1e1 / t213 * t265;
	t261 = t212 * t214 * t265;
	t1 = [0, 0, 0; 0, 0, 0; 0.2e1 * ((0.2e1 * t234 * t248 * t290 + t229 * t269) * t296 - t214 * t289 + ((-t248 * t259 + t221) * t251 * t296 + (t250 * t259 / 0.2e1 + (pkin(1) * t300 + t231) * t248 / 0.2e1 + (pkin(1) * t250 - pkin(3) + 0.2e1 * t291) * t294) * t222 * t249) * pkin(2)) * t262 - 0.2e1 * (((pkin(2) * t281 + t240) * t259 + t230 * t269 - 0.2e1 * t234 * t291 - (t242 - 0.4e1 * t266) * t235 + t247 * t248 * t277 + t236 * t273 + (pkin(3) * t274 + (-t226 * t250 + 0.2e1 * t295) * pkin(2)) * t249) * t296 - t213 * t289) * t261, 0.1e1 + 0.2e1 * ((-t287 + t229 * t275 + t220 * t250 + ((-t231 + t268) * t294 + pkin(3) * t248 * t301) * t248) * t296 + t214 * t288) * t262 - 0.2e1 * ((t280 * t259 + t230 * t275 + (t226 * t241 + 0.4e1 * t272) * t248 + (t277 * t281 + (t236 * t250 + 0.4e1 * t241 * t291) * pkin(2)) * t249) * t296 + t213 * t288) * t261, 0;];
	Jg_rot = t1;
elseif link_index == 5
	%% Symbolic Calculation
	% From jacobig_rot_5_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-11 18:55:03
	% EndTime: 2020-04-11 18:55:04
	% DurationCPUTime: 0.58s
	% Computational Cost: add. (1788->105), mult. (3903->181), div. (28->6), fcn. (958->6), ass. (0->81)
	t346 = -4 * pkin(2);
	t301 = pkin(2) ^ 2;
	t295 = cos(qJ(1));
	t337 = pkin(2) * t295;
	t320 = pkin(1) * t337;
	t287 = -0.2e1 * t320;
	t302 = pkin(1) ^ 2;
	t323 = t287 + t302;
	t291 = t295 ^ 2;
	t343 = 0.2e1 * t291;
	t277 = t301 * t343 - t301 + t323;
	t345 = -0.2e1 * t277;
	t285 = pkin(1) - t337;
	t344 = 0.2e1 * t285;
	t342 = (-pkin(4) - pkin(6));
	t341 = (-pkin(4) + pkin(6));
	t292 = sin(qJ(2));
	t293 = sin(qJ(1));
	t328 = t292 * t293;
	t284 = pkin(2) * t328;
	t311 = pkin(3) * t284;
	t283 = -0.2e1 * t311;
	t300 = pkin(3) ^ 2;
	t294 = cos(qJ(2));
	t279 = t285 * t294;
	t315 = pkin(3) * t279;
	t268 = t283 + t300 + t301 + 0.2e1 * t315 + t323;
	t266 = 0.1e1 / t268;
	t340 = t266 / 0.2e1;
	t339 = pkin(1) * (t284 - pkin(3));
	t338 = pkin(2) * t293;
	t336 = pkin(3) * t285;
	t290 = t294 ^ 2;
	t335 = pkin(3) * t290;
	t334 = pkin(3) * t294;
	t267 = 0.1e1 / t268 ^ 2;
	t289 = pkin(1) * t338;
	t326 = t293 * t294;
	t327 = t292 * t295;
	t333 = t267 * (t289 + (t326 - t327) * pkin(3) * pkin(2));
	t274 = pkin(2) * t326 + t285 * t292;
	t332 = t267 * t274 * pkin(3);
	t298 = pkin(4) ^ 2;
	t322 = -pkin(6) ^ 2 + t302;
	t314 = t301 + t322;
	t308 = t300 + t314;
	t281 = -t298 + t308;
	t276 = t287 + t281;
	t269 = t283 + t276;
	t288 = (t300 - t302) * t301;
	t307 = t290 * t345 - t322;
	t303 = sqrt(0.4e1 * t288 * t291 + 0.4e1 * t281 * t320 - (t302 + ((pkin(2) - t341) * (pkin(2) + t341))) * (t302 + ((pkin(2) - t342) * (pkin(2) + t342))) + 0.4e1 * (-t269 * t279 + t276 * t284) * pkin(3) + (0.2e1 * t298 - (6 * t301) + 0.2e1 * t307 - t300) * t300);
	t331 = t274 * t303;
	t330 = t277 * t294;
	t329 = t290 * t300;
	t325 = t294 * t295;
	t324 = -t284 + t279;
	t321 = -0.2e1 * pkin(1) * t301;
	t261 = 0.1e1 / t303;
	t319 = 0.2e1 * t261 * ((t269 * t336 + 0.2e1 * t300 * t330) * t292 + (t276 * t334 + t329 * t344) * t338);
	t318 = -0.4e1 * t295 * t301;
	t317 = pkin(2) * t327;
	t316 = pkin(3) * t330;
	t286 = 0.2e1 * t289;
	t278 = t293 * t318 + t286;
	t310 = pkin(3) * t317;
	t312 = -0.8e1 * t315;
	t313 = (-0.4e1 * t278 * t329 + (t289 - t310) * t312 + 0.4e1 * t276 * t310 + (t269 * t334 * t346 - 0.8e1 * t288 * t295 + (0.8e1 * pkin(3) * t301 * t328 + t281 * t346) * pkin(1)) * t293) * t261 / 0.2e1;
	t280 = 0.3e1 * t300 + t298 + t314;
	t270 = t280 + t287 - 0.4e1 * t311;
	t257 = -t270 * t279 + t331 + (t280 * t328 - 0.2e1 * t295 * t339) * pkin(2) + (-t298 - t300 + (t343 - 0.3e1) * t301 + t307) * pkin(3);
	t256 = 0.1e1 / t257 ^ 2;
	t275 = t287 + t298 + t308;
	t264 = t275 * t285 + 0.2e1 * t316;
	t265 = t275 * t294 + (0.4e1 * t290 - 0.2e1) * t336;
	t273 = pkin(3) + t324;
	t258 = t264 * t292 + t265 * t338 + t273 * t303;
	t309 = 0.1e1 / (t256 * t258 ^ 2 + 0.1e1) * t268;
	t306 = 0.1e1 / t257 * t309;
	t305 = t256 * t258 * t309;
	t1 = [0, 0, 0; 0, 0, 0; 0.2e1 * ((0.2e1 * t278 * t292 * t334 + t273 * t313) * t340 - t258 * t333 + ((-t292 * t303 + t265) * t295 * t340 + (t294 * t303 / 0.2e1 + (pkin(1) * t344 + t275) * t292 / 0.2e1 + (pkin(1) * t294 - pkin(3) + 0.2e1 * t335) * t338) * t266 * t293) * pkin(2)) * t306 - 0.2e1 * (((pkin(2) * t325 + t284) * t303 + t274 * t313 - 0.2e1 * t278 * t335 - (t286 - 0.4e1 * t310) * t279 + t291 * t292 * t321 + t280 * t317 + (pkin(3) * t318 + (-t270 * t294 + 0.2e1 * t339) * pkin(2)) * t293) * t340 - t257 * t333) * t305, 0.1e1 + 0.2e1 * ((-t331 + t273 * t319 + t264 * t294 + ((-t275 + t312) * t338 + pkin(3) * t292 * t345) * t292) * t340 + t258 * t332) * t306 - 0.2e1 * ((t324 * t303 + t274 * t319 + (t285 * t270 + 0.4e1 * t316) * t292 + (t321 * t325 + (t280 * t294 + 0.4e1 * t285 * t335) * pkin(2)) * t293) * t340 + t257 * t332) * t305, 1;];
	Jg_rot = t1;
elseif link_index == 6
	%% Symbolic Calculation
	% From jacobig_rot_6_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-11 18:55:25
	% EndTime: 2020-04-11 18:55:35
	% DurationCPUTime: 9.46s
	% Computational Cost: add. (11943->596), mult. (36218->933), div. (52->11), fcn. (4345->6), ass. (0->398)
	t1251 = pkin(2) ^ 2;
	t1247 = pkin(3) ^ 2;
	t1253 = pkin(1) ^ 2;
	t1391 = t1247 - t1253;
	t1149 = t1391 * t1251;
	t1205 = t1247 / 0.3e1;
	t1240 = pkin(6) ^ 2;
	t1243 = pkin(4) ^ 2;
	t1210 = sin(qJ(2));
	t1211 = sin(qJ(1));
	t1419 = t1210 * t1211;
	t1141 = pkin(2) * t1419;
	t1306 = pkin(3) * t1141;
	t1086 = -0.4e1 / 0.9e1 * t1306 + t1253 + t1251 / 0.3e1 + t1205 + t1243 / 0.9e1 - t1240 / 0.9e1;
	t1189 = -t1240 / 0.6e1;
	t1208 = t1251 / 0.2e1;
	t1398 = t1208 + t1253;
	t1274 = -t1306 + t1398;
	t1094 = t1243 / 0.6e1 + t1189 + t1274;
	t1191 = -t1240 / 0.3e1;
	t1199 = t1243 / 0.3e1;
	t1389 = t1251 + t1253;
	t1316 = t1247 + t1389;
	t1117 = t1191 + t1199 + t1316;
	t1136 = -0.2e1 * t1306;
	t1160 = -t1247 / 0.3e1 + t1253;
	t1212 = cos(qJ(2));
	t1166 = pkin(3) * t1212;
	t1177 = t1212 ^ 2;
	t1410 = t1247 * t1177;
	t1413 = (pkin(1) + pkin(3)) * (pkin(1) - pkin(3));
	t1176 = t1212 * t1177;
	t1262 = pkin(3) * t1247;
	t1422 = t1176 * t1262;
	t1438 = 0.4e1 * pkin(1);
	t1041 = t1160 * t1136 + 0.6e1 * t1086 * t1410 + t1117 * t1413 + (t1094 * t1166 + t1422) * t1438;
	t1226 = 0.6e1 * t1247;
	t1292 = -0.4e1 * t1306;
	t1193 = -0.2e1 / 0.3e1 * t1240;
	t1198 = 0.2e1 / 0.3e1 * t1243;
	t1237 = 0.2e1 * t1253;
	t1319 = t1193 + t1198 + t1237;
	t1170 = t1247 + t1253;
	t1259 = t1251 ^ 2;
	t1318 = t1193 + t1170;
	t1404 = (t1198 + t1318) * t1170 + t1259;
	t1053 = t1117 * t1292 + (t1226 + t1319) * t1251 + t1404;
	t1092 = t1136 + t1117;
	t1390 = -t1251 + t1253;
	t1150 = t1390 * t1247;
	t1376 = pkin(1) * t1166;
	t1339 = 0.4e1 * t1376;
	t1461 = 0.4e1 * t1177;
	t1042 = t1092 * t1339 + t1150 * t1461 + t1053;
	t1161 = t1253 - t1251 / 0.3e1;
	t1105 = t1161 * t1136;
	t1412 = (pkin(1) + pkin(2)) * (pkin(1) - pkin(2));
	t1067 = t1117 * t1412 + t1105;
	t1164 = 0.10e2 / 0.3e1 * t1247;
	t1069 = (t1164 + t1319) * t1251 + t1404;
	t1146 = 0.2e1 * t1376;
	t1172 = -0.3e1 * t1247 + t1253;
	t1365 = 0.4e1 * t1410;
	t1469 = t1172 + t1365;
	t1103 = t1146 + t1469;
	t1231 = -0.3e1 * t1251;
	t1173 = t1231 + t1253;
	t1357 = pkin(1) * t1422;
	t1310 = 0.8e1 * t1357;
	t1121 = t1173 * t1310;
	t1386 = t1253 - t1240;
	t1315 = t1247 + t1386;
	t1139 = t1243 + t1315;
	t1163 = t1170 ^ 2;
	t1213 = cos(qJ(1));
	t1180 = t1213 ^ 2;
	t1245 = t1247 ^ 2;
	t1218 = 0.15e2 * t1245;
	t1219 = 0.15e2 * t1247;
	t1252 = t1253 ^ 2;
	t1233 = 0.3e1 * t1252;
	t1258 = pkin(2) * t1251;
	t1248 = t1258 ^ 2;
	t1144 = pkin(1) + t1166;
	t1179 = t1213 * t1180;
	t1420 = t1179 * t1258;
	t1334 = t1144 * t1420;
	t1300 = -0.8e1 * t1334;
	t1236 = 0.3e1 * t1253;
	t1393 = -t1240 + t1243;
	t1317 = t1236 + t1393;
	t1338 = 0.6e1 * t1376;
	t1342 = 0.12e2 * t1410;
	t1348 = pkin(3) * t1419;
	t1428 = t1144 * t1213;
	t1025 = t1103 * t1300 + t1121 + t1067 * t1342 + t1053 * t1338 + t1248 + (t1219 + t1317) * t1259 + t1163 * t1139 + (0.12e2 * t1041 * t1180 + t1226 * t1317 + t1237 * t1393 + t1218 + t1233) * t1251 + 0.6e1 * (-t1042 * t1428 - t1069 * t1348) * pkin(2);
	t1227 = 0.3e1 * t1247;
	t1155 = t1227 + t1389;
	t1167 = pkin(2) * t1211;
	t1122 = t1155 * t1167;
	t1444 = pkin(3) * t1210;
	t1127 = t1167 - t1444;
	t1354 = t1247 * t1167;
	t1294 = t1177 * t1354;
	t1230 = 0.3e1 * t1251;
	t1153 = t1230 + t1170;
	t1426 = t1153 * t1210;
	t1449 = pkin(1) * t1212;
	t1054 = -0.2e1 * t1294 + t1122 + (0.2e1 * t1127 * t1449 - t1426) * pkin(3);
	t1475 = 0.2e1 * t1247;
	t1169 = t1475 + t1251;
	t1119 = -t1210 * t1262 + t1354;
	t1429 = t1119 * t1177;
	t1055 = t1169 * t1444 + 0.2e1 * t1429 + (-t1391 + t1146) * t1167;
	t1085 = -pkin(3) * t1426 + t1122;
	t1458 = 0.4e1 * t1245;
	t1151 = pkin(2) * t1458 + 0.8e1 * t1247 * t1258;
	t1329 = t1262 * t1412;
	t1087 = t1151 * t1211 + 0.4e1 * t1210 * t1329;
	t1220 = 0.10e2 * t1247;
	t1229 = 0.5e1 * t1259;
	t1108 = t1229 + (t1220 + 0.6e1 * t1253) * t1251 + t1163;
	t1224 = 0.5e1 * t1245;
	t1387 = t1252 + t1259;
	t1396 = t1220 + t1237;
	t1407 = t1253 * t1247;
	t1474 = -0.6e1 * t1407;
	t1280 = -t1396 * t1251 - t1224 + t1310 - t1387 + t1474;
	t1298 = 0.8e1 * t1334;
	t1409 = t1251 * t1180;
	t1364 = -0.4e1 * t1409;
	t1031 = t1055 * t1364 + t1087 * t1177 + (-0.4e1 * t1085 * t1449 + (t1108 + t1298) * t1210) * pkin(3) + (0.4e1 * t1054 * t1428 + t1211 * t1280) * pkin(2);
	t1447 = pkin(2) * t1213;
	t1143 = pkin(1) - t1447;
	t1118 = t1143 + t1166;
	t1314 = t1251 + t1386;
	t1281 = t1247 + t1314;
	t1133 = -t1243 + t1281;
	t1377 = pkin(1) * t1447;
	t1148 = -0.2e1 * t1377;
	t1101 = t1148 + t1133;
	t1082 = t1136 + t1101;
	t1130 = t1143 * t1212;
	t1363 = 0.2e1 * t1409;
	t1104 = t1148 + t1363 + t1390;
	t1464 = -0.2e1 * t1104;
	t1279 = t1177 * t1464 - t1386;
	t1454 = -pkin(4) + pkin(6);
	t1455 = -pkin(4) - pkin(6);
	t1478 = 0.4e1 * pkin(3);
	t1038 = 0.4e1 * t1149 * t1180 + 0.4e1 * t1133 * t1377 - t1245 - (t1253 + (pkin(2) - t1454) * (pkin(2) + t1454)) * (t1253 + (pkin(2) - t1455) * (pkin(2) + t1455)) + (t1231 + t1243 + t1279) * t1475 + (-t1082 * t1130 + t1101 * t1141) * t1478;
	t1254 = sqrt(t1038);
	t1022 = t1025 * t1118 + t1031 * t1254;
	t1481 = t1022 ^ 2;
	t1480 = 0.2e1 * pkin(1);
	t1479 = 0.2e1 * pkin(3);
	t1366 = 0.2e1 * t1410;
	t1415 = t1212 * t1247;
	t1446 = pkin(3) * t1143;
	t1477 = 0.2e1 * (t1082 * t1446 + 0.2e1 * t1104 * t1415) * t1210 + 0.2e1 * (t1101 * t1166 + t1143 * t1366) * t1167;
	t1476 = 0.8e1 * t1118;
	t1158 = pkin(1) * t1167;
	t1147 = 0.2e1 * t1158;
	t1414 = t1213 * t1251;
	t1330 = t1211 * t1414;
	t1297 = -0.4e1 * t1330;
	t1107 = t1147 + t1297;
	t1418 = t1210 * t1213;
	t1355 = pkin(2) * t1418;
	t1305 = pkin(3) * t1355;
	t1350 = pkin(3) * t1130;
	t1308 = -0.8e1 * t1350;
	t1367 = -0.4e1 * t1410;
	t1466 = -0.4e1 * pkin(2);
	t1473 = t1107 * t1367 / 0.2e1 + (t1158 - t1305) * t1308 / 0.2e1 + 0.2e1 * t1101 * t1305 + (t1082 * t1166 * t1466 - 0.8e1 * t1149 * t1213 + (t1133 * t1466 + 0.8e1 * t1251 * t1348) * pkin(1)) * t1211 / 0.2e1;
	t1472 = t1118 * t1210;
	t1125 = t1253 + t1251 / 0.4e1 + t1247 / 0.4e1 - t1240 / 0.8e1;
	t1239 = t1240 ^ 2;
	t1242 = t1243 ^ 2;
	t1397 = 0.4e1 / 0.7e1 * t1253 - t1240 / 0.7e1;
	t1408 = t1253 * t1240;
	t1047 = -0.32e2 / 0.21e2 * t1125 * t1306 + t1259 / 0.7e1 + (0.16e2 / 0.21e2 * t1247 + t1397) * t1251 + t1245 / 0.7e1 + t1397 * t1247 + t1252 - 0.3e1 / 0.7e1 * t1408 + t1239 / 0.42e2 - t1242 / 0.42e2;
	t1190 = -t1240 / 0.4e1;
	t1126 = t1190 + t1205 + t1398;
	t1204 = 0.4e1 / 0.3e1 * t1247;
	t1451 = 0.4e1 / 0.3e1 * t1251;
	t1051 = -0.8e1 / 0.3e1 * t1126 * t1306 + t1259 / 0.3e1 + (t1204 + t1191) * t1251 + t1252 - t1245 / 0.3e1 + (t1451 + 0.2e1 / 0.3e1 * t1247 + t1193) * t1253 + t1239 / 0.18e2 - t1242 / 0.18e2;
	t1392 = t1245 + t1252;
	t1395 = t1237 - t1240;
	t1467 = -t1239 / 0.6e1 + t1242 / 0.6e1;
	t1096 = t1395 * t1247 + t1392 - t1408 - t1467;
	t1206 = t1247 / 0.2e1;
	t1098 = -0.2e1 / 0.3e1 * t1306 + t1253 + t1206 + t1190;
	t1235 = 0.4e1 * t1253;
	t1156 = (t1235 + t1240) * t1247;
	t1162 = t1253 - 0.2e1 / 0.3e1 * t1251;
	t1192 = -t1240 / 0.2e1;
	t1138 = t1192 + t1316;
	t1276 = t1138 * t1292;
	t1344 = 0.16e2 * t1422;
	t1175 = t1177 ^ 2;
	t1411 = t1245 * t1175;
	t1369 = 0.8e1 * t1411;
	t1030 = t1162 * t1369 + 0.14e2 * t1047 * t1410 + t1160 * t1276 - t1391 * t1259 + (t1156 - 0.10e2 / 0.3e1 * t1245 + 0.2e1 * t1252 - t1408) * t1251 + t1096 * t1413 + (0.6e1 * t1051 * t1166 + t1098 * t1344) * pkin(1);
	t1402 = t1239 / 0.2e1 - t1242 / 0.2e1;
	t1285 = -0.3e1 * t1408 + t1233 + t1402;
	t1194 = -0.3e1 / 0.2e1 * t1240;
	t1399 = t1194 + t1236;
	t1405 = ((t1194 + t1237) * t1247 - 0.3e1 / 0.2e1 * t1408 + t1392 + t1402) * t1170 + t1248;
	t1271 = t1096 + t1259;
	t1070 = (t1164 + t1395) * t1251 + t1271;
	t1465 = -0.6e1 * t1070;
	t1040 = t1306 * t1465 + (t1218 + (-0.9e1 * t1240 + 0.18e2 * t1253) * t1247 + t1285) * t1251 + (t1219 + t1399) * t1259 + t1405;
	t1056 = t1276 + (t1226 + t1395) * t1251 + t1271;
	t1073 = t1138 * t1412 + t1105;
	t1032 = t1056 * t1338 + t1073 * t1342 + t1040 + t1121;
	t1221 = -0.2e1 * t1240;
	t1234 = 0.8e1 * t1253;
	t1091 = -0.4e1 * t1262 * t1141 + t1458 + (0.4e1 * t1251 + t1221 + t1234) * t1247;
	t1097 = t1190 - t1247 + t1274;
	t1379 = 0.4e1 * t1166;
	t1043 = t1136 * t1413 + t1091 * t1177 + t1138 * t1172 + (t1097 * t1379 + 0.8e1 * t1422) * pkin(1);
	t1388 = t1252 - t1245;
	t1045 = t1161 * t1276 - t1248 + (-t1164 - t1386) * t1259 + (t1156 + t1388 + t1467) * t1251 + t1253 * t1096;
	t1222 = -0.5e1 * t1240;
	t1223 = 0.7e1 * t1245;
	t1225 = 0.7e1 * t1247;
	t1050 = (t1225 + t1399) * t1259 + (t1223 + (t1222 + 0.10e2 * t1253) * t1247 + t1285) * t1251 + t1405;
	t1255 = pkin(1) * t1253;
	t1142 = -0.12e2 * pkin(1) * t1262 + t1255 * t1478;
	t1159 = -0.8e1 * t1245 + 0.12e2 * t1407;
	t1301 = pkin(1) * t1344;
	t1061 = t1142 * t1212 + t1159 * t1177 + t1301 + t1369 + t1392 + t1474;
	t1076 = t1136 * t1412 + t1138 * t1173;
	t1131 = (-0.6e1 * t1251 * t1253 + t1387) * t1245;
	t1165 = -0.30e2 * t1240 + 0.60e2 * t1253;
	t1178 = t1180 ^ 2;
	t1394 = t1239 - t1242;
	t1284 = -0.6e1 * t1408 + 0.6e1 * t1252 + t1394;
	t1425 = t1163 * (-t1243 + t1315);
	t1443 = t1040 * pkin(3);
	t1459 = 0.8e1 * t1212;
	t1018 = -0.32e2 * t1043 * t1334 + 0.16e2 * t1131 * t1175 + 0.24e2 * t1045 * t1410 + (t1221 + t1235 + 0.28e2 * t1247) * t1248 + t1139 * t1425 + (0.24e2 * t1030 * t1180 + t1165 * t1245 + t1226 * t1284 + t1237 * t1394 - 0.6e1 * t1252 * t1240 + 0.4e1 * t1255 ^ 2 + 0.28e2 * t1262 ^ 2) * t1251 + 0.8e1 * (-t1032 * t1428 - t1050 * t1348) * pkin(2) + (0.32e2 * t1076 * t1422 + t1443 * t1459) * pkin(1) + (0.16e2 * t1061 * t1178 + t1165 * t1247 + 0.70e2 * t1245 + t1259 + t1284) * t1259;
	t1401 = t1189 - t1243 / 0.6e1;
	t1322 = t1253 + t1401;
	t1110 = t1451 + t1206 + t1322;
	t1283 = t1208 + t1322;
	t1111 = t1204 + t1283;
	t1062 = -t1110 * t1444 + t1111 * t1167;
	t1113 = t1247 + t1283;
	t1457 = 0.2e1 * t1251;
	t1154 = t1457 - t1391;
	t1074 = t1113 * t1167 - t1154 * t1444 / 0.2e1;
	t1468 = t1191 - t1243 / 0.3e1;
	t1321 = t1253 + t1468;
	t1323 = t1240 / 0.3e1 + t1199 + t1237;
	t1286 = -0.8e1 / 0.3e1 * t1411 - t1149 - 0.5e1 / 0.3e1 * t1245 + t1323 * t1247 + t1253 * t1321;
	t1324 = 0.2e1 / 0.3e1 * t1240 + t1198 + t1235;
	t1325 = 0.4e1 / 0.3e1 * t1240 + 0.4e1 / 0.3e1 * t1243 - 0.2e1 * t1253;
	t1336 = 0.20e2 / 0.3e1 * t1247;
	t1346 = -(-t1259 + (t1324 - t1336) * t1251 - 0.3e1 * t1245 + t1325 * t1247 + t1252) * pkin(3) / 0.2e1;
	t1423 = t1176 * t1245;
	t1033 = t1062 * t1365 + t1210 * t1346 + t1286 * t1167 + (t1074 * t1166 - t1210 * t1423) * t1438;
	t1203 = -0.2e1 / 0.3e1 * t1243;
	t1400 = t1193 + t1203;
	t1168 = -t1240 - t1243;
	t1152 = t1236 + t1168;
	t1427 = t1152 * t1247;
	t1063 = t1259 + (t1396 + t1400) * t1251 + t1224 + 0.2e1 * t1427 + t1253 * (t1253 + t1400);
	t1075 = t1229 + (0.5e1 * t1247 + t1152) * t1457 + (t1203 + t1318) * t1170;
	t1044 = t1063 * t1167 - t1075 * t1444;
	t1282 = t1247 + t1321;
	t1115 = t1230 + t1282;
	t1116 = t1155 + t1468;
	t1064 = -t1115 * t1444 + t1116 * t1167;
	t1124 = t1206 + t1251 + t1401;
	t1079 = 0.2e1 * t1124 * t1167 + t1412 * t1444;
	t1353 = t1262 * t1167;
	t1462 = -0.8e1 * t1176;
	t1034 = t1079 * t1367 + (t1064 * t1379 + t1353 * t1462) * pkin(1) + t1044;
	t1072 = -0.3e1 * t1259 + (t1325 - t1336) * t1251 + t1324 * t1247 + t1388;
	t1080 = -0.5e1 / 0.3e1 * t1259 + (-t1247 + t1323) * t1251 + t1253 * t1282;
	t1381 = -0.2e1 * t1444;
	t1046 = t1072 * t1167 + t1080 * t1381;
	t1320 = t1192 - t1243 / 0.2e1 + t1253;
	t1112 = 0.3e1 / 0.2e1 * t1251 + t1227 + t1320;
	t1128 = t1167 + 0.2e1 * t1444;
	t1049 = t1172 * t1167 + 0.4e1 * t1429 + (t1112 * t1210 + t1128 * t1449) * t1479;
	t1114 = t1230 + 0.3e1 / 0.2e1 * t1247 + t1320;
	t1078 = t1114 * t1167 + t1173 * t1444 / 0.2e1;
	t1129 = 0.10e2 * t1427;
	t1424 = t1168 * t1253;
	t1277 = 0.24e2 * t1161 * t1411 - t1248 - (0.21e2 * t1247 + t1152) * t1259 - (t1129 + t1233 + 0.35e2 * t1245 + 0.2e1 * t1424) * t1251 - (t1223 + (t1222 + t1234 - 0.5e1 * t1243) * t1247 + t1253 * (-t1243 + t1386)) * t1170;
	t1341 = -0.12e2 * t1409;
	t1368 = -0.6e1 * t1410;
	t1099 = 0.4e1 / 0.3e1 * t1410 + t1146 + t1160;
	t1421 = t1178 * t1259;
	t1470 = 0.7e1 * t1248 + (t1225 + t1152) * t1229 + (t1129 + 0.21e2 * t1245 + 0.9e1 * t1252 + 0.6e1 * t1424) * t1251 + t1425 - 0.24e2 * t1099 * t1421;
	t1023 = t1078 * t1301 + t1049 * t1298 + t1033 * t1341 + t1046 * t1368 + (-0.6e1 * t1044 * t1449 + t1210 * t1470) * pkin(3) + (0.6e1 * t1034 * t1428 + t1211 * t1277) * pkin(2);
	t1017 = t1018 * t1118 + t1023 * t1254;
	t1437 = 0.1e1 / t1017 ^ 2 * t1481;
	t1014 = 0.1e1 / (t1038 * t1437 + 0.1e1);
	t1471 = -0.2e1 * t1014 * t1254 * t1437;
	t1463 = -0.4e1 * t1117;
	t1460 = -0.8e1 * t1212;
	t1456 = pkin(3) * pkin(1);
	t1020 = 0.1e1 / t1022;
	t1453 = t1020 / 0.2e1;
	t1068 = t1136 + t1148 + t1316 + 0.2e1 * t1350;
	t1065 = 0.1e1 / t1068;
	t1452 = t1065 / 0.2e1;
	t1450 = pkin(1) * (t1141 - pkin(3));
	t1448 = pkin(1) * t1245;
	t1445 = pkin(3) * t1177;
	t1442 = t1050 * pkin(3);
	t1441 = t1069 * pkin(3);
	t1440 = t1160 * pkin(3);
	t1439 = -0.2e1 * t1456;
	t1436 = t1017 / t1481;
	t1435 = t1020 * t1144;
	t1066 = 0.1e1 / t1068 ^ 2;
	t1417 = t1211 * t1212;
	t1434 = t1066 * (t1158 + (t1417 - t1418) * pkin(3) * pkin(2));
	t1095 = pkin(2) * t1417 + t1143 * t1210;
	t1433 = t1066 * t1095 * pkin(3);
	t1432 = t1095 * t1254;
	t1406 = t1262 * t1177;
	t1359 = pkin(1) * t1406;
	t1302 = -0.12e2 * t1359;
	t1431 = t1302 * t1472;
	t1430 = t1118 * t1144;
	t1416 = t1212 * t1213;
	t1403 = -t1141 + t1130;
	t1385 = -0.2e1 * pkin(1) * t1251;
	t1384 = -0.6e1 * t1447;
	t1383 = 0.6e1 * t1447;
	t1382 = pkin(3) * t1463;
	t1380 = 0.2e1 * t1166;
	t1378 = -0.2e1 * t1440;
	t1037 = 0.1e1 / t1254;
	t1375 = t1037 * t1477;
	t1374 = -0.4e1 * t1054 * t1254;
	t1373 = -0.4e1 * t1422;
	t1372 = -0.2e1 * t1422;
	t1371 = -0.8e1 * t1420;
	t1370 = 0.8e1 * t1420;
	t1362 = 0.3e1 * t1409;
	t1361 = pkin(1) * t1411;
	t1360 = pkin(1) * t1410;
	t1358 = pkin(1) * t1415;
	t1356 = t1118 * t1167;
	t1352 = pkin(2) * t1416;
	t1351 = t1104 * t1166;
	t1349 = pkin(3) * t1420;
	t1347 = pkin(3) * t1413;
	t1345 = -0.32e2 * t1423;
	t1343 = -0.64e2 * t1420;
	t1340 = 0.12e2 * t1409;
	t1337 = 0.32e2 / 0.3e1 * t1245;
	t1335 = t1144 * t1436;
	t1333 = t1161 * t1406;
	t1332 = t1161 * t1422;
	t1331 = t1179 * t1211 * t1259;
	t1328 = t1210 * t1415;
	t1327 = -t1436 / 0.2e1;
	t1326 = t1037 * t1473;
	t1313 = -0.4e1 * t1360;
	t1312 = -0.2e1 * t1360;
	t1311 = 0.4e1 * t1360;
	t1309 = -0.4e1 * t1138 * t1440;
	t1307 = pkin(1) * t1352;
	t1304 = -0.16e2 * pkin(1) * t1126 * t1247;
	t1303 = -0.48e2 * t1359;
	t1299 = -0.4e1 * t1334;
	t1296 = t1412 * t1448;
	t1132 = t1227 + t1243 + t1314;
	t1083 = t1132 + t1148 + t1292;
	t1028 = -t1083 * t1130 + t1432 + (t1132 * t1419 - 0.2e1 * t1213 * t1450) * pkin(2) + (-t1230 - t1243 - t1247 + t1279 + t1363) * pkin(3);
	t1027 = 0.1e1 / t1028 ^ 2;
	t1100 = t1148 + t1243 + t1281;
	t1057 = t1100 * t1143 + 0.2e1 * t1351;
	t1060 = t1100 * t1212 + (t1461 - 0.2e1) * t1446;
	t1093 = pkin(3) + t1403;
	t1029 = t1057 * t1210 + t1060 * t1167 + t1093 * t1254;
	t1295 = 0.1e1 / (t1027 * t1029 ^ 2 + 0.1e1) * t1068;
	t1291 = 0.64e2 / 0.3e1 * t1125 * t1262;
	t1290 = t1176 * t1337;
	t1289 = t1014 / t1017 * t1022 * t1037;
	t1288 = t1144 * t1180 * t1211 * t1258;
	t1287 = t1176 * t1329;
	t1278 = -0.24e2 * t1288;
	t1275 = 0.2e1 / t1028 * t1295;
	t1273 = -0.2e1 * t1027 * t1029 * t1295;
	t1174 = t1210 ^ 2;
	t1145 = pkin(1) * t1381;
	t1123 = t1307 * t1479;
	t1109 = -0.4e1 * t1247 * t1210 * t1307;
	t1 = [0, 0, 0; 0, 0, 0; ((t1107 * t1210 * t1380 + t1093 * t1326) * t1452 - t1029 * t1434 + ((-t1210 * t1254 + t1060) * t1213 * t1452 + (t1212 * t1254 / 0.2e1 + (t1143 * t1480 + t1100) * t1210 / 0.2e1 + (-pkin(3) + 0.2e1 * t1445 + t1449) * t1167) * t1065 * t1211) * pkin(2)) * t1275 + (((t1141 + t1352) * t1254 + t1095 * t1326 - 0.2e1 * t1107 * t1445 - (t1147 - 0.4e1 * t1305) * t1130 + t1180 * t1210 * t1385 + t1132 * t1355 + (-0.4e1 * pkin(3) * t1414 + (-t1083 * t1212 + 0.2e1 * t1450) * pkin(2)) * t1211) * t1452 - t1028 * t1434) * t1273 + t1289 * t1473 + (((0.96e2 * t1099 * t1331 * t1444 + 0.24e2 * t1033 * t1330 + t1049 * t1278 + t1123 * t1298) * t1254 + t1023 * t1326 + (-0.6e1 * t1030 * t1330 + 0.12e2 * t1043 * t1288 - 0.8e1 * t1061 * t1331 + t1109 * t1299) * t1476) * t1453 + ((t1151 * t1213 * t1177 + 0.8e1 * t1055 * t1330 + t1123 * t1364 + t1278 * t1444) * t1254 + t1031 * t1326 + 0.6e1 * t1118 * (t1041 * t1297 + 0.4e1 * t1103 * t1288 + t1109 * t1363)) * t1327 + (((-0.6e1 * t1034 * t1144 * t1254 + 0.8e1 * t1032 * t1430 + t1018) * t1453 + (0.6e1 * t1042 * t1430 + t1144 * t1374 + t1025) * t1327) * t1211 + (((t1469 * t1298 + (t1111 * t1365 + t1113 * t1339 + t1286) * t1341 + t1114 * t1301 + t1072 * t1368 - 0.6e1 * t1063 * t1376 + t1277) * t1453 + ((-t1391 + t1366) * t1364 + 0.4e1 * t1144 * t1123 - 0.4e1 * t1155 * t1376 + t1280) * t1327 + (0.3e1 * (t1116 * t1339 - 0.8e1 * t1124 * t1410 + t1063 - 0.8e1 * t1357) * t1435 - 0.2e1 * (t1155 - 0.2e1 * t1410) * t1335) * t1447) * t1254 + (0.4e1 * ((-0.2e1 * t1347 - 0.4e1 * t1406) * t1299 + (-pkin(1) * t1290 - t1177 * t1291 + t1212 * t1304 + t1309) * t1362 + t1296 * t1462 - 0.12e2 * t1138 * t1333 + t1358 * t1465 - t1442) * t1020 - 0.3e1 * ((-0.8e1 / 0.3e1 * t1406 + t1378) * t1363 - 0.4e1 * t1333 + t1358 * t1463 - t1441) * t1436 + (-0.4e1 * (pkin(3) * t1465 - 0.24e2 * t1138 * t1358 - 0.24e2 * t1333) * t1435 + 0.3e1 * (-0.8e1 * t1358 + t1382) * t1335) * t1447) * t1472) * t1213) * pkin(2)) * t1471, 0.1e1 + ((-t1432 + t1093 * t1375 + pkin(3) * t1174 * t1464 + t1057 * t1212 + (-t1100 + t1308) * t1141) * t1452 + t1029 * t1433) * t1275 + ((t1403 * t1254 + t1095 * t1375 + (t1143 * t1083 + 0.4e1 * t1351) * t1210 + (t1385 * t1416 + (t1132 * t1212 + 0.4e1 * t1143 * t1445) * pkin(2)) * t1211) * t1452 + t1028 * t1433) * t1273 + t1289 * t1477 + ((((0.12e2 * t1174 * t1177 * t1448 + t1110 * t1373 + t1154 * t1312 + t1212 * t1346 - 0.4e1 * t1361) * t1341 + 0.8e1 * t1173 * t1361 + 0.12e2 * t1080 * t1422 + 0.6e1 * t1075 * t1360 + t1470 * t1166) * t1254 + t1023 * t1375 + (((t1112 * t1380 + t1311 + t1373) * t1370 + (-t1075 * t1166 + t1115 * t1313 - 0.4e1 * t1287) * t1383) * t1254 + t1343 * t1431) * t1144 + (0.24e2 * (-pkin(1) * t1175 * t1337 - t1176 * t1291 + t1177 * t1304 + t1212 * t1309) * t1409 - 0.64e2 * t1175 * t1296 - 0.96e2 * t1138 * t1332 - 0.48e2 * t1070 * t1360 + t1442 * t1460 + ((-t1212 * t1347 + t1312 + t1372) * t1343 - 0.48e2 * (-t1070 * t1166 + t1138 * t1313 - 0.4e1 * t1332) * t1447) * t1144) * t1356 + (-pkin(3) * t1018 + (0.2e1 * (-0.2e1 * t1159 * t1212 - t1142 + t1303 + t1345) * t1421 + (-t1091 * t1212 + t1097 * t1439) * t1300 + 0.4e1 * t1043 * t1349 + (-0.28e2 * t1047 * t1415 - 0.6e1 * t1051 * t1456 + t1098 * t1303 + t1162 * t1345) * t1362 + pkin(3) * t1032 * t1447 + t1144 * (-t1056 * t1456 - 0.4e1 * t1073 * t1415 - 0.4e1 * t1173 * t1359) * t1384 + t1131 * t1462 + t1076 * t1302 - 0.6e1 * t1045 * t1415 - pkin(1) * t1443) * t1476 + ((-0.8e1 * t1062 * t1415 + t1167 * t1290) * t1341 - 0.96e2 * t1161 * t1423 * t1167 + t1078 * t1303 + 0.12e2 * t1046 * t1415 + (t1034 * t1384 + t1049 * t1371 + (-0.24e2 * t1145 + 0.64e2 * t1328) * t1421 + (0.48e2 * t1074 * t1409 + 0.6e1 * t1044) * pkin(1)) * pkin(3) + ((t1119 * t1460 + t1128 * t1439) * t1370 + (0.24e2 * pkin(1) * t1177 * t1353 - 0.4e1 * t1064 * t1456 + 0.8e1 * t1079 * t1415) * t1383) * t1144) * t1254) * t1210) * t1453 + ((t1247 * t1174 * t1371 + (t1166 * t1169 + t1372) * t1364 + 0.4e1 * t1287 + t1153 * t1311 + t1108 * t1166) * t1254 + t1031 * t1375 + t1340 * t1431 + ((-0.8e1 / 0.3e1 * t1422 + t1313 + t1212 * t1378) * t1340 - 0.24e2 * t1332 - 0.24e2 * t1117 * t1360 - 0.6e1 * t1212 * t1441) * t1356 + (0.24e2 * (-t1118 * t1173 - t1167 * t1254) * t1359 + ((0.16e2 * t1119 * t1409 - 0.2e1 * t1087) * t1254 + t1118 * (-0.144e3 * t1086 * t1409 - 0.24e2 * t1067) * t1247) * t1212 + (t1374 * t1447 - t1025 + t1118 * (t1042 * t1383 + t1103 * t1370) + ((0.8e1 * t1167 * t1409 + 0.4e1 * t1085) * t1254 + t1118 * (-0.48e2 * t1094 * t1409 - 0.6e1 * t1053)) * pkin(1)) * pkin(3)) * t1210 + ((t1349 * t1459 + 0.4e1 * ((-pkin(3) * t1153 + 0.4e1 * t1141 * t1247) * t1212 + (-t1127 * t1444 - t1410) * t1480) * t1447) * t1254 + t1118 * ((t1145 - 0.8e1 * t1328) * t1371 + ((-0.8e1 * t1150 * t1210 + t1167 * t1382) * t1212 + (-0.4e1 * t1092 * t1444 - 0.8e1 * t1294) * pkin(1)) * t1384)) * t1144) * t1327) * t1471, 0;];
	Jg_rot = t1;
else
	Jg_rot=NaN(3,3);
end