% Calculate vector of inverse dynamics joint torques for
% palh3m2DE1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [4x1]
%   Generalized joint coordinates (joint angles)
% qJD [4x1]
%   Generalized joint velocities
% qJDD [4x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [18x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[AB,BC,BE,BG,DC,DT2,EP,GH,GP,HW,OT1,T1A,T1T2,phi1,phi2,phi410,phi78,phi79]';
% m [9x1]
%   mass of all robot links (including the base)
% rSges [9x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [9x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [4x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2020-05-07 02:05
% Revision: 70b73dc947b5bf54b9f851309d04479b7d95fc8d (2020-05-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = palh3m2DE1_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(4,1),zeros(4,1),zeros(4,1),zeros(3,1),zeros(18,1),zeros(9,1),zeros(9,3),zeros(9,6)}
assert(isreal(qJ) && all(size(qJ) == [4 1]), ...
  'palh3m2DE1_invdynJ_fixb_slag_vp1: qJ has to be [4x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [4 1]), ...
  'palh3m2DE1_invdynJ_fixb_slag_vp1: qJD has to be [4x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [4 1]), ...
  'palh3m2DE1_invdynJ_fixb_slag_vp1: qJDD has to be [4x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'palh3m2DE1_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [18 1]), ...
  'palh3m2DE1_invdynJ_fixb_slag_vp1: pkin has to be [18x1] (double)');
assert(isreal(m) && all(size(m) == [9 1]), ...
  'palh3m2DE1_invdynJ_fixb_slag_vp1: m has to be [9x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [9,3]), ...
  'palh3m2DE1_invdynJ_fixb_slag_vp1: rSges has to be [9x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [9 6]), ...
  'palh3m2DE1_invdynJ_fixb_slag_vp1: Icges has to be [9x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2020-05-07 02:00:30
% EndTime: 2020-05-07 02:02:08
% DurationCPUTime: 93.50s
% Computational Cost: add. (28995->1362), mult. (54070->1901), div. (0->0), fcn. (59085->22), ass. (0->766)
t2444 = sin(qJ(1));
t2449 = cos(qJ(1));
t2445 = sin(pkin(15));
t2446 = sin(pkin(14));
t2450 = cos(pkin(15));
t2451 = cos(pkin(14));
t2325 = t2445 * t2451 - t2446 * t2450;
t2326 = t2445 * t2446 + t2450 * t2451;
t2443 = sin(qJ(2));
t2448 = cos(qJ(2));
t2185 = t2325 * t2448 + t2326 * t2443;
t2621 = -t2325 * t2443 + t2326 * t2448;
t2577 = Icges(7,5) * t2621 - Icges(7,6) * t2185;
t2032 = Icges(7,3) * t2444 + t2449 * t2577;
t2346 = Icges(3,5) * t2448 - Icges(3,6) * t2443;
t2258 = Icges(3,3) * t2444 + t2346 * t2449;
t2993 = t2032 + t2258;
t2827 = Icges(7,4) * t2621;
t2921 = -Icges(7,2) * t2185 + t2827;
t2034 = Icges(7,6) * t2444 + t2449 * t2921;
t2826 = Icges(7,4) * t2185;
t2967 = Icges(7,1) * t2621 - t2826;
t2036 = Icges(7,5) * t2444 + t2449 * t2967;
t2833 = Icges(3,4) * t2443;
t2350 = Icges(3,1) * t2448 - t2833;
t2262 = Icges(3,5) * t2444 + t2350 * t2449;
t2719 = t2448 * t2449;
t2760 = t2185 * t2449;
t2761 = t2621 * t2449;
t2992 = -t2034 * t2760 + t2036 * t2761 + t2262 * t2719 + t2993 * t2444;
t2347 = Icges(3,2) * t2448 + t2833;
t2421 = Icges(3,4) * t2448;
t2349 = Icges(3,1) * t2443 + t2421;
t2526 = t2347 * t2443 - t2349 * t2448;
t2058 = Icges(7,2) * t2621 + t2826;
t2592 = -Icges(7,1) * t2185 - t2827;
t2542 = -t2058 * t2185 - t2592 * t2621;
t2991 = t2526 - t2542;
t2031 = -Icges(7,3) * t2449 + t2444 * t2577;
t2029 = t2444 * t2031;
t2033 = -Icges(7,6) * t2449 + t2444 * t2921;
t2035 = -Icges(7,5) * t2449 + t2444 * t2967;
t2720 = t2444 * t2448;
t2723 = t2443 * t2444;
t2811 = Icges(3,3) * t2449;
t2257 = Icges(3,5) * t2720 - Icges(3,6) * t2723 - t2811;
t2383 = Icges(3,4) * t2723;
t2823 = Icges(3,5) * t2449;
t2261 = Icges(3,1) * t2720 - t2383 - t2823;
t2990 = t2033 * t2760 - t2035 * t2761 - t2444 * t2257 - t2261 * t2719 - t2029;
t2780 = t2031 * t2449;
t2546 = -t2033 * t2185 + t2035 * t2621;
t2905 = t2444 * t2546;
t1883 = -t2780 + t2905;
t2815 = Icges(3,6) * t2449;
t2259 = Icges(3,4) * t2720 - Icges(3,2) * t2723 - t2815;
t2750 = t2259 * t2443;
t2531 = -t2261 * t2448 + t2750;
t2900 = -t2257 * t2449 - t2444 * t2531 + t1883;
t2722 = t2443 * t2449;
t2898 = -t2259 * t2722 - t2990;
t2589 = -Icges(3,2) * t2443 + t2421;
t2260 = Icges(3,6) * t2444 + t2449 * t2589;
t2897 = -t2260 * t2722 + t2992;
t2225 = t2262 * t2720;
t2627 = t2258 * t2449 - t2225;
t2049 = -t2260 * t2723 - t2627;
t2924 = -t2034 * t2185 + t2036 * t2621;
t2599 = t2032 * t2449 - t2444 * t2924;
t2899 = -t2599 + t2049;
t2847 = pkin(1) * t2443;
t2680 = qJD(2) * t2847;
t2437 = qJ(3) + qJ(2);
t2410 = sin(t2437);
t2411 = cos(t2437);
t2602 = rSges(9,1) * t2410 + rSges(9,2) * t2411;
t2902 = -qJD(3) - qJD(2);
t2987 = t2602 * t2902;
t2518 = t2680 + t2987;
t2056 = Icges(7,5) * t2185 + Icges(7,6) * t2621;
t2042 = t2056 * t2444;
t2043 = t2056 * t2449;
t2363 = rSges(7,1) * t2445 + rSges(7,2) * t2450;
t2603 = t2450 * rSges(7,1) - rSges(7,2) * t2445;
t2221 = t2363 * t2446 + t2451 * t2603;
t2919 = -t2363 * t2451 + t2446 * t2603;
t2920 = t2221 * t2448 + t2443 * t2919;
t2072 = t2920 * qJD(2);
t2345 = Icges(3,5) * t2443 + Icges(3,6) * t2448;
t2741 = t2345 * t2449;
t2939 = -t2991 * t2444 - t2043 - t2741;
t2742 = t2345 * t2444;
t2938 = -t2991 * t2449 + t2042 + t2742;
t2862 = cos(qJ(3));
t2669 = t2862 * t2448;
t2442 = sin(qJ(3));
t2724 = t2443 * t2442;
t2982 = t2669 - t2724;
t2299 = Icges(4,4) * t2982;
t2670 = t2862 * t2443;
t2725 = t2442 * t2448;
t2324 = t2670 + t2725;
t2204 = -Icges(4,1) * t2324 - t2299;
t2830 = Icges(4,4) * t2324;
t2587 = Icges(4,2) * t2982 + t2830;
t2535 = -t2204 * t2982 - t2324 * t2587;
t2579 = Icges(4,5) * t2324 + Icges(4,6) * t2982;
t1972 = t2444 * t2535 + t2449 * t2579;
t2574 = Icges(9,5) * t2410 + Icges(9,6) * t2411;
t2267 = t2574 * t2449;
t2825 = Icges(9,4) * t2410;
t2581 = Icges(9,2) * t2411 + t2825;
t2824 = Icges(9,4) * t2411;
t2590 = Icges(9,1) * t2410 + t2824;
t2728 = t2411 * t2444;
t2730 = t2410 * t2444;
t2077 = t2581 * t2730 - t2590 * t2728 - t2267;
t2989 = t1972 - t2077;
t1973 = -t2444 * t2579 + t2449 * t2535;
t2266 = t2574 * t2444;
t2529 = -t2410 * t2581 + t2411 * t2590;
t2078 = t2449 * t2529 - t2266;
t2988 = t1973 + t2078;
t2167 = t2185 * qJD(2);
t2906 = t2621 * qJD(2);
t2956 = Icges(7,4) * t2906;
t2040 = -Icges(7,2) * t2167 + t2956;
t2828 = Icges(7,4) * t2167;
t2041 = Icges(7,1) * t2906 - t2828;
t2321 = t2589 * qJD(2);
t2322 = t2350 * qJD(2);
t2527 = t2347 * t2448 + t2349 * t2443;
t2986 = -qJD(2) * t2527 - t2040 * t2185 + t2041 * t2621 - t2058 * t2906 + t2592 * t2167 - t2321 * t2443 + t2322 * t2448 + (t2056 + t2345) * qJD(1);
t2500 = t2324 * qJD(3);
t2197 = qJD(2) * t2324 + t2500;
t2196 = t2982 * t2902;
t2832 = Icges(4,4) * t2196;
t2067 = Icges(4,2) * t2197 + t2832;
t2831 = Icges(4,4) * t2197;
t2068 = Icges(4,1) * t2196 + t2831;
t2591 = Icges(9,1) * t2411 - t2825;
t2691 = -t2581 + t2591;
t2624 = t2691 * t2902;
t2582 = -Icges(9,2) * t2410 + t2824;
t2690 = -t2582 - t2590;
t2625 = t2690 * t2902;
t2985 = t2067 * t2324 - t2068 * t2982 + t2196 * t2587 + t2197 * t2204 - t2410 * t2625 - t2411 * t2624 + (-t2574 - t2579) * qJD(1);
t2984 = t2444 * t2897 - t2449 * t2898;
t2983 = t2899 * t2444 - t2449 * t2900;
t2981 = t2993 * qJD(1);
t2980 = Icges(7,5) * t2906 - Icges(7,6) * t2167 + t2991 * qJD(1) + t2346 * qJD(2);
t2575 = Icges(9,5) * t2411 - Icges(9,6) * t2410;
t2979 = -Icges(4,5) * t2196 - Icges(4,6) * t2197 - t2575 * t2902 + (t2529 + t2535) * qJD(1);
t2978 = t2449 ^ 2;
t2864 = m(5) + m(6);
t2807 = m(4) + t2864;
t2977 = t2938 * qJD(1);
t2441 = sin(qJ(4));
t2717 = t2449 * t2441;
t2436 = pkin(17) + pkin(18);
t2407 = sin(t2436);
t2447 = cos(qJ(4));
t2438 = sin(pkin(16));
t2439 = cos(pkin(16));
t2525 = t2438 * t2450 + t2439 * t2445;
t2507 = t2447 * t2525;
t2313 = -t2438 * t2445 + t2439 * t2450;
t2408 = cos(t2436);
t2732 = t2408 * t2313;
t2887 = -t2407 * t2507 + t2447 * t2732;
t2107 = t2444 * t2887 + t2717;
t2094 = Icges(6,4) * t2107;
t2508 = t2441 * t2525;
t2716 = t2449 * t2447;
t2721 = t2444 * t2441;
t2106 = -t2407 * t2444 * t2508 + t2721 * t2732 - t2716;
t2622 = t2313 * t2407 + t2525 * t2408;
t2766 = t2622 * t2444;
t1942 = Icges(6,2) * t2106 + Icges(6,6) * t2766 - t2094;
t2976 = -Icges(6,1) * t2106 + t1942 - t2094;
t2868 = -t2407 * t2525 + t2732;
t2482 = t2449 * t2868;
t2108 = t2441 * t2482 + t2444 * t2447;
t2764 = t2622 * t2449;
t2109 = t2449 * t2887 - t2721;
t2829 = Icges(6,4) * t2109;
t1943 = Icges(6,2) * t2108 + Icges(6,6) * t2764 - t2829;
t2975 = -Icges(6,1) * t2108 + t1943 - t2829;
t2093 = Icges(6,4) * t2106;
t1944 = Icges(6,1) * t2107 - Icges(6,5) * t2766 - t2093;
t2974 = -Icges(6,2) * t2107 + t1944 - t2093;
t2095 = Icges(6,4) * t2108;
t1946 = -Icges(6,1) * t2109 + Icges(6,5) * t2764 + t2095;
t2973 = Icges(6,2) * t2109 + t1946 + t2095;
t2904 = t2622 * t2441;
t2903 = t2622 * t2447;
t2958 = Icges(6,4) * t2903;
t1966 = -Icges(6,2) * t2904 + Icges(6,6) * t2868 + t2958;
t2027 = -Icges(6,1) * t2904 - t2958;
t2714 = t1966 - t2027;
t2957 = Icges(6,4) * t2904;
t1967 = Icges(6,1) * t2903 + Icges(6,5) * t2868 - t2957;
t2026 = -Icges(6,2) * t2903 - t2957;
t2713 = t1967 + t2026;
t2199 = -Icges(4,5) * t2982 + Icges(4,6) * t2324;
t2142 = -Icges(4,3) * t2449 + t2199 * t2444;
t2130 = t2444 * t2142;
t2586 = Icges(4,2) * t2324 - t2299;
t2144 = -Icges(4,6) * t2449 + t2444 * t2586;
t2203 = -Icges(4,1) * t2982 + t2830;
t2146 = -Icges(4,5) * t2449 + t2203 * t2444;
t2744 = t2324 * t2449;
t2745 = t2982 * t2449;
t1950 = t2144 * t2744 - t2146 * t2745 + t2130;
t2143 = Icges(4,3) * t2444 + t2199 * t2449;
t2145 = Icges(4,6) * t2444 + t2449 * t2586;
t2286 = Icges(4,4) * t2744;
t2822 = Icges(4,5) * t2444;
t2147 = -Icges(4,1) * t2745 + t2286 + t2822;
t1951 = t2444 * t2143 + t2145 * t2744 - t2147 * t2745;
t2340 = t2902 * t2444;
t2341 = t2902 * t2449;
t2972 = qJD(1) * t2988 + t1950 * t2341 - t1951 * t2340;
t2585 = -Icges(7,2) * t2906 - t2828;
t1934 = -qJD(1) * t2033 + t2585 * t2449;
t2594 = -Icges(7,1) * t2167 - t2956;
t1936 = -qJD(1) * t2035 + t2594 * t2449;
t2125 = t2260 * t2448 + t2262 * t2443;
t2296 = t2347 * t2449;
t2137 = -qJD(2) * t2296 + (-t2444 * t2589 + t2815) * qJD(1);
t2298 = t2349 * t2449;
t2139 = -qJD(2) * t2298 + (-t2350 * t2444 + t2823) * qJD(1);
t2971 = -qJD(2) * t2125 - t1934 * t2185 + t1936 * t2621 - t2034 * t2906 - t2036 * t2167 - t2137 * t2443 + t2139 * t2448 + t2981;
t1935 = qJD(1) * t2034 + t2444 * t2585;
t1937 = qJD(1) * t2036 + t2444 * t2594;
t2124 = t2259 * t2448 + t2261 * t2443;
t2794 = qJD(2) * t2444;
t2138 = qJD(1) * t2260 - t2347 * t2794;
t2297 = t2349 * t2444;
t2140 = qJD(1) * t2262 - qJD(2) * t2297;
t2915 = qJD(1) * t2031;
t2970 = -qJD(1) * t2257 + qJD(2) * t2124 + t1935 * t2185 - t1937 * t2621 + t2033 * t2906 + t2035 * t2167 + t2138 * t2443 - t2140 * t2448 - t2915;
t2969 = t2939 * qJD(1);
t2539 = t2144 * t2324 - t2146 * t2982;
t1948 = -t2142 * t2449 + t2444 * t2539;
t2968 = -qJD(1) * t2989 - t1948 * t2341;
t2578 = -Icges(7,5) * t2167 - Icges(7,6) * t2906;
t2966 = -qJD(2) * t2742 + t2444 * t2578 + t2981 + (t2531 - t2546) * qJD(1);
t2749 = t2260 * t2443;
t2530 = -t2262 * t2448 + t2749;
t2965 = -qJD(2) * t2741 + t2578 * t2449 - t2915 + (-t2346 * t2444 + t2530 + t2811 - t2924) * qJD(1);
t2964 = t2033 * t2621 + t2035 * t2185;
t2963 = t2034 * t2621 + t2036 * t2185;
t2962 = t2058 * t2621 - t2185 * t2592;
t2961 = t1942 * t2106 + t1944 * t2107;
t2960 = t2108 * t1942 + t1944 * t2109;
t1939 = -Icges(6,5) * t2107 + Icges(6,6) * t2106 + Icges(6,3) * t2766;
t1851 = t1939 * t2868 - t1942 * t2904 - t1944 * t2903;
t2893 = t2444 * rSges(7,3) + t2449 * t2920;
t2954 = qJD(1) * t2893;
t2464 = rSges(6,1) * t2507 - rSges(6,2) * t2508;
t2463 = rSges(6,3) * t2313 + t2464;
t2462 = t2463 * t2407;
t2086 = t2444 * t2462;
t2358 = rSges(6,1) * t2441 + rSges(6,2) * t2447;
t2353 = rSges(6,1) * t2447 - rSges(6,2) * t2441;
t2513 = t2353 * t2313;
t2119 = -rSges(6,3) * t2525 + t2513;
t2775 = t2119 * t2408;
t2927 = t2358 * t2449 + t2444 * t2775;
t1963 = -t2086 + t2927;
t2351 = pkin(8) * t2438 + pkin(10) * t2439;
t2352 = pkin(8) * t2439 - pkin(10) * t2438;
t2065 = (-t2351 * t2445 + t2352 * t2450) * t2408 - (t2351 * t2450 + t2352 * t2445) * t2407;
t2797 = qJD(1) * t2444;
t2052 = t2065 * t2797;
t2132 = qJD(4) * t2868 + qJD(1);
t2791 = qJD(3) * t2449;
t2677 = pkin(4) * t2791;
t2281 = t2324 * t2677;
t2387 = pkin(4) * t2725;
t2398 = -pkin(4) * t2862 + pkin(1);
t2734 = t2398 * t2443;
t2287 = -t2387 + t2734;
t2746 = t2287 * t2449;
t2660 = qJD(2) * t2746;
t2601 = t2281 - t2660;
t1992 = t2407 * t2119 + t2408 * t2463;
t2790 = qJD(4) * t2622;
t2664 = t1992 * t2790;
t2373 = t2398 * t2448;
t2386 = pkin(4) * t2724;
t2288 = t2373 + t2386;
t2282 = pkin(12) + t2288;
t2748 = t2282 * t2444;
t1861 = -qJD(1) * t2748 + t1963 * t2132 + t2444 * t2664 + t2052 + t2601;
t2953 = t1861 * t2449;
t2952 = t1939 * t2764;
t2947 = t2444 * t2980 + t2449 * t2986;
t2946 = t2444 * t2986 - t2449 * t2980;
t2945 = t2531 * qJD(2) - t1935 * t2621 - t1937 * t2185 + t2033 * t2167 - t2035 * t2906 - t2138 * t2448 - t2140 * t2443;
t2944 = -qJD(2) * t2530 + t1934 * t2621 + t1936 * t2185 - t2034 * t2167 + t2036 * t2906 + t2137 * t2448 + t2139 * t2443;
t2943 = -t2444 * t2979 + t2449 * t2985;
t2942 = t2444 * t2985 + t2449 * t2979;
t2588 = -Icges(4,2) * t2196 + t2831;
t1996 = qJD(1) * t2145 + t2444 * t2588;
t2596 = Icges(4,1) * t2197 - t2832;
t1998 = t2596 * t2444 + (t2203 * t2449 + t2822) * qJD(1);
t2819 = Icges(9,5) * t2444;
t2812 = Icges(9,6) * t2449;
t2236 = Icges(9,4) * t2728 - Icges(9,2) * t2730 + t2812;
t2931 = t2590 * t2444 + t2236;
t2631 = -(-t2449 * t2591 + t2819) * qJD(1) + t2931 * t2902;
t2237 = Icges(9,6) * t2444 - t2449 * t2582;
t2371 = Icges(9,4) * t2730;
t2818 = Icges(9,5) * t2449;
t2238 = Icges(9,1) * t2728 - t2371 + t2818;
t2511 = t2902 * t2581;
t2633 = -qJD(1) * t2237 - t2238 * t2902 + t2444 * t2511;
t2941 = t1996 * t2982 + t1998 * t2324 - t2144 * t2197 - t2146 * t2196 - t2410 * t2631 - t2411 * t2633;
t1995 = -qJD(1) * t2144 + t2588 * t2449;
t1997 = -qJD(1) * t2146 + t2596 * t2449;
t2930 = -t2590 * t2449 + t2237;
t2632 = -(t2444 * t2591 + t2818) * qJD(1) - t2930 * t2902;
t2729 = t2410 * t2449;
t2372 = Icges(9,4) * t2729;
t2727 = t2411 * t2449;
t2239 = -Icges(9,1) * t2727 + t2372 + t2819;
t2634 = -t2239 * t2902 - t2449 * t2511 + (t2444 * t2582 + t2812) * qJD(1);
t2940 = -t1995 * t2982 - t1997 * t2324 + t2145 * t2197 + t2147 * t2196 + t2410 * t2632 - t2411 * t2634;
t2925 = t2145 * t2324 - t2147 * t2982;
t2708 = t2925 * t2444;
t1949 = -t2143 * t2449 + t2708;
t2808 = Icges(9,3) * t2449;
t2234 = Icges(9,5) * t2728 - Icges(9,6) * t2730 + t2808;
t2753 = t2238 * t2411;
t2533 = t2236 * t2410 - t2753;
t2013 = t2234 * t2449 - t2444 * t2533;
t2192 = t2237 * t2730;
t2235 = Icges(9,3) * t2444 - t2449 * t2575;
t2628 = t2235 * t2449 - t2192;
t2014 = -t2239 * t2728 - t2628;
t2548 = -t2013 * t2449 + t2014 * t2444;
t2937 = -t1949 * t2340 - t2548 * t2902 - t2968;
t2704 = t2444 * t2234 + t2236 * t2729;
t2015 = t2238 * t2727 - t2704;
t2703 = t2444 * t2235 + t2237 * t2729;
t2016 = -t2239 * t2727 + t2703;
t2547 = -t2015 * t2449 + t2016 * t2444;
t2936 = -t2547 * t2902 + t2972;
t2896 = t2124 + t2964;
t2895 = t2125 + t2963;
t2935 = qJD(2) * t2983 + t2969;
t2934 = qJD(2) * t2984 + t2977;
t2000 = -t2144 * t2982 - t2146 * t2324;
t2088 = t2236 * t2411 + t2238 * t2410;
t2933 = t2000 + t2088;
t2001 = -t2145 * t2982 - t2147 * t2324;
t2089 = -t2237 * t2411 - t2239 * t2410;
t2932 = t2001 + t2089;
t2479 = -(Icges(4,2) * t2745 + t2147 + t2286) * t2340 + (t2587 * t2444 + t2146) * t2341 + (t2204 + t2586) * qJD(1);
t2865 = qJD(1) * (-t2587 - t2203) - t2340 * (t2204 * t2449 + t2145) + t2341 * (t2204 * t2444 + t2144);
t2929 = t2982 * t2865 + t2479 * t2324 + (t2410 * t2690 + t2411 * t2691) * qJD(1);
t2928 = t2780 + t2992;
t2923 = -(-t2340 * t2449 + t2341 * t2444) * t2579 + (t2575 - t2199) * qJD(1);
t2922 = -pkin(6) * t2449 + t2893;
t2084 = t2221 * t2443 - t2448 * t2919;
t2914 = qJD(1) * t2142;
t2360 = rSges(4,1) * t2448 - t2443 * rSges(4,2);
t2366 = rSges(4,1) * t2443 + rSges(4,2) * t2448;
t2217 = -t2360 * t2442 - t2366 * t2862;
t2618 = t2449 * t2680;
t2431 = t2449 * rSges(4,3);
t2836 = t2442 * rSges(4,2);
t2354 = rSges(4,1) * t2862 - t2836;
t2681 = t2862 * rSges(4,2);
t2359 = t2442 * rSges(4,1) + t2681;
t2216 = -t2354 * t2448 + t2359 * t2443;
t2757 = t2216 * t2444;
t2180 = -t2431 + t2757;
t2846 = pkin(1) * t2448;
t2392 = pkin(12) + t2846;
t2735 = t2392 * t2444;
t2629 = -t2180 - t2735;
t2011 = qJD(1) * t2629 + t2341 * t2217 - t2618;
t2619 = t2444 * t2680;
t2181 = t2444 * rSges(4,3) + t2216 * t2449;
t2367 = t2392 * t2449;
t2888 = t2367 + t2181;
t2012 = qJD(1) * t2888 + t2217 * t2340 - t2619;
t2913 = qJD(1) * (t2011 * t2444 - t2012 * t2449);
t2911 = qJD(3) * t2982;
t2406 = qJD(2) * t2846;
t2010 = -t2180 * t2340 - t2181 * t2341 + t2406;
t2909 = t2010 * (-t2340 * t2444 - t2341 * t2449);
t1846 = t2952 + t2960;
t2901 = t1846 - t2952;
t2374 = rSges(9,2) * t2730;
t2673 = rSges(9,1) * t2728;
t2796 = qJD(1) * t2449;
t2611 = rSges(9,3) * t2796 + qJD(1) * t2673 - t2449 * t2987;
t2117 = -qJD(1) * t2374 + t2611;
t2275 = t2602 * t2444;
t2838 = rSges(9,2) * t2410;
t2840 = rSges(9,1) * t2411;
t2312 = t2838 - t2840;
t2424 = t2444 * rSges(9,3);
t2118 = -t2902 * t2275 + (t2312 * t2449 + t2424) * qJD(1);
t2892 = t2449 * t2117 + t2444 * t2118;
t2163 = -qJD(2) * t2734 + (qJD(2) * t2725 + t2500) * pkin(4);
t2845 = pkin(4) * t2324;
t2679 = qJD(3) * t2845;
t2795 = qJD(2) * t2287;
t2891 = -t2679 + t2795 + t2163;
t2848 = sin(pkin(18));
t2849 = cos(pkin(18));
t2210 = (rSges(8,1) * t2849 + rSges(8,2) * t2848) * t2450 - t2445 * (rSges(8,1) * t2848 - rSges(8,2) * t2849);
t2429 = t2449 * rSges(8,3);
t2620 = t2429 - t2735;
t2630 = t2444 * t2210 + t2620;
t2638 = rSges(9,3) * t2449 - t2374;
t2240 = t2638 + t2673;
t2686 = rSges(9,2) * t2729 + t2424;
t2520 = rSges(9,1) * t2727 - t2686;
t2699 = -t2444 * t2240 - t2449 * t2520;
t2215 = t2354 * t2443 + t2448 * t2359;
t2222 = -t2862 * t2360 + t2366 * t2442;
t2213 = (-rSges(8,1) * t2450 - rSges(8,2) * t2445) * t2849 + t2848 * (rSges(8,1) * t2445 - rSges(8,2) * t2450);
t2425 = t2444 * rSges(8,3);
t2177 = t2213 * t2449 + t2425;
t2889 = t2367 + t2177;
t2886 = t2966 * t2978 + (t2971 * t2444 + (-t2965 + t2970) * t2449) * t2444;
t2885 = t2970 * t2978 + (t2965 * t2444 + (-t2966 + t2971) * t2449) * t2444;
t1940 = -Icges(6,5) * t2109 + Icges(6,6) * t2108 + Icges(6,3) * t2764;
t1845 = t1940 * t2766 + t2106 * t1943 - t2107 * t1946;
t2883 = -m(2) * rSges(2,2) + m(3) * rSges(3,3) + rSges(4,3) * m(4) + rSges(5,3) * m(5) + m(6) * t2358 + m(7) * rSges(7,3);
t2580 = Icges(4,5) * t2197 - Icges(4,6) * t2196;
t2880 = qJD(1) * t2925 - t2580 * t2449 + t2914;
t2803 = qJD(1) * t2143;
t2879 = qJD(1) * t2539 - t2444 * t2580 - t2803;
t2752 = t2239 * t2411;
t2876 = t2902 * t2267 + (t2237 * t2410 - t2444 * t2575 - t2752 - t2808) * qJD(1);
t2802 = qJD(1) * t2235;
t2875 = qJD(1) * t2533 - t2266 * t2902 + t2802;
t2342 = rSges(5,1) * t2438 - rSges(5,2) * t2439;
t2343 = rSges(5,1) * t2439 + rSges(5,2) * t2438;
t2208 = -t2342 * t2445 + t2343 * t2450;
t2731 = t2408 * t2449;
t2159 = qJD(1) * t2208 * t2731;
t2207 = t2342 * t2450 + t2343 * t2445;
t2455 = qJD(1) ^ 2;
t2164 = qJD(2) * t2373 + (qJD(2) * t2724 - t2911) * pkin(4);
t2524 = -qJD(2) * t2164 - qJDD(2) * t2287;
t2497 = -t2282 * t2455 + t2524;
t2606 = -t2163 - t2679;
t2759 = t2207 * t2407;
t2534 = -t2208 * t2408 + t2759;
t2037 = rSges(5,3) * t2449 - t2444 * t2534;
t2636 = t2037 - t2748;
t2747 = t2287 * t2444;
t2250 = qJD(2) * t2747;
t2676 = qJDD(3) * t2845;
t2643 = qJD(1) * t2250 - t2196 * t2677 + t2449 * t2676;
t2733 = t2407 * t2449;
t1867 = t2636 * qJDD(1) + t2497 * t2449 + (-qJD(1) * t2207 * t2733 + t2159 + (-rSges(5,3) * qJD(1) + t2606) * t2444) * qJD(1) + t2643;
t2038 = -rSges(5,3) * t2444 - t2534 * t2449;
t2149 = t2163 * t2449;
t2792 = qJD(3) * t2444;
t2678 = pkin(4) * t2792;
t2682 = qJDD(1) * t2449;
t2573 = -t2196 * t2678 + t2282 * t2682 + t2444 * t2676 + (t2149 + t2281) * qJD(1);
t1868 = -t2038 * qJDD(1) + t2497 * t2444 + (qJD(1) * t2037 - t2660) * qJD(1) + t2573;
t1953 = qJD(1) * t2636 + t2601;
t2251 = t2282 * t2449;
t2521 = t2324 * t2678 - t2250;
t1954 = (-t2038 + t2251) * qJD(1) + t2521;
t2870 = qJD(1) * (t1953 * t2444 - t1954 * t2449) - t1867 * t2449 - t1868 * t2444;
t2317 = t2444 * t2358;
t2329 = t2353 * qJD(4);
t2459 = t2462 - t2775;
t2161 = -rSges(6,1) * t2508 - rSges(6,2) * t2507;
t2150 = t2161 * qJD(4);
t2162 = t2358 * t2313;
t2151 = qJD(4) * t2162;
t2768 = t2151 * t2408;
t2537 = t2150 * t2407 + t2768;
t1909 = -t2449 * t2329 + t2537 * t2444 + (t2449 * t2459 + t2317) * qJD(1);
t2021 = (qJD(4) * t2796 + qJDD(4) * t2444) * t2622;
t2128 = qJDD(4) * t2868 + qJDD(1);
t2711 = t2065 - t2282;
t2490 = t2455 * t2711 + t2524;
t2020 = t2150 * t2408 - t2151 * t2407;
t2663 = t2020 * t2790;
t1818 = -t1909 * t2132 + t1963 * t2128 + t1992 * t2021 + t2490 * t2449 + (qJD(1) * t2606 + qJDD(1) * t2711 + t2663) * t2444 + t2643;
t2612 = qJD(1) * t2927 + t2150 * t2733 + t2444 * t2329;
t1910 = -qJD(1) * t2086 + t2151 * t2731 + t2612;
t2709 = t2449 * t2462 + t2317;
t1964 = -t2119 * t2731 + t2709;
t2022 = (-qJD(4) * t2797 + qJDD(4) * t2449) * t2622;
t1819 = t1910 * t2132 + t1964 * t2128 - t1992 * t2022 + (-qJD(1) * t2795 - qJDD(1) * t2065 - t2663) * t2449 + t2490 * t2444 + t2573;
t2053 = t2065 * t2796;
t1862 = t1964 * t2132 - t2053 + (t2282 * qJD(1) - t2664) * t2449 + t2521;
t2565 = t1861 * t2444 - t1862 * t2449;
t2869 = qJD(1) * t2565 - t1818 * t2449 - t1819 * t2444;
t2314 = t2445 * t2849 + t2450 * t2848;
t2604 = -t2848 * t2445 + t2450 * t2849;
t2129 = t2392 + (sin(pkin(17)) * t2314 - cos(pkin(17)) * t2604) * pkin(3);
t2773 = t2129 * t2444;
t2120 = qJD(1) * t2773;
t2006 = qJD(1) * t2240 - t2449 * t2518 - t2120;
t2867 = t2444 * (t2262 - t2296) - t2449 * (-Icges(3,2) * t2720 + t2261 - t2383);
t2866 = t2444 * (Icges(9,2) * t2727 + t2239 + t2372) + t2449 * (-Icges(9,2) * t2728 + t2238 - t2371);
t2454 = qJD(2) ^ 2;
t2863 = rSges(3,2) * m(3);
t2861 = -qJD(1) / 0.2e1;
t2860 = qJD(1) / 0.2e1;
t2859 = t2021 / 0.2e1;
t2858 = t2022 / 0.2e1;
t2793 = qJD(2) * t2449;
t2334 = qJD(1) * t2793 + qJDD(2) * t2444;
t2243 = qJD(1) * t2791 + qJDD(3) * t2444 + t2334;
t2857 = t2243 / 0.2e1;
t2388 = qJD(1) * t2794;
t2434 = qJDD(2) + qJDD(3);
t2726 = t2434 * t2449;
t2244 = qJD(1) * t2792 + t2388 - t2726;
t2856 = t2244 / 0.2e1;
t2289 = -qJD(1) * t2341 + t2434 * t2444;
t2855 = t2289 / 0.2e1;
t2290 = -qJD(1) * t2340 - t2726;
t2854 = t2290 / 0.2e1;
t2853 = t2334 / 0.2e1;
t2335 = -qJDD(2) * t2449 + t2388;
t2852 = t2335 / 0.2e1;
t2649 = t2340 / 0.2e1;
t2648 = -t2340 / 0.2e1;
t2647 = t2341 / 0.2e1;
t2646 = -t2341 / 0.2e1;
t2851 = t2444 / 0.2e1;
t2850 = -t2449 / 0.2e1;
t2844 = qJDD(1) / 0.2e1;
t2842 = rSges(3,1) * t2448;
t2839 = rSges(3,2) * t2443;
t2428 = t2444 * rSges(3,3);
t2504 = qJD(1) * t2520;
t2007 = -t2129 * t2796 + t2444 * t2518 + t2504;
t2806 = qJD(1) * t2007;
t2804 = qJD(1) * t2577;
t2800 = qJD(1) * t2275;
t2798 = qJD(1) * t2346;
t1844 = t1939 * t2766 + t2961;
t2789 = t1844 * t2444;
t2788 = t1851 * t2021;
t1852 = t1940 * t2868 - t1943 * t2904 + t1946 * t2903;
t2787 = t1852 * t2022;
t1965 = Icges(6,5) * t2903 - Icges(6,6) * t2904 + Icges(6,3) * t2868;
t1855 = t1965 * t2766 + t1966 * t2106 - t1967 * t2107;
t2786 = t1855 * t2132;
t2781 = t2011 * t2449;
t2776 = t2920 * t2444;
t2675 = rSges(3,1) * t2720;
t2684 = rSges(3,2) * t2723 + t2449 * rSges(3,3);
t2264 = t2675 - t2684;
t2355 = rSges(3,1) * t2443 + rSges(3,2) * t2448;
t2133 = -t2355 * t2793 + (-pkin(12) * t2444 - t2264) * qJD(1);
t2772 = t2133 * t2449;
t2758 = t2210 * t2449;
t2274 = t2288 * qJD(2);
t2256 = t2312 * t2902;
t2718 = t2448 * t2454;
t2025 = -Icges(6,5) * t2904 - Icges(6,6) * t2903;
t2017 = t2025 * qJD(4);
t2018 = t2026 * qJD(4);
t2019 = t2027 * qJD(4);
t1839 = -t2018 * t2904 + t2019 * t2903 + t2017 * t2868 + (-t1966 * t2903 - t1967 * t2904) * qJD(4);
t1857 = t1965 * t2868 - t1966 * t2904 + t1967 * t2903;
t2715 = t1839 * t2132 + t1857 * t2128;
t2073 = t2084 * qJD(2);
t2712 = rSges(7,3) * t2796 - t2073 * t2449;
t2080 = t2902 * t2215;
t2710 = rSges(4,3) * t2796 - t2080 * t2449;
t2705 = t2444 * t2180 + t2449 * t2181;
t2701 = -t2213 - t2392;
t2700 = -t2216 - t2392;
t2276 = t2602 * t2449;
t2696 = -t2275 * t2340 - t2276 * t2341;
t2338 = -0.2e1 * qJD(1) * t2618;
t2689 = t2392 * t2682 + t2338;
t2688 = -t2347 + t2350;
t2687 = t2349 + t2589;
t2666 = qJD(1) * t2723;
t2685 = rSges(3,2) * t2666 + rSges(3,3) * t2796;
t2683 = rSges(3,1) * t2719 + t2428;
t2668 = qJD(1) * t2766;
t2667 = qJD(1) * t2764;
t2665 = qJD(2) * t2719;
t2658 = t2797 / 0.2e1;
t2657 = t2796 / 0.2e1;
t2656 = -t2794 / 0.2e1;
t2655 = t2794 / 0.2e1;
t2654 = -t2793 / 0.2e1;
t2653 = t2793 / 0.2e1;
t2652 = -t2766 / 0.2e1;
t2651 = t2766 / 0.2e1;
t2650 = t2764 / 0.2e1;
t1847 = t1940 * t2764 + t2108 * t1943 - t2109 * t1946;
t2008 = qJD(1) * t2181 - t2080 * t2444;
t2009 = -qJD(1) * t2757 + t2710;
t2645 = t2444 * t2008 + t2449 * t2009 + t2180 * t2796;
t2644 = -t2240 * t2796 + t2892;
t2642 = -pkin(12) - t2842;
t2641 = -t2217 - t2847;
t2640 = t2602 - t2847;
t2639 = -t2129 + t2840;
t2635 = -t2065 - t2775;
t2626 = t2234 + t2752;
t2623 = -t2257 + t2749;
t2616 = qJD(4) * t2652;
t2615 = qJD(4) * t2651;
t2614 = -qJD(4) * t2764 / 0.2e1;
t2613 = qJD(4) * t2650;
t2610 = (-rSges(6,3) - pkin(10)) * m(6) + m(5) * rSges(5,2);
t2081 = t2902 * t2222;
t2609 = t2081 - t2406;
t2405 = qJDD(2) * t2846;
t2607 = -t2454 * t2847 + t2405;
t2179 = -pkin(4) * t2911 + t2274;
t2368 = g(1) * t2449 + g(2) * t2444;
t2605 = g(1) * t2444 - g(2) * t2449;
t2362 = rSges(2,1) * t2449 - rSges(2,2) * t2444;
t2356 = rSges(2,1) * t2444 + rSges(2,2) * t2449;
t2361 = -t2839 + t2842;
t2600 = qJD(1) * t2276 + t2312 * t2340;
t2377 = pkin(4) * t2864 + m(4) * rSges(4,1);
t1974 = (t2447 * t2482 - t2721) * qJD(4) + (-t2721 * t2868 + t2716) * qJD(1);
t2483 = t2444 * t2868;
t2465 = t2447 * t2483 + t2717;
t1975 = qJD(1) * t2465 + qJD(4) * t2108;
t1893 = Icges(6,5) * t1975 + Icges(6,6) * t1974 - Icges(6,3) * t2668;
t1976 = qJD(1) * t2108 + qJD(4) * t2465;
t1977 = (t2441 * t2483 - t2716) * qJD(4) + (-t2716 * t2868 + t2721) * qJD(1);
t1894 = Icges(6,5) * t1977 + Icges(6,6) * t1976 + Icges(6,3) * t2667;
t1895 = Icges(6,4) * t1975 + Icges(6,2) * t1974 - Icges(6,6) * t2668;
t1896 = Icges(6,4) * t1977 + Icges(6,2) * t1976 + Icges(6,6) * t2667;
t1897 = Icges(6,1) * t1975 + Icges(6,4) * t1974 - Icges(6,5) * t2668;
t1898 = Icges(6,1) * t1977 + Icges(6,4) * t1976 + Icges(6,5) * t2667;
t2572 = (t1896 * t2108 - t1898 * t2109 + t1942 * t1974 - t1944 * t1975 + (t1894 * t2449 - t1939 * t2797) * t2622) * t2444 + (t1895 * t2108 - t1897 * t2109 + t1943 * t1974 + t1946 * t1975 + (t1893 * t2449 - t1940 * t2797) * t2622) * t2449;
t2571 = (t1896 * t2106 - t1898 * t2107 + t1942 * t1976 - t1944 * t1977 + (t1894 * t2444 + t1939 * t2796) * t2622) * t2444 + (t1895 * t2106 - t1897 * t2107 + t1943 * t1976 + t1946 * t1977 + (t1893 * t2444 + t1940 * t2796) * t2622) * t2449;
t1816 = -t1896 * t2904 + t1898 * t2903 + t1894 * t2868 + (-t1942 * t2903 + t1944 * t2904) * qJD(4);
t1817 = -t1895 * t2904 + t1897 * t2903 + t1893 * t2868 + (-t1943 * t2903 - t1946 * t2904) * qJD(4);
t2570 = t1816 * t2444 + t1817 * t2449;
t2566 = t1862 * t2444 + t2953;
t2470 = t2410 * t2634 + t2411 * t2632 + t2802;
t2471 = -qJD(1) * t2234 - t2410 * t2633 + t2411 * t2631;
t2563 = -(t2444 * t2875 + t2471 * t2449) * t2449 + (-t2444 * t2876 + t2470 * t2449) * t2444;
t2562 = -(t2471 * t2444 - t2449 * t2875) * t2449 + (t2470 * t2444 + t2449 * t2876) * t2444;
t2557 = t1909 * t2449 - t1910 * t2444;
t2556 = -t1953 * t2449 - t1954 * t2444;
t1959 = -t2073 * t2444 + t2954;
t1960 = -t2776 * qJD(1) + t2712;
t2552 = t1959 * t2444 + t1960 * t2449;
t2551 = -t1963 * t2449 - t1964 * t2444;
t2550 = (Icges(6,5) * t2106 + Icges(6,6) * t2107) * t2444 + (Icges(6,5) * t2108 + Icges(6,6) * t2109) * t2449;
t2430 = t2449 * rSges(7,3);
t2061 = -t2430 + t2776;
t2541 = t2061 * t2444 + t2449 * t2893;
t2090 = qJD(1) * t2630 - t2618;
t2096 = qJD(1) * t2889 - t2619;
t2540 = t2090 * t2444 - t2096 * t2449;
t2536 = t2161 * t2407 + t2162 * t2408;
t2523 = -t2444 * t2455 + t2682;
t2522 = qJDD(1) * t2444 + t2449 * t2455;
t2515 = t2449 * t2355;
t2514 = t2355 * t2444;
t2512 = -t2282 - t2534;
t2510 = (-qJDD(2) * t2443 - t2718) * pkin(1);
t2509 = t2622 * t2550;
t2506 = (t1845 * t2449 + t2789) * t2622;
t2505 = (t1846 * t2444 + t1847 * t2449) * t2622;
t2503 = qJD(1) * t2515;
t2502 = -qJD(1) * t2722 - qJD(2) * t2720;
t2399 = pkin(6) * t2797;
t1955 = -qJD(1) * t2061 - t2084 * t2793 + t2399;
t2501 = -t2639 * t2449 + t2686;
t2364 = rSges(7,1) * t2446 - rSges(7,2) * t2451;
t2365 = rSges(7,1) * t2451 + rSges(7,2) * t2446;
t2453 = rSges(3,1) * m(3);
t2496 = -(m(4) * t2836 - t2377 * t2862 + t2453 + (t2364 * t2445 + t2365 * t2450) * m(7) + t2807 * pkin(1)) * t2448 - (m(4) * t2681 - t2863 + t2377 * t2442 + (t2364 * t2450 - t2365 * t2445) * m(7)) * t2443 + pkin(6) * m(7) - m(2) * rSges(2,1) + (-m(3) - t2807) * pkin(12);
t2495 = t2976 * t2444 + t2975 * t2449;
t2494 = -t2974 * t2444 + t2973 * t2449;
t2493 = t2444 * t2930 + t2449 * t2931;
t2492 = (-t2260 - t2298) * t2444 - (-t2259 - t2297) * t2449;
t2491 = t2502 * pkin(1);
t1999 = t2163 * qJD(2) + t2288 * qJDD(2) + (qJD(3) * t2197 - qJDD(3) * t2982) * pkin(4);
t2489 = -t2455 * t2392 + t2510;
t2487 = (-t2443 * t2687 + t2448 * t2688) * qJD(1);
t2044 = t2058 * t2444;
t2046 = t2592 * t2444;
t2485 = t2044 * t2185 + t2046 * t2621 - t2964;
t2045 = t2058 * t2449;
t2047 = t2592 * t2449;
t2484 = t2045 * t2185 + t2047 * t2621 - t2963;
t2481 = (-t2185 * t2921 + t2621 * t2967 - t2962) * qJD(1);
t2480 = -t2455 * t2129 - t2256 * t2902 + t2510;
t2337 = 0.2e1 * qJD(1) * t2619;
t2478 = t2449 * t2489 + t2337;
t2475 = t1995 * t2324 - t1997 * t2982 - t2145 * t2196 + t2147 * t2197 + t2803;
t2474 = t1996 * t2324 - t1998 * t2982 - t2144 * t2196 + t2146 * t2197 + t2914;
t2461 = t2410 * t2866 + t2493 * t2411;
t2460 = -t2443 * t2867 + t2492 * t2448;
t1840 = -t2444 * t2879 + t2474 * t2449;
t1841 = -t2444 * t2880 + t2475 * t2449;
t1842 = t2474 * t2444 + t2449 * t2879;
t1843 = t2475 * t2444 + t2449 * t2880;
t2458 = t2548 * t2854 + t2547 * t2855 + (-t1948 * t2449 + t1949 * t2444) * t2856 + (-t1950 * t2449 + t1951 * t2444) * t2857 + ((t2410 * t2691 - t2411 * t2690) * qJD(1) - (t2493 * t2410 - t2411 * t2866) * t2902 - t2479 * t2982 + t2324 * t2865) * t2861 + (t2941 * t2449 + t2940 * t2444 + (t2444 * t2933 + t2449 * t2932) * qJD(1)) * t2860 + (t2943 * qJD(1) + qJDD(1) * t2988 + t1840 * t2341 - t1841 * t2340 + t1950 * t2244 + t1951 * t2243 + t2015 * t2290 + t2016 * t2289 - t2902 * t2563) * t2851 + (t2942 * qJD(1) + qJDD(1) * t2989 + t1842 * t2341 - t1843 * t2340 + t1948 * t2244 + t1949 * t2243 + t2013 * t2290 + t2014 * t2289 - t2902 * t2562) * t2850 + (t2444 * t2932 - t2449 * t2933) * t2844 + t2937 * t2658 + t2936 * t2657 + ((-t2267 * t2340 - t2923) * t2444 + (-(-t2444 * t2266 + t2461) * t2902 + t2929) * t2449) * t2649 + (-t1840 * t2449 + t1841 * t2444 + t2563 + ((t1951 + t2016) * t2449 + (t1950 + t2015) * t2444) * qJD(1)) * t2648 + (-t1842 * t2449 + t1843 * t2444 + t2562 + ((t1949 + t2014) * t2449 + (t1948 + t2013) * t2444) * qJD(1)) * t2647 + ((-t2266 * t2341 + t2923) * t2449 + (-(-t2449 * t2267 + t2461) * t2902 + t2929) * t2444) * t2646;
t2401 = rSges(8,3) * t2796;
t2397 = pkin(8) * m(6) + m(5) * rSges(5,1);
t2391 = m(4) * rSges(4,2) + m(9) * rSges(9,2);
t2344 = m(9) * rSges(9,1) + t2377;
t2331 = qJD(2) * t2361;
t2301 = -pkin(4) * t2669 + t2386;
t2300 = pkin(4) * t2670 + t2387;
t2284 = -g(3) * t2445 + t2368 * t2450;
t2283 = g(3) * t2450 + t2368 * t2445;
t2280 = t2982 * t2677;
t2279 = t2982 * t2678;
t2265 = -rSges(3,2) * t2722 + t2683;
t2249 = t2438 * t2397 - t2439 * t2610;
t2248 = t2397 * t2439 + t2438 * t2610;
t2191 = qJD(1) * t2758;
t2183 = g(3) * t2344 - t2368 * t2391;
t2182 = qJD(2) * t2300 + t2679;
t2160 = g(3) * t2391 + t2344 * t2368;
t2134 = -t2355 * t2794 + (pkin(12) * t2449 + t2265) * qJD(1);
t2103 = m(7) * t2919 + t2344 * t2442 + t2391 * t2862 - t2863;
t2092 = t2300 * t2796 - t2301 * t2794 + t2279;
t2091 = -t2300 * t2797 - t2301 * t2793 + t2280;
t2076 = -qJD(1) * t2746 - t2274 * t2444 + t2279;
t2075 = qJD(1) * t2747 - t2274 * t2449 + t2280;
t2074 = -t2344 * t2862 + t2391 * t2442 + (m(8) + m(9) + t2807) * pkin(1) + t2453 + t2221 * m(7);
t2064 = -t2699 * t2902 + t2406;
t2005 = t2353 * t2444 + t2449 * t2536;
t2004 = -t2353 * t2449 + t2444 * t2536;
t1985 = -t2334 * t2355 + qJDD(1) * t2265 + qJD(1) * (-qJD(1) * t2675 + t2685) + (-t2444 * t2331 - t2503) * qJD(2) + t2523 * pkin(12);
t1984 = -t2331 * t2793 - qJDD(1) * t2264 + t2335 * t2355 - t2522 * pkin(12) + ((-t2361 * t2449 - t2428) * qJD(1) + qJD(2) * t2514) * qJD(1);
t1971 = qJD(1) * t2401 + qJDD(1) * t2177 + (-t2213 * t2455 + t2489) * t2444 + t2689;
t1970 = (-rSges(8,3) * t2797 + t2191) * qJD(1) + t2630 * qJDD(1) + t2478;
t1956 = pkin(6) * t2796 + t2084 * t2794 - t2954;
t1952 = t2541 * qJD(2);
t1920 = -t2289 * t2240 + t2290 * t2520 - t2892 * t2902 + t2607;
t1906 = -qJD(1) * t2118 - t2290 * t2602 + t2337 + (t2240 - t2773) * qJDD(1) + t2480 * t2449;
t1905 = qJD(1) * t2117 + qJDD(1) * t2501 + t2289 * t2602 + t2444 * t2480 + t2338;
t1888 = -qJD(1) * t2008 + qJDD(1) * t2629 - t2081 * t2341 + t2217 * t2244 + t2478;
t1887 = qJD(1) * t2009 + qJDD(1) * t2181 - t2081 * t2340 - t2217 * t2243 + t2444 * t2489 + t2689;
t1876 = -t2008 * t2340 - t2009 * t2341 + t2180 * t2243 - t2181 * t2244 + t2607;
t1875 = -pkin(6) * t2523 + qJD(1) * t1960 + qJDD(1) * t2893 - t2072 * t2794 - t2084 * t2334;
t1874 = pkin(6) * t2522 - qJD(1) * t1959 - qJDD(1) * t2061 - t2072 * t2793 + t2084 * t2335;
t1873 = t2551 * t2790 + t2179;
t1856 = t1965 * t2764 + t1966 * t2108 - t1967 * t2109;
t1853 = t1856 * t2132;
t1828 = t1966 * t1976 + t1967 * t1977 + t2018 * t2106 - t2019 * t2107 + (t1965 * t2796 + t2017 * t2444) * t2622;
t1827 = t1966 * t1974 + t1967 * t1975 + t2018 * t2108 - t2019 * t2109 + (-t1965 * t2797 + t2017 * t2449) * t2622;
t1822 = -t1963 * t2022 - t1964 * t2021 + t2557 * t2790 + t1999;
t1809 = qJD(4) * t2505 + t1853;
t1808 = qJD(4) * t2506 + t2786;
t1 = [(-((t2014 - t2192 + (t2235 - t2753) * t2449 + t2704) * t2449 + t2703 * t2444) * t2902 + t2972) * t2646 + (-t2540 * t2680 + t1970 * t2630 + t2090 * (t2191 + t2619) + t1971 * t2889 + t2096 * (t2401 - t2618) - g(1) * (t2701 * t2444 + t2429) - g(2) * (-t2449 * t2701 + t2425) + (-t2090 * (-t2425 + t2758) - t2096 * (-t2213 * t2444 + t2620) + (-t2090 * rSges(8,3) + t2096 * t2701) * t2444) * qJD(1)) * m(8) - (t2496 * g(1) + g(2) * t2883) * t2444 + (-g(1) * t2883 + t2496 * g(2)) * t2449 + m(7) * (t1874 * t2430 + t1875 * t2922 - t1956 * (t2399 + t2712) + (t1874 * (pkin(6) - t2920) + t1955 * t2073) * t2444) + (-((t2449 * t2626 + t2016 - t2703) * t2449 + (t2444 * t2626 + t2015 + t2628) * t2444) * t2902 - (-t2130 + t1950 + (t2143 - t2539) * t2449 - t2708) * t2340 + t2937 + t2968) * t2649 + ((m(6) * t2464 + t2248 * t2445 + t2249 * t2450) * t2407 - t2408 * (m(6) * t2513 + t2248 * t2450 - t2249 * t2445)) * t2605 + (t1817 + t1827) * t2613 + (t1816 + t1828 + t1809) * t2615 + (-t2786 + ((-t1845 + t2901 - t2960) * t2449 - t2789) * t2790 + t1808) * t2614 + (t1853 + ((t1844 + t1847 - t2961) * t2449 + t2901 * t2444) * t2790) * t2616 + t2715 + t1855 * t2859 + t2088 * t2854 + t1856 * t2858 + (-g(1) * (t2444 * t2639 + t2638) - g(2) * t2501 - t1906 * t2374 + t1905 * t2686 - t2007 * (-t2120 + t2611) + (t1906 * rSges(9,3) - t1905 * t2639 + t2007 * t2680 + t2006 * (-t2129 - t2312) * qJD(1)) * t2449 + (t1906 * t2639 + t2006 * (-rSges(9,3) * qJD(1) + t2518) + t2806 * t2838) * t2444) * m(9) + (t1972 + t2000) * t2856 + m(5) * (t1868 * t2251 + t1953 * t2159 + t1954 * t2149 + (t1867 * rSges(5,3) + t1868 * t2534) * t2449 + (t1868 * rSges(5,3) + t1867 * t2512 - t1953 * t2163) * t2444) + (t2078 + t2089) * t2855 + m(6) * (-t1818 * t2086 + t1861 * t2053 + t1819 * (t2251 + t2709) + t1862 * (t2052 + t2149 + t2612) + (t1818 * t2358 + t1819 * t2635 + t1861 * t2329 + t1862 * t2768) * t2449 + (t1818 * (-t2282 - t2635) + t1861 * (-t2163 - t2537)) * t2444) + m(3) * (t1984 * (t2444 * t2642 + t2684) + t1985 * ((pkin(12) - t2839) * t2449 + t2683) + t2134 * t2685 + (t2133 * t2514 - t2134 * t2515) * qJD(2)) + t2787 / 0.2e1 - t2290 * t2077 / 0.2e1 + (Icges(5,1) * t2622 ^ 2 - (0.2e1 * Icges(5,4) * t2622 - Icges(5,2) * t2868) * t2868 + t2527 + Icges(2,3) + t2587 * t2982 - t2204 * t2324 + t2581 * t2411 + t2590 * t2410 + Icges(8,2) * t2604 ^ 2 + (Icges(8,1) * t2314 - 0.2e1 * Icges(8,4) * t2604) * t2314 + m(2) * (t2356 ^ 2 + t2362 ^ 2) + t2962) * qJDD(1) + (m(6) * ((-t2282 - t2459) * t2953 + (-t1861 * t2358 + t1862 * (-t2282 - t2462)) * t2444) + m(3) * ((-pkin(12) - t2361) * t2772 + (-t2133 * rSges(3,3) + t2134 * t2642) * t2444) + m(4) * (t2700 * t2781 + (-t2011 * rSges(4,3) + t2012 * t2700) * t2444) - qJD(2) * t2526 + t2321 * t2448 + t2322 * t2443 + m(5) * ((t1953 * (-t2282 - t2759) + t1954 * rSges(5,3)) * t2449 + (-t1953 * rSges(5,3) + t1954 * t2512) * t2444) + m(7) * (-t1955 * t2922 + t1956 * t2776) - t2410 * t2624 + t2411 * t2625 + t2040 * t2621 + t2041 * t2185 - t2058 * t2167 - t2592 * t2906 - t2067 * t2982 - t2068 * t2324 + t2196 * t2204 - t2197 * t2587) * qJD(1) + (((t2449 * t2623 + t2897 - t2928) * t2449 + (t2444 * t2623 - t2029 + t2599 + t2627 + t2898) * t2444) * qJD(2) + t2935 - t2969) * t2656 + m(4) * (t1888 * t2431 + t1887 * t2888 + t2012 * (-t2618 + t2710) + (t1888 * t2700 + t2011 * (t2080 + t2680)) * t2444) + (t2940 + t2943) * t2648 + (t2934 - t2945 + t2946) * t2654 + (t2944 + t2947) * t2655 + (t2895 + t2938) * t2853 + (t2896 + t2939) * t2852 + (t2936 - t2941 + t2942) * t2647 + (t1973 + t2001) * t2857 + (((t2049 - t2225 + (t2258 + t2750) * t2449 + t2990) * t2449 + (t1883 - t2905 + t2928) * t2444) * qJD(2) + t2977) * t2653 + t2788 / 0.2e1; -(g(3) * t2074 + t2103 * t2368) * t2448 + (-g(3) * t2103 + t2074 * t2368) * t2443 + ((-t2043 * t2794 + t2804) * t2444 + (t2481 + (-t2485 * t2449 + (t2042 + t2484) * t2444) * qJD(2)) * t2449 + (-t2741 * t2794 + t2798) * t2444 + (t2487 + (t2444 * t2742 + t2460) * qJD(2)) * t2449) * t2656 + ((-t2042 * t2793 - t2804) * t2449 + (t2481 + (t2484 * t2444 + (t2043 - t2485) * t2449) * qJD(2)) * t2444 + (-t2742 * t2793 - t2798) * t2449 + (t2487 + (t2449 * t2741 + t2460) * qJD(2)) * t2444) * t2653 + (t2006 * t2800 + t2007 * (t2491 + t2600) - t2064 * t2696 + t1920 * (t2699 + t2846) + t2064 * t2644 + (t1905 * t2640 - t2007 * (t2256 - t2406) + (-t2006 * t2602 + t2064 * t2520) * qJD(1)) * t2444 + (t1906 - t2806) * t2640 * t2449) * m(9) + (t1876 * (t2705 + t2846) + t2010 * t2645 + (t1887 * t2641 + t2012 * t2609 + (-t2010 * t2181 + t2011 * t2217) * qJD(1)) * t2444 + (t2011 * t2609 + (t2012 * qJD(1) + t1888) * t2641) * t2449 - t2011 * (-pkin(1) * t2665 - t2215 * t2797 + t2222 * t2341) - t2012 * (t2215 * t2796 + t2222 * t2340 + t2491) - t2215 * t2909) * m(4) + t2984 * t2853 + (t1822 * t2288 - t1861 * t2075 - t1862 * t2076 + t1873 * t2891 - t2566 * t2164 + t2287 * t2869) * m(6) + (-t1953 * t2075 - t1954 * t2076 + t1999 * t2288 + t2556 * t2164 + t2179 * t2891 + t2287 * t2870) * m(5) + ((qJD(2) * t2552 + t2061 * t2334 - t2335 * t2893) * t2541 + t1952 * ((t2061 * t2449 - t2444 * t2893) * qJD(1) + t2552) + (-t1874 * t2449 - t1875 * t2444 + t1952 * (t2444 ^ 2 + t2978) * qJD(2)) * t2084) * m(7) + t2458 + (t2444 * t2895 - t2449 * t2896) * t2844 + ((t2444 * t2898 + t2449 * t2897) * qJD(1) + t2885) * t2655 + ((t2444 * t2900 + t2449 * t2899) * qJD(1) + t2886) * t2654 + (((-t2045 * t2621 + t2047 * t2185 + t2924) * t2444 - (-t2044 * t2621 + t2046 * t2185 + t2546) * t2449 + t2867 * t2448 + t2492 * t2443) * qJD(2) + (t2185 * t2967 + t2443 * t2688 + t2448 * t2687 + t2621 * t2921 + t2542) * qJD(1)) * t2861 + (t2945 * t2449 + t2944 * t2444 + (t2444 * t2896 + t2449 * t2895) * qJD(1)) * t2860 + (qJD(1) * t2946 + t2886 * qJD(2) + qJDD(1) * t2939 + t2899 * t2334 + t2900 * t2335) * t2850 + (qJD(1) * t2947 + t2885 * qJD(2) + qJDD(1) * t2938 + t2897 * t2334 + t2898 * t2335) * t2851 + t2935 * t2658 + t2934 * t2657 + t2983 * t2852 + (t2090 * t2665 - t2096 * t2502 + (t2405 + (-t2090 * t2449 - t2096 * t2444) * qJD(2)) * t2448 + (-pkin(1) * t2718 + qJD(1) * t2540 - t1970 * t2449 - t1971 * t2444) * t2443 - t2090 * t2666) * pkin(1) * m(8) + ((-t2134 * t2444 - t2772) * t2331 + t2134 * t2503 + (qJDD(2) * t2361 + t2133 * t2793 + t2134 * t2794) * t2361 + (-t2361 * t2454 - t1984 * t2449 - t1985 * t2444 + (t2133 * t2444 - t2134 * t2449) * qJD(1) - t2133 * t2797) * t2355) * m(3); -(t2160 * t2862 + t2442 * t2183) * t2443 + (-t2442 * t2160 + t2183 * t2862) * t2448 + t2458 - m(5) * (t1953 * t2091 + t1954 * t2092 + t2179 * t2182) - m(6) * (t1861 * t2091 + t1862 * t2092 + t1873 * t2182) + (t1920 * t2699 - (-t2006 * t2449 + t2007 * t2444) * t2256 - (-t1905 * t2444 - t1906 * t2449 + (t2006 * t2444 + t2007 * t2449) * qJD(1)) * t2602 - t2006 * (t2312 * t2341 - t2800) + t2007 * t2600 + (t2444 * t2504 + t2644 - t2696) * t2064) * m(9) + (t1876 * t2705 + t2010 * (-t2181 * t2797 + t2645) - (-t2012 * t2444 - t2781) * t2081 + (-t1887 * t2444 - t1888 * t2449 + t2913) * t2217 - (t2011 * t2341 + t2012 * t2340) * t2222 - (t2909 - t2913) * t2215) * m(4) + (m(5) * (-t1999 * t2982 + t2179 * t2197 + t2556 * t2196 - t2324 * t2870) + m(6) * (-t1822 * t2982 + t1873 * t2197 - t2566 * t2196 - t2324 * t2869)) * pkin(4); t2868 * (t2570 * t2790 + t2715 + t2787 + t2788) / 0.2e1 + t2128 * (t1857 * t2868 + (t1851 * t2444 + t1852 * t2449) * t2622) / 0.2e1 + t2132 * (t1839 * t2868 + ((t1851 * t2449 - t1852 * t2444) * qJD(1) + t2570) * t2622) / 0.2e1 + (t1828 * t2132 + t1844 * t2021 + t1845 * t2022 + t1855 * t2128 + t2571 * t2790) * t2651 + (t1855 * t2868 + t2506) * t2859 + (t1828 * t2868 + ((t1844 * t2449 - t1845 * t2444) * qJD(1) + t2571) * t2622) * t2615 + qJD(1) * t1809 * t2652 + (t1856 * t2868 + t2505) * t2858 + (t1827 * t2868 + ((t1846 * t2449 - t1847 * t2444) * qJD(1) + t2572) * t2622) * t2613 - t2132 * ((t2025 * t2132 + t2550 * t2790) * t2868 + ((-t2441 * t2713 - t2447 * t2714) * t2132 + ((-t2441 * t2973 - t2447 * t2975) * t2449 + (t2441 * t2974 - t2447 * t2976) * t2444) * t2790) * t2622) / 0.2e1 + ((t2025 * t2766 + t2106 * t2713 + t2107 * t2714) * t2132 + (t2106 * t2494 + t2107 * t2495 + t2444 * t2509) * t2790) * t2616 + ((t2025 * t2764 + t2108 * t2713 + t2109 * t2714) * t2132 + (t2108 * t2494 + t2109 * t2495 + t2449 * t2509) * t2790) * t2614 + (qJD(1) * t1808 + t1827 * t2132 + t1846 * t2021 + t1847 * t2022 + t1856 * t2128 + t2572 * t2790) * t2650 + ((t1818 * t1963 + t1819 * t1964 - t1861 * t1909 + t1862 * t1910) * t2868 + (t1822 * t2551 + t1873 * (t1963 * t2797 - t1964 * t2796 + t2557) + t2565 * t2020 + (qJD(1) * t2566 + t1818 * t2444 - t1819 * t2449) * t1992) * t2622 - (-t1861 * t2004 + t1862 * t2005) * t2132 - (t1873 * (t2004 * t2449 - t2005 * t2444) + t2565 * (t2161 * t2408 - t2162 * t2407)) * t2790 - t2353 * t2605 - ((-t2283 * t2438 + t2284 * t2439) * t2408 - (t2283 * t2439 + t2284 * t2438) * t2407) * t2358) * m(6);];
tau = t1;
