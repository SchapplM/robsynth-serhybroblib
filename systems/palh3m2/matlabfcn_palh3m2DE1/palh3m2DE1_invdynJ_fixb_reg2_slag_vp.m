% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% palh3m2DE1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [4x1]
%   Generalized joint coordinates (joint angles)
% qJD [4x1]
%   Generalized joint velocities
% qJDD [4x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [18x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[AB,BC,BE,BG,DC,DT2,EP,GH,GP,HW,OT1,T1A,T1T2,phi1,phi2,phi410,phi78,phi79]';
% 
% Output:
% tau_reg [4x(4*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2020-05-07 02:05
% Revision: 70b73dc947b5bf54b9f851309d04479b7d95fc8d (2020-05-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = palh3m2DE1_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(4,1),zeros(4,1),zeros(4,1),zeros(3,1),zeros(18,1)}
assert(isreal(qJ) && all(size(qJ) == [4 1]), ...
  'palh3m2DE1_invdynJ_fixb_reg2_slag_vp: qJ has to be [4x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [4 1]), ...
  'palh3m2DE1_invdynJ_fixb_reg2_slag_vp: qJD has to be [4x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [4 1]), ...
  'palh3m2DE1_invdynJ_fixb_reg2_slag_vp: qJDD has to be [4x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'palh3m2DE1_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [18 1]), ...
  'palh3m2DE1_invdynJ_fixb_reg2_slag_vp: pkin has to be [18x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2020-05-07 02:04:12
% EndTime: 2020-05-07 02:04:22
% DurationCPUTime: 9.33s
% Computational Cost: add. (2896->444), mult. (6640->755), div. (0->0), fcn. (5913->22), ass. (0->338)
t1872 = cos(qJ(3));
t2092 = pkin(4) * t1872;
t1823 = -pkin(1) + t2092;
t1873 = cos(qJ(2));
t1794 = t1823 * t1873;
t1866 = sin(qJ(3));
t1867 = sin(qJ(2));
t2037 = t1866 * t1867;
t1816 = pkin(4) * t2037;
t1753 = t1816 - t1794;
t1744 = pkin(12) + t1753;
t2035 = t1866 * t1873;
t1981 = pkin(4) * t2035;
t1803 = qJD(2) * t1981;
t2034 = t1867 * t1872;
t2093 = pkin(4) * qJD(3);
t1750 = t2034 * t2093 + t1803;
t2050 = t1823 * t1867;
t1706 = qJD(2) * t2050 + qJD(3) * t1981 + t1750;
t2131 = t1706 * qJD(1);
t2120 = -t1744 * qJDD(1) - t2131;
t1869 = sin(pkin(15));
t1875 = cos(pkin(15));
t1788 = pkin(8) * t1869 + pkin(10) * t1875;
t1789 = pkin(8) * t1875 - pkin(10) * t1869;
t1857 = sin(pkin(16));
t1858 = cos(pkin(16));
t1735 = -t1788 * t1857 + t1789 * t1858;
t1844 = pkin(17) + pkin(18);
t1834 = cos(t1844);
t2062 = t1735 * t1834;
t1734 = t1788 * t1858 + t1789 * t1857;
t1833 = sin(t1844);
t2063 = t1734 * t1833;
t1929 = t2062 - t2063;
t2141 = t1744 - t1929;
t2074 = qJD(2) * t1867;
t1976 = qJD(1) * t2074;
t1868 = sin(qJ(1));
t1874 = cos(qJ(1));
t2118 = -g(1) * t1868 + g(2) * t1874;
t1898 = 0.2e1 * pkin(1) * t1976 + t2118;
t1878 = qJD(4) ^ 2;
t1921 = t1981 + t2050;
t2042 = t1858 * t1869;
t2043 = t1857 * t1875;
t1771 = t2042 + t2043;
t1772 = -t1857 * t1869 + t1858 * t1875;
t1927 = t1771 * t1866 - t1772 * t1872;
t1710 = t1927 * pkin(4);
t1928 = t1771 * t1872 + t1866 * t1772;
t1711 = t1928 * pkin(4);
t1671 = -t1867 * (-pkin(1) * t1771 + t1711) - (pkin(1) * t1772 + t1710) * t1873;
t1930 = t1867 * t1927 - t1928 * t1873;
t1672 = (-t1771 * t1873 - t1772 * t1867) * pkin(1) - t1930 * pkin(4);
t1934 = t1671 * t1833 + t1672 * t1834;
t2080 = qJD(1) * qJD(4);
t2055 = t1771 * t1833;
t1699 = -t1772 * t1834 + t2055;
t1880 = qJD(1) ^ 2;
t2132 = t1699 * t1880;
t2140 = -t1934 * t1878 + (t2132 - 0.2e1 * t2080) * t1921;
t2029 = t1872 * t1873;
t1776 = -t2029 + t2037;
t1764 = t1776 * t2093;
t1843 = qJD(2) + qJD(3);
t1984 = pkin(4) * t2029;
t1895 = qJD(2) * t1794 + qJD(3) * t1984 - t1843 * t1816;
t2139 = t1921 * qJDD(1) + (qJD(2) * t1753 + t1764 + t1895) * qJD(1);
t2138 = t1930 * t2093;
t1870 = sin(pkin(14));
t1876 = cos(pkin(14));
t1778 = t1869 * t1876 - t1870 * t1875;
t2024 = t1875 * t1876;
t2031 = t1869 * t1870;
t1779 = t2024 + t2031;
t2126 = -t1778 * t1867 + t1779 * t1873;
t1713 = t2126 * qJD(2);
t2127 = -t1873 * t1778 - t1867 * t1779;
t1712 = t2127 * qJD(2);
t1852 = t1875 ^ 2;
t1835 = -t1852 / 0.2e1;
t2023 = 0.1e1 / 0.4e1 + t1835;
t2119 = -g(1) * t1874 - g(2) * t1868;
t1708 = t2118 * t1771;
t1709 = t2118 * t1772;
t1777 = t2034 + t2035;
t1765 = pkin(4) * t1777;
t1716 = qJD(2) * t1921 + qJD(3) * t1765;
t1829 = t1852 - 0.1e1 / 0.2e1;
t1955 = t1829 * pkin(10);
t2025 = t1875 * t1869;
t1769 = pkin(8) * t2025 + t1955;
t1983 = pkin(10) * t2025;
t1770 = t1829 * pkin(8) - t1983;
t1842 = t1858 ^ 2;
t2044 = t1857 * t1858;
t1938 = -t1769 * t2044 + t1770 * t1842;
t1683 = -t1875 * t1789 / 0.2e1 + t1938;
t2060 = t1744 * t1772;
t2100 = t1852 / 0.2e1;
t1990 = t2100 - 0.1e1 / 0.4e1;
t1948 = t1990 * pkin(8);
t1682 = t1983 / 0.2e1 - t1948 + t1938;
t1827 = t1834 ^ 2;
t2069 = t1682 * t1827;
t1812 = -t2025 / 0.2e1;
t1956 = pkin(8) * t1812 + t2023 * pkin(10);
t1681 = t1769 * t1842 + t1770 * t2044 + t1956;
t2070 = t1681 * t1833;
t1890 = -0.2e1 * t1744 * t2055 + (0.2e1 * t2060 + 0.8e1 * t2070) * t1834 + 0.4e1 * t1683 - 0.8e1 * t2069;
t1993 = 0.2e1 * t2131;
t2137 = -(t1706 - t1716) * qJD(4) + (-qJDD(4) * t1734 + t1771 * t1993 - t1708) * t1833 - (-qJDD(4) * t1735 + t1772 * t1993 - t1709) * t1834 - t1744 * qJDD(4) - qJDD(1) * t1890;
t2096 = pkin(1) * t1873;
t1819 = pkin(12) + t2096;
t2005 = qJDD(1) * t1819;
t2009 = qJDD(1) * t2126;
t2010 = qJDD(1) * t2127;
t1796 = t1816 + pkin(12);
t2108 = 0.2e1 * pkin(12);
t1977 = pkin(4) * t1867 * t2108;
t1884 = pkin(4) ^ 2;
t2028 = t1872 * t1884;
t1851 = t1873 ^ 2;
t2038 = t1866 * t1851;
t2109 = 0.2e1 * pkin(4);
t2135 = 0.2e1 * t1796 * t1981 + (pkin(1) * t2109 - 0.4e1 * t2028) * t2038 + t1872 * t1977 + 0.2e1 * t1866 * t2028;
t1676 = -t1867 * t1928 - t1927 * t1873;
t2134 = 0.2e1 * qJD(1);
t2133 = -0.4e1 * t1880;
t2130 = t1776 * t1843;
t1729 = t1777 * t1843;
t2129 = t1819 * t2134;
t2033 = t1867 * t1873;
t1991 = -0.2e1 * t2033;
t2036 = t1866 * t1872;
t1781 = t1991 * t2036;
t1850 = t1872 ^ 2;
t2012 = t1851 - 0.1e1 / 0.2e1;
t2124 = t1781 + (-t1866 ^ 2 + t1850) * t2012;
t1828 = t1850 - 0.1e1 / 0.2e1;
t1848 = t1867 ^ 2;
t2013 = t1848 - t1851;
t2123 = -t2013 * t1828 + t1781;
t1841 = qJDD(2) + qJDD(3);
t2097 = pkin(1) * t1872;
t1987 = t1843 * t2097;
t2099 = pkin(1) * t1866;
t2122 = qJD(3) * t1987 + t1841 * t2099;
t2121 = (t2005 - t1898) * t1819;
t2115 = t2118 + t2120;
t1933 = t1676 * t1833 - t1834 * t1930;
t2114 = t1777 * t2080 + t1878 * t1933;
t2113 = -pkin(1) * t2074 * t2134 + 0.2e1 * t2005 - t2118;
t2084 = pkin(4) * qJDD(3);
t2112 = qJD(2) * t1895 + qJDD(2) * t1921 + t1777 * t2084 - t2093 * t2130 + t2119;
t1701 = t1927 * qJD(3);
t1695 = pkin(4) * t1701;
t1696 = qJD(3) * t1711;
t1656 = -t1695 * t1873 - t1867 * t1696 + ((t1771 * t1867 - t1772 * t1873) * pkin(1) + t1676 * pkin(4)) * qJD(2);
t1670 = t1672 * qJD(2);
t1657 = -t1867 * t1695 + t1696 * t1873 + t1670;
t1702 = t1928 * qJD(3);
t1666 = t1676 * qJD(2) - t1701 * t1873 - t1702 * t1867;
t1667 = t1930 * qJD(2) + t1701 * t1867 - t1702 * t1873;
t2061 = t1744 * qJD(4);
t2110 = qJD(1) * t2061 + 0.4e1 * t1880 * t2069 + (qJD(2) * t1656 + qJDD(2) * t1672 + (qJD(3) * t1666 - qJDD(3) * t1930) * pkin(4) + t1735 * t2080 - (t2060 + 0.4e1 * t2070) * t1880 + g(3) * t1771 + t2119 * t1772) * t1834 + (g(3) * t1772 - qJD(2) * t1657 + qJDD(2) * t1671 - (-qJD(3) * t1667 - qJDD(3) * t1676) * pkin(4) + (t1744 * t1880 - t2119) * t1771) * t1833;
t2107 = -0.2e1 * qJD(1);
t2105 = -0.2e1 * t1796;
t2104 = -0.2e1 * t1880;
t2103 = -0.8e1 * qJDD(1);
t2102 = 0.2e1 * qJDD(1);
t2101 = -t1716 / 0.2e1;
t1879 = qJD(2) ^ 2;
t2095 = pkin(1) * t1879;
t1864 = cos(pkin(17));
t2094 = pkin(3) * t1864;
t2087 = g(3) * t1873;
t1862 = sin(pkin(17));
t2086 = t1862 * pkin(3);
t2085 = t1866 * g(3);
t2083 = pkin(6) * t1880;
t1861 = sin(pkin(18));
t2082 = t1861 * pkin(12);
t2081 = qJD(1) * qJD(2);
t1766 = t1816 - t1984;
t1724 = -qJD(2) * t1766 - t1764;
t2078 = qJD(1) * t1724;
t2077 = qJD(1) * t2130;
t2076 = qJD(1) * t1843;
t1871 = cos(qJ(4));
t2075 = qJD(1) * t1871;
t2072 = qJD(4) * t1871;
t2047 = t1834 * t1771;
t2049 = t1833 * t1772;
t1697 = t2047 + t2049;
t1693 = t1697 ^ 2;
t2066 = t1693 * t1880;
t2059 = t1921 * t1880;
t1865 = sin(qJ(4));
t2058 = t1765 * t1865;
t2057 = t1765 * t1871;
t2056 = t1765 * t1880;
t2054 = t1777 * t1880;
t2052 = t1796 * t1867;
t2051 = t1819 * t1880;
t2048 = t1833 * t1834;
t1854 = qJ(3) + qJ(2);
t1837 = cos(t1854);
t2046 = t1837 * t1880;
t1882 = pkin(10) ^ 2;
t1883 = pkin(8) ^ 2;
t1840 = -t1882 + t1883;
t1813 = t1840 * t1852;
t2045 = t1850 * t1884;
t1863 = cos(pkin(18));
t2041 = t1861 * t1863;
t2040 = t1861 * t1875;
t2039 = t1863 * t1869;
t2032 = t1867 * t1880;
t2030 = t1870 * t1876;
t2026 = t1873 * t1880;
t1954 = pkin(8) * t1983;
t2018 = -0.2e1 * t1954 + t1813;
t2017 = qJD(3) * qJD(2) * t2097 + qJDD(2) * t2099;
t1886 = pkin(1) ^ 2;
t2016 = -0.2e1 * pkin(1) * t2092 + t1886;
t1836 = sin(t1854);
t1831 = t1836 ^ 2;
t1832 = t1837 ^ 2;
t2015 = t1831 - t1832;
t1846 = t1865 ^ 2;
t1849 = t1871 ^ 2;
t2014 = t1846 - t1849;
t2011 = 0.2e1 * pkin(6);
t2007 = qJDD(1) * t1776;
t2006 = qJDD(1) * t1777;
t2004 = qJDD(1) * t1837;
t2003 = qJDD(1) * t1865;
t2002 = qJDD(1) * t1871;
t1822 = -pkin(4) + t2097;
t1999 = t1822 * qJDD(2);
t1998 = t1836 * qJDD(1);
t1997 = t1867 * qJDD(1);
t1996 = t1873 * qJDD(1);
t1994 = 0.2e1 * t2081;
t1988 = qJD(3) * t2099;
t1986 = pkin(1) * t2032;
t1985 = t1676 * t2093;
t1980 = t1875 * t2086;
t1978 = pkin(1) * t1997;
t1972 = qJD(2) * t2052;
t1971 = t2126 * t1880 * t2127;
t1901 = -t1829 * t1842 + t2025 * t2044 - 0.1e1 / 0.4e1;
t1970 = (t1835 - t1901) * t2048;
t1830 = t1883 / 0.2e1 - t1882 / 0.2e1;
t1741 = pkin(8) * t1955 + t1830 * t2025;
t1969 = t1741 * t2044;
t1773 = -t1884 + t2016 + 0.2e1 * t2045;
t1966 = t1773 * t2033;
t1845 = t1863 ^ 2;
t1965 = t1845 * t2025;
t1964 = t1867 * t2026;
t1963 = t1776 * t2054;
t1962 = t2049 / 0.4e1;
t1961 = -t2044 / 0.2e1;
t1811 = t2025 / 0.4e1;
t1960 = -t1883 / 0.4e1 + t1882 / 0.4e1;
t1732 = t1829 * t2044 + t1842 * t2025 + t1812;
t1959 = t1732 * t1827 + t1842 * t1812 + t1811;
t1957 = -t2119 * pkin(1) * t1867 + t1886 * qJDD(2);
t1953 = -0.2e1 * pkin(12) * t2081;
t1774 = t2039 + t2040;
t1775 = -t1861 * t1869 + t1863 * t1875;
t1694 = -t1774 * t2086 + t1775 * t2094 - pkin(12);
t1691 = t1694 - t2096;
t1951 = -0.2e1 * t1691 * t2076;
t1949 = (-qJDD(2) - t1841) * t1872;
t1946 = qJD(2) * t1987;
t1815 = qJD(2) * t1988;
t1674 = t1829 * t1961 + t1959 + t1970;
t1904 = t1970 + (t1827 - 0.1e1 / 0.2e1) * t1732;
t1920 = t2047 / 0.4e1 + t1962;
t1945 = qJDD(4) * t1920 + (t1674 + t1904) * qJDD(1);
t1944 = t1873 * t1976;
t1943 = t1865 * qJD(1) * t2072;
t1942 = t1836 * t1837 * t2076;
t1941 = t1865 * t1871 * t2066;
t1669 = qJD(1) * t1904 + qJD(4) * t1920;
t1692 = (t2042 / 0.4e1 + t2043 / 0.4e1) * t1834 + t1962;
t1937 = qJD(1) * (-qJD(4) * t1692 + t1669);
t1936 = qJD(4) * (-qJD(1) * t1674 - t1669);
t1935 = -((-t1710 * t1873 - t1711 * t1867) * qJD(2) + t1985) * t1834 + ((-t1710 * t1867 + t1711 * t1873) * qJD(2) - t2138) * t1833;
t1931 = t1708 * t1834 + t1833 * t1709;
t1924 = t2006 - t2077;
t1923 = qJDD(2) * t1867 + t1873 * t1879;
t1922 = t1683 * qJD(1) + t2061 / 0.2e1;
t1660 = qJD(2) * t1671 + t1985;
t1919 = -0.2e1 * qJD(2) * t1966 + t2135 * qJD(3) + t1803 * t2108;
t1918 = (pkin(1) * t1694 - t1873 * t1886) * t1867;
t1917 = -t1822 * t2084 + (t1884 + t2016) * qJDD(2) + t1815 * t2109 + qJD(3) ^ 2 * pkin(4) * t2099;
t1914 = pkin(12) * t1880 - t2119;
t1881 = pkin(12) ^ 2;
t1913 = t1773 * t1851 + t1866 * t1977 + t1881 + t1884 - t2045;
t1912 = pkin(12) * t2102 - t2118;
t1911 = 0.2e1 * t2120;
t1907 = (-qJD(2) * t1843 * t1866 - qJDD(2) * t1872) * pkin(1);
t1906 = t1884 * qJDD(3) - t2135 * t1880 / 0.2e1;
t1853 = t1876 ^ 2;
t1731 = -t1829 * t2030 + t1853 * t2025 + t1812;
t1736 = t1829 * t1853 + t2024 * t2031 + t2023;
t1905 = t1731 * t1991 - t2013 * t1736;
t1903 = t1920 * t2133;
t1747 = t1872 * t2119 - t2085;
t1748 = g(3) * t1872 + t1866 * t2119;
t1900 = t1747 * t1867 + t1748 * t1873 - t1777 * t2051 + t1815;
t1899 = t1747 * t1873 + t1776 * t2051 + t2017;
t1897 = g(3) * t1837 + t1815 + (t1691 * t1880 + t2119) * t1836;
t1896 = t1691 * t2046 + t1837 * t2119 + t2017;
t1893 = t1691 * t2102 + t1898;
t1892 = t1898 - 0.2e1 * t2005;
t1891 = -t1966 + pkin(12) * t1981 + (-pkin(4) * t2038 + t2052) * t1823;
t1889 = t1933 * qJDD(4) + (t1666 * t1834 + t1667 * t1833) * qJD(4) + t1924;
t1888 = t1934 * qJDD(4) + ((t1656 - t1660) * t1834 + (-t1657 + t1670 - t2138) * t1833) * qJD(4) + t2139;
t1887 = t2141 * t1878 + t1890 * t2080 + t2112;
t1839 = t1843 ^ 2;
t1793 = t1843 * t1988;
t1782 = t1836 * t2046;
t1767 = t2015 * t1880;
t1740 = -t1830 + t2018;
t1739 = -pkin(1) * t1923 + t2119;
t1719 = t2118 * t1779;
t1718 = t2118 * t1778;
t1703 = (t1819 * t2032 - t2087) * pkin(1) + t1957;
t1690 = -t1699 * qJDD(1) + qJDD(4);
t1689 = -g(3) * t1778 + t1779 * t2119;
t1688 = g(3) * t1779 + t1778 * t2119;
t1 = [0, 0, 0, 0, 0, qJDD(1), -t2118, -t2119, 0, 0, qJDD(1) * t1848 + 0.2e1 * t1944, 0.2e1 * t1867 * t1996 - 0.2e1 * t2013 * t2081, t1923, qJDD(1) * t1851 - 0.2e1 * t1944, qJDD(2) * t1873 - t1867 * t1879, 0, t1867 * t1953 + t1873 * t1912, -t1867 * t1912 + t1873 * t1953, t2119, -pkin(12) * t2118 + qJDD(1) * t1881, (t2006 - 0.2e1 * t2077) * t1777, 0.4e1 * (t1828 * t2033 + t2012 * t2036) * qJDD(1) + 0.4e1 * t2123 * t2081 + 0.4e1 * t2124 * qJD(1) * qJD(3), -t1777 * t1841 + t1843 * t2130, (t1729 * t2134 + t2007) * t1776, t1729 * t1843 + t1776 * t1841, 0, t1729 * t2129 + t1776 * t2113, t1777 * t2113 - t2129 * t2130, t1739, t2121, t1693 * qJDD(1), (-(t2100 + t1901) * t2048 - t1990 * t2044 + t1959) * t2103, 0, qJDD(1) * t1699 ^ 2, 0, 0, -t1699 * t1911 - t1708 * t1833 + t1709 * t1834, t1697 * t1911 + t1931, t2112, t1919 * qJD(1) + t1913 * qJDD(1) - t2118 * t1796 + (t1972 * t2134 + (qJDD(1) * t2105 + t1750 * t2107 + t2118) * t1873) * t1823, (qJDD(1) * t1849 - 0.2e1 * t1943) * t1693, 0.2e1 * (-t1865 * t2002 + t2014 * t2080) * t1693, 0.4e1 * t1865 * t1936 + 0.4e1 * t1871 * t1945, (qJDD(1) * t1846 + 0.2e1 * t1943) * t1693, -0.4e1 * t1865 * t1945 + 0.4e1 * t1871 * t1936, -t1690 * t1699, t1887 * t1865 + t2137 * t1871, -t2137 * t1865 + t1887 * t1871, 0.8e1 * t1920 * t2131 + (t1681 * t1827 + (t1682 * t1833 - t1744 * t1771 / 0.4e1) * t1834 - t1744 * t1962 + t1956 * t1842 + t1770 * t1961 + pkin(8) * t1811 + (t1852 / 0.4e1 - 0.1e1 / 0.4e1) * pkin(10)) * t2103 - t1931, -0.2e1 * t2062 * t2131 + ((t1741 * t1842 + t1740 * t2044 / 0.2e1 + t1960 * t2025 - pkin(10) * t1948) * t1833 + t1744 * t1735 / 0.4e1) * t1834 * t2103 + (0.2e1 * (-t1750 * t1873 + t1972) * t1823 + t1919) * qJD(1) - 0.2e1 * t2120 * t2063 + (0.4e1 * (t1740 * t1842 - t1830 * t1852 + t1954 - t1960 - 0.2e1 * t1969) * t1827 + t1794 * t2105 + (t1840 + 0.4e1 * t1954 - 0.2e1 * t1813) * t1842 + 0.4e1 * t1969 + t1882 + t1913 + t2018) * qJDD(1) - t2141 * t2118, -(t1994 * t2126 - t2010) * t2127, 0.8e1 * qJDD(1) * (t1731 * t1851 + t1736 * t2033 + t1812 * t1853 + t1990 * t2030 + t1811) + 0.8e1 * t1905 * t2081, qJD(2) * t1713 - qJDD(2) * t2127, -(-t1994 * t2127 - t2009) * t2126, qJD(2) * t1712 + qJDD(2) * t2126, 0, t1718 * t1867 - t1719 * t1873 + (-qJD(1) * t1712 - t2009) * t2011, t1718 * t1873 + t1719 * t1867 + (qJD(1) * t1713 - t2010) * t2011, t2119, (qJDD(1) * pkin(6) + t2118) * pkin(6), t1774 ^ 2 * qJDD(1), -0.4e1 * qJDD(1) * (t1829 * t2041 + t1812 + t1965), 0, qJDD(1) * t1775 ^ 2, 0, 0, t1892 * t1775, t1892 * t1774, t1739, t2121, qJDD(1) * t1831 + 0.2e1 * t1942, 0.2e1 * t1837 * t1998 - 0.2e1 * t2015 * t2076, -t1836 * t1841 - t1837 * t1839, qJDD(1) * t1832 - 0.2e1 * t1942, t1836 * t1839 - t1837 * t1841, 0, t1836 * t1951 + t1837 * t1893, -t1836 * t1893 + t1837 * t1951, t1739, t2118 * t1691 + t1918 * t1994 + (t1851 * t1886 - 0.2e1 * t1694 * t2096 - 0.4e1 * (t1965 * t2086 + (pkin(12) * t1875 / 0.2e1 + t1829 * t1861 * t2086) * t1863 - t1869 * (t1980 + t2082) / 0.2e1) * t2094 + 0.2e1 * pkin(3) * (pkin(3) * t2040 + pkin(12) * t1862) * t2039 + 0.2e1 * t1980 * t2082 + t1881 + (0.4e1 * (t1829 * t1845 - t2025 * t2041 + t2023) * t1864 ^ 2 + (-0.2e1 * t1852 + 0.1e1) * t1845 + t1852) * pkin(3) ^ 2) * qJDD(1); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1964, t2013 * t1880, t1997, t1964, t1996, qJDD(2), t1867 * t1914 - t2087, g(3) * t1867 + t1873 * t1914, 0, 0, t1963, t2123 * t2104, -t2006, -t1963, t2007, t1841, t1793 + (t1776 * t2032 + t1949) * pkin(1) + t1900, (pkin(1) * t2054 - t1748) * t1867 + t1899 + t2122, -t1978, t1703, 0, 0, 0, 0, 0, 0, -t1699 * t2059, t1697 * t2059, t2139, -t1891 * t1880 - (pkin(4) * t2085 - t1823 * t2119) * t1867 + g(3) * t1794 + t1917 + t2119 * t1981, 0, 0, 0, 0, 0, 0, t1888 * t1865 - t2140 * t1871, t2140 * t1865 + t1888 * t1871, t1921 * t1903, -g(3) * t1753 + t2119 * t1921 + (t1921 * t1929 - t1891) * t1880 + t1917, t1971, t1905 * t2133, -t2010, -t1971, t2009, qJDD(2), -t1688 * t1873 - t1867 * t1689 + t2083 * t2127, t1688 * t1867 - t1689 * t1873 - t2083 * t2126, 0, 0, 0, 0, 0, 0, 0, 0, -t1775 * t1986, -t1774 * t1986, -t1978, t1703, -t1782, t1767, -t1998, t1782, -t2004, t1841, t1793 + (-t1837 * t2032 + t1949) * pkin(1) + t1897, (-g(3) + t1986) * t1836 + t1896 + t2122, -t1978, -pkin(1) * t2087 - t1880 * t1918 + t1957; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1963, t2124 * t2104, -t2006, -t1963, t2007, t1841, t1907 + t1900, -t1748 * t1867 + t1899 - t1946, 0, 0, 0, 0, 0, 0, 0, 0, -t1699 * t2056, t1697 * t2056, pkin(4) * t1924 - t2078, (g(3) * t2029 - t1999 + (t1873 * t2119 - t2095) * t1866 + (-t2085 + (t1823 * t2026 + t2119) * t1872) * t1867) * pkin(4) + t1906, 0, 0, 0, 0, 0, 0, -t1865 * t2078 - t2132 * t2057 + (qJD(1) * t2057 + t1865 * t1935) * qJD(4) + (t1889 * t1865 + t1871 * t2114) * pkin(4), -t1724 * t2075 + t2132 * t2058 + (-qJD(1) * t2058 + t1871 * t1935) * qJD(4) + (-t1865 * t2114 + t1889 * t1871) * pkin(4), t1765 * t1903, -g(3) * t1766 + (t1823 * t1872 * t1964 - t1866 * t2095 - t1999) * pkin(4) + (t1880 * t1929 + t2119) * t1765 + t1906, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1782, t1767, -t1998, t1782, -t2004, t1841, t1907 + t1897, -g(3) * t1836 + t1896 - t1946, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1941, -t2014 * t2066, 0.4e1 * t1692 * t2002 + 0.4e1 * t1865 * t1937, -t1941, -0.4e1 * t1692 * t2003 + 0.4e1 * t1871 * t1937, t1690, (-t1865 * t2080 + t2002) * t2062 - t1660 * t2072 * t1833 + ((qJD(4) * t1660 - qJDD(1) * t1734) * t1833 + t2101 * t2134 + t2115) * t1871 + (-t1922 * t2134 + t2110) * t1865, t2003 * t2063 + (t2101 * t2107 - t2115) * t1865 + (-t2075 * qJD(4) - t2003) * t2062 + (t1922 * t2107 + t2110) * t1871, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
tau_reg = t1;
