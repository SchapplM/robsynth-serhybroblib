% Calculate inertial parameters regressor of coriolis matrix for
% palh3m2DE1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [4x1]
%   Generalized joint coordinates (joint angles)
% qJD [4x1]
%   Generalized joint velocities
% pkin [18x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[AB,BC,BE,BG,DC,DT2,EP,GH,GP,HW,OT1,T1A,T1T2,phi1,phi2,phi410,phi78,phi79]';
% 
% Output:
% cmat_reg [(4*4)x(4*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2020-05-07 02:05
% Revision: 70b73dc947b5bf54b9f851309d04479b7d95fc8d (2020-05-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = palh3m2DE1_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(4,1),zeros(4,1),zeros(18,1)}
assert(isreal(qJ) && all(size(qJ) == [4 1]), ...
  'palh3m2DE1_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [4x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [4 1]), ...
  'palh3m2DE1_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [4x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [18 1]), ...
  'palh3m2DE1_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [18x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2020-05-07 02:04:08
% EndTime: 2020-05-07 02:04:12
% DurationCPUTime: 3.89s
% Computational Cost: add. (1513->272), mult. (3086->470), div. (0->0), fcn. (2475->26), ass. (0->261)
t1500 = cos(pkin(15));
t1482 = t1500 ^ 2;
t1463 = t1482 - 0.1e1 / 0.2e1;
t1487 = cos(pkin(16));
t1476 = t1487 ^ 2;
t1495 = sin(pkin(15));
t1579 = t1500 * t1495;
t1486 = sin(pkin(16));
t1590 = t1486 * t1487;
t1382 = t1463 * t1590 + (t1476 - 0.1e1 / 0.2e1) * t1579;
t1570 = -t1482 / 0.2e1 + 0.1e1 / 0.4e1;
t1389 = t1463 * t1476 - t1579 * t1590 + t1570;
t1412 = t1486 * t1500 + t1487 * t1495;
t1479 = pkin(17) + pkin(18);
t1465 = sin(t1479);
t1466 = cos(t1479);
t1413 = -t1486 * t1495 + t1487 * t1500;
t1594 = t1465 * t1413;
t1460 = t1466 ^ 2;
t1606 = t1382 * t1460;
t1646 = qJD(4) / 0.4e1;
t1653 = -0.4e1 * (qJD(1) * t1389 * t1465 + t1412 * t1646) * t1466 - 0.4e1 * t1594 * t1646 - 0.4e1 * (-t1382 / 0.2e1 + t1606) * qJD(1);
t1489 = sin(pkin(18));
t1643 = cos(pkin(18));
t1652 = t1489 * t1500 + t1643 * t1495;
t1472 = qJD(2) + qJD(3) / 0.2e1;
t1573 = 0.2e1 * t1472;
t1595 = t1465 * t1412;
t1370 = -t1413 * t1466 + t1595;
t1651 = qJD(1) * t1370;
t1632 = t1500 * pkin(10);
t1431 = t1495 * pkin(8) + t1632;
t1633 = t1495 * pkin(10);
t1432 = t1500 * pkin(8) - t1633;
t1649 = (-t1486 * t1431 + t1432 * t1487) * t1466 - (t1431 * t1487 + t1486 * t1432) * t1465;
t1499 = cos(qJ(2));
t1481 = t1499 ^ 2;
t1577 = t1481 / 0.2e1 - 0.1e1 / 0.4e1;
t1498 = cos(qJ(3));
t1480 = t1498 ^ 2;
t1648 = -0.2e1 * t1480;
t1647 = qJD(1) / 0.2e1;
t1644 = 0.2e1 * t1481 - 0.1e1;
t1484 = qJ(3) + 0.2e1 * qJ(2);
t1468 = sin(t1484);
t1642 = pkin(1) * t1468;
t1470 = cos(t1484);
t1641 = pkin(1) * t1470;
t1494 = sin(qJ(2));
t1640 = pkin(1) * t1494;
t1639 = pkin(1) * t1498;
t1637 = pkin(4) * qJD(1);
t1493 = sin(qJ(3));
t1374 = t1412 * t1498 + t1493 * t1413;
t1375 = -t1493 * t1412 + t1413 * t1498;
t1350 = t1374 * t1499 + t1375 * t1494;
t1351 = -t1374 * t1494 + t1375 * t1499;
t1581 = t1498 * t1494;
t1585 = t1493 * t1499;
t1418 = t1581 + t1585;
t1621 = qJD(1) * t1418;
t1636 = pkin(4) * (t1621 + (t1350 * t1466 + t1351 * t1465) * qJD(4));
t1635 = pkin(4) * t1498;
t1634 = t1493 * pkin(4);
t1631 = pkin(6) * qJD(1);
t1630 = pkin(12) * t1494;
t1629 = pkin(12) * t1499;
t1485 = qJ(3) + qJ(2);
t1469 = sin(t1485);
t1628 = t1469 * pkin(12);
t1471 = cos(t1485);
t1627 = t1471 * pkin(12);
t1626 = t1493 * pkin(12);
t1473 = pkin(1) * t1499;
t1454 = t1473 + pkin(12);
t1457 = t1629 / 0.2e1;
t1578 = t1457 - pkin(1) / 0.2e1;
t1424 = pkin(1) * t1481 + t1578;
t1449 = t1473 + pkin(12) / 0.2e1;
t1586 = t1493 * t1494;
t1625 = qJD(1) * (t1424 * t1498 - t1449 * t1586);
t1462 = t1481 - 0.1e1 / 0.2e1;
t1584 = t1494 * t1499;
t1385 = (t1480 - 0.1e1 / 0.2e1) * t1584 + t1462 * t1498 * t1493;
t1624 = qJD(1) * t1385;
t1580 = t1498 * t1499;
t1532 = t1494 * t1580;
t1399 = 0.4e1 * t1493 * t1532 + (-0.4e1 * t1481 + 0.2e1) * t1480 + t1644;
t1623 = qJD(1) * t1399;
t1456 = pkin(1) - t1635;
t1553 = pkin(4) * t1585;
t1405 = t1494 * t1456 - t1553;
t1622 = qJD(1) * t1405;
t1620 = qJD(1) * t1454;
t1619 = qJD(1) * t1471;
t1618 = qJD(2) * t1494;
t1617 = qJD(2) * t1499;
t1503 = pkin(4) ^ 2;
t1504 = pkin(1) ^ 2;
t1575 = -0.2e1 * t1635;
t1414 = pkin(1) * t1575 + 0.2e1 * t1480 * t1503 - t1503 + t1504;
t1550 = t1635 / 0.2e1;
t1574 = -0.2e1 * t1634;
t1616 = ((pkin(12) * t1456 + t1414 * t1499) * t1494 + (t1456 * t1481 + t1550 + t1578) * t1574 - t1649 * t1405) * qJD(1);
t1386 = t1462 * t1579 + t1463 * t1584;
t1522 = t1579 * t1584;
t1393 = -t1462 * t1482 + t1522 + t1577;
t1501 = cos(pkin(14));
t1483 = t1501 ^ 2;
t1496 = sin(pkin(14));
t1583 = t1496 * t1501;
t1347 = t1386 * t1483 + t1393 * t1583 + t1570 * t1584 - t1577 * t1579;
t1615 = t1347 * qJD(1);
t1614 = t1347 * qJD(2);
t1348 = t1393 * t1483 - t1386 * t1583 + t1577 * t1482 - t1522 / 0.2e1 - t1481 / 0.4e1 + 0.1e1 / 0.8e1;
t1613 = t1348 * qJD(1);
t1430 = t1630 + t1634;
t1612 = ((-pkin(4) * t1626 + t1414 * t1494) * t1499 + (t1481 * t1574 + t1430) * t1456) * qJD(1);
t1561 = pkin(10) * t1579;
t1411 = t1463 * pkin(8) - t1561;
t1401 = t1411 * t1476;
t1562 = pkin(8) * t1579;
t1410 = t1463 * pkin(10) + t1562;
t1538 = t1410 * t1590;
t1521 = t1401 - t1538;
t1611 = (t1561 / 0.2e1 + t1570 * pkin(8) + t1521) * t1460;
t1368 = t1466 * t1412 + t1594;
t1367 = t1368 ^ 2;
t1497 = cos(qJ(4));
t1610 = t1367 * (t1497 ^ 2 - 0.1e1 / 0.2e1);
t1488 = pkin(1) * qJD(2);
t1478 = qJD(2) + qJD(3);
t1591 = t1478 * t1498;
t1563 = pkin(4) * t1591;
t1426 = -t1488 + t1563;
t1396 = -t1426 * t1494 - t1478 * t1553;
t1609 = t1368 * t1396;
t1419 = t1501 * t1495 - t1496 * t1500;
t1420 = t1496 * t1495 + t1501 * t1500;
t1376 = t1494 * t1419 - t1420 * t1499;
t1608 = t1376 * qJD(2);
t1377 = t1499 * t1419 + t1494 * t1420;
t1607 = t1377 * qJD(2);
t1605 = (t1424 * t1493 + t1449 * t1581) * qJD(1);
t1604 = t1385 * t1478;
t1492 = sin(qJ(4));
t1601 = t1396 * t1492;
t1400 = pkin(4) * t1586 + t1456 * t1499 + pkin(12);
t1600 = t1400 * qJD(4);
t1599 = t1405 * t1492;
t1598 = t1405 * t1497;
t1403 = t1418 * t1478;
t1597 = t1418 * t1492;
t1596 = t1418 * t1497;
t1593 = t1465 * t1466;
t1417 = -t1580 + t1586;
t1404 = t1478 * t1417;
t1436 = t1478 * t1471;
t1592 = t1478 * t1493;
t1588 = t1493 * qJD(2);
t1587 = t1493 * t1481;
t1582 = t1498 * qJD(2);
t1464 = t1503 * t1478;
t1576 = 0.2e1 * t1471 ^ 2 - 0.1e1;
t1531 = -t1579 / 0.2e1;
t1344 = t1606 + t1389 * t1593 + t1476 * t1531 + t1570 * t1590 + t1579 / 0.4e1;
t1572 = 0.4e1 * qJD(1) * t1344;
t1571 = -0.4e1 * qJD(4) * t1344;
t1415 = t1489 * t1495 - t1643 * t1500;
t1508 = t1454 + (cos(pkin(17)) * t1415 + sin(pkin(17)) * t1652) * pkin(3);
t1569 = t1508 * t1640;
t1568 = t1415 * t1640;
t1567 = t1652 * t1640;
t1566 = t1454 * t1640;
t1565 = pkin(4) * t1621;
t1365 = qJD(4) - t1651;
t1564 = pkin(4) * t1365 * t1418;
t1560 = pkin(1) * t1617;
t1458 = qJD(3) * t1493 * pkin(1);
t1360 = (pkin(1) + t1575) * t1587 + (t1626 + (pkin(4) * t1648 + pkin(4) + t1639) * t1494) * t1499 + t1498 * t1430;
t1559 = (-t1418 * t1649 + t1360) * t1637;
t1558 = t1360 * t1637;
t1557 = pkin(1) * t1588;
t1556 = pkin(4) * t1592;
t1555 = t1495 * t1634;
t1554 = pkin(1) * t1582;
t1552 = t1500 * t1634;
t1551 = pkin(1) * (qJD(3) + 0.2e1 * qJD(2)) / 0.2e1;
t1549 = t1377 * t1631;
t1548 = qJD(1) * t1630;
t1547 = qJD(1) * t1629;
t1546 = t1376 * t1631;
t1545 = pkin(15) + t1479;
t1543 = qJD(1) * t1508 * t1469;
t1542 = t1508 * t1619;
t1541 = qJD(1) * t1610;
t1540 = t1367 * t1492 * t1497;
t1539 = t1370 * t1622;
t1537 = t1417 * t1620;
t1536 = t1418 * t1620;
t1535 = t1469 * t1436;
t1534 = t1411 * t1590;
t1533 = qJD(2) * t1584;
t1530 = t1639 * t1573;
t1529 = pkin(4) * t1557;
t1528 = qJD(1) * t1568;
t1527 = qJD(1) * t1567;
t1526 = qJD(1) * t1569;
t1525 = t1370 * t1565;
t1524 = qJD(2) * t1566;
t1523 = qJD(4) * t1540;
t1394 = t1426 * t1495 + t1478 * t1552;
t1397 = -t1426 * t1500 + t1478 * t1555;
t1352 = t1486 * t1394 + t1397 * t1487;
t1518 = t1394 * t1487 - t1486 * t1397;
t1520 = -(t1499 * t1352 + t1518 * t1494) * t1466 + (t1352 * t1494 - t1499 * t1518) * t1465;
t1406 = -t1495 * t1456 + t1552;
t1407 = t1456 * t1500 + t1555;
t1517 = t1406 * t1487 - t1486 * t1407;
t1514 = 0.4e1 * (pkin(8) * t1531 + t1570 * pkin(10) + t1410 * t1476 + t1534) * t1593 - 0.4e1 * t1611;
t1512 = t1478 * (-t1350 * t1465 + t1351 * t1466);
t1395 = -t1426 * t1499 + t1494 * t1556;
t1446 = t1545 + t1485;
t1437 = sin(t1446);
t1447 = t1545 - t1485;
t1438 = sin(t1447);
t1510 = t1628 + (-t1437 / 0.2e1 + t1438 / 0.2e1) * pkin(3);
t1439 = cos(t1446);
t1440 = cos(t1447);
t1509 = t1627 + (-t1440 / 0.2e1 - t1439 / 0.2e1) * pkin(3);
t1507 = -t1504 * qJD(2) + t1464 * t1648 + t1464;
t1361 = -t1500 * t1432 / 0.2e1 + t1521;
t1506 = qJD(4) * (0.2e1 * t1361 + t1514);
t1505 = qJD(1) * (-((0.4e1 * t1534 + (0.4e1 * t1476 - 0.2e1) * t1562 + ((0.4e1 * t1482 - 0.2e1) * t1476 - 0.2e1 * t1482 + 0.1e1) * pkin(10)) * t1465 + t1400 * t1413) * t1466 + t1400 * t1595 - 0.2e1 * t1361 + 0.4e1 * t1611);
t1459 = qJD(3) * t1639;
t1451 = pkin(4) * t1458;
t1448 = t1644 * qJD(1);
t1445 = qJD(1) * t1584;
t1443 = pkin(1) * t1591;
t1442 = pkin(1) * t1592;
t1441 = pkin(1) * t1556;
t1435 = t1478 * t1469;
t1434 = t1576 * qJD(1);
t1427 = t1469 * t1619;
t1425 = qJD(1) * t1566;
t1409 = pkin(1) * t1472 - t1563;
t1398 = -qJD(4) * pkin(8) + t1400 * qJD(1);
t1381 = t1497 * t1396;
t1380 = -0.2e1 * t1624;
t1379 = 0.2e1 * t1624;
t1373 = qJD(4) * t1633 + t1398 * t1500;
t1372 = qJD(4) * t1632 - t1398 * t1495;
t1366 = t1486 * t1406 + t1407 * t1487;
t1362 = qJD(1) * t1540;
t1355 = t1368 * t1565;
t1353 = t1368 * t1622;
t1346 = -0.4e1 * t1615;
t1345 = 0.4e1 * t1615;
t1338 = t1622 + ((t1366 * t1494 - t1499 * t1517) * t1466 + (t1499 * t1366 + t1517 * t1494) * t1465) * qJD(4);
t1337 = (t1372 * t1486 + t1373 * t1487) * t1466 + (t1372 * t1487 - t1486 * t1373) * t1465 + t1600 + (-pkin(8) * t1482 + 0.2e1 * t1401 + t1514 - 0.2e1 * t1538 + t1561) * qJD(1);
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1533, t1644 * qJD(2), 0, -t1533, 0, 0, -pkin(12) * t1618, -pkin(12) * t1617, 0, 0, 0.2e1 * t1604, -t1478 * t1399, 0, -0.2e1 * t1604, 0, 0, pkin(12) * t1403 + (-t1588 + (t1532 + t1587) * t1573) * pkin(1), -pkin(12) * t1404 + (-t1582 + (t1498 * t1481 - t1493 * t1584) * t1573) * pkin(1), 0, -t1524, 0, 0, 0, 0, 0, 0, -t1396 * t1370, t1609, 0, t1426 * t1430 + t1507 * t1584 + (0.2e1 * t1409 * t1587 + (pkin(12) * t1592 + t1494 * t1530) * t1499) * pkin(4), -t1523, -0.2e1 * qJD(4) * t1610, t1492 * t1571, t1523, t1497 * t1571, 0, -t1370 * (t1492 * t1600 + t1381) + t1492 * t1506, t1370 * (-t1497 * t1600 + t1601) + t1497 * t1506, -t1609, ((pkin(4) * t1530 + t1507) * t1499 + t1426 * pkin(12)) * t1494 + 0.2e1 * (t1409 * t1481 - t1488 / 0.2e1 + (t1457 + t1550) * t1478) * t1634 + t1649 * t1396, 0.4e1 * t1614, -0.8e1 * t1348 * qJD(2), 0, -0.4e1 * t1614, 0, 0, pkin(6) * t1607, -pkin(6) * t1608, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t1568, qJD(2) * t1567, 0, -t1524, t1535, t1478 * t1576, 0, -t1535, 0, 0, t1468 * t1551 + t1458 / 0.2e1 + t1510 * t1478, t1470 * t1551 + t1459 / 0.2e1 + t1509 * t1478, 0, -qJD(2) * t1569; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1445, t1448, t1617, -t1445, -t1618, 0, -t1548, -t1547, 0, 0, t1379, -t1623, t1404, t1380, t1403, 0, 0.2e1 * t1605, 0.2e1 * t1625, -t1560, -t1425, 0, 0, 0, 0, 0, 0, -t1539, t1353, -t1395, -t1612, 0, 0, 0, 0, 0, 0, -t1395 * t1492 - t1598 * t1651, -t1395 * t1497 + t1599 * t1651, -t1353, -t1616, t1345, -0.8e1 * t1613, -t1608, t1346, -t1607, 0, t1549, -t1546, 0, 0, 0, 0, 0, 0, 0, 0, -t1528, t1527, -t1560, -t1425, t1427, t1434, -t1436, -t1427, t1435, 0, (0.2e1 * t1642 + 0.2e1 * t1628 + (-t1437 + t1438) * pkin(3)) * t1647, (0.2e1 * t1641 + 0.2e1 * t1627 + (-t1439 - t1440) * pkin(3)) * t1647, -t1560, -t1526; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1379, -t1623, t1404, t1380, t1403, 0, t1536, -t1537, 0, 0, 0, 0, 0, 0, 0, 0, t1525, -t1355, -pkin(4) * t1404, t1558, 0, 0, 0, 0, 0, 0, pkin(4) * (-t1492 * t1404 + t1596 * t1651), (-t1497 * t1404 - t1597 * t1651) * pkin(4), t1355, t1559, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1427, t1434, -t1436, -t1427, t1435, 0, t1543, t1542, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1362, -0.2e1 * t1541, t1492 * t1653, t1362, t1497 * t1653, 0, t1492 * t1337, t1337 * t1497, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1445, -t1448, 0, t1445, 0, 0, t1548, t1547, 0, 0, t1380, t1623, 0, t1379, 0, 0, -0.2e1 * t1605, -0.2e1 * t1625, 0, t1425, 0, 0, 0, 0, 0, 0, t1539, -t1353, 0, t1612, 0, 0, 0, 0, 0, 0, -t1365 * t1598, t1365 * t1599, t1353, t1616, t1346, 0.8e1 * t1613, 0, t1345, 0, 0, -t1549, t1546, 0, 0, 0, 0, 0, 0, 0, 0, t1528, -t1527, 0, t1425, -t1427, -t1434, 0, t1427, 0, 0, -qJD(1) * (t1510 + t1642), -qJD(1) * (t1509 + t1641), 0, t1526; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1458, t1459, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1451, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1451, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1458, t1459, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1442, t1443, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1441, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1441, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1442, t1443, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1338 * t1497, t1338 * t1492, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1380, t1623, 0, t1379, 0, 0, -t1536, t1537, 0, 0, 0, 0, 0, 0, 0, 0, -t1525, t1355, 0, -t1558, 0, 0, 0, 0, 0, 0, t1497 * t1564, -t1492 * t1564, -t1355, -t1559, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1427, -t1434, 0, t1427, 0, 0, -t1543, -t1542, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1557, -t1554, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1529, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1529, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1557, -t1554, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1497 * t1636, -t1492 * t1636, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1362, 0.2e1 * t1541, t1492 * t1572, -t1362, t1497 * t1572, 0, t1492 * t1505 + t1381, t1497 * t1505 - t1601, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(1) * t1598 + t1492 * t1520, -qJD(1) * t1599 + t1497 * t1520, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, pkin(4) * (-qJD(1) * t1596 + t1492 * t1512), pkin(4) * (qJD(1) * t1597 + t1497 * t1512), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t1;
