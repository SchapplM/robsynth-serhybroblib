% Calculate inertial parameters regressor of coriolis matrix for
% palh3m2TE
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [4x1]
%   Generalized joint coordinates (joint angles)
% qJD [4x1]
%   Generalized joint velocities
% pkin [18x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[AB,BC,BE,BG,DC,DT2,EP,GH,GP,HW,OT1,T1A,T1T2,phi1,phi2,phi410,phi78,phi79]';
% 
% Output:
% cmat_reg [(4*4)x(4*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2020-05-07 01:49
% Revision: 70b73dc947b5bf54b9f851309d04479b7d95fc8d (2020-05-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = palh3m2TE_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(4,1),zeros(4,1),zeros(18,1)}
assert(isreal(qJ) && all(size(qJ) == [4 1]), ...
  'palh3m2TE_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [4x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [4 1]), ...
  'palh3m2TE_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [4x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [18 1]), ...
  'palh3m2TE_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [18x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2020-05-07 01:48:26
% EndTime: 2020-05-07 01:48:30
% DurationCPUTime: 3.91s
% Computational Cost: add. (1513->272), mult. (3086->469), div. (0->0), fcn. (2475->26), ass. (0->261)
t1504 = cos(pkin(15));
t1486 = t1504 ^ 2;
t1467 = t1486 - 0.1e1 / 0.2e1;
t1491 = cos(pkin(16));
t1480 = t1491 ^ 2;
t1499 = sin(pkin(15));
t1583 = t1504 * t1499;
t1490 = sin(pkin(16));
t1594 = t1490 * t1491;
t1386 = t1467 * t1594 + (t1480 - 0.1e1 / 0.2e1) * t1583;
t1574 = -t1486 / 0.2e1 + 0.1e1 / 0.4e1;
t1393 = t1467 * t1480 - t1583 * t1594 + t1574;
t1416 = t1490 * t1504 + t1491 * t1499;
t1483 = pkin(17) + pkin(18);
t1469 = sin(t1483);
t1470 = cos(t1483);
t1417 = -t1490 * t1499 + t1491 * t1504;
t1599 = t1469 * t1417;
t1464 = t1470 ^ 2;
t1612 = t1386 * t1464;
t1649 = qJD(4) / 0.4e1;
t1657 = -0.4e1 * (t1393 * qJD(1) * t1469 + t1416 * t1649) * t1470 - 0.4e1 * t1599 * t1649 - 0.4e1 * (-t1386 / 0.2e1 + t1612) * qJD(1);
t1493 = sin(pkin(18));
t1646 = cos(pkin(18));
t1656 = t1493 * t1504 + t1646 * t1499;
t1476 = qJD(2) + qJD(3) / 0.2e1;
t1577 = 0.2e1 * t1476;
t1600 = t1469 * t1416;
t1374 = -t1417 * t1470 + t1600;
t1655 = qJD(1) * t1374;
t1635 = t1504 * pkin(10);
t1435 = t1499 * pkin(8) + t1635;
t1636 = t1499 * pkin(10);
t1436 = t1504 * pkin(8) - t1636;
t1653 = (-t1490 * t1435 + t1436 * t1491) * t1470 - (t1435 * t1491 + t1490 * t1436) * t1469;
t1503 = cos(qJ(2));
t1485 = t1503 ^ 2;
t1581 = t1485 / 0.2e1 - 0.1e1 / 0.4e1;
t1502 = cos(qJ(3));
t1484 = t1502 ^ 2;
t1652 = -0.2e1 * t1484;
t1651 = pkin(12) / 0.2e1;
t1650 = qJD(1) / 0.2e1;
t1647 = 0.2e1 * t1485 - 0.1e1;
t1488 = qJ(3) + 0.2e1 * qJ(2);
t1472 = sin(t1488);
t1645 = pkin(1) * t1472;
t1474 = cos(t1488);
t1644 = pkin(1) * t1474;
t1498 = sin(qJ(2));
t1643 = pkin(1) * t1498;
t1642 = pkin(1) * t1502;
t1640 = pkin(4) * qJD(1);
t1497 = sin(qJ(3));
t1378 = t1416 * t1502 + t1497 * t1417;
t1379 = -t1497 * t1416 + t1417 * t1502;
t1354 = t1378 * t1503 + t1379 * t1498;
t1355 = -t1378 * t1498 + t1379 * t1503;
t1585 = t1502 * t1498;
t1589 = t1497 * t1503;
t1422 = t1585 + t1589;
t1624 = qJD(1) * t1422;
t1639 = pkin(4) * (t1624 + (t1354 * t1470 + t1355 * t1469) * qJD(4));
t1638 = pkin(4) * t1502;
t1637 = t1497 * pkin(4);
t1634 = pkin(6) * qJD(1);
t1633 = qJD(1) * pkin(12);
t1489 = qJ(3) + qJ(2);
t1473 = sin(t1489);
t1632 = t1473 * pkin(12);
t1475 = cos(t1489);
t1631 = t1475 * pkin(12);
t1630 = t1497 * pkin(12);
t1477 = pkin(1) * t1503;
t1458 = t1477 + pkin(12);
t1460 = pkin(1) - t1638;
t1557 = pkin(4) * t1589;
t1409 = t1498 * t1460 - t1557;
t1507 = pkin(4) ^ 2;
t1508 = pkin(1) ^ 2;
t1579 = -0.2e1 * t1638;
t1418 = pkin(1) * t1579 + 0.2e1 * t1484 * t1507 - t1507 + t1508;
t1554 = t1638 / 0.2e1;
t1578 = -0.2e1 * t1637;
t1461 = t1503 * t1651;
t1582 = t1461 - pkin(1) / 0.2e1;
t1629 = qJD(1) * ((pkin(12) * t1460 + t1418 * t1503) * t1498 + (t1460 * t1485 + t1554 + t1582) * t1578 - t1653 * t1409);
t1466 = t1485 - 0.1e1 / 0.2e1;
t1588 = t1498 * t1503;
t1389 = t1466 * t1583 + t1467 * t1588;
t1526 = t1583 * t1588;
t1397 = -t1466 * t1486 + t1526 + t1581;
t1505 = cos(pkin(14));
t1487 = t1505 ^ 2;
t1500 = sin(pkin(14));
t1587 = t1500 * t1505;
t1351 = t1389 * t1487 + t1397 * t1587 + t1574 * t1588 - t1581 * t1583;
t1628 = qJD(1) * t1351;
t1352 = t1397 * t1487 - t1389 * t1587 + t1581 * t1486 - t1526 / 0.2e1 - t1485 / 0.4e1 + 0.1e1 / 0.8e1;
t1627 = qJD(1) * t1352;
t1390 = (t1484 - 0.1e1 / 0.2e1) * t1588 + t1466 * t1502 * t1497;
t1626 = qJD(1) * t1390;
t1584 = t1502 * t1503;
t1536 = t1498 * t1584;
t1403 = 0.4e1 * t1497 * t1536 + (-0.4e1 * t1485 + 0.2e1) * t1484 + t1647;
t1625 = qJD(1) * t1403;
t1623 = qJD(1) * t1458;
t1622 = qJD(1) * t1475;
t1621 = qJD(2) * t1351;
t1423 = t1505 * t1499 - t1504 * t1500;
t1424 = t1500 * t1499 + t1505 * t1504;
t1380 = t1498 * t1423 - t1424 * t1503;
t1620 = qJD(2) * t1380;
t1381 = t1503 * t1423 + t1498 * t1424;
t1619 = qJD(2) * t1381;
t1618 = qJD(2) * t1498;
t1617 = qJD(2) * t1503;
t1434 = pkin(12) * t1498 + t1637;
t1616 = ((-pkin(4) * t1630 + t1418 * t1498) * t1503 + (t1485 * t1578 + t1434) * t1460) * qJD(1);
t1564 = pkin(10) * t1583;
t1414 = t1467 * pkin(8) - t1564;
t1405 = t1414 * t1480;
t1565 = pkin(8) * t1583;
t1415 = t1467 * pkin(10) + t1565;
t1538 = t1415 * t1594;
t1525 = t1405 - t1538;
t1615 = (t1564 / 0.2e1 + t1574 * pkin(8) + t1525) * t1464;
t1372 = t1470 * t1416 + t1599;
t1371 = t1372 ^ 2;
t1501 = cos(qJ(4));
t1614 = t1371 * (t1501 ^ 2 - 0.1e1 / 0.2e1);
t1492 = pkin(1) * qJD(2);
t1482 = qJD(2) + qJD(3);
t1596 = t1482 * t1502;
t1567 = pkin(4) * t1596;
t1430 = -t1492 + t1567;
t1400 = -t1430 * t1498 - t1482 * t1557;
t1613 = t1372 * t1400;
t1428 = pkin(1) * t1485 + t1582;
t1453 = t1477 + t1651;
t1611 = (t1428 * t1497 + t1453 * t1585) * qJD(1);
t1590 = t1497 * t1498;
t1610 = (t1428 * t1502 - t1453 * t1590) * qJD(1);
t1609 = t1390 * t1482;
t1566 = pkin(4) * t1590;
t1404 = t1460 * t1503 + pkin(12) + t1566;
t1606 = t1404 * qJD(4);
t1605 = t1409 * qJD(1);
t1496 = sin(qJ(4));
t1604 = t1409 * t1496;
t1603 = t1409 * t1501;
t1407 = t1422 * t1482;
t1602 = t1422 * t1496;
t1601 = t1422 * t1501;
t1598 = t1469 * t1470;
t1421 = -t1584 + t1590;
t1408 = t1482 * t1421;
t1440 = t1482 * t1475;
t1597 = t1482 * t1497;
t1595 = t1485 * t1497;
t1592 = t1496 * t1400;
t1591 = t1497 * qJD(2);
t1586 = t1502 * qJD(2);
t1468 = t1507 * t1482;
t1580 = 0.2e1 * t1475 ^ 2 - 0.1e1;
t1535 = -t1583 / 0.2e1;
t1348 = t1612 + t1393 * t1598 + t1480 * t1535 + t1574 * t1594 + t1583 / 0.4e1;
t1576 = 0.4e1 * qJD(1) * t1348;
t1575 = -0.4e1 * qJD(4) * t1348;
t1419 = t1493 * t1499 - t1646 * t1504;
t1512 = t1458 + (cos(pkin(17)) * t1419 + sin(pkin(17)) * t1656) * pkin(3);
t1573 = t1512 * t1643;
t1572 = t1419 * t1643;
t1571 = t1656 * t1643;
t1570 = t1458 * t1643;
t1446 = pkin(1) * t1597;
t1569 = pkin(4) * t1624;
t1369 = qJD(4) - t1655;
t1568 = pkin(4) * t1369 * t1422;
t1364 = (pkin(1) + t1579) * t1595 + (t1630 + (pkin(4) * t1652 + pkin(4) + t1642) * t1498) * t1503 + t1502 * t1434;
t1563 = t1364 * t1640;
t1562 = pkin(1) * t1617;
t1462 = qJD(3) * t1497 * pkin(1);
t1561 = (-t1422 * t1653 + t1364) * t1640;
t1560 = pkin(1) * t1591;
t1559 = t1499 * t1637;
t1558 = pkin(1) * t1586;
t1556 = t1504 * t1637;
t1555 = pkin(1) * (qJD(3) + 0.2e1 * qJD(2)) / 0.2e1;
t1553 = t1380 * t1634;
t1552 = t1381 * t1634;
t1551 = t1498 * t1633;
t1550 = t1503 * t1633;
t1549 = pkin(15) + t1483;
t1547 = t1374 * t1605;
t1546 = t1371 * t1496 * t1501;
t1545 = t1421 * t1623;
t1544 = t1422 * t1623;
t1543 = qJD(1) * t1614;
t1542 = t1473 * t1512 * qJD(1);
t1541 = t1473 * t1440;
t1540 = t1512 * t1622;
t1539 = t1414 * t1594;
t1537 = qJD(2) * t1588;
t1534 = t1642 * t1577;
t1533 = pkin(4) * t1560;
t1532 = qJD(1) * t1572;
t1531 = qJD(1) * t1571;
t1530 = qJD(1) * t1573;
t1529 = t1374 * t1569;
t1528 = qJD(2) * t1570;
t1527 = qJD(4) * t1546;
t1398 = t1499 * t1430 + t1482 * t1556;
t1401 = -t1430 * t1504 + t1482 * t1559;
t1356 = t1398 * t1490 + t1401 * t1491;
t1522 = t1398 * t1491 - t1490 * t1401;
t1524 = -(t1356 * t1503 + t1522 * t1498) * t1470 + (t1356 * t1498 - t1522 * t1503) * t1469;
t1410 = -t1499 * t1460 + t1556;
t1411 = t1460 * t1504 + t1559;
t1521 = t1410 * t1491 - t1411 * t1490;
t1518 = 0.4e1 * (pkin(8) * t1535 + t1574 * pkin(10) + t1415 * t1480 + t1539) * t1598 - 0.4e1 * t1615;
t1516 = t1482 * (-t1354 * t1469 + t1355 * t1470);
t1399 = -t1430 * t1503 + t1482 * t1566;
t1450 = t1549 + t1489;
t1441 = sin(t1450);
t1451 = t1549 - t1489;
t1442 = sin(t1451);
t1514 = t1632 + (-t1441 / 0.2e1 + t1442 / 0.2e1) * pkin(3);
t1443 = cos(t1450);
t1444 = cos(t1451);
t1513 = t1631 + (-t1444 / 0.2e1 - t1443 / 0.2e1) * pkin(3);
t1511 = -t1508 * qJD(2) + t1468 * t1652 + t1468;
t1365 = -t1504 * t1436 / 0.2e1 + t1525;
t1510 = qJD(4) * (0.2e1 * t1365 + t1518);
t1509 = qJD(1) * (-((0.4e1 * t1539 + (0.4e1 * t1480 - 0.2e1) * t1565 + ((0.4e1 * t1486 - 0.2e1) * t1480 - 0.2e1 * t1486 + 0.1e1) * pkin(10)) * t1469 + t1417 * t1404) * t1470 + t1404 * t1600 - 0.2e1 * t1365 + 0.4e1 * t1615);
t1463 = qJD(3) * t1642;
t1455 = pkin(4) * t1462;
t1452 = t1647 * qJD(1);
t1449 = qJD(1) * t1588;
t1447 = pkin(1) * t1596;
t1445 = pkin(4) * t1446;
t1439 = t1482 * t1473;
t1438 = t1580 * qJD(1);
t1431 = t1473 * t1622;
t1429 = qJD(1) * t1570;
t1413 = pkin(1) * t1476 - t1567;
t1402 = -qJD(4) * pkin(8) + t1404 * qJD(1);
t1385 = t1400 * t1501;
t1384 = -0.2e1 * t1626;
t1383 = 0.2e1 * t1626;
t1377 = qJD(4) * t1636 + t1402 * t1504;
t1376 = qJD(4) * t1635 - t1402 * t1499;
t1370 = t1410 * t1490 + t1411 * t1491;
t1366 = qJD(1) * t1546;
t1359 = t1372 * t1569;
t1357 = t1372 * t1605;
t1350 = -0.4e1 * t1628;
t1349 = 0.4e1 * t1628;
t1342 = t1605 + ((t1370 * t1498 - t1503 * t1521) * t1470 + (t1503 * t1370 + t1521 * t1498) * t1469) * qJD(4);
t1341 = (t1376 * t1490 + t1377 * t1491) * t1470 + (t1376 * t1491 - t1377 * t1490) * t1469 + t1606 + (-pkin(8) * t1486 + 0.2e1 * t1405 + t1518 - 0.2e1 * t1538 + t1564) * qJD(1);
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1537, t1647 * qJD(2), 0, -t1537, 0, 0, -pkin(12) * t1618, -pkin(12) * t1617, 0, 0, 0.2e1 * t1609, -t1482 * t1403, 0, -0.2e1 * t1609, 0, 0, pkin(12) * t1407 + (-t1591 + (t1536 + t1595) * t1577) * pkin(1), -pkin(12) * t1408 + (-t1586 + (t1502 * t1485 - t1497 * t1588) * t1577) * pkin(1), 0, -t1528, 0, 0, 0, 0, 0, 0, -t1374 * t1400, t1613, 0, t1430 * t1434 + t1511 * t1588 + (0.2e1 * t1413 * t1595 + (pkin(12) * t1597 + t1498 * t1534) * t1503) * pkin(4), -t1527, -0.2e1 * qJD(4) * t1614, t1496 * t1575, t1527, t1501 * t1575, 0, -t1374 * (t1496 * t1606 + t1385) + t1496 * t1510, t1374 * (-t1501 * t1606 + t1592) + t1501 * t1510, -t1613, ((pkin(4) * t1534 + t1511) * t1503 + pkin(12) * t1430) * t1498 + 0.2e1 * (t1413 * t1485 - t1492 / 0.2e1 + (t1461 + t1554) * t1482) * t1637 + t1653 * t1400, 0.4e1 * t1621, -0.8e1 * qJD(2) * t1352, 0, -0.4e1 * t1621, 0, 0, pkin(6) * t1619, -pkin(6) * t1620, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t1572, qJD(2) * t1571, 0, -t1528, t1541, t1482 * t1580, 0, -t1541, 0, 0, t1472 * t1555 + t1462 / 0.2e1 + t1514 * t1482, t1474 * t1555 + t1463 / 0.2e1 + t1513 * t1482, 0, -qJD(2) * t1573; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1449, t1452, t1617, -t1449, -t1618, 0, -t1551, -t1550, 0, 0, t1383, -t1625, t1408, t1384, t1407, 0, 0.2e1 * t1611, 0.2e1 * t1610, -t1562, -t1429, 0, 0, 0, 0, 0, 0, -t1547, t1357, -t1399, -t1616, 0, 0, 0, 0, 0, 0, -t1496 * t1399 - t1603 * t1655, -t1501 * t1399 + t1604 * t1655, -t1357, -t1629, t1349, -0.8e1 * t1627, -t1620, t1350, -t1619, 0, t1552, -t1553, 0, 0, 0, 0, 0, 0, 0, 0, -t1532, t1531, -t1562, -t1429, t1431, t1438, -t1440, -t1431, t1439, 0, (0.2e1 * t1645 + 0.2e1 * t1632 + (-t1441 + t1442) * pkin(3)) * t1650, (0.2e1 * t1644 + 0.2e1 * t1631 + (-t1443 - t1444) * pkin(3)) * t1650, -t1562, -t1530; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1383, -t1625, t1408, t1384, t1407, 0, t1544, -t1545, 0, 0, 0, 0, 0, 0, 0, 0, t1529, -t1359, -pkin(4) * t1408, t1563, 0, 0, 0, 0, 0, 0, (-t1408 * t1496 + t1601 * t1655) * pkin(4), (-t1408 * t1501 - t1602 * t1655) * pkin(4), t1359, t1561, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1431, t1438, -t1440, -t1431, t1439, 0, t1542, t1540, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1366, -0.2e1 * t1543, t1496 * t1657, t1366, t1501 * t1657, 0, t1496 * t1341, t1341 * t1501, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1449, -t1452, 0, t1449, 0, 0, t1551, t1550, 0, 0, t1384, t1625, 0, t1383, 0, 0, -0.2e1 * t1611, -0.2e1 * t1610, 0, t1429, 0, 0, 0, 0, 0, 0, t1547, -t1357, 0, t1616, 0, 0, 0, 0, 0, 0, -t1369 * t1603, t1369 * t1604, t1357, t1629, t1350, 0.8e1 * t1627, 0, t1349, 0, 0, -t1552, t1553, 0, 0, 0, 0, 0, 0, 0, 0, t1532, -t1531, 0, t1429, -t1431, -t1438, 0, t1431, 0, 0, -qJD(1) * (t1514 + t1645), -qJD(1) * (t1513 + t1644), 0, t1530; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1462, t1463, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1455, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1455, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1462, t1463, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1446, t1447, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1445, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1445, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1446, t1447, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1342 * t1501, t1342 * t1496, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1384, t1625, 0, t1383, 0, 0, -t1544, t1545, 0, 0, 0, 0, 0, 0, 0, 0, -t1529, t1359, 0, -t1563, 0, 0, 0, 0, 0, 0, t1501 * t1568, -t1496 * t1568, -t1359, -t1561, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1431, -t1438, 0, t1431, 0, 0, -t1542, -t1540, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1560, -t1558, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1533, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1533, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1560, -t1558, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1501 * t1639, -t1496 * t1639, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1366, 0.2e1 * t1543, t1496 * t1576, -t1366, t1501 * t1576, 0, t1496 * t1509 + t1385, t1501 * t1509 - t1592, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(1) * t1603 + t1496 * t1524, -qJD(1) * t1604 + t1501 * t1524, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, (-qJD(1) * t1601 + t1496 * t1516) * pkin(4), pkin(4) * (qJD(1) * t1602 + t1501 * t1516), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t1;
