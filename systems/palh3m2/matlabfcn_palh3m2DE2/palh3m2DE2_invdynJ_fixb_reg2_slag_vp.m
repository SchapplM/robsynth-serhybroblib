% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% palh3m2DE2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [4x1]
%   Generalized joint coordinates (joint angles)
% qJD [4x1]
%   Generalized joint velocities
% qJDD [4x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [18x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[AB,BC,BE,BG,DC,DT2,EP,GH,GP,HW,OT1,T1A,T1T2,phi1,phi2,phi410,phi78,phi79]';
% 
% Output:
% tau_reg [4x(4*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2020-05-07 04:24
% Revision: 70b73dc947b5bf54b9f851309d04479b7d95fc8d (2020-05-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = palh3m2DE2_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(4,1),zeros(4,1),zeros(4,1),zeros(3,1),zeros(18,1)}
assert(isreal(qJ) && all(size(qJ) == [4 1]), ...
  'palh3m2DE2_invdynJ_fixb_reg2_slag_vp: qJ has to be [4x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [4 1]), ...
  'palh3m2DE2_invdynJ_fixb_reg2_slag_vp: qJD has to be [4x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [4 1]), ...
  'palh3m2DE2_invdynJ_fixb_reg2_slag_vp: qJDD has to be [4x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'palh3m2DE2_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [18 1]), ...
  'palh3m2DE2_invdynJ_fixb_reg2_slag_vp: pkin has to be [18x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2020-05-07 04:23:19
% EndTime: 2020-05-07 04:23:37
% DurationCPUTime: 14.90s
% Computational Cost: add. (9408->628), mult. (7647->945), div. (625->6), fcn. (7100->83), ass. (0->501)
t2528 = -g(1) / 0.2e1;
t2523 = g(2) / 0.2e1;
t2207 = cos(qJ(3));
t2475 = t2207 * pkin(4);
t2137 = -pkin(1) + t2475;
t2208 = cos(qJ(2));
t2079 = t2137 * t2208;
t2201 = sin(qJ(3));
t2202 = sin(qJ(2));
t2425 = t2202 * t2201;
t2123 = pkin(4) * t2425;
t2549 = t2079 - t2123;
t2016 = pkin(12) - t2549;
t2193 = cos(pkin(16));
t2204 = sin(pkin(15));
t2430 = t2193 * t2204;
t2192 = sin(pkin(16));
t2210 = cos(pkin(15));
t2431 = t2192 * t2210;
t2042 = t2430 + t2431;
t2576 = t2016 * t2042;
t2488 = pkin(4) * qJD(3);
t2043 = -t2192 * t2204 + t2193 * t2210;
t2271 = t2201 * t2042 - t2043 * t2207;
t2272 = t2042 * t2207 + t2201 * t2043;
t2572 = -t2202 * t2271 + t2272 * t2208;
t2575 = t2572 * t2488;
t2185 = qJ(2) + qJ(3);
t2169 = qJ(1) - t2185;
t2134 = sin(t2169);
t2136 = cos(t2169);
t2545 = t2134 * t2528 + t2136 * t2523;
t2215 = qJD(4) ^ 2;
t2415 = t2208 * t2201;
t2361 = pkin(4) * t2415;
t2441 = t2137 * t2202;
t2263 = t2361 + t2441;
t1942 = t2271 * pkin(4);
t1943 = t2272 * pkin(4);
t1852 = -t2202 * (-pkin(1) * t2042 + t1943) - (pkin(1) * t2043 + t1942) * t2208;
t1853 = (-t2042 * t2208 - t2202 * t2043) * pkin(1) + t2572 * pkin(4);
t2175 = pkin(17) + pkin(18);
t2155 = sin(t2175);
t2156 = cos(t2175);
t2277 = t1852 * t2155 + t1853 * t2156;
t2467 = (qJD(1) * qJD(4));
t2440 = t2155 * t2042;
t1930 = -t2043 * t2156 + t2440;
t2217 = qJD(1) ^ 2;
t2558 = t1930 * t2217;
t2574 = -t2277 * t2215 + t2263 * (t2558 - (2 * t2467));
t2524 = -g(2) / 0.2e1;
t1898 = -t2202 * t2272 - t2271 * t2208;
t2573 = t1898 * t2488;
t2205 = sin(pkin(14));
t2211 = cos(pkin(14));
t2048 = t2204 * t2211 - t2210 * t2205;
t2410 = t2210 * t2211;
t2421 = t2204 * t2205;
t2051 = t2410 + t2421;
t2553 = -t2202 * t2048 + t2051 * t2208;
t1945 = t2553 * qJD(2);
t2554 = -t2208 * t2048 - t2202 * t2051;
t1944 = t2554 * qJD(2);
t2183 = t2210 ^ 2;
t2157 = -t2183 / 0.2e1;
t2409 = 0.1e1 / 0.4e1 + t2157;
t2168 = qJ(1) + t2185;
t2135 = cos(t2168);
t2497 = -sin(t2168) / 0.2e1;
t2399 = g(1) * t2497 + t2135 * t2523;
t2212 = pkin(10) * g(1);
t2213 = pkin(8) * g(1);
t2469 = pkin(15) + qJ(2);
t2166 = pkin(18) + t2469;
t2114 = pkin(17) + qJ(3) + t2166;
t2081 = pkin(16) + t2114;
t2058 = sin(t2081);
t2059 = cos(t2081);
t1999 = atan2(-t2058, t2059) + t2185;
t1994 = qJ(1) + t1999;
t1982 = cos(t1994);
t2504 = t1982 / 0.2e1;
t1978 = sin(t1994);
t2507 = -t1978 / 0.2e1;
t2518 = pkin(10) * g(2);
t2519 = pkin(8) * g(2);
t2571 = (t2212 + t2519) * t2504 + (t2213 - t2518) * t2507;
t2446 = t2058 ^ 2 / t2059 ^ 2;
t2000 = 0.1e1 / (0.1e1 + t2446);
t1899 = -t2000 * t2446 - t2000 + 0.1e1;
t1992 = qJ(4) + t1999;
t1987 = qJ(1) - t1992;
t1974 = cos(t1987);
t2508 = -t1974 / 0.4e1;
t1993 = -qJ(4) + t1999;
t1986 = qJ(1) + t1993;
t1973 = cos(t1986);
t2509 = t1973 / 0.4e1;
t2570 = (t2508 + t2509) * t1899;
t1985 = qJ(1) - t1993;
t1968 = sin(t1985);
t1984 = qJ(1) + t1992;
t2514 = -sin(t1984) / 0.4e1;
t2569 = (t2514 + t1968 / 0.4e1) * t1899;
t1970 = sin(t1987);
t2525 = g(1) / 0.4e1;
t2568 = g(3) * cos(t1992) / 0.2e1 + t1970 * t2525;
t2511 = -t1970 / 0.4e1;
t2521 = -g(3) / 0.2e1;
t2567 = sin(t1992) * t2521 + g(2) * t2511;
t2203 = sin(qJ(1));
t2209 = cos(qJ(1));
t2543 = -g(1) * t2209 - g(2) * t2203;
t2101 = qJD(2) * t2361;
t2418 = t2207 * t2202;
t2022 = t2418 * t2488 + t2101;
t1939 = qJD(2) * t2441 + qJD(3) * t2361 + t2022;
t2049 = t2415 + t2418;
t2038 = pkin(4) * t2049;
t1948 = qJD(2) * t2263 + qJD(3) * t2038;
t2073 = t2204 * pkin(8) + t2210 * pkin(10);
t2074 = t2210 * pkin(8) - t2204 * pkin(10);
t1996 = t2073 * t2193 + t2192 * t2074;
t1997 = -t2192 * t2073 + t2074 * t2193;
t2150 = t2183 - 0.1e1 / 0.2e1;
t2304 = t2150 * pkin(10);
t2411 = t2210 * t2204;
t2040 = pkin(8) * t2411 + t2304;
t2362 = pkin(10) * t2411;
t2041 = t2150 * pkin(8) - t2362;
t2173 = t2193 ^ 2;
t2432 = t2192 * t2193;
t2284 = -t2040 * t2432 + t2041 * t2173;
t1907 = -t2210 * t2074 / 0.2e1 + t2284;
t2451 = t2016 * t2043;
t2493 = t2183 / 0.2e1;
t2368 = t2493 - 0.1e1 / 0.4e1;
t2297 = t2368 * pkin(8);
t1906 = t2362 / 0.2e1 - t2297 + t2284;
t2148 = t2156 ^ 2;
t2456 = t1906 * t2148;
t2113 = -t2411 / 0.2e1;
t2307 = pkin(8) * t2113 + t2409 * pkin(10);
t1905 = t2040 * t2173 + t2041 * t2432 + t2307;
t2457 = t1905 * t2155;
t2227 = -0.2e1 * t2016 * t2440 + t2156 * (0.2e1 * t2451 + 0.8e1 * t2457) + 0.4e1 * t1907 - 0.8e1 * t2456;
t2560 = 2 * qJD(1);
t2371 = t1939 * t2560;
t2566 = -(t1939 - t1948) * qJD(4) + (-qJDD(4) * t1996 + t2042 * t2371) * t2155 - (-qJDD(4) * t1997 + t2043 * t2371) * t2156 - t2016 * qJDD(4) - qJDD(1) * t2227;
t2390 = qJDD(1) * t2553;
t2382 = t2554 * qJDD(1);
t2162 = cos(t2185);
t2564 = g(3) * t2162 - t2545;
t2186 = qJ(1) + qJ(4);
t2563 = -sin(t2186) / 0.2e1 - t1968 / 0.4e1 + t2514;
t2092 = t2123 + pkin(12);
t2533 = 0.2e1 * pkin(12);
t2347 = pkin(4) * t2202 * t2533;
t2221 = pkin(4) ^ 2;
t2417 = t2207 * t2221;
t2182 = t2208 ^ 2;
t2433 = t2182 * t2201;
t2534 = 0.2e1 * pkin(4);
t2562 = 0.2e1 * t2092 * t2361 + (pkin(1) * t2534 - 0.4e1 * t2417) * t2433 + t2207 * t2347 + 0.2e1 * t2201 * t2417;
t2414 = t2208 * t2207;
t2047 = t2414 - t2425;
t2035 = t2047 * t2488;
t2174 = qJD(2) + qJD(3);
t2360 = pkin(4) * t2414;
t2233 = qJD(2) * t2079 + qJD(3) * t2360 - t2174 * t2123;
t2561 = qJDD(1) * t2263 + (-qJD(2) * t2549 - t2035 + t2233) * qJD(1);
t2559 = -0.4e1 * t2217;
t1965 = t2047 * t2174;
t1966 = t2049 * t2174;
t1935 = t2271 * qJD(3);
t1926 = pkin(4) * t1935;
t1927 = qJD(3) * t1943;
t1837 = -t1926 * t2208 - t2202 * t1927 + ((t2202 * t2042 - t2043 * t2208) * pkin(1) + t1898 * pkin(4)) * qJD(2);
t1936 = t2272 * qJD(3);
t1847 = t1898 * qJD(2) - t1935 * t2208 - t2202 * t1936;
t2556 = t1837 * qJD(2) + t1853 * qJDD(2) + (qJD(3) * t1847 + qJDD(3) * t2572) * pkin(4) + t1997 * t2467 - (t2451 + 0.4e1 * t2457) * t2217;
t1851 = t1853 * qJD(2);
t1838 = -t2202 * t1926 + t1927 * t2208 + t1851;
t1848 = -qJD(2) * t2572 + t2202 * t1935 - t1936 * t2208;
t2555 = -t1838 * qJD(2) + t1852 * qJDD(2) - (-qJD(3) * t1848 - qJDD(3) * t1898) * pkin(4) + t2217 * t2576;
t2424 = t2202 * t2208;
t2369 = -0.2e1 * t2424;
t2427 = t2201 * t2207;
t2052 = t2369 * t2427;
t2181 = t2207 ^ 2;
t2392 = t2182 - 0.1e1 / 0.2e1;
t2552 = t2052 + (-t2201 ^ 2 + t2181) * t2392;
t2149 = t2181 - 0.1e1 / 0.2e1;
t2179 = t2202 ^ 2;
t2393 = t2179 - t2182;
t2551 = -t2393 * t2149 + t2052;
t2172 = qJDD(2) + qJDD(3);
t2476 = t2207 * pkin(1);
t2364 = t2174 * t2476;
t2492 = pkin(1) * t2201;
t2550 = qJD(3) * t2364 + t2172 * t2492;
t2188 = qJ(1) + qJ(2);
t2375 = pkin(1) * t2524;
t2526 = g(1) / 0.2e1;
t2376 = pkin(1) * t2526;
t2548 = cos(t2188) * t2375 + sin(t2188) * t2376;
t2200 = sin(qJ(4));
t2428 = t2200 * qJD(4);
t2342 = qJD(1) * t2428;
t2206 = cos(qJ(4));
t2383 = qJDD(1) * t2206;
t2546 = t2342 - t2383;
t2466 = qJD(1) * t1939;
t2544 = -qJDD(1) * t2016 - t2466;
t1969 = sin(t1986);
t2187 = qJ(1) - qJ(4);
t2160 = sin(t2187);
t2542 = t2160 / 0.2e1 - t1969 / 0.4e1;
t2539 = t2134 * t2524 + t2136 * t2528;
t2164 = cos(t2187);
t2538 = -t1973 / 0.4e1 + t2508 + t2164 / 0.2e1;
t2276 = -t1898 * t2155 - t2156 * t2572;
t2537 = -t2049 * t2467 + t2215 * t2276;
t2472 = pkin(4) * qJDD(3);
t2536 = t2233 * qJD(2) + t2263 * qJDD(2) + t1965 * t2488 + t2049 * t2472;
t2532 = -2 * qJD(1);
t2530 = -0.2e1 * t2092;
t2529 = -0.2e1 * t2217;
t2527 = -g(1) / 0.4e1;
t2522 = g(2) / 0.4e1;
t2520 = -0.8e1 * qJDD(1);
t2128 = sin(t2166);
t2129 = cos(t2166);
t2037 = atan2(t2128, -t2129);
t2026 = pkin(17) - t2037;
t2017 = -qJ(2) + t2026;
t2090 = sin(t2114);
t2091 = cos(t2114);
t1931 = -atan2(-t2090, -t2091) + t2017;
t1922 = qJ(1) + t1931;
t2517 = sin(t1922) / 0.2e1;
t2516 = cos(t1922) / 0.2e1;
t2515 = -t1948 / 0.2e1;
t1995 = qJ(1) - t1999;
t1979 = sin(t1995);
t2506 = -t1979 / 0.2e1;
t2505 = t1979 / 0.2e1;
t1983 = cos(t1995);
t2503 = -t1983 / 0.2e1;
t2502 = t1983 / 0.2e1;
t2028 = qJ(2) + t2037;
t2018 = qJ(1) + t2028;
t2501 = sin(t2018) / 0.2e1;
t2019 = qJ(1) - t2028;
t2500 = -cos(t2019) / 0.2e1;
t2167 = pkin(14) - t2469;
t2146 = -qJ(1) + t2167;
t2499 = -sin(t2146) / 0.2e1;
t2145 = qJ(1) + t2167;
t2498 = -cos(t2145) / 0.2e1;
t2491 = pkin(1) * t2202;
t2216 = qJD(2) ^ 2;
t2490 = pkin(1) * t2216;
t2199 = cos(pkin(17));
t2489 = pkin(3) * t2199;
t2485 = g(1) * t2203;
t2480 = g(2) * t2209;
t2479 = g(3) * t1899;
t2197 = sin(pkin(17));
t2478 = t2197 * pkin(3);
t2477 = t2201 * g(3);
t2474 = t2208 * pkin(1);
t2473 = t2208 * g(3);
t2471 = pkin(6) * t2217;
t2196 = sin(pkin(18));
t2470 = t2196 * pkin(12);
t2468 = qJD(1) * qJD(2);
t2465 = qJD(1) * t1965;
t2464 = qJD(1) * t2200;
t2463 = qJD(1) * t2206;
t2462 = qJD(2) * t2202;
t2461 = t1899 * t1969;
t1972 = cos(t1985);
t2460 = t1899 * t1972;
t2459 = t1899 * t1982;
t2458 = t1899 * t1983;
t2412 = t2210 * t2196;
t2198 = cos(pkin(18));
t2422 = t2204 * t2198;
t2045 = t2412 + t2422;
t2046 = -t2204 * t2196 + t2210 * t2198;
t1925 = -t2045 * t2478 + t2046 * t2489 - pkin(12);
t1912 = t1925 - t2474;
t2158 = sin(t2185);
t2455 = t1912 * t2158;
t2437 = t2156 * t2042;
t2439 = t2155 * t2043;
t1928 = t2437 + t2439;
t1924 = t1928 ^ 2;
t2454 = t1924 * t2217;
t2453 = t1996 * t2155;
t2452 = t1997 * t2156;
t2450 = t2263 * t2217;
t2449 = t2038 * t2200;
t2448 = t2038 * t2206;
t2447 = t2038 * t2217;
t2445 = t2090 ^ 2 / t2091 ^ 2;
t2444 = t2092 * t2202;
t2443 = t2128 ^ 2 / t2129 ^ 2;
t2130 = pkin(12) + t2474;
t2442 = t2130 * t2217;
t2438 = t2155 * t2156;
t2436 = t2162 * t2174;
t2435 = t2162 * t2217;
t2219 = pkin(10) ^ 2;
t2220 = pkin(8) ^ 2;
t2171 = -t2219 + t2220;
t2115 = t2171 * t2183;
t2434 = t2181 * t2221;
t2429 = t2196 * t2198;
t2423 = t2202 * t2217;
t2420 = t2205 * t2211;
t2419 = t2206 * qJD(4);
t2413 = t2208 * t2217;
t2366 = qJD(3) * t2492;
t2121 = qJD(2) * t2366;
t2407 = t2217 * t2455 + t2121;
t2119 = cos(t2146);
t2404 = g(2) * t2499 + t2119 * t2526;
t2403 = g(1) * t2499 + t2119 * t2524;
t2402 = t2399 * pkin(4);
t2400 = g(2) * t2497 + t2135 * t2528;
t2303 = pkin(8) * t2362;
t2398 = -0.2e1 * t2303 + t2115;
t2397 = qJD(3) * qJD(2) * t2476 + qJDD(2) * t2492;
t2223 = pkin(1) ^ 2;
t2396 = -0.2e1 * pkin(1) * t2475 + t2223;
t2153 = t2158 ^ 2;
t2154 = t2162 ^ 2;
t2395 = t2153 - t2154;
t2177 = t2200 ^ 2;
t2180 = t2206 ^ 2;
t2394 = t2177 - t2180;
t2391 = 0.2e1 * pkin(6);
t2388 = qJDD(1) * t2047;
t2387 = qJDD(1) * t2049;
t2386 = qJDD(1) * t2130;
t2385 = qJDD(1) * t2162;
t2384 = qJDD(1) * t2200;
t2138 = -pkin(4) + t2476;
t2380 = t2138 * qJDD(2);
t2379 = t2158 * qJDD(1);
t2378 = t2202 * qJDD(1);
t2377 = t2208 * qJDD(1);
t2373 = pkin(12) * t2480;
t2372 = 0.2e1 * t2468;
t2367 = pkin(1) * t2462;
t2365 = t2049 * t2491;
t2363 = pkin(1) * t2423;
t1895 = sin(t1999) * t2479;
t1896 = cos(t1999) * t2479;
t2359 = t2208 * t2480;
t2358 = t2210 * t2478;
t1971 = cos(t1984);
t1959 = t1971 * t2527;
t1955 = t1971 * t2522;
t2354 = t1978 * t2523;
t2353 = g(2) * t2506;
t2351 = t2479 / 0.2e1;
t2348 = pkin(1) * t2378;
t2346 = qJD(1) * t2462;
t2345 = t2208 * t2468;
t2341 = qJD(2) * t2444;
t2340 = t2553 * t2217 * t2554;
t2239 = -t2150 * t2173 + t2411 * t2432 - 0.1e1 / 0.4e1;
t2339 = (t2157 - t2239) * t2438;
t2151 = t2220 / 0.2e1 - t2219 / 0.2e1;
t2006 = pkin(8) * t2304 + t2151 * t2411;
t2338 = t2006 * t2432;
t2044 = -t2221 + t2396 + 0.2e1 * t2434;
t2336 = t2044 * t2424;
t2335 = t2202 * t2413;
t2176 = t2198 ^ 2;
t2334 = t2176 * t2411;
t2333 = t2217 * t2049 * t2047;
t2328 = t1899 * t2507;
t2327 = t1899 * t2505;
t2326 = t2459 / 0.2e1;
t2325 = -t2458 / 0.2e1;
t2324 = t2458 / 0.2e1;
t2321 = t2439 / 0.4e1;
t2320 = -t2432 / 0.2e1;
t2112 = t2411 / 0.4e1;
t1923 = -qJ(1) + t1931;
t1916 = sin(t1923);
t2319 = t2517 - t1916 / 0.2e1;
t2318 = t2517 + t1916 / 0.2e1;
t1918 = cos(t1923);
t2317 = t2516 - t1918 / 0.2e1;
t2316 = t2516 + t1918 / 0.2e1;
t2009 = sin(t2019);
t2315 = t2501 - t2009 / 0.2e1;
t2314 = t2501 + t2009 / 0.2e1;
t2010 = cos(t2018);
t2313 = -t2010 / 0.2e1 + t2500;
t2312 = t2010 / 0.2e1 + t2500;
t2311 = -t2220 / 0.4e1 + t2219 / 0.4e1;
t2310 = t1912 * t2435 + t2397;
t1988 = t2150 * t2432 + t2173 * t2411 + t2113;
t2309 = t1988 * t2148 + t2173 * t2113 + t2112;
t2308 = t2223 * qJDD(2) - t2491 * t2543;
t2306 = 0.1e1 + t2445;
t2305 = 0.1e1 + t2443;
t2301 = -0.2e1 * t2346;
t2300 = 0.4e1 * t2217 * t2456;
t2298 = (-qJDD(2) - t2172) * t2207;
t2296 = qJD(2) * t2364;
t1859 = t2150 * t2320 + t2309 + t2339;
t2242 = t2339 + (t2148 - 0.1e1 / 0.2e1) * t1988;
t2262 = t2437 / 0.4e1 + t2321;
t2295 = qJDD(4) * t2262 + (t1859 + t2242) * qJDD(1);
t2294 = t2130 * t2485 - t2373;
t2293 = pkin(12) * t2485 - t2373;
t2292 = t2206 * t2342;
t2291 = t2158 * qJD(1) * t2436;
t2290 = t2202 * t2345;
t2289 = t2206 * t2200 * t2454;
t2288 = t1851 + t2575;
t2287 = -t2480 + t2485;
t2286 = t2511 + t2542;
t2285 = -t2164 / 0.2e1 + t1974 / 0.4e1 + t2509;
t1850 = qJD(1) * t2242 + qJD(4) * t2262;
t1919 = (t2430 / 0.4e1 + t2431 / 0.4e1) * t2156 + t2321;
t2283 = qJD(1) * (-qJD(4) * t1919 + t1850);
t2282 = qJD(4) * (-qJD(1) * t1859 - t1850);
t2281 = g(1) * t2325 + g(2) * t2328 + t1899 * t2353 + t2459 * t2528 - t1895;
t2280 = g(2) * t2327 + t1899 * t2354 + t1895 + (t2324 + t2326) * g(1);
t2279 = t1896 + (t2325 + t2326) * g(2) + (t2327 + t2328) * g(1);
t2278 = -((-t1942 * t2208 - t2202 * t1943) * qJD(2) + t2573) * t2156 + ((-t2202 * t1942 + t1943 * t2208) * qJD(2) + t2575) * t2155;
t2274 = t2452 - t2453;
t2036 = 0.1e1 / t2305;
t1913 = t2036 * t2443 + t2036 - 0.1e1;
t2268 = t2387 + t2465;
t2267 = qJDD(2) * t2202 + t2216 * t2208;
t2116 = sin(t2145);
t2266 = g(2) * t2498 + t2116 * t2526;
t2265 = g(1) * t2498 + t2116 * t2524;
t2264 = t1907 * qJD(1) + t2016 * qJD(4) / 0.2e1;
t1841 = t1852 * qJD(2) + t2573;
t2261 = -0.2e1 * qJD(2) * t2336 + qJD(3) * t2562 + t2101 * t2533;
t2163 = cos(t2186);
t2260 = g(1) * t2563 + t1972 * t2522 + t2163 * t2523 + t1955;
t2259 = g(2) * t2563 + t1972 * t2527 + t2163 * t2528 + t1959;
t2258 = t2202 * (pkin(1) * t1925 - t2208 * t2223);
t2255 = -t2138 * t2472 + (t2221 + t2396) * qJDD(2) + t2121 * t2534 + qJD(3) ^ 2 * pkin(4) * t2492;
t2250 = pkin(12) * t2217 - t2543;
t2218 = pkin(12) ^ 2;
t2249 = t2044 * t2182 + t2201 * t2347 + t2218 + t2221 - t2434;
t2248 = qJDD(1) * t2533 + t2287;
t2247 = 0.2e1 * t2544;
t2245 = (-t2201 * qJD(2) * t2174 - t2207 * qJDD(2)) * pkin(1);
t2244 = t2221 * qJDD(3) - t2562 * t2217 / 0.2e1;
t2184 = t2211 ^ 2;
t1975 = -t2150 * t2420 + t2184 * t2411 + t2113;
t1998 = t2150 * t2184 + t2410 * t2421 + t2409;
t2243 = t1975 * t2369 - t2393 * t1998;
t2241 = t2262 * t2559;
t2238 = -g(3) * t2158 + t2397 + t2400 + t2539;
t2237 = 0.2e1 * pkin(1) * t2346 - 0.2e1 * t2386;
t2236 = -t2049 * t2442 + t2121 + t2399 + t2564;
t1977 = sin(t1993);
t2235 = t1977 * t2351 + t2460 * t2525 + t2461 * t2522 + t2569 * g(2) + t2570 * g(1) + (t1959 + t2567) * t1899;
t1981 = cos(t1993);
t2234 = t1981 * t2351 + t2461 * t2527 + t2569 * g(1) + (t1955 + t2568) * t1899 + (-t2460 / 0.4e1 + t2570) * g(2);
t2141 = t2213 + t2518;
t2144 = t2212 - t2519;
t2231 = pkin(4) * t2564 + pkin(8) * t1896 + pkin(10) * t1895 + t1899 * t2571 + t2141 * t2327 + t2144 * t2324 + t2402;
t2230 = t2316 * g(1) + t2319 * g(2) - sin(t1931) * g(3);
t2229 = -t2318 * g(1) + t2317 * g(2) - cos(t1931) * g(3);
t2228 = -t2336 + pkin(12) * t2361 + (-pkin(4) * t2433 + t2444) * t2137;
t2226 = -t2276 * qJDD(4) + (t1847 * t2156 + t1848 * t2155) * qJD(4) + t2268;
t2225 = t2277 * qJDD(4) + ((t1837 - t1841) * t2156 + (-t1838 + t2288) * t2155) * qJD(4) + t2561;
t2224 = (t2016 - t2274) * t2215 + t2227 * t2467 + t2536;
t2189 = qJ(1) - qJ(2);
t2170 = t2174 ^ 2;
t2165 = cos(t2189);
t2161 = sin(t2189);
t2078 = t2174 * t2366;
t2053 = t2158 * t2435;
t2039 = t2395 * t2217;
t2007 = 0.1e1 / t2306;
t2005 = -t2151 + t2398;
t2003 = -pkin(1) * t2267 + t2543;
t1952 = (-t2123 + t2360) * qJD(2) + t2035;
t1937 = (t2130 * t2423 - t2473) * pkin(1) + t2308;
t1911 = -qJDD(1) * t1930 + qJDD(4);
t1910 = t2130 ^ 2 * qJDD(1) + (t2130 * t2301 - t2359) * pkin(1) + t2294;
t1902 = t2306 * t2007;
t1876 = -t2007 * t2445 + t1913 - t2007;
t1 = [0, 0, 0, 0, 0, qJDD(1), t2287, -t2543, 0, 0, t2179 * qJDD(1) + 0.2e1 * t2290, 0.2e1 * t2202 * t2377 - 0.2e1 * t2393 * t2468, t2267, t2182 * qJDD(1) - 0.2e1 * t2290, qJDD(2) * t2208 - t2216 * t2202, 0, pkin(12) * t2301 + t2208 * t2248, -0.2e1 * pkin(12) * t2345 - t2202 * t2248, t2543, qJDD(1) * t2218 + t2293, (t2387 + 0.2e1 * t2465) * t2049, 0.4e1 * (t2149 * t2424 + t2392 * t2427) * qJDD(1) + 0.4e1 * t2551 * t2468 + 0.4e1 * t2552 * qJD(1) * qJD(3), -t2174 * t1965 - t2172 * t2049, (t1966 * t2532 + t2388) * t2047, t2174 * t1966 - t2172 * t2047, 0, -0.2e1 * t2047 * t2386 + (t2130 * t1966 + t2047 * t2367) * t2560 + t2399 + t2545, 0.2e1 * t2049 * t2386 + (-qJD(2) * t2365 + t2130 * t1965) * t2560 + t2400 - t2539, t2003, t1910, qJDD(1) * t1924, (-(t2493 + t2239) * t2438 - t2368 * t2432 + t2309) * t2520, 0, qJDD(1) * t1930 ^ 2, 0, 0, -t1930 * t2247 + (t2502 + t2504) * g(2) + (t2506 + t2507) * g(1), t1928 * t2247 + (t2505 + t2507) * g(2) + (t2502 - t1982 / 0.2e1) * g(1), t2543 + t2536, t2261 * qJD(1) + t2249 * qJDD(1) + t2287 * t2092 + (t2341 * t2560 + (qJDD(1) * t2530 + t2022 * t2532 - t2287) * t2208) * t2137, (qJDD(1) * t2180 - 0.2e1 * t2292) * t1924, 0.2e1 * (-t2200 * t2383 + t2394 * t2467) * t1924, 0.4e1 * t2200 * t2282 + 0.4e1 * t2206 * t2295, (qJDD(1) * t2177 + 0.2e1 * t2292) * t1924, -0.4e1 * t2200 * t2295 + 0.4e1 * t2206 * t2282, -t1911 * t1930, t2286 * g(1) + t2285 * g(2) + t2224 * t2200 + t2206 * t2566 + t2260, t2285 * g(1) - t2286 * g(2) - t2200 * t2566 + t2224 * t2206 + t2259, (t1905 * t2148 + (t1906 * t2155 - t2576 / 0.4e1) * t2156 - t2016 * t2321 + t2307 * t2173 + t2041 * t2320 + pkin(8) * t2112 + (-0.1e1 / 0.4e1 + t2183 / 0.4e1) * pkin(10)) * t2520 + 0.8e1 * t2262 * t2466 + t2353 + t2354 + (t2503 + t2504) * g(1), -0.2e1 * t2452 * t2466 + ((t2006 * t2173 + t2005 * t2432 / 0.2e1 + t2311 * t2411 - pkin(10) * t2297) * t2155 + t2016 * t1997 / 0.4e1) * t2156 * t2520 + (0.2e1 * (-t2022 * t2208 + t2341) * t2137 + t2261) * qJD(1) + t2141 * t2506 + t2144 * t2503 + t2161 * t2376 + t2165 * t2375 + t2293 + t2402 - 0.2e1 * t2544 * t2453 + (0.4e1 * (t2005 * t2173 - t2151 * t2183 + t2303 - t2311 - 0.2e1 * t2338) * t2148 + t2079 * t2530 + (t2171 + 0.4e1 * t2303 - 0.2e1 * t2115) * t2173 + 0.4e1 * t2338 + t2219 + t2249 + t2398) * qJDD(1) + t2545 * pkin(4) + t2548 + t2571, -(t2372 * t2553 - t2382) * t2554, 0.8e1 * (t1975 * t2182 + t1998 * t2424 + t2113 * t2184 + t2368 * t2420 + t2112) * qJDD(1) + 0.8e1 * t2243 * t2468, qJD(2) * t1945 - qJDD(2) * t2554, -(-t2372 * t2554 - t2390) * t2553, t1944 * qJD(2) + qJDD(2) * t2553, 0, (-qJD(1) * t1944 - t2390) * t2391 + t2266 + t2403, (t1945 * qJD(1) - t2382) * t2391 + t2265 + t2404, t2543, (pkin(6) * qJDD(1) - t2287) * pkin(6), t2045 ^ 2 * qJDD(1), -0.4e1 * qJDD(1) * (t2150 * t2429 + t2113 + t2334), 0, qJDD(1) * t2046 ^ 2, 0, 0, g(1) * t2314 + g(2) * t2313 + t2046 * t2237, g(1) * t2312 + g(2) * t2315 + t2045 * t2237, t2003, t1910, t2153 * qJDD(1) + 0.2e1 * t2291, -0.2e1 * qJD(1) * t2174 * t2395 + 0.2e1 * t2162 * t2379, -t2172 * t2158 - t2170 * t2162, qJDD(1) * t2154 - 0.2e1 * t2291, t2170 * t2158 - t2172 * t2162, 0, 0.2e1 * t1912 * t2385 + (t2162 * t2367 - t2174 * t2455) * t2560 + t2316 * g(2) - t2319 * g(1), -0.2e1 * t1912 * t2379 + (-t1912 * t2436 - t2158 * t2367) * t2560 + t2318 * g(2) + t2317 * g(1), t2003, pkin(3) * t2287 * cos(t2017) - pkin(1) * t2359 + t2258 * t2372 + t2294 + (t2182 * t2223 - 0.2e1 * t1925 * t2474 - 0.4e1 * (t2334 * t2478 + (t2210 * pkin(12) / 0.2e1 + t2150 * t2196 * t2478) * t2198 - t2204 * (t2358 + t2470) / 0.2e1) * t2489 + 0.2e1 * pkin(3) * (pkin(3) * t2412 + t2197 * pkin(12)) * t2422 + 0.2e1 * t2358 * t2470 + t2218 + (0.4e1 * (t2150 * t2176 - t2411 * t2429 + t2409) * t2199 ^ 2 + (-0.2e1 * t2183 + 0.1e1) * t2176 + t2183) * pkin(3) ^ 2) * qJDD(1); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2335, t2393 * t2217, t2378, t2335, t2377, qJDD(2), t2202 * t2250 - t2473, g(3) * t2202 + t2208 * t2250, 0, 0, -t2333, t2551 * t2529, -t2387, t2333, -t2388, t2172, t2078 + (-t2047 * t2423 + t2298) * pkin(1) + t2236, (-t2047 * t2130 + t2365) * t2217 + t2238 + t2550, -t2348, t1937, 0, 0, 0, 0, 0, 0, -t1930 * t2450 + t2279, t1928 * t2450 + t2281, t2561, -t2228 * t2217 - (pkin(4) * t2477 - t2137 * t2543) * t2202 + g(3) * t2079 + t2255 + t2543 * t2361, 0, 0, 0, 0, 0, 0, t2225 * t2200 - t2574 * t2206 + t2234, t2574 * t2200 + t2225 * t2206 + t2235, t2241 * t2263 + t2280, t2231 + (t2161 * t2528 + t2165 * t2523 - t2473) * pkin(1) + (t2263 * t2274 - t2228) * t2217 + t2255 + t2548, t2340, t2243 * t2559, -t2382, -t2340, t2390, qJDD(2), t2554 * t2471 - g(3) * cos(t2167) - t2266 + t2403, -t2553 * t2471 - g(3) * sin(t2167) - t2265 + t2404, 0, 0, 0, 0, 0, 0, 0, 0, -t2046 * t2363 + (cos(t2028) * g(3) + t2312 * g(2) - t2315 * g(1)) * t1913, -t2045 * t2363 + (-sin(t2028) * g(3) - t2314 * g(2) + t2313 * g(1)) * t1913, -t2348, t1937, -t2053, t2039, -t2379, t2053, -t2385, t2172, t2078 + (-t2162 * t2423 + t2298) * pkin(1) + t2229 * t1876 + t2407, t1876 * t2230 + t2158 * t2363 + t2310 + t2550, -t2348, -pkin(1) * t2473 - t2217 * t2258 + (-t2543 * t1913 * sin(t2017) + (t2036 * t2305 - 0.1e1) * g(3) * (sin(t2026) * t2202 + cos(t2026) * t2208)) * pkin(3) + t2308; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2333, t2552 * t2529, -t2387, t2333, -t2388, t2172, t2245 + t2236, -t2047 * t2442 + t2238 - t2296, 0, 0, 0, 0, 0, 0, 0, 0, -t1930 * t2447 + t2279, t1928 * t2447 + t2281, pkin(4) * t2268 - qJD(1) * t1952, (g(3) * t2414 - t2380 + (t2208 * t2543 - t2490) * t2201 + (-t2477 + (t2137 * t2413 + t2543) * t2207) * t2202) * pkin(4) + t2244, 0, 0, 0, 0, 0, 0, (qJD(1) * t2448 + t2200 * t2278) * qJD(4) - t2558 * t2448 - t1952 * t2464 + t2234 + (t2226 * t2200 - t2206 * t2537) * pkin(4), (-qJD(1) * t2449 + t2206 * t2278) * qJD(4) - t1952 * t2463 + t2558 * t2449 + t2235 + (t2200 * t2537 + t2226 * t2206) * pkin(4), t2038 * t2241 + t2280, t2231 + (t2137 * t2207 * t2335 - t2201 * t2490 - t2380) * pkin(4) + t2274 * t2447 + t2244, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2053, t2039, -t2379, t2053, -t2385, t2172, -t1902 * t2229 + t2245 + t2407, -t1902 * t2230 - t2296 + t2310, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2289, -t2394 * t2454, 0.4e1 * t1919 * t2383 + 0.4e1 * t2200 * t2283, -t2289, -0.4e1 * t1919 * t2384 + 0.4e1 * t2206 * t2283, t1911, t2260 + (-t2264 * t2200 + t2206 * t2515) * t2560 + t2200 * t2300 + t1969 * t2525 + t1981 * t2521 + t2160 * t2528 - t1939 * t2463 + t2546 * t2016 + (-t2546 * t1997 + t2556 * t2200) * t2156 + (-t1841 * t2419 + (qJD(4) * t1841 - qJDD(1) * t1996) * t2206 + t2555 * t2200) * t2155 + t2538 * g(2) + t2568, t2259 + (t2200 * t2515 + t2264 * t2206) * t2532 + t2206 * t2300 + t1977 * t2521 + t1939 * t2464 + (-t1997 * t2384 + (-t1997 * t2463 - t2200 * t2288) * qJD(4) + t2288 * t2428 + t2556 * t2206) * t2156 + (qJD(1) * t2419 + t2384) * t2016 + t2542 * g(2) + (t1996 * t2384 + t2555 * t2206) * t2155 + t2538 * g(1) + t2567, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
tau_reg = t1;
