% Calculate inertial parameters regressor of coriolis matrix for
% palh3m2DE2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [4x1]
%   Generalized joint coordinates (joint angles)
% qJD [4x1]
%   Generalized joint velocities
% pkin [18x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[AB,BC,BE,BG,DC,DT2,EP,GH,GP,HW,OT1,T1A,T1T2,phi1,phi2,phi410,phi78,phi79]';
% 
% Output:
% cmat_reg [(4*4)x(4*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2020-05-07 04:24
% Revision: 70b73dc947b5bf54b9f851309d04479b7d95fc8d (2020-05-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = palh3m2DE2_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(4,1),zeros(4,1),zeros(18,1)}
assert(isreal(qJ) && all(size(qJ) == [4 1]), ...
  'palh3m2DE2_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [4x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [4 1]), ...
  'palh3m2DE2_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [4x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [18 1]), ...
  'palh3m2DE2_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [18x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2020-05-07 04:23:14
% EndTime: 2020-05-07 04:23:19
% DurationCPUTime: 4.84s
% Computational Cost: add. (1513->271), mult. (3086->463), div. (0->0), fcn. (2475->26), ass. (0->259)
t1678 = cos(pkin(15));
t1660 = t1678 ^ 2;
t1641 = t1660 - 0.1e1 / 0.2e1;
t1665 = cos(pkin(16));
t1654 = t1665 ^ 2;
t1749 = -t1660 / 0.2e1 + 0.1e1 / 0.4e1;
t1673 = sin(pkin(15));
t1758 = t1678 * t1673;
t1664 = sin(pkin(16));
t1770 = t1664 * t1665;
t1657 = pkin(17) + pkin(18);
t1643 = sin(t1657);
t1644 = cos(t1657);
t1773 = t1643 * t1644;
t1834 = (t1641 * t1654 - t1758 * t1770 + t1749) * t1773;
t1588 = -t1664 * t1678 - t1665 * t1673;
t1589 = -t1664 * t1673 + t1665 * t1678;
t1833 = t1644 * t1588 - t1643 * t1589;
t1557 = t1641 * t1770 + (t1654 - 0.1e1 / 0.2e1) * t1758;
t1638 = t1644 ^ 2;
t1786 = t1557 * t1638;
t1832 = t1833 * qJD(4) + (0.2e1 * t1557 - 0.4e1 * t1786 - 0.4e1 * t1834) * qJD(1);
t1667 = sin(pkin(18));
t1821 = cos(pkin(18));
t1831 = t1678 * t1667 + t1673 * t1821;
t1650 = qJD(2) + qJD(3) / 0.2e1;
t1752 = 0.2e1 * t1650;
t1777 = t1588 * t1643;
t1829 = t1589 * t1644 + t1777;
t1830 = t1829 * qJD(1);
t1810 = t1678 * pkin(10);
t1607 = t1673 * pkin(8) + t1810;
t1812 = t1673 * pkin(10);
t1608 = t1678 * pkin(8) - t1812;
t1827 = (-t1664 * t1607 + t1608 * t1665) * t1644 - (t1607 * t1665 + t1664 * t1608) * t1643;
t1677 = cos(qJ(2));
t1659 = t1677 ^ 2;
t1756 = t1659 / 0.2e1 - 0.1e1 / 0.4e1;
t1676 = cos(qJ(3));
t1658 = t1676 ^ 2;
t1826 = -0.2e1 * t1658;
t1825 = pkin(12) / 0.2e1;
t1824 = qJD(1) / 0.2e1;
t1822 = 0.2e1 * t1659 - 0.1e1;
t1662 = 0.2e1 * qJ(2) + qJ(3);
t1646 = sin(t1662);
t1820 = pkin(1) * t1646;
t1648 = cos(t1662);
t1819 = pkin(1) * t1648;
t1672 = sin(qJ(2));
t1818 = pkin(1) * t1672;
t1817 = pkin(1) * t1676;
t1815 = pkin(4) * qJD(1);
t1671 = sin(qJ(3));
t1549 = -t1588 * t1676 + t1671 * t1589;
t1550 = t1671 * t1588 + t1589 * t1676;
t1525 = t1549 * t1677 + t1672 * t1550;
t1526 = -t1672 * t1549 + t1550 * t1677;
t1761 = t1677 * t1671;
t1762 = t1676 * t1672;
t1595 = t1761 + t1762;
t1801 = qJD(1) * t1595;
t1814 = pkin(4) * (t1801 + (t1525 * t1644 + t1526 * t1643) * qJD(4));
t1813 = t1671 * pkin(4);
t1811 = t1676 * pkin(4);
t1809 = pkin(6) * qJD(1);
t1808 = qJD(1) * pkin(12);
t1663 = qJ(2) + qJ(3);
t1647 = sin(t1663);
t1807 = t1647 * pkin(12);
t1649 = cos(t1663);
t1806 = t1649 * pkin(12);
t1805 = t1671 * pkin(12);
t1651 = t1677 * pkin(1);
t1632 = t1651 + pkin(12);
t1640 = t1659 - 0.1e1 / 0.2e1;
t1765 = t1672 * t1677;
t1561 = t1640 * t1758 + t1641 * t1765;
t1701 = t1758 * t1765;
t1568 = -t1640 * t1660 + t1701 + t1756;
t1679 = cos(pkin(14));
t1661 = t1679 ^ 2;
t1674 = sin(pkin(14));
t1764 = t1674 * t1679;
t1522 = t1561 * t1661 + t1568 * t1764 + t1749 * t1765 - t1756 * t1758;
t1804 = qJD(1) * t1522;
t1635 = t1677 * t1825;
t1757 = t1635 - pkin(1) / 0.2e1;
t1600 = pkin(1) * t1659 + t1757;
t1625 = t1651 + t1825;
t1803 = qJD(1) * (t1600 * t1671 + t1625 * t1762);
t1760 = t1677 * t1676;
t1711 = t1672 * t1760;
t1574 = 0.4e1 * t1671 * t1711 + (-0.4e1 * t1659 + 0.2e1) * t1658 + t1822;
t1802 = qJD(1) * t1574;
t1800 = qJD(1) * t1632;
t1799 = qJD(1) * t1649;
t1798 = qJD(2) * t1522;
t1594 = t1673 * t1679 - t1678 * t1674;
t1596 = t1673 * t1674 + t1678 * t1679;
t1552 = t1677 * t1594 + t1672 * t1596;
t1797 = qJD(2) * t1552;
t1796 = qJD(2) * t1672;
t1795 = qJD(2) * t1677;
t1634 = pkin(1) - t1811;
t1766 = t1672 * t1671;
t1740 = pkin(4) * t1766;
t1576 = t1634 * t1677 + pkin(12) + t1740;
t1794 = qJD(4) * t1576;
t1732 = pkin(4) * t1761;
t1581 = t1672 * t1634 - t1732;
t1681 = pkin(4) ^ 2;
t1682 = pkin(1) ^ 2;
t1753 = -0.2e1 * t1811;
t1590 = pkin(1) * t1753 + 0.2e1 * t1658 * t1681 - t1681 + t1682;
t1729 = t1811 / 0.2e1;
t1754 = -0.2e1 * t1813;
t1793 = ((pkin(12) * t1634 + t1590 * t1677) * t1672 + (t1634 * t1659 + t1729 + t1757) * t1754 - t1827 * t1581) * qJD(1);
t1523 = t1568 * t1661 - t1561 * t1764 + t1756 * t1660 - t1701 / 0.2e1 - t1659 / 0.4e1 + 0.1e1 / 0.8e1;
t1792 = t1523 * qJD(1);
t1606 = pkin(12) * t1672 + t1813;
t1791 = ((-pkin(4) * t1805 + t1590 * t1672) * t1677 + (t1659 * t1754 + t1606) * t1634) * qJD(1);
t1738 = pkin(10) * t1758;
t1587 = t1641 * pkin(8) - t1738;
t1577 = t1587 * t1654;
t1739 = pkin(8) * t1758;
t1586 = t1641 * pkin(10) + t1739;
t1719 = t1586 * t1770;
t1700 = t1577 - t1719;
t1790 = (t1738 / 0.2e1 + t1749 * pkin(8) + t1700) * t1638;
t1542 = t1833 ^ 2;
t1675 = cos(qJ(4));
t1789 = t1542 * (t1675 ^ 2 - 0.1e1 / 0.2e1);
t1666 = pkin(1) * qJD(2);
t1656 = qJD(2) + qJD(3);
t1771 = t1656 * t1676;
t1741 = pkin(4) * t1771;
t1602 = -t1666 + t1741;
t1571 = -t1602 * t1672 - t1656 * t1732;
t1788 = t1833 * t1571;
t1551 = t1672 * t1594 - t1596 * t1677;
t1787 = t1551 * qJD(2);
t1785 = (t1600 * t1676 - t1625 * t1766) * qJD(1);
t1560 = (t1658 - 0.1e1 / 0.2e1) * t1765 + t1640 * t1676 * t1671;
t1784 = t1560 * qJD(1);
t1783 = t1560 * t1656;
t1780 = t1581 * qJD(1);
t1670 = sin(qJ(4));
t1779 = t1581 * t1670;
t1778 = t1581 * t1675;
t1579 = t1595 * t1656;
t1776 = t1595 * t1670;
t1775 = t1595 * t1675;
t1593 = t1760 - t1766;
t1580 = t1656 * t1593;
t1612 = t1656 * t1649;
t1772 = t1656 * t1671;
t1769 = t1670 * t1571;
t1768 = t1671 * qJD(2);
t1767 = t1671 * t1659;
t1763 = t1676 * qJD(2);
t1642 = t1681 * t1656;
t1755 = 0.2e1 * t1649 ^ 2 - 0.1e1;
t1710 = -t1758 / 0.2e1;
t1519 = t1786 + t1834 + t1654 * t1710 + t1749 * t1770 + t1758 / 0.4e1;
t1751 = 0.4e1 * qJD(1) * t1519;
t1750 = -0.4e1 * qJD(4) * t1519;
t1591 = t1673 * t1667 - t1678 * t1821;
t1686 = t1632 + (cos(pkin(17)) * t1591 + sin(pkin(17)) * t1831) * pkin(3);
t1748 = t1686 * t1818;
t1747 = t1591 * t1818;
t1746 = t1831 * t1818;
t1745 = t1632 * t1818;
t1618 = pkin(1) * t1772;
t1535 = (pkin(1) + t1753) * t1767 + (t1805 + (pkin(4) * t1826 + pkin(4) + t1817) * t1672) * t1677 + t1676 * t1606;
t1744 = (-t1595 * t1827 + t1535) * t1815;
t1743 = pkin(4) * t1801;
t1540 = qJD(4) + t1830;
t1742 = pkin(4) * t1540 * t1595;
t1737 = pkin(1) * t1795;
t1636 = qJD(3) * t1671 * pkin(1);
t1736 = t1535 * t1815;
t1735 = pkin(1) * t1768;
t1734 = t1673 * t1813;
t1733 = pkin(1) * t1763;
t1731 = t1678 * t1813;
t1730 = pkin(1) * (qJD(3) + 0.2e1 * qJD(2)) / 0.2e1;
t1728 = t1552 * t1809;
t1727 = t1672 * t1808;
t1726 = t1677 * t1808;
t1725 = t1551 * t1809;
t1724 = pkin(15) + t1657;
t1722 = t1829 * t1780;
t1721 = qJD(1) * t1789;
t1720 = t1542 * t1670 * t1675;
t1718 = t1593 * t1800;
t1717 = t1595 * t1800;
t1716 = t1647 * qJD(1) * t1686;
t1715 = t1647 * t1612;
t1714 = t1686 * t1799;
t1713 = t1587 * t1770;
t1712 = qJD(2) * t1765;
t1709 = t1817 * t1752;
t1708 = pkin(4) * t1735;
t1707 = qJD(1) * t1747;
t1706 = qJD(1) * t1746;
t1705 = t1829 * t1743;
t1704 = qJD(2) * t1745;
t1703 = qJD(1) * t1748;
t1702 = qJD(4) * t1720;
t1569 = t1673 * t1602 + t1656 * t1731;
t1572 = -t1602 * t1678 + t1656 * t1734;
t1527 = t1664 * t1569 + t1572 * t1665;
t1697 = t1569 * t1665 - t1664 * t1572;
t1699 = -(t1527 * t1677 + t1697 * t1672) * t1644 + (t1527 * t1672 - t1697 * t1677) * t1643;
t1582 = -t1673 * t1634 + t1731;
t1583 = t1634 * t1678 + t1734;
t1696 = t1582 * t1665 - t1664 * t1583;
t1692 = 0.4e1 * (pkin(8) * t1710 + t1749 * pkin(10) + t1586 * t1654 + t1713) * t1773 - 0.4e1 * t1790;
t1690 = t1656 * (-t1525 * t1643 + t1526 * t1644);
t1570 = -t1602 * t1677 + t1656 * t1740;
t1622 = t1724 + t1663;
t1613 = sin(t1622);
t1623 = t1724 - t1663;
t1614 = sin(t1623);
t1688 = t1807 + (-t1613 / 0.2e1 + t1614 / 0.2e1) * pkin(3);
t1615 = cos(t1622);
t1616 = cos(t1623);
t1687 = t1806 + (-t1616 / 0.2e1 - t1615 / 0.2e1) * pkin(3);
t1685 = -t1682 * qJD(2) + t1642 * t1826 + t1642;
t1536 = -t1678 * t1608 / 0.2e1 + t1700;
t1684 = qJD(4) * (0.2e1 * t1536 + t1692);
t1683 = qJD(1) * (-((0.4e1 * t1713 + (0.4e1 * t1654 - 0.2e1) * t1739 + ((0.4e1 * t1660 - 0.2e1) * t1654 - 0.2e1 * t1660 + 0.1e1) * pkin(10)) * t1643 + t1576 * t1589) * t1644 - t1576 * t1777 - 0.2e1 * t1536 + 0.4e1 * t1790);
t1637 = qJD(3) * t1817;
t1627 = pkin(4) * t1636;
t1624 = t1822 * qJD(1);
t1621 = qJD(1) * t1765;
t1619 = pkin(1) * t1771;
t1617 = pkin(4) * t1618;
t1611 = t1656 * t1647;
t1610 = t1755 * qJD(1);
t1603 = t1647 * t1799;
t1601 = qJD(1) * t1745;
t1585 = pkin(1) * t1650 - t1741;
t1573 = -qJD(4) * pkin(8) + t1576 * qJD(1);
t1556 = t1675 * t1571;
t1555 = -0.2e1 * t1784;
t1554 = 0.2e1 * t1784;
t1548 = qJD(4) * t1812 + t1573 * t1678;
t1547 = qJD(4) * t1810 - t1673 * t1573;
t1541 = t1664 * t1582 + t1583 * t1665;
t1537 = qJD(1) * t1720;
t1530 = t1833 * t1743;
t1528 = t1833 * t1780;
t1521 = -0.4e1 * t1804;
t1520 = 0.4e1 * t1804;
t1513 = t1780 + ((t1541 * t1672 - t1677 * t1696) * t1644 + (t1677 * t1541 + t1696 * t1672) * t1643) * qJD(4);
t1512 = (t1547 * t1664 + t1548 * t1665) * t1644 + (t1547 * t1665 - t1664 * t1548) * t1643 + t1794 + (-pkin(8) * t1660 + 0.2e1 * t1577 + t1692 - 0.2e1 * t1719 + t1738) * qJD(1);
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1712, t1822 * qJD(2), 0, -t1712, 0, 0, -pkin(12) * t1796, -pkin(12) * t1795, 0, 0, 0.2e1 * t1783, -t1656 * t1574, 0, -0.2e1 * t1783, 0, 0, pkin(12) * t1579 + (-t1768 + (t1711 + t1767) * t1752) * pkin(1), pkin(12) * t1580 + (-t1763 + (t1676 * t1659 - t1672 * t1761) * t1752) * pkin(1), 0, -t1704, 0, 0, 0, 0, 0, 0, t1829 * t1571, -t1788, 0, t1606 * t1602 + t1685 * t1765 + (0.2e1 * t1585 * t1767 + (pkin(12) * t1772 + t1672 * t1709) * t1677) * pkin(4), -t1702, -0.2e1 * qJD(4) * t1789, t1670 * t1750, t1702, t1675 * t1750, 0, t1829 * (t1670 * t1794 + t1556) + t1670 * t1684, -t1829 * (-t1675 * t1794 + t1769) + t1675 * t1684, t1788, ((pkin(4) * t1709 + t1685) * t1677 + t1602 * pkin(12)) * t1672 + 0.2e1 * (t1585 * t1659 - t1666 / 0.2e1 + (t1635 + t1729) * t1656) * t1813 + t1827 * t1571, 0.4e1 * t1798, -0.8e1 * t1523 * qJD(2), 0, -0.4e1 * t1798, 0, 0, pkin(6) * t1797, -pkin(6) * t1787, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t1747, qJD(2) * t1746, 0, -t1704, t1715, t1656 * t1755, 0, -t1715, 0, 0, t1646 * t1730 + t1636 / 0.2e1 + t1688 * t1656, t1648 * t1730 + t1637 / 0.2e1 + t1687 * t1656, 0, -qJD(2) * t1748; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1621, t1624, t1795, -t1621, -t1796, 0, -t1727, -t1726, 0, 0, t1554, -t1802, -t1580, t1555, t1579, 0, 0.2e1 * t1803, 0.2e1 * t1785, -t1737, -t1601, 0, 0, 0, 0, 0, 0, t1722, -t1528, -t1570, -t1791, 0, 0, 0, 0, 0, 0, -t1670 * t1570 + t1778 * t1830, -t1675 * t1570 - t1779 * t1830, t1528, -t1793, t1520, -0.8e1 * t1792, -t1787, t1521, -t1797, 0, t1728, -t1725, 0, 0, 0, 0, 0, 0, 0, 0, -t1707, t1706, -t1737, -t1601, t1603, t1610, -t1612, -t1603, t1611, 0, (0.2e1 * t1820 + 0.2e1 * t1807 + (-t1613 + t1614) * pkin(3)) * t1824, (0.2e1 * t1819 + 0.2e1 * t1806 + (-t1615 - t1616) * pkin(3)) * t1824, -t1737, -t1703; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1554, -t1802, -t1580, t1555, t1579, 0, t1717, t1718, 0, 0, 0, 0, 0, 0, 0, 0, -t1705, t1530, pkin(4) * t1580, t1736, 0, 0, 0, 0, 0, 0, pkin(4) * (t1580 * t1670 - t1775 * t1830), (t1580 * t1675 + t1776 * t1830) * pkin(4), -t1530, t1744, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1603, t1610, -t1612, -t1603, t1611, 0, t1716, t1714, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1537, -0.2e1 * t1721, t1670 * t1832, t1537, t1675 * t1832, 0, t1512 * t1670, t1675 * t1512, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1621, -t1624, 0, t1621, 0, 0, t1727, t1726, 0, 0, t1555, t1802, 0, t1554, 0, 0, -0.2e1 * t1803, -0.2e1 * t1785, 0, t1601, 0, 0, 0, 0, 0, 0, -t1722, t1528, 0, t1791, 0, 0, 0, 0, 0, 0, -t1540 * t1778, t1540 * t1779, -t1528, t1793, t1521, 0.8e1 * t1792, 0, t1520, 0, 0, -t1728, t1725, 0, 0, 0, 0, 0, 0, 0, 0, t1707, -t1706, 0, t1601, -t1603, -t1610, 0, t1603, 0, 0, -qJD(1) * (t1688 + t1820), -qJD(1) * (t1687 + t1819), 0, t1703; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1636, t1637, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1627, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1627, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1636, t1637, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1618, t1619, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1617, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1617, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1618, t1619, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1513 * t1675, t1513 * t1670, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1555, t1802, 0, t1554, 0, 0, -t1717, -t1718, 0, 0, 0, 0, 0, 0, 0, 0, t1705, -t1530, 0, -t1736, 0, 0, 0, 0, 0, 0, t1675 * t1742, -t1670 * t1742, t1530, -t1744, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1603, -t1610, 0, t1603, 0, 0, -t1716, -t1714, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1735, -t1733, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1708, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1708, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1735, -t1733, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1675 * t1814, -t1670 * t1814, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1537, 0.2e1 * t1721, t1670 * t1751, -t1537, t1675 * t1751, 0, t1670 * t1683 + t1556, t1675 * t1683 - t1769, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(1) * t1778 + t1670 * t1699, -qJD(1) * t1779 + t1675 * t1699, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, (-qJD(1) * t1775 + t1670 * t1690) * pkin(4), (qJD(1) * t1776 + t1675 * t1690) * pkin(4), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t1;
