% Calculate potential energy for
% fivebar1DE1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [2x1]
%   Generalized joint coordinates (joint angles)
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [5x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[AB,AE,BC,CD,ED]';
% m [5x1]
%   mass of all robot links (including the base)
% mrSges [5x3]
%  first moment of all robot links (mass times center of mass in body frames)
%  rows: links of the robot (starting with base)
%  columns: x-, y-, z-coordinates
% 
% Output:
% U [1x1]
%   Potential energy

% Quelle: HybrDyn-Toolbox
% Datum: 2020-04-27 04:13
% Revision: 970157063c8b7bcb25458a457551a083b21abdbd (2020-04-26)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function U = fivebar1DE1_energypot_fixb_slag_vp2(qJ, g, ...
  pkin, m, mrSges)
%% Coder Information
%#codegen
%$cgargs {zeros(2,1),zeros(3,1),zeros(5,1),zeros(5,1),zeros(5,3)}
assert(isreal(qJ) && all(size(qJ) == [2 1]), ...
  'fivebar1DE1_energypot_fixb_slag_vp2: qJ has to be [2x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'fivebar1DE1_energypot_fixb_slag_vp2: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [5 1]), ...
  'fivebar1DE1_energypot_fixb_slag_vp2: pkin has to be [5x1] (double)');
assert(isreal(m) && all(size(m) == [5 1]), ...
  'fivebar1DE1_energypot_fixb_slag_vp2: m has to be [5x1] (double)'); 
assert(isreal(mrSges) && all(size(mrSges) == [5,3]), ...
  'fivebar1DE1_energypot_fixb_slag_vp2: mrSges has to be [5x3] (double)');

%% Symbolic Calculation
% From energy_potential_fixb_worldframe_par2_matlab.m
% OptimizationMode: 2
% StartTime: 2020-04-27 02:23:23
% EndTime: 2020-04-27 02:23:32
% DurationCPUTime: 4.87s
% Computational Cost: add. (28332->411), mult. (83144->492), div. (256->5), fcn. (9996->12), ass. (0->208)
t537 = 4 * pkin(3);
t397 = pkin(5) ^ 2;
t348 = -t397 / 0.3e1;
t400 = pkin(4) ^ 2;
t536 = t348 - t400 / 0.3e1;
t396 = t397 ^ 2;
t399 = t400 ^ 2;
t535 = -t396 / 0.6e1 + t399 / 0.6e1;
t369 = cos(qJ(2));
t334 = t369 ^ 2;
t534 = -0.2e1 * t334;
t405 = pkin(3) ^ 2;
t403 = t405 ^ 2;
t533 = 4 * t403;
t532 = 2 * t405;
t383 = 6 * t405;
t409 = (pkin(2) ^ 2);
t531 = 2 * t409;
t411 = (pkin(1) ^ 2);
t394 = 2 * t411;
t416 = t409 ^ 2;
t386 = 5 * t416;
t530 = -pkin(4) - pkin(5);
t529 = -pkin(4) + pkin(5);
t368 = sin(qJ(1));
t326 = pkin(2) * t368;
t370 = cos(qJ(1));
t528 = pkin(2) * t370;
t367 = sin(qJ(2));
t527 = pkin(3) * t367;
t325 = pkin(3) * t369;
t419 = pkin(3) * t405;
t476 = t405 * t326;
t526 = (-t367 * t419 + t476) * t334;
t312 = pkin(1) - t528;
t525 = t312 * t369;
t393 = 3 * t411;
t497 = t397 + t400;
t316 = t393 - t497;
t524 = t316 * t405;
t328 = t405 + t411;
t322 = t328 ^ 2;
t455 = -t397 + t328;
t523 = t322 * (-t400 + t455);
t522 = t497 * t411;
t337 = t370 ^ 2;
t521 = t337 ^ 2 * t416;
t415 = pkin(2) * t409;
t520 = t370 * t337 * t415;
t519 = t337 * t409;
t518 = t367 * t368;
t517 = t368 * t369;
t516 = (pkin(1) + pkin(3)) * (pkin(1) - pkin(3));
t515 = (pkin(1) + pkin(2)) * (pkin(1) - pkin(2));
t514 = t403 * t334 ^ 2;
t513 = t405 * t334;
t512 = t411 * t397;
t511 = t411 * t405;
t333 = t369 * t334;
t510 = t419 * t333;
t351 = -0.3e1 / 0.2e1 * t397;
t406 = t415 ^ 2;
t410 = t411 ^ 2;
t495 = t403 + t410;
t507 = t396 / 0.2e1 - t399 / 0.2e1;
t509 = t328 * ((t351 + t394) * t405 - 0.3e1 / 0.2e1 * t512 + t495 + t507) + t406;
t355 = 0.2e1 / 0.3e1 * t400;
t350 = -0.2e1 / 0.3e1 * t397;
t460 = t350 + t328;
t508 = t328 * (t355 + t460) + t416;
t346 = -t397 / 0.6e1;
t506 = t346 - t400 / 0.6e1;
t360 = -0.2e1 / 0.3e1 * t400;
t505 = t350 + t360;
t504 = t351 + t393;
t320 = -t405 / 0.3e1 + t411;
t365 = t409 / 0.2e1;
t503 = t365 + t411;
t502 = 0.4e1 / 0.7e1 * t411 - t397 / 0.7e1;
t377 = 10 * t405;
t501 = t377 + t394;
t330 = -3 * t405 + t411;
t500 = t394 - t397;
t499 = t396 - t399;
t498 = -t397 + t400;
t496 = t397 - t411;
t494 = t405 - t411;
t493 = -t409 + t411;
t492 = t409 + t411;
t491 = t410 - t403;
t490 = t410 + t416;
t489 = 0.4e1 * pkin(1);
t488 = 0.2e1 * t527;
t487 = 0.2e1 * t325;
t486 = pkin(1) * t528;
t485 = pkin(1) * t325;
t484 = 0.8e1 * t520;
t483 = 0.2e1 * t519;
t482 = 0.8e1 * t514;
t481 = -0.4e1 * t513;
t480 = 0.4e1 * t513;
t479 = pkin(1) * t510;
t478 = pkin(2) * t518;
t477 = t419 * t326;
t475 = 0.12e2 * t513;
t474 = 0.16e2 * t510;
t473 = -t527 / 0.2e1;
t472 = -pkin(2) * m(3) - mrSges(2,1);
t449 = pkin(3) * t478;
t307 = -0.2e1 * t449;
t315 = -0.2e1 * t486;
t456 = t405 + t492;
t288 = 0.1e1 / (t312 * t487 + t307 + t315 + t456);
t471 = t288 / pkin(5) / pkin(4) ^ 2;
t470 = t367 * t515;
t314 = 0.2e1 * t485;
t469 = 0.4e1 * t485;
t468 = 0.6e1 * t485;
t467 = 0.4e1 / 0.3e1 * t397 + 0.4e1 / 0.3e1 * t400 - (2 * t411);
t392 = 4 * t411;
t466 = 0.2e1 / 0.3e1 * t397 + t355 + t392;
t356 = t400 / 0.3e1;
t465 = t397 / 0.3e1 + t356 + t394;
t464 = t411 + t506;
t463 = t411 + t536;
t349 = -t397 / 0.2e1;
t462 = t349 - t400 / 0.2e1 + t411;
t461 = t350 + t355 + t394;
t384 = 3 * t405;
t459 = t384 + t492;
t458 = t393 + t498;
t457 = t400 + t496;
t454 = -t397 + t492;
t295 = t315 + t483 + t493;
t388 = -3 * t409;
t438 = t405 + t454;
t431 = -t400 + t438;
t430 = t315 + t431;
t285 = sqrt(t295 * t481 + 0.4e1 * t494 * t519 + 0.4e1 * t431 * t486 - t403 + (t388 + t457) * t532 - (t411 + (pkin(2) - t529) * (pkin(2) + t529)) * (t411 + (pkin(2) - t530) * (pkin(2) + t530)) + (-(t307 + t430) * t525 + t430 * t478) * t537);
t293 = t500 * t405 + t495 - t512 - t535;
t321 = t411 - t409 / 0.3e1;
t296 = t321 * t307;
t300 = t348 + t356 + t456;
t301 = t312 + t325;
t331 = t388 + t411;
t450 = 0.8e1 * t479;
t304 = t331 * t450;
t306 = 0.10e2 * t524;
t309 = t349 + t456;
t310 = t400 + t455;
t313 = pkin(1) + t325;
t318 = (t392 + t397) * t405;
t323 = 0.10e2 / 0.3e1 * t405;
t324 = -0.30e2 * t397 + (60 * t411);
t347 = -t397 / 0.4e1;
t361 = 0.4e1 / 0.3e1 * t405;
t362 = t405 / 0.3e1;
t363 = t405 / 0.2e1;
t375 = 15 * t403;
t376 = 15 * t405;
t378 = -0.2e1 * t397;
t379 = -0.5e1 * t397;
t380 = 7 * t403;
t381 = 5 * t403;
t382 = 7 * t405;
t387 = 3 * t409;
t390 = 3 * t410;
t391 = 8 * t411;
t412 = pkin(1) * t411;
t428 = t293 + t416;
t429 = -t449 + t503;
t442 = -0.3e1 * t512 + t390 + t507;
t445 = -0.6e1 * t449;
t433 = ((t323 + t500) * t409 + t428) * t445 + (t375 + (-0.9e1 * t397 + (18 * t411)) * t405 + t442) * t409 + (t376 + t504) * t416 + t509;
t444 = -0.4e1 * t449;
t434 = t309 * t444;
t435 = -(t387 + t328) * t527 + t459 * t326;
t436 = -(t386 + ((5 * t405) + t316) * t531 + t328 * (t360 + t460)) * t527 + (t416 + (t501 + t505) * t409 + t381 + 0.2e1 * t524 + t411 * (t411 + t505)) * t326;
t439 = t405 + t463;
t440 = t365 + t464;
t441 = -0.6e1 * t512 + (6 * t410) + t499;
t443 = t300 * t444 + (t383 + t461) * t409 + t508;
t446 = t333 * t477;
t447 = t514 * t326;
t448 = pkin(1) * t474;
t451 = 0.20e2 / 0.3e1 * t405;
t453 = ((-0.24e2 * (0.4e1 / 0.3e1 * t513 + t314 + t320) * t521 * t527 - 0.12e2 * (-0.8e1 / 0.3e1 * t447 + ((t361 + t440) * t326 - (0.4e1 / 0.3e1 * t409 + t363 + t464) * t527) * t480 + (-(t409 * t494) - 0.5e1 / 0.3e1 * t403 + t465 * t405 + t411 * t463) * t326 + (-t416 + (-t451 + t466) * t409 - (3 * t403) + t467 * t405 + t410) * t473 + (-t367 * t403 * t333 + ((t405 + t440) * t326 + (t531 - t494) * t473) * t325) * t489) * t519 + 0.24e2 * t321 * t447 + ((t387 + 0.3e1 / 0.2e1 * t405 + t462) * t326 + t331 * t527 / 0.2e1) * t448 - 0.6e1 * ((-(3 * t416) + (-t451 + t467) * t409 + t466 * t405 + t491) * t326 - 0.2e1 * (-0.5e1 / 0.3e1 * t416 + (-t405 + t465) * t409 + t411 * t439) * t527) * t513 - 0.6e1 * t436 * t485 - (t406 + ((21 * t405) + t316) * t416 + (t306 + t390 + (35 * t403) - 0.2e1 * t522) * t409 + (t380 + (t379 + t391 - 0.5e1 * t400) * t405 - t411 * t457) * t328) * t326 + (0.7e1 * t406 + (t382 + t316) * t386 + (t306 + (21 * t403) + (9 * t410) - 0.6e1 * t522) * t409 + t523) * t527) * t285 + t301 * (0.16e2 * (t482 + t448 + (-8 * t403 + 12 * t511) * t334 + (-0.12e2 * pkin(1) * t419 + t412 * t537) * t369 - (6 * t511) + t495) * t521 + 0.24e2 * ((t411 - 0.2e1 / 0.3e1 * t409) * t482 + 0.14e2 * (-0.32e2 / 0.21e2 * (t411 + t409 / 0.4e1 + t405 / 0.4e1 - t397 / 0.8e1) * t449 + t416 / 0.7e1 + (0.16e2 / 0.21e2 * t405 + t502) * t409 + t403 / 0.7e1 + t502 * t405 + t410 - 0.3e1 / 0.7e1 * t512 + t396 / 0.42e2 - t399 / 0.42e2) * t513 + t320 * t434 - (t494 * t416) + (t318 - 0.10e2 / 0.3e1 * t403 + (2 * t410) - t512) * t409 + t293 * t516 + ((-0.2e1 / 0.3e1 * t449 + t411 + t363 + t347) * t474 + 0.6e1 * (-0.8e1 / 0.3e1 * (t347 + t362 + t503) * t449 + t416 / 0.3e1 + (0.4e1 / 0.3e1 * t411 + t361 + t348) * t409 + t410 + 0.2e1 / 0.3e1 * t511 - 0.2e1 / 0.3e1 * t512 - t403 / 0.3e1 + t396 / 0.18e2 - t399 / 0.18e2) * t325) * pkin(1)) * t519 + 0.16e2 * (-6 * t411 * t409 + t490) * t514 + 0.32e2 * (t307 * t515 + t309 * t331) * t479 + 0.24e2 * (t321 * t434 - t406 + (-t323 + t496) * t416 + (t318 + t491 + t535) * t409 + t411 * t293) * t513 + 0.8e1 * t433 * t485 - 0.8e1 * ((t382 + t504) * t416 + (t380 + (t379 + (10 * t411)) * t405 + t442) * t409 + t509) * t449 + (t416 ^ 2) + (t378 + t392 + (28 * t405)) * t406 + (t324 * t405 + (70 * t403) + t441) * t416 + (t324 * t403 + t441 * t383 + t499 * t394 - 0.6e1 * t410 * t397 + 0.4e1 * t412 ^ 2 + (28 * t419 ^ 2)) * t409 + t310 * t523) + (((0.4e1 * t526 + (t326 + t488) * t314 + t330 * t326 + (0.3e1 / 0.2e1 * t409 + t384 + t462) * t488) * t484 + 0.6e1 * ((0.2e1 * (t363 + t409 + t506) * t326 + pkin(3) * t470) * t481 + (-0.8e1 * t446 + 0.4e1 * ((t459 + t536) * t326 - (t387 + t439) * t527) * t325) * pkin(1) + t436) * t528) * t285 + t301 * (-0.32e2 * (t450 + (-0.4e1 * t367 * t477 + t533 + ((4 * t409) + t378 + t391) * t405) * t334 + (t347 - t405 + t429) * t469 + t307 * t516 + t309 * t330) * t520 - 0.8e1 * (t304 + (t309 * t515 + t296) * t475 + (t434 + (t383 + t500) * t409 + t428) * t468 + t433) * t528)) * t313) / ((-0.4e1 * (0.2e1 * t526 + (t532 + t409) * t527 + (-t494 + t314) * t326) * t519 + 0.8e1 * pkin(1) * t446 + ((pkin(2) * t533 + 0.8e1 * t405 * t415) * t368 + 0.4e1 * t419 * t470) * t334 - 0.4e1 * t435 * t485 - (t501 * t409 + t381 + t490 + 6 * t511) * t326 + (t386 + (t377 + 6 * t411) * t409 + t322) * t527) * t285 + t301 * (0.12e2 * (0.6e1 * (-0.4e1 / 0.9e1 * t449 + t411 + t409 / 0.3e1 + t362 + t400 / 0.9e1 - t397 / 0.9e1) * t513 + t320 * t307 + t300 * t516 + (t510 + (t400 / 0.6e1 + t346 + t429) * t325) * t489) * t519 + t304 + (t300 * t515 + t296) * t475 + t443 * t468 + ((t323 + t461) * t409 + t508) * t445 + t406 + (t376 + t458) * t416 + (t458 * t383 + t498 * t394 + t375 + t390) * t409 + t322 * t310) + ((t484 * t527 + 0.4e1 * (t476 * t534 + (t326 - t527) * t314 + t435) * t528) * t285 + t301 * (-0.8e1 * (t314 + t480 + t330) * t520 - 0.6e1 * (t493 * t480 + (t307 + t300) * t469 + t443) * t528)) * t313) / 0.4e1;
t452 = t288 / pkin(4) / 0.2e1;
t437 = -pkin(3) + t478;
t432 = t384 + t400 + t454;
t299 = t369 * t370 + t518;
t298 = t367 * t370 - t517;
t294 = t315 + t400 + t438;
t284 = (-t437 + t525) * t285 + (t294 * t312 + t295 * t487) * t367 + (t294 * t369 + (0.4e1 * t334 - 0.2e1) * t312 * pkin(3)) * t326;
t283 = (pkin(2) * t517 + t312 * t367) * t285 - (t315 + t432 + t444) * t525 + t437 * t315 + t432 * t478 + (t295 * t534 - t310 - t387 + t483) * pkin(3);
t282 = atan2(t284 * t452, t283 * t452);
t281 = cos(t282);
t280 = sin(t282);
t278 = -t280 * t367 + t281 * t369;
t277 = t280 * t369 + t281 * t367;
t275 = (t283 * t285 / 0.4e1 + t284 * t453) * t471;
t274 = (t283 * t453 - t284 * t285 / 0.4e1) * t471;
t273 = atan2(t274 * t298 + t275 * t299, t274 * t299 - t275 * t298);
t272 = cos(t273);
t271 = sin(t273);
t270 = t271 * t368 - t272 * t370;
t269 = -t271 * t370 - t272 * t368;
t1 = (-mrSges(1,3) - mrSges(2,3) - mrSges(3,3) - mrSges(4,3) - mrSges(5,3)) * g(3) + (-mrSges(3,1) * t269 - mrSges(5,1) * t277 - mrSges(2,2) * t370 - mrSges(3,2) * t270 - mrSges(4,2) * t369 - mrSges(5,2) * t278 - mrSges(1,2) + t472 * t368 + (-pkin(3) * m(5) - mrSges(4,1)) * t367) * g(2) + (-m(4) * pkin(1) - m(5) * t313 - mrSges(3,1) * t270 - mrSges(4,1) * t369 - mrSges(5,1) * t278 + mrSges(2,2) * t368 + mrSges(3,2) * t269 + mrSges(4,2) * t367 + mrSges(5,2) * t277 + t472 * t370 - mrSges(1,1)) * g(1);
U = t1;
