% Calculate potential energy for
% fivebar1DE1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [2x1]
%   Generalized joint coordinates (joint angles)
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [5x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[AB,AE,BC,CD,ED]';
% m [5x1]
%   mass of all robot links (including the base)
% rSges [5x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% 
% Output:
% U [1x1]
%   Potential energy

% Quelle: HybrDyn-Toolbox
% Datum: 2020-04-27 04:13
% Revision: 970157063c8b7bcb25458a457551a083b21abdbd (2020-04-26)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function U = fivebar1DE1_energypot_fixb_slag_vp1(qJ, g, ...
  pkin, m, rSges)
%% Coder Information
%#codegen
%$cgargs {zeros(2,1),zeros(3,1),zeros(5,1),zeros(5,1),zeros(5,3)}
assert(isreal(qJ) && all(size(qJ) == [2 1]), ...
  'fivebar1DE1_energypot_fixb_slag_vp1: qJ has to be [2x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'fivebar1DE1_energypot_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [5 1]), ...
  'fivebar1DE1_energypot_fixb_slag_vp1: pkin has to be [5x1] (double)');
assert(isreal(m) && all(size(m) == [5 1]), ...
  'fivebar1DE1_energypot_fixb_slag_vp1: m has to be [5x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [5,3]), ...
  'fivebar1DE1_energypot_fixb_slag_vp1: rSges has to be [5x3] (double)');

%% Symbolic Calculation
% From energy_potential_fixb_worldframe_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2020-04-27 02:23:23
% EndTime: 2020-04-27 02:23:31
% DurationCPUTime: 4.98s
% Computational Cost: add. (28332->412), mult. (83144->505), div. (256->5), fcn. (9996->12), ass. (0->207)
t537 = 4 * pkin(3);
t398 = pkin(5) ^ 2;
t349 = -t398 / 0.3e1;
t401 = pkin(4) ^ 2;
t536 = t349 - t401 / 0.3e1;
t397 = t398 ^ 2;
t400 = t401 ^ 2;
t535 = -t397 / 0.6e1 + t400 / 0.6e1;
t370 = cos(qJ(2));
t335 = t370 ^ 2;
t534 = -0.2e1 * t335;
t406 = pkin(3) ^ 2;
t404 = t406 ^ 2;
t533 = 4 * t404;
t532 = 2 * t406;
t384 = 6 * t406;
t410 = (pkin(2) ^ 2);
t531 = 2 * t410;
t412 = (pkin(1) ^ 2);
t395 = 2 * t412;
t417 = t410 ^ 2;
t387 = 5 * t417;
t530 = -pkin(4) - pkin(5);
t529 = -pkin(4) + pkin(5);
t369 = sin(qJ(1));
t327 = pkin(2) * t369;
t371 = cos(qJ(1));
t528 = pkin(2) * t371;
t368 = sin(qJ(2));
t527 = pkin(3) * t368;
t326 = pkin(3) * t370;
t314 = pkin(1) + t326;
t420 = pkin(3) * t406;
t476 = t406 * t327;
t526 = (-t368 * t420 + t476) * t335;
t313 = pkin(1) - t528;
t525 = t313 * t370;
t394 = 3 * t412;
t497 = t398 + t401;
t317 = t394 - t497;
t524 = t317 * t406;
t329 = t406 + t412;
t323 = t329 ^ 2;
t456 = -t398 + t329;
t523 = t323 * (-t401 + t456);
t522 = t497 * t412;
t338 = t371 ^ 2;
t521 = t338 ^ 2 * t417;
t416 = pkin(2) * t410;
t520 = t371 * t338 * t416;
t519 = t368 * t369;
t518 = t369 * t370;
t517 = (pkin(1) + pkin(3)) * (pkin(1) - pkin(3));
t516 = (pkin(1) + pkin(2)) * (pkin(1) - pkin(2));
t515 = t404 * t335 ^ 2;
t514 = t406 * t335;
t513 = t410 * t338;
t512 = t412 * t398;
t511 = t412 * t406;
t334 = t370 * t335;
t510 = t420 * t334;
t352 = -0.3e1 / 0.2e1 * t398;
t407 = t416 ^ 2;
t411 = t412 ^ 2;
t495 = t404 + t411;
t507 = t397 / 0.2e1 - t400 / 0.2e1;
t509 = t329 * ((t352 + t395) * t406 - 0.3e1 / 0.2e1 * t512 + t495 + t507) + t407;
t356 = 0.2e1 / 0.3e1 * t401;
t351 = -0.2e1 / 0.3e1 * t398;
t461 = t351 + t329;
t508 = t329 * (t356 + t461) + t417;
t347 = -t398 / 0.6e1;
t506 = t347 - t401 / 0.6e1;
t361 = -0.2e1 / 0.3e1 * t401;
t505 = t351 + t361;
t504 = t352 + t394;
t321 = -t406 / 0.3e1 + t412;
t366 = t410 / 0.2e1;
t503 = t366 + t412;
t502 = 0.4e1 / 0.7e1 * t412 - t398 / 0.7e1;
t378 = 10 * t406;
t501 = t378 + t395;
t331 = -3 * t406 + t412;
t500 = t395 - t398;
t499 = t397 - t400;
t498 = -t398 + t401;
t496 = t398 - t412;
t494 = t406 - t412;
t493 = -t410 + t412;
t492 = t410 + t412;
t491 = t411 - t404;
t490 = t411 + t417;
t489 = 0.4e1 * pkin(1);
t488 = 0.2e1 * t527;
t487 = 0.2e1 * t326;
t486 = pkin(1) * t528;
t485 = pkin(1) * t326;
t484 = 0.8e1 * t520;
t483 = 0.8e1 * t515;
t482 = -0.4e1 * t514;
t481 = 0.4e1 * t514;
t480 = 0.2e1 * t513;
t479 = pkin(1) * t510;
t478 = pkin(2) * t519;
t477 = t420 * t327;
t475 = 0.12e2 * t514;
t474 = 0.16e2 * t510;
t473 = -t527 / 0.2e1;
t450 = pkin(3) * t478;
t308 = -0.2e1 * t450;
t316 = -0.2e1 * t486;
t457 = t406 + t492;
t289 = 0.1e1 / (t313 * t487 + t308 + t316 + t457);
t472 = t289 / pkin(5) / pkin(4) ^ 2;
t471 = t368 * t516;
t315 = 0.2e1 * t485;
t470 = 0.4e1 * t485;
t469 = 0.6e1 * t485;
t468 = 0.4e1 / 0.3e1 * t398 + 0.4e1 / 0.3e1 * t401 - (2 * t412);
t393 = 4 * t412;
t467 = 0.2e1 / 0.3e1 * t398 + t356 + t393;
t357 = t401 / 0.3e1;
t466 = t398 / 0.3e1 + t357 + t395;
t465 = t412 + t506;
t464 = t412 + t536;
t350 = -t398 / 0.2e1;
t463 = t350 - t401 / 0.2e1 + t412;
t462 = t351 + t356 + t395;
t385 = 3 * t406;
t460 = t385 + t492;
t459 = t394 + t498;
t458 = t401 + t496;
t455 = -t398 + t492;
t296 = t316 + t480 + t493;
t389 = -3 * t410;
t439 = t406 + t455;
t432 = -t401 + t439;
t431 = t316 + t432;
t286 = sqrt(t296 * t482 + 0.4e1 * t494 * t513 + 0.4e1 * t432 * t486 - t404 + (t389 + t458) * t532 - (t412 + (pkin(2) - t529) * (pkin(2) + t529)) * (t412 + (pkin(2) - t530) * (pkin(2) + t530)) + (-(t308 + t431) * t525 + t431 * t478) * t537);
t294 = t500 * t406 + t495 - t512 - t535;
t322 = t412 - t410 / 0.3e1;
t297 = t322 * t308;
t301 = t349 + t357 + t457;
t302 = t313 + t326;
t332 = t389 + t412;
t451 = 0.8e1 * t479;
t305 = t332 * t451;
t307 = 0.10e2 * t524;
t310 = t350 + t457;
t311 = t401 + t456;
t319 = (t393 + t398) * t406;
t324 = 0.10e2 / 0.3e1 * t406;
t325 = -0.30e2 * t398 + (60 * t412);
t348 = -t398 / 0.4e1;
t362 = 0.4e1 / 0.3e1 * t406;
t363 = t406 / 0.3e1;
t364 = t406 / 0.2e1;
t376 = 15 * t404;
t377 = 15 * t406;
t379 = -0.2e1 * t398;
t380 = -0.5e1 * t398;
t381 = 7 * t404;
t382 = 5 * t404;
t383 = 7 * t406;
t388 = 3 * t410;
t391 = 3 * t411;
t392 = 8 * t412;
t413 = pkin(1) * t412;
t429 = t294 + t417;
t430 = -t450 + t503;
t443 = -0.3e1 * t512 + t391 + t507;
t446 = -0.6e1 * t450;
t434 = ((t324 + t500) * t410 + t429) * t446 + (t376 + (-0.9e1 * t398 + (18 * t412)) * t406 + t443) * t410 + (t377 + t504) * t417 + t509;
t445 = -0.4e1 * t450;
t435 = t310 * t445;
t436 = -(t388 + t329) * t527 + t460 * t327;
t437 = -(t387 + ((5 * t406) + t317) * t531 + t329 * (t361 + t461)) * t527 + (t417 + (t501 + t505) * t410 + t382 + 0.2e1 * t524 + t412 * (t412 + t505)) * t327;
t440 = t406 + t464;
t441 = t366 + t465;
t442 = -0.6e1 * t512 + (6 * t411) + t499;
t444 = t301 * t445 + (t384 + t462) * t410 + t508;
t447 = t334 * t477;
t448 = t515 * t327;
t449 = pkin(1) * t474;
t452 = 0.20e2 / 0.3e1 * t406;
t454 = ((-0.24e2 * (0.4e1 / 0.3e1 * t514 + t315 + t321) * t521 * t527 - 0.12e2 * (-0.8e1 / 0.3e1 * t448 + ((t362 + t441) * t327 - (0.4e1 / 0.3e1 * t410 + t364 + t465) * t527) * t481 + (-(t410 * t494) - 0.5e1 / 0.3e1 * t404 + t466 * t406 + t412 * t464) * t327 + (-t417 + (-t452 + t467) * t410 - (3 * t404) + t468 * t406 + t411) * t473 + (-t368 * t404 * t334 + ((t406 + t441) * t327 + (t531 - t494) * t473) * t326) * t489) * t513 + 0.24e2 * t322 * t448 + ((t388 + 0.3e1 / 0.2e1 * t406 + t463) * t327 + t332 * t527 / 0.2e1) * t449 - 0.6e1 * ((-(3 * t417) + (-t452 + t468) * t410 + t467 * t406 + t491) * t327 - 0.2e1 * (-0.5e1 / 0.3e1 * t417 + (-t406 + t466) * t410 + t412 * t440) * t527) * t514 - 0.6e1 * t437 * t485 - (t407 + ((21 * t406) + t317) * t417 + (t307 + t391 + (35 * t404) - 0.2e1 * t522) * t410 + (t381 + (t380 + t392 - 0.5e1 * t401) * t406 - t412 * t458) * t329) * t327 + (0.7e1 * t407 + (t383 + t317) * t387 + (t307 + (21 * t404) + (9 * t411) - 0.6e1 * t522) * t410 + t523) * t527) * t286 + t302 * (0.16e2 * (t483 + t449 + (-8 * t404 + 12 * t511) * t335 + (-0.12e2 * pkin(1) * t420 + t413 * t537) * t370 - (6 * t511) + t495) * t521 + 0.24e2 * ((t412 - 0.2e1 / 0.3e1 * t410) * t483 + 0.14e2 * (-0.32e2 / 0.21e2 * (t412 + t410 / 0.4e1 + t406 / 0.4e1 - t398 / 0.8e1) * t450 + t417 / 0.7e1 + (0.16e2 / 0.21e2 * t406 + t502) * t410 + t404 / 0.7e1 + t502 * t406 + t411 - 0.3e1 / 0.7e1 * t512 + t397 / 0.42e2 - t400 / 0.42e2) * t514 + t321 * t435 - (t494 * t417) + (t319 - 0.10e2 / 0.3e1 * t404 + (2 * t411) - t512) * t410 + t294 * t517 + ((-0.2e1 / 0.3e1 * t450 + t412 + t364 + t348) * t474 + 0.6e1 * (-0.8e1 / 0.3e1 * (t348 + t363 + t503) * t450 + t417 / 0.3e1 + (0.4e1 / 0.3e1 * t412 + t362 + t349) * t410 + t411 + 0.2e1 / 0.3e1 * t511 - 0.2e1 / 0.3e1 * t512 - t404 / 0.3e1 + t397 / 0.18e2 - t400 / 0.18e2) * t326) * pkin(1)) * t513 + 0.16e2 * (-6 * t412 * t410 + t490) * t515 + 0.32e2 * (t308 * t516 + t310 * t332) * t479 + 0.24e2 * (t322 * t435 - t407 + (-t324 + t496) * t417 + (t319 + t491 + t535) * t410 + t412 * t294) * t514 + 0.8e1 * t434 * t485 - 0.8e1 * ((t383 + t504) * t417 + (t381 + (t380 + (10 * t412)) * t406 + t443) * t410 + t509) * t450 + (t417 ^ 2) + (t379 + t393 + (28 * t406)) * t407 + (t325 * t406 + (70 * t404) + t442) * t417 + (t325 * t404 + t384 * t442 + t395 * t499 - 0.6e1 * t411 * t398 + 0.4e1 * t413 ^ 2 + (28 * t420 ^ 2)) * t410 + t311 * t523) + (((0.4e1 * t526 + (t327 + t488) * t315 + t331 * t327 + (0.3e1 / 0.2e1 * t410 + t385 + t463) * t488) * t484 + 0.6e1 * ((0.2e1 * (t364 + t410 + t506) * t327 + pkin(3) * t471) * t482 + (-0.8e1 * t447 + 0.4e1 * ((t460 + t536) * t327 - (t388 + t440) * t527) * t326) * pkin(1) + t437) * t528) * t286 + t302 * (-0.32e2 * (t451 + (-0.4e1 * t368 * t477 + t533 + ((4 * t410) + t379 + t392) * t406) * t335 + (t348 - t406 + t430) * t470 + t308 * t517 + t310 * t331) * t520 - 0.8e1 * (t305 + (t310 * t516 + t297) * t475 + (t435 + (t384 + t500) * t410 + t429) * t469 + t434) * t528)) * t314) / ((-0.4e1 * (0.2e1 * t526 + (t532 + t410) * t527 + (-t494 + t315) * t327) * t513 + 0.8e1 * pkin(1) * t447 + ((pkin(2) * t533 + 0.8e1 * t406 * t416) * t369 + 0.4e1 * t420 * t471) * t335 - 0.4e1 * t436 * t485 - (t410 * t501 + t382 + t490 + 6 * t511) * t327 + (t387 + (t378 + 6 * t412) * t410 + t323) * t527) * t286 + t302 * (0.12e2 * (0.6e1 * (-0.4e1 / 0.9e1 * t450 + t412 + t410 / 0.3e1 + t363 + t401 / 0.9e1 - t398 / 0.9e1) * t514 + t321 * t308 + t301 * t517 + (t510 + (t401 / 0.6e1 + t347 + t430) * t326) * t489) * t513 + t305 + (t301 * t516 + t297) * t475 + t444 * t469 + ((t324 + t462) * t410 + t508) * t446 + t407 + (t377 + t459) * t417 + (t384 * t459 + t395 * t498 + t376 + t391) * t410 + t323 * t311) + ((t484 * t527 + 0.4e1 * (t476 * t534 + (t327 - t527) * t315 + t436) * t528) * t286 + t302 * (-0.8e1 * (t315 + t481 + t331) * t520 - 0.6e1 * (t493 * t481 + (t308 + t301) * t470 + t444) * t528)) * t314) / 0.4e1;
t453 = t289 / pkin(4) / 0.2e1;
t438 = -pkin(3) + t478;
t433 = t385 + t401 + t455;
t300 = t370 * t371 + t519;
t299 = t368 * t371 - t518;
t295 = t316 + t401 + t439;
t285 = (-t438 + t525) * t286 + (t295 * t313 + t296 * t487) * t368 + (t295 * t370 + (0.4e1 * t335 - 0.2e1) * t313 * pkin(3)) * t327;
t284 = (pkin(2) * t518 + t313 * t368) * t286 - (t316 + t433 + t445) * t525 + t438 * t316 + t433 * t478 + (t296 * t534 - t311 - t388 + t480) * pkin(3);
t283 = atan2(t285 * t453, t284 * t453);
t282 = cos(t283);
t281 = sin(t283);
t279 = -t281 * t368 + t282 * t370;
t278 = t281 * t370 + t282 * t368;
t276 = (t284 * t286 / 0.4e1 + t285 * t454) * t472;
t275 = (t284 * t454 - t285 * t286 / 0.4e1) * t472;
t274 = atan2(t275 * t299 + t276 * t300, t275 * t300 - t276 * t299);
t273 = cos(t274);
t272 = sin(t274);
t271 = t272 * t369 - t273 * t371;
t270 = -t272 * t371 - t273 * t369;
t1 = -m(1) * (rSges(1,1) * g(1) + rSges(1,2) * g(2) + g(3) * rSges(1,3)) - m(2) * (g(1) * (rSges(2,1) * t371 - rSges(2,2) * t369) + g(2) * (rSges(2,1) * t369 + rSges(2,2) * t371) + g(3) * rSges(2,3)) - m(3) * (g(1) * (rSges(3,1) * t271 - rSges(3,2) * t270 + t528) + g(2) * (rSges(3,1) * t270 + rSges(3,2) * t271 + t327) + g(3) * rSges(3,3)) - m(4) * (g(1) * (rSges(4,1) * t370 - rSges(4,2) * t368 + pkin(1)) + g(2) * (rSges(4,1) * t368 + rSges(4,2) * t370) + g(3) * rSges(4,3)) - m(5) * (g(1) * (rSges(5,1) * t279 - rSges(5,2) * t278 + t314) + g(2) * (rSges(5,1) * t278 + rSges(5,2) * t279 + t527) + g(3) * rSges(5,3));
U = t1;
