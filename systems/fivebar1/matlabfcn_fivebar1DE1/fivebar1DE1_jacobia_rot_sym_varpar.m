% Rotatorische Teilmatrix der analytischen Jacobi-Matrix für beliebiges Segment von
% fivebar1DE1
% Use Code from Maple symbolic Code Generation
% 
% analytische Jacobi-Matrix: Differentieller Zusammenhang zwischen
% Endeffektorposition und verallgemeinerten Koordinaten.
% Zeitableitung der Winkeldarstellung des Endeffektors in Basis-Koordinaten
% 
% Winkeldarstellung: Euler-XYZ-Winkel, rotx(alpha)*roty(beta)*rotz(gamma)
% 
% Input:
% qJ [2x1]
%   Generalized joint coordinates (joint angles)
% link_index [1x1 uint8]
%   Index des Segmentes, auf dem der Punkt C liegt.
%   Wie in fivebar1DE1_fkine_fixb_rotmat_mdh_sym_varpar.m (1=Basis).
% pkin [5x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[AB,AE,BC,CD,ED]';
% 
% Output:
% Ja_rot [3x2]
%   Rotatorische Teilmatrix der analytischen Jacobi-Matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2020-04-27 04:13
% Revision: 970157063c8b7bcb25458a457551a083b21abdbd (2020-04-26)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function Ja_rot = fivebar1DE1_jacobia_rot_sym_varpar(qJ, link_index, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(2,1),uint8(0),zeros(5,1)}
assert(isreal(qJ) && all(size(qJ) == [2 1]), ...
  'fivebar1DE1_jacobia_rot_sym_varpar: qJ has to be [2x1] (double)');
assert(isa(link_index,'uint8') && all(size(link_index) == [1 1]), ...
	'fivebar1DE1_jacobia_rot_sym_varpar: link_index has to be [1x1] uint8');
assert(isreal(pkin) && all(size(pkin) == [5 1]), ...
  'fivebar1DE1_jacobia_rot_sym_varpar: pkin has to be [5x1] (double)');
Ja_rot=NaN(3,2);
if link_index == 0
	%% Symbolic Calculation
	% From jacobia_rot_0_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-27 03:51:59
	% EndTime: 2020-04-27 03:51:59
	% DurationCPUTime: 0.01s
	% Computational Cost: add. (0->0), mult. (0->0), div. (0->0), fcn. (0->0), ass. (0->1)
	t1 = [0, 0; 0, 0; 0, 0;];
	Ja_rot = t1;
elseif link_index == 1
	%% Symbolic Calculation
	% From jacobia_rot_1_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-27 03:51:59
	% EndTime: 2020-04-27 03:51:59
	% DurationCPUTime: 0.01s
	% Computational Cost: add. (3->0), mult. (6->0), div. (5->0), fcn. (6->0), ass. (0->1)
	t1 = [0, 0; 0, 0; 1, 0;];
	Ja_rot = t1;
elseif link_index == 2
	%% Symbolic Calculation
	% From jacobia_rot_2_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-27 03:52:36
	% EndTime: 2020-04-27 03:53:04
	% DurationCPUTime: 25.48s
	% Computational Cost: add. (397052->625), mult. (1189628->971), div. (2988->9), fcn. (141480->6), ass. (0->441)
	t778 = pkin(5) ^ 2;
	t777 = t778 ^ 2;
	t781 = pkin(4) ^ 2;
	t780 = t781 ^ 2;
	t947 = t777 - t780;
	t1039 = 4 * pkin(3);
	t1027 = 2 * pkin(1);
	t938 = 2 * pkin(3);
	t785 = pkin(3) ^ 2;
	t716 = 0.10e2 / 0.3e1 * t785;
	t789 = pkin(2) ^ 2;
	t728 = -0.2e1 / 0.3e1 * t778;
	t733 = 0.2e1 / 0.3e1 * t781;
	t791 = pkin(1) ^ 2;
	t775 = 2 * t791;
	t870 = t728 + t733 + t775;
	t703 = t785 + t791;
	t797 = t789 ^ 2;
	t869 = t728 + t703;
	t960 = t703 * (t733 + t869) + t797;
	t597 = (t716 + t870) * t789 + t960;
	t1038 = -0.6e1 * t597;
	t1028 = -t777 / 0.6e1 + t780 / 0.6e1;
	t783 = t785 ^ 2;
	t790 = t791 ^ 2;
	t945 = t783 + t790;
	t948 = t775 - t778;
	t969 = t791 * t778;
	t623 = t948 * t785 - t1028 + t945 - t969;
	t811 = t623 + t797;
	t599 = (t716 + t948) * t789 + t811;
	t1037 = -0.6e1 * t599;
	t746 = sin(qJ(1));
	t701 = pkin(2) * t746;
	t935 = 0.2e1 * t701;
	t1017 = 4 * t785;
	t765 = 6 * t785;
	t726 = -t778 / 0.3e1;
	t734 = t781 / 0.3e1;
	t943 = t789 + t791;
	t867 = t785 + t943;
	t649 = t726 + t734 + t867;
	t1036 = -0.24e2 * t649;
	t755 = 10 * t785;
	t745 = sin(qJ(2));
	t1035 = t745 * t789;
	t747 = cos(qJ(2));
	t700 = pkin(3) * t747;
	t922 = pkin(1) * t700;
	t683 = 0.2e1 * t922;
	t695 = -t785 / 0.3e1 + t791;
	t710 = t747 ^ 2;
	t971 = t785 * t710;
	t627 = 0.4e1 / 0.3e1 * t971 + t683 + t695;
	t774 = 3 * t791;
	t1029 = t774 - t778 - t781;
	t672 = t1029 * t755;
	t759 = -0.6e1 * t778;
	t796 = pkin(2) * t789;
	t786 = t796 ^ 2;
	t758 = -0.5e1 * t778;
	t949 = t758 - 0.5e1 * t781;
	t748 = cos(qJ(1));
	t713 = t748 ^ 2;
	t711 = t713 ^ 2;
	t988 = t711 * t797;
	t698 = t703 ^ 2;
	t940 = t791 - t778;
	t866 = t785 + t940;
	t990 = t698 * (-t781 + t866);
	t1032 = 0.7e1 * t786 + ((35 * t785) + (15 * t791) + t949) * t797 + ((21 * t783) + t672 + (9 * t790) + (t759 - 0.6e1 * t781) * t791) * t789 + t990 - 0.24e2 * t627 * t988;
	t705 = -3 * t785 + t791;
	t909 = 0.4e1 * t971;
	t1031 = t705 + t909;
	t1030 = t726 - t781 / 0.3e1;
	t1026 = -0.4e1 * pkin(2);
	t1025 = -4 * pkin(3);
	t1024 = -2 * pkin(3);
	t729 = -0.3e1 / 0.2e1 * t778;
	t753 = 15 * t783;
	t756 = 18 * t791;
	t770 = 3 * t790;
	t957 = t777 / 0.2e1 - t780 / 0.2e1;
	t831 = -0.3e1 * t969 + t770 + t957;
	t983 = t745 * t746;
	t675 = pkin(2) * t983;
	t848 = pkin(3) * t675;
	t952 = 15 * t785 + t774;
	t962 = t703 * ((t729 + t775) * t785 - 0.3e1 / 0.2e1 * t969 + t945 + t957) + t786;
	t567 = t848 * t1037 + (t753 + (t756 - 0.9e1 * t778) * t785 + t831) * t789 + (t729 + t952) * t797 + t962;
	t727 = -t778 / 0.2e1;
	t671 = t727 + t867;
	t832 = -0.4e1 * t848;
	t820 = t671 * t832;
	t582 = t820 + (t765 + t948) * t789 + t811;
	t668 = -0.2e1 * t848;
	t696 = t791 - t789 / 0.3e1;
	t634 = t696 * t668;
	t975 = (pkin(1) + pkin(2)) * (pkin(1) - pkin(2));
	t596 = t671 * t975 + t634;
	t706 = -0.3e1 * t789 + t791;
	t709 = t747 * t710;
	t800 = pkin(3) * t785;
	t989 = t709 * t800;
	t907 = pkin(1) * t989;
	t853 = 0.8e1 * t907;
	t654 = t706 * t853;
	t877 = 0.6e1 * t922;
	t887 = 0.12e2 * t971;
	t559 = t582 * t877 + t596 * t887 + t567 + t654;
	t1023 = 0.8e1 * t559;
	t1003 = pkin(2) * t748;
	t680 = pkin(1) - t1003;
	t650 = t680 + t700;
	t1022 = -0.8e1 * t650;
	t1021 = -0.2e1 * t747;
	t1020 = 0.8e1 * t747;
	t1019 = -0.2e1 * t748;
	t1018 = 4 * t783;
	t1016 = -0.96e2 * t696;
	t1015 = pkin(1) * pkin(3);
	t1014 = -pkin(4) - pkin(5);
	t1013 = -pkin(4) + pkin(5);
	t740 = t785 / 0.3e1;
	t613 = -0.4e1 / 0.9e1 * t848 + t791 + t789 / 0.3e1 + t740 + t781 / 0.9e1 - t778 / 0.9e1;
	t724 = -t778 / 0.6e1;
	t743 = t789 / 0.2e1;
	t954 = t743 + t791;
	t814 = -t848 + t954;
	t621 = t781 / 0.6e1 + t724 + t814;
	t939 = 4 * pkin(1);
	t976 = (pkin(1) + pkin(3)) * (pkin(1) - pkin(3));
	t568 = t695 * t668 + 0.6e1 * t613 * t971 + t649 * t976 + (t621 * t700 + t989) * t939;
	t579 = t649 * t832 + (t765 + t870) * t789 + t960;
	t619 = t668 + t649;
	t944 = -t789 + t791;
	t687 = t944 * t1017;
	t878 = 0.4e1 * t922;
	t569 = t619 * t878 + t687 * t710 + t579;
	t594 = t649 * t975 + t634;
	t631 = t683 + t1031;
	t673 = t781 + t866;
	t757 = -0.2e1 * t778;
	t760 = 0.2e1 * t781;
	t681 = pkin(1) + t700;
	t712 = t748 * t713;
	t987 = t712 * t796;
	t883 = t681 * t987;
	t895 = pkin(3) * t983;
	t992 = t681 * t748;
	t554 = -0.8e1 * t631 * t883 + t654 + t594 * t887 + t579 * t877 + t786 + (-t778 + t781 + t952) * t797 + t698 * t673 + (0.12e2 * t568 * t713 + t753 + (t756 + t759 + 0.6e1 * t781) * t785 + t770 + (t757 + t760) * t791) * t789 + 0.6e1 * (-t569 * t992 - t597 * t895) * pkin(2);
	t1006 = pkin(1) * t747;
	t766 = 3 * t785;
	t691 = t766 + t943;
	t655 = t691 * t701;
	t1000 = pkin(3) * t745;
	t662 = t701 - t1000;
	t901 = t785 * t701;
	t839 = t710 * t901;
	t769 = 0.3e1 * t789;
	t689 = t769 + t703;
	t991 = t689 * t745;
	t580 = -0.2e1 * t839 + t655 + (0.2e1 * t662 * t1006 - t991) * pkin(3);
	t815 = -t745 * t800 + t901;
	t652 = 0.2e1 * t815;
	t702 = (2 * t785) + t789;
	t704 = -t785 + t791;
	t583 = t702 * t1000 + t652 * t710 + (t704 + t683) * t701;
	t612 = -pkin(3) * t991 + t655;
	t688 = pkin(2) * t1018 + 0.8e1 * t785 * t796;
	t880 = t800 * t975;
	t614 = t688 * t746 + 0.4e1 * t745 * t880;
	t764 = 5 * t783;
	t941 = t790 + t797;
	t951 = t755 + t775;
	t968 = t791 * t785;
	t630 = t951 * t789 + t764 + t941 + (6 * t968);
	t768 = 0.5e1 * t797;
	t772 = 6 * t791;
	t639 = t768 + (t755 + t772) * t789 + t698;
	t840 = 0.8e1 * t883;
	t985 = t713 * t789;
	t917 = -0.4e1 * t985;
	t557 = t583 * t917 + t614 * t710 + (-0.4e1 * t612 * t1006 + (t639 + t840) * t745) * pkin(3) + (0.4e1 * t580 * t992 + (-t630 + t853) * t746) * pkin(2);
	t865 = t789 + t940;
	t828 = t785 + t865;
	t666 = -t781 + t828;
	t923 = pkin(1) * t1003;
	t685 = -0.2e1 * t923;
	t629 = t685 + t666;
	t609 = t668 + t629;
	t664 = t680 * t747;
	t714 = t789 * t1017;
	t970 = t789 * t791;
	t686 = t714 - 0.4e1 * t970;
	t776 = -2 * t791;
	t916 = 0.2e1 * t985;
	t632 = t685 + t916 + t944;
	t993 = t632 * t710;
	t792 = sqrt(t686 * t713 + 0.4e1 * t666 * t923 - t783 - (t791 + (pkin(2) - t1013) * (pkin(2) + t1013)) * (t791 + (pkin(2) - t1014) * (pkin(2) + t1014)) + (t760 + t776 + 0.2e1 * t778 - 0.6e1 * t789 - 0.4e1 * t993) * t785 + (-t609 * t664 + t629 * t675) * t1039);
	t548 = t554 * t650 + t557 * t792;
	t1012 = 0.1e1 / t548 / 0.4e1;
	t1011 = -0.1e1 / t548 ^ 2 / 0.4e1;
	t564 = 0.1e1 / t792;
	t1010 = t564 / 0.2e1;
	t1009 = 0.4e1 / 0.3e1 * t789;
	t1008 = -t792 / 0.4e1;
	t1007 = t792 / 0.4e1;
	t1005 = pkin(1) * t783;
	t1004 = pkin(1) * t785;
	t1002 = pkin(3) * t680;
	t1001 = pkin(3) * t710;
	t999 = t567 * pkin(3);
	t998 = t695 * pkin(3);
	t660 = t791 + t789 / 0.4e1 + t785 / 0.4e1 - t778 / 0.8e1;
	t953 = 0.4e1 / 0.7e1 * t791 - t778 / 0.7e1;
	t577 = -0.32e2 / 0.21e2 * t660 * t848 + t797 / 0.7e1 + (0.16e2 / 0.21e2 * t785 + t953) * t789 + t783 / 0.7e1 + t953 * t785 + t790 - 0.3e1 / 0.7e1 * t969 + t947 / 0.42e2;
	t725 = -t778 / 0.4e1;
	t661 = t725 + t740 + t954;
	t739 = 0.4e1 / 0.3e1 * t785;
	t578 = -0.8e1 / 0.3e1 * t661 * t848 + t797 / 0.3e1 + (t739 + t726) * t789 + t790 - t783 / 0.3e1 + (t1009 + 0.2e1 / 0.3e1 * t785 + t728) * t791 + t947 / 0.18e2;
	t741 = t785 / 0.2e1;
	t626 = -0.2e1 / 0.3e1 * t848 + t791 + t741 + t725;
	t773 = 4 * t791;
	t692 = (t773 + t778) * t785;
	t697 = t791 - 0.2e1 / 0.3e1 * t789;
	t894 = 0.16e2 * t989;
	t708 = t710 ^ 2;
	t973 = t783 * t708;
	t912 = 0.8e1 * t973;
	t558 = t697 * t912 + 0.14e2 * t577 * t971 + t695 * t820 + t704 * t797 + (t692 - 0.10e2 / 0.3e1 * t783 + (2 * t790) - t969) * t789 + t623 * t976 + (0.6e1 * t578 * t700 + t626 * t894) * pkin(1);
	t771 = 8 * t791;
	t618 = -0.4e1 * t800 * t675 + t714 + t1018 + (t757 + t771) * t785;
	t624 = t725 - t785 + t814;
	t920 = 0.8e1 * t989;
	t925 = 0.4e1 * t700;
	t570 = t668 * t976 + t618 * t710 + t671 * t705 + (t624 * t925 + t920) * pkin(1);
	t942 = t790 - t783;
	t571 = t696 * t820 - t786 + (-t716 - t940) * t797 + (t692 + t942 + t1028) * t789 + t791 * t623;
	t763 = 7 * t783;
	t576 = (t729 + t774 + (7 * t785)) * t797 + (t763 + (t758 + (10 * t791)) * t785 + t831) * t789 + t962;
	t793 = pkin(1) * t791;
	t679 = -12 * pkin(1) * t800 + t793 * t1039;
	t694 = -8 * t783 + 12 * t968;
	t842 = pkin(1) * t894;
	t588 = t679 * t747 + t694 * t710 + t842 + t912 + t945 - (6 * t968);
	t600 = t668 * t975 + t671 * t706;
	t656 = 0.16e2 * (t941 - 0.6e1 * t970) * t783;
	t699 = -0.30e2 * t778 + (60 * t791);
	t816 = (6 * t790) + t947 - 0.6e1 * t969;
	t835 = -0.32e2 * t883;
	t545 = t570 * t835 + t656 * t708 + 0.24e2 * t571 * t971 + (t757 + t773 + (28 * t785)) * t786 + t673 * t990 + (0.24e2 * t558 * t713 + t699 * t783 + t790 * t759 + t816 * t765 + t947 * t775 + (4 * t793 ^ 2) + (28 * t800 ^ 2)) * t789 + 0.8e1 * (-t559 * t992 - t576 * t895) * pkin(2) + (t999 * t1020 + 0.32e2 * t600 * t989) * pkin(1) + (0.16e2 * t588 * t711 + t699 * t785 + (70 * t783) + t797 + t816) * t797;
	t956 = t724 - t781 / 0.6e1;
	t873 = t791 + t956;
	t642 = t1009 + t741 + t873;
	t830 = t743 + t873;
	t643 = t739 + t830;
	t589 = -t642 * t1000 + t643 * t701;
	t645 = t785 + t830;
	t690 = 0.2e1 * t789 + t704;
	t885 = -t1000 / 0.2e1;
	t598 = t645 * t701 + t690 * t885;
	t717 = -0.20e2 / 0.3e1 * t785;
	t875 = 0.2e1 / 0.3e1 * t778 + t733 + t773;
	t876 = 0.4e1 / 0.3e1 * t778 + 0.4e1 / 0.3e1 * t781 + t776;
	t602 = -t797 + (t717 + t875) * t789 - (3 * t783) + t876 * t785 + t790;
	t872 = t791 + t1030;
	t874 = t778 / 0.3e1 + t734 + t775;
	t827 = -0.8e1 / 0.3e1 * t973 + t789 * t704 - 0.5e1 / 0.3e1 * t783 + t874 * t785 + t791 * t872;
	t972 = t783 * t709;
	t560 = t589 * t909 + t602 * t885 + t827 * t701 + (t598 * t700 - t745 * t972) * t939;
	t950 = t757 - 0.2e1 * t781;
	t868 = t772 + t950;
	t738 = -0.2e1 / 0.3e1 * t781;
	t955 = t728 + t738;
	t590 = t797 + (t951 + t955) * t789 + t764 + t868 * t785 + t791 * (t791 + t955);
	t605 = t768 + (t755 + t868) * t789 + t703 * (t738 + t869);
	t572 = -t605 * t1000 + t590 * t701;
	t829 = t785 + t872;
	t647 = t769 + t829;
	t648 = t691 + t1030;
	t591 = -t647 * t1000 + t648 * t701;
	t659 = t741 + t789 + t956;
	t606 = t975 * t1000 + t659 * t935;
	t900 = t800 * t701;
	t838 = t709 * t900;
	t910 = -0.4e1 * t971;
	t561 = t606 * t910 + (t591 * t925 - 0.8e1 * t838) * pkin(1) + t572;
	t603 = -0.3e1 * t797 + (t717 + t876) * t789 + t875 * t785 + t942;
	t607 = -0.5e1 / 0.3e1 * t797 + (-t785 + t874) * t789 + t791 * t829;
	t927 = -0.2e1 * t1000;
	t573 = t603 * t701 + t607 * t927;
	t871 = t727 - t781 / 0.2e1 + t791;
	t644 = 0.3e1 / 0.2e1 * t789 + t766 + t871;
	t651 = 0.4e1 * t815;
	t663 = t701 + 0.2e1 * t1000;
	t574 = t705 * t701 + t651 * t710 + (t663 * t1006 + t644 * t745) * t938;
	t646 = t769 + 0.3e1 / 0.2e1 * t785 + t871;
	t604 = t646 * t701 + t706 * t1000 / 0.2e1;
	t821 = 0.24e2 * t696 * t973 - t786 - ((21 * t785) + t1029) * t797 - (t950 * t791 + t672 + t770 + (35 * t783)) * t789 - (t763 + (t771 + t949) * t785 + t791 * (-t781 + t940)) * t703;
	t892 = -0.12e2 * t985;
	t911 = -0.6e1 * t971;
	t549 = t604 * t842 + t574 * t840 + t560 * t892 + t573 * t911 + (-0.6e1 * t572 * t1006 + t1032 * t745) * pkin(3) + (0.6e1 * t561 * t992 + t821 * t746) * pkin(2);
	t543 = t545 * t650 + t549 * t792;
	t628 = t685 + t781 + t828;
	t898 = t632 * t700;
	t584 = t628 * t680 + 0.2e1 * t898;
	t585 = t628 * t747 + (0.4e1 * t710 - 0.2e1) * t1002;
	t958 = -t675 + t664;
	t620 = pkin(3) + t958;
	t556 = t584 * t745 + t585 * t701 + t620 * t792;
	t665 = t766 + t781 + t865;
	t610 = t665 + t685 + t832;
	t667 = t675 - pkin(3);
	t937 = pkin(1) * t1019;
	t981 = t747 * t746;
	t902 = pkin(2) * t981;
	t622 = t680 * t745 + t902;
	t994 = t622 * t792;
	t555 = -t610 * t664 + t994 + (t665 * t983 + t667 * t937) * pkin(2) + (-t673 - t769 + t916 - 0.2e1 * t993) * pkin(3);
	t864 = t555 * t1012;
	t812 = t556 * t1008 + t543 * t864;
	t897 = pkin(3) * t664;
	t595 = t668 + t685 + t867 + 0.2e1 * t897;
	t592 = 0.1e1 / t595;
	t974 = 0.1e1 / pkin(5) / pkin(4) ^ 2;
	t884 = t592 * t974;
	t540 = t812 * t884;
	t980 = t747 * t748;
	t637 = -t980 - t983;
	t539 = t540 * t637;
	t863 = t556 * t1012;
	t813 = t555 * t1007 + t543 * t863;
	t541 = t813 * t884;
	t982 = t745 * t748;
	t638 = -t981 + t982;
	t535 = -t541 * t638 - t539;
	t533 = 0.1e1 / t535 ^ 2;
	t538 = t540 * t638;
	t534 = -t541 * t637 + t538;
	t995 = t533 * t534;
	t986 = t712 * t797;
	t984 = t713 * t796;
	t979 = t747 * t785;
	t978 = t747 * t789;
	t977 = t748 * t789;
	t967 = t800 * t710;
	t966 = -6 * t1015;
	t965 = -4 * t1015;
	t823 = pkin(1) * t839;
	t657 = -0.4e1 * t823;
	t682 = pkin(1) * t927;
	t707 = t745 ^ 2;
	t822 = -0.64e2 * t975 * t1005;
	t824 = pkin(1) * t710 * t900;
	t854 = 0.32e2 / 0.3e1 * t783;
	t825 = t709 * t854;
	t826 = 0.64e2 / 0.3e1 * t660 * t800;
	t833 = t709 * t880;
	t836 = t671 * t800 * t1016;
	t905 = pkin(1) * t967;
	t841 = -0.48e2 * t905;
	t843 = -0.24e2 * t671 * t1004;
	t844 = -0.16e2 * t661 * t1004;
	t845 = -0.48e2 * t599 * t1004;
	t850 = -0.4e1 * t671 * t998;
	t851 = t976 * t1024;
	t906 = pkin(1) * t971;
	t852 = 0.4e1 * t906;
	t913 = 0.8e1 * t979;
	t928 = 0.4e1 * t1002;
	t566 = (t609 * t928 + t632 * t913) * t745 + (t629 * t925 + 0.8e1 * t680 * t971) * t701;
	t857 = t566 * t1010;
	t879 = t745 * t979;
	t886 = -0.24e2 * t967;
	t888 = -0.32e2 * t972;
	t889 = -0.24e2 * t979;
	t890 = 0.24e2 * t985;
	t893 = -0.32e2 * t987;
	t896 = pkin(3) * t987;
	t908 = pkin(1) * t973;
	t914 = -0.8e1 * t979;
	t918 = 0.8e1 * t987;
	t919 = -0.8e1 * t987;
	t921 = -0.4e1 * t989;
	t924 = -0.8e1 * t576 * pkin(3);
	t926 = 0.2e1 * t700;
	t930 = pkin(3) * t1037;
	t931 = 0.6e1 * t1003;
	t933 = -0.6e1 * t1003;
	t934 = -0.8e1 * t1003;
	t834 = t745 * t886;
	t961 = pkin(1) * t706 * t834 - 0.24e2 * t696 * t838;
	t536 = ((t644 * t926 + t852 + t921) * t840 + (0.12e2 * t707 * t710 * t1005 + t642 * t921 - 0.2e1 * t690 * t906 - 0.4e1 * t908) * t892 + 0.8e1 * t706 * t908 + 0.12e2 * t607 * t989 + 0.6e1 * t605 * t906 + (-t602 * t892 / 0.2e1 + t1032) * t700) * t792 + t549 * t857 + t650 * t657 * t835 + ((0.6e1 * (-t605 * t700 - 0.4e1 * t647 * t906 - 0.4e1 * t833) * t792 + t961 * t1022) * t992 + ((-pkin(1) * t708 * t854 - t709 * t826 + t710 * t844 + t747 * t850) * t890 + t708 * t822 + t709 * t836 + t710 * t845 + t747 * t924 + ((t747 * t851 + t921) * t893 + (t710 * t843 + t747 * t930) * t934) * t681) * t650 * t746) * pkin(2) + (-pkin(3) * t545 + t650 * (0.16e2 * (t694 * t1021 - t679 + t841 + t888) * t988 + 0.32e2 * t570 * t896 + (pkin(1) * t886 + t618 * t1021 + t624 * t965) * t835 + (-0.28e2 * t577 * t979 + t578 * t966 + t626 * t841 + t697 * t888) * t890 + pkin(3) * t1003 * t1023 + t681 * (t582 * t966 + t596 * t889) * t934 - 0.4e1 * t656 * t709 - 0.96e2 * t600 * t905 - 0.48e2 * t571 * t979 - 0.8e1 * pkin(1) * t999) + ((t589 * t914 + t825 * t701) * t892 + t972 * t701 * t1016 + t604 * t841 + 0.12e2 * t573 * t979 + (t561 * t933 + t574 * t919 + (-0.24e2 * t682 + 0.64e2 * t879) * t988 + (0.48e2 * t598 * t985 + 0.6e1 * t572) * pkin(1)) * pkin(3) + (0.2e1 * (-t663 * t1015 - t651 * t747) * t918 + (t591 * t965 + t606 * t913 + 0.24e2 * t824) * t931) * t681) * t792) * t745;
	t846 = pkin(3) * t902;
	t891 = 0.12e2 * t985;
	t915 = 0.8e1 * t746 * t789;
	t929 = t649 * t1025;
	t932 = 0.4e1 * t1003;
	t936 = t580 * t1026;
	t542 = (t785 * t707 * t919 + (t702 * t700 - 0.2e1 * t989) * t917 + 0.4e1 * t833 + t689 * t852 + t639 * t700) * t792 + t557 * t857 + t650 * ((-0.8e1 / 0.3e1 * t838 + t657 - 0.2e1 * t695 * t846) * t891 + t823 * t1036 + t846 * t1038 + t961) + ((0.8e1 * t652 * t713 * t978 + t614 * t1021 - 0.24e2 * t824) * t792 + t650 * (0.12e2 * (-t613 * t979 - t905) * t891 + t594 * t889) + (t748 * t792 * t936 - t554 + t650 * (t569 * t931 + t631 * t918) + ((pkin(2) * t713 * t915 + 0.4e1 * t612) * t792 + t650 * (-0.48e2 * t621 * t985 - 0.6e1 * t579)) * pkin(1)) * pkin(3)) * t745 + ((t896 * t1020 + ((-pkin(3) * t689 + t675 * t1017) * t747 + (-t662 * t1000 - t971) * t1027) * t932) * t792 + t650 * ((t682 - 0.8e1 * t879) * t919 + ((-0.2e1 * t687 * t745 + t929 * t701) * t747 + (-0.4e1 * t619 * t1000 - 0.8e1 * t839) * pkin(1)) * t933)) * t681;
	t856 = t620 * t1010;
	t552 = -t994 + t566 * t856 + t632 * t707 * t1024 + t584 * t747 + (-t628 - 0.8e1 * t897) * t675;
	t855 = t622 * t1010;
	t553 = t958 * t792 + t566 * t855 + (t610 * t680 + 0.4e1 * t898) * t745 + (t937 * t978 + (t665 * t747 + t710 * t928) * pkin(2)) * t746;
	t615 = t622 * t938;
	t593 = 0.1e1 / t595 ^ 2;
	t809 = t593 * t812;
	t859 = -t556 * t564 / 0.8e1;
	t862 = t555 * t1011;
	t964 = (t615 * t809 + (t536 * t864 + t552 * t1008 + t566 * t859 + (t553 * t1012 + t542 * t862) * t543) * t592) * t974 - t541;
	t625 = t696 * t834 * t1003;
	t899 = pkin(2) * t980;
	t849 = pkin(1) * t899;
	t817 = t785 * t745 * t849;
	t641 = -0.4e1 * t817;
	t658 = t849 * t938;
	t684 = pkin(1) * t935;
	t881 = t746 * t977;
	t636 = t684 - 0.4e1 * t881;
	t904 = pkin(1) * t1035;
	t903 = pkin(2) * t982;
	t847 = pkin(3) * t903;
	t959 = -0.2e1 * t847 + t684;
	t562 = t636 * t910 + (pkin(1) * t666 * t1026 + t686 * t1019) * t746 + (-t959 * t664 + 0.2e1 * t746 ^ 2 * t904 + (-t609 * t981 + t629 * t982) * pkin(2)) * t1039;
	t858 = t562 * t1010;
	t882 = t681 * t984;
	t537 = t549 * t858 + (-0.32e2 * t641 * t650 + 0.8e1 * t658 * t792) * t883 + (0.24e2 * (0.4e1 * t627 * t986 * t1000 + t560 * t977 - t574 * t882) * t792 + t650 * (-0.48e2 * t558 * t977 + 0.96e2 * t570 * t882 - 0.64e2 * t588 * t986)) * t746 + ((t545 + (t650 * t1023 - 0.6e1 * t561 * t792) * t681) * t746 + (t681 * t625 * t1022 + ((t643 * t909 + t645 * t878 + t827) * t892 + t646 * t842 + t603 * t911 - 0.6e1 * t590 * t922 + (t1031 * t918 + (t648 * t878 - 0.8e1 * t659 * t971 + t590 - 0.8e1 * t907) * t931) * t681 + t821) * t792 + ((-pkin(1) * t825 - t710 * t826 + t747 * t844 + t850) * t890 + t709 * t822 + t710 * t836 + t747 * t845 + t924 + ((t851 - 0.4e1 * t967) * t893 + (t747 * t843 + t930) * t934) * t681) * t650 * t745) * t748) * pkin(2);
	t544 = (t658 * t917 + (t583 * t915 + t688 * t710 + ((t704 + 0.2e1 * t971) * t917 - t630 + (-0.4e1 * t691 * t700 + t920) * pkin(1)) * pkin(2)) * t748 + ((t658 + (t691 - 0.2e1 * t971) * t1003) * t932 + (-0.24e2 * t984 * t1000 + t936) * t746) * t681) * t792 + t557 * t858 + t554 * t701 + t650 * (0.24e2 * t631 * t746 * t882 + (t641 + (-0.8e1 / 0.3e1 * t967 - 0.2e1 * t998) * t903) * t891 - 0.24e2 * t568 * t881 + t625 + t817 * t1036 + t847 * t1038 + 0.6e1 * (-(pkin(1) * t914 + t929) * t713 * t1035 + t569 * t701) * t681);
	t550 = t562 * t856 + t636 * t745 * t926 + ((-t745 * t792 + t585) * t748 + (t747 * t792 + (t680 * t1027 + t628) * t745 + (-pkin(3) + 0.2e1 * t1001 + t1006) * t935) * t746) * pkin(2);
	t551 = (t675 + t899) * t792 + t562 * t855 - 0.2e1 * t636 * t1001 - (t684 - 0.4e1 * t847) * t664 - 0.2e1 * t713 * t904 + t665 * t903 + (t977 * t1025 + (t667 * t1027 - t610 * t747) * pkin(2)) * t746;
	t611 = 0.2e1 * t846 + t959;
	t963 = (-t611 * t809 + (t537 * t864 + t550 * t1008 + t562 * t859 + (t551 * t1012 + t544 * t862) * t543) * t592) * t974 + t541;
	t861 = t556 * t1011;
	t860 = t555 * t564 / 0.8e1;
	t810 = t593 * t813;
	t532 = 0.1e1 / t535;
	t530 = 0.1e1 / (t533 * t534 ^ 2 + 0.1e1);
	t526 = (-t611 * t810 + (t551 * t1007 + t562 * t860 + t537 * t863 + (t550 * t1012 + t544 * t861) * t543) * t592) * t974;
	t524 = (t615 * t810 + (t553 * t1007 + t566 * t860 + t536 * t863 + (t552 * t1012 + t542 * t861) * t543) * t592) * t974;
	t1 = [0, 0; 0, 0; ((t963 * t638 + (-t526 + t540) * t637) * t532 - (-t526 * t638 - t963 * t637 + t538) * t995) * t530 + 0.1e1, ((-t524 * t637 + t964 * t638 - t539) * t532 - ((-t524 - t540) * t638 - t964 * t637) * t995) * t530;];
	Ja_rot = t1;
elseif link_index == 3
	%% Symbolic Calculation
	% From jacobia_rot_3_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-27 03:51:59
	% EndTime: 2020-04-27 03:51:59
	% DurationCPUTime: 0.01s
	% Computational Cost: add. (3->0), mult. (6->0), div. (5->0), fcn. (6->0), ass. (0->1)
	t1 = [0, 0; 0, 0; 0, 1;];
	Ja_rot = t1;
elseif link_index == 4
	%% Symbolic Calculation
	% From jacobia_rot_4_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-27 03:52:01
	% EndTime: 2020-04-27 03:52:02
	% DurationCPUTime: 1.42s
	% Computational Cost: add. (12896->105), mult. (27752->181), div. (284->6), fcn. (6912->6), ass. (0->81)
	t216 = -4 * pkin(2);
	t167 = pkin(2) ^ 2;
	t161 = cos(qJ(1));
	t207 = pkin(2) * t161;
	t188 = pkin(1) * t207;
	t153 = -0.2e1 * t188;
	t168 = pkin(1) ^ 2;
	t191 = t153 + t168;
	t157 = t161 ^ 2;
	t213 = 0.2e1 * t157;
	t143 = t167 * t213 - t167 + t191;
	t215 = -0.2e1 * t143;
	t151 = pkin(1) - t207;
	t214 = 0.2e1 * t151;
	t212 = (-pkin(4) - pkin(5));
	t211 = (-pkin(4) + pkin(5));
	t158 = sin(qJ(2));
	t159 = sin(qJ(1));
	t196 = t158 * t159;
	t150 = pkin(2) * t196;
	t178 = pkin(3) * t150;
	t149 = -0.2e1 * t178;
	t166 = pkin(3) ^ 2;
	t160 = cos(qJ(2));
	t145 = t151 * t160;
	t183 = pkin(3) * t145;
	t134 = t149 + t166 + t167 + 0.2e1 * t183 + t191;
	t132 = 0.1e1 / t134;
	t210 = t132 / 0.2e1;
	t209 = pkin(1) * (t150 - pkin(3));
	t208 = pkin(2) * t159;
	t206 = pkin(3) * t151;
	t156 = t160 ^ 2;
	t205 = pkin(3) * t156;
	t204 = pkin(3) * t160;
	t133 = 0.1e1 / t134 ^ 2;
	t155 = pkin(1) * t208;
	t194 = t159 * t160;
	t195 = t158 * t161;
	t201 = t133 * (t155 + (t194 - t195) * pkin(3) * pkin(2));
	t140 = pkin(2) * t194 + t158 * t151;
	t200 = t133 * t140 * pkin(3);
	t164 = pkin(4) ^ 2;
	t190 = -pkin(5) ^ 2 + t168;
	t182 = t167 + t190;
	t175 = t166 + t182;
	t147 = -t164 + t175;
	t142 = t153 + t147;
	t135 = t149 + t142;
	t154 = (t166 - t168) * t167;
	t174 = t156 * t215 - t190;
	t169 = sqrt(0.4e1 * t154 * t157 + 0.4e1 * t147 * t188 - (t168 + ((pkin(2) - t211) * (pkin(2) + t211))) * (t168 + ((pkin(2) - t212) * (pkin(2) + t212))) + 0.4e1 * (-t135 * t145 + t142 * t150) * pkin(3) + (0.2e1 * t164 - (6 * t167) + 0.2e1 * t174 - t166) * t166);
	t199 = t140 * t169;
	t198 = t143 * t160;
	t197 = t156 * t166;
	t193 = t160 * t161;
	t192 = -t150 + t145;
	t189 = -0.2e1 * pkin(1) * t167;
	t127 = 0.1e1 / t169;
	t187 = 0.2e1 * t127 * ((t135 * t206 + 0.2e1 * t166 * t198) * t158 + (t142 * t204 + t197 * t214) * t208);
	t186 = -0.4e1 * t161 * t167;
	t185 = pkin(2) * t195;
	t184 = pkin(3) * t198;
	t152 = 0.2e1 * t155;
	t144 = t159 * t186 + t152;
	t177 = pkin(3) * t185;
	t179 = -0.8e1 * t183;
	t181 = (-0.4e1 * t144 * t197 + (t155 - t177) * t179 + 0.4e1 * t142 * t177 + (t135 * t204 * t216 - 0.8e1 * t154 * t161 + (0.8e1 * pkin(3) * t167 * t196 + t147 * t216) * pkin(1)) * t159) * t127 / 0.2e1;
	t146 = 0.3e1 * t166 + t164 + t182;
	t136 = t146 + t153 - 0.4e1 * t178;
	t123 = -t136 * t145 + t199 + (t146 * t196 - 0.2e1 * t161 * t209) * pkin(2) + (-t164 - t166 + (t213 - 0.3e1) * t167 + t174) * pkin(3);
	t122 = 0.1e1 / t123 ^ 2;
	t141 = t153 + t164 + t175;
	t130 = t141 * t151 + 0.2e1 * t184;
	t131 = t141 * t160 + (0.4e1 * t156 - 0.2e1) * t206;
	t139 = pkin(3) + t192;
	t124 = t130 * t158 + t131 * t208 + t139 * t169;
	t176 = 0.1e1 / (t122 * t124 ^ 2 + 0.1e1) * t134;
	t173 = 0.1e1 / t123 * t176;
	t171 = t122 * t124 * t176;
	t1 = [0, 0; 0, 0; 0.2e1 * ((0.2e1 * t144 * t158 * t204 + t139 * t181) * t210 - t124 * t201 + ((-t158 * t169 + t131) * t161 * t210 + (t160 * t169 / 0.2e1 + (pkin(1) * t214 + t141) * t158 / 0.2e1 + (pkin(1) * t160 - pkin(3) + 0.2e1 * t205) * t208) * t132 * t159) * pkin(2)) * t173 - 0.2e1 * (((pkin(2) * t193 + t150) * t169 + t140 * t181 - 0.2e1 * t144 * t205 - (t152 - 0.4e1 * t177) * t145 + t157 * t158 * t189 + t146 * t185 + (pkin(3) * t186 + (-t136 * t160 + 0.2e1 * t209) * pkin(2)) * t159) * t210 - t123 * t201) * t171, 0.2e1 * ((-t199 + t139 * t187 + t130 * t160 + ((-t141 + t179) * t208 + pkin(3) * t158 * t215) * t158) * t210 + t124 * t200) * t173 - 0.2e1 * ((t192 * t169 + t140 * t187 + (t151 * t136 + 0.4e1 * t184) * t158 + (t189 * t193 + (t146 * t160 + 0.4e1 * t151 * t205) * pkin(2)) * t159) * t210 + t123 * t200) * t171 + 0.1e1;];
	Ja_rot = t1;
end