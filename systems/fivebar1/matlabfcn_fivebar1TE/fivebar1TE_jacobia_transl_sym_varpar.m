% Analytische Jacobi-Matrix (Translatorisch) für beliebiges Segment von
% fivebar1TE
% 
% analytische Jacobi-Matrix: Differentieller Zusammenhang zwischen
% Endeffektorposition und verallgemeinerten Koordinaten.
% (Ist für translatorischen Teil egal, kennzeichnet nur den Rechenweg der Herleitung)
% 
% Input:
% qJ [2x1]
%   Generalized joint coordinates (joint angles)
% link_index [1x1 uint8]
%   Index des Segmentes, auf dem der Punkt C liegt (0=Basis).
% r_i_i_C [3x1]
%   Ortsvektor vom KörperKS-Ursprung zum gesuchten Punkt
% pkin [5x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[AB,AE,BC,CD,ED]';
% 
% Output:
% Ja_transl [3x2]
%   Translatorischer Teil der analytischen Jacobi-Matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2020-04-27 10:28
% Revision: 970157063c8b7bcb25458a457551a083b21abdbd (2020-04-26)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function Ja_transl = fivebar1TE_jacobia_transl_sym_varpar(qJ, link_index, r_i_i_C, ...
  pkin)


%% Coder Information
%#codegen
%$cgargs {zeros(2,1),uint8(0),zeros(3,1),zeros(5,1)}
assert(isreal(qJ) && all(size(qJ) == [2 1]), ...
  'fivebar1TE_jacobia_transl_sym_varpar: qJ has to be [2x1] (double)');
assert(isa(r_i_i_C,'double') && isreal(r_i_i_C) && all(size(r_i_i_C) == [3 1]), ...
	'fivebar1TE_jacobia_transl_sym_varpar: Position vector r_i_i_C has to be [3x1] double');
assert(isa(link_index,'uint8') && all(size(link_index) == [1 1]), ...
	'fivebar1TE_jacobia_transl_sym_varpar: link_index has to be [1x1] uint8');
assert(isreal(pkin) && all(size(pkin) == [5 1]), ...
  'fivebar1TE_jacobia_transl_sym_varpar: pkin has to be [5x1] (double)');
Ja_transl=NaN(3,2);
if link_index == 0
	%% Symbolic Calculation
	% From jacobia_transl_0_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-27 10:19:04
	% EndTime: 2020-04-27 10:19:04
	% DurationCPUTime: 0.05s
	% Computational Cost: add. (0->0), mult. (0->0), div. (0->0), fcn. (0->0), ass. (0->1)
	t1 = [0, 0; 0, 0; 0, 0;];
	Ja_transl = t1;
elseif link_index == 1
	%% Symbolic Calculation
	% From jacobia_transl_1_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-27 10:19:04
	% EndTime: 2020-04-27 10:19:04
	% DurationCPUTime: 0.06s
	% Computational Cost: add. (2->2), mult. (4->4), div. (0->0), fcn. (4->2), ass. (0->3)
	t2 = cos(qJ(1));
	t1 = sin(qJ(1));
	t3 = [-r_i_i_C(1) * t1 - r_i_i_C(2) * t2, 0; r_i_i_C(1) * t2 - r_i_i_C(2) * t1, 0; 0, 0;];
	Ja_transl = t3;
elseif link_index == 2
	%% Symbolic Calculation
	% From jacobia_transl_2_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-27 10:19:04
	% EndTime: 2020-04-27 10:19:25
	% DurationCPUTime: 15.98s
	% Computational Cost: add. (179806->631), mult. (544178->973), div. (1136->6), fcn. (66634->6), ass. (0->422)
	t258 = (pkin(2) ^ 2);
	t254 = (pkin(3) ^ 2);
	t260 = (pkin(1) ^ 2);
	t406 = (t254 - t260);
	t156 = t406 * t258;
	t495 = 2 * pkin(1);
	t494 = 2 * pkin(3);
	t493 = 4 * pkin(3);
	t217 = sin(qJ(2));
	t218 = sin(qJ(1));
	t435 = t217 * t218;
	t145 = pkin(2) * t435;
	t307 = pkin(3) * t145;
	t140 = -0.2e1 * t307;
	t220 = cos(qJ(1));
	t459 = pkin(2) * t220;
	t386 = pkin(1) * t459;
	t155 = -0.2e1 * t386;
	t404 = (t258 + t260);
	t323 = t254 + t404;
	t150 = pkin(1) - t459;
	t219 = cos(qJ(2));
	t134 = t150 * t219;
	t359 = pkin(3) * t134;
	t70 = t140 + t155 + t323 + 0.2e1 * t359;
	t492 = -0.2e1 / t70 ^ 2;
	t491 = 2 * t254;
	t490 = 8 * t258;
	t184 = t219 ^ 2;
	t269 = pkin(3) * t254;
	t421 = t269 * t184;
	t367 = pkin(1) * t421;
	t489 = 0.24e2 * t367;
	t431 = t219 * t220;
	t110 = -t431 - t435;
	t432 = t219 * t218;
	t434 = t217 * t220;
	t111 = -t432 + t434;
	t173 = pkin(3) * t219;
	t122 = t150 + t173;
	t252 = t254 ^ 2;
	t259 = (t260 ^ 2);
	t266 = t258 ^ 2;
	t402 = t259 + t266;
	t135 = (-6 * t258 * t260 + t402) * t252;
	t250 = (pkin(4) ^ 2);
	t247 = (pkin(5) ^ 2);
	t401 = t260 - t247;
	t322 = t254 + t401;
	t143 = t250 + t322;
	t172 = -30 * t247 + 60 * t260;
	t182 = t184 ^ 2;
	t187 = t220 ^ 2;
	t185 = t187 ^ 2;
	t228 = -2 * t247;
	t233 = 6 * t254;
	t242 = 4 * t260;
	t244 = 2 * t260;
	t265 = pkin(2) * t258;
	t255 = t265 ^ 2;
	t262 = pkin(1) * t260;
	t246 = t247 ^ 2;
	t249 = t250 ^ 2;
	t409 = t246 - t249;
	t423 = t260 * t247;
	t293 = -6 * t423 + 6 * t259 + t409;
	t197 = -t247 / 0.4e1;
	t213 = t254 / 0.2e1;
	t100 = -0.2e1 / 0.3e1 * t307 + t260 + t213 + t197;
	t163 = (t242 + t247) * t254;
	t167 = -t254 / 0.3e1 + t260;
	t169 = t260 - 0.2e1 / 0.3e1 * t258;
	t199 = -t247 / 0.2e1;
	t142 = t199 + t323;
	t296 = -0.4e1 * t307;
	t284 = t142 * t296;
	t183 = t219 * t184;
	t441 = t183 * t269;
	t355 = 0.16e2 * t441;
	t425 = t252 * t182;
	t374 = 0.8e1 * t425;
	t424 = t254 * t184;
	t428 = (pkin(1) + pkin(3)) * (pkin(1) - pkin(3));
	t129 = t260 + t258 / 0.4e1 + t254 / 0.4e1 - t247 / 0.8e1;
	t412 = 0.4e1 / 0.7e1 * t260 - t247 / 0.7e1;
	t49 = -0.32e2 / 0.21e2 * t129 * t307 + t266 / 0.7e1 + (0.16e2 / 0.21e2 * t254 + t412) * t258 + t252 / 0.7e1 + t412 * t254 + t259 - 0.3e1 / 0.7e1 * t423 + t246 / 0.42e2 - t249 / 0.42e2;
	t212 = t254 / 0.3e1;
	t215 = t258 / 0.2e1;
	t413 = t215 + t260;
	t130 = t197 + t212 + t413;
	t198 = -t247 / 0.3e1;
	t200 = -0.2e1 / 0.3e1 * t247;
	t211 = 0.4e1 / 0.3e1 * t254;
	t470 = 0.4e1 / 0.3e1 * t258;
	t53 = -0.8e1 / 0.3e1 * t130 * t307 + t266 / 0.3e1 + (t211 + t198) * t258 + t259 - t252 / 0.3e1 + (t470 + 0.2e1 / 0.3e1 * t254 + t200) * t260 + t246 / 0.18e2 - t249 / 0.18e2;
	t407 = t252 + t259;
	t410 = t244 - t247;
	t484 = -t246 / 0.6e1 + t249 / 0.6e1;
	t98 = (t410 * t254) + t407 - t423 - t484;
	t32 = t169 * t374 + 0.14e2 * t49 * t424 + t167 * t284 - (t406 * t266) + (t163 - 0.10e2 / 0.3e1 * t252 + (2 * t259) - t423) * t258 + t98 * t428 + (t100 * t355 + 0.6e1 * t53 * t173) * pkin(1);
	t238 = -3 * t258;
	t180 = t238 + t260;
	t368 = pkin(1) * t441;
	t317 = 0.8e1 * t368;
	t125 = t180 * t317;
	t385 = pkin(1) * t173;
	t333 = 0.6e1 * t385;
	t350 = 0.12e2 * t424;
	t225 = 15 * t252;
	t226 = 15 * t254;
	t240 = 3 * t259;
	t417 = t246 / 0.2e1 - t249 / 0.2e1;
	t294 = -(3 * t423) + t240 + t417;
	t201 = -0.3e1 / 0.2e1 * t247;
	t243 = 3 * t260;
	t414 = t201 + t243;
	t177 = t254 + t260;
	t450 = t255 + t177 * ((t201 + t244) * t254 - 0.3e1 / 0.2e1 * t423 + t407 + t417);
	t171 = 0.10e2 / 0.3e1 * t254;
	t280 = t266 + t98;
	t72 = (t171 + t410) * t258 + t280;
	t482 = -0.6e1 * t72;
	t42 = t307 * t482 + (t226 + t414) * t266 + t450 + (t225 + ((-9 * t247 + 18 * t260) * t254) + t294) * t258;
	t58 = t284 + ((t233 + t410) * t258) + t280;
	t168 = t260 - t258 / 0.3e1;
	t107 = t168 * t140;
	t427 = (pkin(1) + pkin(2)) * (pkin(1) - pkin(2));
	t75 = t142 * t427 + t107;
	t34 = t333 * t58 + t350 * t75 + t125 + t42;
	t151 = pkin(1) + t173;
	t186 = t220 * t187;
	t439 = t186 * t265;
	t340 = t151 * t439;
	t358 = pkin(3) * t435;
	t170 = t177 ^ 2;
	t444 = t170 * (-t250 + t322);
	t447 = t151 * t220;
	t179 = -3 * t254 + t260;
	t381 = 0.8e1 * t441;
	t388 = 0.4e1 * t173;
	t241 = 8 * t260;
	t433 = t217 * t269;
	t483 = -0.4e1 * pkin(2);
	t311 = t433 * t483;
	t477 = 4 * t252;
	t93 = t218 * t311 + t477 + ((4 * t258 + t228 + t241) * t254);
	t283 = -t307 + t413;
	t99 = t197 - t254 + t283;
	t45 = t140 * t428 + t142 * t179 + t184 * t93 + (t388 * t99 + t381) * pkin(1);
	t403 = t259 - t252;
	t47 = t168 * t284 - t255 + (-t171 - t401) * t266 + (t163 + t403 + t484) * t258 + t98 * t260;
	t229 = -5 * t247;
	t230 = 7 * t252;
	t232 = 7 * t254;
	t52 = (t232 + t414) * t266 + (t230 + ((t229 + 10 * t260) * t254) + t294) * t258 + t450;
	t149 = -12 * pkin(1) * t269 + t262 * t493;
	t422 = t260 * t254;
	t166 = -8 * t252 + 12 * t422;
	t304 = pkin(1) * t355;
	t63 = t149 * t219 + t166 * t184 + t304 + t374 + t407 - (6 * t422);
	t78 = t140 * t427 + t142 * t180;
	t20 = -0.32e2 * t45 * t340 + 0.16e2 * t135 * t182 + 0.24e2 * t47 * t424 + (t228 + t242 + 28 * t254) * t255 + (t143 * t444) + ((t172 * t252) + 0.24e2 * t32 * t187 + (t293 * t233) + (t409 * t244) - (6 * t259 * t247) + (4 * t262 ^ 2) + (28 * t269 ^ 2)) * t258 + 0.8e1 * (-t34 * t447 - t358 * t52) * pkin(2) + (0.8e1 * t42 * t173 + 0.32e2 * t78 * t441) * pkin(1) + ((t172 * t254) + 0.16e2 * t185 * t63 + (70 * t252) + t266 + t293) * t266;
	t175 = -t247 - t250;
	t159 = t243 + t175;
	t446 = t159 * t254;
	t133 = 10 * t446;
	t443 = t175 * t260;
	t287 = 0.24e2 * t168 * t425 - t255 - ((21 * t254 + t159) * t266) - ((t133 + t240 + 35 * t252 + 2 * t443) * t258) - ((t230 + (t229 + t241 - 5 * t250) * t254 + t260 * (-t250 + t401)) * t177);
	t302 = 0.8e1 * t340;
	t174 = pkin(2) * t218;
	t485 = t198 - t250 / 0.3e1;
	t328 = t260 + t485;
	t206 = t250 / 0.3e1;
	t330 = t247 / 0.3e1 + t206 + t244;
	t295 = -0.8e1 / 0.3e1 * t425 - t156 - 0.5e1 / 0.3e1 * t252 + t330 * t254 + t260 * t328;
	t455 = pkin(3) * t217;
	t347 = -t455 / 0.2e1;
	t370 = 0.4e1 * t424;
	t399 = 4 * pkin(1);
	t442 = t183 * t252;
	t196 = -t247 / 0.6e1;
	t416 = t196 - t250 / 0.6e1;
	t329 = t260 + t416;
	t114 = t470 + t213 + t329;
	t292 = t215 + t329;
	t115 = t211 + t292;
	t64 = -t114 * t455 + t115 * t174;
	t318 = 0.20e2 / 0.3e1 * t254;
	t205 = 0.2e1 / 0.3e1 * t250;
	t331 = 0.2e1 / 0.3e1 * t247 + t205 + t242;
	t332 = 0.4e1 / 0.3e1 * t247 + 0.4e1 / 0.3e1 * t250 - (2 * t260);
	t73 = -t266 + (-t318 + t331) * t258 - (3 * t252) + t332 * t254 + t259;
	t117 = t254 + t292;
	t476 = 2 * t258;
	t161 = t476 - t406;
	t76 = t117 * t174 + t161 * t347;
	t35 = t64 * t370 + t73 * t347 + t295 * t174 + (t76 * t173 - t217 * t442) * t399;
	t437 = t187 * t258;
	t353 = -0.12e2 * t437;
	t479 = -0.8e1 * t183;
	t312 = t174 * t479;
	t372 = -0.4e1 * t424;
	t231 = 5 * t252;
	t227 = 10 * t254;
	t411 = t227 + t244;
	t210 = -0.2e1 / 0.3e1 * t250;
	t415 = t200 + t210;
	t65 = t266 + (t411 + t415) * t258 + t231 + (2 * t446) + t260 * (t260 + t415);
	t236 = 5 * t266;
	t325 = t200 + t177;
	t77 = t236 + ((5 * t254 + t159) * t476) + (t210 + t325) * t177;
	t46 = t65 * t174 - t77 * t455;
	t237 = 3 * t258;
	t291 = t254 + t328;
	t119 = t237 + t291;
	t234 = 3 * t254;
	t162 = t234 + t404;
	t120 = t162 + t485;
	t66 = -t119 * t455 + t120 * t174;
	t128 = t213 + t258 + t416;
	t397 = 0.2e1 * t174;
	t81 = t128 * t397 + t427 * t455;
	t36 = t81 * t372 + (t269 * t312 + t388 * t66) * pkin(1) + t46;
	t373 = -0.6e1 * t424;
	t461 = pkin(1) * t219;
	t391 = -0.2e1 * t455;
	t74 = -(3 * t266) + (-t318 + t332) * t258 + t331 * t254 + t403;
	t82 = -0.5e1 / 0.3e1 * t266 + (-t254 + t330) * t258 + t260 * t291;
	t48 = t74 * t174 + t391 * t82;
	t153 = 0.2e1 * t385;
	t101 = 0.4e1 / 0.3e1 * t424 + t153 + t167;
	t440 = t185 * t266;
	t487 = 0.7e1 * t255 + ((t232 + t159) * t236) + ((t133 + 21 * t252 + 9 * t259 + 6 * t443) * t258) + t444 - 0.24e2 * t101 * t440;
	t327 = t199 - t250 / 0.2e1 + t260;
	t116 = 0.3e1 / 0.2e1 * t258 + t234 + t327;
	t132 = t174 + 0.2e1 * t455;
	t362 = t254 * t174;
	t123 = t362 - t433;
	t448 = t123 * t184;
	t51 = t179 * t174 + 0.4e1 * t448 + (t116 * t217 + t132 * t461) * t494;
	t118 = t237 + 0.3e1 / 0.2e1 * t254 + t327;
	t80 = t118 * t174 + t180 * t455 / 0.2e1;
	t24 = t80 * t304 + t51 * t302 + t48 * t373 + t35 * t353 + (t487 * t217 - 0.6e1 * t46 * t461) * pkin(3) + (t218 * t287 + 0.6e1 * t36 * t447) * pkin(2);
	t321 = t258 + t401;
	t290 = t254 + t321;
	t137 = -t250 + t290;
	t103 = t155 + t137;
	t377 = 0.2e1 * t437;
	t405 = -t258 + t260;
	t106 = t155 + t377 + t405;
	t481 = -0.2e1 * t106;
	t285 = t184 * t481 - t401;
	t471 = -pkin(4) + pkin(5);
	t472 = -pkin(4) - pkin(5);
	t84 = t140 + t103;
	t261 = sqrt(0.4e1 * t156 * t187 + 0.4e1 * t137 * t386 - t252 - (t260 + (pkin(2) - t472) * (pkin(2) + t472)) * (t260 + (pkin(2) - t471) * (pkin(2) + t471)) + (t238 + t250 + t285) * t491 + (t103 * t145 - t84 * t134) * t493);
	t17 = t122 * t20 + t24 * t261;
	t102 = t155 + t250 + t290;
	t360 = t106 * t173;
	t59 = t102 * t150 + 0.2e1 * t360;
	t458 = pkin(3) * t150;
	t478 = 0.4e1 * t184;
	t62 = t102 * t219 + (t478 - 0.2e1) * t458;
	t418 = -t145 + t134;
	t95 = pkin(3) + t418;
	t31 = t62 * t174 + t217 * t59 + t261 * t95;
	t136 = t234 + t250 + t321;
	t97 = pkin(2) * t432 + t150 * t217;
	t451 = t97 * t261;
	t462 = pkin(1) * (t145 - pkin(3));
	t85 = t136 + t155 + t296;
	t30 = -t85 * t134 + t451 + (t136 * t435 - 0.2e1 * t220 * t462) * pkin(2) + (-t237 - t250 - t254 + t285 + t377) * pkin(3);
	t486 = t179 + t370;
	t105 = t153 + t486;
	t408 = -t247 + t250;
	t324 = t243 + t408;
	t121 = t198 + t206 + t323;
	t88 = -0.4e1 / 0.9e1 * t307 + t260 + t258 / 0.3e1 + t212 + t250 / 0.9e1 - t247 / 0.9e1;
	t96 = t250 / 0.6e1 + t196 + t283;
	t43 = t167 * t140 + t121 * t428 + 0.6e1 * t88 * t424 + (t96 * t173 + t441) * t399;
	t157 = t405 * t254;
	t334 = 0.4e1 * t385;
	t326 = t200 + t205 + t244;
	t419 = (t205 + t325) * t177 + t266;
	t55 = t121 * t296 + (t233 + t326) * t258 + t419;
	t94 = t140 + t121;
	t44 = t157 * t478 + t334 * t94 + t55;
	t69 = t121 * t427 + t107;
	t71 = (t171 + t326) * t258 + t419;
	t29 = -0.8e1 * t105 * t340 + t125 + t69 * t350 + t55 * t333 + t255 + ((t226 + t324) * t266) + (t170 * t143) + (0.12e2 * t43 * t187 + (t324 * t233) + (t408 * t244) + t225 + t240) * t258 + 0.6e1 * (-t358 * t71 - t44 * t447) * pkin(2);
	t104 = t411 * t258 + t231 + t402 + 6 * t422;
	t112 = t236 + (t227 + 6 * t260) * t258 + t170;
	t378 = -0.4e1 * t437;
	t126 = t162 * t174;
	t131 = t174 - t455;
	t299 = t184 * t362;
	t160 = t237 + t177;
	t445 = t160 * t217;
	t56 = -0.2e1 * t299 + t126 + (0.2e1 * t131 * t461 - t445) * pkin(3);
	t176 = t491 + t258;
	t57 = t176 * t455 + 0.2e1 * t448 + (-t406 + t153) * t174;
	t87 = -pkin(3) * t445 + t126;
	t158 = pkin(2) * t477 + 0.8e1 * t254 * t265;
	t336 = t269 * t427;
	t89 = t158 * t218 + 0.4e1 * t217 * t336;
	t33 = t57 * t378 + t184 * t89 + (-0.4e1 * t87 * t461 + (t112 + t302) * t217) * pkin(3) + (0.4e1 * t56 * t447 + (-t104 + t317) * t218) * pkin(2);
	t23 = t122 * t29 + t261 * t33;
	t474 = 0.1e1 / t23 / 0.4e1;
	t345 = t30 * t474;
	t469 = -t261 / 0.4e1;
	t281 = t17 * t345 + t31 * t469;
	t426 = 0.1e1 / pkin(5) / pkin(4) ^ 2;
	t67 = 0.1e1 / t70;
	t348 = t67 * t426;
	t15 = t281 * t348;
	t344 = t31 * t474;
	t468 = t261 / 0.4e1;
	t282 = t17 * t344 + t30 * t468;
	t16 = t282 * t348;
	t361 = pkin(2) * t431;
	t308 = pkin(1) * t361;
	t113 = -0.4e1 * t254 * t217 * t308;
	t127 = t308 * t494;
	t319 = 0.32e2 / 0.3e1 * t252;
	t288 = t183 * t319;
	t289 = 0.64e2 / 0.3e1 * t129 * t269;
	t460 = pkin(1) * t252;
	t300 = t427 * t460;
	t305 = -0.16e2 * pkin(1) * t130 * t254;
	t457 = pkin(3) * t167;
	t310 = -0.4e1 * t142 * t457;
	t338 = t168 * t421;
	t436 = t187 * t265;
	t339 = t151 * t436;
	t165 = pkin(1) * t174;
	t154 = 0.2e1 * t165;
	t429 = t220 * t258;
	t375 = -0.4e1 * t429;
	t301 = t218 * t375;
	t109 = t154 + t301;
	t363 = pkin(2) * t434;
	t306 = pkin(3) * t363;
	t309 = -0.8e1 * t359;
	t39 = 0.1e1 / t261;
	t390 = -0.4e1 * t173;
	t454 = (t109 * t372 + (t165 - t306) * t309 + 0.4e1 * t103 * t306 + (pkin(2) * t84 * t390 - 0.8e1 * t156 * t220 + (t137 * t483 + t358 * t490) * pkin(1)) * t218) * t39;
	t341 = t454 / 0.2e1;
	t357 = pkin(3) * t428;
	t430 = t219 * t254;
	t366 = pkin(1) * t430;
	t379 = 0.8e1 * t439;
	t394 = 0.6e1 * t459;
	t438 = t186 * t266;
	t480 = 0.8e1 * t122;
	t14 = t24 * t341 + (-0.32e2 * t113 * t122 + 0.8e1 * t127 * t261) * t340 + (0.24e2 * (0.4e1 * t101 * t438 * t455 - t339 * t51 + t35 * t429) * t261 + (-0.6e1 * t32 * t429 + 0.12e2 * t339 * t45 - 0.8e1 * t63 * t438) * t480) * t218 + ((t20 + (-0.6e1 * t261 * t36 + t34 * t480) * t151) * t218 + (((t115 * t370 + t117 * t334 + t295) * t353 + t118 * t304 + t74 * t373 - 0.6e1 * t65 * t385 + (t486 * t379 + (t120 * t334 - 0.8e1 * t128 * t424 - 0.8e1 * t368 + t65) * t394) * t151 + t287) * t261 + (0.3e1 * (-pkin(1) * t288 - t184 * t289 + t219 * t305 + t310) * t437 + t300 * t479 - 0.12e2 * t142 * t338 + t366 * t482 - t52 * pkin(3) + (-0.4e1 * (-(2 * t357) - 0.4e1 * t421) * t439 - (pkin(3) * t482 - 0.24e2 * t142 * t366 - 0.24e2 * t338) * t459) * t151) * t217 * t480) * t220) * pkin(2);
	t371 = 0.2e1 * t424;
	t376 = t218 * t490;
	t392 = -0.2e1 * t457;
	t393 = -0.4e1 * pkin(3) * t121;
	t395 = 0.4e1 * t459;
	t400 = t56 * t483;
	t19 = (t127 * t378 + (t57 * t376 + t158 * t184 + ((-t406 + t371) * t378 - t104 + (t162 * t390 + t381) * pkin(1)) * pkin(2)) * t220 + ((t127 + (t162 - 0.2e1 * t424) * t459) * t395 + (-0.24e2 * t436 * t455 + t400) * t218) * t151) * t261 + t33 * t341 + 0.6e1 * (0.4e1 * t105 * t218 * t339 + (t113 + (-0.8e1 / 0.3e1 * t421 + t392) * t363) * t377 + t43 * t301 + t168 * t220 * t184 * t311 + t121 * t113 - t71 * t306 + (-(-0.8e1 * t366 + t393) * t217 * t437 + t44 * t174) * t151) * t122 + t29 * t174;
	t389 = 0.2e1 * t173;
	t456 = pkin(3) * t184;
	t25 = t95 * t341 + t109 * t217 * t389 + ((-t217 * t261 + t62) * t220 + (t219 * t261 + (t150 * t495 + t102) * t217 + (-pkin(3) + 0.2e1 * t456 + t461) * t397) * t218) * pkin(2);
	t398 = -2 * pkin(1) * t258;
	t26 = (t145 + t361) * t261 + t97 * t341 - 0.2e1 * t109 * t456 - (t154 - 0.4e1 * t306) * t134 + t187 * t217 * t398 + t136 * t363 + (pkin(3) * t375 + (-t219 * t85 + 0.2e1 * t462) * pkin(2)) * t218;
	t279 = t282 * t492;
	t473 = -0.1e1 / t23 ^ 2 / 0.4e1;
	t342 = t31 * t473;
	t86 = -pkin(2) * pkin(3) * t111 + t165;
	t452 = (t86 * t279 + (t26 * t468 + t30 * t454 / 0.8e1 + t14 * t344 + (t19 * t342 + t25 * t474) * t17) * t67) * t426 - t15;
	t278 = t281 * t492;
	t343 = t30 * t473;
	t463 = t16 + (t86 * t278 + (t14 * t345 + t25 * t469 - t31 * t454 / 0.8e1 + (t19 * t343 + t26 * t474) * t17) * t67) * t426;
	t466 = (t16 - t463) * t111 + (t15 + t452) * t110;
	t488 = t466 * r_i_i_C(1);
	t475 = pkin(1) * pkin(3);
	t11 = -t110 * t16 + t111 * t15;
	t6 = t463 * t110 + t452 * t111;
	t467 = t11 + t6;
	t152 = pkin(1) * t391;
	t181 = t217 ^ 2;
	t297 = t183 * t336;
	t303 = -0.48e2 * t367;
	t365 = pkin(1) * t424;
	t313 = 0.4e1 * t365;
	t314 = -0.2e1 * t365;
	t315 = -0.4e1 * t365;
	t316 = -0.4e1 * t367;
	t335 = t217 * t430;
	t337 = t168 * t441;
	t346 = -0.144e3 * t437;
	t351 = 0.24e2 * t437;
	t354 = -0.64e2 * t439;
	t356 = -0.32e2 * t442;
	t364 = t122 * t174;
	t369 = pkin(1) * t425;
	t380 = -0.8e1 * t439;
	t382 = -0.2e1 * t441;
	t383 = -0.4e1 * t441;
	t384 = -0.48e2 * t459;
	t453 = t39 * ((0.2e1 * t106 * t430 + t84 * t458) * t217 + (t103 * t173 + t150 * t371) * t174);
	t387 = 0.2e1 * t453;
	t396 = -0.6e1 * t459;
	t420 = -2 * t475;
	t449 = -0.12e2 * t122 * t217 * t367;
	t13 = ((0.12e2 * t181 * t184 * t460 + t114 * t383 + t161 * t314 - 0.4e1 * t369) * t353 + 0.8e1 * t180 * t369 + 0.12e2 * t82 * t441 + 0.6e1 * t77 * t365 + (-t73 * t353 / 0.2e1 + t487) * t173) * t261 + t24 * t387 + (((t116 * t389 + t313 + t383) * t379 + (t119 * t315 - t77 * t173 - 0.4e1 * t297) * t394) * t261 + t354 * t449) * t151 + ((-pkin(1) * t182 * t319 - t183 * t289 + t184 * t305 + t219 * t310) * t351 - 0.64e2 * t182 * t300 - 0.96e2 * t142 * t337 - 0.48e2 * t72 * t365 - 0.8e1 * t52 * t173 + ((-t219 * t357 + t314 + t382) * t354 + (t142 * t315 - t72 * t173 - 0.4e1 * t337) * t384) * t151) * t364 + (0.12e2 * (-(t288 * t174 - 0.8e1 * t64 * t430) * t437 + t168 * t252 * t312 + t80 * t316 + t48 * t430) * t261 + (0.16e2 * (-0.2e1 * t166 * t219 - t149 + t303 + t356) * t440 + (t100 * t303 + t169 * t356 - 0.28e2 * t49 * t430) * t351 - 0.64e2 * t135 * t183 - 0.96e2 * t78 * t367 - 0.48e2 * t47 * t430) * t122 + ((0.8e1 * t34 * t459 + 0.32e2 * t45 * t439) * t122 - t20 + (t36 * t396 + t51 * t380 + (-0.24e2 * t152 + 0.64e2 * t335) * t440) * t261 + ((0.48e2 * t76 * t437 + 0.6e1 * t46) * t261 + (t346 * t53 - 0.8e1 * t42) * t122) * pkin(1)) * pkin(3) + (((-0.8e1 * t123 * t219 + t132 * t420) * t379 + (t174 * t489 + 0.8e1 * t81 * t430 - 0.4e1 * t66 * t475) * t394) * t261 + ((-t219 * t93 + t99 * t420) * t354 + (t180 * t316 - 0.4e1 * t75 * t430 - t58 * t475) * t384) * t122) * t151) * t217;
	t352 = 0.12e2 * t437;
	t18 = (t254 * t181 * t380 + (t176 * t173 + t382) * t378 + 0.4e1 * t297 + t160 * t313 + t112 * t173) * t261 + t33 * t387 + t352 * t449 + ((-0.8e1 / 0.3e1 * t441 + t315 + t219 * t392) * t352 - 0.24e2 * t337 - 0.24e2 * t121 * t365 - 0.6e1 * t71 * t173) * t364 + ((-t122 * t180 - t261 * t174) * t489 + ((0.16e2 * t123 * t437 - 0.2e1 * t89) * t261 + (t346 * t88 - 0.24e2 * t69) * t122 * t254) * t219 + (t220 * t261 * t400 + (t105 * t379 + t44 * t394) * t122 - t29 + ((pkin(2) * t187 * t376 + 0.4e1 * t87) * t261 + (-0.48e2 * t96 * t437 - 0.6e1 * t55) * t122) * pkin(1)) * pkin(3)) * t217 + ((t379 * t173 + ((-(pkin(3) * t160) + 0.4e1 * t145 * t254) * t219 + (-t131 * t455 - t424) * t495) * t395) * t261 + ((t152 - 0.8e1 * t335) * t380 + ((-0.8e1 * t157 * t217 + t393 * t174) * t219 + (-0.4e1 * t94 * t455 - 0.8e1 * t299) * pkin(1)) * t396) * t122) * t151;
	t27 = -t451 + t95 * t387 + pkin(3) * t181 * t481 + t59 * t219 + (-t102 + t309) * t145;
	t28 = t418 * t261 + t97 * t387 + (t150 * t85 + 0.4e1 * t360) * t217 + (t398 * t431 + (t136 * t219 + 0.4e1 * t150 * t456) * pkin(2)) * t218;
	t90 = t97 * pkin(3);
	t465 = t15 + (-t90 * t279 + (t28 * t468 + t30 * t453 / 0.2e1 + t13 * t344 + (t18 * t342 + t27 * t474) * t17) * t67) * t426;
	t464 = -t16 + (-t90 * t278 + (t13 * t345 + t27 * t469 - t31 * t453 / 0.2e1 + (t18 * t343 + t28 * t474) * t17) * t67) * t426;
	t349 = t466 * r_i_i_C(2);
	t2 = -t465 * t110 + t464 * t111;
	t3 = t464 * t110 + t465 * t111;
	t320 = t2 * t218 + t220 * t3;
	t286 = t2 * t220 - t218 * t3;
	t4 = t220 * t6;
	t1 = [t4 * r_i_i_C(1) - t174 + (t11 * r_i_i_C(1) - t349) * t220 + (-t467 * r_i_i_C(2) - t488) * t218, r_i_i_C(1) * t320 + r_i_i_C(2) * t286; t4 * r_i_i_C(2) + (t11 * r_i_i_C(2) + pkin(2) + t488) * t220 + (t467 * r_i_i_C(1) - t349) * t218, -r_i_i_C(1) * t286 + r_i_i_C(2) * t320; 0, 0;];
	Ja_transl = t1;
elseif link_index == 3
	%% Symbolic Calculation
	% From jacobia_transl_3_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-27 10:19:04
	% EndTime: 2020-04-27 10:19:04
	% DurationCPUTime: 0.06s
	% Computational Cost: add. (2->2), mult. (4->4), div. (0->0), fcn. (4->2), ass. (0->3)
	t2 = cos(qJ(2));
	t1 = sin(qJ(2));
	t3 = [0, -r_i_i_C(1) * t1 - r_i_i_C(2) * t2; 0, r_i_i_C(1) * t2 - r_i_i_C(2) * t1; 0, 0;];
	Ja_transl = t3;
elseif link_index == 4
	%% Symbolic Calculation
	% From jacobia_transl_4_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-27 10:19:04
	% EndTime: 2020-04-27 10:19:05
	% DurationCPUTime: 0.61s
	% Computational Cost: add. (3942->115), mult. (8878->204), div. (80->4), fcn. (2290->6), ass. (0->93)
	t44 = sin(qJ(2));
	t102 = -t44 / 0.2e1;
	t95 = t44 / 0.2e1;
	t101 = -4 * pkin(2);
	t45 = sin(qJ(1));
	t81 = t44 * t45;
	t36 = pkin(2) * t81;
	t62 = pkin(3) * t36;
	t35 = -0.2e1 * t62;
	t52 = pkin(3) ^ 2;
	t53 = pkin(2) ^ 2;
	t47 = cos(qJ(1));
	t89 = pkin(2) * t47;
	t37 = pkin(1) - t89;
	t46 = cos(qJ(2));
	t31 = t37 * t46;
	t69 = pkin(3) * t31;
	t73 = pkin(1) * t89;
	t39 = -0.2e1 * t73;
	t54 = pkin(1) ^ 2;
	t76 = t39 + t54;
	t20 = t35 + t52 + t53 + 0.2e1 * t69 + t76;
	t19 = 0.1e1 / t20 ^ 2;
	t100 = 0.2e1 * t19;
	t43 = t47 ^ 2;
	t97 = 0.2e1 * t43;
	t29 = t53 * t97 - t53 + t76;
	t99 = -0.2e1 * t29;
	t98 = 0.2e1 * t37;
	t50 = pkin(4) ^ 2;
	t75 = -pkin(5) ^ 2 + t54;
	t66 = t53 + t75;
	t32 = 0.3e1 * t52 + t50 + t66;
	t22 = t32 + t39 - 0.4e1 * t62;
	t42 = t46 ^ 2;
	t59 = t42 * t99 - t75;
	t79 = t45 * t46;
	t26 = pkin(2) * t79 + t44 * t37;
	t60 = t52 + t66;
	t33 = -t50 + t60;
	t28 = t39 + t33;
	t21 = t35 + t28;
	t40 = (t52 - t54) * t53;
	t92 = -pkin(4) + pkin(5);
	t93 = -pkin(4) - pkin(5);
	t55 = sqrt(0.4e1 * t40 * t43 + 0.4e1 * t33 * t73 - (t54 + (pkin(2) - t93) * (pkin(2) + t93)) * (t54 + (pkin(2) - t92) * (pkin(2) + t92)) + 0.4e1 * (-t21 * t31 + t28 * t36) * pkin(3) + (0.2e1 * t50 - (6 * t53) + 0.2e1 * t59 - t52) * t52);
	t84 = t26 * t55;
	t91 = pkin(1) * (t36 - pkin(3));
	t9 = -t22 * t31 + t84 + (t32 * t81 - 0.2e1 * t47 * t91) * pkin(2) + (-t50 - t52 + (t97 - 0.3e1) * t53 + t59) * pkin(3);
	t96 = -t9 / 0.2e1;
	t94 = t46 / 0.2e1;
	t90 = pkin(2) * t45;
	t88 = pkin(3) * t37;
	t87 = pkin(3) * t42;
	t86 = pkin(3) * t44;
	t85 = pkin(3) * t46;
	t83 = t29 * t46;
	t82 = t42 * t52;
	t80 = t44 * t47;
	t78 = t46 * t47;
	t77 = -t36 + t31;
	t74 = -0.2e1 * pkin(1) * t53;
	t13 = 0.1e1 / t55;
	t72 = 0.2e1 * t13 * ((t21 * t88 + 0.2e1 * t52 * t83) * t44 + (t28 * t85 + t82 * t98) * t90);
	t71 = -0.4e1 * t47 * t53;
	t70 = pkin(3) * t83;
	t68 = pkin(2) * t80;
	t27 = t39 + t50 + t60;
	t16 = t37 * t27 + 0.2e1 * t70;
	t25 = pkin(3) + t77;
	t63 = -0.8e1 * t69;
	t67 = t84 / 0.2e1 - t25 * t72 / 0.2e1 - t16 * t46 / 0.2e1 + ((-t27 + t63) * t90 + t86 * t99) * t102 + t96;
	t17 = t27 * t46 + (0.4e1 * t42 - 0.2e1) * t88;
	t10 = t16 * t44 + t17 * t90 + t25 * t55;
	t65 = t77 * t55 / 0.2e1 + t26 * t72 / 0.2e1 + (t37 * t22 + 0.4e1 * t70) * t95 + (t74 * t78 + (t32 * t46 + 0.4e1 * t37 * t87) * pkin(2)) * t45 / 0.2e1 - t10 / 0.2e1;
	t41 = pkin(1) * t90;
	t38 = 0.2e1 * t41;
	t30 = t45 * t71 + t38;
	t61 = pkin(3) * t68;
	t64 = (-0.4e1 * t30 * t82 + (t41 - t61) * t63 + 0.4e1 * t28 * t61 + (t21 * t85 * t101 - 0.8e1 * t40 * t47 + (0.8e1 * pkin(3) * t53 * t81 + t33 * t101) * pkin(1)) * t45) * t13 / 0.2e1;
	t58 = t10 * t94 + t9 * t95;
	t57 = (t10 * t95 + t46 * t96) * t100;
	t51 = 0.1e1 / pkin(4);
	t24 = t26 * pkin(3);
	t23 = t41 + (t79 - t80) * pkin(3) * pkin(2);
	t18 = 0.1e1 / t20;
	t6 = (pkin(2) * t78 + t36) * t55 + t26 * t64 - 0.2e1 * t30 * t87 - (t38 - 0.4e1 * t61) * t31 + t43 * t44 * t74 + t32 * t68 + (pkin(3) * t71 + (-t22 * t46 + 0.2e1 * t91) * pkin(2)) * t45;
	t5 = t25 * t64 + 0.2e1 * t30 * t44 * t85 + ((-t44 * t55 + t17) * t47 + (t46 * t55 + (pkin(1) * t98 + t27) * t44 + 0.2e1 * (pkin(1) * t46 - pkin(3) + 0.2e1 * t87) * t90) * t45) * pkin(2);
	t4 = ((t5 * t102 + t6 * t94) * t18 + t23 * t57) * t51;
	t3 = ((t5 * t94 + t6 * t95) * t18 - 0.2e1 * t58 * t23 * t19) * t51;
	t2 = (-t58 * t24 * t100 + (-t65 * t44 + t67 * t46) * t18) * t51;
	t1 = (-t24 * t57 + (t67 * t44 + t65 * t46) * t18) * t51;
	t7 = [t4 * r_i_i_C(1) - t3 * r_i_i_C(2), t1 * r_i_i_C(1) + t2 * r_i_i_C(2) - t86; t3 * r_i_i_C(1) + t4 * r_i_i_C(2), -t2 * r_i_i_C(1) + t1 * r_i_i_C(2) + t85; 0, 0;];
	Ja_transl = t7;
end