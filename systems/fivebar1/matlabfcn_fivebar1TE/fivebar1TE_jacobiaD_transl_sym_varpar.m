% Zeitableitung der analytischen Jacobi-Matrix (Translatorisch) für beliebiges Segment von
% fivebar1TE
% 
% analytische Jacobi-Matrix: Differentieller Zusammenhang zwischen
% Endeffektorposition und verallgemeinerten Koordinaten.
% (Ist für translatorischen Teil egal, kennzeichnet nur den Rechenweg der Herleitung)
% 
% Input:
% qJ [2x1]
%   Generalized joint coordinates (joint angles)
% qJD [2x1]
%   Generalized joint velocities
% link_index [1x1 uint8]
%   Index des Segmentes, auf dem der Punkt C liegt (0=Basis).
% r_i_i_C [3x1]
%   Ortsvektor vom KörperKS-Ursprung zum gesuchten Punkt
% pkin [5x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[AB,AE,BC,CD,ED]';
% 
% Output:
% JaD_transl [3x2]
%   Translatorischer Teil der analytischen Jacobi-Matrix (Zeitableitung)

% Quelle: HybrDyn-Toolbox
% Datum: 2020-04-27 10:28
% Revision: 970157063c8b7bcb25458a457551a083b21abdbd (2020-04-26)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function JaD_transl = fivebar1TE_jacobiaD_transl_sym_varpar(qJ, qJD, link_index, r_i_i_C, ...
  pkin)


%% Coder Information
%#codegen
%$cgargs {zeros(2,1),zeros(2,1),uint8(0),zeros(3,1),zeros(5,1)}
assert(isreal(qJ) && all(size(qJ) == [2 1]), ...
  'fivebar1TE_jacobiaD_transl_sym_varpar: qJ has to be [2x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [2 1]), ...
  'fivebar1TE_jacobiaD_transl_sym_varpar: qJD has to be [2x1] (double)');
assert(isa(r_i_i_C,'double') && isreal(r_i_i_C) && all(size(r_i_i_C) == [3 1]), ...
	'fivebar1TE_jacobiaD_transl_sym_varpar: Position vector r_i_i_C has to be [3x1] double');
assert(isa(link_index,'uint8') && all(size(link_index) == [1 1]), ...
	'fivebar1TE_jacobiaD_transl_sym_varpar: link_index has to be [1x1] uint8');
assert(isreal(pkin) && all(size(pkin) == [5 1]), ...
  'fivebar1TE_jacobiaD_transl_sym_varpar: pkin has to be [5x1] (double)');
JaD_transl=NaN(3,2);
if link_index == 0
	%% Symbolic Calculation
	% From jacobiaD_transl_0_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-27 10:19:04
	% EndTime: 2020-04-27 10:19:04
	% DurationCPUTime: 0.01s
	% Computational Cost: add. (0->0), mult. (0->0), div. (0->0), fcn. (0->0), ass. (0->1)
	t1 = [0, 0; 0, 0; 0, 0;];
	JaD_transl = t1;
elseif link_index == 1
	%% Symbolic Calculation
	% From jacobiaD_transl_1_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-27 10:19:04
	% EndTime: 2020-04-27 10:19:04
	% DurationCPUTime: 0.01s
	% Computational Cost: add. (2->2), mult. (8->6), div. (0->0), fcn. (4->2), ass. (0->3)
	t27 = cos(qJ(1));
	t26 = sin(qJ(1));
	t1 = [(-r_i_i_C(1) * t27 + r_i_i_C(2) * t26) * qJD(1), 0; (-r_i_i_C(1) * t26 - r_i_i_C(2) * t27) * qJD(1), 0; 0, 0;];
	JaD_transl = t1;
elseif link_index == 2
	%% Symbolic Calculation
	% From jacobiaD_transl_2_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-27 10:23:42
	% EndTime: 2020-04-27 10:25:46
	% DurationCPUTime: 126.29s
	% Computational Cost: add. (1544862->1396), mult. (4832092->2474), div. (6832->7), fcn. (639554->6), ass. (0->1001)
	t4699 = cos(qJ(1));
	t5463 = -0.4e1 * t4699;
	t4729 = (pkin(5) ^ 2);
	t4728 = t4729 ^ 2;
	t4732 = (pkin(4) ^ 2);
	t4731 = t4732 ^ 2;
	t5204 = t4728 - t4731;
	t5452 = 4 * pkin(3);
	t5174 = 4 * qJD(1);
	t4736 = pkin(3) ^ 2;
	t4740 = (pkin(2) ^ 2);
	t4742 = (pkin(1) ^ 2);
	t5197 = t4742 - t4729;
	t5018 = (t4740 + t5197);
	t4923 = t4736 + t5018;
	t4605 = -t4732 + t4923;
	t5327 = pkin(2) * t4699;
	t5177 = pkin(1) * t5327;
	t4634 = -0.2e1 * t5177;
	t4546 = t4634 + t4605;
	t4696 = sin(qJ(2));
	t4697 = sin(qJ(1));
	t5265 = t4696 * t4697;
	t4624 = pkin(2) * t5265;
	t5004 = pkin(3) * t4624;
	t4607 = -0.2e1 * t5004;
	t4503 = t4607 + t4546;
	t4629 = pkin(1) - t5327;
	t4698 = cos(qJ(2));
	t4603 = t4629 * t4698;
	t5388 = 4 * t4736;
	t4665 = t4740 * t5388;
	t5241 = t4740 * t4742;
	t4635 = t4665 - 4 * t5241;
	t4664 = t4699 ^ 2;
	t4711 = 2 * t4732;
	t4727 = -2 * t4742;
	t4734 = t4736 ^ 2;
	t5007 = t4605 * t5177;
	t5078 = t4546 * t5265;
	t5267 = t4664 * t4740;
	t5163 = 0.2e1 * t5267;
	t5201 = -t4740 + t4742;
	t4554 = t4634 + t5163 + t5201;
	t4661 = t4698 ^ 2;
	t5289 = t4554 * t4661;
	t5375 = -pkin(4) + pkin(5);
	t5376 = -pkin(4) - pkin(5);
	t4399 = t4635 * t4664 + 0.4e1 * t5007 - t4734 - (t4742 + (pkin(2) - t5376) * (pkin(2) + t5376)) * (t4742 + (pkin(2) - t5375) * (pkin(2) + t5375)) + (t4711 + t4727 + (2 * t4729) - (6 * t4740) - 0.4e1 * t5289) * t4736 + (pkin(2) * t5078 - t4503 * t4603) * t5452;
	t4743 = sqrt(t4399);
	t5336 = t4743 / 0.4e1;
	t4741 = t4742 ^ 2;
	t4748 = t4740 ^ 2;
	t5210 = 0.4e1 / 0.7e1 * t4742 - t4729 / 0.7e1;
	t5240 = t4742 * t4729;
	t4599 = t4742 + t4740 / 0.4e1 + t4736 / 0.4e1 - t4729 / 0.8e1;
	t5425 = 0.32e2 / 0.21e2 * t4599;
	t4428 = -t5004 * t5425 + t4748 / 0.7e1 + (0.16e2 / 0.21e2 * t4736 + t5210) * t4740 + t4734 / 0.7e1 + t5210 * t4736 + t4741 - 0.3e1 / 0.7e1 * t5240 + t5204 / 0.42e2;
	t4676 = -t4729 / 0.4e1;
	t4691 = t4736 / 0.3e1;
	t4694 = t4740 / 0.2e1;
	t5211 = t4694 + t4742;
	t4600 = t4676 + t4691 + t5211;
	t4677 = -t4729 / 0.3e1;
	t4679 = -0.2e1 / 0.3e1 * t4729;
	t4690 = 0.4e1 / 0.3e1 * t4736;
	t5338 = 0.4e1 / 0.3e1 * t4740;
	t4431 = -0.8e1 / 0.3e1 * t4600 * t5004 + t4748 / 0.3e1 + (t4690 + t4677) * t4740 + t4741 - t4734 / 0.3e1 + (t5338 + 0.2e1 / 0.3e1 * t4736 + t4679) * t4742 + t5204 / 0.18e2;
	t5202 = t4734 + t4741;
	t4726 = 2 * t4742;
	t5205 = t4726 - t4729;
	t5428 = -t4728 / 0.6e1 + t4731 / 0.6e1;
	t4531 = (t5205 * t4736) + t5202 - t5240 - t5428;
	t4692 = t4736 / 0.2e1;
	t4537 = -0.2e1 / 0.3e1 * t5004 + t4742 + t4692 + t4676;
	t4724 = 4 * t4742;
	t4642 = (t4724 + t4729) * t4736;
	t4654 = -t4736 + t4742;
	t4678 = -t4729 / 0.2e1;
	t5200 = t4740 + t4742;
	t5020 = t4736 + t5200;
	t4612 = t4678 + t5020;
	t4645 = -t4736 / 0.3e1 + t4742;
	t4982 = t4645 * t4624;
	t4909 = pkin(3) * t4982;
	t4848 = t4612 * t4909;
	t4647 = t4742 - 0.2e1 / 0.3e1 * t4740;
	t4659 = t4661 ^ 2;
	t5246 = t4734 * t4659;
	t5055 = t4647 * t5246;
	t5243 = t4736 * t4661;
	t5107 = 0.14e2 * t5243;
	t4660 = t4698 * t4661;
	t4751 = pkin(3) * t4736;
	t5272 = t4660 * t4751;
	t5117 = 0.16e2 * t5272;
	t4650 = pkin(3) * t4698;
	t5181 = 0.6e1 * t4650;
	t5249 = (pkin(1) + pkin(3)) * (pkin(1) - pkin(3));
	t4385 = 0.8e1 * t5055 + t4428 * t5107 - 0.4e1 * t4848 + (t4654 * t4748) + (t4642 - 0.10e2 / 0.3e1 * t4734 + (2 * t4741) - t5240) * t4740 + t4531 * t5249 + (t4431 * t5181 + t4537 * t5117) * pkin(1);
	t4680 = -0.3e1 / 0.2e1 * t4729;
	t4704 = 15 * t4734;
	t4707 = 18 * t4742;
	t4721 = 3 * t4741;
	t5214 = t4728 / 0.2e1 - t4731 / 0.2e1;
	t4926 = -(3 * t5240) + t4721 + t5214;
	t4667 = 0.10e2 / 0.3e1 * t4736;
	t4782 = t4531 + t4748;
	t4485 = (t4667 + t5205) * t4740 + t4782;
	t5413 = -6 * pkin(3);
	t5191 = t4485 * t5413;
	t5101 = pkin(2) * t5191;
	t4958 = t4697 * t5101;
	t4725 = 3 * t4742;
	t5209 = 15 * t4736 + t4725;
	t4653 = t4736 + t4742;
	t4747 = pkin(2) * t4740;
	t4737 = t4747 ^ 2;
	t5220 = t4653 * ((t4680 + t4726) * t4736 - 0.3e1 / 0.2e1 * t5240 + t5202 + t5214) + t4737;
	t4404 = t4696 * t4958 + (t4704 + ((t4707 - 9 * t4729) * t4736) + t4926) * t4740 + (t4680 + t5209) * t4748 + t5220;
	t4716 = 6 * t4736;
	t4957 = -0.4e1 * t5004;
	t4871 = t4612 * t4957;
	t4438 = t4871 + ((t4716 + t5205) * t4740) + t4782;
	t4646 = t4742 - t4740 / 0.3e1;
	t4556 = t4646 * t4607;
	t5248 = (pkin(1) + pkin(2)) * (pkin(1) - pkin(2));
	t4481 = t4612 * t5248 + t4556;
	t4656 = -3 * t4740 + t4742;
	t5145 = pkin(1) * t5272;
	t4986 = t4656 * t5145;
	t4593 = 0.8e1 * t4986;
	t5175 = pkin(1) * t4650;
	t5102 = 0.6e1 * t5175;
	t5108 = 0.12e2 * t5243;
	t4386 = t4438 * t5102 + t4481 * t5108 + t4404 + t4593;
	t5199 = t4741 - t4734;
	t4418 = t4646 * t4871 - t4737 + (-t4667 - t5197) * t4748 + (t4642 + t5199 + t5428) * t4740 + t4531 * t4742;
	t5156 = 0.8e1 * t5246;
	t5239 = t4742 * t4736;
	t4644 = -8 * t4734 + 12 * t5239;
	t5280 = t4644 * t4661;
	t4744 = pkin(1) * t4742;
	t5329 = pkin(1) * t4751;
	t4628 = t4744 * t5452 - 0.12e2 * t5329;
	t5285 = t4628 * t4698;
	t4461 = pkin(1) * t5117 + t5156 + t5202 - (6 * t5239) + t5280 + t5285;
	t5019 = t4736 + t5197;
	t4622 = t4732 + t5019;
	t4649 = -30 * t4729 + 60 * t4742;
	t4662 = t4664 ^ 2;
	t4708 = -2 * t4729;
	t4710 = -6 * t4729;
	t4842 = (6 * t4741) + t5204 - (6 * t5240);
	t4722 = 8 * t4742;
	t4975 = t4751 * t4624;
	t5389 = 4 * t4734;
	t4521 = -0.4e1 * t4975 + t4665 + t5389 + ((t4708 + t4722) * t4736);
	t4833 = -t5004 + t5211;
	t4532 = t4676 - t4736 + t4833;
	t4655 = -3 * t4736 + t4742;
	t4651 = pkin(2) * t4697;
	t5128 = pkin(3) * t5249;
	t5011 = -0.2e1 * t5128;
	t4872 = t5011 * t4651;
	t5166 = 0.8e1 * t5272;
	t5182 = 0.4e1 * t4650;
	t4413 = t4696 * t4872 + t4521 * t4661 + t4612 * t4655 + (t4532 * t5182 + t5166) * pkin(1);
	t4630 = pkin(1) + t4650;
	t4663 = t4699 * t4664;
	t5268 = t4663 * t4747;
	t5075 = t4630 * t5268;
	t4936 = t4413 * t5075;
	t4709 = -5 * t4729;
	t4714 = 7 * t4734;
	t4427 = (t4680 + t4725 + (7 * t4736)) * t4748 + (t4714 + ((t4709 + 10 * t4742) * t4736) + t4926) * t4740 + t5220;
	t5320 = t4427 * pkin(3);
	t4971 = t5265 * t5320;
	t5062 = t4696 * t5248;
	t4892 = t5062 * t4651;
	t5411 = -2 * pkin(3);
	t4486 = t4612 * t4656 + t4892 * t5411;
	t5080 = t4486 * t5272;
	t5106 = 0.24e2 * t5243;
	t5180 = 0.8e1 * t4650;
	t4648 = t4653 ^ 2;
	t5278 = t4648 * (-t4732 + t5019);
	t5282 = t4630 * t4699;
	t5198 = t4741 + t4748;
	t4595 = 16 * (t5198 - 6 * t5241) * t4734;
	t5288 = t4595 * t4659;
	t5315 = 0.8e1 * pkin(2);
	t5380 = 0.24e2 * t4664;
	t4355 = -0.32e2 * t4936 + t5288 + t4418 * t5106 + (t4708 + t4724 + 28 * t4736) * t4737 + t4622 * t5278 + (t4385 * t5380 + (t4649 * t4734) + (t4710 * t4741) + t4716 * t4842 + t4726 * t5204 + 0.4e1 * t4744 ^ 2 + (28 * t4751 ^ 2)) * t4740 + (-t4386 * t5282 - t4971) * t5315 + (t4404 * t5180 + 0.32e2 * t5080) * pkin(1) + (0.16e2 * t4461 * t4662 + (t4649 * t4736) + (70 * t4734) + t4748 + t4842) * t4748;
	t4715 = 5 * t4734;
	t4723 = 6 * t4742;
	t5207 = t4708 - 2 * t4732;
	t5021 = t4723 + t5207;
	t4706 = 10 * t4736;
	t5208 = t4706 + t4726;
	t4689 = -0.2e1 / 0.3e1 * t4732;
	t5212 = t4679 + t4689;
	t4469 = t4748 + (t5208 + t5212) * t4740 + t4715 + (t5021 * t4736) + t4742 * (t4742 + t5212);
	t4719 = 5 * t4748;
	t5022 = t4679 + t4653;
	t4497 = t4719 + ((t4706 + t5021) * t4740) + (t4689 + t5022) * t4653;
	t5321 = pkin(3) * t4696;
	t4419 = t4469 * t4651 - t4497 * t5321;
	t4720 = 3 * t4740;
	t5430 = t4677 - t4732 / 0.3e1;
	t5025 = t4742 + t5430;
	t4924 = t4736 + t5025;
	t4582 = t4720 + t4924;
	t4717 = 3 * t4736;
	t4641 = t4717 + t5200;
	t4583 = t4641 + t5430;
	t4470 = -t4582 * t5321 + t4583 * t4651;
	t4675 = -t4729 / 0.6e1;
	t5213 = t4675 - t4732 / 0.6e1;
	t4598 = t4692 + t4740 + t5213;
	t5444 = 0.2e1 * t4651;
	t4498 = pkin(3) * t5062 + t4598 * t5444;
	t5325 = pkin(2) * t4751;
	t5137 = t4697 * t5325;
	t4976 = t4660 * t5137;
	t5154 = -0.4e1 * t5243;
	t4392 = t4498 * t5154 + (t4470 * t5182 - 0.8e1 * t4976) * pkin(1) + t4419;
	t4668 = -0.20e2 / 0.3e1 * t4736;
	t4684 = 0.2e1 / 0.3e1 * t4732;
	t5028 = 0.2e1 / 0.3e1 * t4729 + t4684 + t4724;
	t5029 = 0.4e1 / 0.3e1 * t4729 + 0.4e1 / 0.3e1 * t4732 + t4727;
	t4493 = -(3 * t4748) + (t4668 + t5029) * t4740 + t5028 * t4736 + t5199;
	t4685 = t4732 / 0.3e1;
	t5027 = t4729 / 0.3e1 + t4685 + t4726;
	t4499 = -0.5e1 / 0.3e1 * t4748 + (-t4736 + t5027) * t4740 + t4742 * t4924;
	t5184 = -0.2e1 * t5321;
	t4423 = t4493 * t4651 + t4499 * t5184;
	t5429 = t4725 - t4729 - t4732;
	t4613 = t5429 * t4706;
	t5206 = t4709 - 5 * t4732;
	t4436 = 0.7e1 * t4737 + ((35 * t4736 + 15 * t4742 + t5206) * t4748) + ((21 * t4734 + t4613 + 9 * t4741 + (t4710 - 6 * t4732) * t4742) * t4740) + t5278;
	t4632 = 0.2e1 * t5175;
	t4538 = 0.4e1 / 0.3e1 * t5243 + t4632 + t4645;
	t5270 = t4662 * t4748;
	t5116 = -0.24e2 * t5270;
	t4879 = t4538 * t5116 + t4436;
	t4426 = t4737 + ((21 * t4736 + t5429) * t4748) + ((t4742 * t5207 + t4613 + t4721 + 35 * t4734) * t4740) + (t4714 + ((t4722 + t5206) * t4736) + t4742 * (-t4732 + t5197)) * t4653;
	t5074 = t4646 * t5246;
	t4880 = -t4426 + 0.24e2 * t5074;
	t5024 = t4678 - t4732 / 0.2e1 + t4742;
	t4574 = 0.3e1 / 0.2e1 * t4740 + t4717 + t5024;
	t5326 = pkin(2) * t4736;
	t4836 = -t4696 * t4751 + t4697 * t5326;
	t4586 = 0.4e1 * t4836;
	t4602 = t4651 + 0.2e1 * t5321;
	t5333 = pkin(1) * t4698;
	t5148 = t4602 * t5333;
	t5314 = 2 * pkin(3);
	t4425 = t4655 * t4651 + t4586 * t4661 + (t4574 * t4696 + t5148) * t5314;
	t4942 = t4425 * t5075;
	t4576 = t4720 + 0.3e1 / 0.2e1 * t4736 + t5024;
	t5123 = t5321 / 0.2e1;
	t4496 = t4576 * t4651 + t4656 * t5123;
	t4970 = t4496 * t5145;
	t5026 = t4742 + t5213;
	t4570 = t5338 + t4692 + t5026;
	t4925 = t4694 + t5026;
	t4571 = t4690 + t4925;
	t4464 = -t4570 * t5321 + t4571 * t4651;
	t4575 = t4736 + t4925;
	t4640 = 2 * t4740 + t4654;
	t5387 = -pkin(3) / 0.2e1;
	t5124 = t4640 * t5387;
	t4484 = t4575 * t4651 + t4696 * t5124;
	t4927 = -0.8e1 / 0.3e1 * t5246 + (t4740 * t4654) - 0.5e1 / 0.3e1 * t4734 + t5027 * t4736 + t4742 * t5025;
	t4855 = pkin(2) * t4927;
	t5245 = t4734 * t4660;
	t5061 = t4696 * t5245;
	t4492 = -t4748 + (t4668 + t5028) * t4740 - (3 * t4734) + t5029 * t4736 + t4741;
	t5120 = t4492 * t5387;
	t5152 = 0.4e1 * t5243;
	t5317 = 0.4e1 * pkin(1);
	t4390 = t4464 * t5152 + t4696 * t5120 + t4697 * t4855 + (t4484 * t4650 - t5061) * t5317;
	t5051 = t4390 * t5267;
	t5155 = -0.6e1 * t5243;
	t5168 = 0.6e1 * t5282;
	t5196 = -0.6e1 * t5333;
	t4363 = 0.16e2 * t4970 + 0.8e1 * t4942 - 0.12e2 * t5051 + t4423 * t5155 + (t4419 * t5196 + t4696 * t4879) * pkin(3) + (t4392 * t5168 + t4697 * t4880) * pkin(2);
	t4585 = t4629 + t4650;
	t4349 = t4355 * t4585 + t4363 * t4743;
	t4510 = -0.4e1 / 0.9e1 * t5004 + t4742 + t4740 / 0.3e1 + t4691 + t4732 / 0.9e1 - t4729 / 0.9e1;
	t4584 = t4677 + t4685 + t5020;
	t5151 = 0.6e1 * t5243;
	t4528 = t4732 / 0.6e1 + t4675 + t4833;
	t5293 = t4528 * t4698;
	t4406 = -0.2e1 * t4909 + t4510 * t5151 + t4584 * t5249 + (pkin(3) * t5293 + t5272) * t5317;
	t5023 = t4679 + t4684 + t4726;
	t5218 = (t4684 + t5022) * t4653 + t4748;
	t4434 = t4584 * t4957 + (t4716 + t5023) * t4740 + t5218;
	t4522 = t4607 + t4584;
	t4636 = t5201 * t5388;
	t5103 = 0.4e1 * t5175;
	t4410 = t4522 * t5103 + t4636 * t4661 + t4434;
	t4476 = t4584 * t5248 + t4556;
	t4989 = t4655 + t5152;
	t4553 = t4632 + t4989;
	t4935 = t4553 * t5075;
	t4482 = (t4667 + t5023) * t4740 + t5218;
	t5082 = t4482 * t5265;
	t5316 = 0.6e1 * pkin(2);
	t5381 = 0.12e2 * t4664;
	t4370 = -0.8e1 * t4935 + t4593 + t4476 * t5108 + t4434 * t5102 + t4737 + ((-t4729 + t4732 + t5209) * t4748) + t4648 * t4622 + (t4406 * t5381 + t4704 + ((t4707 + t4710 + 6 * t4732) * t4736) + t4721 + ((t4708 + t4711) * t4742)) * t4740 + (-pkin(3) * t5082 - t4410 * t5282) * t5316;
	t4587 = 0.2e1 * t4836;
	t4652 = 2 * t4736 + t4740;
	t5277 = t4652 * t4696;
	t4443 = pkin(3) * t5277 + t4587 * t4661 + (t4654 + t4632) * t4651;
	t5242 = t4736 * t4747;
	t4637 = pkin(2) * t5389 + 0.8e1 * t5242;
	t5056 = t4751 * t5248;
	t5443 = 0.4e1 * t4696;
	t4516 = t4637 * t4697 + t5056 * t5443;
	t4564 = t4719 + (t4706 + t4723) * t4740 + t4648;
	t4993 = 0.8e1 * t5075;
	t4900 = t4564 + t4993;
	t4547 = t4740 * t5208 + t4715 + t5198 + 6 * t5239;
	t4918 = -t4547 + 0.8e1 * t5145;
	t4594 = t4641 * t4651;
	t4639 = t4720 + t4653;
	t5281 = t4639 * t4696;
	t4509 = -pkin(3) * t5281 + t4594;
	t5127 = t4509 * t5333;
	t5164 = -0.4e1 * t5267;
	t4601 = t4651 - t5321;
	t5195 = 0.2e1 * t5333;
	t4837 = t4601 * t5195 - t5281;
	t5071 = t4697 * t5243;
	t4980 = pkin(2) * t5071;
	t4435 = pkin(3) * t4837 + t4594 - 0.2e1 * t4980;
	t5400 = 0.4e1 * t4435;
	t4384 = t4443 * t5164 + t4516 * t4661 + (t4696 * t4900 - 0.4e1 * t5127) * pkin(3) + (t4697 * t4918 + t5282 * t5400) * pkin(2);
	t4362 = t4370 * t4585 + t4384 * t4743;
	t4359 = 0.1e1 / t4362;
	t4604 = t4717 + t4732 + t5018;
	t4606 = t4624 - pkin(3);
	t4504 = t4604 + t4634 + t4957;
	t5076 = t4504 * t4603;
	t5390 = -0.2e1 * t4699;
	t5194 = pkin(1) * t5390;
	t5256 = t4698 * t4697;
	t5138 = pkin(2) * t5256;
	t5284 = t4629 * t4696;
	t4530 = t5138 + t5284;
	t5292 = t4530 * t4743;
	t4378 = -t5076 + t5292 + (t4604 * t5265 + t4606 * t5194) * pkin(2) + (-t4622 - t4720 + t5163 - 0.2e1 * t5289) * pkin(3);
	t5362 = t4378 / 0.4e1;
	t5048 = t4359 * t5362;
	t5149 = (0.4e1 * t4661 - 0.2e1) * pkin(3);
	t4545 = t4634 + t4732 + t4923;
	t5290 = t4545 * t4698;
	t4454 = t4629 * t5149 + t5290;
	t4529 = -t4624 + t4603;
	t4523 = pkin(3) + t4529;
	t5132 = t4554 * t4650;
	t4445 = t4545 * t4629 + 0.2e1 * t5132;
	t5299 = t4445 * t4696;
	t4381 = t4454 * t4651 + t4523 * t4743 + t5299;
	t5302 = t4381 * t4743;
	t4807 = t4349 * t5048 - t5302 / 0.4e1;
	t5131 = pkin(3) * t4603;
	t4477 = t4607 + t4634 + t5020 + 0.2e1 * t5131;
	t4471 = 0.1e1 / t4477;
	t5247 = 0.1e1 / pkin(5) / pkin(4) ^ 2;
	t5083 = t4471 * t5247;
	t4339 = t4807 * t5083;
	t5263 = t4696 * t4699;
	t5139 = pkin(2) * t5263;
	t5098 = 0.32e2 / 0.3e1 * t4734;
	t4950 = t4660 * t5098;
	t5287 = t4599 * t4751;
	t4951 = 0.64e2 / 0.3e1 * t5287;
	t5322 = pkin(3) * t4645;
	t5445 = -0.4e1 * t4612;
	t5012 = t5322 * t5445;
	t5254 = t4698 * t4736;
	t5424 = pkin(1) * (0.16e2 * t4600 * t5254 + t4950) + t4661 * t4951 - t5012;
	t4411 = t5424 * t5139;
	t5234 = t4751 * t4661;
	t4978 = t5234 * t5327;
	t4893 = t4696 * t4978;
	t4534 = -0.24e2 * t4646 * t4893;
	t5110 = -0.24e2 * t5254;
	t4999 = pkin(1) * t5110;
	t4416 = t4534 + (t4612 * t4999 + t5191) * t5139;
	t5052 = t4696 * t5254;
	t5379 = pkin(1) * pkin(2);
	t4916 = t5052 * t5379;
	t4569 = t4916 * t5463;
	t5010 = 0.2e1 * t5128;
	t4835 = t5010 + 0.4e1 * t5234;
	t4456 = -t4835 * t5139 + t4569;
	t5121 = -0.64e2 * t4461 * t4748;
	t5250 = t4699 * t4740;
	t5441 = -0.48e2 * t4385;
	t4801 = t4663 * t5121 + t5250 * t5441;
	t5057 = t4734 * t5248;
	t4961 = -0.64e2 * t5057;
	t4965 = -0.32e2 * t5075;
	t5383 = -0.96e2 * t4646;
	t4966 = t4612 * t4751 * t5383;
	t5266 = t4664 * t4747;
	t4968 = 0.96e2 * t4413 * t5266;
	t5111 = -0.48e2 * t5254;
	t5112 = 0.24e2 * t5267;
	t5179 = -0.8e1 * t5320;
	t5283 = t4630 * t4697;
	t5407 = 0.8e1 * t4386;
	t4353 = t4456 * t4965 - t4411 * t5112 + (t4630 * t4968 + t4801) * t4697 + (t5283 * t5407 + (-0.8e1 * t4630 * t4416 + (t4661 * t4966 + t5179 + (t4485 * t5111 + t4660 * t4961) * pkin(1)) * t4696) * t4699) * pkin(2);
	t5150 = 0.8e1 * t5243;
	t4901 = t4598 * t5150 - t4469;
	t4407 = ((t4583 * t5182 - 0.8e1 * t5272) * pkin(1) - t4901) * t5327;
	t5378 = pkin(1) * pkin(3);
	t5319 = -0.4e1 * t5378;
	t5100 = t4575 * t5319;
	t4768 = t4571 * t5154 + t4698 * t5100 - t4927;
	t4408 = t4768 * t5327;
	t5255 = t4698 * t4699;
	t5136 = pkin(2) * t5255;
	t5001 = pkin(3) * t5136;
	t5453 = 0.2e1 * pkin(1);
	t4597 = t5001 * t5453;
	t4490 = t4989 * t5327 + t4597;
	t4790 = -t4425 * t4630 * t5266 + t4390 * t5250;
	t5406 = -0.6e1 * t4392;
	t4995 = t5283 * t5406;
	t5114 = -0.12e2 * t5267;
	t5258 = t4696 * t4748;
	t5129 = pkin(3) * t5258;
	t5170 = 0.24e2 * t4697;
	t4358 = t4490 * t4993 - t4408 * t5114 + (0.4e1 * t4538 * t4663 * t5129 + t4790) * t5170 + (t4995 + (t4493 * t5155 + 0.6e1 * t4630 * t4407 + (-0.6e1 * t4469 * t4650 + t4576 * t5117) * pkin(1) + t4880) * t4699) * pkin(2);
	t5178 = pkin(1) * t4651;
	t4633 = 0.2e1 * t5178;
	t5003 = pkin(3) * t5139;
	t4548 = -0.2e1 * t5003 + t4633;
	t5060 = t4697 * t5250;
	t4992 = -0.4e1 * t5060;
	t4561 = t4633 + t4992;
	t4779 = -0.4e1 * t4503 * t5256 + 0.4e1 * t4546 * t5263;
	t4810 = (-0.4e1 * t4605 * t5379 + t4635 * t5390) * t4697;
	t5261 = t4696 * t4740;
	t4658 = t4697 ^ 2;
	t5395 = 0.8e1 * t4658;
	t4922 = pkin(1) * t5261 * t5395;
	t4395 = t4561 * t5154 + t4810 + (pkin(2) * t4779 - 0.4e1 * t4548 * t4603 + t4922) * pkin(3);
	t4397 = 0.1e1 / t4743;
	t5353 = t4397 / 0.2e1;
	t5038 = t4395 * t5353;
	t4338 = t4353 * t4585 + t4355 * t4651 + t4358 * t4743 + t4363 * t5038;
	t4853 = 0.8e1 / 0.3e1 * t5234 + 0.2e1 * t5322;
	t4453 = -t4853 * t5139 + t4569;
	t5159 = -0.8e1 * t5254;
	t5016 = pkin(1) * t5159;
	t5398 = -0.4e1 * t4584;
	t5189 = pkin(3) * t5398;
	t4468 = (t5016 + t5189) * t5139;
	t4962 = -0.24e2 * t5060;
	t5119 = t4553 * t5170;
	t5399 = -0.6e1 * t4482;
	t5403 = 0.6e1 * t4410;
	t4371 = t4406 * t4962 + t4534 + (t4630 * t4747 * t5119 + 0.12e2 * t4453 * t4740) * t4664 + (t5283 * t5403 + (-0.6e1 * t4630 * t4468 + (pkin(3) * t5399 + t4584 * t4999) * t4696) * t4699) * pkin(2);
	t5153 = 0.2e1 * t5243;
	t5431 = (-t4641 + t5153) * t5327;
	t4480 = t4597 - t5431;
	t4491 = t4597 + (t4654 + t5153) * t5327;
	t5259 = t4696 * t4747;
	t5130 = pkin(3) * t5259;
	t4972 = t4664 * t5130;
	t4904 = -0.24e2 * t4972;
	t5183 = -0.4e1 * t4650;
	t5401 = -0.4e1 * t4435;
	t4379 = t4491 * t5164 + (pkin(2) * t5401 + t4904) * t5283 + (0.8e1 * t4443 * t4697 * t4740 + t4637 * t4661 + (0.4e1 * t4480 * t4630 - t4547 + (t4641 * t5183 + t5166) * pkin(1)) * pkin(2)) * t4699;
	t4350 = t4370 * t4651 + t4371 * t4585 + t4379 * t4743 + t4384 * t5038;
	t4542 = t4624 + t5136;
	t4549 = t4633 - 0.4e1 * t5003;
	t4881 = -t4504 * t4698 + t4606 * t5453;
	t4771 = t4604 * t5263 + t4697 * t4881;
	t5339 = t4530 / 0.2e1;
	t5035 = t4397 * t5339;
	t5067 = t4664 * t5261;
	t5394 = -0.2e1 * t4661;
	t5415 = -0.2e1 * pkin(1);
	t4366 = t4542 * t4743 + t4395 * t5035 - t4549 * t4603 + t5067 * t5415 + (t4561 * t5394 + t4992) * pkin(3) + t4771 * pkin(2);
	t5002 = pkin(3) * t5138;
	t4506 = 0.2e1 * t5002 + t4548;
	t4472 = 0.1e1 / t4477 ^ 2;
	t5355 = t4381 / 0.4e1;
	t5047 = t4359 * t5355;
	t5304 = t4378 * t4743;
	t4808 = t5304 / 0.4e1 + t4349 * t5047;
	t4784 = t4472 * t4808;
	t5361 = t4378 / 0.8e1;
	t5043 = t4397 * t5361;
	t4360 = 0.1e1 / t4362 ^ 2;
	t5357 = -t4381 / 0.4e1;
	t5045 = t4360 * t5357;
	t5008 = t4629 * t5453 + t4545;
	t4852 = t5008 * t4651;
	t4429 = 0.2e1 * t4561 * t4650 + t4852;
	t4505 = (t5149 + t5195) * t4651;
	t4563 = -t5256 + t5263;
	t4541 = t4563 * pkin(2);
	t5340 = t4523 / 0.2e1;
	t5036 = t4397 * t5340;
	t5296 = t4454 * t4699;
	t4364 = -t4541 * t4743 + t4395 * t5036 + t4429 * t4696 + (t4505 * t4697 + t5296) * pkin(2);
	t5367 = t4364 / 0.4e1;
	t5222 = (-t4506 * t4784 + (t4366 * t5336 + t4395 * t5043 + t4338 * t5047 + (t4350 * t5045 + t4359 * t5367) * t4349) * t4471) * t5247 - t4339;
	t5462 = t4339 + t5222;
	t4340 = t4808 * t5083;
	t4783 = t4472 * t4807;
	t5356 = -t4381 / 0.8e1;
	t5040 = t4397 * t5356;
	t5363 = -t4378 / 0.4e1;
	t5046 = t4360 * t5363;
	t5337 = -t4743 / 0.4e1;
	t5366 = t4366 / 0.4e1;
	t5223 = (-t4506 * t4783 + (t4338 * t5048 + t4364 * t5337 + t4395 * t5040 + (t4350 * t5046 + t4359 * t5366) * t4349) * t4471) * t5247 + t4340;
	t5461 = t4340 - t5223;
	t5066 = t4697 * t5266;
	t4939 = t4630 * t5066;
	t4862 = qJD(1) * t4939;
	t5070 = t4663 * t5259;
	t4973 = pkin(3) * t5070;
	t4891 = qJD(2) * t4973;
	t5460 = 0.96e2 * t4862 + 0.32e2 * t4891;
	t5459 = -0.24e2 * t4862 - 0.8e1 * t4891;
	t4851 = t4697 * t4916;
	t4657 = t4696 ^ 2;
	t5244 = t4736 * t4657;
	t5054 = qJD(2) * t5244;
	t5458 = qJD(1) * t4851 + t5054 * t5177;
	t4914 = qJD(2) * t5003;
	t5059 = qJD(1) * t5256;
	t4983 = pkin(2) * t5059;
	t5457 = pkin(1) * t4914 + t4983 * t5378;
	t4911 = qJD(1) * t5004;
	t4912 = qJD(2) * t5001;
	t5456 = 0.6e1 * t4911 - 0.6e1 * t4912;
	t5143 = pkin(2) * t5283;
	t4985 = qJD(1) * t5143;
	t5455 = 0.8e1 * t4985 + 0.8e1 * t4914;
	t5454 = -0.6e1 * t4985 - 0.6e1 * t4914;
	t4856 = t5255 + t5265;
	t5089 = qJD(2) * t5265;
	t4448 = pkin(2) * (qJD(1) * t4856 - t5089) + qJD(2) * t4603;
	t5309 = qJD(1) * t4699;
	t4878 = t5101 * t5309;
	t5086 = qJD(2) * t5256;
	t4609 = pkin(2) * t5086;
	t4913 = pkin(3) * t4609;
	t4415 = -0.6e1 * t4485 * t4913 + t4696 * t4878;
	t5064 = qJD(1) * t5263;
	t4805 = -t5064 - t5086;
	t4789 = pkin(2) * t4805;
	t4777 = 0.4e1 * t4789;
	t4772 = pkin(3) * t4777;
	t4458 = t4612 * t4772;
	t4937 = qJD(2) * t5052;
	t4882 = -0.24e2 * t4937;
	t4514 = pkin(3) * t4789;
	t4773 = 0.2e1 * t4514;
	t4478 = t4646 * t4773;
	t5072 = t4696 * t5234;
	t4987 = pkin(1) * t5072;
	t4565 = -0.24e2 * t4656 * t4987;
	t5221 = qJD(2) * t4565 + t4478 * t5108;
	t5307 = qJD(2) * t4696;
	t5312 = 6 * pkin(3);
	t4377 = t4481 * t4882 + (-t4438 * t5307 + t4458 * t4698) * pkin(1) * t5312 + t5221 + t4415;
	t5451 = 0.8e1 * t4377;
	t4638 = pkin(2) * t5309;
	t4455 = t4469 * t4638;
	t5306 = qJD(2) * t4698;
	t5133 = pkin(3) * t5306;
	t4463 = -t4582 * t5133 + t4583 * t4638;
	t4943 = t5248 * t5306;
	t5015 = 0.2e1 * t4638;
	t4483 = pkin(3) * t4943 + t4598 * t5015;
	t5262 = t4696 * t4736;
	t5161 = 0.8e1 * t5262;
	t5324 = pkin(3) * t4497;
	t4804 = (t4498 * t5161 - t5324) * t4698;
	t5090 = t4661 * t5307;
	t4969 = 0.24e2 * t5090;
	t4382 = t4483 * t5154 + t4455 + qJD(2) * t4804 + ((t4463 * t4698 - t4470 * t5307) * t5452 + (-0.8e1 * t4660 * t5309 + t4697 * t4969) * t5325) * pkin(1);
	t5450 = -0.6e1 * t4382;
	t5449 = -0.8e1 * t4404;
	t5448 = 0.6e1 * t4419;
	t5447 = -0.8e1 * t4425;
	t5142 = pkin(2) * t5282;
	t5442 = 0.6e1 * t5142;
	t5216 = t4657 - t4661;
	t4954 = 0.8e1 * t5216;
	t5440 = 0.12e2 * t4423;
	t5439 = -0.48e2 * t4485;
	t5437 = 16 * t4736;
	t4974 = t4662 * t5129;
	t5436 = -0.24e2 * t4974;
	t5435 = t4359 / 0.2e1;
	t5331 = pkin(1) * t4740;
	t5330 = pkin(1) * t4743;
	t5377 = pkin(2) * pkin(3);
	t4441 = t4805 * t5377 * t5425;
	t4444 = (-0.8e1 / 0.3e1 * t5086 - 0.8e1 / 0.3e1 * t5064) * t4600 * t5377;
	t4507 = (-0.2e1 / 0.3e1 * t5086 - 0.2e1 / 0.3e1 * t5064) * t5377;
	t5109 = -0.32e2 * t5245;
	t5122 = -0.28e2 * t4428 * t4736;
	t4800 = t4647 * t5109 + t4698 * t5122;
	t5105 = -0.48e2 * t5234;
	t5192 = t4431 * t5413;
	t4834 = t4537 * t5105 + t5192;
	t4610 = pkin(2) * t5064;
	t4910 = pkin(3) * t4610;
	t4849 = t4645 * t4910;
	t4908 = t4645 * t5002;
	t4373 = t4849 * t5445 + t4441 * t5107 + (t4444 * t5181 + t4507 * t5117) * pkin(1) + (t4908 * t5445 + (pkin(1) * t4834 + t4800) * t4696) * qJD(2);
	t4495 = t4514 * t5103;
	t4513 = t4751 * t4777;
	t4590 = -0.2e1 * t4910;
	t5412 = -4 * pkin(3);
	t5190 = t4532 * t5412;
	t5391 = -0.2e1 * t4698;
	t4770 = (t4521 * t5391 + (t5190 - 0.24e2 * t5234) * pkin(1)) * t4696;
	t4393 = t4590 * t5249 + t4513 * t4661 + t4495 + (t4698 * t4872 + t4770) * qJD(2);
	t4433 = t4646 * t4458;
	t5000 = pkin(1) * t5105;
	t4450 = (t4644 * t5391 - t4628 + t5000 + t5109) * t4696;
	t4437 = qJD(2) * t4450;
	t4474 = t4773 * t5248;
	t4821 = t4418 * t5111 - 0.4e1 * t4595 * t4660;
	t4959 = t5179 * t5327;
	t4967 = -0.96e2 * t4486 * t5234;
	t5084 = t4413 * t5268;
	t5115 = 0.16e2 * t5270;
	t4344 = t4373 * t5112 + t4433 * t5106 + t4437 * t5115 + (-0.8e1 * t4377 * t5327 - 0.32e2 * t4393 * t5268) * t4630 + (t4415 * t5180 + 0.32e2 * t4474 * t5272) * pkin(1) + (t4696 * t4959 + ((pkin(2) * t5407 + t4968) * t4630 + t4801) * t4697) * qJD(1) + (-0.8e1 * t4427 * t5002 + (pkin(1) * t4967 + 0.8e1 * (-pkin(1) * t4404 + t4386 * t5327 + 0.4e1 * t5084) * pkin(3) + t4821) * t4696) * qJD(2);
	t4457 = -t4570 * t5133 + t4571 * t4638;
	t4475 = t4575 * t4638 + t5124 * t5306;
	t4899 = t5098 * t4651;
	t5185 = -0.4e1 * t5321;
	t5009 = t4484 * t5185;
	t5276 = t4657 * t4661;
	t4376 = t4475 * t5103 + t4457 * t5152 + t4855 * t5309 + (t4698 * t5120 + (t4464 * t5159 + t4660 * t4899) * t4696 + (t5009 + (-0.4e1 * t4659 + 0.12e2 * t5276) * t4734) * pkin(1)) * qJD(2);
	t5251 = t4698 * t4751;
	t5085 = qJD(2) * t5251;
	t5135 = t4699 * t5326;
	t4792 = qJD(1) * t5135 - t5085;
	t4558 = 0.4e1 * t4792;
	t4568 = t4638 + 0.2e1 * t5133;
	t5264 = t4696 * t4698;
	t5088 = qJD(2) * t5264;
	t4998 = -0.2e1 * t5088;
	t4401 = t4655 * t4638 + t4586 * t4998 + t4558 * t4661 + (0.2e1 * t4574 * t5306 + (t4568 * t4698 - t4602 * t5307) * t5453) * pkin(3);
	t4417 = -t4497 * t5133 + t4455;
	t4421 = t4493 * t4638 - 0.2e1 * t4499 * t5133;
	t4479 = t4576 * t4638 + t4656 * t5133 / 0.2e1;
	t5176 = pkin(1) * t5321;
	t4631 = -0.2e1 * t5176;
	t4618 = qJD(2) * t4631;
	t4928 = -0.8e1 / 0.3e1 * t5052;
	t4533 = qJD(2) * t4928 + t4618;
	t4780 = pkin(1) * t5448 + t5268 * t5447 + t5327 * t5406;
	t4823 = t4879 * t4698;
	t4884 = t4697 * t5245 * t5383;
	t5269 = t4663 * t4697;
	t5384 = 96 * qJD(1);
	t4347 = t4401 * t4993 + t4376 * t5114 + (-0.6e1 * t4421 * t4661 + t5088 * t5440) * t4736 + t4790 * qJD(1) * t5170 + (0.16e2 * t4479 * t4660 - 0.48e2 * t4496 * t5090) * t5329 + (t4884 * t5307 + t4382 * t5168 + (t4699 * t4880 + t4995) * qJD(1)) * pkin(2) + (t4417 * t5196 + (t4538 * t5269 * t5384 - 0.24e2 * t4533 * t4662) * t5258 + (t4696 * t4780 + t4823) * qJD(2)) * pkin(3);
	t5134 = pkin(3) * t5307;
	t5310 = qJD(1) * t4697;
	t5144 = pkin(2) * t5310;
	t4566 = -t5134 + t5144;
	t4941 = t4554 * t5088;
	t4997 = 0.4e1 * t5086;
	t5094 = t4503 * t5307;
	t5173 = 0.4e1 * t4629;
	t4620 = qJD(1) * t4633;
	t4945 = qJD(1) * t5060;
	t4902 = -0.4e1 * t4945;
	t4536 = t4620 + t4902;
	t5291 = t4536 * t4661;
	t4515 = -0.2e1 * t4913 + t4590;
	t4487 = t4620 + t4515;
	t5295 = t4487 * t4698;
	t4380 = (0.8e1 * t4941 - 0.4e1 * t5291) * t4736 + qJD(1) * t4810 + (qJD(1) * t4922 + (t5094 - t5295) * t5173 + (qJD(1) * t4779 + t4546 * t4997) * pkin(2)) * pkin(3);
	t5042 = t4380 * t5353;
	t4336 = t4344 * t4585 + t4347 * t4743 + t4355 * t4566 + t4363 * t5042;
	t4508 = (-0.4e1 / 0.9e1 * t5086 - 0.4e1 / 0.9e1 * t5064) * t5377;
	t4767 = (-0.12e2 * t4510 * t5254 + (t4528 * t5412 - 0.12e2 * t5234) * pkin(1)) * t4696;
	t4391 = -0.2e1 * t4849 + t4508 * t5151 + t4495 + (t4767 - 0.2e1 * t4908) * qJD(2);
	t4442 = (t4910 + t4913) * t5398;
	t4400 = t4636 * t4998 + (t4515 * t4698 - t4522 * t5307) * pkin(1) * t5452 + t4442;
	t4535 = t4618 - 0.8e1 * t4937;
	t5165 = 0.8e1 * t5268;
	t4996 = t4553 * t5165;
	t5417 = -0.6e1 * pkin(1);
	t4838 = t4434 * t5417 + t4996;
	t5081 = t4482 * t5256;
	t5193 = 0.6e1 * t5327;
	t5257 = t4697 * t4699;
	t5311 = qJD(1) * t4664;
	t5386 = -24 * qJD(1);
	t5393 = -0.8e1 * t4663;
	t4354 = t4476 * t4882 + (t4406 * t5257 * t5386 + t4391 * t5381) * t4740 + ((t4535 * t5393 + t5119 * t5311) * t4747 + (-t4400 * t4699 + t4410 * t5310) * t5316) * t4630 + (t4610 * t5399 + 0.6e1 * t4442 * t5333 + (-0.6e1 * pkin(2) * t5081 + (t4410 * t5193 + t4838) * t4696) * qJD(2)) * pkin(3) + t5221;
	t4567 = t4638 - t5133;
	t4573 = t4641 * t4638;
	t5092 = t4639 * t5306;
	t5286 = t4601 * t4696;
	t4409 = t4573 + (t4696 * t4997 + t5309 * t5394) * t5326 + (-t5092 + (-qJD(2) * t5286 + t4567 * t4698) * t5453) * pkin(3);
	t4559 = 0.2e1 * t4792;
	t5058 = qJD(1) * t5255;
	t4776 = (t5058 - t5089) * t5314;
	t5392 = -0.2e1 * t4696;
	t4412 = t4559 * t4661 + ((pkin(3) * t4652) + t4587 * t5392) * t5306 + (pkin(1) * t4776 + t4654 * t5309) * pkin(2);
	t4500 = -pkin(3) * t5092 + t4573;
	t4502 = t4637 * t5309 + 0.4e1 * t4751 * t4943;
	t5073 = t4657 * t5242;
	t5300 = t4435 * t4699;
	t4766 = (t4900 * t4698 + (pkin(1) * t4509 - pkin(2) * t5300) * t5443) * pkin(3) + t5073 * t5393;
	t5013 = 0.4e1 * t5142;
	t5099 = -0.24e2 * t5178;
	t5157 = 0.8e1 * t5250;
	t4365 = -0.4e1 * t4500 * t5175 + t4409 * t5013 + t4412 * t5164 + t4502 * t4661 + ((t4443 * t5157 + t4630 * t4904) * t4697 + (t4699 * t4918 + t5283 * t5401) * pkin(2)) * qJD(1) + ((t4516 * t5391 + t5099 * t5234) * t4696 + t4766) * qJD(2);
	t5039 = t4384 * t5353;
	t4341 = t4354 * t4585 + t4365 * t4743 + t4370 * t4566 + t4380 * t5039;
	t4524 = t4610 + t4609;
	t4793 = -qJD(2) * t5284 + t4983;
	t4447 = t4793 - t4524;
	t4387 = t4447 * t4743;
	t4414 = (t4536 * t4698 - t4554 * t5307) * t5314 + qJD(1) * t4852;
	t4465 = (-t4545 - 0.8e1 * t5131) * t4696;
	t4422 = qJD(1) * t4505 + qJD(2) * t4465;
	t5298 = t4445 * t4698;
	t4356 = t4387 + t4380 * t5036 + t4414 * t4696 + qJD(2) * t5298 + (qJD(1) * t5296 + t4422 * t4697) * pkin(2);
	t4488 = t4620 + t4772;
	t4824 = -t4488 * t4698 + t4504 * t5307;
	t5297 = t4448 * t4743;
	t4357 = t5297 + t4380 * t5035 + t4824 * t4629 + (t4902 + 0.4e1 * t4941 - 0.2e1 * t5291) * pkin(3) + (qJD(1) * t4771 + t4524 * t5194 + t4604 * t5086) * pkin(2);
	t4430 = t4793 * t5314 + t4487;
	t5368 = t4359 / 0.4e1;
	t4324 = (-t4430 * t4783 + (t4336 * t5048 + t4356 * t5337 + t4380 * t5040 + (t4341 * t5046 + t4357 * t5368) * t4349) * t4471) * t5247;
	t4325 = (-t4430 * t4784 + (t4357 * t5336 + t4380 * t5043 + t4336 * t5047 + (t4341 * t5045 + t4356 * t5368) * t4349) * t4471) * t5247;
	t5087 = qJD(2) * t5263;
	t4806 = t5059 + t5087;
	t4466 = -t4805 - t4806;
	t5065 = qJD(1) * t5265;
	t4467 = qJD(2) * t4856 - t5058 - t5065;
	t4940 = t4561 * t5088;
	t4946 = t4697 * t5064;
	t5215 = t4658 - t4664;
	t4955 = 0.2e1 * t5215;
	t4621 = pkin(1) * t5015;
	t5030 = -0.2e1 * t4912 + 0.2e1 * t4911 + t4621;
	t5171 = 0.4e1 * t4698;
	t4832 = t5215 * t4740 * t5174;
	t4517 = t4621 + t4832;
	t5294 = t4517 * t4661;
	t4372 = (0.8e1 * t4940 - 0.4e1 * t5294) * t4736 + (t4635 * t4955 - 0.4e1 * t5007) * qJD(1) + ((t4548 * t5307 - t4698 * t5030) * t5173 + (t5306 * t5395 + 0.24e2 * t4946) * t5331 + ((-qJD(1) * t4503 + qJD(2) * t4546) * t4699 * t5171 + (0.4e1 * t5094 - 0.4e1 * t5295 + (-t4546 * t4696 - t4548 * t4698) * t5174) * t4697) * pkin(2)) * pkin(3);
	t4788 = pkin(3) * (-qJD(2) * t5255 + t5065);
	t4803 = pkin(1) * t4892 * t5245;
	t5279 = t4646 * t4661;
	t4841 = t4975 * t5279;
	t4811 = qJD(1) * t4841;
	t4944 = t4657 * t5085;
	t5141 = t4646 * t5327;
	t4813 = t4944 * t5141;
	t5069 = t4748 * t5269;
	t4905 = 0.96e2 * pkin(3) * t5069;
	t4843 = t4696 * t4905;
	t4850 = t5057 * t5177;
	t4861 = t4699 * t4937;
	t5097 = qJD(1) * t5282;
	t4863 = t4658 * t4747 * t5097;
	t4870 = t4971 * t5315;
	t4886 = 0.24e2 * t4945;
	t4887 = -0.48e2 * t4945;
	t4889 = t4538 * t4974;
	t4894 = t5074 * t4651;
	t4915 = qJD(2) * t5004;
	t4919 = t4698 * t5012;
	t5303 = t4380 * t4397 / t4399;
	t5041 = -t5303 / 0.4e1;
	t4932 = t4395 * t5041;
	t4948 = qJD(1) * t5071;
	t4949 = t4658 * t4748 * t5311;
	t4963 = -0.64e2 * t5069;
	t4984 = pkin(2) * t5097;
	t5014 = -0.8e1 * t5142;
	t4979 = t4661 * t5135;
	t4917 = pkin(1) * t4979;
	t5426 = -qJD(2) * t4917 + t5458;
	t5032 = 0.4e1 * t5426;
	t5118 = -0.24e2 * t5272;
	t4907 = pkin(2) * t4646 * t5118;
	t4845 = t4699 * t4907;
	t5033 = qJD(2) * t4845 + 0.24e2 * t4811 + 0.48e2 * t4813;
	t5044 = t4363 * t5353;
	t5091 = qJD(2) * t5276;
	t5095 = qJD(1) * t5267;
	t5273 = t4658 * t4740;
	t5096 = qJD(1) * t5273;
	t5126 = t4740 * t5282;
	t5167 = -0.4e1 * t5272;
	t5217 = 0.2e1 * t5457;
	t5235 = t4751 * t4657;
	t5275 = t4657 * t4698;
	t5305 = qJD(2) * t4699;
	t5335 = pkin(1) * qJD(2);
	t5385 = 24 * qJD(1);
	t4883 = t4660 * t4966;
	t4888 = t4697 * t4972;
	t5418 = -0.8e1 * t4386 * t5004 - 0.96e2 * t4413 * t4888 - 0.64e2 * t4659 * t4850 + t4698 * t4959 + t4883 * t5327 + t4917 * t5439;
	t4947 = t4696 * t5059;
	t5423 = pkin(1) * t4736 * (t5216 * t5305 + t4947);
	t5427 = t4538 * t4698 * t4905 + 0.24e2 * t4425 * t4888 - 0.96e2 * t5061 * t5141;
	t5432 = t4806 * t5452;
	t5433 = t4751 * (0.8e1 * t4660 * t5310 + t4699 * t4969);
	t4331 = (t5143 * t5450 - 0.48e2 * t4576 * t4893 * t5335 - 0.288e3 * t4538 * t4949 * t5321 - 0.24e2 * t4401 * t4939 + t4533 * t4843 - t5217 * t4993 - 0.24e2 * t4390 * t5096 + t4984 * t5406 + 0.48e2 * t4425 * t4863 + t4889 * t5384 + t5051 * t5385 + 0.24e2 * t4376 * t5060 + 0.6e1 * t4392 * t4915 + t4426 * t5144 + 0.6e1 * (0.16e2 * t4598 * t4861 + t4901 * t5310 + (-t4583 * t5432 + t5433) * pkin(1)) * t5126 - t4408 * t4886 + 0.6e1 * t5457 * t4469 + (t4942 + t4894) * t5386 + t5459 * t4490 + t5454 * t4407 + ((-t4989 * t5310 - 0.8e1 * t4861) * t4993 + ((t4571 * t5159 + t4950 + t5100) * t5087 + t4768 * t5310) * t5114 + (0.12e2 * t4861 + 0.6e1 * t4948) * t4493) * pkin(2)) * t4743 + t4358 * t5042 + t4347 * t5038 + t4363 * t4932 + t4372 * t5044 + (t5143 * t5451 + 0.192e3 * t4850 * t5091 + 0.96e2 * t4393 * t4939 + 0.192e3 * t4612 * t4813 + 0.48e2 * t4385 * t5096 + ((t4835 * t5065 + (t5167 + (t5011 + 0.8e1 * t5235) * t4698) * t5305) * pkin(2) + t5032) * t4965 + ((0.6e1 * t4485 * t4788 + 0.24e2 * t4612 * t5423) * pkin(2) + t5033) * t5014 + t4984 * t5407 + t5095 * t5441 + t4437 * t4963 + (t5424 * t5065 + (t4919 + (0.128e3 / 0.3e1 * t5275 - 0.64e2 / 0.3e1 * t4660) * t5287 + ((-0.32e2 / 0.3e1 * t4659 + 0.32e2 * t5276) * t4734 + t5216 * t4600 * t5437) * pkin(1)) * t5305) * pkin(2) * t5112 - 0.192e3 * t4413 * t4863 + t4936 * t5384 - 0.48e2 * t4373 * t5060 + 0.96e2 * t4612 * t4811 - t4411 * t4887 + 0.192e3 * t4461 * t4949 + 0.48e2 * t5458 * t4485 + t5460 * t4456 + t5455 * t4416) * t4585 + t4353 * t4566 + t4344 * t4651 + t4355 * t4638 + (-0.16e2 * t4576 * t4976 * t5330 + (t4662 * t5121 + 0.64e2 * t4803 + t4870) * t4585) * qJD(1) + (t4585 * t5418 + t5427 * t4743) * qJD(2);
	t4885 = -0.24e2 * t4553 * t5066;
	t5034 = -0.8e1 / 0.3e1 * t5272;
	t5063 = t4696 * t5255;
	t5113 = 0.12e2 * t5267;
	t5160 = 0.8e1 * t5257;
	t5187 = -0.2e1 * t5322;
	t5271 = t4661 * t4697;
	t5404 = -0.4e1 * t4409;
	t5405 = 0.6e1 * t4400;
	t4333 = ((t4412 * t5160 + 0.4e1 * t4664 * t5217) * t4740 + (-0.2e1 * t4637 * t5063 + 0.24e2 * (-t4630 * t4650 + t5244) * t5066) * qJD(2) + (-t4637 * t5271 + (0.48e2 * t4658 * t4699 - 0.24e2 * t4663) * t4630 * t5130 + (-0.8e1 * t4443 * t5215 + t4491 * t5160) * t4740) * qJD(1) + ((-t4654 * t5310 - 0.4e1 * t4861 - 0.2e1 * t4948) * t5164 + t4547 * t5310 + 0.4e1 * (t4435 * t4697 - t4480 * t4699) * t5134 + (t4641 * t5432 - t5433) * pkin(1) + (t5217 * t5463 + t4697 * t5404 + 0.16e2 * t4664 * pkin(2) * t4937 + (-t5300 + (-t4480 + t5431) * t4697) * t5174) * t4630) * pkin(2)) * t4743 + t4379 * t5042 + t4365 * t5038 + t4384 * t4932 + t4372 * t5039 + (t5033 + t4935 * t5385 + ((t4853 * t5065 + (t5034 + (0.16e2 / 0.3e1 * t5235 + t5187) * t4698) * t5305) * pkin(2) + t5032) * t5113 + 0.24e2 * t4535 * t4939 - 0.48e2 * t5126 * t5423 - 0.24e2 * t4453 * t4945 + t4984 * t5403 + t4391 * t4962 - 0.48e2 * t4553 * t4863 + t4885 * t5134 + t5143 * t5405 - 0.6e1 * t4410 * t4915 + t5456 * t4482 + 0.6e1 * (t4985 + t4914) * t4468) * t4585 + t4371 * t4566 + t4354 * t4651 + t4370 * t4638 + 0.24e2 * ((-t4788 * t5126 + t5426) * t4584 + (t5096 - t5095) * t4406) * t4585;
	t4929 = t4530 * t5041;
	t5260 = t4696 * t4743;
	t5345 = t4448 / 0.2e1;
	t5359 = t4380 / 0.2e1;
	t4342 = t4524 * t4743 + t4395 * t4929 + (t4549 * t5307 - t4621 * t4698) * t4629 + (-0.2e1 * t4664 * t5306 + 0.4e1 * t4946) * t5331 + (t4372 * t5339 + t4395 * t5345 + t4542 * t5359) * t4397 + (t4832 + 0.4e1 * t4940 - 0.2e1 * t5294) * pkin(3) + ((t4881 * qJD(1) + (-t5260 + (t4604 + 0.4e1 * t5131) * t4698) * qJD(2)) * t4699 + (t4524 * t5453 + (-t4604 * t4696 + (t4629 * t5185 - t4549 - t4743) * t4698) * qJD(1) + t4824) * t4697) * pkin(2);
	t4930 = t4523 * t5041;
	t4988 = pkin(1) * t5096;
	t5172 = 0.2e1 * t4696;
	t5253 = t4698 * t4743;
	t5346 = t4447 / 0.2e1;
	t4343 = t4395 * t4930 + (t4517 * t4650 - t4561 * t5134 + 0.2e1 * t4988) * t5172 + t4429 * t5306 + (t4372 * t5340 + t4395 * t5346 - t4541 * t5359) * t4397 + (t4699 * t4422 + (-t4699 * t5253 + (-t4743 + (t5415 - 0.8e1 * t4650) * t4651) * t5265) * qJD(2) + ((-t4454 + t5260) * t4697 + (t5253 + t5008 * t4696 + t4505 + (t4661 * t5314 - pkin(3) + t5333) * t5444) * t4699) * qJD(1)) * pkin(2);
	t5049 = t4349 * t5435;
	t5301 = t4430 * t4471 * t4472;
	t4775 = (t4381 * t5049 + t5304 / 0.2e1) * t5301;
	t5343 = t4506 / 0.4e1;
	t5349 = t4430 / 0.4e1;
	t4794 = t4360 * (t4341 * t5343 + t4350 * t5349);
	t5373 = -t4341 / 0.4e1;
	t5374 = -t4336 / 0.4e1;
	t4796 = t4360 * (t4338 * t5373 + t4350 * t5374);
	t5344 = -t4506 / 0.4e1;
	t5350 = -t4430 / 0.4e1;
	t4799 = t4359 * (t4336 * t5344 + t4338 * t5350);
	t4829 = t4357 * t5344 + t4366 * t5350;
	t4830 = t4356 * t5343 + t4364 * t5349;
	t4952 = t5303 / 0.16e2;
	t4865 = t4395 * t4952;
	t5050 = t4341 * t4360 * t5435;
	t4933 = t4381 * t5050;
	t4432 = pkin(2) * t4776 + t5030;
	t5348 = -t4432 / 0.4e1;
	t5354 = t4395 / 0.8e1;
	t5358 = t4380 / 0.8e1;
	t5371 = t4356 / 0.4e1;
	t5372 = -t4356 / 0.4e1;
	t5420 = t4432 * t5336 + (t4430 * t5354 + t4506 * t5358) * t4397;
	t5228 = (t4506 * t4775 + (t4829 * t4743 + t4381 * t4799 - t5420 * t4378 + (t4381 * t4794 + (t4381 * t5348 - t4830) * t4359) * t4349) * t4472 + (t4342 * t5336 - t4378 * t4865 + t4381 * t4796 + (t4357 * t5354 + t4366 * t5358 + t4372 * t5361) * t4397 + (t4331 * t5355 + t4336 * t5367 + t4338 * t5371) * t4359 + (t4350 * t4933 + t4343 * t5368 + (t4333 * t5357 + t4350 * t5372 + t4364 * t5373) * t4360) * t4349) * t4471) * t5247 - t4324;
	t4774 = (t4378 * t5049 - t5302 / 0.2e1) * t5301;
	t4934 = t4378 * t5050;
	t5360 = -t4380 / 0.8e1;
	t5369 = t4357 / 0.4e1;
	t5370 = -t4357 / 0.4e1;
	t5229 = (t4506 * t4774 + (t4830 * t4743 + t4378 * t4799 + t5420 * t4381 + (t4378 * t4794 + (t4378 * t5348 + t4829) * t4359) * t4349) * t4472 + (t4343 * t5337 + t4381 * t4865 + t4378 * t4796 + (t4372 * t5356 - t4356 * t4395 / 0.8e1 + t4364 * t5360) * t4397 + (t4331 * t5362 + t4336 * t5366 + t4338 * t5369) * t4359 + (t4350 * t4934 + t4342 * t5368 + (t4333 * t5363 + t4350 * t5370 + t4366 * t5373) * t4360) * t4349) * t4471) * t5247 + t4325;
	t5233 = (-t4325 + t5229) * t4563 + (t4324 + t5228) * t4856 - t5461 * t4467 + t5462 * t4466;
	t5434 = r_i_i_C(1) * t5233;
	t4440 = 0.2e1 * t4448 * pkin(3);
	t4518 = t4530 * t5314;
	t5158 = 0.8e1 * t5254;
	t5188 = t4629 * t5452;
	t4402 = (t4503 * t5188 + t4554 * t5158) * t4696 + (t4546 * t5182 + t4629 * t5150) * t4651;
	t5352 = -t4402 / 0.8e1;
	t5421 = -t4440 * t5336 - (t4430 * t5352 - t4518 * t5360) * t4397;
	t5226 = t5462 * t4563 + t5461 * t4856;
	t5227 = -t5461 * t4563 + t5462 * t4856;
	t5419 = r_i_i_C(1) * t5226 + r_i_i_C(2) * t5227;
	t5416 = -0.4e1 * pkin(1);
	t5409 = -0.12e2 * pkin(1);
	t5408 = -0.4e1 * qJD(2);
	t4420 = (t4636 * t5392 + t4651 * t5189) * t4698 + (t4522 * t5185 - 0.8e1 * t4980) * pkin(1);
	t5402 = 0.6e1 * t4420;
	t5397 = -0.6e1 * t4585;
	t5396 = -0.2e1 * t4657;
	t5382 = -0.24e2 * t4661;
	t4367 = pkin(3) * t4554 * t5396 + t4402 * t5036 + t4465 * t4651 - t5292 + t5298;
	t5365 = t4367 / 0.4e1;
	t5146 = pkin(1) * t5250;
	t4368 = t4529 * t4743 + t4402 * t5035 + (t4504 * t4629 + 0.4e1 * t5132) * t4696 + (t5146 * t5391 + (t4604 * t4698 + t4661 * t5188) * pkin(2)) * t4697;
	t5364 = t4368 / 0.4e1;
	t5351 = t4402 / 0.2e1;
	t5347 = t4440 / 0.4e1;
	t5342 = t4518 / 0.4e1;
	t5341 = -t4518 / 0.4e1;
	t5334 = pkin(1) * t4630;
	t5323 = pkin(3) * t4574;
	t5274 = t4657 * t4734;
	t5252 = t4698 * t4747;
	t5236 = t4751 * t4570;
	t4313 = -t4466 * t5223 + t4467 * t5222 + t4563 * t5228 - t4856 * t5229;
	t4318 = t4324 * t4563 + t4325 * t4856 + t4339 * t4467 + t4340 * t4466;
	t5232 = t4313 + t4318;
	t4769 = pkin(2) * (-t4660 * t4951 + t4919);
	t4778 = pkin(2) * (-0.16e2 * t4600 * t5243 - t4659 * t5098);
	t4383 = t4800 * t4696 + t4697 * t4769 + (t4696 * t4834 + t4697 * t4778) * pkin(1);
	t4964 = -0.24e2 * t5071;
	t5186 = -0.6e1 * t5321;
	t5219 = t4697 * t4907 + t4565;
	t4388 = (-0.24e2 * t4481 * t5262 + t4958) * t4698 + (pkin(2) * t4612 * t4964 + t4438 * t5186) * pkin(1) + t5219;
	t4596 = t4980 * t5416;
	t4791 = pkin(2) * (t4698 * t5011 + t5167);
	t4405 = t4697 * t4791 + t4596 + t4770;
	t4351 = t4405 * t4965 + t4383 * t5112 + t4450 * t5115 + (0.32e2 * pkin(3) * t5084 + (pkin(3) * t5449 + t4967) * pkin(1) + t4821) * t4696 + (0.8e1 * (t4386 * t5321 - t4388 * t4630) * t4699 + (t4883 + t4698 * t5179 + (t4659 * t4961 + t5243 * t5439) * pkin(1)) * t4697) * pkin(2);
	t5169 = -0.8e1 * t4464 * t4736;
	t4389 = (t4696 * t5169 + t5120) * t4698 + (t4696 * t4899 - 0.4e1 * t5236) * t4660 + (t5009 - 0.4e1 * t5246 + (-(2 * t4640 * t4736) + 0.12e2 * t5274) * t4661) * pkin(1);
	t4938 = t4660 * t5056;
	t4394 = -0.4e1 * t4938 + t4804 + (t4470 * t5185 + (-0.4e1 * t4582 * t4736 + 0.24e2 * t4975) * t4661) * pkin(1);
	t4424 = t5167 + 0.2e1 * (-t4586 * t4696 + t5323) * t4698 + (t4602 * t5184 + t5152) * pkin(1);
	t4550 = t4928 + t4631;
	t4352 = t4389 * t5114 + 0.12e2 * t4499 * t5272 + (t4394 * t5193 + t4424 * t5165) * t4630 + pkin(3) * t4823 + (t4497 * t5151 + t4656 * t5156) * pkin(1) + (pkin(2) * t4884 + t4496 * t5000 + t5254 * t5440 + (t4550 * t5116 + t4780) * pkin(3)) * t4696;
	t4787 = qJD(1) * t4661 * (t4629 * t5327 + t5273);
	t4895 = t4624 * t4603;
	t5079 = t4536 * t5264;
	t4375 = (0.8e1 * t5079 + 0.8e1 * t4787 + (-t4554 * t4954 - 0.16e2 * t4895) * qJD(2)) * t4736 + (0.8e1 * t4698 * t4988 + (t4487 * t4696 + t4503 * t5306) * t5173 + (t5078 * t5408 + (t4503 * t5265 + t4546 * t5255) * t5174) * pkin(2)) * pkin(3);
	t5005 = pkin(1) * t5133;
	t4619 = -0.2e1 * t5005;
	t4812 = qJD(2) * t4841;
	t4819 = qJD(2) * t4851;
	t4898 = pkin(1) * t4944;
	t4860 = qJD(1) * t4845 - 0.24e2 * qJD(2) * t4986 - 0.24e2 * t4478 * t5052 + 0.48e2 * t4656 * t4898 + 0.72e2 * t4812;
	t5006 = pkin(1) * t5138;
	t4953 = 0.48e2 * t5006;
	t4866 = t4696 * t4953;
	t5068 = t4663 * t5252;
	t4890 = pkin(3) * qJD(2) * t5068;
	t4896 = qJD(1) * t4978;
	t4897 = qJD(1) * t4979;
	t4906 = t5116 * t4650;
	t4931 = t4402 * t5041;
	t4956 = 0.2e1 * t5216;
	t4977 = t4736 * t4624;
	t5140 = t4657 * t4651;
	t4981 = t4734 * t5140;
	t5031 = -0.4e1 * t4514 * t5176 + t4897 * t5416 + 0.8e1 * t4819;
	t5037 = t4397 * t5351;
	t5053 = qJD(2) * t5243;
	t5104 = 0.12e2 * t5234;
	t5162 = -0.2e1 * t5264;
	t4328 = (t4890 * t5447 + t5005 * t5448 + t5003 * t5450 + t4619 * t5436 + t5053 * t5440 - 0.32e2 * t4656 * t5061 * t5335 - 0.48e2 * t4479 * t4987 + 0.6e1 * t4417 * t5176 + (-t4558 * t4698 - t4568 * t5378) * t5172 * t4993 + t4497 * t4937 * t5409 - 0.12e2 * t4423 * t5054 + 0.96e2 * t4496 * t4898 + 0.12e2 * t4421 * t5052 - 0.8e1 * t4401 * t4973 - t4436 * t5134 + t4389 * t4886 + t4533 * t4906 + ((t4457 * t5159 + t4475 * t5319 + t4638 * t4950) * t5114 + (t4483 * t5158 + (t4463 * t5412 + 0.24e2 * t4896) * pkin(1)) * t5442) * t4696 + t5459 * t4424 + t5454 * t4394 + t5456 * t4392) * t4743 + t4352 * t5042 + t4347 * t5037 + t4363 * t4931 + t4375 * t5044 + ((-0.28e2 * t4441 * t5052 + t4769 * t5309 + ((t4444 * t5413 + t4507 * t5105) * t4696 + t4778 * t5309) * pkin(1)) * t5112 - 0.96e2 * t5080 * t5335 + t5003 * t5451 + 0.32e2 * t4413 * t4890 + 0.12e2 * t4595 * t5091 - 0.96e2 * t4474 * t4987 + 0.96e2 * t4485 * t4819 + (t4513 * t5162 + t4791 * t5309 + t5031) * t4965 + t5005 * t5449 - 0.8e1 * t4415 * t5176 + (t4698 * t4878 + (t4458 * t5186 - 0.24e2 * t4612 * t4897) * pkin(1) + t4860) * t5014 + 0.288e3 * t4612 * t4812 + t5288 * t5408 + t4912 * t5407 + 0.192e3 * t4486 * t4898 - 0.48e2 * t4433 * t5052 + 0.32e2 * t4393 * t4973 + t4383 * t4887 + 0.48e2 * (-t5053 + t5054) * t4418 + t5460 * t4405 + t5455 * t4388) * t4585 + t4351 * t4566 - t4344 * t5321 - t4355 * t5133 + (((t5148 * t5411 + t4586 * t4956 + (t5016 + t5104 - 0.2e1 * t5323) * t4696) * t4993 + ((0.12e2 * t4661 * t5056 + t5324) * t4696 - t4736 * t4498 * t4954 + (0.24e2 * t4976 + (t4470 * t5412 + t4582 * t5161 - 0.48e2 * t4657 * t5137) * t4698) * pkin(1)) * t5442 + (t4659 * t4899 + 0.8e1 * t4464 * t5244 + t4492 * t5123 + (0.12e2 * t4696 * t5236 - 0.32e2 * t4981 + t5169) * t4661 + (0.40e2 * t5061 + (-pkin(3) * t4484 + t4640 * t5262 - 0.6e1 * t4696 * t5274) * t5171) * pkin(1)) * t5114 + 0.24e2 * t4889 - 0.36e2 * t4499 * t5072 - 0.48e2 * t4970 + 0.288e3 * t4981 * t5279 + t4550 * t4906 + (0.8e1 / 0.3e1 * t4657 - 0.8e1 / 0.3e1 * t4661) * t4736 * t5436 - 0.96e2 * t4894) * t4743 + ((0.4e1 * t4848 + 0.28e2 * t4428 * t5244 - 0.32e2 * t5055 + (0.64e2 * t4599 * t4975 + 0.96e2 * t4647 * t5274 + t5122) * t4661 + ((-0.48e2 * t4537 * t4751 + 0.128e3 / 0.3e1 * t4624 * t4734) * t4660 + (0.96e2 * t4537 * t5235 + 0.32e2 * t4600 * t4977 + t5192) * t4698) * pkin(1)) * t5112 + (-0.48e2 * t5145 - t5285 - 0.2e1 * t5280 - 0.32e2 * t5246 + (0.96e2 * pkin(1) * t5251 + 0.96e2 * t4661 * t4734 + (2 * t4644)) * t4657) * t5115 + t4870 + (t4521 * t4956 + (t5010 + t5104) * t4624 + (t5118 + (t5190 + 0.48e2 * t5235) * t4698) * pkin(1)) * t4965 + ((-t4438 * t5333 + t4485 * t4624) * t5312 + (0.24e2 * t4481 * t5216 + t4612 * t4866) * t4736) * t5014 + 0.256e3 * t4803) * t4585) * qJD(2) + ((t4550 * t4843 + t5427) * t4743 + (t4450 * t4963 + t5418) * t4585) * qJD(1);
	t4822 = t4698 * t5187 + t5034;
	t4403 = t4651 * t4822 + t4596 + t4767;
	t4560 = t4631 - 0.8e1 * t5052;
	t4994 = -0.8e1 * t5075;
	t4369 = t4560 * t4994 + t4403 * t5113 + (pkin(3) * t4838 + t4476 * t5110) * t4696 + (pkin(1) * t4584 * t4964 - 0.6e1 * t4420 * t5282 + (t4410 * t5263 - t5081) * t5312) * pkin(2) + t5219;
	t4439 = (-(pkin(3) * t4639) + 0.4e1 * t4977) * t4698 + (-pkin(3) * t5286 - t5243) * t5453;
	t4960 = t4624 * t5415;
	t4446 = t4587 * t5162 - 0.2e1 * t5272 + (t4652 * t4698 + t4960) * pkin(3);
	t4374 = t4439 * t5013 + 0.4e1 * t4938 + t4446 * t5164 + t4516 * t5162 + ((t4639 * t5388) - 0.24e2 * t4975) * t4661 * pkin(1) + t4766;
	t5077 = t4585 * t5267;
	t5125 = pkin(1) * t5243;
	t5147 = pkin(1) * t5264;
	t4332 = t4384 * t4931 + (t4619 * t4994 + t5031 * t5113 + t4860) * t4585 + t4369 * t4566 + (t4374 * t5359 + t4365 * t5351 + t4384 * t4375 / 0.2e1) * t4397 + ((t4822 * t5163 + t5125 * t5398 - t4482 * t4650 - (t4584 * t5183 - 0.8e1 * t5125) * t5142) * t4699 * t4585 * t5316 + ((t4446 * t5157 + t5073 * t5380) * t4743 - 0.24e2 * t4403 * t4585 * t5250 + ((-0.24e2 * pkin(3) * t4664 * t5252 - 0.4e1 * pkin(2) * t4439) * t4743 + (pkin(2) * t5402 + 0.24e2 * t4560 * t5266) * t4585) * t4630) * t4697) * qJD(1) + (-0.24e2 * t4896 * t5330 + ((t4630 * t5095 * t5437 + 0.8e1 * t4559 * t5267 - 0.2e1 * t4502) * t4743 - 0.144e3 * t4508 * t4736 * t5077) * t4698 + (0.4e1 * t4500 * t5330 + (qJD(1) * t4885 + t4442 * t5417 + t4535 * t5165) * t4585 - t4354 + ((t4410 * t5397 + t4743 * t5400) * t5310 + ((0.8e1 * pkin(1) * t5095 - 0.8e1 * t4567 * t5334 + t5404) * t4743 + (0.24e2 * t4515 * t5334 + t5405) * t4585) * t4699) * pkin(2)) * pkin(3)) * t4696 + (((t4657 * t4953 + t4660 * t5099 - 0.12e2 * t4661 * t5062 + t5067 * t5382) * t4743 + 0.12e2 * (0.24e2 * pkin(1) * t5275 + 0.8e1 * t4624 * t4661 + t4660 * t5409) * t5077) * t4751 + ((-0.24e2 * t4696 * t5068 + 0.4e1 * (pkin(2) * t5271 - t5140 + t5147) * t5013 - 0.8e1 * t4639 * t5147) * t4743 + (-0.96e2 * t5063 * t5283 * t5331 + t4994 * t4954 + t4584 * t4866 + 0.12e2 * t5216 * t5113 * t4510 + (t5382 + 0.24e2 * t4657) * t4476) * t4585) * t4736 + (((-0.2e1 * t5006 - t5277) * t5164 + 0.4e1 * t5127 + (t4994 - t4564) * t4696) * t4743 + (t4698 * t4996 + 0.8e1 * t4560 * t5070 + t5082 * t5316 + t4434 * t5196 + (t5293 * t5416 + 0.2e1 * t4982) * t5113) * t4585 - t4370 * t4698 + (0.4e1 * (-t4698 * t4435 - t4696 * t4439 - t4630 * t4837) * t4743 + (t4698 * t5403 + t4696 * t5402 + 0.24e2 * (t4522 * t5333 - t4584 * t4624) * t4630) * t4585) * t5327) * pkin(3) + ((t4587 * t5164 + t4516) * t4743 + t4636 * t5142 * t5397) * t4956) * qJD(2);
	t4337 = t4351 * t4585 + t4352 * t4743 - t4355 * t5321 + t4363 * t5037;
	t4345 = -t5297 + t4402 * t4930 + t4414 * t4698 - qJD(2) * t5299 + t4465 * t4638 + (qJD(1) * t4960 - qJD(2) * t5290) * t4651 + (-t4530 * t4380 / 0.2e1 + t4402 * t5346 + t4375 * t5340) * t4397 + (t4536 * t5396 - 0.4e1 * t4941 + t4697 * (qJD(2) * t4629 * t5216 - pkin(2) * t4947) * t5315) * pkin(3);
	t4346 = t4387 + t4402 * t4929 + t4488 * t5284 + (t4375 * t5339 + t4402 * t5345 + t4529 * t5359) * t4397 + (t5076 + (-pkin(2) * t4604 + 0.2e1 * t5146) * t5265) * qJD(2) + (t4504 * t4624 + (t4604 * t5327 + t4955 * t5331) * t4698) * qJD(1) + (t4787 + t5079 + (-t4554 * t5216 - 0.2e1 * t4895) * qJD(2)) * t5452;
	t4348 = t4369 * t4585 - t4370 * t5321 + t4374 * t4743 + t4384 * t5037;
	t4795 = t4360 * (t4341 * t5341 + t4348 * t5349);
	t4797 = t4360 * (t4337 * t5373 + t4348 * t5374);
	t4798 = t4359 * (t4336 * t5342 + t4337 * t5350);
	t4827 = t4357 * t5342 + t4368 * t5350;
	t4828 = t4356 * t5341 + t4367 * t5349;
	t4864 = t4402 * t4952;
	t5231 = (-t4518 * t4774 + (t4828 * t4743 + t4378 * t4798 + t5421 * t4381 + (t4378 * t4795 + (t4378 * t5347 + t4827) * t4359) * t4349) * t4472 + (t4381 * t4864 + t4345 * t5337 + t4378 * t4797 + (t4356 * t5352 + t4367 * t5360 + t4375 * t5356) * t4397 + (t4328 * t5362 + t4336 * t5364 + t4337 * t5369) * t4359 + (t4346 * t5368 + t4348 * t4934 + (t4332 * t5363 + t4348 * t5370 + t4368 * t5373) * t4360) * t4349) * t4471) * t5247 - t4325;
	t5230 = (-t4518 * t4775 + (t4827 * t4743 + t4381 * t4798 - t5421 * t4378 + (t4381 * t4795 + (t4381 * t5347 - t4828) * t4359) * t4349) * t4472 + (-t4378 * t4864 + t4346 * t5336 + t4381 * t4797 + (t4357 * t4402 / 0.8e1 + t4375 * t5361 + t4368 * t5358) * t4397 + (t4328 * t5355 + t4336 * t5365 + t4337 * t5371) * t4359 + (t4345 * t5368 + t4348 * t4933 + (t4332 * t5357 + t4348 * t5372 + t4367 * t5373) * t4360) * t4349) * t4471) * t5247 + t4324;
	t5225 = (t4518 * t4783 + (t4337 * t5048 + t4367 * t5337 + t4402 * t5040 + (t4348 * t5046 + t4359 * t5364) * t4349) * t4471) * t5247 - t4340;
	t5224 = (t4518 * t4784 + (t4368 * t5336 + t4402 * t5043 + t4337 * t5047 + (t4348 * t5045 + t4359 * t5365) * t4349) * t4471) * t5247 + t4339;
	t5017 = t5233 * r_i_i_C(2);
	t4309 = t4466 * t5224 + t4467 * t5225 + t4563 * t5231 + t4856 * t5230;
	t4310 = -t4466 * t5225 + t4467 * t5224 + t4563 * t5230 - t4856 * t5231;
	t4991 = t4309 * t4697 + t4699 * t4310;
	t4859 = t4309 * t4699 - t4310 * t4697;
	t4320 = t4563 * t5225 + t4856 * t5224;
	t4321 = t4563 * t5224 - t4856 * t5225;
	t4858 = t4320 * t4699 - t4321 * t4697;
	t4857 = t4320 * t4697 + t4321 * t4699;
	t4802 = r_i_i_C(1) * t5227 - r_i_i_C(2) * t5226;
	t4311 = t4699 * t4313;
	t1 = [t4311 * r_i_i_C(1) - t4638 + (t4318 * r_i_i_C(1) + t5017) * t4699 + (-r_i_i_C(2) * t5232 + t5434) * t4697 + (-t4697 * t5419 + t4802 * t4699) * qJD(1), t4991 * r_i_i_C(1) + t4859 * r_i_i_C(2) + (r_i_i_C(1) * t4858 - r_i_i_C(2) * t4857) * qJD(1); t4311 * r_i_i_C(2) + (t4318 * r_i_i_C(2) - t5434) * t4699 + (r_i_i_C(1) * t5232 + t5017) * t4697 + (t5419 * t4699 + (-pkin(2) + t4802) * t4697) * qJD(1), -t4859 * r_i_i_C(1) + t4991 * r_i_i_C(2) + (r_i_i_C(1) * t4857 + r_i_i_C(2) * t4858) * qJD(1); 0, 0;];
	JaD_transl = t1;
elseif link_index == 3
	%% Symbolic Calculation
	% From jacobiaD_transl_3_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-27 10:19:04
	% EndTime: 2020-04-27 10:19:04
	% DurationCPUTime: 0.01s
	% Computational Cost: add. (2->2), mult. (8->6), div. (0->0), fcn. (4->2), ass. (0->3)
	t27 = cos(qJ(2));
	t26 = sin(qJ(2));
	t1 = [0, (-r_i_i_C(1) * t27 + r_i_i_C(2) * t26) * qJD(2); 0, (-r_i_i_C(1) * t26 - r_i_i_C(2) * t27) * qJD(2); 0, 0;];
	JaD_transl = t1;
elseif link_index == 4
	%% Symbolic Calculation
	% From jacobiaD_transl_4_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-27 10:19:19
	% EndTime: 2020-04-27 10:19:24
	% DurationCPUTime: 3.38s
	% Computational Cost: add. (21002->278), mult. (52820->507), div. (272->5), fcn. (13806->6), ass. (0->223)
	t1037 = (pkin(3) ^ 2);
	t1190 = 8 * t1037;
	t1029 = sin(qJ(1));
	t1030 = cos(qJ(2));
	t1126 = t1029 * t1030;
	t1088 = qJD(2) * t1126;
	t1028 = sin(qJ(2));
	t1031 = cos(qJ(1));
	t1128 = t1028 * t1031;
	t1189 = qJD(1) * t1128 + t1088;
	t1188 = 2 * pkin(3);
	t1187 = 4 * pkin(3);
	t1035 = (pkin(4) ^ 2);
	t1038 = pkin(2) ^ 2;
	t1039 = pkin(1) ^ 2;
	t1119 = -pkin(5) ^ 2 + t1039;
	t1082 = (t1038 + t1119);
	t1069 = t1037 + t1082;
	t1009 = -t1035 + t1069;
	t1149 = pkin(1) * t1031;
	t1118 = -0.2e1 * t1149;
	t1021 = pkin(2) * t1118;
	t1001 = t1021 + t1009;
	t1186 = -0.4e1 * t1001;
	t1185 = pkin(3) / 0.2e1;
	t1146 = pkin(2) * t1031;
	t1019 = pkin(1) - t1146;
	t1007 = t1019 * t1030;
	t1130 = t1028 * t1029;
	t1016 = pkin(2) * t1130;
	t1027 = t1031 ^ 2;
	t1121 = t1021 + t1039;
	t1131 = t1027 * t1038;
	t1004 = -t1038 + t1121 + 0.2e1 * t1131;
	t1026 = t1030 ^ 2;
	t1170 = -0.2e1 * t1026;
	t1063 = t1004 * t1170 - t1119;
	t1112 = t1009 * t1149;
	t1166 = -pkin(4) + pkin(5);
	t1167 = -pkin(4) - pkin(5);
	t1022 = (t1037 - t1039) * t1038;
	t1172 = 0.4e1 * t1022;
	t1079 = pkin(3) * t1016;
	t1011 = -0.2e1 * t1079;
	t987 = t1011 + t1001;
	t968 = t1027 * t1172 + 0.4e1 * pkin(2) * t1112 - (t1039 + (pkin(2) - t1167) * (pkin(2) + t1167)) * (t1039 + (pkin(2) - t1166) * (pkin(2) + t1166)) + (t1001 * t1016 - t1007 * t987) * t1187 + ((2 * t1035) - 0.6e1 * t1038 + 0.2e1 * t1063 - t1037) * t1037;
	t1040 = sqrt(t968);
	t966 = 0.1e1 / t1040;
	t1184 = t966 / 0.2e1;
	t1154 = qJD(2) / 0.2e1;
	t1183 = t1030 / 0.2e1;
	t1049 = 0.4e1 * t1001 * t1128 - 0.4e1 * t1126 * t987;
	t1054 = (-0.4e1 * pkin(1) * pkin(2) * t1009 - 0.8e1 * t1022 * t1031) * t1029;
	t1025 = t1029 ^ 2;
	t1133 = t1025 * t1038;
	t1111 = pkin(1) * t1133;
	t1073 = qJD(1) * t1111;
	t1068 = 0.8e1 * t1073;
	t1139 = qJD(2) * t1028;
	t1089 = t1004 * t1139;
	t1070 = t1030 * t1089;
	t1174 = 0.4e1 * qJD(2);
	t1116 = t987 * t1174;
	t1147 = pkin(2) * t1029;
	t1109 = qJD(1) * t1147;
	t1017 = pkin(1) * t1109;
	t1014 = 0.2e1 * t1017;
	t1123 = t1031 * t1038;
	t1083 = t1029 * t1123;
	t1076 = -0.4e1 * t1083;
	t1065 = qJD(1) * t1076;
	t997 = t1014 + t1065;
	t1143 = t1026 * t997;
	t1169 = -0.8e1 * t1030;
	t1168 = pkin(2) * pkin(3);
	t1048 = t1189 * t1168;
	t985 = t1017 - t1048;
	t961 = (0.8e1 * t1070 - 0.4e1 * t1143) * t1037 + qJD(1) * t1054 + (t1028 * t1068 + (t1028 * t1116 + t1169 * t985) * t1019 + (qJD(1) * t1049 + 0.4e1 * t1001 * t1088) * pkin(2)) * pkin(3);
	t1144 = t961 * t966 / t968;
	t1132 = t1026 * t1037;
	t1136 = t1004 * t1030;
	t1145 = pkin(3) * t1030;
	t1173 = 0.2e1 * t1019;
	t969 = (pkin(3) * t1019 * t987 + 0.2e1 * t1037 * t1136) * t1028 + (t1001 * t1145 + t1132 * t1173) * t1147;
	t1182 = -t969 * t1144 / 0.2e1;
	t1060 = t1126 - t1128;
	t1134 = t1019 * t1028;
	t1086 = qJD(2) * t1134;
	t973 = t1017 + (-t1086 + (qJD(1) * t1060 - t1088) * pkin(2)) * pkin(3);
	t1103 = pkin(3) * t1007;
	t984 = t1011 + t1037 + t1038 + 0.2e1 * t1103 + t1121;
	t981 = 0.1e1 / t984;
	t982 = 0.1e1 / t984 ^ 2;
	t1101 = 0.4e1 * t973 * t981 * t982;
	t1008 = 3 * t1037 + t1035 + t1082;
	t1010 = t1016 - pkin(3);
	t988 = t1008 + t1021 - 0.4e1 * t1079;
	t1094 = t988 * t1007;
	t1107 = pkin(2) * t1126;
	t996 = t1107 + t1134;
	t1141 = t996 * t1040;
	t960 = -t1094 + t1141 + (t1008 * t1130 + t1010 * t1118) * pkin(2) + (-t1035 - t1037 + (0.2e1 * t1027 - 0.3e1) * t1038 + t1063) * pkin(3);
	t1000 = t1021 + t1035 + t1069;
	t1104 = pkin(3) * t1136;
	t976 = t1000 * t1019 + 0.2e1 * t1104;
	t1113 = (0.4e1 * t1026 - 0.2e1) * pkin(3);
	t1137 = t1000 * t1030;
	t979 = t1019 * t1113 + t1137;
	t995 = -t1016 + t1007;
	t993 = pkin(3) + t995;
	t962 = t976 * t1028 + t1040 * t993 + t1147 * t979;
	t1181 = (t1028 * t960 + t1030 * t962) * t1101;
	t1159 = t973 / 0.2e1;
	t992 = t996 * pkin(3);
	t1067 = -t1154 * t992 + t1159;
	t1157 = t992 / 0.2e1;
	t1091 = qJD(1) * t1130;
	t1075 = pkin(2) * t1091;
	t1006 = pkin(3) * t1075;
	t1084 = qJD(2) * t1130;
	t1085 = qJD(2) * t1007;
	t1125 = t1030 * t1031;
	t1090 = qJD(1) * t1125;
	t1158 = t1006 / 0.2e1 - (-t1085 + (t1084 - t1090) * pkin(2)) * pkin(3) / 0.2e1;
	t1160 = -t973 / 0.2e1;
	t1156 = t993 / 0.2e1;
	t1100 = t966 * t1156;
	t1138 = qJD(2) * t1030;
	t1140 = qJD(1) * t1031;
	t994 = t1189 * pkin(2);
	t977 = qJD(1) * t1107 - t1086 - t994;
	t963 = t977 * t1040;
	t1080 = pkin(1) * t1173 + t1000;
	t1058 = t1080 * t1147;
	t970 = (t1030 * t997 - t1089) * t1188 + qJD(1) * t1058;
	t1150 = pkin(1) * t1030;
	t980 = (-t1000 - 0.8e1 * t1103) * t1028;
	t971 = qJD(2) * t980 + (t1113 + 0.2e1 * t1150) * t1109;
	t952 = t963 + t961 * t1100 + t970 * t1028 + t976 * t1138 + (t1029 * t971 + t1140 * t979) * pkin(2);
	t1176 = 0.2e1 * t969;
	t1117 = t966 * t1176;
	t1024 = t1028 ^ 2;
	t1171 = -0.2e1 * t1024;
	t956 = pkin(3) * t1004 * t1171 + t976 * t1030 + t1117 * t993 + t1147 * t980 - t1141;
	t1180 = t1067 * t960 - t1157 * t952 - t1158 * t962 - t1160 * t956;
	t1162 = -t962 / 0.2e1;
	t1164 = -t960 / 0.2e1;
	t1177 = 0.2e1 * pkin(1);
	t1064 = t1010 * t1177 - t1030 * t988;
	t1047 = t1008 * t1128 + t1029 * t1064;
	t986 = t1014 - 0.4e1 * t1048;
	t1056 = -t986 * t1030 + t1139 * t988;
	t1155 = t996 / 0.2e1;
	t1099 = t966 * t1155;
	t1059 = t1125 + t1130;
	t978 = t1085 + (qJD(1) * t1059 - t1084) * pkin(2);
	t1142 = t978 * t1040;
	t953 = t1142 + t961 * t1099 + t1056 * t1019 + (t1065 + 0.4e1 * t1070 - 0.2e1 * t1143) * pkin(3) + (qJD(1) * t1047 + t1008 * t1088 + t1118 * t994) * pkin(2);
	t1165 = t953 / 0.2e1;
	t1023 = pkin(1) * t1147;
	t1020 = 0.2e1 * t1023;
	t1078 = t1128 * t1168;
	t1003 = t1020 - 0.4e1 * t1078;
	t1005 = t1020 + t1076;
	t1151 = pkin(1) * t1028;
	t1081 = 0.8e1 * t1111;
	t1114 = -0.4e1 * t1132;
	t1002 = t1023 - t1078;
	t1115 = t1002 * t1169;
	t964 = t1005 * t1114 + t1054 + (pkin(2) * t1049 + t1019 * t1115 + t1028 * t1081) * pkin(3);
	t999 = pkin(2) * t1125 + t1016;
	t955 = t999 * t1040 + t964 * t1099 - t1003 * t1007 - 0.2e1 * t1131 * t1151 + (t1005 * t1170 + t1076) * pkin(3) + t1047 * pkin(2);
	t1108 = pkin(2) * t1140;
	t1018 = pkin(1) * t1108;
	t1122 = t1006 + t1018;
	t974 = (-qJD(2) * t1059 + t1090) * t1168 + t1122;
	t998 = t1060 * pkin(2);
	t990 = pkin(3) * t998 + t1023;
	t1179 = (qJD(2) * t1162 + t1165) * t990 - t1160 * t955 - t1164 * t974;
	t1074 = t1030 * t1016;
	t1129 = t1028 * t1030;
	t1178 = qJD(1) * t1026 * (t1019 * t1146 + t1133) + t997 * t1129 + (-0.2e1 * t1019 * t1074 + t1004 * (-t1024 + t1026)) * qJD(2);
	t1175 = 0.2e1 * t982;
	t1163 = t961 / 0.2e1;
	t1161 = t964 / 0.2e1;
	t1153 = -t1028 / 0.2e1;
	t1152 = -t1030 / 0.2e1;
	t1148 = pkin(1) * t1038;
	t1135 = t1019 * t1026;
	t1127 = t1028 * t1040;
	t1124 = t1030 * t1040;
	t1120 = t1025 - t1027;
	t1110 = pkin(1) * t1123;
	t1106 = pkin(3) * t1139;
	t1105 = pkin(3) * t1138;
	t1071 = 0.2e1 * t1120;
	t1050 = 0.4e1 * t1001 * t1125 + 0.4e1 * t1130 * t987;
	t959 = t1178 * t1190 + (t1030 * t1068 + (0.8e1 * t1028 * t985 + t1030 * t1116) * t1019 + (qJD(1) * t1050 + t1084 * t1186) * pkin(2)) * pkin(3);
	t1098 = t963 / 0.2e1 + t996 * t1182 + t986 * t1134 / 0.2e1 + (t1155 * t959 + t1163 * t995 + t1176 * t978) * t1184 + (t1094 + (-pkin(2) * t1008 + 0.2e1 * t1110) * t1130) * t1154 + (t988 * t1016 + (t1008 * t1146 + t1071 * t1148) * t1030) * qJD(1) / 0.2e1 + 0.4e1 * t1178 * t1185 - t952 / 0.2e1;
	t1097 = t1165 - t1142 / 0.2e1 + t993 * t1182 + t970 * t1183 - t976 * t1139 / 0.2e1 + t980 * t1108 / 0.2e1 + (-0.2e1 * pkin(1) * t1075 - qJD(2) * t1137) * t1147 / 0.2e1 + (-t996 * t961 / 0.2e1 + t977 * t1176 + t959 * t1156) * t1184 + (t997 * t1171 - 0.4e1 * t1070 + 0.8e1 * (-qJD(1) * t1074 + (t1019 * t1024 - t1135) * qJD(2)) * t1147) * t1185;
	t957 = t995 * t1040 + t996 * t1117 + (t1019 * t988 + 0.4e1 * t1104) * t1028 + (-0.2e1 * t1030 * t1110 + (t1008 * t1030 + t1135 * t1187) * pkin(2)) * t1029;
	t1096 = t957 / 0.2e1 + t1162;
	t1095 = t1164 - t956 / 0.2e1;
	t1087 = t1005 * t1129;
	t1072 = -t964 * t1144 / 0.4e1;
	t1055 = 0.4e1 * t1120 * t1038 * qJD(1);
	t989 = (t1026 * t1188 - pkin(3) + t1150) * t1147;
	t1053 = (-t1028 * t962 + t1030 * t960) * t1101;
	t972 = 0.2e1 * t1005 * t1145 + t1058;
	t954 = t998 * t1040 + t964 * t1100 + t972 * t1028 + (0.2e1 * t1029 * t989 + t1031 * t979) * pkin(2);
	t1046 = t954 * t1159 + t962 * t974 / 0.2e1 + (t952 / 0.2e1 + t960 * t1154) * t990;
	t1045 = t1067 * t962 + t1157 * t953 + t1158 * t960 + t1160 * t957;
	t1036 = 0.1e1 / pkin(4);
	t1015 = 0.2e1 * t1018;
	t991 = t1015 + t1055;
	t958 = t991 * t1114 + (t1087 * t1190 + (pkin(2) * t1050 + t1030 * t1081) * pkin(3)) * qJD(2) - 0.8e1 * pkin(3) * t985 * t1107 + 0.4e1 * (-(-t1105 * t1146 + t1122) * t1145 + t1002 * t1106) * t1173 + (0.24e2 * pkin(3) * t1083 * t1151 + t1071 * t1172 + (-0.4e1 * t1112 + (-0.4e1 * t987 * t1125 + (t1028 * t1186 + t1115) * t1029) * pkin(3)) * pkin(2)) * qJD(1);
	t949 = t993 * t1072 + 0.2e1 * (-t1005 * t1106 + t1145 * t991 + 0.2e1 * t1073) * t1028 + t972 * t1138 + (t1156 * t958 + t1161 * t977 + t1163 * t998) * t966 + (t1031 * t971 + (-t1031 * t1124 + (-t1040 + 0.2e1 * (-pkin(1) - 0.4e1 * t1145) * t1147) * t1130) * qJD(2) + ((-t979 + t1127) * t1029 + (t1028 * t1080 + t1124 + 0.4e1 * t989) * t1031) * qJD(1)) * pkin(2);
	t948 = t994 * t1040 + t996 * t1072 + (-(0.4e1 * t1006 + t1015) * t1030 + t1003 * t1139) * t1019 + (-0.2e1 * t1027 * t1138 + 0.4e1 * t1031 * t1091) * t1148 + (t1155 * t958 + t1161 * t978 + t1163 * t999) * t966 + (t1087 * t1174 + t1170 * t991 + t1055) * pkin(3) + ((t1064 * qJD(1) + (-t1127 + (t1008 + 0.4e1 * t1103) * t1030) * qJD(2)) * t1031 + (t994 * t1177 + (-t1008 * t1028 + (-t1003 - t1040) * t1030) * qJD(1) + t1056) * t1029) * pkin(2);
	t947 = (-t990 * t1181 + (t949 * t1152 + t948 * t1153 + (t1028 * t954 / 0.2e1 + t955 * t1152) * qJD(2)) * t981 + (t1179 * t1028 + t1046 * t1030) * t1175) * t1036;
	t946 = (t990 * t1053 + (t948 * t1183 + t949 * t1153 + (t1152 * t954 + t1153 * t955) * qJD(2)) * t981 + (t1046 * t1028 - t1179 * t1030) * t1175) * t1036;
	t945 = (-t992 * t1053 + (t1098 * t1030 - t1097 * t1028 + (-t1028 * t1096 + t1030 * t1095) * qJD(2)) * t981 + (t1180 * t1028 + t1045 * t1030) * t1175) * t1036;
	t944 = (-t992 * t1181 + (t1097 * t1030 + t1098 * t1028 + (t1028 * t1095 + t1030 * t1096) * qJD(2)) * t981 + (t1045 * t1028 - t1180 * t1030) * t1175) * t1036;
	t1 = [r_i_i_C(1) * t946 + r_i_i_C(2) * t947, r_i_i_C(1) * t945 - r_i_i_C(2) * t944 - t1105; -r_i_i_C(1) * t947 + r_i_i_C(2) * t946, r_i_i_C(1) * t944 + r_i_i_C(2) * t945 - t1106; 0, 0;];
	JaD_transl = t1;
end