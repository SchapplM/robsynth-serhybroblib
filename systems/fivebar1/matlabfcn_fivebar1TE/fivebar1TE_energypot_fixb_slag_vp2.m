% Calculate potential energy for
% fivebar1TE
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [2x1]
%   Generalized joint coordinates (joint angles)
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [5x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[AB,AE,BC,CD,ED]';
% m [5x1]
%   mass of all robot links (including the base)
% mrSges [5x3]
%  first moment of all robot links (mass times center of mass in body frames)
%  rows: links of the robot (starting with base)
%  columns: x-, y-, z-coordinates
% 
% Output:
% U [1x1]
%   Potential energy

% Quelle: HybrDyn-Toolbox
% Datum: 2020-04-27 10:28
% Revision: 970157063c8b7bcb25458a457551a083b21abdbd (2020-04-26)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function U = fivebar1TE_energypot_fixb_slag_vp2(qJ, g, ...
  pkin, m, mrSges)
%% Coder Information
%#codegen
%$cgargs {zeros(2,1),zeros(3,1),zeros(5,1),zeros(5,1),zeros(5,3)}
assert(isreal(qJ) && all(size(qJ) == [2 1]), ...
  'fivebar1TE_energypot_fixb_slag_vp2: qJ has to be [2x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'fivebar1TE_energypot_fixb_slag_vp2: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [5 1]), ...
  'fivebar1TE_energypot_fixb_slag_vp2: pkin has to be [5x1] (double)');
assert(isreal(m) && all(size(m) == [5 1]), ...
  'fivebar1TE_energypot_fixb_slag_vp2: m has to be [5x1] (double)'); 
assert(isreal(mrSges) && all(size(mrSges) == [5,3]), ...
  'fivebar1TE_energypot_fixb_slag_vp2: mrSges has to be [5x3] (double)');

%% Symbolic Calculation
% From energy_potential_fixb_worldframe_par2_matlab.m
% OptimizationMode: 2
% StartTime: 2020-04-27 09:13:22
% EndTime: 2020-04-27 09:13:28
% DurationCPUTime: 3.92s
% Computational Cost: add. (14184->410), mult. (41600->493), div. (128->5), fcn. (4996->6), ass. (0->205)
t530 = 4 * pkin(3);
t389 = pkin(5) ^ 2;
t340 = -t389 / 0.3e1;
t392 = pkin(4) ^ 2;
t529 = t340 - t392 / 0.3e1;
t388 = t389 ^ 2;
t391 = t392 ^ 2;
t528 = -t388 / 0.6e1 + t391 / 0.6e1;
t361 = cos(qJ(2));
t326 = t361 ^ 2;
t527 = -0.2e1 * t326;
t397 = pkin(3) ^ 2;
t395 = t397 ^ 2;
t526 = 4 * t395;
t525 = 2 * t397;
t375 = 6 * t397;
t401 = (pkin(2) ^ 2);
t524 = 2 * t401;
t403 = (pkin(1) ^ 2);
t386 = 2 * t403;
t408 = t401 ^ 2;
t378 = 5 * t408;
t523 = -pkin(4) - pkin(5);
t522 = pkin(5) - pkin(4);
t521 = t361 / 0.2e1;
t360 = sin(qJ(1));
t318 = pkin(2) * t360;
t362 = cos(qJ(1));
t520 = pkin(2) * t362;
t359 = sin(qJ(2));
t519 = pkin(3) * t359;
t317 = pkin(3) * t361;
t510 = t359 * t360;
t469 = pkin(2) * t510;
t442 = pkin(3) * t469;
t299 = -0.2e1 * t442;
t304 = pkin(1) - t520;
t477 = pkin(1) * t520;
t307 = -0.2e1 * t477;
t483 = t401 + t403;
t448 = t397 + t483;
t478 = 0.2e1 * t317;
t280 = 0.1e1 / (t304 * t478 + t299 + t307 + t448);
t518 = t280 / pkin(4);
t411 = pkin(3) * t397;
t467 = t397 * t318;
t517 = (-t359 * t411 + t467) * t326;
t516 = t304 * t361;
t385 = 3 * t403;
t488 = t389 + t392;
t308 = t385 - t488;
t515 = t308 * t397;
t320 = t397 + t403;
t447 = -t389 + t320;
t303 = -t392 + t447;
t314 = t320 ^ 2;
t514 = t314 * t303;
t513 = t488 * t403;
t329 = t362 ^ 2;
t512 = t329 ^ 2 * t408;
t407 = pkin(2) * t401;
t511 = t362 * t329 * t407;
t509 = t360 * t361;
t508 = (pkin(1) + pkin(3)) * (pkin(1) - pkin(3));
t507 = (pkin(1) + pkin(2)) * (pkin(1) - pkin(2));
t506 = t395 * t326 ^ 2;
t505 = t397 * t326;
t504 = t401 * t329;
t503 = t403 * t389;
t502 = t403 * t397;
t325 = t361 * t326;
t501 = t411 * t325;
t343 = -0.3e1 / 0.2e1 * t389;
t398 = t407 ^ 2;
t402 = t403 ^ 2;
t486 = t395 + t402;
t498 = t388 / 0.2e1 - t391 / 0.2e1;
t500 = t320 * ((t343 + t386) * t397 - 0.3e1 / 0.2e1 * t503 + t486 + t498) + t398;
t347 = 0.2e1 / 0.3e1 * t392;
t342 = -0.2e1 / 0.3e1 * t389;
t452 = t342 + t320;
t499 = (t347 + t452) * t320 + t408;
t338 = -t389 / 0.6e1;
t497 = t338 - t392 / 0.6e1;
t352 = -0.2e1 / 0.3e1 * t392;
t496 = t342 + t352;
t495 = t343 + t385;
t312 = -t397 / 0.3e1 + t403;
t357 = t401 / 0.2e1;
t494 = t357 + t403;
t493 = 0.4e1 / 0.7e1 * t403 - t389 / 0.7e1;
t369 = 10 * t397;
t492 = t369 + t386;
t322 = -3 * t397 + t403;
t491 = t386 - t389;
t490 = t388 - t391;
t489 = -t389 + t392;
t487 = t389 - t403;
t485 = t397 - t403;
t484 = -t401 + t403;
t482 = t402 - t395;
t481 = t402 + t408;
t480 = 0.4e1 * pkin(1);
t479 = 0.2e1 * t519;
t476 = pkin(1) * t317;
t475 = 0.8e1 * t511;
t474 = 0.8e1 * t506;
t473 = -0.4e1 * t505;
t472 = 0.4e1 * t505;
t471 = 0.2e1 * t504;
t470 = pkin(1) * t501;
t468 = t411 * t318;
t466 = 0.12e2 * t505;
t465 = 0.16e2 * t501;
t464 = -t519 / 0.2e1;
t463 = t280 / pkin(5) / pkin(4) ^ 2;
t462 = t359 * t507;
t306 = 0.2e1 * t476;
t461 = 0.4e1 * t476;
t460 = 0.6e1 * t476;
t459 = 0.4e1 / 0.3e1 * t389 + 0.4e1 / 0.3e1 * t392 - (2 * t403);
t384 = 4 * t403;
t458 = 0.2e1 / 0.3e1 * t389 + t347 + t384;
t348 = t392 / 0.3e1;
t457 = t389 / 0.3e1 + t348 + t386;
t456 = t403 + t497;
t455 = t403 + t529;
t341 = -t389 / 0.2e1;
t454 = t341 - t392 / 0.2e1 + t403;
t453 = t342 + t347 + t386;
t376 = 3 * t397;
t451 = t376 + t483;
t450 = t385 + t489;
t449 = t392 + t487;
t287 = t307 + t471 + t484;
t380 = -3 * t401;
t424 = t401 + t303;
t422 = t307 + t424;
t277 = sqrt(t287 * t473 + 0.4e1 * t485 * t504 + 0.4e1 * t424 * t477 - t395 + (t380 + t449) * t525 - (t403 + (pkin(2) - t523) * (pkin(2) + t523)) * (t403 + (pkin(2) - t522) * (pkin(2) + t522)) + (-(t299 + t422) * t516 + t422 * t469) * t530);
t285 = t491 * t397 + t486 - t503 - t528;
t313 = t403 - t401 / 0.3e1;
t288 = t313 * t299;
t292 = t340 + t348 + t448;
t293 = t304 + t317;
t323 = t380 + t403;
t444 = 0.8e1 * t470;
t296 = t323 * t444;
t298 = 0.10e2 * t515;
t301 = t341 + t448;
t302 = t392 + t447;
t305 = pkin(1) + t317;
t310 = (t384 + t389) * t397;
t315 = 0.10e2 / 0.3e1 * t397;
t316 = -0.30e2 * t389 + (60 * t403);
t339 = -t389 / 0.4e1;
t353 = 0.4e1 / 0.3e1 * t397;
t354 = t397 / 0.3e1;
t355 = t397 / 0.2e1;
t367 = 15 * t395;
t368 = 15 * t397;
t370 = -0.2e1 * t389;
t371 = -0.5e1 * t389;
t372 = 7 * t395;
t373 = 5 * t395;
t374 = 7 * t397;
t379 = 3 * t401;
t382 = 3 * t402;
t383 = 8 * t403;
t404 = pkin(1) * t403;
t420 = t285 + t408;
t421 = -t442 + t494;
t435 = -0.3e1 * t503 + t382 + t498;
t438 = -0.6e1 * t442;
t426 = ((t315 + t491) * t401 + t420) * t438 + (t367 + (-0.9e1 * t389 + (18 * t403)) * t397 + t435) * t401 + (t368 + t495) * t408 + t500;
t437 = -0.4e1 * t442;
t427 = t301 * t437;
t428 = -(t379 + t320) * t519 + t451 * t318;
t429 = -(t378 + ((5 * t397) + t308) * t524 + (t352 + t452) * t320) * t519 + (t408 + (t492 + t496) * t401 + t373 + 0.2e1 * t515 + t403 * (t403 + t496)) * t318;
t432 = t397 + t455;
t433 = t357 + t456;
t434 = -0.6e1 * t503 + (6 * t402) + t490;
t436 = t292 * t437 + (t375 + t453) * t401 + t499;
t439 = t325 * t468;
t440 = t506 * t318;
t441 = pkin(1) * t465;
t445 = 0.20e2 / 0.3e1 * t397;
t446 = ((-0.24e2 * (0.4e1 / 0.3e1 * t505 + t306 + t312) * t512 * t519 - 0.12e2 * (-0.8e1 / 0.3e1 * t440 + ((t353 + t433) * t318 - (0.4e1 / 0.3e1 * t401 + t355 + t456) * t519) * t472 + (-(t401 * t485) - 0.5e1 / 0.3e1 * t395 + t457 * t397 + t403 * t455) * t318 + (-t408 + (-t445 + t458) * t401 - (3 * t395) + t459 * t397 + t402) * t464 + (-t359 * t395 * t325 + ((t397 + t433) * t318 + (t524 - t485) * t464) * t317) * t480) * t504 + 0.24e2 * t313 * t440 + ((t379 + 0.3e1 / 0.2e1 * t397 + t454) * t318 + t323 * t519 / 0.2e1) * t441 - 0.6e1 * ((-(3 * t408) + (-t445 + t459) * t401 + t458 * t397 + t482) * t318 - 0.2e1 * (-0.5e1 / 0.3e1 * t408 + (-t397 + t457) * t401 + t403 * t432) * t519) * t505 - 0.6e1 * t429 * t476 - (t398 + ((21 * t397) + t308) * t408 + (t298 + t382 + (35 * t395) - 0.2e1 * t513) * t401 + (t372 + (t371 + t383 - 0.5e1 * t392) * t397 - t403 * t449) * t320) * t318 + (0.7e1 * t398 + (t374 + t308) * t378 + (t298 + (21 * t395) + (9 * t402) - 0.6e1 * t513) * t401 + t514) * t519) * t277 + (0.16e2 * (t474 + t441 + (-8 * t395 + 12 * t502) * t326 + (-0.12e2 * pkin(1) * t411 + t404 * t530) * t361 - (6 * t502) + t486) * t512 + 0.24e2 * ((t403 - 0.2e1 / 0.3e1 * t401) * t474 + 0.14e2 * (-0.32e2 / 0.21e2 * (t403 + t401 / 0.4e1 + t397 / 0.4e1 - t389 / 0.8e1) * t442 + t408 / 0.7e1 + (0.16e2 / 0.21e2 * t397 + t493) * t401 + t395 / 0.7e1 + t493 * t397 + t402 - 0.3e1 / 0.7e1 * t503 + t388 / 0.42e2 - t391 / 0.42e2) * t505 + t312 * t427 - (t485 * t408) + (t310 - 0.10e2 / 0.3e1 * t395 + (2 * t402) - t503) * t401 + t285 * t508 + ((-0.2e1 / 0.3e1 * t442 + t403 + t355 + t339) * t465 + 0.6e1 * (-0.8e1 / 0.3e1 * (t339 + t354 + t494) * t442 + t408 / 0.3e1 + (0.4e1 / 0.3e1 * t403 + t353 + t340) * t401 + t402 + 0.2e1 / 0.3e1 * t502 - 0.2e1 / 0.3e1 * t503 - t395 / 0.3e1 + t388 / 0.18e2 - t391 / 0.18e2) * t317) * pkin(1)) * t504 + 0.16e2 * (-6 * t403 * t401 + t481) * t506 + 0.32e2 * (t299 * t507 + t301 * t323) * t470 + 0.24e2 * (t313 * t427 - t398 + (-t315 + t487) * t408 + (t310 + t482 + t528) * t401 + t285 * t403) * t505 + 0.8e1 * t426 * t476 - 0.8e1 * ((t374 + t495) * t408 + (t372 + (t371 + (10 * t403)) * t397 + t435) * t401 + t500) * t442 + (t408 ^ 2) + (t370 + t384 + (28 * t397)) * t398 + (t316 * t397 + (70 * t395) + t434) * t408 + (t316 * t395 + t434 * t375 + t490 * t386 - 0.6e1 * t402 * t389 + 0.4e1 * t404 ^ 2 + (28 * t411 ^ 2)) * t401 + t302 * t514) * t293 + (((0.4e1 * t517 + (t318 + t479) * t306 + t322 * t318 + (0.3e1 / 0.2e1 * t401 + t376 + t454) * t479) * t475 + 0.6e1 * ((0.2e1 * (t355 + t401 + t497) * t318 + pkin(3) * t462) * t473 + (-0.8e1 * t439 + 0.4e1 * ((t451 + t529) * t318 - (t379 + t432) * t519) * t317) * pkin(1) + t429) * t520) * t277 + (-0.32e2 * (t444 + (-0.4e1 * t359 * t468 + t526 + ((4 * t401) + t370 + t383) * t397) * t326 + (t339 - t397 + t421) * t461 + t299 * t508 + t322 * t301) * t511 - 0.8e1 * (t296 + (t301 * t507 + t288) * t466 + (t427 + (t375 + t491) * t401 + t420) * t460 + t426) * t520) * t293) * t305) / ((-0.4e1 * (0.2e1 * t517 + (t525 + t401) * t519 + (-t485 + t306) * t318) * t504 + 0.8e1 * pkin(1) * t439 + ((pkin(2) * t526 + 0.8e1 * t397 * t407) * t360 + 0.4e1 * t411 * t462) * t326 - 0.4e1 * t428 * t476 - (t492 * t401 + t373 + t481 + 6 * t502) * t318 + (t378 + (t369 + 6 * t403) * t401 + t314) * t519) * t277 + (0.12e2 * (0.6e1 * (-0.4e1 / 0.9e1 * t442 + t403 + t401 / 0.3e1 + t354 + t392 / 0.9e1 - t389 / 0.9e1) * t505 + t312 * t299 + t292 * t508 + (t501 + (t392 / 0.6e1 + t338 + t421) * t317) * t480) * t504 + t296 + (t292 * t507 + t288) * t466 + t436 * t460 + ((t315 + t453) * t401 + t499) * t438 + t398 + (t368 + t450) * t408 + (t450 * t375 + t489 * t386 + t367 + t382) * t401 + t314 * t302) * t293 + ((t475 * t519 + 0.4e1 * (t467 * t527 + (t318 - t519) * t306 + t428) * t520) * t277 + (-0.8e1 * (t306 + t472 + t322) * t511 - 0.6e1 * (t484 * t472 + (t299 + t292) * t461 + t436) * t520) * t293) * t305) / 0.4e1;
t431 = t483 + t489;
t425 = t376 + t431;
t430 = -pkin(3) + t469;
t275 = (pkin(2) * t509 + t304 * t359) * t277 - (t307 + t425 + t437) * t516 + t430 * t307 + t425 * t469 + (t287 * t527 - t302 - t379 + t471) * pkin(3);
t286 = t307 + t397 + t431;
t276 = (-t430 + t516) * t277 + (t286 * t304 + t287 * t478) * t359 + (t286 * t361 + (0.4e1 * t326 - 0.2e1) * t304 * pkin(3)) * t318;
t269 = (t275 * t446 - t276 * t277 / 0.4e1) * t463;
t270 = (t275 * t277 / 0.4e1 + t276 * t446) * t463;
t290 = t359 * t362 - t509;
t291 = t361 * t362 + t510;
t267 = t269 * t290 + t270 * t291;
t443 = t267 * mrSges(3,1) - mrSges(2,2);
t423 = -m(3) * pkin(2) - t267 * mrSges(3,2) - mrSges(2,1);
t274 = (t275 * t521 - t359 * t276 / 0.2e1) * t518;
t273 = (t359 * t275 / 0.2e1 + t276 * t521) * t518;
t268 = -t269 * t291 + t270 * t290;
t266 = t362 * t268;
t1 = (-mrSges(1,3) - mrSges(2,3) - mrSges(3,3) - mrSges(4,3) - mrSges(5,3)) * g(3) + (-mrSges(5,1) * t273 - t266 * mrSges(3,2) - mrSges(4,2) * t361 - mrSges(5,2) * t274 - mrSges(1,2) + t443 * t362 + (-t268 * mrSges(3,1) + t423) * t360 + (-pkin(3) * m(5) - mrSges(4,1)) * t359) * g(2) + (-m(4) * pkin(1) - m(5) * t305 - t266 * mrSges(3,1) - mrSges(4,1) * t361 - mrSges(5,1) * t274 + mrSges(4,2) * t359 + mrSges(5,2) * t273 - mrSges(1,1) + (t268 * mrSges(3,2) - t443) * t360 + t423 * t362) * g(1);
U = t1;
