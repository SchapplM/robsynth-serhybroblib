% Calculate potential energy for
% fivebar1TE
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [2x1]
%   Generalized joint coordinates (joint angles)
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [5x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[AB,AE,BC,CD,ED]';
% m [5x1]
%   mass of all robot links (including the base)
% rSges [5x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% 
% Output:
% U [1x1]
%   Potential energy

% Quelle: HybrDyn-Toolbox
% Datum: 2020-04-27 10:28
% Revision: 970157063c8b7bcb25458a457551a083b21abdbd (2020-04-26)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function U = fivebar1TE_energypot_fixb_slag_vp1(qJ, g, ...
  pkin, m, rSges)
%% Coder Information
%#codegen
%$cgargs {zeros(2,1),zeros(3,1),zeros(5,1),zeros(5,1),zeros(5,3)}
assert(isreal(qJ) && all(size(qJ) == [2 1]), ...
  'fivebar1TE_energypot_fixb_slag_vp1: qJ has to be [2x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'fivebar1TE_energypot_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [5 1]), ...
  'fivebar1TE_energypot_fixb_slag_vp1: pkin has to be [5x1] (double)');
assert(isreal(m) && all(size(m) == [5 1]), ...
  'fivebar1TE_energypot_fixb_slag_vp1: m has to be [5x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [5,3]), ...
  'fivebar1TE_energypot_fixb_slag_vp1: rSges has to be [5x3] (double)');

%% Symbolic Calculation
% From energy_potential_fixb_worldframe_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2020-04-27 09:13:23
% EndTime: 2020-04-27 09:13:29
% DurationCPUTime: 4.05s
% Computational Cost: add. (14184->412), mult. (41600->507), div. (128->5), fcn. (4996->6), ass. (0->204)
t533 = 4 * pkin(3);
t391 = pkin(5) ^ 2;
t342 = -t391 / 0.3e1;
t394 = pkin(4) ^ 2;
t532 = t342 - t394 / 0.3e1;
t390 = t391 ^ 2;
t393 = t394 ^ 2;
t531 = -t390 / 0.6e1 + t393 / 0.6e1;
t363 = cos(qJ(2));
t328 = t363 ^ 2;
t530 = -0.2e1 * t328;
t399 = pkin(3) ^ 2;
t397 = t399 ^ 2;
t529 = 4 * t397;
t528 = 2 * t399;
t377 = 6 * t399;
t403 = (pkin(2) ^ 2);
t527 = 2 * t403;
t405 = (pkin(1) ^ 2);
t388 = 2 * t405;
t410 = t403 ^ 2;
t380 = 5 * t410;
t526 = -pkin(4) - pkin(5);
t525 = -pkin(4) + pkin(5);
t524 = t363 / 0.2e1;
t362 = sin(qJ(1));
t320 = pkin(2) * t362;
t364 = cos(qJ(1));
t523 = pkin(2) * t364;
t361 = sin(qJ(2));
t522 = pkin(3) * t361;
t319 = pkin(3) * t363;
t307 = pkin(1) + t319;
t513 = t361 * t362;
t472 = pkin(2) * t513;
t445 = pkin(3) * t472;
t301 = -0.2e1 * t445;
t306 = pkin(1) - t523;
t480 = pkin(1) * t523;
t309 = -0.2e1 * t480;
t486 = t403 + t405;
t451 = t399 + t486;
t481 = 0.2e1 * t319;
t282 = 0.1e1 / (t306 * t481 + t301 + t309 + t451);
t521 = t282 / pkin(4);
t413 = pkin(3) * t399;
t470 = t399 * t320;
t520 = (-t361 * t413 + t470) * t328;
t519 = t306 * t363;
t387 = 3 * t405;
t491 = t391 + t394;
t310 = t387 - t491;
t518 = t310 * t399;
t322 = t399 + t405;
t316 = t322 ^ 2;
t450 = -t391 + t322;
t517 = t316 * (-t394 + t450);
t516 = t491 * t405;
t331 = t364 ^ 2;
t515 = t331 ^ 2 * t410;
t409 = pkin(2) * t403;
t514 = t364 * t331 * t409;
t512 = t362 * t363;
t511 = (pkin(1) + pkin(3)) * (pkin(1) - pkin(3));
t510 = (pkin(1) + pkin(2)) * (pkin(1) - pkin(2));
t509 = t397 * t328 ^ 2;
t508 = t399 * t328;
t507 = t403 * t331;
t506 = t405 * t391;
t505 = t405 * t399;
t327 = t363 * t328;
t504 = t413 * t327;
t345 = -0.3e1 / 0.2e1 * t391;
t400 = t409 ^ 2;
t404 = t405 ^ 2;
t489 = t397 + t404;
t501 = t390 / 0.2e1 - t393 / 0.2e1;
t503 = t322 * ((t345 + t388) * t399 - 0.3e1 / 0.2e1 * t506 + t489 + t501) + t400;
t349 = 0.2e1 / 0.3e1 * t394;
t344 = -0.2e1 / 0.3e1 * t391;
t455 = t344 + t322;
t502 = (t349 + t455) * t322 + t410;
t340 = -t391 / 0.6e1;
t500 = t340 - t394 / 0.6e1;
t354 = -0.2e1 / 0.3e1 * t394;
t499 = t344 + t354;
t498 = t345 + t387;
t314 = -t399 / 0.3e1 + t405;
t359 = t403 / 0.2e1;
t497 = t359 + t405;
t496 = 0.4e1 / 0.7e1 * t405 - t391 / 0.7e1;
t371 = 10 * t399;
t495 = t371 + t388;
t324 = -3 * t399 + t405;
t494 = t388 - t391;
t493 = t390 - t393;
t492 = -t391 + t394;
t490 = t391 - t405;
t488 = t399 - t405;
t487 = -t403 + t405;
t485 = t404 - t397;
t484 = t404 + t410;
t483 = 0.4e1 * pkin(1);
t482 = 0.2e1 * t522;
t479 = pkin(1) * t319;
t478 = 0.8e1 * t514;
t477 = 0.8e1 * t509;
t476 = -0.4e1 * t508;
t475 = 0.4e1 * t508;
t474 = 0.2e1 * t507;
t473 = pkin(1) * t504;
t471 = t413 * t320;
t469 = 0.12e2 * t508;
t468 = 0.16e2 * t504;
t467 = -t522 / 0.2e1;
t466 = t282 / pkin(5) / pkin(4) ^ 2;
t465 = t361 * t510;
t308 = 0.2e1 * t479;
t464 = 0.4e1 * t479;
t463 = 0.6e1 * t479;
t462 = 0.4e1 / 0.3e1 * t391 + 0.4e1 / 0.3e1 * t394 - (2 * t405);
t386 = 4 * t405;
t461 = 0.2e1 / 0.3e1 * t391 + t349 + t386;
t350 = t394 / 0.3e1;
t460 = t391 / 0.3e1 + t350 + t388;
t459 = t405 + t500;
t458 = t405 + t532;
t343 = -t391 / 0.2e1;
t457 = t343 - t394 / 0.2e1 + t405;
t456 = t344 + t349 + t388;
t378 = 3 * t399;
t454 = t378 + t486;
t453 = t387 + t492;
t452 = t394 + t490;
t449 = -t391 + t486;
t289 = t309 + t474 + t487;
t382 = -3 * t403;
t433 = t399 + t449;
t426 = -t394 + t433;
t424 = t309 + t426;
t279 = sqrt(t289 * t476 + 0.4e1 * t488 * t507 + 0.4e1 * t426 * t480 - t397 + (t382 + t452) * t528 - (t405 + (pkin(2) - t526) * (pkin(2) + t526)) * (t405 + (pkin(2) - t525) * (pkin(2) + t525)) + (-(t301 + t424) * t519 + t424 * t472) * t533);
t287 = t494 * t399 + t489 - t506 - t531;
t315 = t405 - t403 / 0.3e1;
t290 = t315 * t301;
t294 = t342 + t350 + t451;
t295 = t306 + t319;
t325 = t382 + t405;
t446 = 0.8e1 * t473;
t298 = t325 * t446;
t300 = 0.10e2 * t518;
t303 = t343 + t451;
t304 = t394 + t450;
t312 = (t386 + t391) * t399;
t317 = 0.10e2 / 0.3e1 * t399;
t318 = -0.30e2 * t391 + (60 * t405);
t341 = -t391 / 0.4e1;
t355 = 0.4e1 / 0.3e1 * t399;
t356 = t399 / 0.3e1;
t357 = t399 / 0.2e1;
t369 = 15 * t397;
t370 = 15 * t399;
t372 = -0.2e1 * t391;
t373 = -0.5e1 * t391;
t374 = 7 * t397;
t375 = 5 * t397;
t376 = 7 * t399;
t381 = 3 * t403;
t384 = 3 * t404;
t385 = 8 * t405;
t406 = pkin(1) * t405;
t422 = t287 + t410;
t423 = -t445 + t497;
t437 = -0.3e1 * t506 + t384 + t501;
t440 = -0.6e1 * t445;
t428 = ((t317 + t494) * t403 + t422) * t440 + (t369 + (-0.9e1 * t391 + (18 * t405)) * t399 + t437) * t403 + (t370 + t498) * t410 + t503;
t439 = -0.4e1 * t445;
t429 = t303 * t439;
t430 = -(t381 + t322) * t522 + t454 * t320;
t431 = -(t380 + ((5 * t399) + t310) * t527 + (t354 + t455) * t322) * t522 + (t410 + (t495 + t499) * t403 + t375 + 0.2e1 * t518 + t405 * (t405 + t499)) * t320;
t434 = t399 + t458;
t435 = t359 + t459;
t436 = -0.6e1 * t506 + (6 * t404) + t493;
t438 = t294 * t439 + (t377 + t456) * t403 + t502;
t441 = t327 * t471;
t442 = t509 * t320;
t444 = pkin(1) * t468;
t447 = 0.20e2 / 0.3e1 * t399;
t448 = ((-0.24e2 * (0.4e1 / 0.3e1 * t508 + t308 + t314) * t515 * t522 - 0.12e2 * (-0.8e1 / 0.3e1 * t442 + ((t355 + t435) * t320 - (0.4e1 / 0.3e1 * t403 + t357 + t459) * t522) * t475 + (-(t403 * t488) - 0.5e1 / 0.3e1 * t397 + t460 * t399 + t405 * t458) * t320 + (-t410 + (-t447 + t461) * t403 - (3 * t397) + t462 * t399 + t404) * t467 + (-t361 * t397 * t327 + ((t399 + t435) * t320 + (t527 - t488) * t467) * t319) * t483) * t507 + 0.24e2 * t315 * t442 + ((t381 + 0.3e1 / 0.2e1 * t399 + t457) * t320 + t325 * t522 / 0.2e1) * t444 - 0.6e1 * ((-(3 * t410) + (-t447 + t462) * t403 + t461 * t399 + t485) * t320 - 0.2e1 * (-0.5e1 / 0.3e1 * t410 + (-t399 + t460) * t403 + t405 * t434) * t522) * t508 - 0.6e1 * t431 * t479 - (t400 + ((21 * t399) + t310) * t410 + (t300 + t384 + (35 * t397) - 0.2e1 * t516) * t403 + (t374 + (t373 + t385 - 0.5e1 * t394) * t399 - t405 * t452) * t322) * t320 + (0.7e1 * t400 + (t376 + t310) * t380 + (t300 + (21 * t397) + (9 * t404) - 0.6e1 * t516) * t403 + t517) * t522) * t279 + (0.16e2 * (t477 + t444 + (-8 * t397 + 12 * t505) * t328 + (-0.12e2 * pkin(1) * t413 + t406 * t533) * t363 - (6 * t505) + t489) * t515 + 0.24e2 * ((t405 - 0.2e1 / 0.3e1 * t403) * t477 + 0.14e2 * (-0.32e2 / 0.21e2 * (t405 + t403 / 0.4e1 + t399 / 0.4e1 - t391 / 0.8e1) * t445 + t410 / 0.7e1 + (0.16e2 / 0.21e2 * t399 + t496) * t403 + t397 / 0.7e1 + t496 * t399 + t404 - 0.3e1 / 0.7e1 * t506 + t390 / 0.42e2 - t393 / 0.42e2) * t508 + t314 * t429 - (t488 * t410) + (t312 - 0.10e2 / 0.3e1 * t397 + (2 * t404) - t506) * t403 + t287 * t511 + ((-0.2e1 / 0.3e1 * t445 + t405 + t357 + t341) * t468 + 0.6e1 * (-0.8e1 / 0.3e1 * (t341 + t356 + t497) * t445 + t410 / 0.3e1 + (0.4e1 / 0.3e1 * t405 + t355 + t342) * t403 + t404 + 0.2e1 / 0.3e1 * t505 - 0.2e1 / 0.3e1 * t506 - t397 / 0.3e1 + t390 / 0.18e2 - t393 / 0.18e2) * t319) * pkin(1)) * t507 + 0.16e2 * (-6 * t405 * t403 + t484) * t509 + 0.32e2 * (t301 * t510 + t303 * t325) * t473 + 0.24e2 * (t315 * t429 - t400 + (-t317 + t490) * t410 + (t312 + t485 + t531) * t403 + t287 * t405) * t508 + 0.8e1 * t428 * t479 - 0.8e1 * ((t376 + t498) * t410 + (t374 + (t373 + (10 * t405)) * t399 + t437) * t403 + t503) * t445 + (t410 ^ 2) + (t372 + t386 + (28 * t399)) * t400 + (t318 * t399 + (70 * t397) + t436) * t410 + (t318 * t397 + t377 * t436 + t388 * t493 - 0.6e1 * t404 * t391 + 0.4e1 * t406 ^ 2 + (28 * t413 ^ 2)) * t403 + t304 * t517) * t295 + (((0.4e1 * t520 + (t320 + t482) * t308 + t324 * t320 + (0.3e1 / 0.2e1 * t403 + t378 + t457) * t482) * t478 + 0.6e1 * ((0.2e1 * (t357 + t403 + t500) * t320 + pkin(3) * t465) * t476 + (-0.8e1 * t441 + 0.4e1 * ((t454 + t532) * t320 - (t381 + t434) * t522) * t319) * pkin(1) + t431) * t523) * t279 + (-0.32e2 * (t446 + (-0.4e1 * t361 * t471 + t529 + ((4 * t403) + t372 + t385) * t399) * t328 + (t341 - t399 + t423) * t464 + t301 * t511 + t324 * t303) * t514 - 0.8e1 * (t298 + (t303 * t510 + t290) * t469 + (t429 + (t377 + t494) * t403 + t422) * t463 + t428) * t523) * t295) * t307) / ((-0.4e1 * (0.2e1 * t520 + (t528 + t403) * t522 + (-t488 + t308) * t320) * t507 + 0.8e1 * pkin(1) * t441 + ((pkin(2) * t529 + 0.8e1 * t399 * t409) * t362 + 0.4e1 * t413 * t465) * t328 - 0.4e1 * t430 * t479 - (t495 * t403 + t375 + t484 + 6 * t505) * t320 + (t380 + (t371 + 6 * t405) * t403 + t316) * t522) * t279 + (0.12e2 * (0.6e1 * (-0.4e1 / 0.9e1 * t445 + t405 + t403 / 0.3e1 + t356 + t394 / 0.9e1 - t391 / 0.9e1) * t508 + t314 * t301 + t294 * t511 + (t504 + (t394 / 0.6e1 + t340 + t423) * t319) * t483) * t507 + t298 + (t294 * t510 + t290) * t469 + t438 * t463 + ((t317 + t456) * t403 + t502) * t440 + t400 + (t370 + t453) * t410 + (t453 * t377 + t492 * t388 + t369 + t384) * t403 + t316 * t304) * t295 + ((t478 * t522 + 0.4e1 * (t470 * t530 + (t320 - t522) * t308 + t430) * t523) * t279 + (-0.8e1 * (t308 + t475 + t324) * t514 - 0.6e1 * (t487 * t475 + (t301 + t294) * t464 + t438) * t523) * t295) * t307) / 0.4e1;
t427 = t378 + t394 + t449;
t432 = -pkin(3) + t472;
t277 = (pkin(2) * t512 + t306 * t361) * t279 - (t309 + t427 + t439) * t519 + t432 * t309 + t427 * t472 + (t289 * t530 - t304 - t381 + t474) * pkin(3);
t288 = t309 + t394 + t433;
t278 = (-t432 + t519) * t279 + (t288 * t306 + t289 * t481) * t361 + (t288 * t363 + (0.4e1 * t328 - 0.2e1) * t306 * pkin(3)) * t320;
t271 = (t277 * t448 - t278 * t279 / 0.4e1) * t466;
t272 = (t277 * t279 / 0.4e1 + t278 * t448) * t466;
t292 = t361 * t364 - t512;
t293 = t363 * t364 + t513;
t269 = t271 * t292 + t272 * t293;
t270 = -t271 * t293 + t272 * t292;
t443 = t269 * t362 + t364 * t270;
t425 = t269 * t364 - t270 * t362;
t276 = (t277 * t524 - t361 * t278 / 0.2e1) * t521;
t275 = (t361 * t277 / 0.2e1 + t278 * t524) * t521;
t1 = -m(1) * (g(1) * rSges(1,1) + g(2) * rSges(1,2) + g(3) * rSges(1,3)) - m(2) * (g(1) * (rSges(2,1) * t364 - rSges(2,2) * t362) + g(2) * (rSges(2,1) * t362 + rSges(2,2) * t364) + g(3) * rSges(2,3)) - m(3) * (g(1) * (rSges(3,1) * t443 + rSges(3,2) * t425 + t523) + g(2) * (-rSges(3,1) * t425 + rSges(3,2) * t443 + t320) + g(3) * rSges(3,3)) - m(4) * (g(1) * (rSges(4,1) * t363 - rSges(4,2) * t361 + pkin(1)) + g(2) * (rSges(4,1) * t361 + rSges(4,2) * t363) + g(3) * rSges(4,3)) - m(5) * (g(1) * (rSges(5,1) * t276 - rSges(5,2) * t275 + t307) + g(2) * (rSges(5,1) * t275 + rSges(5,2) * t276 + t522) + g(3) * rSges(5,3));
U = t1;
