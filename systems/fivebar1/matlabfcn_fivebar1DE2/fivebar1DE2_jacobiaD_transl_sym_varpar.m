% Zeitableitung der analytischen Jacobi-Matrix (Translatorisch) für beliebiges Segment von
% fivebar1DE2
% 
% analytische Jacobi-Matrix: Differentieller Zusammenhang zwischen
% Endeffektorposition und verallgemeinerten Koordinaten.
% (Ist für translatorischen Teil egal, kennzeichnet nur den Rechenweg der Herleitung)
% 
% Input:
% qJ [2x1]
%   Generalized joint coordinates (joint angles)
% qJD [2x1]
%   Generalized joint velocities
% link_index [1x1 uint8]
%   Index des Segmentes, auf dem der Punkt C liegt (0=Basis).
% r_i_i_C [3x1]
%   Ortsvektor vom KörperKS-Ursprung zum gesuchten Punkt
% pkin [5x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[AB,AE,BC,CD,ED]';
% 
% Output:
% JaD_transl [3x2]
%   Translatorischer Teil der analytischen Jacobi-Matrix (Zeitableitung)

% Quelle: HybrDyn-Toolbox
% Datum: 2020-04-27 06:03
% Revision: 970157063c8b7bcb25458a457551a083b21abdbd (2020-04-26)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function JaD_transl = fivebar1DE2_jacobiaD_transl_sym_varpar(qJ, qJD, link_index, r_i_i_C, ...
  pkin)


%% Coder Information
%#codegen
%$cgargs {zeros(2,1),zeros(2,1),uint8(0),zeros(3,1),zeros(5,1)}
assert(isreal(qJ) && all(size(qJ) == [2 1]), ...
  'fivebar1DE2_jacobiaD_transl_sym_varpar: qJ has to be [2x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [2 1]), ...
  'fivebar1DE2_jacobiaD_transl_sym_varpar: qJD has to be [2x1] (double)');
assert(isa(r_i_i_C,'double') && isreal(r_i_i_C) && all(size(r_i_i_C) == [3 1]), ...
	'fivebar1DE2_jacobiaD_transl_sym_varpar: Position vector r_i_i_C has to be [3x1] double');
assert(isa(link_index,'uint8') && all(size(link_index) == [1 1]), ...
	'fivebar1DE2_jacobiaD_transl_sym_varpar: link_index has to be [1x1] uint8');
assert(isreal(pkin) && all(size(pkin) == [5 1]), ...
  'fivebar1DE2_jacobiaD_transl_sym_varpar: pkin has to be [5x1] (double)');
JaD_transl=NaN(3,2);
if link_index == 0
	%% Symbolic Calculation
	% From jacobiaD_transl_0_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-27 05:51:21
	% EndTime: 2020-04-27 05:51:21
	% DurationCPUTime: 0.01s
	% Computational Cost: add. (0->0), mult. (0->0), div. (0->0), fcn. (0->0), ass. (0->1)
	t1 = [0, 0; 0, 0; 0, 0;];
	JaD_transl = t1;
elseif link_index == 1
	%% Symbolic Calculation
	% From jacobiaD_transl_1_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-27 05:51:21
	% EndTime: 2020-04-27 05:51:22
	% DurationCPUTime: 0.01s
	% Computational Cost: add. (2->2), mult. (8->6), div. (0->0), fcn. (4->2), ass. (0->3)
	t27 = cos(qJ(1));
	t26 = sin(qJ(1));
	t1 = [(-r_i_i_C(1) * t27 + r_i_i_C(2) * t26) * qJD(1), 0; (-r_i_i_C(1) * t26 - r_i_i_C(2) * t27) * qJD(1), 0; 0, 0;];
	JaD_transl = t1;
elseif link_index == 2
	%% Symbolic Calculation
	% From jacobiaD_transl_2_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-27 05:56:20
	% EndTime: 2020-04-27 05:59:29
	% DurationCPUTime: 193.00s
	% Computational Cost: add. (3388394->1402), mult. (10430492->2495), div. (19272->11), fcn. (1323338->9), ass. (0->1019)
	t4756 = cos(qJ(1));
	t5520 = -0.4e1 * t4756;
	t4786 = (pkin(5) ^ 2);
	t4785 = t4786 ^ 2;
	t4789 = (pkin(4) ^ 2);
	t4788 = t4789 ^ 2;
	t5264 = t4785 - t4788;
	t5511 = 4 * pkin(3);
	t5234 = 4 * qJD(1);
	t4793 = pkin(3) ^ 2;
	t4797 = (pkin(2) ^ 2);
	t4799 = (pkin(1) ^ 2);
	t5257 = (t4799 - t4786);
	t5078 = (t4797 + t5257);
	t4984 = t4793 + t5078;
	t4662 = -t4789 + t4984;
	t5388 = pkin(2) * t4756;
	t5237 = pkin(1) * t5388;
	t4691 = -0.2e1 * t5237;
	t4603 = t4691 + t4662;
	t4753 = sin(qJ(2));
	t4754 = sin(qJ(1));
	t5321 = t4753 * t4754;
	t4681 = pkin(2) * t5321;
	t5065 = pkin(3) * t4681;
	t4664 = -0.2e1 * t5065;
	t4560 = t4664 + t4603;
	t4686 = pkin(1) - t5388;
	t4755 = cos(qJ(2));
	t4660 = t4686 * t4755;
	t5449 = 4 * t4793;
	t4722 = t4797 * t5449;
	t5297 = t4797 * t4799;
	t4692 = t4722 - 4 * t5297;
	t4721 = t4756 ^ 2;
	t4768 = 2 * t4789;
	t4784 = -2 * t4799;
	t4791 = t4793 ^ 2;
	t5068 = t4662 * t5237;
	t5136 = t4603 * t5321;
	t5323 = t4721 * t4797;
	t5225 = 0.2e1 * t5323;
	t5261 = -t4797 + t4799;
	t4611 = t4691 + t5225 + t5261;
	t4718 = t4755 ^ 2;
	t5345 = t4611 * t4718;
	t5437 = -pkin(4) + pkin(5);
	t5438 = -pkin(4) - pkin(5);
	t4456 = t4692 * t4721 + 0.4e1 * t5068 - t4791 - (t4799 + (pkin(2) - t5437) * (pkin(2) + t5437)) * (t4799 + (pkin(2) - t5438) * (pkin(2) + t5438)) + (t4768 + t4784 + (2 * t4786) - (6 * t4797) - 0.4e1 * t5345) * t4793 + (pkin(2) * t5136 - t4560 * t4660) * t5511;
	t4800 = sqrt(t4456);
	t5397 = t4800 / 0.4e1;
	t5309 = t4755 * t4793;
	t5111 = t4753 * t5309;
	t5441 = pkin(1) * pkin(2);
	t4977 = t5111 * t5441;
	t4915 = t4754 * t4977;
	t4714 = t4753 ^ 2;
	t5329 = t4714 * t4793;
	t5113 = qJD(2) * t5329;
	t5519 = qJD(1) * t4915 + t5113 * t5237;
	t4707 = pkin(3) * t4755;
	t4687 = pkin(1) + t4707;
	t4804 = pkin(2) * t4797;
	t5322 = t4721 * t4804;
	t5124 = t4754 * t5322;
	t4999 = t4687 * t5124;
	t4923 = qJD(1) * t4999;
	t4720 = t4756 * t4721;
	t5315 = t4753 * t4804;
	t5128 = t4720 * t5315;
	t5033 = pkin(3) * t5128;
	t4953 = qJD(2) * t5033;
	t5518 = 0.96e2 * t4923 + 0.32e2 * t4953;
	t5517 = -0.24e2 * t4923 - 0.8e1 * t4953;
	t5319 = t4753 * t4756;
	t5197 = pkin(2) * t5319;
	t5064 = pkin(3) * t5197;
	t4975 = qJD(2) * t5064;
	t5311 = t4755 * t4754;
	t5118 = qJD(1) * t5311;
	t5043 = pkin(2) * t5118;
	t5440 = pkin(1) * pkin(3);
	t5516 = pkin(1) * t4975 + t5043 * t5440;
	t4972 = qJD(1) * t5065;
	t5310 = t4755 * t4756;
	t5194 = pkin(2) * t5310;
	t5062 = pkin(3) * t5194;
	t4973 = qJD(2) * t5062;
	t5515 = -0.6e1 * t4973 + 0.6e1 * t4972;
	t5339 = t4687 * t4754;
	t5201 = pkin(2) * t5339;
	t5045 = qJD(1) * t5201;
	t5514 = 0.8e1 * t5045 + 0.8e1 * t4975;
	t5513 = -0.6e1 * t5045 - 0.6e1 * t4975;
	t4920 = t5310 + t5321;
	t5148 = qJD(2) * t5321;
	t4505 = (qJD(1) * t4920 - t5148) * pkin(2) + qJD(2) * t4660;
	t5512 = 0.2e1 * pkin(1);
	t5377 = 0.6e1 * pkin(2);
	t5376 = 0.8e1 * pkin(2);
	t5375 = 2 * pkin(3);
	t4724 = 0.10e2 / 0.3e1 * t4793;
	t4798 = t4799 ^ 2;
	t5262 = t4791 + t4798;
	t4783 = 2 * t4799;
	t5265 = t4783 - t4786;
	t5296 = t4799 * t4786;
	t5488 = -t4785 / 0.6e1 + t4788 / 0.6e1;
	t4588 = (t5265 * t4793) + t5262 - t5296 - t5488;
	t4805 = t4797 ^ 2;
	t4841 = t4588 + t4805;
	t4542 = (t4724 + t5265) * t4797 + t4841;
	t5474 = -6 * pkin(3);
	t5251 = t4542 * t5474;
	t5160 = pkin(2) * t5251;
	t5370 = qJD(1) * t4756;
	t4939 = t5160 * t5370;
	t5145 = qJD(2) * t5311;
	t4666 = pkin(2) * t5145;
	t4974 = pkin(3) * t4666;
	t4472 = -0.6e1 * t4542 * t4974 + t4753 * t4939;
	t4773 = 6 * t4793;
	t4735 = -t4786 / 0.2e1;
	t5260 = t4797 + t4799;
	t5080 = t4793 + t5260;
	t4669 = t4735 + t5080;
	t5018 = -0.4e1 * t5065;
	t4930 = t4669 * t5018;
	t4495 = t4930 + ((t4773 + t5265) * t4797) + t4841;
	t5154 = qJD(1) * t5319;
	t4863 = -t5145 - t5154;
	t4848 = pkin(2) * t4863;
	t4836 = 0.4e1 * t4848;
	t4831 = pkin(3) * t4836;
	t4515 = t4669 * t4831;
	t4703 = t4799 - t4797 / 0.3e1;
	t4613 = t4703 * t4664;
	t5303 = (pkin(1) + pkin(2)) * (pkin(1) - pkin(2));
	t4538 = t4669 * t5303 + t4613;
	t4997 = qJD(2) * t5111;
	t4943 = -0.24e2 * t4997;
	t4571 = pkin(3) * t4848;
	t4832 = 0.2e1 * t4571;
	t4535 = t4703 * t4832;
	t4713 = -3 * t4797 + t4799;
	t4808 = pkin(3) * t4793;
	t5290 = t4808 * t4718;
	t5130 = t4753 * t5290;
	t5047 = pkin(1) * t5130;
	t4622 = -0.24e2 * t4713 * t5047;
	t5299 = t4793 * t4718;
	t5170 = 0.12e2 * t5299;
	t5281 = qJD(2) * t4622 + t4535 * t5170;
	t5368 = qJD(2) * t4753;
	t5373 = 6 * pkin(3);
	t4434 = t4538 * t4943 + (-t4495 * t5368 + t4515 * t4755) * pkin(1) * t5373 + t5281 + t4472;
	t5510 = 0.8e1 * t4434;
	t4772 = 5 * t4791;
	t4780 = 6 * t4799;
	t4765 = -2 * t4786;
	t5267 = t4765 - 2 * t4789;
	t5081 = t4780 + t5267;
	t4763 = 10 * t4793;
	t5268 = t4763 + t4783;
	t4736 = -0.2e1 / 0.3e1 * t4786;
	t4746 = -0.2e1 / 0.3e1 * t4789;
	t5272 = t4736 + t4746;
	t4526 = t4805 + (t5268 + t5272) * t4797 + t4772 + (t5081 * t4793) + t4799 * (t4799 + t5272);
	t4695 = pkin(2) * t5370;
	t4512 = t4526 * t4695;
	t4777 = 3 * t4797;
	t4734 = -t4786 / 0.3e1;
	t5490 = t4734 - t4789 / 0.3e1;
	t5085 = t4799 + t5490;
	t4985 = t4793 + t5085;
	t4639 = t4777 + t4985;
	t4774 = 3 * t4793;
	t4698 = t4774 + t5260;
	t4640 = t4698 + t5490;
	t5367 = qJD(2) * t4755;
	t5191 = pkin(3) * t5367;
	t4520 = -t4639 * t5191 + t4640 * t4695;
	t4708 = pkin(2) * t4754;
	t5383 = pkin(3) * t4753;
	t4527 = -t4639 * t5383 + t4640 * t4708;
	t4749 = t4793 / 0.2e1;
	t4732 = -t4786 / 0.6e1;
	t5273 = t4732 - t4789 / 0.6e1;
	t4655 = t4749 + t4797 + t5273;
	t5004 = t5303 * t5367;
	t5076 = 0.2e1 * t4695;
	t4540 = pkin(3) * t5004 + t4655 * t5076;
	t4717 = t4755 * t4718;
	t5121 = t4753 * t5303;
	t5503 = 0.2e1 * t4708;
	t4555 = pkin(3) * t5121 + t4655 * t5503;
	t5318 = t4753 * t4793;
	t5223 = 0.8e1 * t5318;
	t4710 = t4793 + t4799;
	t4776 = 5 * t4805;
	t5082 = t4736 + t4710;
	t4554 = t4776 + ((t4763 + t5081) * t4797) + t4710 * (t4746 + t5082);
	t5385 = pkin(3) * t4554;
	t4862 = (t4555 * t5223 - t5385) * t4755;
	t5149 = t4718 * t5368;
	t5030 = 0.24e2 * t5149;
	t5216 = -0.4e1 * t5299;
	t5386 = pkin(2) * t4808;
	t4439 = t4540 * t5216 + t4512 + qJD(2) * t4862 + ((t4520 * t4755 - t4527 * t5368) * t5511 + (-0.8e1 * t4717 * t5370 + t4754 * t5030) * t5386) * pkin(1);
	t5509 = -0.6e1 * t4439;
	t4737 = -0.3e1 / 0.2e1 * t4786;
	t4761 = 15 * t4791;
	t4764 = 18 * t4799;
	t4778 = 3 * t4798;
	t5274 = t4785 / 0.2e1 - t4788 / 0.2e1;
	t4987 = -(3 * t5296) + t4778 + t5274;
	t5019 = t4754 * t5160;
	t4782 = 3 * t4799;
	t5269 = 15 * t4793 + t4782;
	t4794 = t4804 ^ 2;
	t5280 = t4710 * ((t4737 + t4783) * t4793 - 0.3e1 / 0.2e1 * t5296 + t5262 + t5274) + t4794;
	t4461 = t4753 * t5019 + (t4761 + ((t4764 - 9 * t4786) * t4793) + t4987) * t4797 + (t4737 + t5269) * t4805 + t5280;
	t5508 = -0.8e1 * t4461;
	t4476 = t4526 * t4708 - t4554 * t5383;
	t5507 = 0.6e1 * t4476;
	t5084 = t4735 - t4789 / 0.2e1 + t4799;
	t4631 = 0.3e1 / 0.2e1 * t4797 + t4774 + t5084;
	t5313 = t4753 * t4808;
	t5387 = pkin(2) * t4793;
	t4900 = t4754 * t5387 - t5313;
	t4643 = 0.4e1 * t4900;
	t4712 = -3 * t4793 + t4799;
	t4659 = t4708 + 0.2e1 * t5383;
	t5394 = pkin(1) * t4755;
	t5207 = t4659 * t5394;
	t4482 = t4712 * t4708 + t4643 * t4718 + (t4631 * t4753 + t5207) * t5375;
	t5506 = -0.8e1 * t4482;
	t5504 = -0.4e1 * t4669;
	t5502 = 0.4e1 * t4753;
	t5338 = t4687 * t4756;
	t5200 = pkin(2) * t5338;
	t5501 = 0.6e1 * t5200;
	t5276 = t4714 - t4718;
	t5015 = 0.8e1 * t5276;
	t5270 = 0.4e1 / 0.7e1 * t4799 - t4786 / 0.7e1;
	t4656 = t4799 + t4797 / 0.4e1 + t4793 / 0.4e1 - t4786 / 0.8e1;
	t5485 = 0.32e2 / 0.21e2 * t4656;
	t4485 = -t5065 * t5485 + t4805 / 0.7e1 + (0.16e2 / 0.21e2 * t4793 + t5270) * t4797 + t4791 / 0.7e1 + t5270 * t4793 + t4798 - 0.3e1 / 0.7e1 * t5296 + t5264 / 0.42e2;
	t4733 = -t4786 / 0.4e1;
	t4748 = t4793 / 0.3e1;
	t4751 = t4797 / 0.2e1;
	t5271 = t4751 + t4799;
	t4657 = t4733 + t4748 + t5271;
	t4747 = 0.4e1 / 0.3e1 * t4793;
	t5399 = 0.4e1 / 0.3e1 * t4797;
	t4488 = -0.8e1 / 0.3e1 * t4657 * t5065 + t4805 / 0.3e1 + (t4747 + t4734) * t4797 + t4798 - t4791 / 0.3e1 + (t5399 + 0.2e1 / 0.3e1 * t4793 + t4736) * t4799 + t5264 / 0.18e2;
	t4594 = -0.2e1 / 0.3e1 * t5065 + t4799 + t4749 + t4733;
	t4781 = 4 * t4799;
	t4699 = (t4781 + t4786) * t4793;
	t4711 = -t4793 + t4799;
	t4702 = -t4793 / 0.3e1 + t4799;
	t5042 = t4702 * t4681;
	t4970 = pkin(3) * t5042;
	t4910 = t4669 * t4970;
	t4704 = t4799 - 0.2e1 / 0.3e1 * t4797;
	t4716 = t4718 ^ 2;
	t5301 = t4791 * t4716;
	t5114 = t4704 * t5301;
	t5291 = t4808 * t4717;
	t5166 = 0.16e2 * t5291;
	t5169 = 0.14e2 * t5299;
	t5242 = 0.6e1 * t4707;
	t5304 = (pkin(1) + pkin(3)) * (pkin(1) - pkin(3));
	t4442 = 0.8e1 * t5114 + t4485 * t5169 - 0.4e1 * t4910 + (t4711 * t4805) + (t4699 - 0.10e2 / 0.3e1 * t4791 + (2 * t4798) - t5296) * t4797 + t4588 * t5304 + (t4488 * t5242 + t4594 * t5166) * pkin(1);
	t5500 = -0.48e2 * t4442;
	t4725 = -0.20e2 / 0.3e1 * t4793;
	t4741 = 0.2e1 / 0.3e1 * t4789;
	t5088 = 0.2e1 / 0.3e1 * t4786 + t4741 + t4781;
	t5089 = 0.4e1 / 0.3e1 * t4786 + 0.4e1 / 0.3e1 * t4789 + t4784;
	t5259 = t4798 - t4791;
	t4550 = -(3 * t4805) + (t4725 + t5089) * t4797 + t5088 * t4793 + t5259;
	t4742 = t4789 / 0.3e1;
	t5087 = t4786 / 0.3e1 + t4742 + t4783;
	t4556 = -0.5e1 / 0.3e1 * t4805 + (-t4793 + t5087) * t4797 + t4799 * t4985;
	t5245 = -0.2e1 * t5383;
	t4480 = t4550 * t4708 + t4556 * t5245;
	t5499 = 0.12e2 * t4480;
	t5498 = -0.48e2 * t4542;
	t5230 = 0.24e2 * t4754;
	t5496 = 16 * t4793;
	t4719 = t4721 ^ 2;
	t5314 = t4753 * t4805;
	t5187 = pkin(3) * t5314;
	t5034 = t4719 * t5187;
	t5495 = -0.24e2 * t5034;
	t4567 = -0.4e1 / 0.9e1 * t5065 + t4799 + t4797 / 0.3e1 + t4748 + t4789 / 0.9e1 - t4786 / 0.9e1;
	t4641 = t4734 + t4742 + t5080;
	t5213 = 0.6e1 * t5299;
	t4897 = -t5065 + t5271;
	t4585 = t4789 / 0.6e1 + t4732 + t4897;
	t5349 = t4585 * t4755;
	t5378 = 0.4e1 * pkin(1);
	t4463 = -0.2e1 * t4970 + t4567 * t5213 + t4641 * t5304 + (pkin(3) * t5349 + t5291) * t5378;
	t5083 = t4736 + t4741 + t4783;
	t5278 = t4710 * (t4741 + t5082) + t4805;
	t4491 = t4641 * t5018 + (t4773 + t5083) * t4797 + t5278;
	t4579 = t4664 + t4641;
	t4693 = t5261 * t5449;
	t5235 = pkin(1) * t4707;
	t5163 = 0.4e1 * t5235;
	t4467 = t4579 * t5163 + t4693 * t4718 + t4491;
	t4533 = t4641 * t5303 + t4613;
	t5203 = pkin(1) * t5291;
	t5046 = t4713 * t5203;
	t4650 = 0.8e1 * t5046;
	t5079 = t4793 + t5257;
	t4679 = t4789 + t5079;
	t4705 = t4710 ^ 2;
	t4767 = -6 * t4786;
	t4689 = 0.2e1 * t5235;
	t5214 = 0.4e1 * t5299;
	t5050 = t4712 + t5214;
	t4610 = t4689 + t5050;
	t5324 = t4720 * t4804;
	t5133 = t4687 * t5324;
	t4996 = t4610 * t5133;
	t4539 = (t4724 + t5083) * t4797 + t5278;
	t5140 = t4539 * t5321;
	t5162 = 0.6e1 * t5235;
	t5443 = 0.12e2 * t4721;
	t4427 = -0.8e1 * t4996 + t4650 + t4533 * t5170 + t4491 * t5162 + t4794 + ((-t4786 + t4789 + t5269) * t4805) + (t4705 * t4679) + (t4463 * t5443 + t4761 + ((t4764 + t4767 + 6 * t4789) * t4793) + t4778 + ((t4765 + t4768) * t4799)) * t4797 + (-pkin(3) * t5140 - t4467 * t5338) * t5377;
	t4644 = 0.2e1 * t4900;
	t4709 = 2 * t4793 + t4797;
	t5333 = t4709 * t4753;
	t4500 = pkin(3) * t5333 + t4644 * t4718 + (t4711 + t4689) * t4708;
	t5298 = t4793 * t4804;
	t5450 = 4 * t4791;
	t4694 = pkin(2) * t5450 + 0.8e1 * t5298;
	t5115 = t4808 * t5303;
	t4573 = t4694 * t4754 + t5115 * t5502;
	t4621 = t4776 + (t4763 + t4780) * t4797 + t4705;
	t5053 = 0.8e1 * t5133;
	t4961 = t4621 + t5053;
	t5258 = t4798 + t4805;
	t5295 = t4799 * t4793;
	t4604 = t4797 * t5268 + t4772 + t5258 + 6 * t5295;
	t4979 = -t4604 + 0.8e1 * t5203;
	t4651 = t4698 * t4708;
	t4696 = t4777 + t4710;
	t5337 = t4696 * t4753;
	t4566 = -pkin(3) * t5337 + t4651;
	t5208 = t4566 * t5394;
	t5226 = -0.4e1 * t5323;
	t4658 = t4708 - t5383;
	t5255 = 0.2e1 * t5394;
	t4901 = t4658 * t5255 - t5337;
	t5129 = t4754 * t5299;
	t5040 = pkin(2) * t5129;
	t4492 = pkin(3) * t4901 + t4651 - 0.2e1 * t5040;
	t5461 = 0.4e1 * t4492;
	t4441 = t4500 * t5226 + t4573 * t4718 + (t4753 * t4961 - 0.4e1 * t5208) * pkin(3) + (t4754 * t4979 + t5338 * t5461) * pkin(2);
	t4642 = t4686 + t4707;
	t4419 = t4427 * t4642 + t4441 * t4800;
	t4416 = 0.1e1 / t4419;
	t5494 = t4416 / 0.2e1;
	t5392 = pkin(1) * t4797;
	t5391 = pkin(1) * t4800;
	t5155 = qJD(1) * t5323;
	t5371 = qJD(1) * t4754;
	t5493 = t4808 * (0.8e1 * t4717 * t5371 + t4756 * t5030);
	t5146 = qJD(2) * t5319;
	t4864 = t5118 + t5146;
	t5492 = t4864 * t5511;
	t5215 = 0.2e1 * t5299;
	t5491 = (-t4698 + t5215) * t5388;
	t5489 = t4782 - t4786 - t4789;
	t4595 = 0.4e1 / 0.3e1 * t5299 + t4689 + t4702;
	t5188 = pkin(3) * t5315;
	t5032 = t4721 * t5188;
	t4950 = t4754 * t5032;
	t5325 = t4720 * t4754;
	t5127 = t4805 * t5325;
	t4966 = 0.96e2 * pkin(3) * t5127;
	t5300 = t4791 * t4717;
	t5120 = t4753 * t5300;
	t5199 = t4703 * t5388;
	t5487 = t4595 * t4755 * t4966 + 0.24e2 * t4482 * t4950 - 0.96e2 * t5120 * t5199;
	t5193 = t4756 * t5387;
	t5039 = t4718 * t5193;
	t4978 = pkin(1) * t5039;
	t5486 = -qJD(2) * t4978 + t5519;
	t5158 = 0.32e2 / 0.3e1 * t4791;
	t5011 = t4717 * t5158;
	t5343 = t4656 * t4808;
	t5012 = 0.64e2 / 0.3e1 * t5343;
	t5381 = t4702 * pkin(3);
	t5070 = t5381 * t5504;
	t5484 = pkin(1) * (0.16e2 * t4657 * t5309 + t5011) + t4718 * t5012 - t5070;
	t5008 = t4753 * t5118;
	t5366 = qJD(2) * t4756;
	t5483 = pkin(1) * t4793 * (t5276 * t5366 + t5008);
	t4454 = 0.1e1 / t4800;
	t5212 = 0.8e1 * t5299;
	t5220 = 0.8e1 * t5309;
	t5243 = 0.4e1 * t4707;
	t5248 = t4686 * t5511;
	t4459 = (t4560 * t5248 + t4611 * t5220) * t4753 + (t4603 * t5243 + t4686 * t5212) * t4708;
	t4497 = 0.2e1 * t4505 * pkin(3);
	t5196 = pkin(2) * t5311;
	t5340 = t4686 * t4753;
	t4587 = t5196 + t5340;
	t4575 = t4587 * t5375;
	t4667 = pkin(2) * t5154;
	t4971 = pkin(3) * t4667;
	t4647 = -0.2e1 * t4971;
	t4572 = -0.2e1 * t4974 + t4647;
	t5238 = pkin(1) * t4708;
	t4690 = 0.2e1 * t5238;
	t4677 = qJD(1) * t4690;
	t4544 = t4677 + t4572;
	t4852 = -qJD(2) * t5340 + t5043;
	t4487 = t4852 * t5375 + t4544;
	t5410 = t4487 / 0.8e1;
	t4838 = -0.4e1 * t4560 * t5311 + 0.4e1 * t4603 * t5319;
	t5451 = -0.2e1 * t4756;
	t4868 = (-0.4e1 * t4662 * t5441 + t4692 * t5451) * t4754;
	t5317 = t4753 * t4797;
	t4715 = t4754 ^ 2;
	t5456 = 0.8e1 * t4715;
	t4983 = pkin(1) * t5317 * t5456;
	t5320 = t4753 * t4755;
	t5147 = qJD(2) * t5320;
	t5003 = t4611 * t5147;
	t5058 = 0.4e1 * t5145;
	t5153 = t4560 * t5368;
	t5233 = 0.4e1 * t4686;
	t5305 = t4756 * t4797;
	t5119 = t4754 * t5305;
	t5006 = qJD(1) * t5119;
	t4963 = -0.4e1 * t5006;
	t4593 = t4677 + t4963;
	t5347 = t4593 * t4718;
	t5351 = t4544 * t4755;
	t4437 = (0.8e1 * t5003 - 0.4e1 * t5347) * t4793 + qJD(1) * t4868 + (qJD(1) * t4983 + (t5153 - t5351) * t5233 + (qJD(1) * t4838 + t4603 * t5058) * pkin(2)) * pkin(3);
	t5418 = t4437 / 0.8e1;
	t5481 = -t4497 * t5397 + (t4459 * t5410 - t4575 * t5418) * t4454;
	t4605 = -0.2e1 * t5064 + t4690;
	t5052 = -0.4e1 * t5119;
	t4618 = t4690 + t5052;
	t4452 = t4618 * t5216 + t4868 + (pkin(2) * t4838 - 0.4e1 * t4605 * t4660 + t4983) * pkin(3);
	t5117 = qJD(1) * t5310;
	t4835 = (t5117 - t5148) * t5375;
	t4678 = pkin(1) * t5076;
	t5090 = -0.2e1 * t4973 + 0.2e1 * t4972 + t4678;
	t4489 = pkin(2) * t4835 + t5090;
	t5063 = pkin(3) * t5196;
	t4563 = 0.2e1 * t5063 + t4605;
	t5480 = t4489 * t5397 + (t4452 * t5410 + t4563 * t5418) * t4454;
	t4443 = t4495 * t5162 + t4538 * t5170 + t4461 + t4650;
	t4779 = 8 * t4799;
	t5035 = t4808 * t4681;
	t4578 = -0.4e1 * t5035 + t4722 + t5450 + ((t4765 + t4779) * t4793);
	t4589 = t4733 - t4793 + t4897;
	t5186 = pkin(3) * t5304;
	t5073 = -0.2e1 * t5186;
	t4932 = t5073 * t4708;
	t5210 = 0.8e1 * t5291;
	t4470 = t4753 * t4932 + t4578 * t4718 + t4669 * t4712 + (t4589 * t5243 + t5210) * pkin(1);
	t5116 = t4791 * t5303;
	t4914 = t5116 * t5237;
	t5445 = -0.96e2 * t4703;
	t5027 = t4669 * t4808 * t5445;
	t4944 = t4717 * t5027;
	t4766 = -5 * t4786;
	t4771 = 7 * t4791;
	t4484 = (t4737 + t4782 + (7 * t4793)) * t4805 + (t4771 + ((t4766 + 10 * t4799) * t4793) + t4987) * t4797 + t5280;
	t5382 = t4484 * pkin(3);
	t5240 = -0.8e1 * t5382;
	t5020 = t5240 * t5388;
	t5479 = -0.8e1 * t4443 * t5065 - 0.96e2 * t4470 * t4950 - 0.64e2 * t4716 * t4914 + t4755 * t5020 + t4944 * t5388 + t4978 * t5498;
	t5478 = -0.6e1 * pkin(1);
	t5477 = -0.4e1 * pkin(1);
	t5476 = -0.2e1 * pkin(1);
	t5473 = -4 * pkin(3);
	t5472 = -2 * pkin(3);
	t5470 = -0.12e2 * pkin(1);
	t4475 = t4703 * t4930 - t4794 + (-t4724 - t5257) * t4805 + (t4699 + t5259 + t5488) * t4797 + t4799 * t4588;
	t5218 = 0.8e1 * t5301;
	t4701 = -8 * t4791 + 12 * t5295;
	t5336 = t4701 * t4718;
	t4801 = pkin(1) * t4799;
	t5390 = pkin(1) * t4808;
	t4685 = t4801 * t5511 - 0.12e2 * t5390;
	t5341 = t4685 * t4755;
	t4518 = pkin(1) * t5166 + t5218 + t5262 - (6 * t5295) + t5336 + t5341;
	t4706 = -30 * t4786 + 60 * t4799;
	t4906 = (6 * t4798) + t5264 - (6 * t5296);
	t5001 = t4470 * t5133;
	t5031 = t5321 * t5382;
	t4954 = t5121 * t4708;
	t4543 = t4669 * t4713 + t4954 * t5472;
	t5138 = t4543 * t5291;
	t5168 = 0.24e2 * t5299;
	t5241 = 0.8e1 * t4707;
	t5334 = t4705 * (-t4789 + t5079);
	t4652 = 16 * (t5258 - 6 * t5297) * t4791;
	t5344 = t4652 * t4716;
	t5442 = 0.24e2 * t4721;
	t4412 = -0.32e2 * t5001 + t5344 + t4475 * t5168 + (t4765 + t4781 + 28 * t4793) * t4794 + (t4679 * t5334) + (t4442 * t5442 + (t4706 * t4791) + (t4767 * t4798) + t4906 * t4773 + t5264 * t4783 + 0.4e1 * t4801 ^ 2 + (28 * t4808 ^ 2)) * t4797 + (-t4443 * t5338 - t5031) * t5376 + (t4461 * t5241 + 0.32e2 * t5138) * pkin(1) + (0.16e2 * t4518 * t4719 + (t4706 * t4793) + (70 * t4791) + t4805 + t4906) * t4805;
	t5195 = t4754 * t5386;
	t5036 = t4717 * t5195;
	t4449 = t4555 * t5216 + (t4527 * t5243 - 0.8e1 * t5036) * pkin(1) + t4476;
	t4670 = t5489 * t4763;
	t5266 = t4766 - 5 * t4789;
	t4493 = 0.7e1 * t4794 + ((35 * t4793 + 15 * t4799 + t5266) * t4805) + ((21 * t4791 + t4670 + 9 * t4798 + (t4767 - 6 * t4789) * t4799) * t4797) + t5334;
	t5326 = t4719 * t4805;
	t5178 = -0.24e2 * t5326;
	t4940 = t4595 * t5178 + t4493;
	t4483 = t4794 + ((21 * t4793 + t5489) * t4805) + ((t4799 * t5267 + t4670 + t4778 + 35 * t4791) * t4797) + ((t4771 + (t4779 + t5266) * t4793 + t4799 * (-t4789 + t5257)) * t4710);
	t5132 = t4703 * t5301;
	t4941 = -t4483 + 0.24e2 * t5132;
	t5000 = t4482 * t5133;
	t4633 = t4777 + 0.3e1 / 0.2e1 * t4793 + t5084;
	t5183 = t5383 / 0.2e1;
	t4553 = t4633 * t4708 + t4713 * t5183;
	t5048 = t4553 * t5203;
	t5086 = t4799 + t5273;
	t4627 = t5399 + t4749 + t5086;
	t4986 = t4751 + t5086;
	t4628 = t4747 + t4986;
	t4521 = -t4627 * t5383 + t4628 * t4708;
	t4632 = t4793 + t4986;
	t4697 = 2 * t4797 + t4711;
	t5184 = -t5383 / 0.2e1;
	t4541 = t4632 * t4708 + t4697 * t5184;
	t4549 = -t4805 + (t4725 + t5088) * t4797 - (3 * t4791) + t5089 * t4793 + t4798;
	t4988 = -0.8e1 / 0.3e1 * t5301 + (t4797 * t4711) - 0.5e1 / 0.3e1 * t4791 + t5087 * t4793 + t4799 * t5085;
	t4919 = pkin(2) * t4988;
	t4447 = t4521 * t5214 + t4549 * t5184 + t4754 * t4919 + (t4541 * t4707 - t5120) * t5378;
	t5143 = t4447 * t5323;
	t5217 = -0.6e1 * t5299;
	t5228 = 0.6e1 * t5338;
	t5256 = -0.6e1 * t5394;
	t4420 = 0.16e2 * t5048 + 0.8e1 * t5000 - 0.12e2 * t5143 + t4480 * t5217 + (t4476 * t5256 + t4753 * t4940) * pkin(3) + (t4449 * t5228 + t4754 * t4941) * pkin(2);
	t4406 = t4412 * t4642 + t4420 * t4800;
	t4661 = t4774 + t4789 + t5078;
	t4663 = t4681 - pkin(3);
	t4561 = t4661 + t4691 + t5018;
	t5134 = t4561 * t4660;
	t5254 = pkin(1) * t5451;
	t5348 = t4587 * t4800;
	t4435 = -t5134 + t5348 + (t4661 * t5321 + t4663 * t5254) * pkin(2) + (-t4679 - t4777 + t5225 - 0.2e1 * t5345) * pkin(3);
	t5422 = t4435 / 0.4e1;
	t5108 = t4416 * t5422;
	t5209 = (0.4e1 * t4718 - 0.2e1) * pkin(3);
	t4602 = t4691 + t4789 + t4984;
	t5346 = t4602 * t4755;
	t4511 = t4686 * t5209 + t5346;
	t4586 = -t4681 + t4660;
	t4580 = pkin(3) + t4586;
	t5190 = t4611 * t4707;
	t4502 = t4602 * t4686 + 0.2e1 * t5190;
	t5355 = t4502 * t4753;
	t4438 = t4511 * t4708 + t4580 * t4800 + t5355;
	t5358 = t4438 * t4800;
	t4865 = t4406 * t5108 - t5358 / 0.4e1;
	t5189 = pkin(3) * t4660;
	t4534 = t4664 + t4691 + t5080 + 0.2e1 * t5189;
	t4528 = 0.1e1 / t4534;
	t5302 = 0.1e1 / pkin(5) / pkin(4) ^ 2;
	t5141 = t4528 * t5302;
	t4396 = t4865 * t5141;
	t4395 = t4396 * t4920;
	t5415 = t4438 / 0.4e1;
	t5107 = t4416 * t5415;
	t5360 = t4435 * t4800;
	t4866 = t5360 / 0.4e1 + t4406 * t5107;
	t4397 = t4866 * t5141;
	t4620 = -t5311 + t5319;
	t4388 = -t4397 * t4620 + t4395;
	t4384 = 0.1e1 / t4388;
	t4385 = 0.1e1 / t4388 ^ 2;
	t4417 = 0.1e1 / t4419 ^ 2;
	t4529 = 0.1e1 / t4534 ^ 2;
	t5469 = -0.4e1 * qJD(2);
	t5468 = 0.8e1 * t4443;
	t5467 = -0.6e1 * t4449;
	t5459 = -0.4e1 * t4641;
	t4499 = (t4971 + t4974) * t5459;
	t5059 = -0.2e1 * t5147;
	t4457 = t4693 * t5059 + (t4572 * t4755 - t4579 * t5368) * pkin(1) * t5511 + t4499;
	t5466 = 0.6e1 * t4457;
	t4624 = t4695 - t5191;
	t4630 = t4698 * t4695;
	t5151 = t4696 * t5367;
	t5342 = t4658 * t4753;
	t5455 = -0.2e1 * t4718;
	t4466 = t4630 + (t4753 * t5058 + t5370 * t5455) * t5387 + (-t5151 + (-qJD(2) * t5342 + t4624 * t4755) * t5512) * pkin(3);
	t5465 = -0.4e1 * t4466;
	t5464 = 0.6e1 * t4467;
	t5246 = -0.4e1 * t5383;
	t5249 = pkin(3) * t5459;
	t5453 = -0.2e1 * t4753;
	t4477 = (t4693 * t5453 + t4708 * t5249) * t4755 + (t4579 * t5246 - 0.8e1 * t5040) * pkin(1);
	t5463 = 0.6e1 * t4477;
	t5462 = -0.4e1 * t4492;
	t5460 = -0.6e1 * t4539;
	t5458 = -0.6e1 * t4642;
	t5457 = -0.2e1 * t4714;
	t5454 = -0.8e1 * t4720;
	t5452 = -0.2e1 * t4755;
	t5448 = -24 * qJD(1);
	t5447 = 24 * qJD(1);
	t5446 = 96 * qJD(1);
	t5444 = -0.24e2 * t4718;
	t5439 = pkin(2) * pkin(3);
	t4498 = t4863 * t5439 * t5485;
	t4501 = (-0.8e1 / 0.3e1 * t5145 - 0.8e1 / 0.3e1 * t5154) * t4657 * t5439;
	t4564 = (-0.2e1 / 0.3e1 * t5145 - 0.2e1 / 0.3e1 * t5154) * t5439;
	t5171 = -0.32e2 * t5300;
	t5181 = -0.28e2 * t4485 * t4793;
	t4859 = t4704 * t5171 + t4755 * t5181;
	t5165 = -0.48e2 * t5290;
	t5252 = t4488 * t5474;
	t4898 = t4594 * t5165 + t5252;
	t4911 = t4702 * t4971;
	t4969 = t4702 * t5063;
	t4430 = t4911 * t5504 + t4498 * t5169 + (t4501 * t5242 + t4564 * t5166) * pkin(1) + (t4969 * t5504 + (pkin(1) * t4898 + t4859) * t4753) * qJD(2);
	t4552 = t4571 * t5163;
	t4570 = t4808 * t4836;
	t5250 = t4589 * t5473;
	t4829 = (t4578 * t5452 + (t5250 - 0.24e2 * t5290) * pkin(1)) * t4753;
	t4450 = t4647 * t5304 + t4570 * t4718 + t4552 + (t4755 * t4932 + t4829) * qJD(2);
	t4490 = t4703 * t4515;
	t5061 = pkin(1) * t5165;
	t4507 = (t4701 * t5452 - t4685 + t5061 + t5171) * t4753;
	t4494 = qJD(2) * t4507;
	t4531 = t4832 * t5303;
	t5180 = -0.64e2 * t4518 * t4805;
	t4860 = t4720 * t5180 + t5305 * t5500;
	t5173 = -0.48e2 * t5309;
	t4879 = t4475 * t5173 - 0.4e1 * t4652 * t4717;
	t5028 = -0.96e2 * t4543 * t5290;
	t5029 = 0.96e2 * t4470 * t5322;
	t5142 = t4470 * t5324;
	t5174 = 0.24e2 * t5323;
	t5177 = 0.16e2 * t5326;
	t4401 = t4430 * t5174 + t4490 * t5168 + t4494 * t5177 + (-0.8e1 * t4434 * t5388 - 0.32e2 * t4450 * t5324) * t4687 + (t4472 * t5241 + 0.32e2 * t4531 * t5291) * pkin(1) + (t4753 * t5020 + ((pkin(2) * t5468 + t5029) * t4687 + t4860) * t4754) * qJD(1) + (-0.8e1 * t4484 * t5063 + (pkin(1) * t5028 + 0.8e1 * (-pkin(1) * t4461 + t4443 * t5388 + 0.4e1 * t5142) * pkin(3) + t4879) * t4753) * qJD(2);
	t4514 = -t4627 * t5191 + t4628 * t4695;
	t5182 = -t4707 / 0.2e1;
	t4532 = qJD(2) * t4697 * t5182 + t4632 * t4695;
	t4960 = t5158 * t4708;
	t5071 = t4541 * t5246;
	t5221 = -0.8e1 * t5309;
	t5332 = t4714 * t4718;
	t4433 = t4532 * t5163 + t4514 * t5214 + t4919 * t5370 + (t4549 * t5182 + (t4521 * t5221 + t4717 * t4960) * t4753 + (t5071 + (-0.4e1 * t4716 + 0.12e2 * t5332) * t4791) * pkin(1)) * qJD(2);
	t5306 = t4755 * t4808;
	t5144 = qJD(2) * t5306;
	t4851 = qJD(1) * t5193 - t5144;
	t4615 = 0.4e1 * t4851;
	t4625 = t4695 + 0.2e1 * t5191;
	t4458 = t4712 * t4695 + t4643 * t5059 + t4615 * t4718 + (0.2e1 * t4631 * t5367 + (t4625 * t4755 - t4659 * t5368) * t5512) * pkin(3);
	t4474 = -t4554 * t5191 + t4512;
	t4478 = t4550 * t4695 - 0.2e1 * t4556 * t5191;
	t4536 = t4633 * t4695 + t4713 * t5191 / 0.2e1;
	t5236 = pkin(1) * t5383;
	t4688 = -0.2e1 * t5236;
	t4675 = qJD(2) * t4688;
	t4989 = -0.8e1 / 0.3e1 * t5111;
	t4590 = qJD(2) * t4989 + t4675;
	t4839 = pkin(1) * t5507 + t5324 * t5506 + t5388 * t5467;
	t4849 = -t4482 * t4687 * t5322 + t4447 * t5305;
	t4881 = t4940 * t4755;
	t4945 = t4754 * t5300 * t5445;
	t5055 = t5339 * t5467;
	t5176 = -0.12e2 * t5323;
	t4404 = t4458 * t5053 + t4433 * t5176 + (-0.6e1 * t4478 * t4718 + t5147 * t5499) * t4793 + t4849 * qJD(1) * t5230 + (0.16e2 * t4536 * t4717 - 0.48e2 * t4553 * t5149) * t5390 + (t4945 * t5368 + t4439 * t5228 + (t4756 * t4941 + t5055) * qJD(1)) * pkin(2) + (t4474 * t5256 + (t4595 * t5325 * t5446 - 0.24e2 * t4590 * t4719) * t5314 + (t4753 * t4839 + t4881) * qJD(2)) * pkin(3);
	t5192 = pkin(3) * t5368;
	t5202 = pkin(2) * t5371;
	t4623 = -t5192 + t5202;
	t5414 = t4454 / 0.2e1;
	t5102 = t4437 * t5414;
	t4389 = t4642 * t4401 + t4404 * t4800 + t4623 * t4412 + t4420 * t5102;
	t5436 = -t4389 / 0.4e1;
	t4565 = (-0.4e1 / 0.9e1 * t5145 - 0.4e1 / 0.9e1 * t5154) * t5439;
	t4826 = (-0.12e2 * t4567 * t5309 + (t4585 * t5473 - 0.12e2 * t5290) * pkin(1)) * t4753;
	t4448 = -0.2e1 * t4911 + t4565 * t5213 + t4552 + (t4826 - 0.2e1 * t4969) * qJD(2);
	t4592 = t4675 - 0.8e1 * t4997;
	t5227 = 0.8e1 * t5324;
	t5056 = t4610 * t5227;
	t4902 = t4491 * t5478 + t5056;
	t5139 = t4539 * t5311;
	t5179 = t4610 * t5230;
	t5253 = 0.6e1 * t5388;
	t5312 = t4754 * t4756;
	t5372 = qJD(1) * t4721;
	t4411 = t4533 * t4943 + (t4463 * t5312 * t5448 + t4448 * t5443) * t4797 + ((t4592 * t5454 + t5179 * t5372) * t4804 + (-t4457 * t4756 + t4467 * t5371) * t5377) * t4687 + (t4667 * t5460 + 0.6e1 * t4499 * t5394 + (-0.6e1 * pkin(2) * t5139 + (t4467 * t5253 + t4902) * t4753) * qJD(2)) * pkin(3) + t5281;
	t4616 = 0.2e1 * t4851;
	t4469 = t4616 * t4718 + ((pkin(3) * t4709) + t4644 * t5453) * t5367 + (pkin(1) * t4835 + t4711 * t5370) * pkin(2);
	t4557 = -pkin(3) * t5151 + t4630;
	t4559 = t4694 * t5370 + 0.4e1 * t4808 * t5004;
	t5131 = t4714 * t5298;
	t5356 = t4492 * t4756;
	t4825 = (t4961 * t4755 + (pkin(1) * t4566 - pkin(2) * t5356) * t5502) * pkin(3) + t5131 * t5454;
	t4965 = -0.24e2 * t5032;
	t5074 = 0.4e1 * t5200;
	t5159 = -0.24e2 * t5238;
	t5219 = 0.8e1 * t5305;
	t4422 = -0.4e1 * t4557 * t5235 + t4466 * t5074 + t4469 * t5226 + t4559 * t4718 + ((t4500 * t5219 + t4687 * t4965) * t4754 + (t4756 * t4979 + t5339 * t5462) * pkin(2)) * qJD(1) + ((t4573 * t5452 + t5159 * t5290) * t4753 + t4825) * qJD(2);
	t5099 = t4441 * t5414;
	t4398 = t4642 * t4411 + t4422 * t4800 + t4623 * t4427 + t4437 * t5099;
	t5435 = -t4398 / 0.4e1;
	t4581 = t4667 + t4666;
	t4504 = t4852 - t4581;
	t4444 = t4504 * t4800;
	t5069 = t4686 * t5512 + t4602;
	t4916 = t5069 * t4708;
	t4471 = (t4593 * t4755 - t4611 * t5368) * t5375 + qJD(1) * t4916;
	t4522 = (-t4602 - 0.8e1 * t5189) * t4753;
	t4562 = (t5209 + t5255) * t4708;
	t4479 = qJD(1) * t4562 + qJD(2) * t4522;
	t5401 = t4580 / 0.2e1;
	t5096 = t4454 * t5401;
	t5352 = t4511 * t4756;
	t5354 = t4502 * t4755;
	t4413 = t4444 + t4437 * t5096 + t4471 * t4753 + qJD(2) * t5354 + (qJD(1) * t5352 + t4479 * t4754) * pkin(2);
	t5434 = -t4413 / 0.4e1;
	t5433 = -t4413 / 0.8e1;
	t5432 = t4413 / 0.4e1;
	t4942 = -t4561 * t4755 + t4663 * t5512;
	t4830 = t4661 * t5319 + t4754 * t4942;
	t4545 = t4677 + t4831;
	t4888 = -t4545 * t4755 + t4561 * t5368;
	t5400 = t4587 / 0.2e1;
	t5095 = t4454 * t5400;
	t5353 = t4505 * t4800;
	t4414 = t5353 + t4437 * t5095 + t4888 * t4686 + (t4963 + 0.4e1 * t5003 - 0.2e1 * t5347) * pkin(3) + (qJD(1) * t4830 + t4581 * t5254 + t4661 * t5145) * pkin(2);
	t5431 = -t4414 / 0.4e1;
	t5430 = t4414 / 0.4e1;
	t5429 = t4414 / 0.8e1;
	t5428 = t4416 / 0.4e1;
	t4486 = 0.2e1 * t4618 * t4707 + t4916;
	t4598 = t4620 * pkin(2);
	t4421 = -t4598 * t4800 + t4452 * t5096 + t4486 * t4753 + (t4562 * t4754 + t5352) * pkin(2);
	t5427 = t4421 / 0.4e1;
	t4599 = t4681 + t5194;
	t4606 = t4690 - 0.4e1 * t5064;
	t5125 = t4721 * t5317;
	t4423 = t4599 * t4800 + t4452 * t5095 - t4606 * t4660 + t5125 * t5476 + (t4618 * t5455 + t5052) * pkin(3) + t4830 * pkin(2);
	t5426 = t4423 / 0.4e1;
	t4424 = pkin(3) * t4611 * t5457 + t4459 * t5096 + t4522 * t4708 - t5348 + t5354;
	t5425 = t4424 / 0.4e1;
	t5204 = pkin(1) * t5305;
	t4425 = t4586 * t4800 + t4459 * t5095 + (t4561 * t4686 + 0.4e1 * t5190) * t4753 + (t5204 * t5452 + (t4661 * t4755 + t4718 * t5248) * pkin(2)) * t4754;
	t5424 = t4425 / 0.4e1;
	t5423 = -t4435 / 0.4e1;
	t5421 = t4435 / 0.8e1;
	t5420 = -t4437 / 0.8e1;
	t5419 = t4437 / 0.2e1;
	t5417 = -t4438 / 0.4e1;
	t5416 = -t4438 / 0.8e1;
	t5413 = t4459 / 0.2e1;
	t5412 = -t4487 / 0.4e1;
	t5411 = t4487 / 0.4e1;
	t5409 = -t4489 / 0.4e1;
	t5408 = t4497 / 0.4e1;
	t5407 = t4504 / 0.2e1;
	t5406 = t4505 / 0.2e1;
	t5405 = -t4563 / 0.4e1;
	t5404 = t4563 / 0.4e1;
	t5403 = t4575 / 0.4e1;
	t5402 = -t4575 / 0.4e1;
	t5398 = -t4800 / 0.4e1;
	t5396 = pkin(1) * qJD(2);
	t5395 = pkin(1) * t4687;
	t5384 = pkin(3) * t4631;
	t5380 = -0.4e1 * t5440;
	t4843 = t4529 * t4866;
	t5103 = t4454 * t5421;
	t5105 = t4417 * t5417;
	t4368 = (-t4487 * t4843 + (t4414 * t5397 + t4437 * t5103 + t4389 * t5107 + (t4398 * t5105 + t4413 * t5428) * t4406) * t4528) * t5302;
	t4523 = -t4863 - t4864;
	t4842 = t4529 * t4865;
	t5100 = t4454 * t5416;
	t5106 = t4417 * t5423;
	t4367 = (-t4487 * t4842 + (t4389 * t5108 + t4413 * t5398 + t4437 * t5100 + (t4398 * t5106 + t4414 * t5428) * t4406) * t4528) * t5302;
	t5123 = qJD(1) * t5321;
	t4524 = qJD(2) * t4920 - t5117 - t5123;
	t5287 = t4367 * t4620 + t4396 * t4524;
	t4359 = t4368 * t4920 + t4397 * t4523 + t5287;
	t5282 = t4367 * t4920 + t4396 * t4523;
	t4360 = -t4368 * t4620 - t4397 * t4524 + t5282;
	t4394 = t4396 * t4620;
	t4387 = t4397 * t4920 + t4394;
	t4383 = t4387 ^ 2;
	t4380 = t4383 * t4385 + 0.1e1;
	t4378 = 0.1e1 / t4380;
	t5361 = t4385 * t4387;
	t4351 = qJD(1) + (t4359 * t4384 - t4360 * t5361) * t4378;
	t4377 = qJ(1) + atan2(t4387, t4388);
	t4375 = sin(t4377);
	t5365 = t4351 * t4375;
	t4376 = cos(t4377);
	t5364 = t4351 * t4376;
	t5362 = t4360 * t4384 * t4385;
	t5363 = 0.2e1 * (t4359 * t5361 - t4383 * t5362) / t4380 ^ 2;
	t5359 = t4437 * t4454 / t4456;
	t5357 = t4487 * t4528 * t4529;
	t5275 = t4715 - t4721;
	t4896 = t5275 * t4797 * t5234;
	t4574 = t4678 + t4896;
	t5350 = t4574 * t4718;
	t5335 = t4703 * t4718;
	t5331 = t4714 * t4755;
	t5330 = t4714 * t4791;
	t5328 = t4715 * t4797;
	t5327 = t4718 * t4754;
	t5316 = t4753 * t4800;
	t5308 = t4755 * t4800;
	t5307 = t4755 * t4804;
	t5292 = t4808 * t4714;
	t4980 = t4755 * t5070;
	t4828 = pkin(2) * (-t4717 * t5012 + t4980);
	t4837 = pkin(2) * (-0.16e2 * t4657 * t5299 - t4716 * t5158);
	t4440 = t4859 * t4753 + t4754 * t4828 + (t4753 * t4898 + t4754 * t4837) * pkin(1);
	t5025 = -0.24e2 * t5129;
	t5247 = -0.6e1 * t5383;
	t5167 = -0.24e2 * t5291;
	t4968 = pkin(2) * t4703 * t5167;
	t5279 = t4754 * t4968 + t4622;
	t4445 = (-0.24e2 * t4538 * t5318 + t5019) * t4755 + (pkin(2) * t4669 * t5025 + t4495 * t5247) * pkin(1) + t5279;
	t4653 = t5040 * t5477;
	t5211 = -0.4e1 * t5291;
	t4850 = pkin(2) * (t4755 * t5073 + t5211);
	t4462 = t4754 * t4850 + t4653 + t4829;
	t5022 = -0.64e2 * t5116;
	t5026 = -0.32e2 * t5133;
	t4408 = t4462 * t5026 + t4440 * t5174 + t4507 * t5177 + (0.32e2 * pkin(3) * t5142 + (pkin(3) * t5508 + t5028) * pkin(1) + t4879) * t4753 + (0.8e1 * (t4443 * t5383 - t4445 * t4687) * t4756 + (t4944 + t4755 * t5240 + (t4716 * t5022 + t5299 * t5498) * pkin(1)) * t4754) * pkin(2);
	t5229 = -0.8e1 * t4521 * t4793;
	t4446 = (t4753 * t5229 - pkin(3) * t4549 / 0.2e1) * t4755 + (-0.4e1 * t4627 * t4808 + t4753 * t4960) * t4717 + (t5071 - 0.4e1 * t5301 + (-(2 * t4697 * t4793) + 0.12e2 * t5330) * t4718) * pkin(1);
	t4998 = t4717 * t5115;
	t4451 = -0.4e1 * t4998 + t4862 + (t4527 * t5246 + (-0.4e1 * t4639 * t4793 + 0.24e2 * t5035) * t4718) * pkin(1);
	t4481 = t5211 + 0.2e1 * (-t4643 * t4753 + t5384) * t4755 + (t4659 * t5245 + t5214) * pkin(1);
	t4607 = t4989 + t4688;
	t4409 = t4446 * t5176 + 0.12e2 * t4556 * t5291 + (t4451 * t5253 + t4481 * t5227) * t4687 + pkin(3) * t4881 + (t4554 * t5213 + t4713 * t5218) * pkin(1) + (pkin(2) * t4945 + t4553 * t5061 + t5309 * t5499 + (t4607 * t5178 + t4839) * pkin(3)) * t4753;
	t4846 = qJD(1) * t4718 * (t4686 * t5388 + t5328);
	t4956 = t4681 * t4660;
	t5156 = qJD(1) * t5328;
	t5049 = pkin(1) * t5156;
	t5137 = t4593 * t5320;
	t4432 = (0.8e1 * t5137 + 0.8e1 * t4846 + (-t4611 * t5015 - 0.16e2 * t4956) * qJD(2)) * t4793 + (0.8e1 * t4755 * t5049 + (t4544 * t4753 + t4560 * t5367) * t5233 + (t5136 * t5469 + (t4560 * t5321 + t4603 * t5310) * t5234) * pkin(2)) * pkin(3);
	t5066 = pkin(1) * t5191;
	t4676 = -0.2e1 * t5066;
	t4861 = pkin(1) * t4954 * t5300;
	t4905 = t5035 * t5335;
	t4870 = qJD(2) * t4905;
	t4877 = qJD(2) * t4915;
	t4907 = t4753 * t4966;
	t4909 = t4756 * t4968;
	t5005 = t4714 * t5144;
	t4959 = pkin(1) * t5005;
	t4921 = qJD(1) * t4909 - 0.24e2 * qJD(2) * t5046 - 0.24e2 * t4535 * t5111 + 0.48e2 * t4713 * t4959 + 0.72e2 * t4870;
	t5067 = pkin(1) * t5196;
	t5014 = 0.48e2 * t5067;
	t4927 = t4753 * t5014;
	t4931 = t5031 * t5376;
	t4947 = 0.24e2 * t5006;
	t4948 = -0.48e2 * t5006;
	t4949 = t5132 * t4708;
	t4951 = t4595 * t5034;
	t5126 = t4720 * t5307;
	t4952 = pkin(3) * qJD(2) * t5126;
	t5038 = t5290 * t5388;
	t4957 = qJD(1) * t5038;
	t4958 = qJD(1) * t5039;
	t4967 = t5178 * t4707;
	t5101 = -t5359 / 0.4e1;
	t4992 = t4459 * t5101;
	t5017 = 0.2e1 * t5276;
	t5024 = -0.64e2 * t5127;
	t5037 = t4793 * t4681;
	t5198 = t4714 * t4708;
	t5041 = t4791 * t5198;
	t5072 = 0.2e1 * t5186;
	t5075 = -0.8e1 * t5200;
	t5077 = pkin(1) * t5221;
	t5092 = -0.4e1 * t4571 * t5236 + t4958 * t5477 + 0.8e1 * t4877;
	t5097 = t4454 * t5413;
	t5104 = t4420 * t5414;
	t5112 = qJD(2) * t5299;
	t5150 = qJD(2) * t5332;
	t5164 = 0.12e2 * t5290;
	t5224 = -0.2e1 * t5320;
	t5231 = 0.4e1 * t4755;
	t5232 = 0.2e1 * t4753;
	t4371 = (t4676 * t5495 + t5112 * t5499 + t4952 * t5506 + t5066 * t5507 + t5064 * t5509 - 0.48e2 * t4536 * t5047 + t4590 * t4967 + 0.6e1 * t4474 * t5236 + (-t4615 * t4755 - t4625 * t5440) * t5232 * t5053 - 0.12e2 * t4480 * t5113 + t4446 * t4947 + t4554 * t4997 * t5470 - 0.32e2 * t4713 * t5120 * t5396 - t4493 * t5192 + 0.12e2 * t4478 * t5111 + 0.96e2 * t4553 * t4959 - 0.8e1 * t4458 * t5033 + ((t4540 * t5220 + (t4520 * t5473 + 0.24e2 * t4957) * pkin(1)) * t5501 + (t4514 * t5221 + t4532 * t5380 + t4695 * t5011) * t5176) * t4753 + t5517 * t4481 + t5513 * t4451 + t5515 * t4449) * t4800 + t4409 * t5102 + t4404 * t5097 + t4420 * t4992 + t4432 * t5104 - t4412 * t5191 - t4401 * t5383 + t4623 * t4408 + t4642 * (0.96e2 * t4542 * t4877 + t5066 * t5508 - 0.96e2 * t5138 * t5396 - 0.8e1 * t4472 * t5236 + (t4755 * t4939 + (t4515 * t5247 - 0.24e2 * t4669 * t4958) * pkin(1) + t4921) * t5075 - 0.96e2 * t4531 * t5047 + t4440 * t4948 + 0.288e3 * t4669 * t4870 + t4973 * t5468 + t5344 * t5469 + 0.32e2 * t4470 * t4952 - 0.48e2 * t4490 * t5111 + (-0.28e2 * t4498 * t5111 + t4828 * t5370 + ((t4501 * t5474 + t4564 * t5165) * t4753 + t4837 * t5370) * pkin(1)) * t5174 + t5064 * t5510 + 0.192e3 * t4543 * t4959 + (t4570 * t5224 + t4850 * t5370 + t5092) * t5026 + 0.12e2 * t4652 * t5150 + 0.32e2 * t4450 * t5033 + 0.48e2 * (t5113 - t5112) * t4475 + t5518 * t4462 + t5514 * t4445) + ((0.24e2 * t4951 + (0.8e1 / 0.3e1 * t4714 - 0.8e1 / 0.3e1 * t4718) * t4793 * t5495 + (t4716 * t4960 + 0.8e1 * t4521 * t5329 + t4549 * t5183 + (0.12e2 * t4627 * t5313 - 0.32e2 * t5041 + t5229) * t4718 + (0.40e2 * t5120 + (-pkin(3) * t4541 + t4697 * t5318 - 0.6e1 * t4753 * t5330) * t5231) * pkin(1)) * t5176 + 0.288e3 * t5041 * t5335 - 0.36e2 * t4556 * t5130 + ((0.12e2 * t4718 * t5115 + t5385) * t4753 - t4793 * t4555 * t5015 + (0.24e2 * t5036 + (t4527 * t5473 + t4639 * t5223 - 0.48e2 * t4714 * t5195) * t4755) * pkin(1)) * t5501 - 0.48e2 * t5048 + t4607 * t4967 - 0.96e2 * t4949 + (t5207 * t5472 + t4643 * t5017 + (t5077 + t5164 - 0.2e1 * t5384) * t4753) * t5053) * t4800 + t4642 * ((-0.48e2 * t5203 - t5341 - 0.2e1 * t5336 - 0.32e2 * t5301 + (0.96e2 * pkin(1) * t5306 + 0.96e2 * t4718 * t4791 + (2 * t4701)) * t4714) * t5177 + ((-t4495 * t5394 + t4542 * t4681) * t5373 + (0.24e2 * t4538 * t5276 + t4669 * t4927) * t4793) * t5075 + 0.256e3 * t4861 + (0.4e1 * t4910 + 0.28e2 * t4485 * t5329 - 0.32e2 * t5114 + (0.64e2 * t4656 * t5035 + 0.96e2 * t4704 * t5330 + t5181) * t4718 + ((-0.48e2 * t4594 * t4808 + 0.128e3 / 0.3e1 * t4681 * t4791) * t4717 + (0.96e2 * t4594 * t5292 + 0.32e2 * t4657 * t5037 + t5252) * t4755) * pkin(1)) * t5174 + (t4578 * t5017 + (t5072 + t5164) * t4681 + (t5167 + (t5250 + 0.48e2 * t5292) * t4755) * pkin(1)) * t5026 + t4931)) * qJD(2) + ((t4607 * t4907 + t5487) * t4800 + t4642 * (t4507 * t5024 + t5479)) * qJD(1);
	t5094 = -0.8e1 / 0.3e1 * t5291;
	t5239 = -0.2e1 * t5381;
	t4880 = t4755 * t5239 + t5094;
	t4460 = t4708 * t4880 + t4653 + t4826;
	t4617 = t4688 - 0.8e1 * t5111;
	t5054 = -0.8e1 * t5133;
	t5172 = -0.24e2 * t5309;
	t5175 = 0.12e2 * t5323;
	t4426 = t4617 * t5054 + t4460 * t5175 + (pkin(3) * t4902 + t4533 * t5172) * t4753 + (pkin(1) * t4641 * t5025 - 0.6e1 * t4477 * t5338 + (t4467 * t5319 - t5139) * t5373) * pkin(2) + t5279;
	t4496 = (-(pkin(3) * t4696) + 0.4e1 * t5037) * t4755 + (-pkin(3) * t5342 - t5299) * t5512;
	t5021 = t4681 * t5476;
	t4503 = t4644 * t5224 - 0.2e1 * t5291 + (t4709 * t4755 + t5021) * pkin(3);
	t4431 = t4496 * t5074 + 0.4e1 * t4998 + t4503 * t5226 + t4573 * t5224 + ((t4696 * t5449) - 0.24e2 * t5035) * t4718 * pkin(1) + t4825;
	t4946 = -0.24e2 * t4610 * t5124;
	t5122 = t4753 * t5310;
	t5135 = t4642 * t5323;
	t5205 = pkin(1) * t5320;
	t5206 = pkin(1) * t5299;
	t5244 = -0.4e1 * t4707;
	t4381 = t4441 * t4992 + t4623 * t4426 + t4642 * (t4676 * t5054 + t5092 * t5175 + t4921) + (t4431 * t5419 + t4422 * t5413 + t4441 * t4432 / 0.2e1) * t4454 + (t4642 * (t4880 * t5225 + t5206 * t5459 - t4539 * t4707 - (t4641 * t5244 - 0.8e1 * t5206) * t5200) * t4756 * t5377 + ((t4503 * t5219 + t5131 * t5442) * t4800 - 0.24e2 * t4642 * t4460 * t5305 + ((-0.24e2 * pkin(3) * t4721 * t5307 - 0.4e1 * pkin(2) * t4496) * t4800 + t4642 * (pkin(2) * t5463 + 0.24e2 * t4617 * t5322)) * t4687) * t4754) * qJD(1) + (-0.24e2 * t4957 * t5391 + ((t4687 * t5155 * t5496 + 0.8e1 * t4616 * t5323 - 0.2e1 * t4559) * t4800 - 0.144e3 * t4565 * t4793 * t5135) * t4755 + (0.4e1 * t4557 * t5391 - t4411 + t4642 * (qJD(1) * t4946 + t4499 * t5478 + t4592 * t5227) + ((t4467 * t5458 + t4800 * t5461) * t5371 + ((0.8e1 * pkin(1) * t5155 - 0.8e1 * t4624 * t5395 + t5465) * t4800 + t4642 * (0.24e2 * t4572 * t5395 + t5466)) * t4756) * pkin(2)) * pkin(3)) * t4753 + (((t4714 * t5014 + t4717 * t5159 - 0.12e2 * t4718 * t5121 + t5125 * t5444) * t4800 + 0.12e2 * (0.24e2 * pkin(1) * t5331 + 0.8e1 * t4681 * t4718 + t4717 * t5470) * t5135) * t4808 + ((-0.24e2 * t4753 * t5126 + 0.4e1 * (pkin(2) * t5327 - t5198 + t5205) * t5074 - 0.8e1 * t4696 * t5205) * t4800 + t4642 * (-0.96e2 * t5122 * t5339 * t5392 + t5054 * t5015 + t4641 * t4927 + 0.12e2 * t5276 * t5175 * t4567 + (0.24e2 * t4714 + t5444) * t4533)) * t4793 + (((-0.2e1 * t5067 - t5333) * t5226 + 0.4e1 * t5208 + (t5054 - t4621) * t4753) * t4800 - t4755 * t4427 + t4642 * (t5140 * t5377 + (t5349 * t5477 + 0.2e1 * t5042) * t5175 + t4491 * t5256 + 0.8e1 * t4617 * t5128 + t4755 * t5056) + (0.4e1 * (-t4755 * t4492 - t4753 * t4496 - t4687 * t4901) * t4800 + (t4755 * t5464 + t4753 * t5463 + 0.24e2 * (t4579 * t5394 - t4641 * t4681) * t4687) * t4642) * t5388) * pkin(3) + ((t4644 * t5226 + t4573) * t4800 + t4693 * t5200 * t5458) * t5017) * qJD(2);
	t4390 = t4642 * t4408 + t4409 * t4800 - t4412 * t5383 + t4420 * t5097;
	t4991 = t4580 * t5101;
	t4402 = -t5353 + t4459 * t4991 + t4471 * t4755 - qJD(2) * t5355 + t4522 * t4695 + (qJD(1) * t5021 - qJD(2) * t5346) * t4708 + (-t4587 * t4437 / 0.2e1 + t4459 * t5407 + t4432 * t5401) * t4454 + (t4593 * t5457 - 0.4e1 * t5003 + t4754 * (t5276 * qJD(2) * t4686 - pkin(2) * t5008) * t5376) * pkin(3);
	t4990 = t4587 * t5101;
	t5016 = 0.2e1 * t5275;
	t4403 = t4444 + t4459 * t4990 + t4545 * t5340 + (t4432 * t5400 + t4459 * t5406 + t4586 * t5419) * t4454 + (t5134 + (-pkin(2) * t4661 + 0.2e1 * t5204) * t5321) * qJD(2) + (t4561 * t4681 + (t4661 * t5388 + t5016 * t5392) * t4755) * qJD(1) + (t4846 + t5137 + (-t4611 * t5276 - 0.2e1 * t4956) * qJD(2)) * t5511;
	t4405 = t4642 * t4426 - t4427 * t5383 + t4431 * t4800 + t4441 * t5097;
	t5109 = t4406 * t5494;
	t4834 = (-t5358 / 0.2e1 + t4435 * t5109) * t5357;
	t4854 = t4417 * (t4398 * t5402 + t4405 * t5411);
	t4855 = t4417 * (t4390 * t5435 + t4405 * t5436);
	t4858 = t4416 * (t4389 * t5403 + t4390 * t5412);
	t4891 = t4414 * t5403 + t4425 * t5412;
	t4892 = t4413 * t5402 + t4424 * t5411;
	t5013 = t5359 / 0.16e2;
	t4925 = t4459 * t5013;
	t5110 = t4398 * t4417 * t5494;
	t4995 = t4435 * t5110;
	t5289 = (-t4575 * t4834 + (t4892 * t4800 + t4435 * t4858 + t5481 * t4438 + (t4435 * t4854 + (t4435 * t5408 + t4891) * t4416) * t4406) * t4529 + (t4438 * t4925 + t4402 * t5398 + t4435 * t4855 + (t4424 * t5420 + t4432 * t5416 + t4459 * t5433) * t4454 + (t4371 * t5422 + t4389 * t5424 + t4390 * t5430) * t4416 + (t4405 * t4995 + t4403 * t5428 + (t4381 * t5423 + t4405 * t5431 + t4425 * t5435) * t4417) * t4406) * t4528) * t5302 - t4368;
	t4468 = t5484 * t5197;
	t4955 = t4753 * t5038;
	t4591 = -0.24e2 * t4703 * t4955;
	t5060 = pkin(1) * t5172;
	t4473 = t4591 + (t4669 * t5060 + t5251) * t5197;
	t4626 = t4977 * t5520;
	t4899 = t5072 + 0.4e1 * t5290;
	t4513 = -t4899 * t5197 + t4626;
	t4410 = t4513 * t5026 - t4468 * t5174 + (t4687 * t5029 + t4860) * t4754 + (t5339 * t5468 + (-0.8e1 * t4687 * t4473 + (t4718 * t5027 + t5240 + (t4542 * t5173 + t4717 * t5022) * pkin(1)) * t4753) * t4756) * pkin(2);
	t4962 = t4655 * t5212 - t4526;
	t4464 = ((t4640 * t5243 - 0.8e1 * t5291) * pkin(1) - t4962) * t5388;
	t5161 = t4632 * t5380;
	t4827 = t4628 * t5216 + t4755 * t5161 - t4988;
	t4465 = t4827 * t5388;
	t4654 = t5062 * t5512;
	t4547 = t5050 * t5388 + t4654;
	t4415 = t4547 * t5053 - t4465 * t5176 + (0.4e1 * t4595 * t4720 * t5187 + t4849) * t5230 + (t5055 + (t4550 * t5217 + 0.6e1 * t4687 * t4464 + (-0.6e1 * t4526 * t4707 + t4633 * t5166) * pkin(1) + t4941) * t4756) * pkin(2);
	t5002 = t4618 * t5147;
	t5007 = t4756 * t5123;
	t4429 = (0.8e1 * t5002 - 0.4e1 * t5350) * t4793 + (t4692 * t5016 - 0.4e1 * t5068) * qJD(1) + ((t4605 * t5368 - t4755 * t5090) * t5233 + (t5367 * t5456 + 0.24e2 * t5007) * t5392 + ((-qJD(1) * t4560 + qJD(2) * t4603) * t4756 * t5231 + (0.4e1 * t5153 - 0.4e1 * t5351 + (-t4603 * t4753 - t4605 * t4755) * t5234) * t4754) * pkin(2)) * pkin(3);
	t4847 = pkin(3) * (-qJD(2) * t5310 + t5123);
	t4869 = qJD(1) * t4905;
	t4871 = t5005 * t5199;
	t4922 = t4756 * t4997;
	t5157 = qJD(1) * t5338;
	t4924 = t4715 * t4804 * t5157;
	t4976 = qJD(2) * t5065;
	t4993 = t4452 * t5101;
	t5009 = qJD(1) * t5129;
	t5010 = t4715 * t4805 * t5372;
	t5044 = pkin(2) * t5157;
	t5091 = 0.4e1 * t5486;
	t5093 = qJD(2) * t4909 + 0.24e2 * t4869 + 0.48e2 * t4871;
	t5098 = t4452 * t5414;
	t5185 = t4797 * t5338;
	t5277 = 0.2e1 * t5516;
	t4374 = (t4590 * t4907 + t5201 * t5509 + t4951 * t5446 + t5143 * t5447 - 0.24e2 * t4447 * t5156 - t4465 * t4947 + t5044 * t5467 - 0.48e2 * t4633 * t4955 * t5396 - 0.24e2 * t4458 * t4999 + 0.48e2 * t4482 * t4924 + 0.6e1 * (0.16e2 * t4655 * t4922 + t4962 * t5371 + (-t4640 * t5492 + t5493) * pkin(1)) * t5185 + t4483 * t5202 - 0.288e3 * t4595 * t5010 * t5383 + 0.6e1 * t4449 * t4976 - t5277 * t5053 + 0.24e2 * t4433 * t5119 + 0.6e1 * t5516 * t4526 + (t5000 + t4949) * t5448 + t5517 * t4547 + t5513 * t4464 + (((t4628 * t5221 + t5011 + t5161) * t5146 + t4827 * t5371) * t5176 + (-t5050 * t5371 - 0.8e1 * t4922) * t5053 + (0.6e1 * t5009 + 0.12e2 * t4922) * t4550) * pkin(2)) * t4800 + t4415 * t5102 + t4404 * t5098 + t4420 * t4993 + t4429 * t5104 + t4412 * t4695 + t4401 * t4708 + t4623 * t4410 + t4642 * (t5001 * t5446 + 0.48e2 * t4442 * t5156 + t5155 * t5500 + ((0.6e1 * t4542 * t4847 + 0.24e2 * t4669 * t5483) * pkin(2) + t5093) * t5075 + (t5484 * t5123 + (t4980 + (0.128e3 / 0.3e1 * t5331 - 0.64e2 / 0.3e1 * t4717) * t5343 + ((-0.32e2 / 0.3e1 * t4716 + 0.32e2 * t5332) * t4791 + t5276 * t4657 * t5496) * pkin(1)) * t5366) * pkin(2) * t5174 + t5201 * t5510 + 0.192e3 * t4518 * t5010 - t4468 * t4948 + 0.192e3 * t4669 * t4871 + t5044 * t5468 + ((t4899 * t5123 + (t5211 + (t5073 + 0.8e1 * t5292) * t4755) * t5366) * pkin(2) + t5091) * t5026 + 0.96e2 * t4450 * t4999 + 0.96e2 * t4669 * t4869 - 0.192e3 * t4470 * t4924 + t4494 * t5024 + 0.192e3 * t4914 * t5150 - 0.48e2 * t4430 * t5119 + 0.48e2 * t5519 * t4542 + t5518 * t4513 + t5514 * t4473) + (-0.16e2 * t4633 * t5036 * t5391 + t4642 * (t4719 * t5180 + 0.64e2 * t4861 + t4931)) * qJD(1) + (t4642 * t5479 + t5487 * t4800) * qJD(2);
	t4917 = 0.8e1 / 0.3e1 * t5290 + 0.2e1 * t5381;
	t4510 = -t4917 * t5197 + t4626;
	t4525 = (t5077 + t5249) * t5197;
	t5023 = -0.24e2 * t5119;
	t4428 = t4463 * t5023 + t4591 + (t4687 * t4804 * t5179 + 0.12e2 * t4510 * t4797) * t4721 + (t5339 * t5464 + (-0.6e1 * t4687 * t4525 + (pkin(3) * t5460 + t4641 * t5060) * t4753) * t4756) * pkin(2);
	t4537 = t4654 - t5491;
	t4548 = t4654 + (t4711 + t5215) * t5388;
	t4436 = t4548 * t5226 + (pkin(2) * t5462 + t4965) * t5339 + (0.8e1 * t4500 * t4754 * t4797 + t4694 * t4718 + (0.4e1 * t4537 * t4687 - t4604 + (t4698 * t5244 + t5210) * pkin(1)) * pkin(2)) * t4756;
	t5222 = 0.8e1 * t5312;
	t4382 = ((t4469 * t5222 + 0.4e1 * t4721 * t5277) * t4797 + (-0.2e1 * t4694 * t5122 + 0.24e2 * (-t4687 * t4707 + t5329) * t5124) * qJD(2) + (-t4694 * t5327 + (0.48e2 * t4715 * t4756 - 0.24e2 * t4720) * t4687 * t5188 + (-0.8e1 * t4500 * t5275 + t4548 * t5222) * t4797) * qJD(1) + ((-t4711 * t5371 - 0.4e1 * t4922 - 0.2e1 * t5009) * t5226 + t4604 * t5371 + 0.4e1 * (t4492 * t4754 - t4537 * t4756) * t5192 + (t4698 * t5492 - t5493) * pkin(1) + (t5277 * t5520 + t4754 * t5465 + 0.16e2 * t4721 * pkin(2) * t4997 + (-t5356 + (-t4537 + t5491) * t4754) * t5234) * t4687) * pkin(2)) * t4800 + t4436 * t5102 + t4422 * t5098 + t4441 * t4993 + t4429 * t5099 + t4427 * t4695 + t4411 * t4708 + t4623 * t4428 + t4642 * (t5044 * t5464 + t5201 * t5466 + t4996 * t5447 + t5093 - 0.48e2 * t5185 * t5483 + 0.24e2 * t4592 * t4999 - 0.48e2 * t4610 * t4924 + t4448 * t5023 - 0.24e2 * t4510 * t5006 + ((t4917 * t5123 + (t5094 + (0.16e2 / 0.3e1 * t5292 + t5239) * t4755) * t5366) * pkin(2) + t5091) * t5175 - 0.6e1 * t4467 * t4976 + t4946 * t5192 + t5515 * t4539 + 0.6e1 * (t5045 + t4975) * t4525) + 0.24e2 * t4642 * ((-t4847 * t5185 + t5486) * t4641 + (t5156 - t5155) * t4463);
	t4391 = t4642 * t4410 + t4412 * t4708 + t4415 * t4800 + t4420 * t5098;
	t4399 = t4581 * t4800 + t4452 * t4990 + (t4606 * t5368 - t4678 * t4755) * t4686 + (-0.2e1 * t4721 * t5367 + 0.4e1 * t5007) * t5392 + (t4429 * t5400 + t4452 * t5406 + t4599 * t5419) * t4454 + (t4896 + 0.4e1 * t5002 - 0.2e1 * t5350) * pkin(3) + ((t4942 * qJD(1) + (-t5316 + (t4661 + 0.4e1 * t5189) * t4755) * qJD(2)) * t4756 + (t4581 * t5512 + (-t4661 * t4753 + (t4686 * t5246 - t4606 - t4800) * t4755) * qJD(1) + t4888) * t4754) * pkin(2);
	t4400 = t4452 * t4991 + (t4574 * t4707 - t4618 * t5192 + 0.2e1 * t5049) * t5232 + t4486 * t5367 + (t4429 * t5401 + t4452 * t5407 - t4598 * t5419) * t4454 + (t4756 * t4479 + (-t4756 * t5308 + (-t4800 + (t5476 - 0.8e1 * t4707) * t4708) * t5321) * qJD(2) + ((-t4511 + t5316) * t4754 + (t5308 + t5069 * t4753 + t4562 + (t4718 * t5375 - pkin(3) + t5394) * t5503) * t4756) * qJD(1)) * pkin(2);
	t4407 = t4427 * t4708 + t4642 * t4428 + t4436 * t4800 + t4441 * t5098;
	t4853 = t4417 * (t4398 * t5404 + t4407 * t5411);
	t4856 = t4417 * (t4391 * t5435 + t4407 * t5436);
	t4857 = t4416 * (t4389 * t5405 + t4391 * t5412);
	t4893 = t4414 * t5405 + t4423 * t5412;
	t4894 = t4413 * t5404 + t4421 * t5411;
	t4926 = t4452 * t5013;
	t5288 = (t4563 * t4834 + (t4894 * t4800 + t4435 * t4857 + t5480 * t4438 + (t4435 * t4853 + (t4435 * t5409 + t4893) * t4416) * t4406) * t4529 + (t4438 * t4926 + t4400 * t5398 + t4435 * t4856 + (t4421 * t5420 + t4429 * t5416 + t4452 * t5433) * t4454 + (t4374 * t5422 + t4389 * t5426 + t4391 * t5430) * t4416 + (t4399 * t5428 + t4407 * t4995 + (t4382 * t5423 + t4407 * t5431 + t4423 * t5435) * t4417) * t4406) * t4528) * t5302 + t4368;
	t5286 = (t4575 * t4842 + (t4390 * t5108 + t4424 * t5398 + t4459 * t5100 + (t4405 * t5106 + t4416 * t5424) * t4406) * t4528) * t5302 - t4397;
	t4370 = (t4575 * t4843 + (t4425 * t5397 + t4459 * t5103 + t4390 * t5107 + (t4405 * t5105 + t4416 * t5425) * t4406) * t4528) * t5302;
	t5285 = -t4370 - t4396;
	t5284 = (-t4563 * t4842 + (t4391 * t5108 + t4421 * t5398 + t4452 * t5100 + (t4407 * t5106 + t4416 * t5426) * t4406) * t4528) * t5302 + t4397;
	t4373 = (-t4563 * t4843 + (t4423 * t5397 + t4452 * t5103 + t4391 * t5107 + (t4407 * t5105 + t4416 * t5427) * t4406) * t4528) * t5302;
	t5283 = t4373 - t4396;
	t5057 = 0.2e1 * t4387 * t5362;
	t4994 = t4438 * t5110;
	t4833 = (t4438 * t5109 + t5360 / 0.2e1) * t5357;
	t4355 = (-t4575 * t4833 + (t4891 * t4800 + t4438 * t4858 - t5481 * t4435 + (t4438 * t4854 + (t4438 * t5408 - t4892) * t4416) * t4406) * t4529 + (t4403 * t5397 - t4435 * t4925 + t4438 * t4855 + (t4425 * t5418 + t4432 * t5421 + t4459 * t5429) * t4454 + (t4371 * t5415 + t4389 * t5425 + t4390 * t5432) * t4416 + (t4405 * t4994 + t4402 * t5428 + (t4381 * t5417 + t4405 * t5434 + t4424 * t5435) * t4417) * t4406) * t4528) * t5302;
	t4361 = t4370 * t4920 + t4620 * t5286 + t4395;
	t4362 = t4620 * t5285 + t4920 * t5286;
	t4883 = -t4361 * t4384 + t4362 * t5361;
	t4349 = t4883 * t5363 + ((t4355 * t4920 + t4370 * t4523 + t4524 * t5286 + t4620 * t5289 + t5282) * t4384 + t4362 * t5057 + (-t4361 * t4360 - ((-t4355 - t4367) * t4620 + t5289 * t4920 + t5285 * t4524 + t5286 * t4523) * t4387 - t4362 * t4359) * t4385) * t4378;
	t4352 = t4883 * t4378;
	t4887 = t4349 * t4375 - t4352 * t5364;
	t4886 = -t4349 * t4376 - t4352 * t5365;
	t4357 = (t4563 * t4833 + (t4893 * t4800 + t4438 * t4857 - t5480 * t4435 + (t4438 * t4853 + (t4438 * t5409 - t4894) * t4416) * t4406) * t4529 + (-t4435 * t4926 + t4399 * t5397 + t4438 * t4856 + (t4423 * t5418 + t4429 * t5421 + t4452 * t5429) * t4454 + (t4374 * t5415 + t4389 * t5427 + t4391 * t5432) * t4416 + (t4407 * t4994 + t4400 * t5428 + (t4382 * t5417 + t4407 * t5434 + t4421 * t5435) * t4417) * t4406) * t4528) * t5302;
	t4363 = t4620 * t5284 + t4920 * t5283;
	t4364 = -t4373 * t4620 + t4920 * t5284 + t4394;
	t4882 = -t4363 * t4384 + t4364 * t5361;
	t4350 = t4882 * t5363 + ((t5288 * t4620 - (-t4357 + t4367) * t4920 + t5284 * t4524 + t5283 * t4523) * t4384 + t4364 * t5057 + (-t4363 * t4360 - (-t4357 * t4620 - t4373 * t4524 + t4523 * t5284 + t4920 * t5288 + t5287) * t4387 - t4364 * t4359) * t4385) * t4378;
	t4353 = -t4378 * t4882 + 0.1e1;
	t4885 = t4350 * t4375 + t4353 * t5364;
	t4884 = -t4350 * t4376 + t4353 * t5365;
	t1 = [r_i_i_C(1) * t4885 - r_i_i_C(2) * t4884 - t4695, r_i_i_C(1) * t4887 - r_i_i_C(2) * t4886; r_i_i_C(1) * t4884 + r_i_i_C(2) * t4885 - t5202, r_i_i_C(1) * t4886 + r_i_i_C(2) * t4887; 0, 0;];
	JaD_transl = t1;
elseif link_index == 3
	%% Symbolic Calculation
	% From jacobiaD_transl_3_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-27 05:51:22
	% EndTime: 2020-04-27 05:51:22
	% DurationCPUTime: 0.01s
	% Computational Cost: add. (2->2), mult. (8->6), div. (0->0), fcn. (4->2), ass. (0->3)
	t27 = cos(qJ(2));
	t26 = sin(qJ(2));
	t1 = [0, (-r_i_i_C(1) * t27 + r_i_i_C(2) * t26) * qJD(2); 0, (-r_i_i_C(1) * t26 - r_i_i_C(2) * t27) * qJD(2); 0, 0;];
	JaD_transl = t1;
elseif link_index == 4
	%% Symbolic Calculation
	% From jacobiaD_transl_4_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-27 05:51:37
	% EndTime: 2020-04-27 05:51:45
	% DurationCPUTime: 7.71s
	% Computational Cost: add. (74902->281), mult. (173644->521), div. (920->9), fcn. (43430->9), ass. (0->241)
	t1040 = cos(qJ(1));
	t1179 = pkin(2) * t1040;
	t1028 = pkin(1) - t1179;
	t1039 = cos(qJ(2));
	t1016 = t1028 * t1039;
	t1037 = sin(qJ(2));
	t1038 = sin(qJ(1));
	t1156 = t1037 * t1038;
	t1025 = pkin(2) * t1156;
	t1019 = t1025 - pkin(3);
	t1044 = pkin(4) ^ 2;
	t1046 = pkin(3) ^ 2;
	t1047 = pkin(2) ^ 2;
	t1182 = pkin(1) * t1040;
	t1147 = -0.2e1 * t1182;
	t1030 = pkin(2) * t1147;
	t1048 = pkin(1) ^ 2;
	t1150 = t1030 + t1048;
	t1036 = t1040 ^ 2;
	t1197 = 0.2e1 * t1036;
	t1013 = t1047 * t1197 - t1047 + t1150;
	t1148 = -pkin(5) ^ 2 + t1048;
	t1035 = t1039 ^ 2;
	t1199 = -0.2e1 * t1035;
	t1082 = t1013 * t1199 - t1148;
	t1107 = t1047 + t1148;
	t1017 = 0.3e1 * t1046 + t1044 + t1107;
	t1111 = t1017 * t1156;
	t1153 = t1038 * t1039;
	t1132 = pkin(2) * t1153;
	t1159 = t1028 * t1037;
	t1005 = t1132 + t1159;
	t1086 = t1046 + t1107;
	t1018 = -t1044 + t1086;
	t1010 = t1030 + t1018;
	t1136 = t1018 * t1182;
	t1193 = -pkin(4) + pkin(5);
	t1194 = -pkin(4) - pkin(5);
	t1031 = (t1046 - t1048) * t1047;
	t1201 = 0.4e1 * t1031;
	t1209 = 0.4e1 * pkin(3);
	t1104 = pkin(3) * t1025;
	t1020 = -0.2e1 * t1104;
	t996 = t1020 + t1010;
	t977 = t1036 * t1201 + 0.4e1 * pkin(2) * t1136 - (t1048 + (pkin(2) - t1193) * (pkin(2) + t1193)) * (t1048 + (pkin(2) - t1194) * (pkin(2) + t1194)) + (t1010 * t1025 - t996 * t1016) * t1209 + (0.2e1 * t1044 - 0.6e1 * t1047 + 0.2e1 * t1082 - t1046) * t1046;
	t1049 = sqrt(t977);
	t1164 = t1005 * t1049;
	t997 = t1017 + t1030 - 0.4e1 * t1104;
	t968 = -t997 * t1016 + t1164 + (t1019 * t1147 + t1111) * pkin(2) + (-t1044 - t1046 + (t1197 - 0.3e1) * t1047 + t1082) * pkin(3);
	t966 = 0.1e1 / t968 ^ 2;
	t1004 = -t1025 + t1016;
	t1002 = pkin(3) + t1004;
	t1180 = pkin(2) * t1038;
	t1009 = t1030 + t1044 + t1086;
	t1161 = t1013 * t1039;
	t1129 = pkin(3) * t1161;
	t985 = t1009 * t1028 + 0.2e1 * t1129;
	t1137 = (0.4e1 * t1035 - 0.2e1) * pkin(3);
	t1162 = t1009 * t1039;
	t988 = t1028 * t1137 + t1162;
	t971 = t1002 * t1049 + t1037 * t985 + t988 * t1180;
	t1174 = t966 * t971;
	t1115 = qJD(2) * t1153;
	t1154 = t1037 * t1040;
	t1210 = qJD(1) * t1154 + t1115;
	t1003 = t1210 * pkin(2);
	t1206 = 0.2e1 * pkin(1);
	t1083 = t1019 * t1206 - t1039 * t997;
	t1056 = t1017 * t1154 + t1083 * t1038;
	t1166 = qJD(2) * t1037;
	t1168 = qJD(1) * t1038;
	t1134 = pkin(2) * t1168;
	t1026 = pkin(1) * t1134;
	t1023 = 0.2e1 * t1026;
	t1195 = pkin(2) * pkin(3);
	t1057 = t1210 * t1195;
	t995 = t1023 - 0.4e1 * t1057;
	t1064 = -t995 * t1039 + t997 * t1166;
	t1108 = t1038 * t1040 * t1047;
	t1099 = -0.4e1 * t1108;
	t1084 = qJD(1) * t1099;
	t1117 = t1013 * t1166;
	t1087 = t1039 * t1117;
	t975 = 0.1e1 / t1049;
	t1192 = t975 / 0.2e1;
	t1122 = t1005 * t1192;
	t1006 = t1023 + t1084;
	t1163 = t1006 * t1035;
	t1152 = t1039 * t1040;
	t1073 = t1152 + t1156;
	t1109 = qJD(2) * t1016;
	t1116 = qJD(2) * t1156;
	t987 = t1109 + (t1073 * qJD(1) - t1116) * pkin(2);
	t1169 = t987 * t1049;
	t1058 = 0.4e1 * t1010 * t1154 - 0.4e1 * t996 * t1153;
	t1062 = (-0.4e1 * pkin(1) * pkin(2) * t1018 - 0.8e1 * t1031 * t1040) * t1038;
	t1034 = t1038 ^ 2;
	t1158 = t1034 * t1047;
	t1135 = pkin(1) * t1158;
	t1096 = qJD(1) * t1135;
	t1085 = 0.8e1 * t1096;
	t1203 = 0.4e1 * qJD(2);
	t1142 = t996 * t1203;
	t1196 = -0.8e1 * t1039;
	t994 = t1026 - t1057;
	t970 = (0.8e1 * t1087 - 0.4e1 * t1163) * t1046 + qJD(1) * t1062 + (t1037 * t1085 + (t1037 * t1142 + t994 * t1196) * t1028 + (qJD(1) * t1058 + 0.4e1 * t1010 * t1115) * pkin(2)) * pkin(3);
	t952 = t1169 + t970 * t1122 + t1064 * t1028 + (t1084 + 0.4e1 * t1087 - 0.2e1 * t1163) * pkin(3) + (t1056 * qJD(1) + t1003 * t1147 + t1017 * t1115) * pkin(2);
	t965 = 0.1e1 / t968;
	t1175 = t952 * t965 * t966;
	t1128 = pkin(3) * t1016;
	t993 = t1020 + t1046 + t1047 + 0.2e1 * t1128 + t1150;
	t1186 = pkin(4) * t993;
	t1184 = t1002 / 0.2e1;
	t1123 = t975 * t1184;
	t1165 = qJD(2) * t1039;
	t1167 = qJD(1) * t1040;
	t1110 = qJD(2) * t1159;
	t986 = qJD(1) * t1132 - t1003 - t1110;
	t972 = t986 * t1049;
	t1202 = 0.2e1 * t1028;
	t1072 = (pkin(1) * t1202 + t1009) * t1180;
	t979 = 0.2e1 * (t1006 * t1039 - t1117) * pkin(3) + qJD(1) * t1072;
	t1183 = pkin(1) * t1039;
	t989 = (-t1009 - 0.8e1 * t1128) * t1037;
	t980 = qJD(2) * t989 + (t1137 + 0.2e1 * t1183) * t1134;
	t951 = t972 + t970 * t1123 + t979 * t1037 + t985 * t1165 + (t1038 * t980 + t988 * t1167) * pkin(2);
	t969 = t971 ^ 2;
	t962 = t966 * t969 + 0.1e1;
	t960 = 0.1e1 / t962;
	t1074 = t1153 - t1154;
	t982 = t1026 + (-t1110 + (t1074 * qJD(1) - t1115) * pkin(2)) * pkin(3);
	t1214 = 0.4e1 * (t951 * t1174 - t969 * t1175) / t962 ^ 2 * t1186 - 0.4e1 * pkin(4) * t960 * t982;
	t1143 = t960 * t1186;
	t1089 = -0.2e1 * t966 * t1143;
	t1213 = t952 * t1089 - t1214 * t965;
	t1212 = 0.4e1 * t971 * t1143 * t1175 + t951 * t1089 + t1214 * t1174;
	t1211 = 0.8e1 * t1046;
	t1208 = 0.4e1 * qJD(1);
	t1093 = 0.2e1 * t1143;
	t991 = 0.1e1 / t993 ^ 2;
	t1172 = t982 * t991;
	t1045 = 0.1e1 / pkin(4);
	t1075 = t1045 * t965 * t1093;
	t1118 = qJD(1) * t1152;
	t1061 = t1116 - t1118;
	t1033 = t1037 ^ 2;
	t1097 = t1039 * t1025;
	t1155 = t1037 * t1039;
	t1207 = qJD(1) * t1035 * (t1028 * t1179 + t1158) + t1006 * t1155 + (-0.2e1 * t1028 * t1097 + t1013 * (-t1033 + t1035)) * qJD(2);
	t990 = 0.1e1 / t993;
	t1157 = t1035 * t1046;
	t1178 = pkin(3) * t1039;
	t978 = (pkin(3) * t1028 * t996 + 0.2e1 * t1046 * t1161) * t1037 + (t1010 * t1178 + t1157 * t1202) * t1180;
	t1205 = 0.2e1 * t978;
	t1204 = 0.2e1 * t991;
	t1200 = -0.2e1 * t1033;
	t1198 = 0.2e1 * t1035;
	t1191 = -t982 / 0.2e1;
	t1120 = qJD(1) * t1156;
	t1098 = pkin(2) * t1120;
	t1015 = pkin(3) * t1098;
	t1133 = pkin(2) * t1167;
	t1027 = pkin(1) * t1133;
	t1151 = t1015 + t1027;
	t1190 = -(-t1073 * qJD(2) + t1118) * t1195 / 0.2e1 - t1151 / 0.2e1;
	t1189 = t1015 / 0.2e1 - (t1061 * pkin(2) - t1109) * pkin(3) / 0.2e1;
	t1188 = t990 / 0.2e1;
	t1007 = t1074 * pkin(2);
	t1032 = pkin(1) * t1180;
	t999 = pkin(3) * t1007 + t1032;
	t1187 = -t999 / 0.2e1;
	t1001 = t1005 * pkin(3);
	t1185 = t1001 / 0.2e1;
	t1181 = pkin(1) * t1047;
	t1065 = t1045 * t971 * t1089;
	t943 = qJD(2) + (-t971 * t1172 + t951 * t1188) * t1075 + (-t968 * t1172 + t952 * t1188) * t1065;
	t1121 = t1045 * t1188;
	t956 = qJ(2) + atan2(t971 * t1121, t968 * t1121);
	t954 = sin(t956);
	t1177 = t943 * t954;
	t955 = cos(t956);
	t1176 = t943 * t955;
	t1173 = t970 * t975 / t977;
	t1171 = t991 * t999;
	t1170 = t1001 * t991;
	t1160 = t1028 * t1035;
	t1149 = t1034 - t1036;
	t1146 = -0.2e1 * t1181;
	t1145 = t975 * t1205;
	t1141 = pkin(3) * t1188;
	t1140 = 0.2e1 * t1167;
	t1103 = t1154 * t1195;
	t1011 = t1032 - t1103;
	t1139 = t1011 * t1196;
	t1138 = -0.4e1 * t1157;
	t1131 = pkin(3) * t1167;
	t1130 = pkin(3) * t1166;
	t1127 = t978 * t1173;
	t1126 = 0.4e1 * t990 * t1172;
	t1125 = t970 * t1192;
	t1029 = 0.2e1 * t1032;
	t1014 = t1029 + t1099;
	t1106 = 0.8e1 * t1135;
	t973 = t1014 * t1138 + t1062 + (pkin(2) * t1058 + t1028 * t1139 + t1037 * t1106) * pkin(3);
	t1124 = t973 * t1192;
	t1114 = qJD(2) * t1152;
	t1112 = t1014 * t1155;
	t1105 = t1039 * t1146;
	t1100 = -0.4e1 * t1116;
	t1095 = t999 * t1126;
	t1094 = -t973 * t1173 / 0.4e1;
	t1092 = t1001 * t1126;
	t1088 = 0.2e1 * t1149;
	t1081 = pkin(1) * t1037 * t1108;
	t1024 = 0.2e1 * t1027;
	t1063 = t1149 * t1047 * t1208;
	t1000 = t1024 + t1063;
	t1008 = pkin(2) * t1152 + t1025;
	t1012 = t1029 - 0.4e1 * t1103;
	t957 = t1008 * t1049 + t973 * t1122 - t1012 * t1016 + t1036 * t1037 * t1146 + (t1014 * t1199 + t1099) * pkin(3) + t1056 * pkin(2);
	t947 = (-t968 * t1171 + t957 * t1188) * t1045;
	t981 = 0.2e1 * t1014 * t1178 + t1072;
	t998 = (pkin(3) * t1198 - pkin(3) + t1183) * t1180;
	t953 = t1007 * t1049 + t973 * t1123 + t981 * t1037 + (0.2e1 * t1038 * t998 + t1040 * t988) * pkin(2);
	t948 = (-t971 * t1171 + t953 * t1188) * t1045;
	t1059 = 0.4e1 * t1010 * t1152 + 0.4e1 * t996 * t1156;
	t963 = t1000 * t1138 + (t1112 * t1211 + (pkin(2) * t1059 + t1039 * t1106) * pkin(3)) * qJD(2) - 0.8e1 * pkin(3) * t994 * t1132 + 0.4e1 * (-(-t1114 * t1195 + t1151) * t1178 + t1011 * t1130) * t1202 + (0.24e2 * pkin(3) * t1081 + t1088 * t1201 + (-0.4e1 * t1136 + (-0.4e1 * t996 * t1152 + (-0.4e1 * t1010 * t1037 + t1139) * t1038) * pkin(3)) * pkin(2)) * qJD(1);
	t941 = ((t1007 * t1125 + t986 * t1124 + t1002 * t1094 + t963 * t1123 + 0.2e1 * (t1000 * t1178 - t1014 * t1130 + 0.2e1 * t1096) * t1037 + t981 * t1165) * t1188 + t971 * t1095 + (t951 * t1187 + t971 * t1190 + t953 * t1191) * t1204 + (((-t1061 - t1114 + t1120) * t1049 + (pkin(1) * t1028 * t1140 + t1009 * t1167) * t1037 - t988 * t1168 + t1040 * t980 + t998 * t1140) * t1188 + (-t1061 * pkin(1) + t1100 * t1178 + t1131 * t1198 - t1131) * t990 * t1180) * pkin(2)) * t1075 + (t968 * t1095 + (t1000 * t1199 + t1112 * t1203 + t1063) * t1141 + (t952 * t1187 + t968 * t1190 + t957 * t1191) * t1204 + (t1003 * t1049 + t1008 * t1125 + t987 * t1124 + t1005 * t1094 + t963 * t1122 - (0.4e1 * t1015 + t1024) * t1016 + t1012 * t1110 + t1081 * t1208 + t1036 * qJD(2) * t1105 + ((t1083 * qJD(1) + (-t1037 * t1049 + (t1017 + 0.4e1 * t1128) * t1039) * qJD(2)) * t1040 + (t1003 * t1206 + (-t1017 * t1037 + (-t1012 - t1049) * t1039) * qJD(1) + t1064) * t1038) * pkin(2)) * t1188) * t1065 + t1213 * t948 + t1212 * t947;
	t944 = (-t947 * t1174 + t948 * t965) * t1093;
	t1071 = -t944 * t1176 - t941 * t954;
	t1070 = t944 * t1177 - t941 * t955;
	t959 = t1004 * t1049 + t1005 * t1145 + (t1028 * t997 + 0.4e1 * t1129) * t1037 + (t1040 * t1105 + (t1017 * t1039 + t1160 * t1209) * pkin(2)) * t1038;
	t949 = (t968 * t1170 + t959 * t1188) * t1045;
	t958 = pkin(3) * t1013 * t1200 + t1002 * t1145 + t985 * t1039 + t989 * t1180 - t1164;
	t950 = (t971 * t1170 + t958 * t1188) * t1045;
	t964 = t1207 * t1211 + (t1039 * t1085 + (0.8e1 * t1037 * t994 + t1039 * t1142) * t1028 + (qJD(1) * t1059 + t1010 * t1100) * pkin(2)) * pkin(3);
	t942 = ((-t1169 - t1002 * t1127 + t979 * t1039 - t985 * t1166 + t989 * t1133 + (-0.2e1 * pkin(1) * t1098 - qJD(2) * t1162) * t1180 + (-t1005 * t970 / 0.2e1 + t986 * t1205 + t964 * t1184) * t975 + (t1006 * t1200 - 0.4e1 * t1087 + 0.8e1 * (-qJD(1) * t1097 + (t1028 * t1033 - t1160) * qJD(2)) * t1180) * pkin(3)) * t1188 - t971 * t1092 + (t951 * t1185 + t971 * t1189 + t958 * t1191) * t1204) * t1075 + (-t968 * t1092 + (t952 * t1185 + t968 * t1189 + t959 * t1191) * t1204 + 0.4e1 * t1207 * t1141 + (t1004 * t1125 - t1005 * t1127 + t997 * t1109 + t964 * t1122 + t987 * t1145 + t995 * t1159 + t972 + (t997 * t1025 + (t1017 * t1179 + t1088 * t1181) * t1039) * qJD(1) + (-pkin(2) * t1111 + 0.2e1 * t1081) * qJD(2)) * t1188) * t1065 + t1213 * t950 + t1212 * t949;
	t945 = 0.1e1 + (-t949 * t1174 + t950 * t965) * t1093;
	t1069 = -t945 * t1176 - t942 * t954;
	t1068 = t945 * t1177 - t942 * t955;
	t1 = [t1071 * r_i_i_C(1) + t1070 * r_i_i_C(2), -pkin(3) * t1165 + r_i_i_C(1) * t1069 + r_i_i_C(2) * t1068; -t1070 * r_i_i_C(1) + r_i_i_C(2) * t1071, -r_i_i_C(1) * t1068 + r_i_i_C(2) * t1069 - t1130; 0, 0;];
	JaD_transl = t1;
end