% Analytische Jacobi-Matrix (Translatorisch) für beliebiges Segment von
% fivebar1DE2
% 
% analytische Jacobi-Matrix: Differentieller Zusammenhang zwischen
% Endeffektorposition und verallgemeinerten Koordinaten.
% (Ist für translatorischen Teil egal, kennzeichnet nur den Rechenweg der Herleitung)
% 
% Input:
% qJ [2x1]
%   Generalized joint coordinates (joint angles)
% link_index [1x1 uint8]
%   Index des Segmentes, auf dem der Punkt C liegt (0=Basis).
% r_i_i_C [3x1]
%   Ortsvektor vom KörperKS-Ursprung zum gesuchten Punkt
% pkin [5x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[AB,AE,BC,CD,ED]';
% 
% Output:
% Ja_transl [3x2]
%   Translatorischer Teil der analytischen Jacobi-Matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2020-04-27 06:03
% Revision: 970157063c8b7bcb25458a457551a083b21abdbd (2020-04-26)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function Ja_transl = fivebar1DE2_jacobia_transl_sym_varpar(qJ, link_index, r_i_i_C, ...
  pkin)


%% Coder Information
%#codegen
%$cgargs {zeros(2,1),uint8(0),zeros(3,1),zeros(5,1)}
assert(isreal(qJ) && all(size(qJ) == [2 1]), ...
  'fivebar1DE2_jacobia_transl_sym_varpar: qJ has to be [2x1] (double)');
assert(isa(r_i_i_C,'double') && isreal(r_i_i_C) && all(size(r_i_i_C) == [3 1]), ...
	'fivebar1DE2_jacobia_transl_sym_varpar: Position vector r_i_i_C has to be [3x1] double');
assert(isa(link_index,'uint8') && all(size(link_index) == [1 1]), ...
	'fivebar1DE2_jacobia_transl_sym_varpar: link_index has to be [1x1] uint8');
assert(isreal(pkin) && all(size(pkin) == [5 1]), ...
  'fivebar1DE2_jacobia_transl_sym_varpar: pkin has to be [5x1] (double)');
Ja_transl=NaN(3,2);
if link_index == 0
	%% Symbolic Calculation
	% From jacobia_transl_0_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-27 05:51:21
	% EndTime: 2020-04-27 05:51:21
	% DurationCPUTime: 0.05s
	% Computational Cost: add. (0->0), mult. (0->0), div. (0->0), fcn. (0->0), ass. (0->1)
	t1 = [0, 0; 0, 0; 0, 0;];
	Ja_transl = t1;
elseif link_index == 1
	%% Symbolic Calculation
	% From jacobia_transl_1_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-27 05:51:21
	% EndTime: 2020-04-27 05:51:21
	% DurationCPUTime: 0.06s
	% Computational Cost: add. (2->2), mult. (4->4), div. (0->0), fcn. (4->2), ass. (0->3)
	t2 = cos(qJ(1));
	t1 = sin(qJ(1));
	t3 = [-r_i_i_C(1) * t1 - r_i_i_C(2) * t2, 0; r_i_i_C(1) * t2 - r_i_i_C(2) * t1, 0; 0, 0;];
	Ja_transl = t3;
elseif link_index == 2
	%% Symbolic Calculation
	% From jacobia_transl_2_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-27 05:51:21
	% EndTime: 2020-04-27 05:51:40
	% DurationCPUTime: 17.27s
	% Computational Cost: add. (288434->630), mult. (866898->981), div. (2080->9), fcn. (104002->9), ass. (0->443)
	t257 = pkin(5) ^ 2;
	t256 = t257 ^ 2;
	t260 = pkin(4) ^ 2;
	t259 = t260 ^ 2;
	t425 = t256 - t259;
	t509 = 4 * pkin(3);
	t499 = 2 * pkin(1);
	t413 = 2 * pkin(3);
	t264 = pkin(3) ^ 2;
	t195 = 0.10e2 / 0.3e1 * t264;
	t268 = pkin(2) ^ 2;
	t207 = -0.2e1 / 0.3e1 * t257;
	t212 = 0.2e1 / 0.3e1 * t260;
	t270 = pkin(1) ^ 2;
	t254 = 2 * t270;
	t339 = t207 + t212 + t254;
	t182 = t264 + t270;
	t276 = t268 ^ 2;
	t338 = t207 + t182;
	t438 = t182 * (t212 + t338) + t276;
	t76 = (t195 + t339) * t268 + t438;
	t508 = -0.6e1 * t76;
	t262 = t264 ^ 2;
	t269 = t270 ^ 2;
	t423 = t262 + t269;
	t426 = t254 - t257;
	t443 = t270 * t257;
	t500 = -t256 / 0.6e1 + t259 / 0.6e1;
	t102 = t426 * t264 + t423 - t443 - t500;
	t288 = t102 + t276;
	t78 = (t195 + t426) * t268 + t288;
	t507 = -0.6e1 * t78;
	t225 = sin(qJ(1));
	t180 = pkin(2) * t225;
	t411 = 0.2e1 * t180;
	t490 = 4 * t264;
	t244 = 6 * t264;
	t205 = -t257 / 0.3e1;
	t213 = t260 / 0.3e1;
	t421 = t268 + t270;
	t336 = t264 + t421;
	t128 = t205 + t213 + t336;
	t506 = -0.24e2 * t128;
	t234 = 10 * t264;
	t226 = cos(qJ(2));
	t179 = pkin(3) * t226;
	t400 = pkin(1) * t179;
	t162 = 0.2e1 * t400;
	t174 = -t264 / 0.3e1 + t270;
	t189 = t226 ^ 2;
	t445 = t264 * t189;
	t106 = 0.4e1 / 0.3e1 * t445 + t162 + t174;
	t253 = 3 * t270;
	t501 = t253 - t257 - t260;
	t151 = t501 * t234;
	t238 = -0.6e1 * t257;
	t275 = pkin(2) * t268;
	t265 = t275 ^ 2;
	t237 = -0.5e1 * t257;
	t427 = t237 - 0.5e1 * t260;
	t227 = cos(qJ(1));
	t192 = t227 ^ 2;
	t190 = t192 ^ 2;
	t462 = t190 * t276;
	t177 = t182 ^ 2;
	t418 = t270 - t257;
	t335 = t264 + t418;
	t464 = t177 * (-t260 + t335);
	t505 = 0.7e1 * t265 + ((35 * t264) + (15 * t270) + t427) * t276 + ((21 * t262) + t151 + (9 * t269) + (t238 - 0.6e1 * t260) * t270) * t268 + t464 - 0.24e2 * t106 * t462;
	t224 = sin(qJ(2));
	t504 = t224 * t268;
	t184 = -3 * t264 + t270;
	t387 = 0.4e1 * t445;
	t503 = t184 + t387;
	t502 = t205 - t260 / 0.3e1;
	t498 = -0.4e1 * pkin(2);
	t497 = -4 * pkin(3);
	t496 = -2 * pkin(3);
	t185 = -0.3e1 * t268 + t270;
	t188 = t226 * t189;
	t279 = pkin(3) * t264;
	t463 = t188 * t279;
	t385 = pkin(1) * t463;
	t332 = 0.8e1 * t385;
	t133 = t185 * t332;
	t346 = 0.6e1 * t400;
	t366 = 0.12e2 * t445;
	t208 = -0.3e1 / 0.2e1 * t257;
	t232 = 15 * t262;
	t235 = 18 * t270;
	t249 = 3 * t269;
	t435 = t256 / 0.2e1 - t259 / 0.2e1;
	t309 = -0.3e1 * t443 + t249 + t435;
	t457 = t224 * t225;
	t154 = pkin(2) * t457;
	t326 = pkin(3) * t154;
	t430 = 15 * t264 + t253;
	t469 = t265 + t182 * ((t208 + t254) * t264 - 0.3e1 / 0.2e1 * t443 + t423 + t435);
	t46 = t326 * t507 + (t208 + t430) * t276 + t469 + (t232 + (t235 - 0.9e1 * t257) * t264 + t309) * t268;
	t206 = -t257 / 0.2e1;
	t150 = t206 + t336;
	t311 = -0.4e1 * t326;
	t297 = t150 * t311;
	t61 = t297 + (t244 + t426) * t268 + t288;
	t147 = -0.2e1 * t326;
	t175 = t270 - t268 / 0.3e1;
	t113 = t175 * t147;
	t449 = (pkin(1) + pkin(2)) * (pkin(1) - pkin(2));
	t75 = t150 * t449 + t113;
	t38 = t61 * t346 + t75 * t366 + t133 + t46;
	t495 = 0.8e1 * t38;
	t475 = pkin(2) * t227;
	t159 = pkin(1) - t475;
	t129 = t159 + t179;
	t494 = -0.8e1 * t129;
	t493 = -0.2e1 * t226;
	t492 = -0.2e1 * t227;
	t491 = 4 * t262;
	t489 = pkin(1) * pkin(3);
	t334 = t268 + t418;
	t306 = t264 + t334;
	t145 = -t260 + t306;
	t401 = pkin(1) * t475;
	t164 = -0.2e1 * t401;
	t108 = t164 + t145;
	t143 = t159 * t226;
	t193 = t268 * t490;
	t444 = t268 * t270;
	t165 = t193 - 0.4e1 * t444;
	t239 = 0.2e1 * t260;
	t255 = -2 * t270;
	t459 = t192 * t268;
	t394 = 0.2e1 * t459;
	t422 = -t268 + t270;
	t111 = t164 + t394 + t422;
	t467 = t111 * t189;
	t484 = -pkin(4) + pkin(5);
	t485 = -pkin(4) - pkin(5);
	t88 = t147 + t108;
	t271 = sqrt(t165 * t192 + 0.4e1 * t145 * t401 - t262 - (t270 + (pkin(2) - t484) * (pkin(2) + t484)) * (t270 + (pkin(2) - t485) * (pkin(2) + t485)) + (t239 + t255 + 0.2e1 * t257 - 0.6e1 * t268 - 0.4e1 * t467) * t264 + (t108 * t154 - t88 * t143) * t509);
	t110 = t162 + t503;
	t152 = t260 + t335;
	t236 = -0.2e1 * t257;
	t160 = pkin(1) + t179;
	t191 = t227 * t192;
	t461 = t191 * t275;
	t353 = t160 * t461;
	t374 = pkin(3) * t457;
	t466 = t160 * t227;
	t203 = -t257 / 0.6e1;
	t222 = t268 / 0.2e1;
	t432 = t222 + t270;
	t293 = -t326 + t432;
	t100 = t260 / 0.6e1 + t203 + t293;
	t414 = 4 * pkin(1);
	t450 = (pkin(1) + pkin(3)) * (pkin(1) - pkin(3));
	t219 = t264 / 0.3e1;
	t92 = -0.4e1 / 0.9e1 * t326 + t270 + t268 / 0.3e1 + t219 + t260 / 0.9e1 - t257 / 0.9e1;
	t47 = t174 * t147 + t128 * t450 + 0.6e1 * t92 * t445 + (t100 * t179 + t463) * t414;
	t166 = t422 * t490;
	t347 = 0.4e1 * t400;
	t58 = t128 * t311 + (t244 + t339) * t268 + t438;
	t98 = t147 + t128;
	t48 = t166 * t189 + t98 * t347 + t58;
	t73 = t128 * t449 + t113;
	t33 = -0.8e1 * t110 * t353 + t133 + t73 * t366 + t58 * t346 + t265 + (-t257 + t260 + t430) * t276 + t177 * t152 + (0.12e2 * t47 * t192 + t232 + (t235 + t238 + 0.6e1 * t260) * t264 + t249 + (t236 + t239) * t270) * t268 + 0.6e1 * (-t76 * t374 - t48 * t466) * pkin(2);
	t243 = 5 * t262;
	t419 = t269 + t276;
	t429 = t234 + t254;
	t442 = t270 * t264;
	t109 = t429 * t268 + t243 + t419 + (6 * t442);
	t247 = 0.5e1 * t276;
	t251 = 6 * t270;
	t118 = t247 + (t234 + t251) * t268 + t177;
	t319 = 0.8e1 * t353;
	t395 = -0.4e1 * t459;
	t478 = pkin(1) * t226;
	t245 = 3 * t264;
	t170 = t245 + t421;
	t134 = t170 * t180;
	t472 = pkin(3) * t224;
	t141 = t180 - t472;
	t379 = t264 * t180;
	t318 = t189 * t379;
	t248 = 0.3e1 * t268;
	t168 = t248 + t182;
	t465 = t168 * t224;
	t59 = -0.2e1 * t318 + t134 + (0.2e1 * t141 * t478 - t465) * pkin(3);
	t294 = -t224 * t279 + t379;
	t131 = 0.2e1 * t294;
	t181 = (2 * t264) + t268;
	t183 = -t264 + t270;
	t62 = t181 * t472 + t131 * t189 + (t183 + t162) * t180;
	t91 = -pkin(3) * t465 + t134;
	t167 = pkin(2) * t491 + 0.8e1 * t264 * t275;
	t350 = t279 * t449;
	t93 = t167 * t225 + 0.4e1 * t224 * t350;
	t36 = t62 * t395 + t189 * t93 + (-0.4e1 * t91 * t478 + (t118 + t319) * t224) * pkin(3) + (0.4e1 * t59 * t466 + (-t109 + t332) * t225) * pkin(2);
	t27 = t129 * t33 + t271 * t36;
	t488 = 0.1e1 / t27 / 0.4e1;
	t487 = -0.1e1 / t27 ^ 2 / 0.4e1;
	t43 = 0.1e1 / t271;
	t486 = t43 / 0.2e1;
	t483 = 0.4e1 / 0.3e1 * t268;
	t482 = -t271 / 0.4e1;
	t481 = t271 / 0.4e1;
	t204 = -t257 / 0.4e1;
	t103 = t204 - t264 + t293;
	t220 = t264 / 0.2e1;
	t105 = -0.2e1 / 0.3e1 * t326 + t270 + t220 + t204;
	t434 = t203 - t260 / 0.6e1;
	t342 = t270 + t434;
	t121 = t483 + t220 + t342;
	t340 = t206 - t260 / 0.2e1 + t270;
	t123 = 0.3e1 / 0.2e1 * t268 + t245 + t340;
	t341 = t270 + t502;
	t307 = t264 + t341;
	t126 = t248 + t307;
	t130 = 0.4e1 * t294;
	t135 = 0.16e2 * (t419 - 0.6e1 * t444) * t262;
	t300 = pkin(1) * t318;
	t136 = -0.4e1 * t300;
	t142 = t180 + 0.2e1 * t472;
	t272 = pkin(1) * t270;
	t158 = -12 * pkin(1) * t279 + t272 * t509;
	t404 = -0.2e1 * t472;
	t161 = pkin(1) * t404;
	t169 = 0.2e1 * t268 + t183;
	t173 = -8 * t262 + 12 * t442;
	t176 = t270 - 0.2e1 / 0.3e1 * t268;
	t186 = t224 ^ 2;
	t187 = t189 ^ 2;
	t178 = -0.30e2 * t257 + (60 * t270);
	t252 = 4 * t270;
	t295 = (6 * t269) + t425 - 0.6e1 * t443;
	t314 = -0.32e2 * t353;
	t171 = (t252 + t257) * t264;
	t373 = 0.16e2 * t463;
	t447 = t262 * t187;
	t390 = 0.8e1 * t447;
	t139 = t270 + t268 / 0.4e1 + t264 / 0.4e1 - t257 / 0.8e1;
	t431 = 0.4e1 / 0.7e1 * t270 - t257 / 0.7e1;
	t56 = -0.32e2 / 0.21e2 * t139 * t326 + t276 / 0.7e1 + (0.16e2 / 0.21e2 * t264 + t431) * t268 + t262 / 0.7e1 + t431 * t264 + t269 - 0.3e1 / 0.7e1 * t443 + t425 / 0.42e2;
	t140 = t204 + t219 + t432;
	t218 = 0.4e1 / 0.3e1 * t264;
	t57 = -0.8e1 / 0.3e1 * t140 * t326 + t276 / 0.3e1 + (t218 + t205) * t268 + t269 - t262 / 0.3e1 + (t483 + 0.2e1 / 0.3e1 * t264 + t207) * t270 + t425 / 0.18e2;
	t37 = t176 * t390 + 0.14e2 * t56 * t445 + t174 * t297 + t183 * t276 + (t171 - 0.10e2 / 0.3e1 * t262 + (2 * t269) - t443) * t268 + t102 * t450 + (t105 * t373 + 0.6e1 * t57 * t179) * pkin(1);
	t398 = 0.8e1 * t463;
	t402 = 0.4e1 * t179;
	t250 = 8 * t270;
	t97 = -0.4e1 * t279 * t154 + t193 + t491 + (t236 + t250) * t264;
	t49 = t147 * t450 + t150 * t184 + t189 * t97 + (t103 * t402 + t398) * pkin(1);
	t420 = t269 - t262;
	t50 = t175 * t297 - t265 + (-t195 - t418) * t276 + (t171 + t420 + t500) * t268 + t270 * t102;
	t242 = 7 * t262;
	t55 = (t208 + t253 + (7 * t264)) * t276 + (t242 + (t237 + (10 * t270)) * t264 + t309) * t268 + t469;
	t321 = pkin(1) * t373;
	t67 = t158 * t226 + t173 * t189 + t321 + t390 + t423 - (6 * t442);
	t79 = t147 * t449 + t150 * t185;
	t24 = t49 * t314 + t135 * t187 + 0.24e2 * t50 * t445 + (t236 + t252 + (28 * t264)) * t265 + t152 * t464 + (t178 * t262 + 0.24e2 * t37 * t192 + t269 * t238 + t295 * t244 + t425 * t254 + (4 * t272 ^ 2) + (28 * t279 ^ 2)) * t268 + 0.8e1 * (-t55 * t374 - t38 * t466) * pkin(2) + (0.8e1 * t46 * t179 + 0.32e2 * t79 * t463) * pkin(1) + (t178 * t264 + 0.16e2 * t190 * t67 + (70 * t262) + t276 + t295) * t276;
	t428 = t236 - 0.2e1 * t260;
	t298 = 0.24e2 * t175 * t447 - t265 - ((21 * t264) + t501) * t276 - (t428 * t270 + t151 + t249 + (35 * t262)) * t268 - (t242 + (t250 + t427) * t264 + t270 * (-t260 + t418)) * t182;
	t371 = -0.12e2 * t459;
	t389 = -0.6e1 * t445;
	t343 = t257 / 0.3e1 + t213 + t254;
	t310 = -0.8e1 / 0.3e1 * t447 + t268 * t183 - 0.5e1 / 0.3e1 * t262 + t343 * t264 + t270 * t341;
	t363 = -t472 / 0.2e1;
	t446 = t262 * t188;
	t308 = t222 + t342;
	t122 = t218 + t308;
	t68 = -t121 * t472 + t122 * t180;
	t124 = t264 + t308;
	t77 = t124 * t180 + t169 * t363;
	t196 = -0.20e2 / 0.3e1 * t264;
	t344 = 0.2e1 / 0.3e1 * t257 + t212 + t252;
	t345 = 0.4e1 / 0.3e1 * t257 + 0.4e1 / 0.3e1 * t260 + t255;
	t81 = -t276 + (t196 + t344) * t268 - (3 * t262) + t345 * t264 + t269;
	t39 = t68 * t387 + t81 * t363 + t310 * t180 + (t77 * t179 - t224 * t446) * t414;
	t378 = t279 * t180;
	t317 = t188 * t378;
	t388 = -0.4e1 * t445;
	t337 = t251 + t428;
	t217 = -0.2e1 / 0.3e1 * t260;
	t433 = t207 + t217;
	t69 = t276 + (t429 + t433) * t268 + t243 + t337 * t264 + t270 * (t270 + t433);
	t84 = t247 + (t234 + t337) * t268 + t182 * (t217 + t338);
	t51 = t69 * t180 - t84 * t472;
	t127 = t170 + t502;
	t70 = -t126 * t472 + t127 * t180;
	t138 = t220 + t268 + t434;
	t85 = t138 * t411 + t449 * t472;
	t40 = t85 * t388 + (t70 * t402 - 0.8e1 * t317) * pkin(1) + t51;
	t82 = -0.3e1 * t276 + (t196 + t345) * t268 + t344 * t264 + t420;
	t86 = -0.5e1 / 0.3e1 * t276 + (-t264 + t343) * t268 + t270 * t307;
	t52 = t82 * t180 + t86 * t404;
	t53 = t184 * t180 + t130 * t189 + (t123 * t224 + t142 * t478) * t413;
	t125 = t248 + 0.3e1 / 0.2e1 * t264 + t340;
	t83 = t125 * t180 + t185 * t472 / 0.2e1;
	t28 = t83 * t321 + t53 * t319 + t52 * t389 + t39 * t371 + (t224 * t505 - 0.6e1 * t51 * t478) * pkin(3) + (t298 * t225 + 0.6e1 * t40 * t466) * pkin(2);
	t477 = pkin(1) * t262;
	t299 = -0.64e2 * t449 * t477;
	t301 = pkin(1) * t189 * t378;
	t333 = 0.32e2 / 0.3e1 * t262;
	t302 = t188 * t333;
	t303 = 0.64e2 / 0.3e1 * t139 * t279;
	t312 = t188 * t350;
	t315 = -0.96e2 * t150 * t175 * t279;
	t441 = t279 * t189;
	t383 = pkin(1) * t441;
	t320 = -0.48e2 * t383;
	t476 = pkin(1) * t264;
	t322 = -0.24e2 * t150 * t476;
	t323 = -0.16e2 * t140 * t476;
	t470 = t174 * pkin(3);
	t328 = -0.4e1 * t150 * t470;
	t329 = t450 * t496;
	t330 = -0.48e2 * t78 * t476;
	t384 = pkin(1) * t445;
	t331 = 0.4e1 * t384;
	t453 = t226 * t264;
	t349 = t224 * t453;
	t391 = 0.8e1 * t453;
	t474 = pkin(3) * t159;
	t405 = 0.4e1 * t474;
	t45 = (t111 * t391 + t88 * t405) * t224 + (t108 * t402 + 0.8e1 * t159 * t445) * t180;
	t355 = t45 * t486;
	t365 = -0.24e2 * t441;
	t367 = -0.32e2 * t446;
	t368 = -0.24e2 * t453;
	t369 = 0.24e2 * t459;
	t372 = -0.32e2 * t461;
	t386 = pkin(1) * t447;
	t392 = -0.8e1 * t453;
	t396 = 0.8e1 * t461;
	t397 = -0.8e1 * t461;
	t399 = -0.4e1 * t463;
	t403 = 0.2e1 * t179;
	t407 = 0.6e1 * t475;
	t409 = -0.6e1 * t475;
	t410 = -0.8e1 * t475;
	t415 = -0.8e1 * t55 * pkin(3);
	t416 = pkin(3) * t507;
	t313 = t224 * t365;
	t439 = pkin(1) * t185 * t313 - 0.24e2 * t175 * t317;
	t440 = -4 * t489;
	t15 = ((t123 * t403 + t331 + t399) * t319 + (0.12e2 * t186 * t189 * t477 + t121 * t399 - 0.2e1 * t169 * t384 - 0.4e1 * t386) * t371 + 0.8e1 * t185 * t386 + 0.12e2 * t86 * t463 + 0.6e1 * t84 * t384 + (-t81 * t371 / 0.2e1 + t505) * t179) * t271 + t28 * t355 + t129 * t136 * t314 + ((0.6e1 * (-0.4e1 * t126 * t384 - t84 * t179 - 0.4e1 * t312) * t271 + t439 * t494) * t466 + ((-pkin(1) * t187 * t333 - t188 * t303 + t189 * t323 + t226 * t328) * t369 + t187 * t299 + t188 * t315 + t189 * t330 + t226 * t415 + ((t226 * t329 + t399) * t372 + (t189 * t322 + t226 * t416) * t410) * t160) * t129 * t225) * pkin(2) + (0.12e2 * (-(t302 * t180 + t68 * t392) * t459 - 0.8e1 * t175 * t446 * t180 - 0.4e1 * t83 * t383 + t52 * t453) * t271 + t129 * (0.16e2 * (t173 * t493 - t158 + t320 + t367) * t462 + (t105 * t320 + t176 * t367 - 0.28e2 * t56 * t453) * t369 - 0.4e1 * t135 * t188 - 0.96e2 * t79 * t383 - 0.48e2 * t50 * t453) + (-t24 + t129 * (0.32e2 * t49 * t461 + t475 * t495) + (t40 * t409 + t53 * t397 + (-0.24e2 * t161 + 0.64e2 * t349) * t462) * t271 + ((0.48e2 * t77 * t459 + 0.6e1 * t51) * t271 + t129 * (-0.144e3 * t57 * t459 - 0.8e1 * t46)) * pkin(1)) * pkin(3) + ((0.2e1 * (-t130 * t226 - t142 * t489) * t396 + (t85 * t391 + t70 * t440 + 0.24e2 * t301) * t407) * t271 + t129 * ((pkin(1) * t365 + t103 * t440 + t97 * t493) * t372 + (t75 * t368 - 0.6e1 * t61 * t489) * t410)) * t160) * t224;
	t22 = t129 * t24 + t271 * t28;
	t144 = t245 + t260 + t334;
	t146 = t154 - pkin(3);
	t412 = pkin(1) * t492;
	t455 = t226 * t225;
	t380 = pkin(2) * t455;
	t101 = t159 * t224 + t380;
	t468 = t101 * t271;
	t89 = t144 + t164 + t311;
	t34 = -t89 * t143 + t468 + (t144 * t457 + t146 * t412) * pkin(2) + (-t152 - t248 + t394 - 0.2e1 * t467) * pkin(3);
	t107 = t164 + t260 + t306;
	t376 = t111 * t179;
	t63 = t107 * t159 + 0.2e1 * t376;
	t64 = t107 * t226 + (0.4e1 * t189 - 0.2e1) * t474;
	t436 = -t154 + t143;
	t99 = pkin(3) + t436;
	t35 = t64 * t180 + t224 * t63 + t271 * t99;
	t361 = t35 * t488;
	t292 = t22 * t361 + t34 * t481;
	t448 = 0.1e1 / pkin(5) / pkin(4) ^ 2;
	t375 = pkin(3) * t143;
	t74 = t147 + t164 + t336 + 0.2e1 * t375;
	t71 = 0.1e1 / t74;
	t364 = t71 * t448;
	t20 = t292 * t364;
	t324 = pkin(3) * t380;
	t370 = 0.12e2 * t459;
	t393 = 0.8e1 * t225 * t268;
	t406 = t128 * t497;
	t408 = 0.4e1 * t475;
	t417 = t59 * t498;
	t452 = t226 * t268;
	t21 = (t264 * t186 * t397 + (t181 * t179 - 0.2e1 * t463) * t395 + 0.4e1 * t312 + t168 * t331 + t118 * t179) * t271 + t36 * t355 + t129 * ((-0.8e1 / 0.3e1 * t317 + t136 - 0.2e1 * t174 * t324) * t370 + t300 * t506 + t324 * t508 + t439) + ((0.8e1 * t131 * t192 * t452 + t93 * t493 - 0.24e2 * t301) * t271 + t129 * (0.12e2 * (-t92 * t453 - t383) * t370 + t73 * t368) + (t227 * t271 * t417 - t33 + t129 * (t110 * t396 + t48 * t407) + ((pkin(2) * t192 * t393 + 0.4e1 * t91) * t271 + t129 * (-0.48e2 * t100 * t459 - 0.6e1 * t58)) * pkin(1)) * pkin(3)) * t224 + ((t396 * t179 + ((-pkin(3) * t168 + t154 * t490) * t226 + (-t141 * t472 - t445) * t499) * t408) * t271 + t129 * ((t161 - 0.8e1 * t349) * t397 + ((-0.2e1 * t166 * t224 + t406 * t180) * t226 + (-0.4e1 * t98 * t472 - 0.8e1 * t318) * pkin(1)) * t409)) * t160;
	t362 = t34 * t488;
	t291 = t22 * t362 + t35 * t482;
	t72 = 0.1e1 / t74 ^ 2;
	t289 = t72 * t291;
	t354 = t99 * t486;
	t31 = -t468 + t45 * t354 + t111 * t186 * t496 + t63 * t226 + (-t107 - 0.8e1 * t375) * t154;
	t348 = t101 * t486;
	t32 = t436 * t271 + t45 * t348 + (t159 * t89 + 0.4e1 * t376) * t224 + (t412 * t452 + (t144 * t226 + t189 * t405) * pkin(2)) * t225;
	t357 = -t35 * t43 / 0.8e1;
	t360 = t34 * t487;
	t94 = t101 * t413;
	t480 = t20 - (t94 * t289 + (t15 * t362 + t31 * t482 + t45 * t357 + (t21 * t360 + t32 * t488) * t22) * t71) * t448;
	t104 = t175 * t313 * t475;
	t454 = t226 * t227;
	t377 = pkin(2) * t454;
	t327 = pkin(1) * t377;
	t296 = t264 * t224 * t327;
	t120 = -0.4e1 * t296;
	t137 = t327 * t413;
	t458 = t192 * t275;
	t352 = t160 * t458;
	t163 = pkin(1) * t411;
	t451 = t227 * t268;
	t351 = t225 * t451;
	t115 = t163 - 0.4e1 * t351;
	t382 = pkin(1) * t504;
	t456 = t224 * t227;
	t381 = pkin(2) * t456;
	t325 = pkin(3) * t381;
	t437 = -0.2e1 * t325 + t163;
	t41 = t115 * t388 + (pkin(1) * t145 * t498 + t165 * t492) * t225 + (-t437 * t143 + 0.2e1 * t225 ^ 2 * t382 + (t108 * t456 - t88 * t455) * pkin(2)) * t509;
	t356 = t41 * t486;
	t460 = t191 * t276;
	t16 = t28 * t356 + (-0.32e2 * t120 * t129 + 0.8e1 * t137 * t271) * t353 + (0.24e2 * (0.4e1 * t106 * t460 * t472 - t53 * t352 + t39 * t451) * t271 + t129 * (0.96e2 * t49 * t352 - 0.48e2 * t37 * t451 - 0.64e2 * t67 * t460)) * t225 + ((t24 + (t129 * t495 - 0.6e1 * t271 * t40) * t160) * t225 + (((t122 * t387 + t124 * t347 + t310) * t371 + t125 * t321 + t82 * t389 - 0.6e1 * t69 * t400 + t298) * t271 + (t104 * t494 + (t503 * t396 + (t127 * t347 - 0.8e1 * t138 * t445 - 0.8e1 * t385 + t69) * t407) * t271) * t160 + ((-pkin(1) * t302 - t189 * t303 + t226 * t323 + t328) * t369 + t188 * t299 + t189 * t315 + t226 * t330 + t415 + ((t329 - 0.4e1 * t441) * t372 + (t226 * t322 + t416) * t410) * t160) * t129 * t224) * t227) * pkin(2);
	t23 = (t137 * t395 + (t62 * t393 + t167 * t189 + ((t183 + 0.2e1 * t445) * t395 - t109 + (-0.4e1 * t170 * t179 + t398) * pkin(1)) * pkin(2)) * t227 + ((t137 + (t170 - 0.2e1 * t445) * t475) * t408 + (-0.24e2 * t458 * t472 + t417) * t225) * t160) * t271 + t36 * t356 + t33 * t180 + t129 * (0.24e2 * t110 * t225 * t352 + (t120 + (-0.8e1 / 0.3e1 * t441 - 0.2e1 * t470) * t381) * t370 - 0.24e2 * t47 * t351 + t104 + t296 * t506 + t325 * t508 + 0.6e1 * (-(pkin(1) * t392 + t406) * t192 * t504 + t48 * t180) * t160);
	t473 = pkin(3) * t189;
	t29 = t41 * t354 + t115 * t224 * t403 + ((-t224 * t271 + t64) * t227 + (t226 * t271 + (t159 * t499 + t107) * t224 + (-pkin(3) + 0.2e1 * t473 + t478) * t411) * t225) * pkin(2);
	t30 = (t154 + t377) * t271 + t41 * t348 - 0.2e1 * t115 * t473 - (t163 - 0.4e1 * t325) * t143 - 0.2e1 * t192 * t382 + t144 * t381 + (t451 * t497 + (t146 * t499 - t226 * t89) * pkin(2)) * t225;
	t90 = 0.2e1 * t324 + t437;
	t479 = t20 + (-t90 * t289 + (t16 * t362 + t29 * t482 + t41 * t357 + (t23 * t360 + t30 * t488) * t22) * t71) * t448;
	t117 = -t455 + t456;
	t116 = -t454 - t457;
	t19 = t291 * t364;
	t18 = t19 * t116;
	t14 = -t117 * t20 - t18;
	t12 = 0.1e1 / t14 ^ 2;
	t17 = t19 * t117;
	t13 = -t116 * t20 + t17;
	t471 = t12 * t13;
	t359 = t35 * t487;
	t358 = t34 * t43 / 0.8e1;
	t9 = qJ(1) + atan2(t13, t14);
	t7 = sin(t9);
	t8 = cos(t9);
	t305 = -r_i_i_C(1) * t8 + r_i_i_C(2) * t7;
	t304 = r_i_i_C(1) * t7 + r_i_i_C(2) * t8;
	t290 = t72 * t292;
	t11 = 0.1e1 / t14;
	t10 = 0.1e1 / (t12 * t13 ^ 2 + 0.1e1);
	t6 = (-t90 * t290 + (t30 * t481 + t41 * t358 + t16 * t361 + (t23 * t359 + t29 * t488) * t22) * t71) * t448;
	t4 = (t94 * t290 + (t32 * t481 + t45 * t358 + t15 * t361 + (t21 * t359 + t31 * t488) * t22) * t71) * t448;
	t2 = 0.1e1 + ((t479 * t117 + (t19 - t6) * t116) * t11 - (-t479 * t116 - t117 * t6 + t17) * t471) * t10;
	t1 = ((-t116 * t4 - t480 * t117 - t18) * t11 - ((-t19 - t4) * t117 + t480 * t116) * t471) * t10;
	t3 = [t304 * t2 - t180, t304 * t1; t305 * t2 + t475, t305 * t1; 0, 0;];
	Ja_transl = t3;
elseif link_index == 3
	%% Symbolic Calculation
	% From jacobia_transl_3_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-27 05:51:21
	% EndTime: 2020-04-27 05:51:21
	% DurationCPUTime: 0.06s
	% Computational Cost: add. (2->2), mult. (4->4), div. (0->0), fcn. (4->2), ass. (0->3)
	t2 = cos(qJ(2));
	t1 = sin(qJ(2));
	t3 = [0, -r_i_i_C(1) * t1 - r_i_i_C(2) * t2; 0, r_i_i_C(1) * t2 - r_i_i_C(2) * t1; 0, 0;];
	Ja_transl = t3;
elseif link_index == 4
	%% Symbolic Calculation
	% From jacobia_transl_4_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-27 05:51:21
	% EndTime: 2020-04-27 05:51:23
	% DurationCPUTime: 0.84s
	% Computational Cost: add. (8310->110), mult. (18046->194), div. (144->7), fcn. (4442->9), ass. (0->91)
	t102 = -4 * pkin(2);
	t53 = pkin(2) ^ 2;
	t47 = cos(qJ(1));
	t93 = pkin(2) * t47;
	t75 = pkin(1) * t93;
	t39 = -0.2e1 * t75;
	t54 = pkin(1) ^ 2;
	t78 = t39 + t54;
	t43 = t47 ^ 2;
	t99 = 0.2e1 * t43;
	t29 = t53 * t99 - t53 + t78;
	t101 = -0.2e1 * t29;
	t37 = pkin(1) - t93;
	t100 = 0.2e1 * t37;
	t44 = sin(qJ(2));
	t45 = sin(qJ(1));
	t83 = t44 * t45;
	t36 = pkin(2) * t83;
	t65 = pkin(3) * t36;
	t35 = -0.2e1 * t65;
	t52 = pkin(3) ^ 2;
	t46 = cos(qJ(2));
	t31 = t37 * t46;
	t70 = pkin(3) * t31;
	t20 = t35 + t52 + t53 + 0.2e1 * t70 + t78;
	t18 = 0.1e1 / t20;
	t98 = t18 / 0.2e1;
	t97 = (-pkin(4) - pkin(5));
	t96 = (-pkin(4) + pkin(5));
	t95 = pkin(1) * (t36 - pkin(3));
	t94 = pkin(2) * t45;
	t92 = pkin(3) * t37;
	t42 = t46 ^ 2;
	t91 = pkin(3) * t42;
	t90 = pkin(3) * t44;
	t89 = pkin(3) * t46;
	t19 = 0.1e1 / t20 ^ 2;
	t41 = pkin(1) * t94;
	t81 = t45 * t46;
	t82 = t44 * t47;
	t88 = t19 * (t41 + (t81 - t82) * pkin(3) * pkin(2));
	t26 = pkin(2) * t81 + t44 * t37;
	t87 = t19 * t26 * pkin(3);
	t50 = pkin(4) ^ 2;
	t77 = -pkin(5) ^ 2 + t54;
	t69 = t53 + t77;
	t62 = t52 + t69;
	t33 = -t50 + t62;
	t28 = t39 + t33;
	t21 = t35 + t28;
	t40 = (t52 - t54) * t53;
	t58 = t101 * t42 - t77;
	t55 = sqrt(0.4e1 * t40 * t43 + 0.4e1 * t33 * t75 - (t54 + ((pkin(2) - t96) * (pkin(2) + t96))) * (t54 + ((pkin(2) - t97) * (pkin(2) + t97))) + 0.4e1 * (-t21 * t31 + t28 * t36) * pkin(3) + (0.2e1 * t50 - (6 * t53) + 0.2e1 * t58 - t52) * t52);
	t86 = t26 * t55;
	t85 = t29 * t46;
	t84 = t42 * t52;
	t80 = t46 * t47;
	t79 = -t36 + t31;
	t76 = -0.2e1 * pkin(1) * t53;
	t13 = 0.1e1 / t55;
	t74 = 0.2e1 * t13 * ((t21 * t92 + 0.2e1 * t52 * t85) * t44 + (t100 * t84 + t28 * t89) * t94);
	t73 = -0.4e1 * t47 * t53;
	t72 = pkin(2) * t82;
	t71 = pkin(3) * t85;
	t38 = 0.2e1 * t41;
	t30 = t45 * t73 + t38;
	t64 = pkin(3) * t72;
	t66 = -0.8e1 * t70;
	t68 = (-0.4e1 * t30 * t84 + (t41 - t64) * t66 + 0.4e1 * t28 * t64 + (t21 * t89 * t102 - 0.8e1 * t40 * t47 + (0.8e1 * pkin(3) * t53 * t83 + t102 * t33) * pkin(1)) * t45) * t13 / 0.2e1;
	t51 = 0.1e1 / pkin(4);
	t67 = t51 * t98;
	t27 = t39 + t50 + t62;
	t16 = t27 * t37 + 0.2e1 * t71;
	t17 = t27 * t46 + (0.4e1 * t42 - 0.2e1) * t92;
	t25 = pkin(3) + t79;
	t10 = t16 * t44 + t17 * t94 + t25 * t55;
	t32 = 0.3e1 * t52 + t50 + t69;
	t22 = t32 + t39 - 0.4e1 * t65;
	t9 = -t22 * t31 + t86 + (t32 * t83 - 0.2e1 * t47 * t95) * pkin(2) + (-t50 - t52 + (t99 - 0.3e1) * t53 + t58) * pkin(3);
	t8 = 0.1e1 / t9 ^ 2;
	t63 = pkin(4) * t20 * t51 / (t10 ^ 2 * t8 + 0.1e1);
	t61 = 0.1e1 / t9 * t63;
	t5 = qJ(2) + atan2(t10 * t67, t9 * t67);
	t3 = sin(t5);
	t4 = cos(t5);
	t60 = r_i_i_C(1) * t4 - r_i_i_C(2) * t3;
	t59 = -r_i_i_C(1) * t3 - r_i_i_C(2) * t4;
	t57 = t10 * t8 * t63;
	t2 = 0.1e1 + 0.2e1 * ((-t86 + t25 * t74 + t16 * t46 + ((-t27 + t66) * t94 + t90 * t101) * t44) * t98 + t10 * t87) * t61 - 0.2e1 * ((t79 * t55 + t26 * t74 + (t22 * t37 + 0.4e1 * t71) * t44 + (t76 * t80 + (t32 * t46 + 0.4e1 * t37 * t91) * pkin(2)) * t45) * t98 + t9 * t87) * t57;
	t1 = 0.2e1 * ((0.2e1 * t30 * t44 * t89 + t25 * t68) * t98 - t10 * t88 + ((-t44 * t55 + t17) * t47 * t98 + (t46 * t55 / 0.2e1 + (pkin(1) * t100 + t27) * t44 / 0.2e1 + (pkin(1) * t46 - pkin(3) + 0.2e1 * t91) * t94) * t18 * t45) * pkin(2)) * t61 - 0.2e1 * (((pkin(2) * t80 + t36) * t55 + t26 * t68 - 0.2e1 * t30 * t91 - (t38 - 0.4e1 * t64) * t31 + t43 * t44 * t76 + t32 * t72 + (pkin(3) * t73 + (-t22 * t46 + 0.2e1 * t95) * pkin(2)) * t45) * t98 - t9 * t88) * t57;
	t6 = [t59 * t1, t2 * t59 - t90; t60 * t1, t2 * t60 + t89; 0, 0;];
	Ja_transl = t6;
end