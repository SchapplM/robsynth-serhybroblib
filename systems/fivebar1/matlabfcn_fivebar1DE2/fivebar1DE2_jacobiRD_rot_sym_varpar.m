% Zeitableitung der Rotationsmatrix-Jacobi-Matrix für beliebiges Segment von
% fivebar1DE2
% Use Code from Maple symbolic Code Generation
% 
% Rotationsmatrix-Jacobi-Matrix: Differentieller Zusammenhang zwischen
% gestapelter Endeffektor-Rotationsmatrix und verallgemeinerten Koordinaten.
% Zeitableitung: Die Gradientenmatrix wird nochmal nach der Zeit abgeleitet.
% 
% Input:
% qJ [2x1]
%   Generalized joint coordinates (joint angles)
% qJD [2x1]
%   Generalized joint velocities
% link_index [1x1 uint8]
%   Index des Segmentes, auf dem der Punkt C liegt. (0=Basis).
%   Siehe auch: bsp_3T1R_fkine_fixb_rotmat_mdh_sym_varpar.m
% pkin [5x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[AB,AE,BC,CD,ED]';
% 
% Output:
% JRD_rot [9x2]
%   Zeitableitung der Jacobi-Matrix der Endeffektor-Rotationsmatrix

% Quelle: HybrDyn-Toolbox
% Datum: 2020-04-27 06:03
% Revision: 970157063c8b7bcb25458a457551a083b21abdbd (2020-04-26)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function JRD_rot = fivebar1DE2_jacobiRD_rot_sym_varpar(qJ, qJD, link_index, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(2,1),zeros(2,1),uint8(0),zeros(5,1)}
assert(isreal(qJ) && all(size(qJ) == [2 1]), ...
  'fivebar1DE2_jacobiRD_rot_sym_varpar: qJ has to be [2x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [2 1]), ...
  'fivebar1DE2_jacobiRD_rot_sym_varpar: qJD has to be [2x1] (double)');
assert(isa(link_index,'uint8') && all(size(link_index) == [1 1]), ...
	'fivebar1DE2_jacobiRD_rot_sym_varpar: link_index has to be [1x1] uint8');
assert(isreal(pkin) && all(size(pkin) == [5 1]), ...
  'fivebar1DE2_jacobiRD_rot_sym_varpar: pkin has to be [5x1] (double)');
JRD_rot=NaN(9,2);
if link_index == 0
	%% Symbolic Calculation
	% From jacobiRD_rot_0_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-27 05:51:21
	% EndTime: 2020-04-27 05:51:21
	% DurationCPUTime: 0.01s
	% Computational Cost: add. (0->0), mult. (0->0), div. (0->0), fcn. (0->0), ass. (0->1)
	t1 = [0, 0; 0, 0; 0, 0; 0, 0; 0, 0; 0, 0; 0, 0; 0, 0; 0, 0;];
	JRD_rot = t1;
elseif link_index == 1
	%% Symbolic Calculation
	% From jacobiRD_rot_1_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-27 05:51:22
	% EndTime: 2020-04-27 05:51:22
	% DurationCPUTime: 0.04s
	% Computational Cost: add. (3->3), mult. (4->2), div. (0->0), fcn. (4->2), ass. (0->3)
	t31 = qJD(1) * sin(qJ(1));
	t30 = qJD(1) * cos(qJ(1));
	t1 = [-t30, 0; -t31, 0; 0, 0; t31, 0; -t30, 0; 0, 0; 0, 0; 0, 0; 0, 0;];
	JRD_rot = t1;
elseif link_index == 2
	%% Symbolic Calculation
	% From jacobiRD_rot_2_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-27 05:59:29
	% EndTime: 2020-04-27 06:03:02
	% DurationCPUTime: 216.14s
	% Computational Cost: add. (3388388->1398), mult. (10430472->2488), div. (19272->11), fcn. (1323336->9), ass. (0->1018)
	t5932 = cos(qJ(1));
	t6691 = -0.4e1 * t5932;
	t5962 = (pkin(5) ^ 2);
	t5961 = t5962 ^ 2;
	t5965 = (pkin(4) ^ 2);
	t5964 = t5965 ^ 2;
	t6436 = t5961 - t5964;
	t6682 = 4 * pkin(3);
	t6406 = 4 * qJD(1);
	t5969 = pkin(3) ^ 2;
	t5973 = (pkin(2) ^ 2);
	t5975 = (pkin(1) ^ 2);
	t6429 = (t5975 - t5962);
	t6250 = (t5973 + t6429);
	t6156 = t5969 + t6250;
	t5838 = -t5965 + t6156;
	t6560 = pkin(2) * t5932;
	t6409 = pkin(1) * t6560;
	t5867 = -0.2e1 * t6409;
	t5779 = t5867 + t5838;
	t5929 = sin(qJ(2));
	t5930 = sin(qJ(1));
	t6494 = t5929 * t5930;
	t5857 = pkin(2) * t6494;
	t6237 = pkin(3) * t5857;
	t5840 = -0.2e1 * t6237;
	t5736 = t5840 + t5779;
	t5862 = pkin(1) - t6560;
	t5931 = cos(qJ(2));
	t5836 = t5862 * t5931;
	t6620 = 4 * t5969;
	t5898 = t5973 * t6620;
	t6469 = t5973 * t5975;
	t5868 = t5898 - 4 * t6469;
	t5897 = t5932 ^ 2;
	t5944 = 2 * t5965;
	t5960 = -2 * t5975;
	t5967 = t5969 ^ 2;
	t6240 = t5838 * t6409;
	t6309 = t5779 * t6494;
	t6496 = t5897 * t5973;
	t6397 = 0.2e1 * t6496;
	t6433 = -t5973 + t5975;
	t5787 = t5867 + t6397 + t6433;
	t5894 = t5931 ^ 2;
	t6517 = t5787 * t5894;
	t6608 = -pkin(4) + pkin(5);
	t6609 = -pkin(4) - pkin(5);
	t5632 = t5868 * t5897 + 0.4e1 * t6240 - t5967 - (t5975 + (pkin(2) - t6608) * (pkin(2) + t6608)) * (t5975 + (pkin(2) - t6609) * (pkin(2) + t6609)) + (t5944 + t5960 + (2 * t5962) - (6 * t5973) - 0.4e1 * t6517) * t5969 + (pkin(2) * t6309 - t5736 * t5836) * t6682;
	t5976 = sqrt(t5632);
	t6569 = t5976 / 0.4e1;
	t6482 = t5931 * t5969;
	t6283 = t5929 * t6482;
	t6612 = pkin(1) * pkin(2);
	t6149 = t6283 * t6612;
	t6087 = t5930 * t6149;
	t5890 = t5929 ^ 2;
	t6472 = t5969 * t5890;
	t6285 = qJD(2) * t6472;
	t6690 = qJD(1) * t6087 + t6285 * t6409;
	t5883 = pkin(3) * t5931;
	t5863 = pkin(1) + t5883;
	t5980 = pkin(2) * t5973;
	t6495 = t5897 * t5980;
	t6297 = t5930 * t6495;
	t6171 = t5863 * t6297;
	t6095 = qJD(1) * t6171;
	t5896 = t5932 * t5897;
	t6488 = t5929 * t5980;
	t6301 = t5896 * t6488;
	t6205 = pkin(3) * t6301;
	t6125 = qJD(2) * t6205;
	t6689 = 0.96e2 * t6095 + 0.32e2 * t6125;
	t6688 = -0.24e2 * t6095 - 0.8e1 * t6125;
	t6492 = t5929 * t5932;
	t6369 = pkin(2) * t6492;
	t6236 = pkin(3) * t6369;
	t6147 = qJD(2) * t6236;
	t6484 = t5931 * t5930;
	t6290 = qJD(1) * t6484;
	t6215 = pkin(2) * t6290;
	t6611 = pkin(1) * pkin(3);
	t6687 = pkin(1) * t6147 + t6215 * t6611;
	t6144 = qJD(1) * t6237;
	t6483 = t5931 * t5932;
	t6366 = pkin(2) * t6483;
	t6234 = pkin(3) * t6366;
	t6145 = qJD(2) * t6234;
	t6686 = 0.6e1 * t6144 - 0.6e1 * t6145;
	t6511 = t5863 * t5930;
	t6373 = pkin(2) * t6511;
	t6217 = qJD(1) * t6373;
	t6685 = 0.8e1 * t6217 + 0.8e1 * t6147;
	t6684 = -0.6e1 * t6217 - 0.6e1 * t6147;
	t6092 = t6483 + t6494;
	t6321 = qJD(2) * t6494;
	t5681 = (qJD(1) * t6092 - t6321) * pkin(2) + qJD(2) * t5836;
	t6683 = 0.2e1 * pkin(1);
	t6549 = 0.6e1 * pkin(2);
	t6548 = 0.8e1 * pkin(2);
	t6547 = 2 * pkin(3);
	t5900 = 0.10e2 / 0.3e1 * t5969;
	t5974 = t5975 ^ 2;
	t6434 = t5967 + t5974;
	t5959 = 2 * t5975;
	t6437 = t5959 - t5962;
	t6468 = t5975 * t5962;
	t6659 = -t5961 / 0.6e1 + t5964 / 0.6e1;
	t5764 = (t6437 * t5969) + t6434 - t6468 - t6659;
	t5981 = t5973 ^ 2;
	t6017 = t5764 + t5981;
	t5718 = (t5900 + t6437) * t5973 + t6017;
	t6645 = -6 * pkin(3);
	t6423 = t5718 * t6645;
	t6332 = pkin(2) * t6423;
	t6542 = qJD(1) * t5932;
	t6111 = t6332 * t6542;
	t6318 = qJD(2) * t6484;
	t5842 = pkin(2) * t6318;
	t6146 = pkin(3) * t5842;
	t5648 = -0.6e1 * t5718 * t6146 + t5929 * t6111;
	t5949 = 6 * t5969;
	t5911 = -t5962 / 0.2e1;
	t6432 = t5973 + t5975;
	t6252 = t5969 + t6432;
	t5845 = t5911 + t6252;
	t6190 = -0.4e1 * t6237;
	t6102 = t5845 * t6190;
	t5671 = t6102 + ((t5949 + t6437) * t5973) + t6017;
	t6295 = qJD(1) * t6492;
	t6039 = -t6295 - t6318;
	t6024 = pkin(2) * t6039;
	t6012 = 0.4e1 * t6024;
	t6007 = pkin(3) * t6012;
	t5691 = t5845 * t6007;
	t5879 = t5975 - t5973 / 0.3e1;
	t5789 = t5879 * t5840;
	t6476 = (pkin(1) + pkin(2)) * (pkin(1) - pkin(2));
	t5714 = t5845 * t6476 + t5789;
	t6169 = qJD(2) * t6283;
	t6115 = -0.24e2 * t6169;
	t5747 = pkin(3) * t6024;
	t6008 = 0.2e1 * t5747;
	t5711 = t5879 * t6008;
	t5889 = -3 * t5973 + t5975;
	t5984 = pkin(3) * t5969;
	t6462 = t5984 * t5894;
	t6303 = t5929 * t6462;
	t6219 = pkin(1) * t6303;
	t5798 = -0.24e2 * t5889 * t6219;
	t6471 = t5969 * t5894;
	t6342 = 0.12e2 * t6471;
	t6453 = qJD(2) * t5798 + t5711 * t6342;
	t6540 = qJD(2) * t5929;
	t6545 = 6 * pkin(3);
	t5610 = t5714 * t6115 + (-t5671 * t6540 + t5691 * t5931) * pkin(1) * t6545 + t6453 + t5648;
	t6681 = 0.8e1 * t5610;
	t5948 = 5 * t5967;
	t5956 = 6 * t5975;
	t5941 = -2 * t5962;
	t6439 = t5941 - 2 * t5965;
	t6253 = t5956 + t6439;
	t5939 = 10 * t5969;
	t6440 = t5939 + t5959;
	t5912 = -0.2e1 / 0.3e1 * t5962;
	t5922 = -0.2e1 / 0.3e1 * t5965;
	t6444 = t5912 + t5922;
	t5702 = t5981 + (t6440 + t6444) * t5973 + t5948 + (t6253 * t5969) + t5975 * (t5975 + t6444);
	t5871 = pkin(2) * t6542;
	t5688 = t5702 * t5871;
	t5953 = 3 * t5973;
	t5910 = -t5962 / 0.3e1;
	t6661 = t5910 - t5965 / 0.3e1;
	t6257 = t5975 + t6661;
	t6157 = t5969 + t6257;
	t5815 = t5953 + t6157;
	t5950 = 3 * t5969;
	t5874 = t5950 + t6432;
	t5816 = t5874 + t6661;
	t6539 = qJD(2) * t5931;
	t6363 = pkin(3) * t6539;
	t5696 = -t5815 * t6363 + t5816 * t5871;
	t5884 = pkin(2) * t5930;
	t6555 = pkin(3) * t5929;
	t5703 = -t5815 * t6555 + t5816 * t5884;
	t5925 = t5969 / 0.2e1;
	t5908 = -t5962 / 0.6e1;
	t6445 = t5908 - t5965 / 0.6e1;
	t5831 = t5925 + t5973 + t6445;
	t6176 = t6476 * t6539;
	t6248 = 0.2e1 * t5871;
	t5716 = pkin(3) * t6176 + t5831 * t6248;
	t5893 = t5931 * t5894;
	t6293 = t5929 * t6476;
	t6674 = 0.2e1 * t5884;
	t5731 = pkin(3) * t6293 + t5831 * t6674;
	t6491 = t5929 * t5969;
	t6395 = 0.8e1 * t6491;
	t5886 = t5969 + t5975;
	t5952 = 5 * t5981;
	t6254 = t5912 + t5886;
	t5730 = t5952 + ((t5939 + t6253) * t5973) + t5886 * (t5922 + t6254);
	t6557 = pkin(3) * t5730;
	t6038 = (t5731 * t6395 - t6557) * t5931;
	t6322 = t5894 * t6540;
	t6202 = 0.24e2 * t6322;
	t6388 = -0.4e1 * t6471;
	t6558 = pkin(2) * t5984;
	t5615 = t5716 * t6388 + t5688 + qJD(2) * t6038 + ((t5696 * t5931 - t5703 * t6540) * t6682 + (-0.8e1 * t5893 * t6542 + t5930 * t6202) * t6558) * pkin(1);
	t6680 = -0.6e1 * t5615;
	t5913 = -0.3e1 / 0.2e1 * t5962;
	t5937 = 15 * t5967;
	t5940 = 18 * t5975;
	t5954 = 3 * t5974;
	t6446 = t5961 / 0.2e1 - t5964 / 0.2e1;
	t6159 = -(3 * t6468) + t5954 + t6446;
	t6191 = t5930 * t6332;
	t5958 = 3 * t5975;
	t6441 = 15 * t5969 + t5958;
	t5970 = t5980 ^ 2;
	t6452 = t5886 * ((t5913 + t5959) * t5969 - 0.3e1 / 0.2e1 * t6468 + t6434 + t6446) + t5970;
	t5637 = t5929 * t6191 + (t5937 + ((t5940 - 9 * t5962) * t5969) + t6159) * t5973 + (t5913 + t6441) * t5981 + t6452;
	t6679 = -0.8e1 * t5637;
	t5652 = t5702 * t5884 - t5730 * t6555;
	t6678 = 0.6e1 * t5652;
	t6256 = t5911 - t5965 / 0.2e1 + t5975;
	t5807 = 0.3e1 / 0.2e1 * t5973 + t5950 + t6256;
	t6486 = t5929 * t5984;
	t6559 = pkin(2) * t5969;
	t6072 = t5930 * t6559 - t6486;
	t5819 = 0.4e1 * t6072;
	t5888 = -3 * t5969 + t5975;
	t5835 = t5884 + 0.2e1 * t6555;
	t6566 = pkin(1) * t5931;
	t6379 = t5835 * t6566;
	t5658 = t5888 * t5884 + t5819 * t5894 + (t5807 * t5929 + t6379) * t6547;
	t6677 = -0.8e1 * t5658;
	t6675 = -0.4e1 * t5845;
	t6673 = 0.4e1 * t5929;
	t6510 = t5863 * t5932;
	t6372 = pkin(2) * t6510;
	t6672 = 0.6e1 * t6372;
	t6448 = t5890 - t5894;
	t6187 = 0.8e1 * t6448;
	t6442 = 0.4e1 / 0.7e1 * t5975 - t5962 / 0.7e1;
	t5832 = t5975 + t5973 / 0.4e1 + t5969 / 0.4e1 - t5962 / 0.8e1;
	t6656 = 0.32e2 / 0.21e2 * t5832;
	t5661 = -t6237 * t6656 + t5981 / 0.7e1 + (0.16e2 / 0.21e2 * t5969 + t6442) * t5973 + t5967 / 0.7e1 + t6442 * t5969 + t5974 - 0.3e1 / 0.7e1 * t6468 + t6436 / 0.42e2;
	t5909 = -t5962 / 0.4e1;
	t5924 = t5969 / 0.3e1;
	t5927 = t5973 / 0.2e1;
	t6443 = t5927 + t5975;
	t5833 = t5909 + t5924 + t6443;
	t5923 = 0.4e1 / 0.3e1 * t5969;
	t6571 = 0.4e1 / 0.3e1 * t5973;
	t5664 = -0.8e1 / 0.3e1 * t5833 * t6237 + t5981 / 0.3e1 + (t5923 + t5910) * t5973 + t5974 - t5967 / 0.3e1 + (t6571 + 0.2e1 / 0.3e1 * t5969 + t5912) * t5975 + t6436 / 0.18e2;
	t5770 = -0.2e1 / 0.3e1 * t6237 + t5975 + t5925 + t5909;
	t5957 = 4 * t5975;
	t5875 = (t5957 + t5962) * t5969;
	t5887 = -t5969 + t5975;
	t5878 = -t5969 / 0.3e1 + t5975;
	t6214 = t5878 * t5857;
	t6142 = pkin(3) * t6214;
	t6082 = t5845 * t6142;
	t5880 = t5975 - 0.2e1 / 0.3e1 * t5973;
	t5892 = t5894 ^ 2;
	t6474 = t5967 * t5892;
	t6286 = t5880 * t6474;
	t6463 = t5984 * t5893;
	t6338 = 0.16e2 * t6463;
	t6341 = 0.14e2 * t6471;
	t6414 = 0.6e1 * t5883;
	t6477 = (pkin(1) + pkin(3)) * (pkin(1) - pkin(3));
	t5618 = 0.8e1 * t6286 + t5661 * t6341 - 0.4e1 * t6082 + (t5887 * t5981) + (t5875 - 0.10e2 / 0.3e1 * t5967 + (2 * t5974) - t6468) * t5973 + t5764 * t6477 + (t5664 * t6414 + t5770 * t6338) * pkin(1);
	t6671 = -0.48e2 * t5618;
	t5901 = -0.20e2 / 0.3e1 * t5969;
	t5917 = 0.2e1 / 0.3e1 * t5965;
	t6260 = 0.2e1 / 0.3e1 * t5962 + t5917 + t5957;
	t6261 = 0.4e1 / 0.3e1 * t5962 + 0.4e1 / 0.3e1 * t5965 + t5960;
	t6431 = t5974 - t5967;
	t5726 = -(3 * t5981) + (t5901 + t6261) * t5973 + t6260 * t5969 + t6431;
	t5918 = t5965 / 0.3e1;
	t6259 = t5962 / 0.3e1 + t5918 + t5959;
	t5732 = -0.5e1 / 0.3e1 * t5981 + (-t5969 + t6259) * t5973 + t5975 * t6157;
	t6417 = -0.2e1 * t6555;
	t5656 = t5726 * t5884 + t5732 * t6417;
	t6670 = 0.12e2 * t5656;
	t6669 = -0.48e2 * t5718;
	t6402 = 0.24e2 * t5930;
	t6667 = 16 * t5969;
	t5895 = t5897 ^ 2;
	t6487 = t5929 * t5981;
	t6359 = pkin(3) * t6487;
	t6206 = t5895 * t6359;
	t6666 = -0.24e2 * t6206;
	t5743 = -0.4e1 / 0.9e1 * t6237 + t5975 + t5973 / 0.3e1 + t5924 + t5965 / 0.9e1 - t5962 / 0.9e1;
	t5817 = t5910 + t5918 + t6252;
	t6385 = 0.6e1 * t6471;
	t6069 = -t6237 + t6443;
	t5761 = t5965 / 0.6e1 + t5908 + t6069;
	t6521 = t5761 * t5931;
	t6550 = 0.4e1 * pkin(1);
	t5639 = -0.2e1 * t6142 + t5743 * t6385 + t5817 * t6477 + (pkin(3) * t6521 + t6463) * t6550;
	t6255 = t5912 + t5917 + t5959;
	t6450 = t5886 * (t5917 + t6254) + t5981;
	t5667 = t5817 * t6190 + (t5949 + t6255) * t5973 + t6450;
	t5755 = t5840 + t5817;
	t5869 = t6433 * t6620;
	t6407 = pkin(1) * t5883;
	t6335 = 0.4e1 * t6407;
	t5643 = t5755 * t6335 + t5869 * t5894 + t5667;
	t5709 = t5817 * t6476 + t5789;
	t6375 = pkin(1) * t6463;
	t6218 = t5889 * t6375;
	t5826 = 0.8e1 * t6218;
	t6251 = t5969 + t6429;
	t5855 = t5965 + t6251;
	t5881 = t5886 ^ 2;
	t5943 = -6 * t5962;
	t5865 = 0.2e1 * t6407;
	t6386 = 0.4e1 * t6471;
	t6222 = t5888 + t6386;
	t5786 = t5865 + t6222;
	t6497 = t5896 * t5980;
	t6306 = t5863 * t6497;
	t6168 = t5786 * t6306;
	t5715 = (t5900 + t6255) * t5973 + t6450;
	t6313 = t5715 * t6494;
	t6334 = 0.6e1 * t6407;
	t6614 = 0.12e2 * t5897;
	t5603 = -0.8e1 * t6168 + t5826 + t5709 * t6342 + t5667 * t6334 + t5970 + ((-t5962 + t5965 + t6441) * t5981) + (t5881 * t5855) + (t5639 * t6614 + t5937 + ((t5940 + t5943 + 6 * t5965) * t5969) + t5954 + ((t5941 + t5944) * t5975)) * t5973 + (-pkin(3) * t6313 - t5643 * t6510) * t6549;
	t5820 = 0.2e1 * t6072;
	t5885 = 2 * t5969 + t5973;
	t6505 = t5885 * t5929;
	t5676 = pkin(3) * t6505 + t5820 * t5894 + (t5887 + t5865) * t5884;
	t6470 = t5969 * t5980;
	t6621 = 4 * t5967;
	t5870 = pkin(2) * t6621 + 0.8e1 * t6470;
	t6287 = t5984 * t6476;
	t5749 = t5870 * t5930 + t6287 * t6673;
	t5797 = t5952 + (t5939 + t5956) * t5973 + t5881;
	t6225 = 0.8e1 * t6306;
	t6133 = t5797 + t6225;
	t6430 = t5974 + t5981;
	t6467 = t5975 * t5969;
	t5780 = t6440 * t5973 + t5948 + t6430 + 6 * t6467;
	t6151 = -t5780 + 0.8e1 * t6375;
	t5827 = t5874 * t5884;
	t5872 = t5953 + t5886;
	t6509 = t5872 * t5929;
	t5742 = -pkin(3) * t6509 + t5827;
	t6380 = t5742 * t6566;
	t6398 = -0.4e1 * t6496;
	t5834 = t5884 - t6555;
	t6427 = 0.2e1 * t6566;
	t6073 = t5834 * t6427 - t6509;
	t6302 = t5930 * t6471;
	t6212 = pkin(2) * t6302;
	t5668 = pkin(3) * t6073 + t5827 - 0.2e1 * t6212;
	t6632 = 0.4e1 * t5668;
	t5617 = t5676 * t6398 + t5749 * t5894 + (t5929 * t6133 - 0.4e1 * t6380) * pkin(3) + (t5930 * t6151 + t6510 * t6632) * pkin(2);
	t5818 = t5862 + t5883;
	t5595 = t5603 * t5818 + t5617 * t5976;
	t5592 = 0.1e1 / t5595;
	t6665 = t5592 / 0.2e1;
	t6564 = pkin(1) * t5973;
	t6563 = pkin(1) * t5976;
	t6327 = qJD(1) * t6496;
	t6543 = qJD(1) * t5930;
	t6664 = t5984 * (0.8e1 * t5893 * t6543 + t5932 * t6202);
	t6319 = qJD(2) * t6492;
	t6040 = t6290 + t6319;
	t6663 = t6040 * t6682;
	t6387 = 0.2e1 * t6471;
	t6662 = (-t5874 + t6387) * t6560;
	t6660 = t5958 - t5962 - t5965;
	t5771 = 0.4e1 / 0.3e1 * t6471 + t5865 + t5878;
	t6360 = pkin(3) * t6488;
	t6204 = t5897 * t6360;
	t6122 = t5930 * t6204;
	t6498 = t5896 * t5930;
	t6300 = t5981 * t6498;
	t6138 = 0.96e2 * pkin(3) * t6300;
	t6473 = t5967 * t5893;
	t6292 = t5929 * t6473;
	t6371 = t5879 * t6560;
	t6658 = t5771 * t5931 * t6138 + 0.24e2 * t5658 * t6122 - 0.96e2 * t6292 * t6371;
	t6365 = t5932 * t6559;
	t6211 = t5894 * t6365;
	t6150 = pkin(1) * t6211;
	t6657 = -qJD(2) * t6150 + t6690;
	t6330 = 0.32e2 / 0.3e1 * t5967;
	t6183 = t5893 * t6330;
	t6515 = t5832 * t5984;
	t6184 = 0.64e2 / 0.3e1 * t6515;
	t6553 = t5878 * pkin(3);
	t6242 = t6553 * t6675;
	t6655 = pkin(1) * (0.16e2 * t5833 * t6482 + t6183) + t5894 * t6184 - t6242;
	t6180 = t5929 * t6290;
	t6538 = qJD(2) * t5932;
	t6654 = pkin(1) * t5969 * (t6448 * t6538 + t6180);
	t5630 = 0.1e1 / t5976;
	t5843 = pkin(2) * t6295;
	t6143 = pkin(3) * t5843;
	t5823 = -0.2e1 * t6143;
	t5748 = -0.2e1 * t6146 + t5823;
	t6410 = pkin(1) * t5884;
	t5866 = 0.2e1 * t6410;
	t5853 = qJD(1) * t5866;
	t5720 = t5853 + t5748;
	t6512 = t5862 * t5929;
	t6028 = -qJD(2) * t6512 + t6215;
	t5663 = t6028 * t6547 + t5720;
	t5673 = 0.2e1 * t5681 * pkin(3);
	t6368 = pkin(2) * t6484;
	t5763 = t6368 + t6512;
	t5751 = t5763 * t6547;
	t6384 = 0.8e1 * t6471;
	t6392 = 0.8e1 * t6482;
	t6415 = 0.4e1 * t5883;
	t6420 = t5862 * t6682;
	t5635 = (t5736 * t6420 + t5787 * t6392) * t5929 + (t5779 * t6415 + t5862 * t6384) * t5884;
	t6585 = -t5635 / 0.8e1;
	t6014 = -0.4e1 * t5736 * t6484 + 0.4e1 * t5779 * t6492;
	t6622 = -0.2e1 * t5932;
	t6044 = (-0.4e1 * t5838 * t6612 + t5868 * t6622) * t5930;
	t6490 = t5929 * t5973;
	t5891 = t5930 ^ 2;
	t6627 = 0.8e1 * t5891;
	t6155 = pkin(1) * t6490 * t6627;
	t6493 = t5929 * t5931;
	t6320 = qJD(2) * t6493;
	t6175 = t5787 * t6320;
	t6230 = 0.4e1 * t6318;
	t6326 = t5736 * t6540;
	t6405 = 0.4e1 * t5862;
	t6478 = t5932 * t5973;
	t6291 = t5930 * t6478;
	t6178 = qJD(1) * t6291;
	t6135 = -0.4e1 * t6178;
	t5769 = t5853 + t6135;
	t6519 = t5769 * t5894;
	t6523 = t5720 * t5931;
	t5613 = (0.8e1 * t6175 - 0.4e1 * t6519) * t5969 + qJD(1) * t6044 + (qJD(1) * t6155 + (t6326 - t6523) * t6405 + (qJD(1) * t6014 + t5779 * t6230) * pkin(2)) * pkin(3);
	t6593 = -t5613 / 0.8e1;
	t6652 = -t5673 * t6569 - (t5663 * t6585 - t5751 * t6593) * t5630;
	t6289 = qJD(1) * t6483;
	t6011 = (t6289 - t6321) * t6547;
	t5854 = pkin(1) * t6248;
	t6262 = -0.2e1 * t6145 + 0.2e1 * t6144 + t5854;
	t5665 = pkin(2) * t6011 + t6262;
	t5781 = -0.2e1 * t6236 + t5866;
	t6235 = pkin(3) * t6368;
	t5739 = 0.2e1 * t6235 + t5781;
	t6224 = -0.4e1 * t6291;
	t5794 = t5866 + t6224;
	t5628 = t5794 * t6388 + t6044 + (pkin(2) * t6014 - 0.4e1 * t5781 * t5836 + t6155) * pkin(3);
	t6587 = t5628 / 0.8e1;
	t6591 = t5613 / 0.8e1;
	t6651 = t5665 * t6569 + (t5663 * t6587 + t5739 * t6591) * t5630;
	t5619 = t5671 * t6334 + t5714 * t6342 + t5637 + t5826;
	t5955 = 8 * t5975;
	t6207 = t5984 * t5857;
	t5754 = -0.4e1 * t6207 + t5898 + t6621 + ((t5941 + t5955) * t5969);
	t5765 = t5909 - t5969 + t6069;
	t6358 = pkin(3) * t6477;
	t6245 = -0.2e1 * t6358;
	t6104 = t6245 * t5884;
	t6382 = 0.8e1 * t6463;
	t5646 = t5929 * t6104 + t5754 * t5894 + t5845 * t5888 + (t5765 * t6415 + t6382) * pkin(1);
	t6288 = t5967 * t6476;
	t6086 = t6288 * t6409;
	t6616 = -0.96e2 * t5879;
	t6199 = t5845 * t5984 * t6616;
	t6116 = t5893 * t6199;
	t5942 = -5 * t5962;
	t5947 = 7 * t5967;
	t5660 = (t5913 + t5958 + (7 * t5969)) * t5981 + (t5947 + ((t5942 + 10 * t5975) * t5969) + t6159) * t5973 + t6452;
	t6554 = t5660 * pkin(3);
	t6412 = -0.8e1 * t6554;
	t6192 = t6412 * t6560;
	t6650 = -0.8e1 * t5619 * t6237 - 0.96e2 * t5646 * t6122 - 0.64e2 * t5892 * t6086 + t5931 * t6192 + t6116 * t6560 + t6150 * t6669;
	t6649 = -0.6e1 * pkin(1);
	t6648 = -0.4e1 * pkin(1);
	t6647 = -0.2e1 * pkin(1);
	t6644 = -4 * pkin(3);
	t6643 = -2 * pkin(3);
	t6641 = -0.12e2 * pkin(1);
	t5651 = t5879 * t6102 - t5970 + (-t5900 - t6429) * t5981 + (t5875 + t6431 + t6659) * t5973 + t5975 * t5764;
	t6390 = 0.8e1 * t6474;
	t5877 = -8 * t5967 + 12 * t6467;
	t6508 = t5877 * t5894;
	t5977 = pkin(1) * t5975;
	t6562 = pkin(1) * t5984;
	t5861 = t5977 * t6682 - 0.12e2 * t6562;
	t6513 = t5861 * t5931;
	t5694 = pkin(1) * t6338 + t6390 + t6434 - (6 * t6467) + t6508 + t6513;
	t5882 = -30 * t5962 + 60 * t5975;
	t6078 = (6 * t5974) + t6436 - (6 * t6468);
	t6173 = t5646 * t6306;
	t6203 = t6494 * t6554;
	t6126 = t6293 * t5884;
	t5719 = t5845 * t5889 + t6126 * t6643;
	t6311 = t5719 * t6463;
	t6340 = 0.24e2 * t6471;
	t6413 = 0.8e1 * t5883;
	t6506 = t5881 * (-t5965 + t6251);
	t5828 = 16 * (t6430 - 6 * t6469) * t5967;
	t6516 = t5828 * t5892;
	t6613 = 0.24e2 * t5897;
	t5588 = -0.32e2 * t6173 + t6516 + t5651 * t6340 + (t5941 + t5957 + 28 * t5969) * t5970 + (t5855 * t6506) + (t5618 * t6613 + (t5882 * t5967) + (t5943 * t5974) + t6078 * t5949 + t6436 * t5959 + 0.4e1 * t5977 ^ 2 + (28 * t5984 ^ 2)) * t5973 + (-t5619 * t6510 - t6203) * t6548 + (t5637 * t6413 + 0.32e2 * t6311) * pkin(1) + (0.16e2 * t5694 * t5895 + (t5882 * t5969) + (70 * t5967) + t5981 + t6078) * t5981;
	t6367 = t5930 * t6558;
	t6208 = t5893 * t6367;
	t5625 = t5731 * t6388 + (t5703 * t6415 - 0.8e1 * t6208) * pkin(1) + t5652;
	t5846 = t6660 * t5939;
	t6438 = t5942 - 5 * t5965;
	t5669 = 0.7e1 * t5970 + ((35 * t5969 + 15 * t5975 + t6438) * t5981) + ((21 * t5967 + t5846 + 9 * t5974 + (t5943 - 6 * t5965) * t5975) * t5973) + t6506;
	t6499 = t5895 * t5981;
	t6350 = -0.24e2 * t6499;
	t6112 = t5771 * t6350 + t5669;
	t5659 = t5970 + ((21 * t5969 + t6660) * t5981) + ((t5975 * t6439 + t5846 + t5954 + 35 * t5967) * t5973) + ((t5947 + (t5955 + t6438) * t5969 + t5975 * (-t5965 + t6429)) * t5886);
	t6305 = t5879 * t6474;
	t6113 = -t5659 + 0.24e2 * t6305;
	t6172 = t5658 * t6306;
	t5809 = t5953 + 0.3e1 / 0.2e1 * t5969 + t6256;
	t6355 = t6555 / 0.2e1;
	t5729 = t5809 * t5884 + t5889 * t6355;
	t6220 = t5729 * t6375;
	t6258 = t5975 + t6445;
	t5803 = t6571 + t5925 + t6258;
	t6158 = t5927 + t6258;
	t5804 = t5923 + t6158;
	t5697 = -t5803 * t6555 + t5804 * t5884;
	t5808 = t5969 + t6158;
	t5873 = 2 * t5973 + t5887;
	t6356 = -t6555 / 0.2e1;
	t5717 = t5808 * t5884 + t5873 * t6356;
	t5725 = -t5981 + (t5901 + t6260) * t5973 - (3 * t5967) + t6261 * t5969 + t5974;
	t6160 = -0.8e1 / 0.3e1 * t6474 + (t5973 * t5887) - 0.5e1 / 0.3e1 * t5967 + t6259 * t5969 + t5975 * t6257;
	t6091 = pkin(2) * t6160;
	t5623 = t5697 * t6386 + t5725 * t6356 + t5930 * t6091 + (t5717 * t5883 - t6292) * t6550;
	t6316 = t5623 * t6496;
	t6389 = -0.6e1 * t6471;
	t6400 = 0.6e1 * t6510;
	t6428 = -0.6e1 * t6566;
	t5596 = 0.16e2 * t6220 + 0.8e1 * t6172 - 0.12e2 * t6316 + t5656 * t6389 + (t5652 * t6428 + t5929 * t6112) * pkin(3) + (t5625 * t6400 + t5930 * t6113) * pkin(2);
	t5582 = t5588 * t5818 + t5596 * t5976;
	t5837 = t5950 + t5965 + t6250;
	t5839 = t5857 - pkin(3);
	t5737 = t5837 + t5867 + t6190;
	t6307 = t5737 * t5836;
	t6426 = pkin(1) * t6622;
	t6520 = t5763 * t5976;
	t5611 = -t6307 + t6520 + (t5837 * t6494 + t5839 * t6426) * pkin(2) + (-t5855 - t5953 + t6397 - 0.2e1 * t6517) * pkin(3);
	t6595 = t5611 / 0.4e1;
	t6280 = t5592 * t6595;
	t6381 = (0.4e1 * t5894 - 0.2e1) * pkin(3);
	t5778 = t5867 + t5965 + t6156;
	t6518 = t5778 * t5931;
	t5687 = t5862 * t6381 + t6518;
	t5762 = -t5857 + t5836;
	t5756 = pkin(3) + t5762;
	t6362 = t5787 * t5883;
	t5678 = t5778 * t5862 + 0.2e1 * t6362;
	t6527 = t5678 * t5929;
	t5614 = t5687 * t5884 + t5756 * t5976 + t6527;
	t6530 = t5614 * t5976;
	t6041 = t5582 * t6280 - t6530 / 0.4e1;
	t6361 = pkin(3) * t5836;
	t5710 = t5840 + t5867 + t6252 + 0.2e1 * t6361;
	t5704 = 0.1e1 / t5710;
	t6475 = 0.1e1 / pkin(5) / pkin(4) ^ 2;
	t6314 = t5704 * t6475;
	t5572 = t6041 * t6314;
	t5571 = t5572 * t6092;
	t6588 = t5614 / 0.4e1;
	t6279 = t5592 * t6588;
	t6532 = t5611 * t5976;
	t6042 = t6532 / 0.4e1 + t5582 * t6279;
	t5573 = t6042 * t6314;
	t5796 = -t6484 + t6492;
	t5564 = -t5573 * t5796 + t5571;
	t5560 = 0.1e1 / t5564;
	t5561 = 0.1e1 / t5564 ^ 2;
	t5593 = 0.1e1 / t5595 ^ 2;
	t5705 = 0.1e1 / t5710 ^ 2;
	t6640 = -0.4e1 * qJD(2);
	t6639 = 0.8e1 * t5619;
	t6638 = -0.6e1 * t5625;
	t6630 = -0.4e1 * t5817;
	t5675 = (t6143 + t6146) * t6630;
	t6231 = -0.2e1 * t6320;
	t5633 = t5869 * t6231 + (t5748 * t5931 - t5755 * t6540) * pkin(1) * t6682 + t5675;
	t6637 = 0.6e1 * t5633;
	t5800 = t5871 - t6363;
	t5806 = t5874 * t5871;
	t6324 = t5872 * t6539;
	t6514 = t5834 * t5929;
	t6626 = -0.2e1 * t5894;
	t5642 = t5806 + (t5929 * t6230 + t6542 * t6626) * t6559 + (-t6324 + (-qJD(2) * t6514 + t5800 * t5931) * t6683) * pkin(3);
	t6636 = -0.4e1 * t5642;
	t6635 = 0.6e1 * t5643;
	t6418 = -0.4e1 * t6555;
	t6421 = pkin(3) * t6630;
	t6624 = -0.2e1 * t5929;
	t5653 = (t5869 * t6624 + t5884 * t6421) * t5931 + (t5755 * t6418 - 0.8e1 * t6212) * pkin(1);
	t6634 = 0.6e1 * t5653;
	t6633 = -0.4e1 * t5668;
	t6631 = -0.6e1 * t5715;
	t6629 = -0.6e1 * t5818;
	t6628 = -0.2e1 * t5890;
	t6625 = -0.8e1 * t5896;
	t6623 = -0.2e1 * t5931;
	t6619 = -24 * qJD(1);
	t6618 = 24 * qJD(1);
	t6617 = 96 * qJD(1);
	t6615 = -0.24e2 * t5894;
	t6610 = pkin(2) * pkin(3);
	t5674 = t6039 * t6610 * t6656;
	t5677 = (-0.8e1 / 0.3e1 * t6318 - 0.8e1 / 0.3e1 * t6295) * t5833 * t6610;
	t5740 = (-0.2e1 / 0.3e1 * t6318 - 0.2e1 / 0.3e1 * t6295) * t6610;
	t6343 = -0.32e2 * t6473;
	t6353 = -0.28e2 * t5661 * t5969;
	t6035 = t5880 * t6343 + t5931 * t6353;
	t6337 = -0.48e2 * t6462;
	t6424 = t5664 * t6645;
	t6070 = t5770 * t6337 + t6424;
	t6083 = t5878 * t6143;
	t6141 = t5878 * t6235;
	t5606 = t6083 * t6675 + t5674 * t6341 + (t5677 * t6414 + t5740 * t6338) * pkin(1) + (t6141 * t6675 + (pkin(1) * t6070 + t6035) * t5929) * qJD(2);
	t5728 = t5747 * t6335;
	t5746 = t5984 * t6012;
	t6422 = t5765 * t6644;
	t6005 = (t5754 * t6623 + (t6422 - 0.24e2 * t6462) * pkin(1)) * t5929;
	t5626 = t5823 * t6477 + t5746 * t5894 + t5728 + (t5931 * t6104 + t6005) * qJD(2);
	t5666 = t5879 * t5691;
	t6233 = pkin(1) * t6337;
	t5683 = (t5877 * t6623 - t5861 + t6233 + t6343) * t5929;
	t5670 = qJD(2) * t5683;
	t5707 = t6008 * t6476;
	t6352 = -0.64e2 * t5694 * t5981;
	t6036 = t5896 * t6352 + t6478 * t6671;
	t6345 = -0.48e2 * t6482;
	t6055 = t5651 * t6345 - 0.4e1 * t5828 * t5893;
	t6200 = -0.96e2 * t5719 * t6462;
	t6201 = 0.96e2 * t5646 * t6495;
	t6315 = t5646 * t6497;
	t6346 = 0.24e2 * t6496;
	t6349 = 0.16e2 * t6499;
	t5577 = t5606 * t6346 + t5666 * t6340 + t5670 * t6349 + (-0.8e1 * t5610 * t6560 - 0.32e2 * t5626 * t6497) * t5863 + (t5648 * t6413 + 0.32e2 * t5707 * t6463) * pkin(1) + (t5929 * t6192 + ((pkin(2) * t6639 + t6201) * t5863 + t6036) * t5930) * qJD(1) + (-0.8e1 * t5660 * t6235 + (pkin(1) * t6200 + 0.8e1 * (-pkin(1) * t5637 + t5619 * t6560 + 0.4e1 * t6315) * pkin(3) + t6055) * t5929) * qJD(2);
	t5690 = -t5803 * t6363 + t5804 * t5871;
	t6354 = -t5883 / 0.2e1;
	t5708 = qJD(2) * t5873 * t6354 + t5808 * t5871;
	t6132 = t6330 * t5884;
	t6243 = t5717 * t6418;
	t6393 = -0.8e1 * t6482;
	t6504 = t5890 * t5894;
	t5609 = t5708 * t6335 + t5690 * t6386 + t6091 * t6542 + (t5725 * t6354 + (t5697 * t6393 + t5893 * t6132) * t5929 + (t6243 + (-0.4e1 * t5892 + 0.12e2 * t6504) * t5967) * pkin(1)) * qJD(2);
	t6479 = t5931 * t5984;
	t6317 = qJD(2) * t6479;
	t6027 = qJD(1) * t6365 - t6317;
	t5791 = 0.4e1 * t6027;
	t5801 = t5871 + 0.2e1 * t6363;
	t5634 = t5888 * t5871 + t5819 * t6231 + t5791 * t5894 + (0.2e1 * t5807 * t6539 + (t5801 * t5931 - t5835 * t6540) * t6683) * pkin(3);
	t5650 = -t5730 * t6363 + t5688;
	t5654 = t5726 * t5871 - 0.2e1 * t5732 * t6363;
	t5712 = t5809 * t5871 + t5889 * t6363 / 0.2e1;
	t6408 = pkin(1) * t6555;
	t5864 = -0.2e1 * t6408;
	t5851 = qJD(2) * t5864;
	t6161 = -0.8e1 / 0.3e1 * t6283;
	t5766 = qJD(2) * t6161 + t5851;
	t6015 = pkin(1) * t6678 + t6497 * t6677 + t6560 * t6638;
	t6025 = -t5658 * t5863 * t6495 + t5623 * t6478;
	t6057 = t6112 * t5931;
	t6117 = t5930 * t6473 * t6616;
	t6227 = t6511 * t6638;
	t6348 = -0.12e2 * t6496;
	t5580 = t5634 * t6225 + t5609 * t6348 + (-0.6e1 * t5654 * t5894 + t6320 * t6670) * t5969 + t6025 * qJD(1) * t6402 + (0.16e2 * t5712 * t5893 - 0.48e2 * t5729 * t6322) * t6562 + (t6117 * t6540 + t5615 * t6400 + (t5932 * t6113 + t6227) * qJD(1)) * pkin(2) + (t5650 * t6428 + (t5771 * t6498 * t6617 - 0.24e2 * t5766 * t5895) * t6487 + (t5929 * t6015 + t6057) * qJD(2)) * pkin(3);
	t6364 = pkin(3) * t6540;
	t6374 = pkin(2) * t6543;
	t5799 = -t6364 + t6374;
	t6586 = t5630 / 0.2e1;
	t6274 = t5613 * t6586;
	t5565 = t5818 * t5577 + t5580 * t5976 + t5799 * t5588 + t5596 * t6274;
	t6607 = -t5565 / 0.4e1;
	t5741 = (-0.4e1 / 0.9e1 * t6318 - 0.4e1 / 0.9e1 * t6295) * t6610;
	t6002 = (-0.12e2 * t5743 * t6482 + (t5761 * t6644 - 0.12e2 * t6462) * pkin(1)) * t5929;
	t5624 = -0.2e1 * t6083 + t5741 * t6385 + t5728 + (t6002 - 0.2e1 * t6141) * qJD(2);
	t5768 = t5851 - 0.8e1 * t6169;
	t6399 = 0.8e1 * t6497;
	t6228 = t5786 * t6399;
	t6074 = t5667 * t6649 + t6228;
	t6312 = t5715 * t6484;
	t6351 = t5786 * t6402;
	t6425 = 0.6e1 * t6560;
	t6485 = t5930 * t5932;
	t6544 = qJD(1) * t5897;
	t5587 = t5709 * t6115 + (t5639 * t6485 * t6619 + t5624 * t6614) * t5973 + ((t5768 * t6625 + t6351 * t6544) * t5980 + (-t5633 * t5932 + t5643 * t6543) * t6549) * t5863 + (t5843 * t6631 + 0.6e1 * t5675 * t6566 + (-0.6e1 * pkin(2) * t6312 + (t5643 * t6425 + t6074) * t5929) * qJD(2)) * pkin(3) + t6453;
	t5792 = 0.2e1 * t6027;
	t5645 = t5792 * t5894 + ((pkin(3) * t5885) + t5820 * t6624) * t6539 + (pkin(1) * t6011 + t5887 * t6542) * pkin(2);
	t5733 = -pkin(3) * t6324 + t5806;
	t5735 = t5870 * t6542 + 0.4e1 * t5984 * t6176;
	t6304 = t5890 * t6470;
	t6528 = t5668 * t5932;
	t6001 = (t6133 * t5931 + (pkin(1) * t5742 - pkin(2) * t6528) * t6673) * pkin(3) + t6304 * t6625;
	t6137 = -0.24e2 * t6204;
	t6246 = 0.4e1 * t6372;
	t6331 = -0.24e2 * t6410;
	t6391 = 0.8e1 * t6478;
	t5598 = -0.4e1 * t5733 * t6407 + t5642 * t6246 + t5645 * t6398 + t5735 * t5894 + ((t5676 * t6391 + t5863 * t6137) * t5930 + (t5932 * t6151 + t6511 * t6633) * pkin(2)) * qJD(1) + ((t5749 * t6623 + t6331 * t6462) * t5929 + t6001) * qJD(2);
	t6271 = t5617 * t6586;
	t5574 = t5818 * t5587 + t5598 * t5976 + t5799 * t5603 + t5613 * t6271;
	t6606 = -t5574 / 0.4e1;
	t5757 = t5843 + t5842;
	t5680 = t6028 - t5757;
	t5620 = t5680 * t5976;
	t6241 = t5862 * t6683 + t5778;
	t6088 = t6241 * t5884;
	t5647 = (t5769 * t5931 - t5787 * t6540) * t6547 + qJD(1) * t6088;
	t5698 = (-t5778 - 0.8e1 * t6361) * t5929;
	t5738 = (t6381 + t6427) * t5884;
	t5655 = qJD(1) * t5738 + qJD(2) * t5698;
	t6573 = t5756 / 0.2e1;
	t6268 = t5630 * t6573;
	t6524 = t5687 * t5932;
	t6526 = t5678 * t5931;
	t5589 = t5620 + t5613 * t6268 + t5647 * t5929 + qJD(2) * t6526 + (qJD(1) * t6524 + t5655 * t5930) * pkin(2);
	t6605 = -t5589 / 0.4e1;
	t6604 = t5589 / 0.4e1;
	t6114 = -t5737 * t5931 + t5839 * t6683;
	t6006 = t5837 * t6492 + t5930 * t6114;
	t5721 = t5853 + t6007;
	t6060 = -t5721 * t5931 + t5737 * t6540;
	t6572 = t5763 / 0.2e1;
	t6267 = t5630 * t6572;
	t6525 = t5681 * t5976;
	t5590 = t6525 + t5613 * t6267 + t6060 * t5862 + (t6135 + 0.4e1 * t6175 - 0.2e1 * t6519) * pkin(3) + (qJD(1) * t6006 + t5757 * t6426 + t5837 * t6318) * pkin(2);
	t6603 = -t5590 / 0.4e1;
	t6602 = t5590 / 0.4e1;
	t6601 = t5592 / 0.4e1;
	t5662 = 0.2e1 * t5794 * t5883 + t6088;
	t5774 = t5796 * pkin(2);
	t5597 = -t5774 * t5976 + t5628 * t6268 + t5662 * t5929 + (t5738 * t5930 + t6524) * pkin(2);
	t6600 = t5597 / 0.4e1;
	t5775 = t5857 + t6366;
	t5782 = t5866 - 0.4e1 * t6236;
	t6298 = t5897 * t6490;
	t5599 = t5775 * t5976 + t5628 * t6267 - t5782 * t5836 + t6298 * t6647 + (t5794 * t6626 + t6224) * pkin(3) + t6006 * pkin(2);
	t6599 = t5599 / 0.4e1;
	t5600 = pkin(3) * t5787 * t6628 + t5635 * t6268 + t5698 * t5884 - t6520 + t6526;
	t6598 = t5600 / 0.4e1;
	t6376 = pkin(1) * t6478;
	t5601 = t5762 * t5976 + t5635 * t6267 + (t5737 * t5862 + 0.4e1 * t6362) * t5929 + (t6376 * t6623 + (t5837 * t5931 + t5894 * t6420) * pkin(2)) * t5930;
	t6597 = t5601 / 0.4e1;
	t6596 = -t5611 / 0.4e1;
	t6594 = t5611 / 0.8e1;
	t6592 = t5613 / 0.2e1;
	t6590 = -t5614 / 0.4e1;
	t6589 = -t5614 / 0.8e1;
	t6584 = t5635 / 0.2e1;
	t6583 = -t5663 / 0.4e1;
	t6582 = t5663 / 0.4e1;
	t6581 = -t5665 / 0.4e1;
	t6580 = t5673 / 0.4e1;
	t6579 = t5680 / 0.2e1;
	t6578 = t5681 / 0.2e1;
	t6577 = -t5739 / 0.4e1;
	t6576 = t5739 / 0.4e1;
	t6575 = t5751 / 0.4e1;
	t6574 = -t5751 / 0.4e1;
	t6570 = -t5976 / 0.4e1;
	t6568 = pkin(1) * qJD(2);
	t6567 = pkin(1) * t5863;
	t6556 = pkin(3) * t5807;
	t6552 = -0.4e1 * t6611;
	t6019 = t5705 * t6042;
	t6275 = t5630 * t6594;
	t6277 = t5593 * t6590;
	t5544 = (-t5663 * t6019 + (t5590 * t6569 + t5613 * t6275 + t5565 * t6279 + (t5574 * t6277 + t5589 * t6601) * t5582) * t5704) * t6475;
	t5699 = -t6039 - t6040;
	t6018 = t5705 * t6041;
	t6272 = t5630 * t6589;
	t6278 = t5593 * t6596;
	t5543 = (-t5663 * t6018 + (t5565 * t6280 + t5589 * t6570 + t5613 * t6272 + (t5574 * t6278 + t5590 * t6601) * t5582) * t5704) * t6475;
	t6296 = qJD(1) * t6494;
	t5700 = qJD(2) * t6092 - t6289 - t6296;
	t6459 = t5543 * t5796 + t5572 * t5700;
	t5535 = t5544 * t6092 + t5573 * t5699 + t6459;
	t6454 = t5543 * t6092 + t5572 * t5699;
	t5536 = -t5544 * t5796 - t5573 * t5700 + t6454;
	t5570 = t5572 * t5796;
	t5563 = t5573 * t6092 + t5570;
	t5559 = t5563 ^ 2;
	t5556 = t5559 * t5561 + 0.1e1;
	t5554 = 0.1e1 / t5556;
	t6533 = t5561 * t5563;
	t5527 = qJD(1) + (t5535 * t5560 - t5536 * t6533) * t5554;
	t5553 = qJ(1) + atan2(t5563, t5564);
	t5551 = sin(t5553);
	t6537 = t5527 * t5551;
	t5552 = cos(t5553);
	t6536 = t5527 * t5552;
	t6534 = t5536 * t5560 * t5561;
	t6535 = 0.2e1 * (t5535 * t6533 - t5559 * t6534) / t5556 ^ 2;
	t6531 = t5613 * t5630 / t5632;
	t6529 = t5663 * t5704 * t5705;
	t6447 = t5891 - t5897;
	t6068 = t6447 * t5973 * t6406;
	t5750 = t5854 + t6068;
	t6522 = t5750 * t5894;
	t6507 = t5879 * t5894;
	t6503 = t5890 * t5931;
	t6502 = t5890 * t5967;
	t6501 = t5891 * t5973;
	t6500 = t5894 * t5930;
	t6489 = t5929 * t5976;
	t6481 = t5931 * t5976;
	t6480 = t5931 * t5980;
	t6464 = t5984 * t5890;
	t6152 = t5931 * t6242;
	t6004 = pkin(2) * (-t5893 * t6184 + t6152);
	t6013 = pkin(2) * (-0.16e2 * t5833 * t6471 - t5892 * t6330);
	t5616 = t6035 * t5929 + t5930 * t6004 + (t5929 * t6070 + t5930 * t6013) * pkin(1);
	t6197 = -0.24e2 * t6302;
	t6419 = -0.6e1 * t6555;
	t6339 = -0.24e2 * t6463;
	t6140 = pkin(2) * t5879 * t6339;
	t6451 = t5930 * t6140 + t5798;
	t5621 = (-0.24e2 * t5714 * t6491 + t6191) * t5931 + (pkin(2) * t5845 * t6197 + t5671 * t6419) * pkin(1) + t6451;
	t5829 = t6212 * t6648;
	t6383 = -0.4e1 * t6463;
	t6026 = pkin(2) * (t5931 * t6245 + t6383);
	t5638 = t5930 * t6026 + t5829 + t6005;
	t6194 = -0.64e2 * t6288;
	t6198 = -0.32e2 * t6306;
	t5584 = t5638 * t6198 + t5616 * t6346 + t5683 * t6349 + (0.32e2 * pkin(3) * t6315 + (pkin(3) * t6679 + t6200) * pkin(1) + t6055) * t5929 + (0.8e1 * (t5619 * t6555 - t5621 * t5863) * t5932 + (t6116 + t5931 * t6412 + (t5892 * t6194 + t6471 * t6669) * pkin(1)) * t5930) * pkin(2);
	t6401 = -0.8e1 * t5697 * t5969;
	t5622 = (t5929 * t6401 - pkin(3) * t5725 / 0.2e1) * t5931 + (-0.4e1 * t5803 * t5984 + t5929 * t6132) * t5893 + (t6243 - 0.4e1 * t6474 + (-(2 * t5873 * t5969) + 0.12e2 * t6502) * t5894) * pkin(1);
	t6170 = t5893 * t6287;
	t5627 = -0.4e1 * t6170 + t6038 + (t5703 * t6418 + (-0.4e1 * t5815 * t5969 + 0.24e2 * t6207) * t5894) * pkin(1);
	t5657 = t6383 + 0.2e1 * (-t5819 * t5929 + t6556) * t5931 + (t5835 * t6417 + t6386) * pkin(1);
	t5783 = t6161 + t5864;
	t5585 = t5622 * t6348 + 0.12e2 * t5732 * t6463 + (t5627 * t6425 + t5657 * t6399) * t5863 + pkin(3) * t6057 + (t5730 * t6385 + t5889 * t6390) * pkin(1) + (pkin(2) * t6117 + t5729 * t6233 + t6482 * t6670 + (t5783 * t6350 + t6015) * pkin(3)) * t5929;
	t6022 = qJD(1) * t5894 * (t5862 * t6560 + t6501);
	t6128 = t5857 * t5836;
	t6328 = qJD(1) * t6501;
	t6221 = pkin(1) * t6328;
	t6310 = t5769 * t6493;
	t5608 = (0.8e1 * t6310 + 0.8e1 * t6022 + (-t5787 * t6187 - 0.16e2 * t6128) * qJD(2)) * t5969 + (0.8e1 * t5931 * t6221 + (t5720 * t5929 + t5736 * t6539) * t6405 + (t6309 * t6640 + (t5736 * t6494 + t5779 * t6483) * t6406) * pkin(2)) * pkin(3);
	t6238 = pkin(1) * t6363;
	t5852 = -0.2e1 * t6238;
	t6037 = pkin(1) * t6126 * t6473;
	t6077 = t6207 * t6507;
	t6046 = qJD(2) * t6077;
	t6053 = qJD(2) * t6087;
	t6079 = t5929 * t6138;
	t6081 = t5932 * t6140;
	t6177 = t5890 * t6317;
	t6131 = pkin(1) * t6177;
	t6093 = qJD(1) * t6081 - 0.24e2 * qJD(2) * t6218 - 0.24e2 * t5711 * t6283 + 0.48e2 * t5889 * t6131 + 0.72e2 * t6046;
	t6239 = pkin(1) * t6368;
	t6186 = 0.48e2 * t6239;
	t6099 = t5929 * t6186;
	t6103 = t6203 * t6548;
	t6119 = 0.24e2 * t6178;
	t6120 = -0.48e2 * t6178;
	t6121 = t6305 * t5884;
	t6123 = t5771 * t6206;
	t6299 = t5896 * t6480;
	t6124 = pkin(3) * qJD(2) * t6299;
	t6210 = t6462 * t6560;
	t6129 = qJD(1) * t6210;
	t6130 = qJD(1) * t6211;
	t6139 = t6350 * t5883;
	t6273 = -t6531 / 0.4e1;
	t6164 = t5635 * t6273;
	t6189 = 0.2e1 * t6448;
	t6196 = -0.64e2 * t6300;
	t6209 = t5969 * t5857;
	t6370 = t5890 * t5884;
	t6213 = t5967 * t6370;
	t6244 = 0.2e1 * t6358;
	t6247 = -0.8e1 * t6372;
	t6249 = pkin(1) * t6393;
	t6264 = -0.4e1 * t5747 * t6408 + t6130 * t6648 + 0.8e1 * t6053;
	t6269 = t5630 * t6584;
	t6276 = t5596 * t6586;
	t6284 = qJD(2) * t6471;
	t6323 = qJD(2) * t6504;
	t6336 = 0.12e2 * t6462;
	t6396 = -0.2e1 * t6493;
	t6403 = 0.4e1 * t5931;
	t6404 = 0.2e1 * t5929;
	t5547 = (0.96e2 * t5729 * t6131 - 0.12e2 * t5656 * t6285 - 0.32e2 * t5889 * t6292 * t6568 + t5852 * t6666 + 0.12e2 * t5654 * t6283 + (-t5791 * t5931 - t5801 * t6611) * t6404 * t6225 + t5730 * t6169 * t6641 + t5622 * t6119 + t5766 * t6139 - 0.8e1 * t5634 * t6205 - t5669 * t6364 + t6284 * t6670 + t6124 * t6677 + t6238 * t6678 + t6236 * t6680 - 0.48e2 * t5712 * t6219 + 0.6e1 * t5650 * t6408 + ((t5690 * t6393 + t5708 * t6552 + t5871 * t6183) * t6348 + (t5716 * t6392 + (t5696 * t6644 + 0.24e2 * t6129) * pkin(1)) * t6672) * t5929 + t6688 * t5657 + t6684 * t5627 + t6686 * t5625) * t5976 + t5585 * t6274 + t5580 * t6269 + t5596 * t6164 + t5608 * t6276 - t5588 * t6363 - t5577 * t6555 + t5799 * t5584 + t5818 * (0.192e3 * t5719 * t6131 - 0.96e2 * t6311 * t6568 + (-0.28e2 * t5674 * t6283 + t6004 * t6542 + ((t5677 * t6645 + t5740 * t6337) * t5929 + t6013 * t6542) * pkin(1)) * t6346 + t6236 * t6681 - 0.48e2 * t5666 * t6283 + (t5746 * t6396 + t6026 * t6542 + t6264) * t6198 + t6238 * t6679 + t5616 * t6120 + t6145 * t6639 + t6516 * t6640 + 0.32e2 * t5626 * t6205 + (t5931 * t6111 + (t5691 * t6419 - 0.24e2 * t5845 * t6130) * pkin(1) + t6093) * t6247 + 0.96e2 * t5718 * t6053 - 0.96e2 * t5707 * t6219 + 0.288e3 * t5845 * t6046 + 0.12e2 * t5828 * t6323 + 0.32e2 * t5646 * t6124 - 0.8e1 * t5648 * t6408 + 0.48e2 * (t6285 - t6284) * t5651 + t6689 * t5638 + t6685 * t5621) + (((0.8e1 / 0.3e1 * t5890 - 0.8e1 / 0.3e1 * t5894) * t5969 * t6666 + 0.24e2 * t6123 + (t6379 * t6643 + t5819 * t6189 + (t6249 + t6336 - 0.2e1 * t6556) * t5929) * t6225 + ((0.12e2 * t5894 * t6287 + t6557) * t5929 - t5969 * t5731 * t6187 + (0.24e2 * t6208 + (t5703 * t6644 + t5815 * t6395 - 0.48e2 * t5890 * t6367) * t5931) * pkin(1)) * t6672 - 0.96e2 * t6121 + (t5892 * t6132 + 0.8e1 * t5697 * t6472 + t5725 * t6355 + (0.12e2 * t5803 * t6486 - 0.32e2 * t6213 + t6401) * t5894 + (0.40e2 * t6292 + (-pkin(3) * t5717 + t5873 * t6491 - 0.6e1 * t5929 * t6502) * t6403) * pkin(1)) * t6348 - 0.48e2 * t6220 - 0.36e2 * t5732 * t6303 + 0.288e3 * t6213 * t6507 + t5783 * t6139) * t5976 + t5818 * ((0.4e1 * t6082 + 0.28e2 * t5661 * t6472 - 0.32e2 * t6286 + (0.64e2 * t5832 * t6207 + 0.96e2 * t5880 * t6502 + t6353) * t5894 + ((-0.48e2 * t5770 * t5984 + 0.128e3 / 0.3e1 * t5857 * t5967) * t5893 + (0.96e2 * t5770 * t6464 + 0.32e2 * t5833 * t6209 + t6424) * t5931) * pkin(1)) * t6346 + (t5754 * t6189 + (t6244 + t6336) * t5857 + (t6339 + (t6422 + 0.48e2 * t6464) * t5931) * pkin(1)) * t6198 + (-0.48e2 * t6375 - t6513 - 0.2e1 * t6508 - 0.32e2 * t6474 + (0.96e2 * pkin(1) * t6479 + 0.96e2 * t5894 * t5967 + (2 * t5877)) * t5890) * t6349 + t6103 + ((-t5671 * t6566 + t5718 * t5857) * t6545 + (0.24e2 * t5714 * t6448 + t5845 * t6099) * t5969) * t6247 + 0.256e3 * t6037)) * qJD(2) + ((t5783 * t6079 + t6658) * t5976 + t5818 * (t5683 * t6196 + t6650)) * qJD(1);
	t6266 = -0.8e1 / 0.3e1 * t6463;
	t6411 = -0.2e1 * t6553;
	t6056 = t5931 * t6411 + t6266;
	t5636 = t5884 * t6056 + t5829 + t6002;
	t5793 = t5864 - 0.8e1 * t6283;
	t6226 = -0.8e1 * t6306;
	t6344 = -0.24e2 * t6482;
	t6347 = 0.12e2 * t6496;
	t5602 = t5793 * t6226 + t5636 * t6347 + (pkin(3) * t6074 + t5709 * t6344) * t5929 + (pkin(1) * t5817 * t6197 - 0.6e1 * t5653 * t6510 + (t5643 * t6492 - t6312) * t6545) * pkin(2) + t6451;
	t5672 = (-(pkin(3) * t5872) + 0.4e1 * t6209) * t5931 + (-pkin(3) * t6514 - t6471) * t6683;
	t6193 = t5857 * t6647;
	t5679 = t5820 * t6396 - 0.2e1 * t6463 + (t5885 * t5931 + t6193) * pkin(3);
	t5607 = t5672 * t6246 + 0.4e1 * t6170 + t5679 * t6398 + t5749 * t6396 + ((t5872 * t6620) - 0.24e2 * t6207) * t5894 * pkin(1) + t6001;
	t6118 = -0.24e2 * t5786 * t6297;
	t6294 = t5929 * t6483;
	t6308 = t5818 * t6496;
	t6377 = pkin(1) * t6493;
	t6378 = pkin(1) * t6471;
	t6416 = -0.4e1 * t5883;
	t5557 = t5617 * t6164 + t5799 * t5602 + t5818 * (t5852 * t6226 + t6264 * t6347 + t6093) + (t5607 * t6592 + t5598 * t6584 + t5617 * t5608 / 0.2e1) * t5630 + (t5818 * (t6056 * t6397 + t6378 * t6630 - t5715 * t5883 - (t5817 * t6416 - 0.8e1 * t6378) * t6372) * t5932 * t6549 + ((t5679 * t6391 + t6304 * t6613) * t5976 - 0.24e2 * t5818 * t5636 * t6478 + ((-0.24e2 * pkin(3) * t5897 * t6480 - 0.4e1 * pkin(2) * t5672) * t5976 + t5818 * (pkin(2) * t6634 + 0.24e2 * t5793 * t6495)) * t5863) * t5930) * qJD(1) + (-0.24e2 * t6129 * t6563 + ((t5863 * t6327 * t6667 + 0.8e1 * t5792 * t6496 - 0.2e1 * t5735) * t5976 - 0.144e3 * t5741 * t5969 * t6308) * t5931 + (0.4e1 * t5733 * t6563 - t5587 + t5818 * (qJD(1) * t6118 + t5675 * t6649 + t5768 * t6399) + ((t5643 * t6629 + t5976 * t6632) * t6543 + ((0.8e1 * pkin(1) * t6327 - 0.8e1 * t5800 * t6567 + t6636) * t5976 + t5818 * (0.24e2 * t5748 * t6567 + t6637)) * t5932) * pkin(2)) * pkin(3)) * t5929 + (((t5890 * t6186 + t5893 * t6331 - 0.12e2 * t5894 * t6293 + t6298 * t6615) * t5976 + 0.12e2 * (0.24e2 * pkin(1) * t6503 + 0.8e1 * t5857 * t5894 + t5893 * t6641) * t6308) * t5984 + ((-0.24e2 * t5929 * t6299 + 0.4e1 * (pkin(2) * t6500 - t6370 + t6377) * t6246 - 0.8e1 * t5872 * t6377) * t5976 + t5818 * (-0.96e2 * t6294 * t6511 * t6564 + t6226 * t6187 + t5817 * t6099 + 0.12e2 * t6448 * t6347 * t5743 + (0.24e2 * t5890 + t6615) * t5709)) * t5969 + (((-0.2e1 * t6239 - t6505) * t6398 + 0.4e1 * t6380 + (t6226 - t5797) * t5929) * t5976 - t5931 * t5603 + t5818 * (t6313 * t6549 + (t6521 * t6648 + 0.2e1 * t6214) * t6347 + 0.8e1 * t5793 * t6301 + t5931 * t6228 + t5667 * t6428) + (0.4e1 * (-t5931 * t5668 - t5929 * t5672 - t5863 * t6073) * t5976 + (t5931 * t6635 + t5929 * t6634 + 0.24e2 * (t5755 * t6566 - t5817 * t5857) * t5863) * t5818) * t6560) * pkin(3) + ((t5820 * t6398 + t5749) * t5976 + t5869 * t6372 * t6629) * t6189) * qJD(2);
	t5566 = t5818 * t5584 + t5585 * t5976 - t5588 * t6555 + t5596 * t6269;
	t6163 = t5756 * t6273;
	t5578 = -t6525 + t5635 * t6163 + t5647 * t5931 - qJD(2) * t6527 + t5698 * t5871 + (qJD(1) * t6193 - qJD(2) * t6518) * t5884 + (-t5763 * t5613 / 0.2e1 + t5635 * t6579 + t5608 * t6573) * t5630 + (t5769 * t6628 - 0.4e1 * t6175 + t5930 * (t6448 * qJD(2) * t5862 - pkin(2) * t6180) * t6548) * pkin(3);
	t6162 = t5763 * t6273;
	t6188 = 0.2e1 * t6447;
	t5579 = t5620 + t5635 * t6162 + t5721 * t6512 + (t5608 * t6572 + t5635 * t6578 + t5762 * t6592) * t5630 + (t6307 + (-pkin(2) * t5837 + 0.2e1 * t6376) * t6494) * qJD(2) + (t5737 * t5857 + (t5837 * t6560 + t6188 * t6564) * t5931) * qJD(1) + (t6022 + t6310 + (-t5787 * t6448 - 0.2e1 * t6128) * qJD(2)) * t6682;
	t5581 = t5818 * t5602 - t5603 * t6555 + t5607 * t5976 + t5617 * t6269;
	t6281 = t5582 * t6665;
	t6009 = (-t6530 / 0.2e1 + t5611 * t6281) * t6529;
	t6030 = t5593 * (t5574 * t6574 + t5581 * t6582);
	t6032 = t5593 * (t5566 * t6606 + t5581 * t6607);
	t6033 = t5592 * (t5565 * t6575 + t5566 * t6583);
	t6063 = t5590 * t6575 + t5601 * t6583;
	t6064 = t5589 * t6574 + t5600 * t6582;
	t6185 = t6531 / 0.16e2;
	t6097 = t5635 * t6185;
	t6282 = t5574 * t5593 * t6665;
	t6167 = t5611 * t6282;
	t6461 = (-t5751 * t6009 + (t6064 * t5976 + t5611 * t6033 + t6652 * t5614 + (t5611 * t6030 + (t5611 * t6580 + t6063) * t5592) * t5582) * t5705 + (t5614 * t6097 + t5578 * t6570 + t5611 * t6032 + (t5589 * t6585 + t5600 * t6593 + t5608 * t6589) * t5630 + (t5547 * t6595 + t5565 * t6597 + t5566 * t6602) * t5592 + (t5579 * t6601 + t5581 * t6167 + (t5557 * t6596 + t5581 * t6603 + t5601 * t6606) * t5593) * t5582) * t5704) * t6475 - t5544;
	t5644 = t6655 * t6369;
	t6127 = t5929 * t6210;
	t5767 = -0.24e2 * t5879 * t6127;
	t6232 = pkin(1) * t6344;
	t5649 = t5767 + (t5845 * t6232 + t6423) * t6369;
	t5802 = t6149 * t6691;
	t6071 = t6244 + 0.4e1 * t6462;
	t5689 = -t6071 * t6369 + t5802;
	t5586 = t5689 * t6198 - t5644 * t6346 + (t5863 * t6201 + t6036) * t5930 + (t6511 * t6639 + (-0.8e1 * t5863 * t5649 + (t5894 * t6199 + t6412 + (t5718 * t6345 + t5893 * t6194) * pkin(1)) * t5929) * t5932) * pkin(2);
	t6134 = t5831 * t6384 - t5702;
	t5640 = ((t5816 * t6415 - 0.8e1 * t6463) * pkin(1) - t6134) * t6560;
	t6333 = t5808 * t6552;
	t6003 = t5804 * t6388 + t5931 * t6333 - t6160;
	t5641 = t6003 * t6560;
	t5830 = t6234 * t6683;
	t5723 = t6222 * t6560 + t5830;
	t5591 = t5723 * t6225 - t5641 * t6348 + (0.4e1 * t5771 * t5896 * t6359 + t6025) * t6402 + (t6227 + (t5726 * t6389 + 0.6e1 * t5863 * t5640 + (-0.6e1 * t5702 * t5883 + t5809 * t6338) * pkin(1) + t6113) * t5932) * pkin(2);
	t6174 = t5794 * t6320;
	t6179 = t5930 * t6295;
	t5605 = (0.8e1 * t6174 - 0.4e1 * t6522) * t5969 + (t5868 * t6188 - 0.4e1 * t6240) * qJD(1) + ((t5781 * t6540 - t5931 * t6262) * t6405 + (t6539 * t6627 + 0.24e2 * t6179) * t6564 + ((-qJD(1) * t5736 + qJD(2) * t5779) * t5932 * t6403 + (0.4e1 * t6326 - 0.4e1 * t6523 + (-t5779 * t5929 - t5781 * t5931) * t6406) * t5930) * pkin(2)) * pkin(3);
	t6023 = pkin(3) * (-qJD(2) * t6483 + t6296);
	t6045 = qJD(1) * t6077;
	t6047 = t6177 * t6371;
	t6094 = t5932 * t6169;
	t6329 = qJD(1) * t6510;
	t6096 = t5891 * t5980 * t6329;
	t6148 = qJD(2) * t6237;
	t6165 = t5628 * t6273;
	t6181 = qJD(1) * t6302;
	t6182 = t5891 * t5981 * t6544;
	t6216 = pkin(2) * t6329;
	t6263 = 0.4e1 * t6657;
	t6265 = qJD(2) * t6081 + 0.24e2 * t6045 + 0.48e2 * t6047;
	t6270 = t5628 * t6586;
	t6357 = t5973 * t6510;
	t6449 = 0.2e1 * t6687;
	t5550 = (-0.48e2 * t5809 * t6127 * t6568 - 0.24e2 * t5634 * t6171 - t6449 * t6225 + 0.6e1 * t5625 * t6148 - t5641 * t6119 + 0.48e2 * t5658 * t6096 + 0.24e2 * t5609 * t6291 + t5766 * t6079 + t6216 * t6638 - 0.288e3 * t5771 * t6182 * t6555 - 0.24e2 * t5623 * t6328 + 0.6e1 * (0.16e2 * t5831 * t6094 + t6134 * t6543 + (-t5816 * t6663 + t6664) * pkin(1)) * t6357 + t6373 * t6680 + t6123 * t6617 + t6316 * t6618 + t5659 * t6374 + 0.6e1 * t6687 * t5702 + (t6172 + t6121) * t6619 + t6688 * t5723 + t6684 * t5640 + ((-t6222 * t6543 - 0.8e1 * t6094) * t6225 + ((t5804 * t6393 + t6183 + t6333) * t6319 + t6003 * t6543) * t6348 + (0.12e2 * t6094 + 0.6e1 * t6181) * t5726) * pkin(2)) * t5976 + t5591 * t6274 + t5580 * t6270 + t5596 * t6165 + t5605 * t6276 + t5588 * t5871 + t5577 * t5884 + t5799 * t5586 + t5818 * (0.192e3 * t5694 * t6182 + t6373 * t6681 + t5670 * t6196 + 0.96e2 * t5626 * t6171 + ((0.6e1 * t5718 * t6023 + 0.24e2 * t5845 * t6654) * pkin(2) + t6265) * t6247 - t5644 * t6120 - 0.192e3 * t5646 * t6096 - 0.48e2 * t5606 * t6291 + (t6655 * t6296 + (t6152 + (0.128e3 / 0.3e1 * t6503 - 0.64e2 / 0.3e1 * t5893) * t6515 + ((-0.32e2 / 0.3e1 * t5892 + 0.32e2 * t6504) * t5967 + t6448 * t5833 * t6667) * pkin(1)) * t6538) * pkin(2) * t6346 + t6216 * t6639 + 0.96e2 * t5845 * t6045 + 0.48e2 * t5618 * t6328 + ((t6071 * t6296 + (t6383 + (t6245 + 0.8e1 * t6464) * t5931) * t6538) * pkin(2) + t6263) * t6198 + 0.192e3 * t5845 * t6047 + t6173 * t6617 + 0.192e3 * t6086 * t6323 + t6327 * t6671 + 0.48e2 * t6690 * t5718 + t6689 * t5689 + t6685 * t5649) + (-0.16e2 * t5809 * t6208 * t6563 + t5818 * (t5895 * t6352 + 0.64e2 * t6037 + t6103)) * qJD(1) + (t5818 * t6650 + t6658 * t5976) * qJD(2);
	t6089 = 0.8e1 / 0.3e1 * t6462 + 0.2e1 * t6553;
	t5686 = -t6089 * t6369 + t5802;
	t5701 = (t6249 + t6421) * t6369;
	t6195 = -0.24e2 * t6291;
	t5604 = t5639 * t6195 + t5767 + (t5863 * t5980 * t6351 + 0.12e2 * t5686 * t5973) * t5897 + (t6511 * t6635 + (-0.6e1 * t5863 * t5701 + (pkin(3) * t6631 + t5817 * t6232) * t5929) * t5932) * pkin(2);
	t5713 = t5830 - t6662;
	t5724 = t5830 + (t5887 + t6387) * t6560;
	t5612 = t5724 * t6398 + (pkin(2) * t6633 + t6137) * t6511 + (0.8e1 * t5676 * t5930 * t5973 + t5870 * t5894 + (0.4e1 * t5713 * t5863 - t5780 + (t5874 * t6416 + t6382) * pkin(1)) * pkin(2)) * t5932;
	t6394 = 0.8e1 * t6485;
	t5558 = ((t5645 * t6394 + 0.4e1 * t6449 * t5897) * t5973 + (-0.2e1 * t5870 * t6294 + 0.24e2 * (-t5863 * t5883 + t6472) * t6297) * qJD(2) + (-t5870 * t6500 + (0.48e2 * t5891 * t5932 - 0.24e2 * t5896) * t5863 * t6360 + (-0.8e1 * t5676 * t6447 + t5724 * t6394) * t5973) * qJD(1) + ((-t5887 * t6543 - 0.4e1 * t6094 - 0.2e1 * t6181) * t6398 + t5780 * t6543 + 0.4e1 * (t5668 * t5930 - t5713 * t5932) * t6364 + (t5874 * t6663 - t6664) * pkin(1) + (t6449 * t6691 + t5930 * t6636 + 0.16e2 * t5897 * pkin(2) * t6169 + (-t6528 + (-t5713 + t6662) * t5930) * t6406) * t5863) * pkin(2)) * t5976 + t5612 * t6274 + t5598 * t6270 + t5617 * t6165 + t5605 * t6271 + t5603 * t5871 + t5587 * t5884 + t5799 * t5604 + t5818 * (t5624 * t6195 - 0.48e2 * t6357 * t6654 + 0.24e2 * t5768 * t6171 + t6373 * t6637 + t6265 - 0.6e1 * t5643 * t6148 + t6216 * t6635 + t6168 * t6618 - 0.48e2 * t5786 * t6096 - 0.24e2 * t5686 * t6178 + ((t6089 * t6296 + (t6266 + (0.16e2 / 0.3e1 * t6464 + t6411) * t5931) * t6538) * pkin(2) + t6263) * t6347 + t6118 * t6364 + t6686 * t5715 + 0.6e1 * (t6147 + t6217) * t5701) + 0.24e2 * t5818 * ((-t6023 * t6357 + t6657) * t5817 + (t6328 - t6327) * t5639);
	t5567 = t5818 * t5586 + t5588 * t5884 + t5591 * t5976 + t5596 * t6270;
	t5575 = t5757 * t5976 + t5628 * t6162 + (t5782 * t6540 - t5854 * t5931) * t5862 + (-0.2e1 * t5897 * t6539 + 0.4e1 * t6179) * t6564 + (t5605 * t6572 + t5628 * t6578 + t5775 * t6592) * t5630 + (t6068 + 0.4e1 * t6174 - 0.2e1 * t6522) * pkin(3) + ((t6114 * qJD(1) + (-t6489 + (t5837 + 0.4e1 * t6361) * t5931) * qJD(2)) * t5932 + (t5757 * t6683 + (-t5837 * t5929 + (t5862 * t6418 - t5782 - t5976) * t5931) * qJD(1) + t6060) * t5930) * pkin(2);
	t5576 = t5628 * t6163 + (t5750 * t5883 - t5794 * t6364 + 0.2e1 * t6221) * t6404 + t5662 * t6539 + (t5605 * t6573 + t5628 * t6579 - t5774 * t6592) * t5630 + (t5932 * t5655 + (-t5932 * t6481 + (-t5976 + (t6647 - 0.8e1 * t5883) * t5884) * t6494) * qJD(2) + ((-t5687 + t6489) * t5930 + (t6481 + t6241 * t5929 + t5738 + (t5894 * t6547 - pkin(3) + t6566) * t6674) * t5932) * qJD(1)) * pkin(2);
	t5583 = t5603 * t5884 + t5818 * t5604 + t5612 * t5976 + t5617 * t6270;
	t6029 = t5593 * (t5574 * t6576 + t5583 * t6582);
	t6031 = t5593 * (t5567 * t6606 + t5583 * t6607);
	t6034 = t5592 * (t5565 * t6577 + t5567 * t6583);
	t6065 = t5590 * t6577 + t5599 * t6583;
	t6066 = t5589 * t6576 + t5597 * t6582;
	t6098 = t5628 * t6185;
	t6460 = (t5739 * t6009 + (t6066 * t5976 + t5611 * t6034 + t6651 * t5614 + (t5611 * t6029 + (t5611 * t6581 + t6065) * t5592) * t5582) * t5705 + (t5614 * t6098 + t5576 * t6570 + t5611 * t6031 + (t5597 * t6593 + t5605 * t6589 - t5589 * t5628 / 0.8e1) * t5630 + (t5550 * t6595 + t5565 * t6599 + t5567 * t6602) * t5592 + (t5575 * t6601 + t5583 * t6167 + (t5558 * t6596 + t5583 * t6603 + t5599 * t6606) * t5593) * t5582) * t5704) * t6475 + t5544;
	t6458 = (t5751 * t6018 + (t5566 * t6280 + t5600 * t6570 + t5635 * t6272 + (t5581 * t6278 + t5592 * t6597) * t5582) * t5704) * t6475 - t5573;
	t5546 = (t5751 * t6019 + (t5601 * t6569 + t5635 * t6275 + t5566 * t6279 + (t5581 * t6277 + t5592 * t6598) * t5582) * t5704) * t6475;
	t6457 = -t5546 - t5572;
	t6456 = (-t5739 * t6018 + (t5567 * t6280 + t5597 * t6570 + t5628 * t6272 + (t5583 * t6278 + t5592 * t6599) * t5582) * t5704) * t6475 + t5573;
	t5549 = (-t5739 * t6019 + (t5599 * t6569 + t5628 * t6275 + t5567 * t6279 + (t5583 * t6277 + t5592 * t6600) * t5582) * t5704) * t6475;
	t6455 = t5549 - t5572;
	t6229 = 0.2e1 * t5563 * t6534;
	t6166 = t5614 * t6282;
	t5537 = t5546 * t6092 + t5796 * t6458 + t5571;
	t5538 = t5796 * t6457 + t6092 * t6458;
	t6059 = -t5537 * t5560 + t5538 * t6533;
	t5539 = t5796 * t6456 + t6092 * t6455;
	t5540 = -t5549 * t5796 + t6092 * t6456 + t5570;
	t6058 = -t5539 * t5560 + t5540 * t6533;
	t6010 = (t6532 / 0.2e1 + t5614 * t6281) * t6529;
	t5533 = (t5739 * t6010 + (t6065 * t5976 + t5614 * t6034 - t6651 * t5611 + (t5614 * t6029 + (t5614 * t6581 - t6066) * t5592) * t5582) * t5705 + (-t5611 * t6098 + t5575 * t6569 + t5614 * t6031 + (t5590 * t6587 + t5599 * t6591 + t5605 * t6594) * t5630 + (t5550 * t6588 + t5565 * t6600 + t5567 * t6604) * t5592 + (t5583 * t6166 + t5576 * t6601 + (t5558 * t6590 + t5583 * t6605 + t5597 * t6606) * t5593) * t5582) * t5704) * t6475;
	t5531 = (-t5751 * t6010 + (t6063 * t5976 + t5614 * t6033 - t6652 * t5611 + (t5614 * t6030 + (t5614 * t6580 - t6064) * t5592) * t5582) * t5705 + (-t5611 * t6097 + t5579 * t6569 + t5614 * t6032 + (t5601 * t6591 + t5608 * t6594 + t5590 * t5635 / 0.8e1) * t5630 + (t5547 * t6588 + t5565 * t6598 + t5566 * t6604) * t5592 + (t5578 * t6601 + t5581 * t6166 + (t5557 * t6590 + t5581 * t6605 + t5600 * t6606) * t5593) * t5582) * t5704) * t6475;
	t5529 = -t5554 * t6058 + 0.1e1;
	t5528 = t6059 * t5554;
	t5526 = t6058 * t6535 + ((t6460 * t5796 - (-t5533 + t5543) * t6092 + t6456 * t5700 + t6455 * t5699) * t5560 + t5540 * t6229 + (-t5539 * t5536 - (-t5533 * t5796 - t5549 * t5700 + t5699 * t6456 + t6092 * t6460 + t6459) * t5563 - t5540 * t5535) * t5561) * t5554;
	t5525 = t6059 * t6535 + ((t5531 * t6092 + t5546 * t5699 + t5700 * t6458 + t5796 * t6461 + t6454) * t5560 + t5538 * t6229 + (-t5537 * t5536 - ((-t5531 - t5543) * t5796 + t6461 * t6092 + t6457 * t5700 + t6458 * t5699) * t5563 - t5538 * t5535) * t5561) * t5554;
	t5524 = t5526 * t5552 - t5529 * t6537;
	t5523 = t5526 * t5551 + t5529 * t6536;
	t5522 = t5525 * t5552 + t5528 * t6537;
	t5521 = t5525 * t5551 - t5528 * t6536;
	t1 = [t5523, t5521; -t5524, -t5522; 0, 0; t5524, t5522; t5523, t5521; 0, 0; 0, 0; 0, 0; 0, 0;];
	JRD_rot = t1;
elseif link_index == 3
	%% Symbolic Calculation
	% From jacobiRD_rot_3_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-27 05:51:22
	% EndTime: 2020-04-27 05:51:22
	% DurationCPUTime: 0.04s
	% Computational Cost: add. (3->3), mult. (4->2), div. (0->0), fcn. (4->2), ass. (0->3)
	t31 = qJD(2) * sin(qJ(2));
	t30 = qJD(2) * cos(qJ(2));
	t1 = [0, -t30; 0, -t31; 0, 0; 0, t31; 0, -t30; 0, 0; 0, 0; 0, 0; 0, 0;];
	JRD_rot = t1;
elseif link_index == 4
	%% Symbolic Calculation
	% From jacobiRD_rot_4_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-27 05:51:45
	% EndTime: 2020-04-27 05:51:53
	% DurationCPUTime: 8.12s
	% Computational Cost: add. (74896->277), mult. (173624->515), div. (920->9), fcn. (43428->9), ass. (0->247)
	t1316 = sin(qJ(1));
	t1458 = pkin(2) * t1316;
	t1412 = qJD(1) * t1458;
	t1304 = pkin(1) * t1412;
	t1474 = pkin(2) * pkin(3);
	t1317 = cos(qJ(2));
	t1428 = t1316 * t1317;
	t1398 = qJD(2) * t1428;
	t1315 = sin(qJ(2));
	t1318 = cos(qJ(1));
	t1430 = t1315 * t1318;
	t1489 = qJD(1) * t1430 + t1398;
	t1337 = t1489 * t1474;
	t1272 = t1304 - t1337;
	t1322 = pkin(4) ^ 2;
	t1324 = pkin(3) ^ 2;
	t1325 = pkin(2) ^ 2;
	t1326 = pkin(1) ^ 2;
	t1423 = -pkin(5) ^ 2 + t1326;
	t1381 = t1325 + t1423;
	t1364 = t1324 + t1381;
	t1296 = -t1322 + t1364;
	t1461 = pkin(1) * t1318;
	t1422 = -0.2e1 * t1461;
	t1308 = pkin(2) * t1422;
	t1288 = t1308 + t1296;
	t1457 = pkin(2) * t1318;
	t1306 = pkin(1) - t1457;
	t1432 = t1315 * t1316;
	t1303 = pkin(2) * t1432;
	t1378 = pkin(3) * t1303;
	t1298 = -0.2e1 * t1378;
	t1274 = t1298 + t1288;
	t1336 = -0.4e1 * t1274 * t1428 + 0.4e1 * t1288 * t1430;
	t1309 = (t1324 - t1326) * t1325;
	t1340 = (-0.4e1 * pkin(1) * pkin(2) * t1296 - 0.8e1 * t1309 * t1318) * t1316;
	t1312 = t1316 ^ 2;
	t1434 = t1312 * t1325;
	t1413 = pkin(1) * t1434;
	t1380 = 0.8e1 * t1413;
	t1363 = t1315 * t1380;
	t1425 = t1308 + t1326;
	t1314 = t1318 ^ 2;
	t1476 = 0.2e1 * t1314;
	t1291 = t1325 * t1476 - t1325 + t1425;
	t1453 = qJD(2) * t1315;
	t1393 = t1291 * t1453;
	t1366 = t1317 * t1393;
	t1484 = 0.4e1 * qJD(2);
	t1419 = t1274 * t1484;
	t1301 = 0.2e1 * t1304;
	t1387 = t1316 * t1318 * t1325;
	t1374 = -0.4e1 * t1387;
	t1358 = qJD(1) * t1374;
	t1284 = t1301 + t1358;
	t1313 = t1317 ^ 2;
	t1439 = t1284 * t1313;
	t1475 = -0.8e1 * t1317;
	t1248 = (0.8e1 * t1366 - 0.4e1 * t1439) * t1324 + qJD(1) * t1340 + (qJD(1) * t1363 + (t1272 * t1475 + t1315 * t1419) * t1306 + (qJD(1) * t1336 + 0.4e1 * t1288 * t1398) * pkin(2)) * pkin(3);
	t1281 = t1489 * pkin(2);
	t1435 = t1306 * t1315;
	t1391 = qJD(2) * t1435;
	t1410 = pkin(2) * t1428;
	t1264 = qJD(1) * t1410 - t1281 - t1391;
	t1294 = t1306 * t1317;
	t1478 = -0.2e1 * t1313;
	t1357 = t1291 * t1478 - t1423;
	t1414 = t1296 * t1461;
	t1472 = -pkin(4) + pkin(5);
	t1473 = -pkin(4) - pkin(5);
	t1480 = 0.4e1 * t1309;
	t1488 = 0.4e1 * pkin(3);
	t1255 = t1314 * t1480 + 0.4e1 * pkin(2) * t1414 - (t1326 + (pkin(2) - t1472) * (pkin(2) + t1472)) * (t1326 + (pkin(2) - t1473) * (pkin(2) + t1473)) + (-t1274 * t1294 + t1288 * t1303) * t1488 + (0.2e1 * t1322 - 0.6e1 * t1325 + 0.2e1 * t1357 - t1324) * t1324;
	t1327 = sqrt(t1255);
	t1250 = t1264 * t1327;
	t1287 = t1308 + t1322 + t1364;
	t1481 = 0.2e1 * t1306;
	t1346 = (pkin(1) * t1481 + t1287) * t1458;
	t1257 = 0.2e1 * (t1284 * t1317 - t1393) * pkin(3) + qJD(1) * t1346;
	t1406 = pkin(3) * t1294;
	t1267 = (-t1287 - 0.8e1 * t1406) * t1315;
	t1415 = (0.4e1 * t1313 - 0.2e1) * pkin(3);
	t1462 = pkin(1) * t1317;
	t1258 = qJD(2) * t1267 + (t1415 + 0.2e1 * t1462) * t1412;
	t1253 = 0.1e1 / t1327;
	t1282 = -t1303 + t1294;
	t1280 = pkin(3) + t1282;
	t1464 = t1280 / 0.2e1;
	t1384 = t1253 * t1464;
	t1438 = t1287 * t1317;
	t1266 = t1306 * t1415 + t1438;
	t1443 = t1266 * t1318;
	t1437 = t1291 * t1317;
	t1407 = pkin(3) * t1437;
	t1263 = t1287 * t1306 + 0.2e1 * t1407;
	t1445 = t1263 * t1317;
	t1229 = t1250 + t1248 * t1384 + t1257 * t1315 + qJD(2) * t1445 + (qJD(1) * t1443 + t1258 * t1316) * pkin(2);
	t1297 = t1303 - pkin(3);
	t1295 = 0.3e1 * t1324 + t1322 + t1381;
	t1388 = t1295 * t1432;
	t1275 = t1295 + t1308 - 0.4e1 * t1378;
	t1389 = t1275 * t1294;
	t1283 = t1410 + t1435;
	t1440 = t1283 * t1327;
	t1246 = -t1389 + t1440 + (t1297 * t1422 + t1388) * pkin(2) + (-t1322 - t1324 + (t1476 - 0.3e1) * t1325 + t1357) * pkin(3);
	t1244 = 0.1e1 / t1246 ^ 2;
	t1429 = t1316 * t1266;
	t1446 = t1263 * t1315;
	t1249 = pkin(2) * t1429 + t1280 * t1327 + t1446;
	t1247 = t1249 ^ 2;
	t1240 = t1244 * t1247 + 0.1e1;
	t1238 = 0.1e1 / t1240;
	t1353 = t1428 - t1430;
	t1260 = t1304 + (-t1391 + (qJD(1) * t1353 - t1398) * pkin(2)) * pkin(3);
	t1449 = t1244 * t1249;
	t1485 = 0.2e1 * pkin(1);
	t1354 = -t1275 * t1317 + t1297 * t1485;
	t1334 = t1295 * t1430 + t1316 * t1354;
	t1273 = t1301 - 0.4e1 * t1337;
	t1344 = -t1273 * t1317 + t1275 * t1453;
	t1471 = t1253 / 0.2e1;
	t1383 = t1283 * t1471;
	t1427 = t1317 * t1318;
	t1352 = t1427 + t1432;
	t1390 = qJD(2) * t1294;
	t1399 = qJD(2) * t1432;
	t1265 = t1390 + (qJD(1) * t1352 - t1399) * pkin(2);
	t1444 = t1265 * t1327;
	t1230 = t1444 + t1248 * t1383 + t1344 * t1306 + (t1358 + 0.4e1 * t1366 - 0.2e1 * t1439) * pkin(3) + (qJD(1) * t1334 + t1281 * t1422 + t1295 * t1398) * pkin(2);
	t1243 = 0.1e1 / t1246;
	t1450 = t1230 * t1243 * t1244;
	t1271 = t1298 + t1324 + t1325 + 0.2e1 * t1406 + t1425;
	t1455 = pkin(4) * t1271;
	t1493 = 0.4e1 * (t1229 * t1449 - t1247 * t1450) / t1240 ^ 2 * t1455 - 0.4e1 * pkin(4) * t1238 * t1260;
	t1404 = t1238 * t1455;
	t1359 = -0.2e1 * t1244 * t1404;
	t1492 = t1230 * t1359 - t1493 * t1243;
	t1491 = 0.4e1 * t1249 * t1404 * t1450 + t1229 * t1359 + t1493 * t1449;
	t1490 = 0.8e1 * t1324;
	t1487 = 0.4e1 * qJD(1);
	t1369 = 0.2e1 * t1404;
	t1269 = 0.1e1 / t1271 ^ 2;
	t1447 = t1260 * t1269;
	t1400 = qJD(1) * t1427;
	t1339 = t1399 - t1400;
	t1311 = t1315 ^ 2;
	t1372 = t1317 * t1303;
	t1431 = t1315 * t1317;
	t1486 = qJD(1) * t1313 * (t1306 * t1457 + t1434) + t1284 * t1431 + (-0.2e1 * t1306 * t1372 + t1291 * (-t1311 + t1313)) * qJD(2);
	t1268 = 0.1e1 / t1271;
	t1433 = t1313 * t1324;
	t1456 = pkin(3) * t1317;
	t1256 = (pkin(3) * t1274 * t1306 + 0.2e1 * t1324 * t1437) * t1315 + (t1288 * t1456 + t1433 * t1481) * t1458;
	t1483 = 0.2e1 * t1256;
	t1482 = 0.2e1 * t1269;
	t1479 = -0.2e1 * t1311;
	t1477 = 0.2e1 * t1313;
	t1470 = -t1260 / 0.2e1;
	t1402 = qJD(1) * t1432;
	t1373 = pkin(2) * t1402;
	t1293 = pkin(3) * t1373;
	t1454 = qJD(1) * t1318;
	t1411 = pkin(2) * t1454;
	t1305 = pkin(1) * t1411;
	t1426 = t1293 + t1305;
	t1469 = -(-qJD(2) * t1352 + t1400) * t1474 / 0.2e1 - t1426 / 0.2e1;
	t1468 = t1293 / 0.2e1 - (pkin(2) * t1339 - t1390) * pkin(3) / 0.2e1;
	t1467 = t1268 / 0.2e1;
	t1285 = t1353 * pkin(2);
	t1310 = pkin(1) * t1458;
	t1277 = pkin(3) * t1285 + t1310;
	t1466 = -t1277 / 0.2e1;
	t1279 = t1283 * pkin(3);
	t1465 = t1279 / 0.2e1;
	t1323 = 0.1e1 / pkin(4);
	t1463 = t1323 / 0.2e1;
	t1460 = pkin(1) * t1325;
	t1459 = pkin(2) * t1268;
	t1341 = t1249 * t1323 * t1359;
	t1360 = t1243 * t1369;
	t1348 = t1323 * t1360;
	t1221 = qJD(2) + (t1229 * t1467 - t1249 * t1447) * t1348 + (t1230 * t1467 - t1246 * t1447) * t1341;
	t1382 = t1268 * t1463;
	t1234 = qJ(2) + atan2(t1249 * t1382, t1246 * t1382);
	t1232 = sin(t1234);
	t1452 = t1221 * t1232;
	t1233 = cos(t1234);
	t1451 = t1221 * t1233;
	t1448 = t1248 * t1253 / t1255;
	t1442 = t1269 * t1277;
	t1441 = t1269 * t1279;
	t1436 = t1306 * t1313;
	t1424 = t1312 - t1314;
	t1421 = -0.2e1 * t1460;
	t1420 = 0.2e1 * t1454;
	t1418 = t1253 * t1483;
	t1377 = t1430 * t1474;
	t1289 = t1310 - t1377;
	t1417 = t1289 * t1475;
	t1416 = -0.4e1 * t1433;
	t1409 = pkin(3) * t1454;
	t1408 = pkin(3) * t1453;
	t1403 = pkin(3) * t1467;
	t1397 = qJD(2) * t1427;
	t1396 = t1256 * t1448;
	t1395 = 0.4e1 * t1268 * t1447;
	t1307 = 0.2e1 * t1310;
	t1292 = t1307 + t1374;
	t1392 = t1292 * t1431;
	t1386 = t1248 * t1471;
	t1251 = t1292 * t1416 + t1340 + (pkin(2) * t1336 + t1306 * t1417 + t1363) * pkin(3);
	t1385 = t1251 * t1471;
	t1379 = t1317 * t1421;
	t1375 = -0.4e1 * t1399;
	t1370 = 0.2e1 * t1424;
	t1368 = t1279 * t1395;
	t1367 = t1277 * t1395;
	t1365 = -t1251 * t1448 / 0.4e1;
	t1362 = t1317 * t1380;
	t1356 = pkin(1) * t1315 * t1387;
	t1345 = t1424 * t1325 * t1487;
	t1335 = 0.4e1 * t1274 * t1432 + 0.4e1 * t1288 * t1427;
	t1302 = 0.2e1 * t1305;
	t1290 = t1307 - 0.4e1 * t1377;
	t1286 = pkin(2) * t1427 + t1303;
	t1278 = t1302 + t1345;
	t1276 = (pkin(3) * t1477 - pkin(3) + t1462) * t1458;
	t1259 = 0.2e1 * t1292 * t1456 + t1346;
	t1242 = t1486 * t1490 + (qJD(1) * t1362 + (0.8e1 * t1272 * t1315 + t1317 * t1419) * t1306 + (qJD(1) * t1335 + t1288 * t1375) * pkin(2)) * pkin(3);
	t1241 = t1278 * t1416 + (t1392 * t1490 + (pkin(2) * t1335 + t1362) * pkin(3)) * qJD(2) - 0.8e1 * pkin(3) * t1272 * t1410 + 0.4e1 * (-(-t1397 * t1474 + t1426) * t1456 + t1289 * t1408) * t1481 + (0.24e2 * pkin(3) * t1356 + t1370 * t1480 + (-0.4e1 * t1414 + (-0.4e1 * t1274 * t1427 + (-0.4e1 * t1288 * t1315 + t1417) * t1316) * pkin(3)) * pkin(2)) * qJD(1);
	t1237 = t1282 * t1327 + t1283 * t1418 + (t1275 * t1306 + 0.4e1 * t1407) * t1315 + (t1318 * t1379 + (t1295 * t1317 + t1436 * t1488) * pkin(2)) * t1316;
	t1236 = pkin(3) * t1291 * t1479 + t1267 * t1458 + t1280 * t1418 - t1440 + t1445;
	t1235 = t1286 * t1327 + t1251 * t1383 - t1290 * t1294 + t1314 * t1315 * t1421 + (t1292 * t1478 + t1374) * pkin(3) + t1334 * pkin(2);
	t1231 = t1285 * t1327 + t1251 * t1384 + t1259 * t1315 + (0.2e1 * t1276 * t1316 + t1443) * pkin(2);
	t1228 = (t1236 * t1467 + t1249 * t1441) * t1323;
	t1227 = (t1237 * t1467 + t1246 * t1441) * t1323;
	t1226 = (t1231 * t1467 - t1249 * t1442) * t1323;
	t1225 = (t1235 * t1467 - t1246 * t1442) * t1323;
	t1223 = 0.1e1 + (-t1227 * t1449 + t1228 * t1243) * t1369;
	t1222 = (-t1225 * t1449 + t1226 * t1243) * t1369;
	t1220 = ((-t1444 - t1280 * t1396 + t1257 * t1317 - qJD(2) * t1446 + t1267 * t1411 + (-0.2e1 * pkin(1) * t1373 - qJD(2) * t1438) * t1458 + (-t1283 * t1248 / 0.2e1 + t1264 * t1483 + t1242 * t1464) * t1253 + (t1284 * t1479 - 0.4e1 * t1366 + 0.8e1 * (-qJD(1) * t1372 + (t1306 * t1311 - t1436) * qJD(2)) * t1458) * pkin(3)) * t1467 - t1249 * t1368 + (t1229 * t1465 + t1236 * t1470 + t1249 * t1468) * t1482) * t1348 + (-t1246 * t1368 + (t1230 * t1465 + t1237 * t1470 + t1246 * t1468) * t1482 + 0.4e1 * t1486 * t1403 + (t1242 * t1383 + t1265 * t1418 + t1273 * t1435 + t1282 * t1386 - t1283 * t1396 + t1250 + (-pkin(2) * t1388 + 0.2e1 * t1356 + t1389) * qJD(2) + (t1275 * t1303 + (t1295 * t1457 + t1370 * t1460) * t1317) * qJD(1)) * t1467) * t1341 + t1492 * t1228 + t1491 * t1227;
	t1219 = (((t1285 * t1386 + t1264 * t1385 + t1280 * t1365 + t1241 * t1384 + 0.2e1 * (0.2e1 * qJD(1) * t1413 + t1278 * t1456 - t1292 * t1408) * t1315 + t1259 * qJD(2) * t1317) * t1467 + t1249 * t1367 + (t1229 * t1466 + t1231 * t1470 + t1249 * t1469) * t1482) * t1323 + (((-t1339 - t1397 + t1402) * t1327 + (pkin(1) * t1306 * t1420 + t1287 * t1454) * t1315 - qJD(1) * t1429 + t1318 * t1258 + t1276 * t1420) * t1463 + (-t1339 * pkin(1) + t1375 * t1456 + t1409 * t1477 - t1409) * t1323 * t1458) * t1459) * t1360 + ((t1281 * t1327 + t1286 * t1386 + t1265 * t1385 + t1283 * t1365 + t1241 * t1383 - (0.4e1 * t1293 + t1302) * t1294 + t1290 * t1391 + t1356 * t1487 + t1314 * qJD(2) * t1379) * t1467 + t1246 * t1367 + (t1278 * t1478 + t1392 * t1484 + t1345) * t1403 + (t1230 * t1466 + t1235 * t1470 + t1246 * t1469) * t1482 + ((t1354 * qJD(1) + (-t1327 * t1315 + (t1295 + 0.4e1 * t1406) * t1317) * qJD(2)) * t1318 + (t1281 * t1485 + (-t1295 * t1315 + (-t1327 - t1290) * t1317) * qJD(1) + t1344) * t1316) * t1459 / 0.2e1) * t1341 + t1492 * t1226 + t1491 * t1225;
	t1218 = t1220 * t1233 - t1223 * t1452;
	t1217 = -t1220 * t1232 - t1223 * t1451;
	t1216 = t1219 * t1233 - t1222 * t1452;
	t1215 = -t1219 * t1232 - t1222 * t1451;
	t1 = [t1215, t1217; t1216, t1218; 0, 0; -t1216, -t1218; t1215, t1217; 0, 0; 0, 0; 0, 0; 0, 0;];
	JRD_rot = t1;
end