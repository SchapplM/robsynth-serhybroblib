% Calculate potential energy for
% fivebar1DE2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [2x1]
%   Generalized joint coordinates (joint angles)
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [5x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[AB,AE,BC,CD,ED]';
% m [5x1]
%   mass of all robot links (including the base)
% mrSges [5x3]
%  first moment of all robot links (mass times center of mass in body frames)
%  rows: links of the robot (starting with base)
%  columns: x-, y-, z-coordinates
% 
% Output:
% U [1x1]
%   Potential energy

% Quelle: HybrDyn-Toolbox
% Datum: 2020-04-27 06:03
% Revision: 970157063c8b7bcb25458a457551a083b21abdbd (2020-04-26)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function U = fivebar1DE2_energypot_fixb_slag_vp2(qJ, g, ...
  pkin, m, mrSges)
%% Coder Information
%#codegen
%$cgargs {zeros(2,1),zeros(3,1),zeros(5,1),zeros(5,1),zeros(5,3)}
assert(isreal(qJ) && all(size(qJ) == [2 1]), ...
  'fivebar1DE2_energypot_fixb_slag_vp2: qJ has to be [2x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'fivebar1DE2_energypot_fixb_slag_vp2: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [5 1]), ...
  'fivebar1DE2_energypot_fixb_slag_vp2: pkin has to be [5x1] (double)');
assert(isreal(m) && all(size(m) == [5 1]), ...
  'fivebar1DE2_energypot_fixb_slag_vp2: m has to be [5x1] (double)'); 
assert(isreal(mrSges) && all(size(mrSges) == [5,3]), ...
  'fivebar1DE2_energypot_fixb_slag_vp2: mrSges has to be [5x3] (double)');

%% Symbolic Calculation
% From energy_potential_fixb_worldframe_par2_matlab.m
% OptimizationMode: 2
% StartTime: 2020-04-27 04:27:08
% EndTime: 2020-04-27 04:27:14
% DurationCPUTime: 4.03s
% Computational Cost: add. (14184->409), mult. (41584->484), div. (128->5), fcn. (4996->12), ass. (0->204)
t530 = 4 * pkin(3);
t390 = pkin(5) ^ 2;
t341 = -t390 / 0.3e1;
t393 = pkin(4) ^ 2;
t529 = t341 - t393 / 0.3e1;
t389 = t390 ^ 2;
t392 = t393 ^ 2;
t528 = -t389 / 0.6e1 + t392 / 0.6e1;
t362 = cos(qJ(2));
t327 = t362 ^ 2;
t527 = -0.2e1 * t327;
t398 = pkin(3) ^ 2;
t396 = t398 ^ 2;
t526 = 4 * t396;
t525 = 2 * t398;
t376 = 6 * t398;
t402 = (pkin(2) ^ 2);
t524 = 2 * t402;
t404 = (pkin(1) ^ 2);
t387 = 2 * t404;
t409 = t402 ^ 2;
t379 = 5 * t409;
t523 = -pkin(4) - pkin(5);
t522 = -pkin(4) + pkin(5);
t361 = sin(qJ(1));
t319 = pkin(2) * t361;
t363 = cos(qJ(1));
t521 = pkin(2) * t363;
t360 = sin(qJ(2));
t520 = pkin(3) * t360;
t318 = pkin(3) * t362;
t412 = pkin(3) * t398;
t470 = t398 * t319;
t519 = (-t360 * t412 + t470) * t327;
t305 = pkin(1) - t521;
t518 = t305 * t362;
t386 = 3 * t404;
t490 = t390 + t393;
t309 = t386 - t490;
t517 = t309 * t398;
t321 = t398 + t404;
t315 = t321 ^ 2;
t448 = -t390 + t321;
t516 = t315 * (-t393 + t448);
t515 = t490 * t404;
t330 = t363 ^ 2;
t514 = t330 ^ 2 * t409;
t408 = pkin(2) * t402;
t513 = t363 * t330 * t408;
t512 = t360 * t361;
t511 = t361 * t362;
t510 = (pkin(1) - pkin(3)) * (pkin(1) + pkin(3));
t509 = (pkin(1) + pkin(2)) * (pkin(1) - pkin(2));
t508 = t396 * t327 ^ 2;
t507 = t398 * t327;
t506 = t402 * t330;
t505 = t404 * t390;
t504 = t404 * t398;
t326 = t362 * t327;
t503 = t412 * t326;
t344 = -0.3e1 / 0.2e1 * t390;
t399 = t408 ^ 2;
t403 = t404 ^ 2;
t488 = t396 + t403;
t500 = t389 / 0.2e1 - t392 / 0.2e1;
t502 = t321 * ((t344 + t387) * t398 - 0.3e1 / 0.2e1 * t505 + t488 + t500) + t399;
t348 = 0.2e1 / 0.3e1 * t393;
t343 = -0.2e1 / 0.3e1 * t390;
t453 = t343 + t321;
t501 = t321 * (t348 + t453) + t409;
t339 = -t390 / 0.6e1;
t499 = t339 - t393 / 0.6e1;
t353 = -0.2e1 / 0.3e1 * t393;
t498 = t343 + t353;
t497 = t344 + t386;
t313 = -t398 / 0.3e1 + t404;
t358 = t402 / 0.2e1;
t496 = t358 + t404;
t495 = 0.4e1 / 0.7e1 * t404 - t390 / 0.7e1;
t370 = 10 * t398;
t494 = t370 + t387;
t323 = -3 * t398 + t404;
t493 = t387 - t390;
t492 = t389 - t392;
t491 = -t390 + t393;
t489 = t390 - t404;
t487 = t398 - t404;
t486 = -t402 + t404;
t485 = t402 + t404;
t484 = t403 - t396;
t483 = t403 + t409;
t482 = 0.4e1 * pkin(1);
t481 = 0.2e1 * t520;
t480 = 0.2e1 * t318;
t479 = pkin(1) * t521;
t478 = pkin(1) * t318;
t477 = 0.8e1 * t513;
t476 = 0.8e1 * t508;
t475 = -0.4e1 * t507;
t474 = 0.4e1 * t507;
t473 = 0.2e1 * t506;
t472 = pkin(1) * t503;
t471 = pkin(2) * t512;
t469 = t412 * t319;
t468 = 0.12e2 * t507;
t467 = 0.16e2 * t503;
t466 = -t520 / 0.2e1;
t465 = -pkin(2) * m(3) - mrSges(2,1);
t442 = pkin(3) * t471;
t300 = -0.2e1 * t442;
t308 = -0.2e1 * t479;
t449 = t398 + t485;
t281 = 0.1e1 / (t305 * t480 + t300 + t308 + t449);
t464 = t281 / pkin(5) / pkin(4) ^ 2;
t463 = t360 * t509;
t307 = 0.2e1 * t478;
t462 = 0.4e1 * t478;
t461 = 0.6e1 * t478;
t460 = 0.4e1 / 0.3e1 * t390 + 0.4e1 / 0.3e1 * t393 - (2 * t404);
t385 = 4 * t404;
t459 = 0.2e1 / 0.3e1 * t390 + t348 + t385;
t349 = t393 / 0.3e1;
t458 = t390 / 0.3e1 + t349 + t387;
t457 = t404 + t499;
t456 = t404 + t529;
t342 = -t390 / 0.2e1;
t455 = t342 - t393 / 0.2e1 + t404;
t454 = t343 + t348 + t387;
t377 = 3 * t398;
t452 = t377 + t485;
t451 = t386 + t491;
t450 = t393 + t489;
t447 = -t390 + t485;
t288 = t308 + t473 + t486;
t381 = -3 * t402;
t431 = t398 + t447;
t424 = -t393 + t431;
t423 = t308 + t424;
t278 = sqrt(t288 * t475 + 0.4e1 * t487 * t506 + 0.4e1 * t424 * t479 - t396 + (t381 + t450) * t525 - (t404 + (pkin(2) - t522) * (pkin(2) + t522)) * (t404 + (pkin(2) - t523) * (pkin(2) + t523)) + (-(t300 + t423) * t518 + t423 * t471) * t530);
t286 = t493 * t398 + t488 - t505 - t528;
t314 = t404 - t402 / 0.3e1;
t289 = t314 * t300;
t293 = t341 + t349 + t449;
t294 = t305 + t318;
t324 = t381 + t404;
t443 = 0.8e1 * t472;
t297 = t324 * t443;
t299 = 0.10e2 * t517;
t302 = t342 + t449;
t303 = t393 + t448;
t306 = pkin(1) + t318;
t311 = (t385 + t390) * t398;
t316 = 0.10e2 / 0.3e1 * t398;
t317 = -0.30e2 * t390 + (60 * t404);
t340 = -t390 / 0.4e1;
t354 = 0.4e1 / 0.3e1 * t398;
t355 = t398 / 0.3e1;
t356 = t398 / 0.2e1;
t368 = 15 * t396;
t369 = 15 * t398;
t371 = -0.2e1 * t390;
t372 = -0.5e1 * t390;
t373 = 7 * t396;
t374 = 5 * t396;
t375 = 7 * t398;
t380 = 3 * t402;
t383 = 3 * t403;
t384 = 8 * t404;
t405 = pkin(1) * t404;
t421 = t286 + t409;
t422 = -t442 + t496;
t435 = -0.3e1 * t505 + t383 + t500;
t438 = -0.6e1 * t442;
t426 = ((t316 + t493) * t402 + t421) * t438 + (t368 + (-0.9e1 * t390 + (18 * t404)) * t398 + t435) * t402 + (t369 + t497) * t409 + t502;
t437 = -0.4e1 * t442;
t427 = t302 * t437;
t428 = -(t380 + t321) * t520 + t452 * t319;
t429 = -(t379 + ((5 * t398) + t309) * t524 + t321 * (t353 + t453)) * t520 + (t409 + (t494 + t498) * t402 + t374 + 0.2e1 * t517 + t404 * (t404 + t498)) * t319;
t432 = t398 + t456;
t433 = t358 + t457;
t434 = -0.6e1 * t505 + (6 * t403) + t492;
t436 = t293 * t437 + (t376 + t454) * t402 + t501;
t439 = t326 * t469;
t440 = t508 * t319;
t441 = pkin(1) * t467;
t444 = 0.20e2 / 0.3e1 * t398;
t446 = ((-0.24e2 * (0.4e1 / 0.3e1 * t507 + t307 + t313) * t514 * t520 - 0.12e2 * (-0.8e1 / 0.3e1 * t440 + ((t354 + t433) * t319 - (0.4e1 / 0.3e1 * t402 + t356 + t457) * t520) * t474 + (-(t402 * t487) - 0.5e1 / 0.3e1 * t396 + t458 * t398 + t404 * t456) * t319 + (-t409 + (-t444 + t459) * t402 - (3 * t396) + t460 * t398 + t403) * t466 + (-t360 * t396 * t326 + ((t398 + t433) * t319 + (t524 - t487) * t466) * t318) * t482) * t506 + 0.24e2 * t314 * t440 + ((t380 + 0.3e1 / 0.2e1 * t398 + t455) * t319 + t324 * t520 / 0.2e1) * t441 - 0.6e1 * ((-(3 * t409) + (-t444 + t460) * t402 + t459 * t398 + t484) * t319 - 0.2e1 * (-0.5e1 / 0.3e1 * t409 + (-t398 + t458) * t402 + t404 * t432) * t520) * t507 - 0.6e1 * t429 * t478 - (t399 + ((21 * t398) + t309) * t409 + (t299 + t383 + (35 * t396) - 0.2e1 * t515) * t402 + (t373 + (t372 + t384 - 0.5e1 * t393) * t398 - t404 * t450) * t321) * t319 + (0.7e1 * t399 + (t375 + t309) * t379 + (t299 + (21 * t396) + (9 * t403) - 0.6e1 * t515) * t402 + t516) * t520) * t278 + t294 * (0.16e2 * (t476 + t441 + (-8 * t396 + 12 * t504) * t327 + (-0.12e2 * pkin(1) * t412 + t405 * t530) * t362 - (6 * t504) + t488) * t514 + 0.24e2 * ((t404 - 0.2e1 / 0.3e1 * t402) * t476 + 0.14e2 * (-0.32e2 / 0.21e2 * (t404 + t402 / 0.4e1 + t398 / 0.4e1 - t390 / 0.8e1) * t442 + t409 / 0.7e1 + (0.16e2 / 0.21e2 * t398 + t495) * t402 + t396 / 0.7e1 + t495 * t398 + t403 - 0.3e1 / 0.7e1 * t505 + t389 / 0.42e2 - t392 / 0.42e2) * t507 + t313 * t427 - (t487 * t409) + (t311 - 0.10e2 / 0.3e1 * t396 + (2 * t403) - t505) * t402 + t286 * t510 + ((-0.2e1 / 0.3e1 * t442 + t404 + t356 + t340) * t467 + 0.6e1 * (-0.8e1 / 0.3e1 * (t340 + t355 + t496) * t442 + t409 / 0.3e1 + (0.4e1 / 0.3e1 * t404 + t354 + t341) * t402 + t403 + 0.2e1 / 0.3e1 * t504 - 0.2e1 / 0.3e1 * t505 - t396 / 0.3e1 + t389 / 0.18e2 - t392 / 0.18e2) * t318) * pkin(1)) * t506 + 0.16e2 * (-6 * t404 * t402 + t483) * t508 + 0.32e2 * (t300 * t509 + t302 * t324) * t472 + 0.24e2 * (t314 * t427 - t399 + (-t316 + t489) * t409 + (t311 + t484 + t528) * t402 + t404 * t286) * t507 + 0.8e1 * t426 * t478 - 0.8e1 * ((t375 + t497) * t409 + (t373 + (t372 + (10 * t404)) * t398 + t435) * t402 + t502) * t442 + (t409 ^ 2) + (t371 + t385 + (28 * t398)) * t399 + (t317 * t398 + (70 * t396) + t434) * t409 + (t317 * t396 + t434 * t376 + t492 * t387 - 0.6e1 * t403 * t390 + 0.4e1 * t405 ^ 2 + (28 * t412 ^ 2)) * t402 + t303 * t516) + (((0.4e1 * t519 + (t319 + t481) * t307 + t323 * t319 + (0.3e1 / 0.2e1 * t402 + t377 + t455) * t481) * t477 + 0.6e1 * ((0.2e1 * (t356 + t402 + t499) * t319 + pkin(3) * t463) * t475 + (-0.8e1 * t439 + 0.4e1 * ((t452 + t529) * t319 - (t380 + t432) * t520) * t318) * pkin(1) + t429) * t521) * t278 + t294 * (-0.32e2 * (t443 + (-0.4e1 * t360 * t469 + t526 + ((4 * t402) + t371 + t384) * t398) * t327 + (t340 - t398 + t422) * t462 + t300 * t510 + t302 * t323) * t513 - 0.8e1 * (t297 + (t302 * t509 + t289) * t468 + (t427 + (t376 + t493) * t402 + t421) * t461 + t426) * t521)) * t306) / ((-0.4e1 * (0.2e1 * t519 + (t525 + t402) * t520 + (-t487 + t307) * t319) * t506 + 0.8e1 * pkin(1) * t439 + ((pkin(2) * t526 + 0.8e1 * t398 * t408) * t361 + 0.4e1 * t412 * t463) * t327 - 0.4e1 * t428 * t478 - (t494 * t402 + t374 + t483 + 6 * t504) * t319 + (t379 + (t370 + 6 * t404) * t402 + t315) * t520) * t278 + t294 * (0.12e2 * (0.6e1 * (-0.4e1 / 0.9e1 * t442 + t404 + t402 / 0.3e1 + t355 + t393 / 0.9e1 - t390 / 0.9e1) * t507 + t313 * t300 + t293 * t510 + (t503 + (t393 / 0.6e1 + t339 + t422) * t318) * t482) * t506 + t297 + (t293 * t509 + t289) * t468 + t436 * t461 + ((t316 + t454) * t402 + t501) * t438 + t399 + (t369 + t451) * t409 + (t451 * t376 + t491 * t387 + t368 + t383) * t402 + t315 * t303) + ((t477 * t520 + 0.4e1 * (t470 * t527 + (t319 - t520) * t307 + t428) * t521) * t278 + t294 * (-0.8e1 * (t307 + t474 + t323) * t513 - 0.6e1 * (t486 * t474 + (t300 + t293) * t462 + t436) * t521)) * t306) / 0.4e1;
t445 = t281 / pkin(4) / 0.2e1;
t430 = -pkin(3) + t471;
t425 = t377 + t393 + t447;
t292 = t362 * t363 + t512;
t291 = t360 * t363 - t511;
t287 = t308 + t393 + t431;
t277 = (-t430 + t518) * t278 + (t287 * t305 + t288 * t480) * t360 + (t287 * t362 + (0.4e1 * t327 - 0.2e1) * t305 * pkin(3)) * t319;
t276 = (pkin(2) * t511 + t305 * t360) * t278 - (t308 + t425 + t437) * t518 + t430 * t308 + t425 * t471 + (t288 * t527 - t303 - t380 + t473) * pkin(3);
t275 = qJ(2) + atan2(t277 * t445, t276 * t445);
t274 = cos(t275);
t273 = sin(t275);
t270 = (t276 * t278 / 0.4e1 + t277 * t446) * t464;
t269 = (t276 * t446 - t277 * t278 / 0.4e1) * t464;
t268 = qJ(1) + atan2(t269 * t291 + t270 * t292, t269 * t292 - t270 * t291);
t267 = cos(t268);
t266 = sin(t268);
t1 = (-mrSges(1,3) - mrSges(2,3) - mrSges(3,3) - mrSges(4,3) - mrSges(5,3)) * g(3) + (mrSges(3,1) * t266 - mrSges(5,1) * t273 - mrSges(2,2) * t363 + mrSges(3,2) * t267 - mrSges(4,2) * t362 - mrSges(5,2) * t274 - mrSges(1,2) + t465 * t361 + (-pkin(3) * m(5) - mrSges(4,1)) * t360) * g(2) + (-m(4) * pkin(1) - m(5) * t306 + mrSges(3,1) * t267 - mrSges(4,1) * t362 - mrSges(5,1) * t274 + mrSges(2,2) * t361 - mrSges(3,2) * t266 + mrSges(4,2) * t360 + mrSges(5,2) * t273 + t465 * t363 - mrSges(1,1)) * g(1);
U = t1;
