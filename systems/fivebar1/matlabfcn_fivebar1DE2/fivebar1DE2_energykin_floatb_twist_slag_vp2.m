% Calculate kinetic energy for
% fivebar1DE2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [2x1]
%   Generalized joint coordinates (joint angles)
% qJD [2x1]
%   Generalized joint velocities
% V_base [6x1]
%   Base Velocity (twist: stacked translational and angular velocity) in base frame
% pkin [5x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[AB,AE,BC,CD,ED]';
% m [5x1]
%   mass of all robot links (including the base)
% mrSges [5x3]
%  first moment of all robot links (mass times center of mass in body frames)
%  rows: links of the robot (starting with base)
%  columns: x-, y-, z-coordinates
% Ifges [5x6]
%   inertia of all robot links about their respective body frame origins, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertial_parameters_convert_par1_par2.m)
% 
% Output:
% T [1x1]
%   kinetic energy

% Quelle: HybrDyn-Toolbox
% Datum: 2020-04-27 06:03
% Revision: 970157063c8b7bcb25458a457551a083b21abdbd (2020-04-26)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function T = fivebar1DE2_energykin_floatb_twist_slag_vp2(qJ, qJD, V_base, ...
  pkin, m, mrSges, Ifges)
%% Coder Information
%#codegen
%$cgargs {zeros(2,1),zeros(2,1),zeros(6,1),zeros(5,1),zeros(5,1),zeros(5,3),zeros(5,6)}
assert(isreal(qJ) && all(size(qJ) == [2 1]), ...
  'fivebar1DE2_energykin_floatb_twist_slag_vp2: qJ has to be [2x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [2 1]), ...
  'fivebar1DE2_energykin_floatb_twist_slag_vp2: qJD has to be [2x1] (double)');
assert(isreal(V_base) && all(size(V_base) == [6 1]), ...
  'fivebar1DE2_energykin_floatb_twist_slag_vp2: V_base has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [5 1]), ...
  'fivebar1DE2_energykin_floatb_twist_slag_vp2: pkin has to be [5x1] (double)');
assert(isreal(m) && all(size(m) == [5 1]), ...
  'fivebar1DE2_energykin_floatb_twist_slag_vp2: m has to be [5x1] (double)'); 
assert(isreal(mrSges) && all(size(mrSges) == [5,3]), ...
  'fivebar1DE2_energykin_floatb_twist_slag_vp2: mrSges has to be [5x3] (double)');
assert(isreal(Ifges) && all(size(Ifges) == [5 6]), ...
  'fivebar1DE2_energykin_floatb_twist_slag_vp2: Ifges has to be [5x6] (double)'); 

%% Symbolic Calculation
% From energy_kinetic_floatb_twist_linkframe_par2_matlab.m
% OptimizationMode: 2
% StartTime: 2020-04-27 04:27:03
% EndTime: 2020-04-27 04:27:31
% DurationCPUTime: 21.51s
% Computational Cost: add. (333707->695), mult. (1001117->1075), div. (2500->13), fcn. (124258->12), ass. (0->448)
t281 = pkin(5) ^ 2;
t280 = t281 ^ 2;
t284 = pkin(4) ^ 2;
t283 = t284 ^ 2;
t447 = t280 - t283;
t295 = (pkin(1) ^ 2);
t279 = -2 * t295;
t247 = sin(qJ(2));
t250 = cos(qJ(1));
t438 = qJD(1) * t250;
t187 = pkin(2) * t438;
t366 = pkin(3) * t187;
t342 = t247 * t366;
t248 = sin(qJ(1));
t249 = cos(qJ(2));
t434 = qJD(2) * t249;
t375 = t248 * t434;
t503 = pkin(2) * pkin(3);
t343 = t375 * t503;
t531 = -0.6e1 * t343 - 0.6e1 * t342;
t530 = t343 + t342;
t202 = pkin(3) * t249;
t181 = pkin(1) + t202;
t439 = qJD(1) * t248;
t379 = t181 * t439;
t436 = qJD(2) * t247;
t407 = pkin(3) * t436;
t494 = pkin(2) * t250;
t519 = pkin(2) * t379 + t407 * t494;
t529 = 0.2e1 * pkin(1);
t430 = 0.4e1 * pkin(3);
t289 = pkin(3) ^ 2;
t293 = pkin(2) ^ 2;
t301 = t293 ^ 2;
t228 = -t281 / 0.3e1;
t521 = t228 - t284 / 0.3e1;
t387 = t295 + t521;
t354 = t289 + t387;
t236 = t284 / 0.3e1;
t278 = 2 * t295;
t389 = t281 / 0.3e1 + t236 + t278;
t526 = 0.10e2 / 0.3e1 * t301 - 0.2e1 * (-t289 + t389) * t293 + t354 * t279;
t525 = 0.2e1 * t187;
t203 = pkin(2) * t248;
t524 = 0.2e1 * t203;
t523 = 0.4e1 * t289;
t268 = 0.6e1 * t289;
t258 = 0.10e2 * t289;
t493 = pkin(2) * t289;
t212 = t249 ^ 2;
t491 = pkin(3) * t212;
t207 = -0.3e1 * t289 + t295;
t464 = t289 * t212;
t420 = 0.4e1 * t464;
t522 = t207 + t420;
t277 = 3 * t295;
t520 = t277 - t281 - t284;
t374 = t247 * t438;
t319 = t374 + t375;
t518 = qJD(1) - qJD(2);
t517 = -t280 / 0.6e1 + t283 / 0.6e1;
t515 = 0.8e1 * pkin(1);
t514 = -0.4e1 * pkin(3);
t513 = -0.2e1 * t212;
t512 = -0.4e1 * t247;
t511 = -0.2e1 * t247;
t510 = -0.2e1 * t249;
t509 = -0.2e1 * t250;
t262 = -0.6e1 * t281;
t287 = t289 ^ 2;
t508 = 0.4e1 * t287;
t507 = -0.8e1 * t289;
t198 = t295 - t293 / 0.3e1;
t506 = 0.24e2 * t198;
t505 = pkin(1) * pkin(2);
t504 = pkin(1) * pkin(3);
t180 = pkin(1) - t494;
t152 = t180 + t202;
t440 = t295 - t281;
t380 = t293 + t440;
t353 = t289 + t380;
t167 = -t284 + t353;
t428 = pkin(1) * t494;
t183 = -0.2e1 * t428;
t126 = t183 + t167;
t472 = t247 * t248;
t412 = pkin(3) * t472;
t370 = pkin(2) * t412;
t169 = -0.2e1 * t370;
t100 = t169 + t126;
t216 = t293 * t523;
t463 = t293 * t295;
t184 = t216 - 0.4e1 * t463;
t215 = t250 ^ 2;
t263 = 0.2e1 * t284;
t416 = pkin(2) * t472;
t483 = t180 * t249;
t473 = t215 * t293;
t422 = 0.2e1 * t473;
t444 = -t293 + t295;
t129 = t183 + t422 + t444;
t484 = t129 * t212;
t499 = pkin(5) - pkin(4);
t500 = -pkin(4) - pkin(5);
t296 = sqrt(t184 * t215 + 0.4e1 * t167 * t428 - t287 - (t295 + (pkin(2) - t499) * (pkin(2) + t499)) * (t295 + (pkin(2) - t500) * (pkin(2) + t500)) + (t263 + t279 + 0.2e1 * t281 - 0.6e1 * t293 - 0.4e1 * t484) * t289 + (-t100 * t483 + t126 * t416) * t430);
t427 = pkin(1) * t202;
t182 = 0.2e1 * t427;
t128 = t182 + t522;
t208 = -0.3e1 * t293 + t295;
t211 = t249 * t212;
t304 = pkin(3) * t289;
t477 = t211 * t304;
t425 = 0.8e1 * t477;
t372 = pkin(1) * t425;
t158 = t208 * t372;
t381 = t289 + t440;
t175 = t284 + t381;
t205 = t289 + t295;
t200 = t205 ^ 2;
t256 = 0.15e2 * t287;
t259 = 18 * t295;
t260 = -0.2e1 * t281;
t294 = t295 ^ 2;
t273 = 3 * t294;
t300 = pkin(2) * t293;
t290 = t300 ^ 2;
t214 = t250 * t215;
t474 = t214 * t300;
t397 = t181 * t474;
t365 = -0.8e1 * t397;
t393 = 0.6e1 * t427;
t409 = 0.12e2 * t464;
t452 = 0.15e2 * t289 + t277;
t482 = t181 * t250;
t242 = t289 / 0.3e1;
t104 = -0.4e1 / 0.9e1 * t370 + t295 + t293 / 0.3e1 + t242 + t284 / 0.9e1 - t281 / 0.9e1;
t226 = -t281 / 0.6e1;
t245 = t293 / 0.2e1;
t454 = t245 + t295;
t322 = -t370 + t454;
t114 = t284 / 0.6e1 + t226 + t322;
t443 = t293 + t295;
t382 = t289 + t443;
t151 = t228 + t236 + t382;
t197 = -t289 / 0.3e1 + t295;
t432 = 0.4e1 * pkin(1);
t467 = (pkin(1) + pkin(3)) * (pkin(1) - pkin(3));
t50 = t197 * t169 + 0.6e1 * t104 * t464 + t151 * t467 + (t114 * t202 + t477) * t432;
t111 = t169 + t151;
t185 = t444 * t523;
t357 = -0.4e1 * t370;
t230 = -0.2e1 / 0.3e1 * t281;
t235 = 0.2e1 / 0.3e1 * t284;
t385 = t230 + t235 + t278;
t384 = t230 + t205;
t459 = t205 * (t235 + t384) + t301;
t62 = t151 * t357 + (t268 + t385) * t293 + t459;
t51 = 0.4e1 * t111 * t427 + t185 * t212 + t62;
t130 = t198 * t169;
t466 = (pkin(1) + pkin(2)) * (pkin(1) - pkin(2));
t83 = t151 * t466 + t130;
t218 = 0.10e2 / 0.3e1 * t289;
t86 = (t218 + t385) * t293 + t459;
t36 = t128 * t365 + t158 + t83 * t409 + t62 * t393 + t290 + (-t281 + t284 + t452) * t301 + t200 * t175 + (0.12e2 * t50 * t215 + t256 + (t259 + t262 + 0.6e1 * t284) * t289 + t273 + (t260 + t263) * t295) * t293 + 0.6e1 * (-t412 * t86 - t482 * t51) * pkin(2);
t269 = 0.3e1 * t289;
t190 = t269 + t443;
t159 = t190 * t203;
t272 = 0.3e1 * t293;
t188 = t272 + t205;
t481 = t188 * t247;
t103 = -pkin(3) * t481 + t159;
t186 = pkin(2) * t508 + 0.8e1 * t289 * t300;
t395 = t304 * t466;
t107 = t186 * t248 + 0.4e1 * t247 * t395;
t267 = 0.5e1 * t287;
t441 = t294 + t301;
t451 = t258 + t278;
t461 = t295 * t289;
t127 = t293 * t451 + t267 + t441 + 0.6e1 * t461;
t271 = 0.5e1 * t301;
t275 = 6 * t295;
t138 = t271 + (t258 + t275) * t293 + t200;
t364 = 0.8e1 * t397;
t423 = -0.4e1 * t473;
t495 = pkin(1) * t249;
t492 = pkin(3) * t247;
t164 = t203 - t492;
t415 = t248 * t493;
t63 = t415 * t513 + t159 + (0.2e1 * t164 * t495 - t481) * pkin(3);
t323 = -t247 * t304 + t415;
t154 = 0.2e1 * t323;
t204 = 0.2e1 * t289 + t293;
t206 = -t289 + t295;
t352 = t206 + t182;
t66 = t154 * t212 + t203 * t352 + t204 * t492;
t41 = t66 * t423 + t107 * t212 + (-0.4e1 * t103 * t495 + (t138 + t364) * t247) * pkin(3) + (0.4e1 * t63 * t482 + (-t127 + t372) * t248) * pkin(2);
t30 = t152 * t36 + t296 * t41;
t502 = 0.1e1 / t30 / 0.4e1;
t413 = pkin(3) * t483;
t84 = t169 + t183 + t382 + 0.2e1 * t413;
t81 = 0.1e1 / t84;
t501 = t81 / 0.2e1;
t498 = 0.4e1 / 0.3e1 * t293;
t497 = -t296 / 0.4e1;
t496 = t296 / 0.4e1;
t376 = t247 * t434;
t349 = t129 * t376;
t362 = 0.4e1 * t375;
t408 = pkin(2) * t439;
t174 = t408 * t529;
t458 = 0.2e1 * t530;
t392 = t174 - t458;
t437 = qJD(1) * t293;
t469 = t248 * t249;
t471 = t247 * t250;
t350 = t248 * t250 * t437;
t341 = -0.4e1 * t350;
t121 = t174 + t341;
t485 = t121 * t212;
t490 = ((0.8e1 * t349 - 0.4e1 * t485) * t289 + (-0.4e1 * t167 * t505 + t184 * t509) * t439 + (t247 * t248 ^ 2 * t437 * t515 + 0.4e1 * (t100 * t436 - t249 * t392) * t180 + (t126 * t362 + 0.4e1 * (-t100 * t469 + t126 * t471) * qJD(1)) * pkin(2)) * pkin(3)) / t296;
t431 = 0.2e1 * pkin(3);
t489 = ((-t180 * t436 + t249 * t408) * t431 + t392) / t84 ^ 2;
t445 = t287 + t294;
t448 = t278 - t281;
t462 = t295 * t281;
t117 = t448 * t289 + t445 - t462 - t517;
t318 = t117 + t301;
t88 = (t218 + t448) * t293 + t318;
t488 = t531 * t88;
t317 = t319 * pkin(3);
t417 = pkin(2) * t464;
t313 = t198 * t317 * t417;
t476 = t212 * t304;
t419 = pkin(1) * t476;
t340 = t419 * t436;
t326 = -0.24e2 * t340;
t487 = t208 * t326 - 0.24e2 * t313;
t231 = -0.3e1 / 0.2e1 * t281;
t457 = t280 / 0.2e1 - t283 / 0.2e1;
t486 = t290 + t205 * ((t231 + t278) * t289 - 0.3e1 / 0.2e1 * t462 + t445 + t457);
t480 = t200 * (-t284 + t381);
t210 = t212 ^ 2;
t479 = t210 * t287;
t478 = t211 * t287;
t213 = t215 ^ 2;
t475 = t213 * t301;
t470 = t247 * t296;
t468 = t249 * t296;
t465 = 0.1e1 / pkin(5) / pkin(4) ^ 2;
t460 = -0.4e1 * t530 * t151;
t456 = t226 - t284 / 0.6e1;
t240 = -0.2e1 / 0.3e1 * t284;
t455 = t230 + t240;
t453 = 0.4e1 / 0.7e1 * t295 - t281 / 0.7e1;
t450 = t260 - 0.2e1 * t284;
t261 = -0.5e1 * t281;
t449 = t261 - 0.5e1 * t284;
t442 = t294 - t287;
t435 = qJD(2) * t248;
t429 = 0.4e1 * t202;
t426 = 0.8e1 * t479;
t424 = -0.2e1 * t476;
t421 = -0.6e1 * t464;
t418 = pkin(2) * t482;
t414 = t304 * t203;
t411 = 0.16e2 * t477;
t410 = -0.12e2 * t473;
t406 = pkin(3) * t434;
t405 = t81 * t465;
t404 = pkin(3) * t208 / 0.2e1;
t403 = -t492 / 0.2e1;
t139 = -t407 + t408;
t367 = pkin(1) * t407;
t173 = -0.2e1 * t367;
t209 = t247 ^ 2;
t334 = t215 * t300 * t379;
t324 = -0.24e2 * t334;
t328 = t197 * t342;
t329 = t197 * t343;
t330 = t190 * t187 - t188 * t406;
t346 = t289 * t376;
t336 = -0.24e2 * t346;
t337 = t187 * t477;
t377 = qJD(2) * t474;
t358 = pkin(3) * t377;
t339 = t247 * t358;
t345 = -0.6e1 * t367;
t347 = t434 * t466;
t363 = -0.2e1 * t376;
t371 = pkin(3) * t417;
t399 = t490 / 0.2e1;
t373 = t495 * t493;
t93 = -0.4e1 * t319 * t373;
t402 = -((0.8e1 * t249 * t181 * t358 + t209 * t377 * t507 + t324 * t492 + ((pkin(3) * t204 + t154 * t511 + t424) * t434 + (t248 * t173 + (t352 + 0.2e1 * t464) * t438) * pkin(2)) * t423 + 0.8e1 * t66 * t350 + 0.4e1 * ((t247 * t362 + t438 * t513) * t493 + ((t187 - t406) * t202 - t164 * t407) * t529 + t330) * t418 + t337 * t515 + t326 * t203 + (t186 * t438 + 0.4e1 * t304 * t347) * t212 + t107 * t363 - 0.4e1 * t330 * t427 + 0.4e1 * t103 * t367 - t127 * t187 + t138 * t406 - 0.4e1 * t519 * t63) * t296 + t41 * t399 + t139 * t36 + t152 * ((t173 - 0.8e1 * t346) * t365 + 0.12e2 * (-0.12e2 * t340 + 0.6e1 * (-0.4e1 / 0.9e1 * t375 - 0.4e1 / 0.9e1 * t374) * t371 - 0.12e2 * t104 * t346 + t93 - 0.4e1 * t114 * t367 - 0.2e1 * t329 - 0.2e1 * t328) * t473 - 0.24e2 * t50 * t350 - 0.6e1 * (t185 * t363 + (-t111 * t436 - t249 * t458) * pkin(1) * t430 + t460) * t418 + t83 * t336 + t460 * t393 + t62 * t345 + t487 + t531 * t86 + 0.6e1 * t519 * t51 + (0.8e1 * t339 + 0.24e2 * t334) * t128)) / t30 ^ 2 / 0.4e1;
t166 = t269 + t284 + t380;
t101 = t166 + t183 + t357;
t116 = pkin(2) * t469 + t180 * t247;
t168 = -pkin(3) + t416;
t38 = -t101 * t483 + t116 * t296 + (pkin(1) * t168 * t509 + t166 * t472) * pkin(2) + (-t175 - t272 + t422 - 0.2e1 * t484) * pkin(3);
t401 = t38 * t502;
t112 = -t168 + t483;
t125 = t183 + t284 + t353;
t67 = t125 * t180 + 0.2e1 * t129 * t202;
t70 = t125 * t249 + (0.4e1 * t212 - 0.2e1) * t180 * pkin(3);
t40 = t112 * t296 + t203 * t70 + t247 * t67;
t400 = t40 * t502;
t398 = -t489 / 0.2e1;
t396 = t247 * t475;
t285 = 0.1e1 / pkin(4);
t394 = t285 * t501;
t391 = 0.4e1 / 0.3e1 * t281 + 0.4e1 / 0.3e1 * t284 + t279;
t276 = 4 * t295;
t390 = 0.2e1 / 0.3e1 * t281 + t235 + t276;
t388 = t295 + t456;
t229 = -t281 / 0.2e1;
t386 = t229 - t284 / 0.2e1 + t295;
t383 = t275 + t450;
t378 = t211 * t436;
t196 = V_base(6) + qJD(1);
t195 = V_base(6) + qJD(2);
t368 = pkin(1) * t411;
t123 = 0.4e1 / 0.3e1 * t464 + t182 + t197;
t361 = -0.24e2 * t123 * t475;
t360 = -0.32e2 * t397;
t356 = -0.3e1 * t462 + t273 + t457;
t355 = t245 + t388;
t79 = t301 + (t451 + t455) * t293 + t267 + t383 * t289 + t295 * (t295 + t455);
t95 = t271 + (t258 + t383) * t293 + t205 * (t240 + t384);
t54 = t79 * t203 - t492 * t95;
t351 = t214 * t301 * t439;
t348 = t287 * t378;
t177 = pkin(1) * V_base(6) + V_base(2);
t119 = t249 * t177 - t247 * V_base(1);
t142 = -t248 * V_base(1) + t250 * V_base(2);
t49 = -0.6e1 * t88 * t370 + (t256 + (t259 - 0.9e1 * t281) * t289 + t356) * t293 + (t231 + t452) * t301 + t486;
t338 = t187 * t479;
t171 = t229 + t382;
t335 = t171 * t357;
t178 = -V_base(5) * pkin(1) + V_base(3);
t132 = -t469 + t471;
t135 = t249 * t250 + t472;
t331 = t79 * t187 - t406 * t95;
t327 = -0.48e2 * t340;
t325 = (6 * t294) + t447 - 0.6e1 * t462;
t160 = 0.16e2 * (t441 - 0.6e1 * t463) * t287;
t201 = -0.30e2 * t281 + (60 * t295);
t297 = pkin(1) * t295;
t227 = -t281 / 0.4e1;
t243 = t289 / 0.2e1;
t122 = -0.2e1 / 0.3e1 * t370 + t295 + t243 + t227;
t191 = (t276 + t281) * t289;
t199 = t295 - 0.2e1 / 0.3e1 * t293;
t162 = t295 + t293 / 0.4e1 + t289 / 0.4e1 - t281 / 0.8e1;
t59 = -0.32e2 / 0.21e2 * t162 * t370 + t301 / 0.7e1 + (0.16e2 / 0.21e2 * t289 + t453) * t293 + t287 / 0.7e1 + t453 * t289 + t294 - 0.3e1 / 0.7e1 * t462 + t447 / 0.42e2;
t163 = t227 + t242 + t454;
t241 = 0.4e1 / 0.3e1 * t289;
t61 = -0.8e1 / 0.3e1 * t163 * t370 + t301 / 0.3e1 + (t241 + t228) * t293 + t294 - t287 / 0.3e1 + (t498 + 0.2e1 / 0.3e1 * t289 + t230) * t295 + t447 / 0.18e2;
t42 = t199 * t426 + 0.14e2 * t59 * t464 + t197 * t335 + t206 * t301 + (t191 - 0.10e2 / 0.3e1 * t287 + (2 * t294) - t462) * t293 + t117 * t467 + (t122 * t411 + 0.6e1 * t202 * t61) * pkin(1);
t65 = t335 + (t268 + t448) * t293 + t318;
t85 = t171 * t466 + t130;
t43 = t393 * t65 + t409 * t85 + t158 + t49;
t274 = 8 * t295;
t110 = t414 * t512 + t216 + t508 + (t260 + t274) * t289;
t118 = t227 - t289 + t322;
t52 = t169 * t467 + t110 * t212 + t171 * t207 + (t118 * t429 + t425) * pkin(1);
t53 = t198 * t335 - t290 + (-t218 - t440) * t301 + (t191 + t442 + t517) * t293 + t295 * t117;
t266 = 0.7e1 * t287;
t58 = (t231 + t277 + 0.7e1 * t289) * t301 + (t266 + (t261 + (10 * t295)) * t289 + t356) * t293 + t486;
t179 = -0.12e2 * pkin(1) * t304 + t297 * t430;
t194 = -0.8e1 * t287 + 0.12e2 * t461;
t74 = t179 * t249 + t194 * t212 + t368 + t426 + t445 - 0.6e1 * t461;
t89 = t169 * t466 + t171 * t208;
t25 = t52 * t360 + t160 * t210 + 0.24e2 * t53 * t464 + (t260 + t276 + 0.28e2 * t289) * t290 + t175 * t480 + (t201 * t287 + 0.24e2 * t42 * t215 + t262 * t294 + t325 * t268 + t447 * t278 + 0.4e1 * t297 ^ 2 + 0.28e2 * t304 ^ 2) * t293 + 0.8e1 * (-t412 * t58 - t43 * t482) * pkin(2) + (0.8e1 * t202 * t49 + 0.32e2 * t477 * t89) * pkin(1) + (t201 * t289 + 0.16e2 * t213 * t74 + 0.70e2 * t287 + t301 + t325) * t301;
t140 = t498 + t243 + t388;
t141 = t241 + t355;
t76 = -t140 * t492 + t141 * t203;
t146 = t289 + t355;
t189 = 0.2e1 * t293 + t206;
t87 = t146 * t203 + t189 * t403;
t90 = t293 * t206 - 0.5e1 / 0.3e1 * t287 + t389 * t289 + t295 * t387;
t219 = -0.20e2 / 0.3e1 * t289;
t91 = -t301 + (t219 + t390) * t293 - 0.3e1 * t287 + t391 * t289 + t294;
t44 = t76 * t420 + t91 * t403 + (-0.8e1 / 0.3e1 * t479 + t90) * t203 + (t202 * t87 - t247 * t478) * t432;
t149 = t272 + t354;
t150 = t190 + t521;
t80 = -t149 * t492 + t150 * t203;
t161 = t243 + t293 + t456;
t96 = t161 * t524 + t466 * t492;
t45 = -0.4e1 * t96 * t464 + (-0.8e1 * t211 * t414 + t429 * t80) * pkin(1) + t54;
t92 = -0.3e1 * t301 + (t219 + t391) * t293 + t390 * t289 + t442;
t55 = t203 * t92 + t492 * t526;
t145 = 0.3e1 / 0.2e1 * t293 + t269 + t386;
t153 = 0.4e1 * t323;
t165 = t203 + 0.2e1 * t492;
t56 = t207 * t203 + t153 * t212 + (t145 * t247 + t165 * t495) * t431;
t172 = t520 * t258;
t57 = t290 + (0.21e2 * t289 + t520) * t301 + (t295 * t450 + t172 + t273 + 0.35e2 * t287) * t293 + (t266 + (t274 + t449) * t289 + t295 * (-t284 + t440)) * t205;
t64 = 0.7e1 * t290 + (0.35e2 * t289 + (15 * t295) + t449) * t301 + (0.21e2 * t287 + t172 + (9 * t294) + (t262 - 0.6e1 * t284) * t295) * t293 + t480;
t147 = t272 + 0.3e1 / 0.2e1 * t289 + t386;
t94 = t147 * t203 + t247 * t404;
t31 = t94 * t368 + t56 * t364 + t55 * t421 + t44 * t410 + (-0.6e1 * t54 * t495 + (t64 + t361) * t247) * pkin(3) + (0.6e1 * t45 * t482 + (t479 * t506 - t57) * t248) * pkin(2);
t20 = t152 * t25 + t296 * t31;
t321 = t20 * t400 + t38 * t496;
t320 = t20 * t401 + t40 * t497;
t316 = 0.4e1 * t319;
t315 = -0.2e1 * t317;
t314 = t316 * t202;
t251 = V_base(3) ^ 2;
t143 = t248 * V_base(2) + t250 * V_base(1);
t137 = t248 * V_base(5) + t250 * V_base(4);
t136 = t247 * V_base(5) + t249 * V_base(4);
t134 = -t248 * V_base(4) + t250 * V_base(5);
t133 = -t247 * V_base(4) + t249 * V_base(5);
t120 = t177 * t247 + t249 * V_base(1);
t115 = -pkin(2) * t134 + V_base(3);
t113 = pkin(2) * t196 + t142;
t102 = -pkin(3) * t133 + t178;
t98 = pkin(3) * t195 + t119;
t78 = t518 * t135;
t77 = t518 * t132;
t37 = 0.1e1 / t38 ^ 2;
t34 = atan2(t40 * t394, t38 * t394);
t33 = cos(t34);
t32 = sin(t34);
t27 = t116 * t399 + (-t174 * t249 + (t101 * t247 + t468) * qJD(2)) * t180 + (t341 + 0.4e1 * t349 - 0.2e1 * t485) * pkin(3) + ((t166 * t249 - t470) * t435 + (-t101 * t469 + t135 * t296 + t166 * t471) * qJD(1) + t180 * t314 + (t168 * t439 - t319 * t494) * t529) * pkin(2);
t26 = t112 * t399 + (-t180 * t470 + t249 * t67) * qJD(2) + (t121 * t249 - t129 * t436) * t247 * t431 + ((-t468 + (-t125 - 0.8e1 * t413) * t247) * t435 + ((t70 - t470) * t250 + (t468 + (t180 * t529 + t125) * t247 + (-pkin(3) + t495 + 0.2e1 * t491) * t524) * t248) * qJD(1)) * pkin(2);
t24 = t133 * t32 + t136 * t33;
t23 = t133 * t33 - t136 * t32;
t22 = t120 * t33 + t32 * t98;
t21 = -t120 * t32 + t33 * t98;
t18 = t321 * t405;
t17 = t320 * t405;
t16 = t195 + 0.2e1 * ((t26 * t501 + t398 * t40) / t38 - (t27 * t501 + t38 * t398) * t40 * t37) * pkin(4) * t285 / (t37 * t40 ^ 2 + 0.1e1) * t84;
t15 = (t361 * t406 - 0.24e2 * (-0.8e1 / 0.3e1 * t346 + t173) * pkin(3) * t396 + 0.96e2 * t123 * t351 * t492 + (t522 * t187 + 0.2e1 * (pkin(3) * t145 - t153 * t247 + t424) * t434 + (t249 * t525 + (t165 * t511 + 0.4e1 * t491) * qJD(2)) * t504) * t364 + (-0.8e1 / 0.3e1 * t338 + (-t140 * t406 + t141 * t187) * t420 + t90 * t187 - t91 * t406 / 0.2e1 + (0.32e2 / 0.3e1 * t478 * t203 + t76 * t249 * t507) * t436 + (0.4e1 * t146 * t249 * t366 + ((0.12e2 * t209 * t212 - 0.4e1 * t210) * t287 + (-0.2e1 * t189 * t491 + t512 * t87) * pkin(3)) * qJD(2)) * pkin(1)) * t410 + 0.24e2 * t44 * t350 + 0.6e1 * ((-0.4e1 * (pkin(3) * t347 + t161 * t525) * t212 + 0.8e1 * t96 * t376) * t289 + (-0.8e1 * t337 + (-t149 * t406 + t150 * t187) * t429 + (0.24e2 * t212 * t414 + t514 * t80) * t436) * pkin(1) + t331) * t418 + t338 * t506 - 0.96e2 * t198 * t348 * t203 + (t147 * t187 + t404 * t434) * t368 + t94 * t327 + (t187 * t92 + t406 * t526) * t421 + 0.12e2 * t55 * t346 - 0.6e1 * t331 * t427 + 0.6e1 * t54 * t367 - t57 * t187 + t64 * t406 + (-0.8e1 * t339 + t324) * t56 - 0.6e1 * t519 * t45) * t296 + t31 * t399 + t139 * t25 + t152 * (0.16e2 * (t194 * t510 - t179 - 0.48e2 * t419 - 0.32e2 * t478) * qJD(2) * t396 - 0.64e2 * t74 * t351 + (t93 + (t110 * t510 + (t118 * t514 - 0.24e2 * t476) * pkin(1)) * t436 + (t315 * t467 - t316 * t476) * pkin(2)) * t360 + 0.24e2 * (-0.32e2 * t199 * t348 + (-0.2e1 / 0.3e1 * t375 - 0.2e1 / 0.3e1 * t374) * t368 * t503 + t122 * t327 - 0.28e2 * t59 * t346 + 0.6e1 * (-0.8e1 / 0.3e1 * t375 - 0.8e1 / 0.3e1 * t374) * t163 * t373 + t61 * t345 + 0.4e1 * (-t329 - t328) * t171 - 0.64e2 / 0.3e1 * t319 * t162 * t371) * t473 - 0.48e2 * t42 * t350 - 0.8e1 * (t85 * t336 + 0.6e1 * (-pkin(2) * t171 * t314 - t436 * t65) * t504 + t487 + t488) * t418 - 0.4e1 * t160 * t378 + 0.32e2 * t211 * t315 * t395 * t505 - 0.96e2 * t89 * t340 - 0.96e2 * t171 * t313 - 0.48e2 * t53 * t346 + 0.8e1 * t488 * t427 - 0.8e1 * t49 * t367 + 0.8e1 * t519 * t43 - 0.8e1 * t530 * t58 + (0.32e2 * t339 + 0.96e2 * t334) * t52);
t14 = -t132 * t18 + t135 * t17;
t13 = t132 * t17 + t135 * t18;
t12 = 0.1e1 / t14 ^ 2;
t11 = atan2(t13, t14);
t9 = cos(t11);
t8 = sin(t11);
t7 = (-t321 * t489 + (t27 * t496 + t38 * t490 / 0.8e1 + t15 * t400 + (t26 * t502 + t40 * t402) * t20) * t81) * t465;
t6 = (-t320 * t489 + (t15 * t401 + t26 * t497 - t40 * t490 / 0.8e1 + (t27 * t502 + t38 * t402) * t20) * t81) * t465;
t5 = -t134 * t8 - t137 * t9;
t4 = -t134 * t9 + t137 * t8;
t3 = -t113 * t8 - t143 * t9;
t2 = -t113 * t9 + t143 * t8;
t1 = ((t132 * t6 + t135 * t7 - t17 * t78 + t18 * t77) / t14 - (-t132 * t7 + t135 * t6 + t17 * t77 + t18 * t78) * t13 * t12) / (t12 * t13 ^ 2 + 0.1e1) + t196;
t10 = m(4) * (t119 ^ 2 + t120 ^ 2 + t178 ^ 2) / 0.2e1 + m(2) * (t142 ^ 2 + t143 ^ 2 + t251) / 0.2e1 + m(1) * (V_base(1) ^ 2 + V_base(2) ^ 2 + t251) / 0.2e1 + m(3) * (t115 ^ 2 + t2 ^ 2 + t3 ^ 2) / 0.2e1 + m(5) * (t102 ^ 2 + t21 ^ 2 + t22 ^ 2) / 0.2e1 + (V_base(2) * mrSges(1,1) - V_base(1) * mrSges(1,2) + Ifges(1,3) * V_base(6) / 0.2e1) * V_base(6) + (t115 * mrSges(3,2) - t2 * mrSges(3,3) + Ifges(3,1) * t5 / 0.2e1) * t5 + (t102 * mrSges(5,2) - t21 * mrSges(5,3) + Ifges(5,1) * t24 / 0.2e1) * t24 + (t142 * mrSges(2,1) - t143 * mrSges(2,2) + Ifges(2,3) * t196 / 0.2e1) * t196 + (t119 * mrSges(4,1) - t120 * mrSges(4,2) + Ifges(4,3) * t195 / 0.2e1) * t195 + (-V_base(3) * mrSges(1,1) + V_base(1) * mrSges(1,3) + Ifges(1,6) * V_base(6) + Ifges(1,2) * V_base(5) / 0.2e1) * V_base(5) + (-t115 * mrSges(3,1) + t3 * mrSges(3,3) + Ifges(3,4) * t5 + Ifges(3,2) * t4 / 0.2e1) * t4 + (-t102 * mrSges(5,1) + t22 * mrSges(5,3) + Ifges(5,4) * t24 + Ifges(5,2) * t23 / 0.2e1) * t23 + (V_base(3) * mrSges(2,2) - t142 * mrSges(2,3) + Ifges(2,5) * t196 + Ifges(2,1) * t137 / 0.2e1) * t137 + (t178 * mrSges(4,2) - t119 * mrSges(4,3) + Ifges(4,5) * t195 + Ifges(4,1) * t136 / 0.2e1) * t136 + (V_base(3) * mrSges(1,2) - V_base(2) * mrSges(1,3) + Ifges(1,4) * V_base(5) + Ifges(1,5) * V_base(6) + Ifges(1,1) * V_base(4) / 0.2e1) * V_base(4) + (t21 * mrSges(5,1) - t22 * mrSges(5,2) + Ifges(5,5) * t24 + Ifges(5,6) * t23 + Ifges(5,3) * t16 / 0.2e1) * t16 + (-V_base(3) * mrSges(2,1) + t143 * mrSges(2,3) + Ifges(2,4) * t137 + Ifges(2,6) * t196 + Ifges(2,2) * t134 / 0.2e1) * t134 + (-t178 * mrSges(4,1) + t120 * mrSges(4,3) + Ifges(4,4) * t136 + Ifges(4,6) * t195 + Ifges(4,2) * t133 / 0.2e1) * t133 + (t2 * mrSges(3,1) - t3 * mrSges(3,2) + Ifges(3,5) * t5 + Ifges(3,6) * t4 + Ifges(3,3) * t1 / 0.2e1) * t1;
T = t10;
