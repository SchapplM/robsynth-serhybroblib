% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% palh3m1TE
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [4x1]
%   Generalized joint coordinates (joint angles)
% qJD [4x1]
%   Generalized joint velocities
% qJDD [4x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [19x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[AB,BC,BE,BG,DA,DC,DT2,EP,GH,GP,HW,OT1,T1A,T1T2,phi1,phi2,phi410,phi78,phi79]';
% 
% Output:
% tau_reg [4x(4*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2020-04-18 10:11
% Revision: bf71b3c88fbe513355f3920541c47e1db11bd916 (2020-04-17)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = palh3m1TE_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(4,1),zeros(4,1),zeros(4,1),zeros(3,1),zeros(19,1)}
assert(isreal(qJ) && all(size(qJ) == [4 1]), ...
  'palh3m1TE_invdynJ_fixb_reg2_slag_vp: qJ has to be [4x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [4 1]), ...
  'palh3m1TE_invdynJ_fixb_reg2_slag_vp: qJD has to be [4x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [4 1]), ...
  'palh3m1TE_invdynJ_fixb_reg2_slag_vp: qJDD has to be [4x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'palh3m1TE_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [19 1]), ...
  'palh3m1TE_invdynJ_fixb_reg2_slag_vp: pkin has to be [19x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2020-04-18 00:52:56
% EndTime: 2020-04-18 03:19:49
% DurationCPUTime: 2597.38s
% Computational Cost: add. (57089262->1319), mult. (89521146->2184), div. (3361776->28), fcn. (55757526->24), ass. (0->859)
t1152 = pkin(5) ^ 2;
t1131 = sin(pkin(16));
t1132 = cos(pkin(16));
t441 = sin(qJ(2));
t446 = cos(qJ(2));
t1183 = t441 * t1131 - t446 * t1132;
t975 = pkin(5) * t1183;
t947 = (-0.2e1 * t975 + pkin(1)) * pkin(1);
t931 = t947 + t1152;
t1148 = 0.1e1 / t931 ^ 2;
t922 = 0.1e1 / t931;
t1283 = 0.4e1 * t922 * t1148;
t954 = -t446 * t1131 - t441 * t1132;
t1118 = t954 * t1152;
t1156 = pkin(1) ^ 2;
t1282 = qJD(2) * t1118 * t1156 * t1283;
t436 = sin(pkin(19));
t438 = cos(pkin(19));
t1136 = pkin(5) + pkin(6);
t1137 = pkin(5) - pkin(6);
t867 = (pkin(2) + t1136) * (-pkin(2) + t1137) + t947;
t868 = (-pkin(2) + t1136) * (pkin(2) + t1137) + t947;
t839 = t868 * t867;
t452 = sqrt(-t839);
t1076 = t954 * t452;
t1030 = pkin(5) * t1076;
t1155 = 0.1e1 / pkin(2);
t454 = pkin(2) ^ 2;
t1056 = pkin(6) ^ 2 - t454;
t906 = t931 - t1056;
t958 = -t975 + pkin(1);
t846 = t1155 * (t906 * t958 + t1030);
t833 = t922 * t846;
t824 = -t833 / 0.2e1;
t887 = pkin(5) * t906;
t1237 = t954 * t887;
t847 = t1155 * (t452 * t958 - t1237);
t834 = t922 * t847;
t825 = t834 / 0.2e1;
t355 = t436 * t825 + t438 * t824;
t460 = t355 ^ 2;
t348 = 0.1e1 / t460;
t823 = t833 / 0.2e1;
t356 = t436 * t823 + t438 * t825;
t350 = t356 ^ 2;
t327 = t348 * t350 + 0.1e1;
t325 = 0.1e1 / t327;
t1231 = 0.2e1 * t325;
t347 = 0.1e1 / t355;
t349 = t347 * t348;
t1032 = t349 * t1231;
t1150 = 0.1e1 / t452;
t1218 = t1150 / 0.2e1;
t1143 = pkin(1) * pkin(5);
t1276 = t867 + t868;
t1259 = t1276 * t1143;
t1196 = t1259 * t954;
t810 = t1196 * qJD(2);
t808 = -0.2e1 * t810;
t797 = t958 * t808;
t855 = t1183 * t887;
t853 = qJD(2) * t855;
t1187 = qJD(2) * t954;
t935 = t954 * t1187;
t923 = t1152 * t935;
t917 = pkin(1) * t923;
t934 = t452 * t1187;
t783 = t1155 * (pkin(5) * t934 + t797 * t1218 - t853 - 0.2e1 * t917);
t775 = t922 * t783;
t1034 = t1148 * t1143;
t838 = t954 * t847;
t836 = t838 * t1034;
t831 = qJD(2) * t836;
t1198 = t775 / 0.2e1 - t831;
t1243 = 0.2e1 * t954;
t941 = pkin(1) * t1243;
t1193 = t958 * pkin(5) * t941 + t1237;
t806 = t1150 * t808;
t803 = -t806 / 0.2e1;
t945 = qJD(2) * t1183;
t1234 = t452 * t945 - t954 * t803;
t794 = t1234 * pkin(5);
t782 = t1155 * (qJD(2) * t1193 + t794);
t774 = t922 * t782;
t837 = t954 * t846;
t835 = t837 * t1034;
t830 = qJD(2) * t835;
t298 = (-t774 / 0.2e1 + t830) * t438 + t1198 * t436;
t1281 = t1032 * t298;
t780 = t782 * t1034;
t845 = t847 * t1034;
t843 = t954 * t845;
t844 = t846 * t1034;
t1280 = qJD(3) * t843 + t837 * t1282 - t780 * t954 - t844 * t945;
t770 = t774 / 0.2e1;
t297 = t1198 * t438 + (t770 - t830) * t436;
t1279 = t297 * t348;
t326 = 0.1e1 / t327 ^ 2;
t1087 = t326 * t347;
t1021 = t297 * t1087;
t1081 = t349 * t350;
t1082 = t348 * t356;
t261 = -0.2e1 * t1081 * t298 + 0.2e1 * t1082 * t297;
t1042 = -t1150 / 0.2e1;
t1125 = pkin(5) * t954;
t1035 = pkin(1) * t1125;
t373 = -0.4e1 * (t1136 * t1137 - t454 + t947) * t1035;
t1009 = t373 * t1042;
t973 = t1183 * t452;
t342 = (t973 - (t1009 + t1056 - t1152) * t954) * pkin(5) - (-0.3e1 * pkin(1) + 0.4e1 * t975) * t1035;
t1249 = t954 ^ 2;
t1037 = -0.2e1 * pkin(1) * t1249;
t936 = t958 * t1218;
t344 = t1152 * t1037 + t373 * t936 + t1030 - t855;
t842 = t954 * t844;
t911 = t922 / 0.2e1;
t901 = t1155 * t911;
t886 = t436 * t901;
t305 = t342 * t886 - t436 * t842 + (t344 * t901 - t843) * t438;
t912 = -t922 / 0.2e1;
t902 = t1155 * t912;
t306 = t344 * t886 - t436 * t843 + (t342 * t902 + t842) * t438;
t265 = -0.2e1 * t1081 * t306 + 0.2e1 * t1082 * t305;
t1278 = -t305 * t261 * t1087 + t265 * t1021;
t1135 = -pkin(8) - pkin(10);
t1153 = pkin(4) ^ 2;
t1036 = pkin(18) + pkin(19);
t1005 = cos(t1036);
t1004 = sin(t1036);
t440 = sin(qJ(3));
t445 = cos(qJ(3));
t793 = t440 * t823 + t445 * t825;
t787 = t1004 * t793;
t792 = t440 * t825 + t445 * t824;
t768 = -t1005 * t792 - t787;
t766 = pkin(3) * t768;
t764 = -0.2e1 * t766;
t760 = pkin(4) * t764 + t1153;
t724 = (pkin(3) - t1135) * (pkin(3) + t1135) + t760;
t1134 = pkin(10) - pkin(8);
t725 = (pkin(3) - t1134) * (pkin(3) + t1134) + t760;
t691 = t725 * t724;
t1157 = sqrt(-t691);
t689 = 0.1e1 / t1157;
t1277 = t689 / 0.2e1;
t1086 = t326 * t348;
t1090 = t298 * t356;
t1069 = (t1086 * t261 + t1281) * t356 * t306 - (t1032 * t306 + t1086 * t265) * t1090 + t1278;
t1144 = qJD(3) ^ 2;
t1142 = pkin(1) * t1152;
t1244 = -0.4e1 * t954;
t1145 = qJD(2) ^ 2;
t943 = t1183 * t1145;
t862 = -qJDD(2) * t954 - t943;
t1191 = t862 * t1243 + t943 * t1244;
t805 = qJD(2) * t806;
t1192 = -t452 * t862 + t954 * t805;
t1226 = -0.2e1 * t1187;
t1186 = t1145 * t1249;
t938 = t1152 * t1186;
t927 = t1156 * t938;
t1269 = t927 * t1283;
t1033 = 0.2e1 * t1150;
t1149 = t1150 / t839;
t860 = pkin(5) * t862;
t857 = pkin(1) * t860;
t1272 = t1149 * t810 ^ 2 + (t1276 * t857 - 0.4e1 * t927) * t1033 / 0.2e1;
t781 = t783 * t1034;
t861 = -qJDD(2) * t1183 + t1145 * t954;
t1168 = (t1192 * pkin(5) + t1191 * t1142 + t1272 * t958 + t861 * t887) * t901 + t781 * t1226 + t847 * t1269 + t862 * t845;
t826 = -t834 / 0.2e1;
t645 = qJDD(3) * t823 + t1144 * t826 + (t774 - 0.2e1 * t830) * qJD(3) + t1168;
t1165 = t1183 * t805 + t1272 * t954 - t452 * t861;
t1225 = -0.2e1 * t958;
t915 = t1155 * t922;
t1167 = (0.4e1 * pkin(1) * t938 + pkin(5) * t1165 + t857 * t1225 - t860 * t906) * t915 / 0.2e1 + t780 * t1226 + t862 * t844 + t846 * t1269;
t648 = qJDD(3) * t826 + t1144 * t824 + (-t775 + 0.2e1 * t831) * qJD(3) + t1167;
t1174 = -t1004 * t645 + t1005 * t648;
t1175 = -t1004 * t648 - t1005 * t645;
t536 = t1174 * t445 + t1175 * t440;
t534 = pkin(4) * t536;
t533 = pkin(3) * t534;
t1154 = pkin(3) ^ 2;
t1233 = qJD(3) * t792;
t1256 = t1004 * t1233;
t1124 = pkin(5) * t452;
t1221 = -t1196 * t1033 / 0.2e1;
t776 = (-t941 * t1118 + t954 * t1124 + t958 * t1221 - t855) * t901;
t777 = (t1124 * t1183 + t1125 * t1221 + t1193) * t915;
t697 = (t776 - t836) * t445 + (t777 / 0.2e1 - t835) * t440;
t695 = t1004 * t697;
t832 = t440 * t836;
t698 = -t445 * t777 / 0.2e1 + t440 * t776 - t832;
t360 = t445 * t830;
t789 = qJD(3) * t793 + t360;
t670 = t1005 * t789 - t1256 - (-t1005 * t698 - t695) * qJD(2);
t668 = t670 ^ 2;
t663 = t1153 * t668;
t658 = t1154 * t663;
t758 = t760 + t1154;
t756 = 0.1e1 / t758 ^ 2;
t755 = 0.1e1 / t758;
t757 = t755 * t756;
t1275 = t756 * t533 + 0.4e1 * t757 * t658;
t1181 = t1153 * t1154;
t1274 = -0.4e1 * t757 * t1181;
t1200 = t724 + t725;
t532 = 0.2e1 * t533;
t666 = pkin(4) * t670;
t662 = pkin(3) * t666;
t657 = -0.2e1 * t662;
t586 = t1200 * t657;
t690 = t689 / t691;
t1273 = t690 * t586 ^ 2 / 0.4e1 + (t1200 * t532 - 0.8e1 * t658) * t1277;
t1096 = sin(pkin(17));
t1097 = cos(pkin(17));
t1239 = t1097 / 0.2e1;
t1151 = 0.1e1 / pkin(10);
t788 = t1005 * t793;
t767 = t1004 * t792 - t788;
t677 = t1157 * t767;
t456 = pkin(8) ^ 2;
t1055 = pkin(10) ^ 2 - t456;
t748 = t758 + t1055;
t761 = -t766 + pkin(4);
t641 = -pkin(3) * t677 + t748 * t761;
t639 = t1151 * t641;
t624 = t755 * t639;
t738 = pkin(3) * t748;
t642 = t1157 * t761 + t738 * t767;
t640 = t1151 * t642;
t625 = t755 * t640;
t584 = t624 * t1239 - t1096 * t625 / 0.2e1;
t581 = 0.1e1 / t584 ^ 2;
t1220 = t1096 / 0.2e1;
t585 = t624 * t1220 + t625 * t1239;
t583 = t585 ^ 2;
t520 = t581 * t583 + 0.1e1;
t1271 = 0.2e1 / t520 ^ 2;
t1268 = t1149 * t373 / 0.4e1;
t399 = pkin(1) * t1183 - pkin(5);
t1230 = 0.2e1 * t399;
t386 = t931 + t1056;
t940 = pkin(1) * t1187;
t929 = pkin(5) * t940;
t337 = t1234 * pkin(1) - t929 * t1230 + t386 * t940;
t1138 = pkin(5) * t1156;
t939 = pkin(1) * t945;
t338 = pkin(1) * t934 - 0.2e1 * t935 * t1138 - t386 * t939 + t399 * t803;
t371 = pkin(1) * t1076 - t399 * t386;
t1130 = pkin(1) * t386;
t372 = -t1130 * t954 - t399 * t452;
t448 = cos(pkin(15));
t451 = 0.1e1 / pkin(6);
t898 = t451 * t911;
t878 = t448 * t898;
t443 = sin(pkin(15));
t879 = t443 * t898;
t920 = t1148 * t929;
t905 = t451 * t920;
t891 = t448 * t905;
t893 = t443 * t905;
t299 = t337 * t878 + t338 * t879 - t371 * t891 - t372 * t893;
t899 = t448 * t911;
t900 = t443 * t912;
t358 = (t371 * t900 + t372 * t899) * t451;
t1267 = t299 * t358;
t1110 = pkin(1) * qJD(2);
t437 = sin(pkin(18));
t1128 = pkin(3) * t437;
t1266 = pkin(1) * t297 + t1069 * t1128 - t305 * t1110;
t1111 = cos(pkin(18));
t1023 = pkin(3) * t1111;
t1265 = t298 * pkin(1) + t1069 * t1023 - t306 * t1110;
t553 = t689 * t586;
t550 = -t553 / 0.2e1;
t1255 = t1005 * t1233;
t696 = t1005 * t697;
t669 = t1004 * t789 + t1255 + (t1004 * t698 - t696) * qJD(2);
t1209 = -t1157 * t669 + t767 * t550;
t1228 = -0.2e1 * t761;
t513 = t1151 * (t1209 * pkin(3) - t662 * t1228 + t670 * t738);
t1141 = pkin(3) * pkin(4);
t750 = t756 * t1141;
t509 = t513 * t750;
t597 = t670 * t639;
t1263 = t597 * t1274 + t509;
t1139 = pkin(4) * t1154;
t1222 = t761 / 0.2e1;
t615 = t1157 * t670;
t638 = 0.2e1 * t767 * t670;
t514 = t1151 * (pkin(3) * t615 + t638 * t1139 + t553 * t1222 + t669 * t738);
t510 = t514 * t750;
t598 = t670 * t640;
t1262 = t598 * t1274 + t510;
t313 = t758 - t1055;
t314 = pkin(4) * t768 - pkin(3);
t272 = -pkin(4) * t677 - t314 * t313;
t268 = 0.1e1 / t272;
t1232 = -0.4e1 * t268;
t176 = t1209 * pkin(4) + t313 * t666 + t314 * t657;
t269 = 0.1e1 / t272 ^ 2;
t765 = pkin(4) * t767;
t273 = -t1157 * t314 + t313 * t765;
t271 = t273 ^ 2;
t231 = t269 * t271 + 0.1e1;
t229 = 0.1e1 / t231;
t1123 = pkin(8) * t229;
t649 = t662 * t1123;
t747 = t758 * t1123;
t733 = -0.2e1 * t269 * t747;
t1261 = -t649 * t1232 + t176 * t733;
t1258 = (t1148 * t857 + t1269) * t451;
t1257 = t1275 * t1151;
t1092 = t269 * t273;
t1224 = 0.4e1 * t1092;
t1140 = pkin(3) * t1153;
t665 = pkin(4) * t669;
t177 = pkin(4) * t615 + t638 * t1140 + t313 * t665 + t314 * t550;
t270 = t268 * t269;
t713 = 0.4e1 * t270 * t273 * t747;
t1254 = -t649 * t1224 + t176 * t713 + t177 * t733;
t442 = sin(qJ(1));
t980 = t446 * t440 + t441 * t445;
t394 = t980 * t442;
t1072 = t445 * t446;
t1075 = t441 * t442;
t395 = t442 * t1072 - t440 * t1075;
t1067 = -t394 * t584 + t395 * t585;
t447 = cos(qJ(1));
t1071 = t446 * t447;
t1074 = t441 * t447;
t396 = t445 * t1071 - t440 * t1074;
t397 = t980 * t447;
t1253 = t396 * t585 - t397 * t584;
t1252 = -t394 * t585 - t395 * t584;
t193 = t396 * t584 + t397 * t585;
t1052 = qJD(1) * t441;
t400 = -qJD(1) * t1072 + t1052 * t440;
t401 = t980 * qJD(1);
t196 = t400 * t585 + t584 * t401;
t1251 = -t584 * t400 + t401 * t585;
t404 = t440 * t441 - t1072;
t198 = t404 * t585 + t980 * t584;
t1250 = -t404 * t584 + t585 * t980;
t580 = 0.1e1 / t584;
t582 = t580 * t581;
t1248 = 0.2e1 * t582;
t1246 = -0.2e1 * t670;
t1242 = 0.4e1 * (-t456 + (pkin(3) + pkin(10)) * (pkin(3) - pkin(10)) + (t764 + pkin(4)) * pkin(4)) * t1141;
t450 = 0.1e1 / pkin(8);
t637 = t756 * t662;
t634 = t450 * t637;
t630 = t272 * t634;
t751 = t755 / 0.2e1;
t742 = t450 * t751;
t160 = t176 * t742 - t630;
t230 = 0.1e1 / t231 ^ 2;
t744 = t758 * t1092;
t712 = 0.2e1 * pkin(8) * t230 * t744;
t704 = t160 * t712;
t629 = t273 * t634;
t161 = t177 * t742 - t629;
t753 = t268 * t758;
t746 = pkin(8) * t753;
t732 = -0.2e1 * t230 * t746;
t717 = t161 * t732;
t1241 = -0.2e1 * t717 - 0.2e1 * t704;
t511 = t755 * t513;
t512 = t755 * t514;
t595 = t597 * t750;
t596 = t598 * t750;
t493 = (t511 / 0.2e1 - t595) * t1097 + (-t512 / 0.2e1 + t596) * t1096;
t494 = -t1096 * t595 - t1097 * t596 + t511 * t1220 + t512 * t1239;
t521 = t581 * t585;
t1240 = (-t493 * t521 + t494 * t580) * t1271;
t622 = t639 * t750;
t623 = t640 * t750;
t1208 = t1096 * t623 - t1097 * t622;
t1219 = -t1097 / 0.2e1;
t883 = t440 * t901;
t873 = t342 * t883;
t881 = t445 * t901;
t309 = t344 * t881 - t440 * t842 - t445 * t843 + t873;
t882 = t445 * t902;
t310 = t342 * t882 + t344 * t883 - t440 * t843 + t445 * t842;
t294 = -t1004 * t309 - t1005 * t310;
t235 = t294 * t1242;
t293 = t1004 * t310 - t1005 * t309;
t671 = t689 * t1222;
t682 = t294 * t1157;
t1223 = -0.2e1 * t1154;
t762 = t765 * t1223;
t607 = t1151 * (-pkin(3) * t682 + t235 * t671 + t293 * t738 + t294 * t762);
t601 = t607 * t751;
t1199 = t1141 * t1228 - t738;
t679 = -t689 / 0.2e1;
t676 = t767 * t679;
t1204 = -t293 * t1157 + t235 * t676;
t605 = t1151 * (pkin(3) * t1204 + t1199 * t294);
t603 = t755 * t605;
t136 = t1096 * t601 + t1208 * t294 + t603 * t1219;
t1207 = t1096 * t622 + t1097 * t623;
t137 = t1097 * t601 + t1207 * t294 + t603 * t1220;
t522 = t583 * t582;
t472 = (-t493 * t522 + t494 * t521) * t1271;
t470 = t472 * t521;
t471 = t580 * t472;
t555 = t690 * t586;
t1235 = -t767 * t555 / 0.4e1 + t669 * t679;
t1070 = 0.2e1 * t1141;
t1203 = t1200 * t1070;
t1166 = -qJD(3) * t842 + t838 * t1282 - t781 * t954 - t845 * t945;
t910 = t1155 * t920;
t1190 = qJD(3) * t881 - t440 * t910;
t370 = -0.8e1 * t1156 * t923 - 0.2e1 * t1259 * t945;
t302 = t797 * t1268 + t370 * t936 + t794 + (t1183 * t1226 + t945 * t1244) * t1142 + (-pkin(5) * t1009 + t887) * t1187;
t304 = t853 + 0.4e1 * t917 + (-t945 * t1009 - t1183 * t803 - t934 + (-t1042 * t370 + t808 * t1268) * t954 - t939 * t1225) * pkin(5);
t894 = t445 * t910;
t237 = qJD(3) * t873 + t1166 * t440 + t1190 * t344 - t1280 * t445 + t302 * t883 + t304 * t882 + t342 * t894;
t1049 = qJD(3) * t440;
t238 = t302 * t881 + t304 * t883 + (t1049 * t902 - t894) * t344 + t1190 * t342 + t1166 * t445 + t1280 * t440;
t207 = -t1004 * t238 - t1005 * t237;
t653 = 0.8e1 * t670 * t1181;
t154 = t1203 * t207 + t294 * t653;
t206 = t1004 * t237 - t1005 * t238;
t659 = t1154 * t666;
t651 = -0.4e1 * t659;
t105 = t294 * t651 + t1199 * t207 + (-t1157 * t206 + t1235 * t235 + t154 * t676 + t293 * t550) * pkin(3);
t1170 = t1262 * t1096 - t1263 * t1097;
t1171 = t1263 * t1096 + t1262 * t1097;
t518 = 0.1e1 / t520;
t488 = t518 * t493;
t489 = t518 * t494;
t1236 = t585 * t488 * t1248 - t581 * t489;
t483 = t581 * t488;
t502 = t518 * t585;
t495 = t581 * t502;
t501 = t518 * t580;
t557 = t605 * t637;
t559 = t607 * t637;
t745 = t1151 * t751;
t721 = t1096 * t745;
t754 = t1151 * t755;
t737 = t1097 * t754;
t722 = t737 / 0.2e1;
t723 = -t737 / 0.2e1;
t539 = t761 * t555 / 0.4e1;
t613 = t670 * t1277;
t650 = t665 * t1223;
t652 = 0.2e1 * t659;
t93 = t154 * t671 + t206 * t738 + t207 * t762 + t235 * t539 + t293 * t652 + t294 * t650 + (-t1157 * t207 + t235 * t613 + t294 * t550) * pkin(3);
t475 = -(t105 * t721 - t1096 * t557 - t1097 * t559 + t1171 * t294 + t1207 * t207 + t722 * t93) * t501 - (t105 * t723 - t1096 * t559 + t1097 * t557 + t1170 * t294 + t1208 * t207 + t721 * t93) * t495 + t137 * t483 + t1236 * t136;
t11 = t136 * t470 + t137 * t471 + t475;
t13 = t475 + (t136 * t522 + t137 * t521) * t1240;
t1217 = t11 - t13;
t1061 = t440 * t826 + t445 * t823;
t320 = -t1004 * t1061 - t788;
t289 = t320 * t1242;
t319 = -t1005 * t1061 + t787;
t680 = t320 * t1157;
t606 = t1151 * (-pkin(3) * t680 + t289 * t671 + t319 * t738 + t320 * t762);
t600 = t606 * t751;
t1205 = -t319 * t1157 + t289 * t676;
t604 = t1151 * (pkin(3) * t1205 + t1199 * t320);
t602 = t755 * t604;
t156 = t1096 * t600 + t1208 * t320 + t602 * t1219;
t157 = t1097 * t600 + t1207 * t320 + t602 * t1220;
t1048 = qJD(3) * t445;
t981 = -t440 * t775 / 0.2e1 + t445 * t770 - t360 + t824 * t1049 + t826 * t1048;
t280 = -t1004 * t981 + t1255 + (-t1004 * t832 - t696) * qJD(2);
t208 = t1203 * t280 + t320 * t653;
t279 = -t1005 * t981 - t1256 + (-t1005 * t832 + t695) * qJD(2);
t125 = t208 * t671 + t279 * t738 + t280 * t762 + t289 * t539 + t319 * t652 + t320 * t650 + (-t1157 * t280 + t289 * t613 + t320 * t550) * pkin(3);
t132 = t320 * t651 + t1199 * t280 + (-t1157 * t279 + t1235 * t289 + t208 * t676 + t319 * t550) * pkin(3);
t556 = t604 * t637;
t558 = t606 * t637;
t474 = -(-t1096 * t556 - t1097 * t558 + t1171 * t320 + t1207 * t280 + t125 * t722 + t132 * t721) * t501 + t157 * t483 - (-t1096 * t558 + t1097 * t556 + t1170 * t320 + t1208 * t280 + t125 * t721 + t132 * t723) * t495 + t1236 * t156;
t28 = t156 * t470 + t157 * t471 + t474;
t30 = t474 + (t156 * t522 + t157 * t521) * t1240;
t1216 = t28 - t30;
t433 = qJD(2) + qJD(3);
t482 = t585 * t483 - t489 * t580 + t433;
t378 = qJD(1) * t404 * t433 - t980 * qJDD(1);
t383 = t433 * t980;
t379 = qJD(1) * t383 + qJDD(1) * t404;
t77 = -t378 * t584 + t379 * t585 + t400 * t494 + t401 * t493;
t1238 = qJD(4) * t482 + t77;
t357 = (t372 * t443 * t911 + t371 * t899) * t451;
t462 = t357 ^ 2;
t352 = 0.1e1 / t462;
t1080 = t352 * t358;
t1227 = -0.2e1 * t767;
t1031 = 0.2e1 * qJD(1);
t626 = t1111 * t634;
t752 = -t755 / 0.2e1;
t726 = t1111 * t752;
t709 = t450 * t726;
t735 = t437 * t742;
t130 = t176 * t735 + t177 * t709 + t273 * t626 - t437 * t630;
t743 = t437 * t752;
t736 = t450 * t743;
t131 = t176 * t709 + t177 * t736 + t272 * t626 + t437 * t629;
t1127 = pkin(4) * t313;
t1180 = t314 * t1070 - t1127;
t186 = pkin(4) * t1204 + t1180 * t294;
t678 = t314 * t679;
t763 = t1140 * t1227;
t187 = -pkin(4) * t682 + t293 * t1127 + t235 * t678 + t294 * t763;
t739 = t450 * t750;
t708 = t1111 * t739;
t702 = t294 * t708;
t727 = t437 * t739;
t711 = t294 * t727;
t138 = t186 * t735 + t187 * t709 + t272 * t711 - t273 * t702;
t139 = t186 * t709 + t187 * t736 - t272 * t702 - t273 * t711;
t225 = (t272 * t437 * t751 + t273 * t726) * t450;
t226 = (t272 * t726 + t273 * t743) * t450;
t1017 = t325 * t1082;
t1089 = t325 * t347;
t251 = -t298 * t1017 + t297 * t1089 + qJD(2);
t243 = t1023 * t251 + t355 * t1110;
t244 = t356 * t1110 + t251 * t1128;
t253 = -t306 * t1017 + t305 * t1089 + 0.1e1;
t245 = t355 * pkin(1) + t1023 * t253;
t246 = pkin(1) * t356 + t253 * t1128;
t1113 = t1265 * t225 + t1266 * t226 + t130 * t245 + t131 * t246 - t138 * t243 - t139 * t244;
t1112 = t1265 * t226 - t1266 * t225 - t130 * t246 + t131 * t245 + t138 * t244 - t139 * t243;
t431 = t446 * pkin(1);
t1215 = -pkin(13) - t431;
t1051 = qJD(2) * t440;
t1026 = pkin(1) * t1051;
t1025 = t445 * t1110;
t407 = pkin(4) * t433 - t1025;
t106 = -t1026 * t136 + t137 * t407;
t426 = -pkin(1) * t445 + pkin(4);
t1129 = pkin(1) * t440;
t490 = t493 * t1129;
t579 = pkin(1) * t584;
t567 = qJD(3) * t579;
t570 = t585 * t1129;
t81 = qJD(3) * t570 + t494 * t426 + t445 * t567 + t490;
t1099 = t81 - t106;
t1007 = pkin(1) * t585;
t523 = t494 * t1129;
t1098 = t1007 * t1048 - t1026 * t137 - t136 * t407 - t426 * t493 - t440 * t567 + t523;
t568 = qJD(2) * t579;
t564 = t445 * t568;
t121 = qJD(2) * t570 - t1026 * t156 + t157 * t407 + t564;
t492 = t494 * pkin(4);
t1214 = t121 - t492;
t565 = t440 * t568;
t991 = qJD(2) * t1007;
t979 = t445 * t991;
t1213 = t493 * pkin(4) + t1026 * t157 + t156 * t407 - t565 + t979;
t1211 = -t1157 * t536 + t670 * t553;
t1210 = t536 * t1227 + 0.4e1 * t670 * t669;
t1206 = t1275 * t450;
t1202 = t160 * t713 + t161 * t733;
t1195 = t1258 * t448;
t1194 = t1258 * t443;
t1188 = (t1224 * t160 + t1232 * t161) * t1123 * t1141;
t375 = -t401 * t433 + t379;
t535 = -t1174 * t440 + t1175 * t445;
t1172 = -t1157 * t535 - t1273 * t767 - t669 * t553;
t1164 = (pkin(3) * t1172 + 0.4e1 * t668 * t1139 + t533 * t1228 - t536 * t738) * t754 / 0.2e1 + t509 * t1246 + t1257 * t641;
t1173 = (t1211 * pkin(3) + t1210 * t1139 + t1273 * t761 + t535 * t738) * t745 + t510 * t1246 + t1257 * t642;
t432 = qJDD(2) + qJDD(3);
t468 = (t1096 * t1173 - t1097 * t1164) * t495 - t432 - (-t1164 * t1096 - t1173 * t1097) * t501 + (-0.2e1 * t483 - t471) * t494 + (t502 * t1248 * t493 + t470) * t493;
t1091 = t270 * t271;
t133 = -0.2e1 * t1091 * t176 + 0.2e1 * t1092 * t177;
t1179 = t133 * t732 + t1261;
t1169 = t133 * t712 + t1254;
t1062 = t306 - t356;
t1063 = t305 + t355;
t287 = t1062 * t441 + t1063 * t446;
t351 = 0.1e1 / t357;
t1146 = 0.2e1 * t357;
t1133 = -t1217 * pkin(9) - t1098;
t1126 = pkin(4) * t401;
t1122 = g(1) * t1252;
t1121 = g(1) * t447;
t1120 = g(2) * t447;
t1119 = g(3) * t446;
t389 = t394 * pkin(4);
t391 = t397 * pkin(4);
t402 = t404 * pkin(4);
t439 = sin(qJ(4));
t444 = cos(qJ(4));
t56 = t196 * t439 - t444 * t482;
t58 = t444 * t196 + t439 * t482;
t1117 = t58 * t56;
t1116 = -t1216 * pkin(9) + t1213;
t741 = t294 * t750;
t170 = (t186 * t751 + t272 * t741) * t450;
t171 = (t187 * t751 + t273 * t741) * t450;
t719 = t160 * t733;
t1016 = t326 * t1082;
t997 = t298 * t1016;
t998 = t261 * t1016;
t1115 = t306 * t998 + t1179 * t171 + t1169 * t170 - t187 * t719 - t265 * t997 - t1188 * t294 - t1202 * t186 + (-t1091 * t186 + t1092 * t187) * t1241 + t1278;
t213 = pkin(4) * t1205 + t1180 * t320;
t740 = t320 * t750;
t204 = (t213 * t751 + t272 * t740) * t450;
t214 = -pkin(4) * t680 + t319 * t1127 + t289 * t678 + t320 * t763;
t205 = (t214 * t751 + t273 * t740) * t450;
t1114 = t1179 * t205 + t1169 * t204 - t214 * t719 - t1188 * t320 - t1202 * t213 + (-t1091 * t213 + t1092 * t214) * t1241;
t1046 = qJD(4) * t439;
t14 = t1046 * t196 - t1238 * t444 + t439 * t468;
t1109 = t14 * t439;
t1108 = t14 * t444;
t1045 = qJD(4) * t444;
t15 = t1045 * t196 + t1238 * t439 + t444 * t468;
t1107 = t15 * t439;
t1106 = t15 * t444;
t78 = -t378 * t585 - t379 * t584 - t400 * t493 + t401 * t494;
t76 = -qJDD(4) + t78;
t1105 = t439 * t76;
t1050 = qJD(2) * t441;
t382 = -t1049 * t441 - t1050 * t440 + t433 * t1072;
t79 = t382 * t584 + t383 * t585 + t404 * t494 + t493 * t980;
t1104 = t439 * t79;
t94 = -t156 * t495 - t157 * t501 + 0.1e1;
t1103 = t439 * t94;
t1102 = t444 * t76;
t1101 = t444 * t79;
t1100 = t444 * t94;
t1095 = pkin(1) * qJDD(2);
t200 = t585 * t407 + t565;
t59 = pkin(11) * t482 + t200;
t1094 = qJD(4) * t59;
t201 = -t407 * t584 + t440 * t991;
t60 = -pkin(9) * t482 - t201;
t1093 = qJD(4) * t60;
t354 = t358 ^ 2;
t330 = t352 * t354 + 0.1e1;
t329 = 0.1e1 / t330 ^ 2;
t1084 = t329 * t351;
t353 = t351 * t352;
t1079 = t353 * t354;
t1078 = t400 * t401;
t1073 = t442 * t446;
t880 = t451 * t900;
t300 = t337 * t880 + t338 * t878 + t371 * t893 - t372 * t891;
t1018 = t300 * t1084;
t262 = -0.2e1 * t1079 * t299 + 0.2e1 * t1080 * t300;
t341 = (t973 - (pkin(5) * t1230 + t1009 - t386) * t954) * pkin(1);
t343 = t399 * t1009 + (pkin(5) * t1037 - t1183 * t386 + t1076) * pkin(1);
t990 = t954 * t451 * t1034;
t977 = t448 * t990;
t978 = t443 * t990;
t307 = t341 * t880 + t343 * t878 + t371 * t978 - t372 * t977;
t308 = t341 * t878 + t343 * t879 - t371 * t977 - t372 * t978;
t266 = -0.2e1 * t1079 * t308 + 0.2e1 * t1080 * t307;
t1068 = -t262 * t307 * t1084 + t266 * t1018 + (t262 * t308 - t266 * t299) * t329 * t1080;
t1060 = t402 + t431;
t1028 = pkin(1) * t1074;
t1029 = pkin(1) * t1075;
t1059 = g(1) * t1028 + g(2) * t1029;
t1058 = pkin(1) * t1071 + t447 * pkin(13);
t434 = t441 ^ 2;
t435 = t446 ^ 2;
t1057 = t434 - t435;
t1054 = pkin(7) * qJDD(1);
t1053 = qJD(1) * t299;
t195 = -qJD(4) + t1251;
t1047 = qJD(4) * t195;
t1044 = qJDD(1) * pkin(13);
t1041 = qJD(1) * qJD(2);
t1040 = qJDD(1) * t358;
t1039 = qJDD(2) * t445;
t1038 = t446 * qJDD(1);
t1027 = t300 * t1031;
t429 = pkin(1) * t1050;
t388 = -pkin(13) - t1060;
t1022 = qJD(3) * t1110;
t1019 = t299 * t1080;
t449 = qJD(1) ^ 2;
t1015 = t441 * t449 * t446;
t1013 = -t396 * pkin(4) + t1058;
t1006 = t441 * t1041;
t381 = -pkin(4) * t383 + t429;
t428 = pkin(1) * t1052;
t385 = t428 - t1126;
t1003 = t1062 * t446;
t1000 = -0.2e1 * pkin(13) * t1041;
t961 = -t261 * t1021 + (t1167 * t436 + t1168 * t438) * t1089 + qJDD(2) - (-t1167 * t438 + t1168 * t436) * t1017;
t164 = (t998 + (t1090 * t349 - t1279) * t1231) * t298 + t961;
t999 = qJDD(2) * t253 + t164;
t995 = t440 * t1007;
t994 = t446 * t1006;
t993 = t389 - t1029;
t992 = t391 - t1028;
t989 = -g(1) * t1067 + g(2) * t1253;
t409 = g(2) * t442 + t1121;
t988 = g(1) * t442 - t1120;
t987 = t1215 * t442;
t408 = t1215 * qJD(1);
t384 = -pkin(4) * t400 + t408;
t151 = -pkin(9) * t1251 - pkin(11) * t196 + t384;
t45 = t151 * t444 - t439 * t59;
t46 = t151 * t439 + t444 * t59;
t985 = t439 * t46 + t444 * t45;
t984 = -t439 * t45 + t444 * t46;
t983 = -t439 * t58 - t444 * t56;
t982 = t439 * t56 - t444 * t58;
t324 = t355 * t446 - t356 * t441;
t323 = t355 * t441 + t356 * t446;
t974 = -t1052 * t408 - t1119;
t972 = t395 * pkin(4) + t987;
t398 = pkin(1) * t1006 + qJDD(1) * t1215;
t101 = -t136 * t980 + t404 * t137 + t1250;
t95 = -t136 * t395 + t137 * t394 + t1067;
t97 = -t136 * t396 + t137 * t397 + t1253;
t971 = -g(1) * t97 - g(2) * t95 - g(3) * t101;
t102 = t404 * t136 + t137 * t980 - t198;
t96 = t394 * t136 + t395 * t137 + t1252;
t98 = t397 * t136 + t396 * t137 - t193;
t970 = g(1) * t98 + g(2) * t96 + g(3) * t102;
t65 = -t136 * t495 - t137 * t501 + 0.1e1;
t99 = -t136 * t401 + t137 * t400 + t1251;
t7 = -t444 * t13 + t439 * t99;
t967 = t1046 * t65 - t11 * t444 - t7;
t8 = t13 * t439 + t444 * t99;
t966 = t1045 * t65 + t11 * t439 - t8;
t113 = -t156 * t395 + t157 * t394 + t1067;
t115 = -t156 * t396 + t157 * t397 + t1253;
t119 = -t156 * t980 + t404 * t157 + t1250;
t965 = -g(1) * t115 - g(2) * t113 - g(3) * t119;
t114 = t394 * t156 + t395 * t157 + t1252;
t116 = t397 * t156 + t396 * t157 - t193;
t120 = t404 * t156 + t157 * t980 - t198;
t964 = g(1) * t116 + g(2) * t114 + g(3) * t120;
t117 = -t156 * t401 + t157 * t400 + t1251;
t24 = t117 * t439 - t444 * t30;
t963 = t1046 * t94 - t28 * t444 - t24;
t25 = t117 * t444 + t30 * t439;
t962 = t1045 * t94 + t28 * t439 - t25;
t960 = pkin(7) * t449 - t409;
t959 = pkin(13) * t449 + t409;
t957 = -t988 + 0.2e1 * t1054;
t956 = t988 + 0.2e1 * t1044;
t5 = t11 * pkin(11) + t81;
t569 = t440 * t579;
t202 = t585 * t426 + t569;
t63 = t65 * pkin(11) + t202;
t952 = t65 * t1093 + t195 * t5 + t63 * t76;
t21 = t28 * pkin(11) + t492;
t578 = t585 * pkin(4);
t87 = t94 * pkin(11) + t578;
t951 = t94 * t1093 + t195 * t21 + t76 * t87;
t417 = t440 * t1022;
t393 = -pkin(1) * t1039 + pkin(4) * t432 + t417;
t69 = qJD(2) * t490 + qJD(3) * t564 + qJDD(2) * t569 + t585 * t393 + t494 * t407;
t16 = -pkin(11) * t468 + t69;
t950 = -g(2) * t1252 + g(3) * t198 - qJD(4) * t151 - t16;
t288 = -t1063 * t441 + t1003;
t152 = -pkin(9) * t1250 - pkin(11) * t198 + t388;
t70 = qJD(2) * t523 + qJD(3) * t979 + qJDD(2) * t995 - t393 * t584 - t407 * t493;
t17 = pkin(9) * t468 - t70;
t948 = t1047 * t152 + t17 * t198 + t60 * t79;
t376 = -pkin(4) * t379 + t398;
t937 = -g(1) * t987 - g(2) * t1058;
t930 = -g(1) * t397 - g(2) * t394 - g(3) * t404 + t401 * t408 + t417;
t80 = t382 * t585 - t383 * t584 - t404 * t493 + t494 * t980;
t41 = -pkin(9) * t80 - pkin(11) * t79 + t381;
t925 = t198 * t1093 - t152 * t76 - t195 * t41 - t1122;
t921 = -g(1) * t396 - g(2) * t395 - g(3) * t980 + t445 * t1022 + t440 * t1095 - t400 * t408;
t40 = -pkin(9) * t78 - pkin(11) * t77 + t376;
t3 = qJD(4) * t45 + t444 * t16 + t439 * t40;
t39 = t444 * t40;
t4 = -qJD(4) * t46 - t439 * t16 + t39;
t914 = -qJD(4) * t985 + t3 * t444 - t4 * t439;
t913 = qJD(4) * t983 - t1107 - t1108;
t278 = -qJD(2) * t323 - t297 * t441 + t298 * t446;
t277 = qJD(2) * t324 + t297 * t446 + t298 * t441;
t877 = -0.2e1 * t891;
t874 = t1047 * t63 - t11 * t60 - t17 * t65 + t971;
t870 = t1047 * t87 - t17 * t94 - t28 * t60 + t965;
t734 = 0.2e1 * t229 * t746;
t714 = t273 * t733;
t710 = t320 * t727;
t701 = t320 * t708;
t633 = -0.2e1 * t634;
t577 = t584 * pkin(4);
t203 = -t426 * t584 + t995;
t425 = t447 * t439;
t380 = -t400 ^ 2 + t401 ^ 2;
t377 = t1215 * t398 + t408 * t429 + t937;
t374 = -t400 * t433 + t378;
t345 = t355 * t1075;
t328 = 0.1e1 / t330;
t322 = t324 * qJD(1);
t321 = t323 * qJD(1);
t318 = t323 * t447;
t317 = t324 * t447;
t316 = -t1073 * t356 - t345;
t315 = t1073 * t355 - t1075 * t356;
t312 = pkin(1) * t1165 - t862 * t1130 + 0.4e1 * t1138 * t1186 + t857 * t1230;
t311 = t1192 * pkin(1) + t861 * t1130 + t1191 * t1138 - t1272 * t399;
t296 = (-t1111 * t324 - t323 * t437) * pkin(3) + t1215;
t295 = t408 + (-t1111 * t322 - t321 * t437) * pkin(3);
t286 = t287 * qJD(1);
t285 = t288 * qJD(1);
t284 = t287 * t447;
t283 = t288 * t447;
t282 = t287 * t442;
t281 = -t345 + (-t305 * t441 + t1003) * t442;
t260 = qJD(1) * t277 + qJDD(1) * t323;
t259 = qJD(1) * t278 + qJDD(1) * t324;
t254 = (-t1080 * t308 + t307 * t351) * t328;
t252 = (t300 * t351 - t1019) * t328;
t236 = t428 + (-t1111 * t285 - t286 * t437) * pkin(3);
t233 = t429 + (-t1111 * t278 - t277 * t437) * pkin(3);
t227 = (-t1111 * t259 - t260 * t437) * pkin(3) + t398;
t189 = t193 * t444 + t439 * t442;
t188 = -t193 * t439 + t442 * t444;
t185 = -t225 * t323 + t226 * t324;
t184 = t225 * t324 + t226 * t323;
t183 = -t225 * t321 + t226 * t322;
t182 = t225 * t322 + t226 * t321;
t169 = -t225 * t246 + t226 * t245;
t168 = t225 * t245 + t226 * t246;
t167 = -t225 * t244 + t226 * t243;
t166 = t225 * t243 + t226 * t244;
t165 = (t329 * t1019 - t1018) * t262 + ((-t1194 * t371 + t1195 * t372 + t311 * t878 + t312 * t880 + 0.2e1 * t337 * t893 + t338 * t877) * t351 - (t1194 * t372 + t1195 * t371 + t311 * t879 + t312 * t878 + t337 * t877 - 0.2e1 * t338 * t893) * t1080 + (0.2e1 * t353 * t1267 - 0.2e1 * t300 * t352) * t299) * t328;
t163 = t164 * t1023 + (qJD(2) * t298 + qJDD(2) * t355) * pkin(1);
t162 = t164 * t1128 + (qJD(2) * t297 + qJDD(2) * t356) * pkin(1);
t159 = t213 * t709 + t214 * t736 - t272 * t701 - t273 * t710;
t158 = t213 * t735 + t214 * t709 + t272 * t710 - t273 * t701;
t134 = 0.2e1 * (-t204 * t744 + t205 * t753) * t1123;
t127 = -t158 * t321 + t159 * t322;
t126 = t158 * t322 + t159 * t321;
t124 = -t158 * t244 + t159 * t243;
t123 = t158 * t243 + t159 * t244;
t118 = t156 * t400 + t157 * t401 - t196;
t112 = t170 * t714 + t171 * t734 + t253;
t111 = t160 * t714 + t161 * t734 + t251;
t100 = t136 * t400 + t137 * t401 - t196;
t91 = -t138 * t321 + t139 * t322 - t225 * t286 + t226 * t285;
t90 = t138 * t322 + t139 * t321 + t225 * t285 + t226 * t286;
t86 = -t94 * pkin(9) + t577;
t73 = -t130 * t323 + t131 * t324 - t225 * t277 + t226 * t278;
t72 = t130 * t324 + t131 * t323 + t225 * t278 + t226 * t277;
t68 = -t130 * t321 + t131 * t322 - t225 * t260 + t226 * t259;
t67 = t130 * t322 + t131 * t321 + t225 * t259 + t226 * t260;
t66 = -pkin(9) * t118 - pkin(11) * t117 - t1126;
t64 = -t65 * pkin(9) - t203;
t51 = -t130 * t244 + t131 * t243 - t162 * t225 + t163 * t226;
t50 = t130 * t243 + t131 * t244 + t162 * t226 + t163 * t225;
t44 = -pkin(9) * t100 - pkin(11) * t99 + t385;
t33 = t261 * t997 + ((t1211 * pkin(4) + t535 * t1127 + t1210 * t1140 - t1273 * t314) * t742 + t177 * t633 + t1206 * t273) * t734 + (t1206 * t272 + t176 * t633 + (0.4e1 * pkin(3) * t663 + t1172 * pkin(4) - t313 * t534 + t314 * t532) * t742) * t714 + t961 + t1261 * t161 + (t717 + t704) * t133 + t1254 * t160 + (-0.2e1 * t325 * t1279 + t356 * t1281) * t298;
t26 = t30 * pkin(11) + t121;
t19 = t26 * t444 + t439 * t66;
t18 = -t26 * t439 + t444 * t66;
t9 = pkin(11) * t13 + t106;
t2 = t439 * t44 + t444 * t9;
t1 = -t439 * t9 + t44 * t444;
t6 = [0, 0, 0, 0, 0, qJDD(1), t988, t409, 0, 0, qJDD(1) * t434 + 0.2e1 * t994, -qJD(2) * t1031 * t1057 + 0.2e1 * t1038 * t441, qJDD(2) * t441 + t1145 * t446, qJDD(1) * t435 - 0.2e1 * t994, qJDD(2) * t446 - t1145 * t441, 0, t1000 * t441 + t446 * t956, t1000 * t446 - t441 * t956, -t409, (t988 + t1044) * pkin(13), -t378 * t980 + t382 * t401, t378 * t404 - t379 * t980 - t382 * t400 - t383 * t401, -t382 * t433 - t432 * t980, t379 * t404 + t383 * t400, t383 * t433 + t404 * t432, 0, -g(1) * t395 + g(2) * t396 - t1215 * t379 - t383 * t408 - t398 * t404 - t400 * t429, g(1) * t394 - g(2) * t397 + t1215 * t378 - t382 * t408 - t398 * t980 - t401 * t429, ((-t404 * t440 - t445 * t980) * qJDD(2) + (-t382 * t445 - t383 * t440 + (-t404 * t445 + t440 * t980) * qJD(3)) * qJD(2)) * pkin(1) - t409, t377, t196 * t79 + t198 * t77, t1250 * t77 + t1251 * t79 + t196 * t80 + t198 * t78, -t198 * t468 + t482 * t79, t1250 * t78 + t1251 * t80, -t1250 * t468 + t482 * t80, 0, -g(2) * t193 - t1250 * t376 - t1251 * t381 - t384 * t80 - t388 * t78 - t1122, t196 * t381 + t198 * t376 + t384 * t79 + t388 * t77 - t989, t1250 * t69 - t198 * t70 + t200 * t80 - t201 * t79 - t409, -g(1) * t972 - g(2) * t1013 + t376 * t388 + t384 * t381, t58 * t1101 + (-t1046 * t58 - t1108) * t198, t983 * t79 + (qJD(4) * t982 - t1106 + t1109) * t198, -t198 * t1102 + t14 * t1250 - t58 * t80 + (t1046 * t198 - t1101) * t195, t56 * t1104 + (t1045 * t56 + t1107) * t198, t198 * t1105 + t15 * t1250 + t56 * t80 + (t1045 * t198 + t1104) * t195, t1250 * t76 + t195 * t80, -g(1) * t425 - g(2) * t189 - t1250 * t4 + t439 * t948 + t444 * t925 - t45 * t80, -g(2) * t188 + t3 * t1250 + t46 * t80 + (t948 - t1121) * t444 - t925 * t439, (t14 * t152 - t198 * t4 - t41 * t58 - t45 * t79 + (-t152 * t56 - t198 * t46) * qJD(4)) * t444 + (-t15 * t152 - t198 * t3 - t41 * t56 - t46 * t79 + (t152 * t58 + t198 * t45) * qJD(4)) * t439 + t989, -g(2) * (pkin(9) * t193 - pkin(11) * t1253 + t1013) - g(1) * (pkin(9) * t1252 + pkin(11) * t1067 + t972) + t985 * t41 + (qJD(4) * t984 + t3 * t439 + t4 * t444) * t152, qJDD(1) * t354 + t1027 * t358, t1040 * t1146 + (t300 * t357 + t1267) * t1031, t165 * t358 + t252 * t300, qJDD(1) * t462 + t1053 * t1146, t165 * t357 + t252 * t299, 0, -0.2e1 * pkin(7) * t1053 - t357 * t957, pkin(7) * t1027 + t358 * t957, -t409, (-t988 + t1054) * pkin(7), t260 * t323 + t277 * t321, t259 * t323 + t260 * t324 + t277 * t322 + t278 * t321, t164 * t323 + t251 * t277, t259 * t324 + t278 * t322, t164 * t324 + t251 * t278, 0, g(1) * t315 - g(2) * t317 - t1215 * t259 - t278 * t408 - t322 * t429 - t324 * t398, g(1) * t316 + g(2) * t318 + t1215 * t260 + t277 * t408 + t321 * t429 + t323 * t398, ((-t323 * t355 + t324 * t356) * qJDD(2) + (-t277 * t355 + t278 * t356 + t297 * t324 - t298 * t323) * qJD(2)) * pkin(1) - t409, t377, t182 * t72 + t184 * t67, t182 * t73 + t183 * t72 + t184 * t68 + t185 * t67, t111 * t72 + t184 * t33, t183 * t73 + t185 * t68, t111 * t73 + t185 * t33, 0, -t233 * t183 - t296 * t68 - t227 * t185 - t295 * t73 - g(2) * (-t225 * t318 + t226 * t317) - g(1) * (-t225 * t316 - t226 * t315), t233 * t182 + t296 * t67 + t227 * t184 + t295 * t72 - g(2) * (-t225 * t317 - t226 * t318) - g(1) * (t225 * t315 - t226 * t316), t166 * t73 - t167 * t72 - t184 * t51 + t185 * t50 - t409, t227 * t296 + t295 * t233 + (-g(2) * (t1111 * t317 + t318 * t437) - g(1) * (-t1111 * t315 + t316 * t437)) * pkin(3) + t937; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1015, t1057 * t449, t441 * qJDD(1), t1015, t1038, qJDD(2), t441 * t959 - t1119, g(3) * t441 + t446 * t959, 0, 0, t1078, t380, t374, -t1078, t375, t432, (t400 * t1052 + t433 * t1049 + (-qJDD(2) - t432) * t445) * pkin(1) + t930, (t1048 * t433 + t1052 * t401 + t432 * t440) * pkin(1) + t921, -t400 * t1025 + ((-qJD(3) * t400 + t378) * t445 - t375 * t440) * pkin(1), ((t440 ^ 2 + t445 ^ 2) * t1095 + t974) * pkin(1) + t1059, -t196 * t99, -t100 * t196 - t1251 * t99, t1217 * t196 - t482 * t99 + t65 * t77, -t1251 * t100, -t100 * t482 + t1217 * t1251 + t78 * t65, t1217 * t482 - t468 * t65, t384 * t100 + t1098 * t482 + t1217 * t201 + t1251 * t385 - t203 * t468 + t70 * t65 + t971, -t1099 * t482 - t1217 * t200 - t385 * t196 + t202 * t468 - t384 * t99 - t69 * t65 - t970, -t100 * t200 - t1098 * t196 + t1099 * t1251 + t201 * t99 + t202 * t78 - t203 * t77, -g(1) * t992 - g(2) * t993 - g(3) * t1060 + t1098 * t201 + t1099 * t200 + t69 * t202 + t70 * t203 - t384 * t385, -t1109 * t65 + t58 * t966, -t11 * t982 + t56 * t8 + t58 * t7 + t65 * t913, t100 * t58 - t1105 * t65 - t195 * t966, -t1106 * t65 + t56 * t967, -t100 * t56 - t1102 * t65 + t195 * t967, -t195 * t100, t1 * t195 + t100 * t45 + t1133 * t56 + t15 * t64 + t439 * t952 + t444 * t874 - t60 * t7, -t100 * t46 + t1133 * t58 - t14 * t64 - t195 * t2 - t439 * t874 + t444 * t952 - t60 * t8, t1 * t58 + t2 * t56 + t45 * t8 + t46 * t7 + (t11 * t46 - t15 * t63 + t3 * t65 - t5 * t56 + (-t45 * t65 + t58 * t63) * qJD(4)) * t444 + (-t11 * t45 - t14 * t63 - t4 * t65 + t5 * t58 + (-t46 * t65 + t56 * t63) * qJD(4)) * t439 + t970, t17 * t64 - g(3) * (pkin(9) * t101 - pkin(11) * t102 + t1060) - g(2) * (pkin(9) * t95 - pkin(11) * t96 + t993) - g(1) * (pkin(9) * t97 - pkin(11) * t98 + t992) + t1133 * t60 + (t444 * t5 - t2) * t46 + (-t439 * t5 - t1) * t45 + t914 * t63, -t358 * t449 * t307, (-t307 * t357 - t308 * t358) * t449, t254 * t1040 + (t1068 * t358 - t252 * t307 + t254 * t300) * qJD(1), -t357 * t449 * t308, qJDD(1) * t254 * t357 + (t1068 * t357 - t252 * t308 + t254 * t299) * qJD(1), t1068 * t252 + t165 * t254, -g(3) * t307 + t308 * t960, -g(3) * t308 - t307 * t960, 0, 0, -t321 * t286, -t285 * t321 - t286 * t322, t1069 * t321 - t251 * t286 + t253 * t260, -t322 * t285, t1069 * t322 - t251 * t285 + t253 * t259, t1069 * t251 + t164 * t253, -g(1) * t283 - g(2) * t281 - g(3) * t287 + t285 * t408 + (t322 * t1052 + t251 * t298 + t999 * t355 + (t1069 * t355 - t251 * t306 + t253 * t298) * qJD(2)) * pkin(1), g(1) * t284 + g(2) * t282 - g(3) * t288 - t286 * t408 + (-t321 * t1052 - t251 * t297 - t999 * t356 + (-t1069 * t356 + t251 * t305 - t253 * t297) * qJD(2)) * pkin(1), (t259 * t356 - t260 * t355 + t297 * t322 - t298 * t321 + (-t285 * t356 + t286 * t355 - t305 * t322 + t306 * t321) * qJD(2)) * pkin(1), ((t350 + t460) * t1095 + (0.2e1 * t297 * t356 + 0.2e1 * t298 * t355 + (-t305 * t356 - t306 * t355) * qJD(2)) * t1110 + t974) * pkin(1) + t1059, -t182 * t90, -t182 * t91 - t183 * t90, -t111 * t90 + t1115 * t182 + t112 * t67, -t183 * t91, -t111 * t91 + t1115 * t183 + t112 * t68, t111 * t1115 + t112 * t33, t169 * t33 + t51 * t112 + t236 * t183 + t295 * t91 - g(3) * (t138 * t324 + t139 * t323 + t225 * t288 + t226 * t287) - g(2) * (t138 * t316 + t139 * t315 - t225 * t282 + t226 * t281) - g(1) * (-t138 * t318 + t139 * t317 - t225 * t284 + t226 * t283) + t1115 * t167 + t1112 * t111, -t168 * t33 - t50 * t112 - t236 * t182 - t295 * t90 - g(3) * (-t138 * t323 + t139 * t324 - t225 * t287 + t226 * t288) - g(2) * (-t138 * t315 + t139 * t316 - t225 * t281 - t226 * t282) - g(1) * (-t138 * t317 - t139 * t318 - t225 * t283 - t226 * t284) - t1115 * t166 - t1113 * t111, -t1112 * t182 + t1113 * t183 - t166 * t91 + t167 * t90 + t168 * t68 - t169 * t67, t50 * t168 + t51 * t169 - t295 * t236 - g(3) * (t431 + (t1111 * t287 - t288 * t437) * pkin(3)) - g(2) * (-t1029 + (t1111 * t281 + t282 * t437) * pkin(3)) - g(1) * (-t1028 + (t1111 * t283 + t284 * t437) * pkin(3)) + t1112 * t167 + t1113 * t166; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1078, t380, t374, -t1078, t375, t432, (-t1051 * t433 - t1039) * pkin(1) + t930, -t1025 * t433 + t921, 0, 0, -t196 * t117, -t117 * t1251 - t118 * t196, -t117 * t482 + t1216 * t196 + t94 * t77, -t1251 * t118, -t118 * t482 + t1216 * t1251 + t78 * t94, t1216 * t482 - t468 * t94, -t1126 * t1251 + t384 * t118 - t1213 * t482 + t1216 * t201 + t468 * t577 + t70 * t94 + t965, t1126 * t196 - t384 * t117 + t1214 * t482 - t1216 * t200 + t468 * t578 - t69 * t94 - t964, t201 * t117 - t200 * t118 + t1213 * t196 - t1214 * t1251 + t577 * t77 + t578 * t78, -g(1) * t391 - g(2) * t389 - g(3) * t402 + t1126 * t384 - t1213 * t201 - t1214 * t200 - t577 * t70 + t578 * t69, -t1103 * t14 + t58 * t962, t24 * t58 + t25 * t56 - t28 * t982 + t913 * t94, -t1103 * t76 + t118 * t58 - t195 * t962, -t1100 * t15 + t56 * t963, -t1100 * t76 - t118 * t56 + t195 * t963, -t195 * t118, t1116 * t56 + t118 * t45 + t15 * t86 + t18 * t195 - t24 * t60 + t439 * t951 + t444 * t870, t1116 * t58 - t118 * t46 - t14 * t86 - t19 * t195 - t25 * t60 - t439 * t870 + t444 * t951, t18 * t58 + t19 * t56 + t24 * t46 + t25 * t45 + (-t15 * t87 - t21 * t56 + t28 * t46 + t3 * t94 + (-t45 * t94 + t58 * t87) * qJD(4)) * t444 + (-t14 * t87 + t21 * t58 - t28 * t45 - t4 * t94 + (-t46 * t94 + t56 * t87) * qJD(4)) * t439 + t964, t17 * t86 - t46 * t19 - t45 * t18 - g(3) * (pkin(9) * t119 - pkin(11) * t120 + t402) - g(2) * (pkin(9) * t113 - pkin(11) * t114 + t389) - g(1) * (pkin(9) * t115 - pkin(11) * t116 + t391) + t1116 * t60 + t984 * t21 + t914 * t87, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t182 * t126, -t126 * t183 - t127 * t182, -t111 * t126 + t1114 * t182 + t134 * t67, -t183 * t127, -t111 * t127 + t1114 * t183 + t134 * t68, t111 * t1114 + t134 * t33, t51 * t134 + t295 * t127 - t124 * t111 - g(3) * (t158 * t324 + t159 * t323) - g(2) * (t158 * t316 + t159 * t315) - g(1) * (-t158 * t318 + t159 * t317) + t1114 * t167, -t50 * t134 + t123 * t111 - t295 * t126 - g(3) * (-t158 * t323 + t159 * t324) - g(2) * (-t158 * t315 + t159 * t316) - g(1) * (-t158 * t317 - t159 * t318) - t1114 * t166, -t123 * t183 + t124 * t182 + t126 * t167 - t127 * t166, -t123 * t166 - t124 * t167; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1117, -t56 ^ 2 + t58 ^ 2, -t195 * t56 - t14, -t1117, -t195 * t58 - t15, -t76, -g(1) * t188 - t46 * t195 - t60 * t58 + t39 + (-t1094 + t1120) * t444 + t950 * t439, g(1) * t189 - g(2) * t425 - t45 * t195 + t60 * t56 + (-t40 + t1094) * t439 + t950 * t444, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
tau_reg = t6;
