% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% palh3m1OL
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [10x1]
%   Generalized joint coordinates (joint angles)
% qJD [10x1]
%   Generalized joint velocities
% qJDD [10x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [16x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[AB,BC,BE,BG,DC,DT2,EP,GH,GP,HW,OT1,T1A,T1T2,phi410,phi78,phi79]';
% 
% Output:
% tau_reg [10x(10*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2020-04-20 17:16
% Revision: bf71b3c88fbe513355f3920541c47e1db11bd916 (2020-04-17)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = palh3m1OL_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(10,1),zeros(10,1),zeros(10,1),zeros(3,1),zeros(16,1)}
assert(isreal(qJ) && all(size(qJ) == [10 1]), ...
  'palh3m1OL_invdynJ_fixb_reg2_slag_vp: qJ has to be [10x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [10 1]), ...
  'palh3m1OL_invdynJ_fixb_reg2_slag_vp: qJD has to be [10x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [10 1]), ...
  'palh3m1OL_invdynJ_fixb_reg2_slag_vp: qJDD has to be [10x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'palh3m1OL_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [16 1]), ...
  'palh3m1OL_invdynJ_fixb_reg2_slag_vp: pkin has to be [16x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2020-04-20 17:12:43
% EndTime: 2020-04-20 17:14:06
% DurationCPUTime: 12.86s
% Computational Cost: add. (9265->652), mult. (21815->894), div. (0->0), fcn. (17971->28), ass. (0->334)
t277 = cos(qJ(5));
t393 = qJD(5) * t277;
t272 = sin(qJ(3));
t278 = cos(qJ(3));
t279 = cos(qJ(2));
t399 = qJD(1) * t279;
t273 = sin(qJ(2));
t400 = qJD(1) * t273;
t163 = t272 * t400 - t278 * t399;
t174 = t272 * t279 + t273 * t278;
t165 = t174 * qJD(1);
t271 = sin(qJ(4));
t456 = cos(qJ(4));
t105 = t456 * t163 + t165 * t271;
t471 = t105 * t277;
t475 = t393 - t471;
t260 = qJD(2) + qJD(3);
t436 = pkin(1) * qJD(2);
t379 = t278 * t436;
t179 = pkin(4) * t260 - t379;
t353 = t456 * t436;
t335 = t272 * t353;
t133 = -t271 * t179 + t335;
t363 = qJD(4) + t260;
t130 = t363 * pkin(10) - t133;
t270 = sin(qJ(5));
t443 = t279 * pkin(1);
t237 = pkin(12) + t443;
t194 = t237 * qJD(1);
t131 = -t163 * pkin(4) - t194;
t320 = -t271 * t163 + t456 * t165;
t45 = -pkin(8) * t105 + pkin(10) * t320 + t131;
t36 = -t130 * t270 + t277 * t45;
t467 = qJD(5) - t105;
t474 = t467 * t36;
t37 = t130 * t277 + t270 * t45;
t473 = t467 * t37;
t368 = qJD(4) * t456;
t396 = qJD(4) * t271;
t328 = t272 * t273 - t278 * t279;
t314 = t328 * qJD(3);
t289 = qJD(2) * t328 + t314;
t85 = qJD(1) * t289 - qJDD(1) * t174;
t290 = t260 * t174;
t86 = qJD(1) * t290 + qJDD(1) * t328;
t316 = t163 * t368 + t165 * t396 + t271 * t86 + t456 * t85;
t336 = t277 * t363;
t258 = qJDD(2) + qJDD(3);
t354 = qJDD(4) + t258;
t394 = qJD(5) * t270;
t19 = -qJD(5) * t336 - t270 * t354 - t277 * t316 - t320 * t394;
t16 = t19 * t270;
t89 = t270 * t363 - t277 * t320;
t9 = t475 * t89 - t16;
t364 = t271 * t85 - t456 * t86;
t33 = -qJD(4) * t320 + t364;
t31 = qJDD(5) + t33;
t28 = t31 * t270;
t7 = t320 * t89 + t475 * t467 + t28;
t266 = qJ(2) + qJ(3);
t256 = qJ(4) + t266;
t240 = cos(t256);
t226 = g(3) * t240;
t377 = qJD(3) * t436;
t229 = t272 * t377;
t386 = qJDD(2) * t278;
t142 = -pkin(1) * t386 + pkin(4) * t258 + t229;
t428 = pkin(1) * qJDD(2);
t468 = -t272 * t428 - t278 * t377;
t306 = -qJD(4) * t335 - t456 * t142 + t179 * t396 + t468 * t271;
t57 = -t354 * pkin(8) + t306;
t472 = -t57 + t226;
t426 = t467 * t320;
t407 = t271 * t272;
t381 = pkin(1) * t407;
t211 = qJD(2) * t381;
t132 = t456 * t179 + t211;
t129 = -t363 * pkin(8) - t132;
t421 = t105 * t129;
t470 = t105 * t320;
t275 = cos(qJ(7));
t369 = t275 * t399;
t268 = sin(qJ(7));
t370 = t268 * t400;
t161 = -t369 + t370;
t173 = t268 * t279 + t273 * t275;
t164 = t173 * qJD(1);
t267 = sin(pkin(15));
t437 = cos(pkin(15));
t454 = sin(qJ(8));
t455 = cos(qJ(8));
t171 = t267 * t454 + t437 * t455;
t300 = -t267 * t455 + t437 * t454;
t329 = -t161 * t300 + t164 * t171;
t330 = t161 * t171 + t164 * t300;
t469 = t330 * t329;
t274 = sin(qJ(1));
t280 = cos(qJ(1));
t197 = g(1) * t280 + g(2) * t274;
t27 = -t105 ^ 2 + t320 ^ 2;
t29 = t31 * t277;
t87 = -t270 * t320 - t336;
t466 = -t320 * t87 + t29;
t239 = sin(t256);
t408 = t270 * t280;
t409 = t270 * t274;
t297 = -t320 * t37 + t129 * t393 - t472 * t270 + (g(1) * t408 + g(2) * t409) * t239;
t346 = t129 * t394 + t277 * t226 + t320 * t36;
t225 = g(3) * t239;
t412 = t240 * t280;
t413 = t240 * t274;
t373 = g(1) * t412 + g(2) * t413 + t225;
t334 = t278 * t353;
t371 = t456 * t272;
t355 = pkin(1) * t371;
t63 = -qJD(3) * t334 + qJD(4) * t211 - qJDD(2) * t355 + t271 * t142 + t179 * t368;
t295 = -t131 * t105 - t373 - t63;
t23 = -t363 * t105 + t316;
t337 = t270 * t89 + t277 * t87;
t462 = -t277 * t19 - t89 * t394;
t427 = qJD(5) * t89;
t20 = t270 * t316 - t277 * t354 + t427;
t464 = t20 * t270 + t87 * t393;
t1 = t337 * t105 + t462 - t464;
t323 = t197 * t239;
t286 = t131 * t320 + t226 - t306 - t323;
t24 = -t260 * t320 - t364;
t53 = -pkin(8) * t320 - pkin(10) * t105;
t61 = -t165 * t260 + t86;
t460 = -g(1) * t274 + g(2) * t280;
t461 = t460 * t239;
t252 = sin(t266);
t254 = cos(t266);
t299 = g(3) * t254 - t197 * t252;
t338 = -t270 * t36 + t277 * t37;
t459 = t272 ^ 2 + t278 ^ 2;
t259 = qJD(2) + qJD(7);
t159 = t171 * qJD(8);
t160 = t300 * qJD(8);
t411 = t268 * t273;
t341 = t259 * t411;
t389 = qJD(1) * qJD(2);
t367 = t279 * t389;
t382 = t279 * qJDD(1);
t384 = t273 * qJDD(1);
t351 = -qJD(7) * t369 - t268 * t382 + (-t367 - t384) * t275;
t83 = qJD(1) * t341 + t351;
t128 = t259 * t173;
t340 = t268 * t384 - t275 * t382;
t84 = qJD(1) * t128 + t340;
t21 = t159 * t161 + t160 * t164 + t171 * t83 + t300 * t84;
t250 = qJD(8) + t259;
t11 = -t250 * t330 + t21;
t22 = t159 * t164 - t160 * t161 + t171 * t84 - t300 * t83;
t12 = -t250 * t329 + t22;
t265 = qJ(2) + qJ(7);
t255 = pkin(15) - t265;
t241 = -qJ(8) + t255;
t227 = sin(t241);
t228 = cos(t241);
t246 = t275 * t428;
t257 = qJDD(2) + qJDD(7);
t378 = t437 * pkin(3);
t380 = t268 * t436;
t137 = -qJD(7) * t380 + t257 * t378 + t246;
t387 = qJDD(2) * t268;
t392 = qJD(7) * t275;
t451 = pkin(3) * t267;
t138 = t257 * t451 + (qJD(2) * t392 + t387) * pkin(1);
t167 = t259 * t451 + t380;
t168 = t259 * t378 + t275 * t436;
t38 = -t137 * t300 - t138 * t171 - t159 * t168 + t160 * t167;
t90 = -t194 + (t437 * t161 - t164 * t267) * pkin(3);
t285 = g(3) * t227 - t197 * t228 - t330 * t90 - t38;
t39 = -t171 * t137 + t138 * t300 + t159 * t167 + t160 * t168;
t298 = g(3) * t228 + t197 * t227 + t329 * t90 + t39;
t14 = t329 ^ 2 - t330 ^ 2;
t453 = pkin(1) * t268;
t452 = pkin(1) * t273;
t450 = pkin(4) * t165;
t449 = pkin(8) * t239;
t444 = g(3) * t279;
t56 = t354 * pkin(10) + t63;
t247 = pkin(1) * t400;
t154 = qJD(2) * t247 - t237 * qJDD(1);
t62 = -t86 * pkin(4) + t154;
t6 = pkin(8) * t33 - pkin(10) * t316 + t62;
t3 = qJD(5) * t36 + t270 * t6 + t277 * t56;
t2 = t3 * t277;
t440 = t87 * t89;
t18 = t20 * t277;
t434 = t270 * t37;
t433 = t270 * t87;
t431 = t277 * t89;
t318 = pkin(1) * (t171 * t268 + t275 * t300);
t430 = qJD(2) * t318 - (t159 * t267 + t437 * t160) * pkin(3);
t317 = pkin(1) * (-t171 * t275 + t268 * t300);
t429 = qJD(2) * t317 - (-t437 * t159 + t160 * t267) * pkin(3);
t425 = t467 * t270;
t418 = t161 * t259;
t417 = t163 * t165;
t416 = t164 * t161;
t269 = sin(qJ(6));
t276 = cos(qJ(6));
t410 = t269 * t276;
t406 = t274 * t277;
t405 = t277 * t280;
t261 = t269 ^ 2;
t263 = t276 ^ 2;
t403 = t261 - t263;
t262 = t273 ^ 2;
t264 = t279 ^ 2;
t402 = t262 - t264;
t401 = pkin(6) * qJDD(1);
t398 = qJD(2) * t279;
t397 = qJD(3) * t260;
t395 = qJD(5) * t467;
t391 = qJDD(1) * pkin(12);
t388 = qJD(1) * qJD(6);
t385 = qJDD(2) * pkin(1) ^ 2;
t383 = t276 * qJDD(1);
t248 = t273 * t436;
t283 = qJD(1) ^ 2;
t375 = t283 * t410;
t374 = t273 * t283 * t279;
t236 = cos(t255);
t366 = pkin(3) * t236 + t443;
t182 = pkin(4) * t252 - t452;
t365 = -pkin(10) * t240 + t182;
t244 = -pkin(1) * t278 + pkin(4);
t156 = t271 * t244 - t355;
t150 = pkin(10) + t156;
t49 = -t450 + t53;
t46 = t247 + t49;
t361 = qJD(5) * t150 + t46;
t360 = 0.2e1 * pkin(6) * t388;
t359 = -0.2e1 * pkin(12) * t389;
t358 = t2 + t373;
t357 = qJD(2) * (-qJD(7) + t259);
t356 = qJD(7) * (-qJD(2) - t259);
t352 = pkin(4) * t368;
t350 = t273 * t367;
t349 = t388 * t410;
t319 = t271 * t278 + t371;
t152 = t319 * t436;
t347 = pkin(4) * t396 + t152;
t345 = -pkin(4) * t254 + t443;
t344 = pkin(8) * t240 + pkin(10) * t239;
t73 = t167 * t300 - t168 * t171;
t74 = t167 * t171 + t168 * t300;
t342 = t329 * t74 + t330 * t73;
t339 = t277 * t36 + t434;
t333 = -t150 * t31 - t421;
t242 = pkin(4) * t271 + pkin(10);
t332 = -t242 * t31 - t421;
t331 = t132 * t105 + t133 * t320;
t327 = t105 * t434 + t36 * t471 + t358;
t251 = sin(t265);
t253 = cos(t265);
t325 = g(3) * t251 - t161 * t194 + t197 * t253;
t324 = -qJD(5) * t45 - t225 - t56;
t315 = t194 * t174;
t155 = t456 * t244 + t381;
t312 = -pkin(6) * t283 + t197;
t311 = pkin(12) * t283 + t197;
t309 = t460 + 0.2e1 * t401;
t308 = -t460 + 0.2e1 * t391;
t307 = -t57 - t323;
t99 = (t161 * t267 + t437 * t164) * pkin(3);
t305 = t456 * t328;
t304 = -g(3) * t253 + t164 * t194 + t197 * t251 + t246;
t122 = -t456 * t174 + t271 * t328;
t107 = -pkin(4) * t290 + t248;
t47 = -qJD(4) * t305 - t174 * t396 - t271 * t290 - t456 * t289;
t48 = t122 * qJD(4) + t271 * t289 - t456 * t290;
t13 = t48 * pkin(8) + t47 * pkin(10) + t107;
t121 = -t174 * t271 - t305;
t140 = -pkin(4) * t328 - t237;
t52 = t121 * pkin(8) - t122 * pkin(10) + t140;
t302 = qJD(5) * t122 * t129 + t13 * t467 + t31 * t52;
t301 = t122 * t57 - t129 * t47 - t52 * t395;
t296 = (t194 * t400 - t444) * pkin(1) + t197 * t452;
t294 = -t165 * t194 + t229 + t299;
t5 = t277 * t6;
t4 = -qJD(5) * t37 - t270 * t56 + t5;
t293 = -t339 * qJD(5) - t4 * t270 + t2;
t292 = -g(3) * t252 + t163 * t194 - t197 * t254 - t468;
t282 = qJD(2) ^ 2;
t281 = qJD(6) ^ 2;
t249 = qJDD(8) + t257;
t243 = -t456 * pkin(4) - pkin(8);
t235 = sin(t255);
t196 = t275 * pkin(1) + t378;
t195 = t451 + t453;
t185 = t280 * t449;
t184 = t274 * t449;
t178 = pkin(12) + t345;
t172 = -t275 * t279 + t411;
t153 = -t334 + t211;
t149 = -pkin(8) - t155;
t148 = t240 * t405 - t409;
t147 = t240 * t408 + t406;
t146 = t240 * t406 + t408;
t145 = t240 * t409 - t405;
t134 = t247 - t450;
t127 = -t275 * t398 - t279 * t392 + t341;
t113 = (-t171 * t267 - t300 * t437) * pkin(3);
t112 = (-t437 * t171 + t267 * t300) * pkin(3);
t111 = -t244 * t396 + (t319 * qJD(3) + t272 * t368) * pkin(1);
t110 = t244 * t368 + (t272 * t396 + (-t456 * t278 + t407) * qJD(3)) * pkin(1);
t100 = (t437 * t172 - t173 * t267) * pkin(3) - t237;
t95 = t247 + t99;
t94 = -t171 * t195 - t196 * t300;
t93 = -t171 * t196 + t195 * t300;
t92 = -t161 ^ 2 + t164 ^ 2;
t91 = -t163 ^ 2 + t165 ^ 2;
t82 = -t171 * t173 + t172 * t300;
t81 = t171 * t172 + t173 * t300;
t67 = -t194 * t248 + (-t154 - t460) * t237;
t60 = -t163 * t260 + t85;
t58 = -t259 * t370 - t351 + t418;
t55 = t248 + (t127 * t267 + t437 * t128) * pkin(3);
t51 = qJD(7) * t318 + t159 * t195 + t160 * t196;
t50 = qJD(7) * t317 - t159 * t196 + t160 * t195;
t44 = t132 * t277 + t270 * t53;
t43 = -t132 * t270 + t277 * t53;
t42 = t153 * t277 + t270 * t49;
t41 = -t153 * t270 + t277 * t49;
t40 = (t267 * t83 + t437 * t84) * pkin(3) + t154;
t35 = -t127 * t300 + t128 * t171 + t159 * t173 - t160 * t172;
t34 = t127 * t171 + t128 * t300 + t159 * t172 + t160 * t173;
t10 = t87 * t425 - t18;
t8 = -t270 * t467 ^ 2 + t466;
t15 = [0, 0, 0, 0, 0, qJDD(1), -t460, t197, 0, 0, qJDD(1) * t262 + 0.2e1 * t350, 0.2e1 * t273 * t382 - 0.2e1 * t402 * t389, qJDD(2) * t273 + t279 * t282, qJDD(1) * t264 - 0.2e1 * t350, qJDD(2) * t279 - t273 * t282, 0, t273 * t359 + t279 * t308, -t273 * t308 + t279 * t359, -t197, (-t460 + t391) * pkin(12), -t165 * t289 - t85 * t174, -t86 * t174 + t328 * t85 + t260 * (t163 * t328 - t165 * t174), -t258 * t174 + t260 * t289, t163 * t290 + t328 * t86, t258 * t328 + t260 * t290, 0, t237 * t86 - t154 * t328 + t460 * t254 + qJD(3) * t315 + (-t163 * t452 + t315) * qJD(2), -t154 * t174 - t237 * t85 - t460 * t252 - t194 * t314 + (-t165 * t452 - t194 * t328) * qJD(2), ((-t278 * t174 - t272 * t328) * qJDD(2) - t459 * qJD(2) * t398) * pkin(1) - t197, t67, t122 * t316 + t320 * t47, -t105 * t47 - t121 * t316 - t122 * t33 + t320 * t48, t122 * t354 - t363 * t47, -t105 * t48 + t121 * t33, -t121 * t354 - t363 * t48, 0, -t105 * t107 + t121 * t62 + t131 * t48 + t140 * t33 + t240 * t460, -t107 * t320 + t122 * t62 - t131 * t47 + t140 * t316 - t461, -t121 * t63 + t122 * t306 + t132 * t47 + t133 * t48 - t197, t131 * t107 + t62 * t140 - t178 * t460, t462 * t122 - t47 * t431, t337 * t47 + (t16 - t18 + (-t431 + t433) * qJD(5)) * t122, t122 * t29 - t121 * t19 + t48 * t89 + (-t122 * t394 - t277 * t47) * t467, t122 * t464 - t47 * t433, -t122 * t28 - t121 * t20 - t48 * t87 + (-t122 * t393 + t270 * t47) * t467, t121 * t31 + t467 * t48, -g(1) * t146 + g(2) * t148 + t121 * t4 + t270 * t301 + t277 * t302 + t36 * t48, g(1) * t145 - g(2) * t147 - t121 * t3 - t270 * t302 + t277 * t301 - t37 * t48, t461 + (-t122 * t4 - t13 * t89 + t19 * t52 + t36 * t47 + (-t122 * t37 - t52 * t87) * qJD(5)) * t277 + (-t122 * t3 - t13 * t87 - t20 * t52 + t37 * t47 + (t122 * t36 + t52 * t89) * qJD(5)) * t270, t339 * t13 + (qJD(5) * t338 + t3 * t270 + t4 * t277) * t52 + t460 * (-t178 + t344), qJDD(1) * t261 + 0.2e1 * t349, 0.2e1 * t269 * t383 - 0.2e1 * t388 * t403, qJDD(6) * t269 + t276 * t281, qJDD(1) * t263 - 0.2e1 * t349, qJDD(6) * t276 - t269 * t281, 0, t269 * t360 - t276 * t309, t269 * t309 + t276 * t360, -t197, (t460 + t401) * pkin(6), -t127 * t164 - t173 * t83, t127 * t161 - t128 * t164 + t172 * t83 - t173 * t84, -t127 * t259 + t173 * t257, t128 * t161 + t172 * t84, -t128 * t259 - t172 * t257, 0, -t128 * t194 + t154 * t172 + t161 * t248 - t237 * t84 - t253 * t460, t127 * t194 + t154 * t173 + t164 * t248 + t237 * t83 + t251 * t460, ((-t172 * t268 - t173 * t275) * qJDD(2) + (t127 * t275 - t128 * t268 + (-t172 * t275 + t173 * t268) * qJD(7)) * qJD(2)) * pkin(1) - t197, t67, t21 * t82 - t329 * t34, t21 * t81 + t22 * t82 - t329 * t35 + t330 * t34, t249 * t82 + t250 * t34, t22 * t81 + t330 * t35, t249 * t81 + t250 * t35, 0, -t100 * t22 + t228 * t460 - t330 * t55 - t35 * t90 - t40 * t81, t100 * t21 + t227 * t460 - t329 * t55 + t34 * t90 + t40 * t82, -t34 * t73 - t35 * t74 + t38 * t81 - t39 * t82 - t197, t40 * t100 + t90 * t55 - t460 * (pkin(12) + t366); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t374, t402 * t283, t384, t374, t382, qJDD(2), t273 * t311 - t444, g(3) * t273 + t279 * t311, 0, 0, t417, t91, t60, -t417, t61, t258, (t163 * t400 + t272 * t397 + (-qJDD(2) - t258) * t278) * pkin(1) + t294, (t165 * t400 + t258 * t272 + t278 * t397) * pkin(1) + t292, -t163 * t379 + ((-qJD(3) * t163 + t85) * t278 - t61 * t272) * pkin(1), t459 * t385 + t296, t470, t27, t23, -t470, t24, t354, t105 * t134 + t111 * t363 + t155 * t354 + t286, -t110 * t363 + t134 * t320 - t156 * t354 + t295, t105 * t110 + t111 * t320 - t155 * t316 - t156 * t33 + t331, -g(3) * t345 - t133 * t110 + t132 * t111 - t131 * t134 - t155 * t306 + t63 * t156 - t182 * t197, t9, t1, t7, t10, t8, t426, -t111 * t87 + t149 * t20 + (-t110 * t467 + t333) * t270 + (-t361 * t467 + t307) * t277 + t346, -t111 * t89 - t149 * t19 + t333 * t277 + (-t110 * t277 + t270 * t361) * t467 + t297, (-t110 * t87 - t150 * t20 + t46 * t89 + (t150 * t89 - t36) * qJD(5)) * t277 + (t110 * t89 - t150 * t19 + t46 * t87 - t4 + (t150 * t87 - t37) * qJD(5)) * t270 + t327, t57 * t149 - t129 * t111 - g(3) * (-t344 + t345) - g(2) * (t274 * t365 + t184) - g(1) * (t280 * t365 + t185) - t339 * t46 + t338 * t110 + t293 * t150, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t416, t92, t58, -t416, -t340, t257, (-t161 * t400 + t257 * t275 + t268 * t356) * pkin(1) + t304, (-t164 * t400 + (-qJDD(2) - t257) * t268 + t275 * t356) * pkin(1) + t325, ((t83 - t418) * t275 + (t164 * t259 - t84) * t268) * pkin(1), (t268 ^ 2 + t275 ^ 2) * t385 + t296, t469, t14, t11, -t469, t12, t249, t249 * t93 + t250 * t51 + t330 * t95 + t298, -t249 * t94 - t250 * t50 + t329 * t95 + t285, -t21 * t93 + t22 * t94 + t329 * t51 + t330 * t50 + t342, t38 * t94 - t74 * t50 + t39 * t93 + t73 * t51 - t90 * t95 - g(3) * t366 - t197 * (pkin(3) * t235 - t452); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t417, t91, t60, -t417, t61, t258, (-qJD(2) * t260 * t272 - t386) * pkin(1) + t294, -t260 * t379 + t292, 0, 0, t470, t27, t23, -t470, t24, t354, -t152 * t363 + (-t105 * t165 + t456 * t354 - t363 * t396) * pkin(4) + t286, t153 * t363 + (-t165 * t320 - t271 * t354 - t363 * t368) * pkin(4) + t295, -t153 * t105 - t152 * t320 + (-t456 * t316 - t271 * t33 + (t105 * t456 - t271 * t320) * qJD(4)) * pkin(4) + t331, -t132 * t152 + t133 * t153 + (-t456 * t306 + t131 * t165 + t271 * t63 + (-t132 * t271 - t456 * t133) * qJD(4) + t299) * pkin(4), t9, t1, t7, t10, t8, t426, -t41 * t467 + t243 * t20 + t347 * t87 + (-t352 * t467 + t332) * t270 + (-t242 * t395 + t307) * t277 + t346, -t243 * t19 + t347 * t89 + t332 * t277 + (t242 * t394 - t277 * t352 + t42) * t467 + t297, t41 * t89 + t42 * t87 + (-t87 * t352 - t20 * t242 + (t242 * t89 - t36) * qJD(5)) * t277 + (t89 * t352 - t19 * t242 - t4 + (t242 * t87 - t37) * qJD(5)) * t270 + t327, t57 * t243 - t37 * t42 - t36 * t41 + t129 * t152 + g(3) * t344 - g(2) * (-pkin(10) * t413 + t184) - g(1) * (-pkin(10) * t412 + t185) + ((t129 * t271 + t338 * t456) * qJD(4) + t299) * pkin(4) + t293 * t242, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t470, t27, t23, -t470, t24, t354, -t133 * t363 + t286, t132 * t363 + t295, 0, 0, t9, t1, t7, t433 * t467 - t18, -t425 * t467 + t466, t426, -pkin(8) * t20 - t467 * t43 + t133 * t87 + (-pkin(10) * t31 - t421) * t270 + (-pkin(10) * t395 + t307) * t277 + t346, -t129 * t471 + pkin(8) * t19 + t467 * t44 + t133 * t89 + (t394 * t467 - t29) * pkin(10) + t297, t43 * t89 + t44 * t87 + (-t474 + (-t20 + t427) * pkin(10)) * t277 + (-t4 - t473 + (qJD(5) * t87 - t19) * pkin(10)) * t270 + t358, -g(1) * t185 - g(2) * t184 + t129 * t133 - t36 * t43 - t37 * t44 + t472 * pkin(8) + (t197 * t240 + t225 + t293) * pkin(10), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t440, -t87 ^ 2 + t89 ^ 2, t467 * t87 - t19, -t440, t467 * t89 - t20, t31, -g(1) * t147 - g(2) * t145 - t129 * t89 - t130 * t393 + t270 * t324 + t473 + t5, -g(1) * t148 - g(2) * t146 + t474 + t129 * t87 + (qJD(5) * t130 - t6) * t270 + t324 * t277, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t375, t403 * t283, t269 * qJDD(1), t375, t383, qJDD(6), -g(3) * t276 + t269 * t312, g(3) * t269 + t276 * t312, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t416, t92, t58, -t416, -t340, t257, t357 * t453 + t304, (t275 * t357 - t387) * pkin(1) + t325, 0, 0, t469, t14, t11, -t469, t12, t249, t112 * t249 - t250 * t430 + t330 * t99 + t298, -t113 * t249 + t250 * t429 + t329 * t99 + t285, -t112 * t21 + t113 * t22 - t329 * t430 - t330 * t429 + t342, t112 * t39 + t113 * t38 - t90 * t99 + t429 * t74 - t430 * t73 + (-g(3) * t236 - t197 * t235) * pkin(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t469, t14, t11, -t469, t12, t249, -t250 * t74 + t298, t250 * t73 + t285, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
tau_reg = t15;
