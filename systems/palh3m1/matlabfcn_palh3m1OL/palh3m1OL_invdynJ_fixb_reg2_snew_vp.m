% Calculate inertial parameters regressor of inverse dynamics joint torque vector with Newton-Euler for
% palh3m1OL
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [10x1]
%   Generalized joint coordinates (joint angles)
% qJD [10x1]
%   Generalized joint velocities
% qJDD [10x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [16x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[AB,BC,BE,BG,DC,DT2,EP,GH,GP,HW,OT1,T1A,T1T2,phi410,phi78,phi79]';
% 
% Output:
% tauJ_reg [10x(10*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2020-04-20 17:16
% Revision: bf71b3c88fbe513355f3920541c47e1db11bd916 (2020-04-17)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauJ_reg = palh3m1OL_invdynJ_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(10,1),zeros(10,1),zeros(10,1),zeros(3,1),zeros(16,1)}
assert(isreal(qJ) && all(size(qJ) == [10 1]), ...
  'palh3m1OL_invdynJ_fixb_reg2_snew_vp: qJ has to be [10x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [10 1]), ...
  'palh3m1OL_invdynJ_fixb_reg2_snew_vp: qJD has to be [10x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [10 1]), ...
  'palh3m1OL_invdynJ_fixb_reg2_snew_vp: qJDD has to be [10x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'palh3m1OL_invdynJ_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [16 1]), ...
  'palh3m1OL_invdynJ_fixb_reg2_snew_vp: pkin has to be [16x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauJ_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2020-04-20 17:11:05
% EndTime: 2020-04-20 17:12:38
% DurationCPUTime: 10.21s
% Computational Cost: add. (20705->555), mult. (46268->806), div. (0->0), fcn. (36912->18), ass. (0->364)
t342 = cos(qJ(3));
t379 = qJDD(2) + qJDD(3);
t334 = sin(qJ(3));
t343 = cos(qJ(2));
t387 = qJD(1) * t343;
t335 = sin(qJ(2));
t388 = qJD(1) * t335;
t276 = t334 * t388 - t342 * t387;
t278 = (-t343 * t334 - t335 * t342) * qJD(1);
t414 = t276 * t278;
t433 = t379 + t414;
t442 = t342 * t433;
t346 = qJD(1) ^ 2;
t336 = sin(qJ(1));
t424 = cos(qJ(1));
t353 = t424 * g(1) + t336 * g(2);
t288 = -t346 * pkin(12) - t353;
t261 = t343 * g(3) + t335 * t288;
t301 = t343 * t346 * t335;
t381 = qJDD(2) + t301;
t251 = t381 * pkin(1) - t261;
t263 = -t335 * g(3) + t343 * t288;
t318 = t343 ^ 2 * t346;
t345 = qJD(2) ^ 2;
t254 = (-t345 - t318) * pkin(1) + t263;
t198 = t334 * t251 + t342 * t254;
t271 = t276 ^ 2;
t324 = qJD(2) + qJD(3);
t321 = t324 ^ 2;
t426 = -t271 - t321;
t185 = t426 * pkin(4) - t198;
t333 = sin(qJ(4));
t341 = cos(qJ(4));
t196 = -t342 * t251 + t334 * t254;
t348 = pkin(4) * t433 + t196;
t132 = t333 * t185 - t341 * t348;
t133 = t341 * t185 + t333 * t348;
t65 = t341 * t132 - t333 * t133;
t441 = t342 * t65;
t329 = sin(pkin(15));
t337 = cos(qJ(8));
t417 = cos(pkin(15));
t423 = sin(qJ(8));
t284 = t329 * t337 - t417 * t423;
t330 = sin(qJ(7));
t338 = cos(qJ(7));
t274 = t330 * t388 - t338 * t387;
t277 = (t343 * t330 + t335 * t338) * qJD(1);
t285 = -t329 * t423 - t417 * t337;
t216 = -t285 * t274 - t284 * t277;
t217 = -t284 * t274 + t285 * t277;
t174 = t216 * t217;
t322 = qJDD(2) + qJDD(7);
t307 = qJDD(8) + t322;
t429 = t174 + t307;
t440 = t284 * t429;
t439 = t285 * t429;
t332 = sin(qJ(5));
t241 = t333 * t276 + t341 * t278;
t312 = t335 * qJDD(1);
t383 = qJD(1) * qJD(2);
t371 = t343 * t383;
t292 = t312 + t371;
t314 = t343 * qJDD(1);
t372 = t335 * t383;
t294 = t314 - t372;
t363 = t334 * t292 - t342 * t294;
t226 = -t278 * qJD(3) + t363;
t352 = -t276 * qJD(3) + t342 * t292 + t334 * t294;
t364 = -t341 * t226 - t333 * t352;
t157 = -t241 * qJD(4) - t364;
t156 = qJDD(5) - t157;
t310 = qJD(4) + t324;
t340 = cos(qJ(5));
t221 = t332 * t241 - t340 * t310;
t223 = t340 * t241 + t332 * t310;
t179 = t223 * t221;
t430 = t156 - t179;
t438 = t332 * t430;
t239 = -t341 * t276 + t333 * t278;
t192 = t241 * t239;
t308 = qJDD(4) + t379;
t428 = -t192 + t308;
t437 = t333 * t428;
t436 = t340 * t430;
t435 = t341 * t428;
t405 = t324 * t278;
t202 = t226 - t405;
t434 = t294 - t372;
t355 = t333 * t226 - t341 * t352;
t158 = -t239 * qJD(4) + t355;
t233 = t310 * t239;
t141 = t158 - t233;
t370 = t336 * g(1) - t424 * g(2);
t286 = qJDD(1) * pkin(12) + t370;
t250 = t434 * pkin(1) + t286;
t177 = t202 * pkin(4) + t250;
t54 = -t141 * pkin(10) + (t310 * t241 - t157) * pkin(8) - t177;
t190 = t239 * pkin(8) - t241 * pkin(10);
t425 = t310 ^ 2;
t86 = -t425 * pkin(8) + t308 * pkin(10) - t239 * t190 + t133;
t21 = t332 * t86 - t340 * t54;
t22 = t332 * t54 + t340 * t86;
t14 = t332 * t21 + t340 * t22;
t252 = t277 * t274;
t242 = -t252 + t322;
t432 = t338 * t242;
t362 = t330 * t292 - t338 * t294;
t225 = -t277 * qJD(7) - t362;
t227 = -t274 * qJD(7) + t338 * t292 + t330 * t294;
t146 = -t217 * qJD(8) + t285 * t225 - t284 * t227;
t323 = qJD(2) + qJD(7);
t309 = qJD(8) + t323;
t212 = t309 * t217;
t431 = t146 + t212;
t265 = t323 * t274;
t427 = -t265 + t227;
t236 = qJD(5) + t239;
t365 = t332 * t158 - t340 * t308;
t96 = (qJD(5) - t236) * t223 + t365;
t214 = t216 ^ 2;
t215 = t217 ^ 2;
t219 = t221 ^ 2;
t220 = t223 ^ 2;
t235 = t236 ^ 2;
t237 = t239 ^ 2;
t238 = t241 ^ 2;
t270 = t274 ^ 2;
t272 = t277 ^ 2;
t273 = t278 ^ 2;
t306 = t309 ^ 2;
t320 = t323 ^ 2;
t422 = pkin(3) * t329;
t421 = pkin(8) * t333;
t376 = pkin(3) * t417;
t195 = -t338 * t251 + t330 * t254;
t234 = (t417 * t274 - t277 * t329) * pkin(3);
t161 = -t277 * t234 + (t320 * t329 + t417 * t322) * pkin(3) - t195;
t197 = t330 * t251 + t338 * t254;
t162 = -t274 * t234 + (-t417 * t320 + t322 * t329) * pkin(3) + t197;
t88 = t285 * t161 - t284 * t162;
t89 = t284 * t161 + t285 * t162;
t39 = t284 * t89 + t285 * t88;
t40 = -t284 * t88 + t285 * t89;
t420 = t39 * t376 + t40 * t422;
t356 = t284 * t225 + t285 * t227;
t147 = t216 * qJD(8) + t356;
t211 = t309 * t216;
t116 = t147 - t211;
t50 = -t285 * t116 + t284 * t431;
t52 = t284 * t116 + t285 * t431;
t419 = t50 * t376 + t52 * t422;
t85 = -t308 * pkin(8) - t425 * pkin(10) + t241 * t190 + t132;
t418 = -pkin(8) * t85 + pkin(10) * t14;
t82 = t332 * t85;
t83 = t340 * t85;
t416 = t236 * t332;
t415 = t236 * t340;
t413 = t277 * t330;
t148 = -t277 * t323 * t376 + (t417 * t225 + t427 * t329) * pkin(3) + t250;
t412 = t284 * t148;
t171 = -t174 + t307;
t411 = t284 * t171;
t410 = t285 * t148;
t409 = t285 * t171;
t408 = t310 * t333;
t407 = t310 * t341;
t406 = t324 * t276;
t243 = t252 + t322;
t404 = t330 * t243;
t403 = t330 * t250;
t402 = t330 * t274;
t119 = t156 + t179;
t401 = t332 * t119;
t400 = t333 * t177;
t188 = t192 + t308;
t399 = t333 * t188;
t245 = -t414 + t379;
t398 = t334 * t245;
t397 = t334 * t276;
t396 = t334 * t335;
t395 = t338 * t250;
t394 = t338 * t277;
t393 = t340 * t119;
t392 = t341 * t177;
t391 = t341 * t188;
t390 = t342 * t250;
t389 = t342 * t278;
t386 = qJD(4) + t310;
t384 = qJD(5) + t236;
t382 = qJD(1) * qJD(6);
t9 = t333 * t14 - t341 * t85;
t380 = pkin(4) * t9 + t418;
t359 = -t340 * t158 - t332 * t308;
t101 = t384 * t221 + t359;
t168 = -t220 - t235;
t71 = -t332 * t168 - t393;
t378 = pkin(8) * t101 + pkin(10) * t71 + t82;
t159 = -t235 - t219;
t68 = t340 * t159 - t438;
t97 = -t384 * t223 - t365;
t377 = pkin(8) * t97 + pkin(10) * t68 - t83;
t375 = t333 * t179;
t374 = t341 * t179;
t373 = -pkin(8) * t341 - pkin(4);
t32 = t341 * t101 + t333 * t71;
t369 = pkin(4) * t32 + t378;
t30 = t333 * t68 + t341 * t97;
t368 = pkin(4) * t30 + t377;
t155 = t219 + t220;
t130 = -t221 * qJD(5) - t359;
t184 = t236 * t221;
t100 = t130 + t184;
t45 = t332 * t100 - t340 * t96;
t367 = pkin(8) * t155 + pkin(10) * t45 + t14;
t366 = t333 * t132 + t341 * t133;
t24 = t341 * t155 + t333 * t45;
t361 = pkin(4) * t24 + t367;
t186 = -t425 - t237;
t151 = t333 * t186 + t435;
t360 = pkin(4) * t151 - t132;
t331 = sin(qJ(6));
t311 = t331 * qJDD(1);
t339 = cos(qJ(6));
t291 = 0.2e1 * t339 * t382 + t311;
t313 = t339 * qJDD(1);
t293 = -0.2e1 * t331 * t382 + t313;
t13 = -t340 * t21 + t332 * t22;
t358 = t338 * t195 - t330 * t197;
t357 = t342 * t196 - t334 * t198;
t169 = -t306 - t214;
t110 = t284 * t169 + t439;
t111 = t285 * t169 - t440;
t351 = t110 * t376 + t111 * t422 + t88;
t194 = -t215 - t306;
t123 = t285 * t194 - t411;
t124 = -t284 * t194 - t409;
t350 = t123 * t376 + t124 * t422 - t89;
t200 = (-qJD(7) + t323) * t277 - t362;
t349 = (-qJD(4) + t310) * t241 - t364;
t208 = -t352 + t406;
t224 = -t238 - t425;
t163 = t341 * t224 - t399;
t347 = pkin(4) * t163 - t133;
t344 = qJD(6) ^ 2;
t317 = t339 ^ 2 * t346;
t316 = t335 ^ 2 * t346;
t315 = t331 ^ 2 * t346;
t299 = t339 * t346 * t331;
t295 = t314 - 0.2e1 * t372;
t290 = -t312 - 0.2e1 * t371;
t289 = t346 * pkin(6) - t353;
t287 = -qJDD(1) * pkin(6) + t370;
t262 = -t331 * g(3) + t339 * t289;
t260 = t339 * g(3) + t331 * t289;
t259 = -t273 + t321;
t258 = -t272 + t320;
t257 = t271 - t321;
t256 = t270 - t320;
t249 = t273 - t271;
t248 = t272 - t270;
t232 = -t238 + t425;
t231 = t237 - t425;
t230 = -t271 - t273;
t229 = -t270 - t272;
t210 = -t215 + t306;
t209 = t214 - t306;
t207 = t352 + t406;
t205 = t265 + t227;
t201 = t226 + t405;
t199 = (qJD(7) + t323) * t277 + t362;
t193 = (t343 * pkin(1) + pkin(12)) * t250;
t191 = -t237 + t238;
t183 = -t220 + t235;
t182 = t219 - t235;
t181 = (-t239 * t341 + t241 * t333) * t310;
t180 = (-t239 * t333 - t241 * t341) * t310;
t178 = t220 - t219;
t175 = -t237 - t238;
t173 = t215 - t214;
t167 = t341 * t231 - t399;
t166 = -t333 * t232 + t435;
t165 = t333 * t231 + t391;
t164 = t341 * t232 + t437;
t153 = (t216 * t285 + t217 * t284) * t309;
t152 = (t216 * t284 - t217 * t285) * t309;
t149 = -t214 - t215;
t145 = (-t221 * t340 + t223 * t332) * t236;
t144 = (-t221 * t332 - t223 * t340) * t236;
t143 = -t386 * t239 + t355;
t142 = t158 + t233;
t138 = t386 * t241 + t364;
t137 = t341 * t158 - t241 * t408;
t136 = t333 * t158 + t241 * t407;
t135 = -t333 * t157 + t239 * t407;
t134 = t341 * t157 + t239 * t408;
t129 = -t223 * qJD(5) - t365;
t128 = t285 * t209 - t411;
t127 = -t284 * t210 + t439;
t126 = t284 * t209 + t409;
t125 = t285 * t210 + t440;
t117 = (qJD(8) + t309) * t216 + t356;
t115 = t147 + t211;
t113 = t146 - t212;
t109 = t285 * t147 - t284 * t212;
t108 = t284 * t147 + t285 * t212;
t107 = -t284 * t146 - t285 * t211;
t106 = t285 * t146 - t284 * t211;
t103 = -pkin(4) * t138 + t392;
t102 = -pkin(4) * t143 - t400;
t99 = t130 - t184;
t93 = t340 * t130 - t223 * t416;
t92 = t332 * t130 + t223 * t415;
t91 = -t332 * t129 + t221 * t415;
t90 = t340 * t129 + t221 * t416;
t81 = t341 * t145 + t333 * t156;
t80 = t333 * t145 - t341 * t156;
t79 = t340 * t182 - t401;
t78 = -t332 * t183 + t436;
t77 = t332 * t182 + t393;
t76 = t340 * t183 + t438;
t75 = -t341 * t138 - t333 * t141;
t74 = -t341 * t142 + t333 * t349;
t73 = -t333 * t138 + t341 * t141;
t72 = pkin(4) * t74;
t70 = t340 * t168 - t401;
t67 = t332 * t159 + t436;
t63 = t341 * t93 + t375;
t62 = t341 * t91 - t375;
t61 = t333 * t93 - t374;
t60 = t333 * t91 + t374;
t59 = pkin(4) * t65;
t58 = -t117 * t422 - t410;
t57 = t113 * t376 + t410;
t56 = t113 * t422 - t412;
t55 = -t117 * t376 - t412;
t51 = t285 * t113 - t284 * t115;
t49 = t284 * t113 + t285 * t115;
t46 = -pkin(4) * t175 + t366;
t44 = -t332 * t99 + t340 * t97;
t43 = -t340 * t100 - t332 * t96;
t42 = t332 * t97 + t340 * t99;
t36 = -t333 * t96 + t341 * t79;
t35 = t333 * t100 + t341 * t78;
t34 = t333 * t79 + t341 * t96;
t33 = -t341 * t100 + t333 * t78;
t28 = t333 * t178 + t341 * t44;
t27 = -t341 * t178 + t333 * t44;
t26 = -pkin(10) * t70 + t83;
t25 = -pkin(10) * t67 + t82;
t20 = -t149 * t422 - t39;
t19 = -t149 * t376 + t40;
t16 = -pkin(8) * t70 + t22;
t15 = -pkin(8) * t67 + t21;
t11 = -t333 * t16 + t341 * t26;
t10 = -t333 * t15 + t341 * t25;
t7 = -pkin(10) * t43 - t13;
t6 = -pkin(4) * t70 + t341 * t16 + t333 * t26;
t5 = -pkin(4) * t67 + t341 * t15 + t333 * t25;
t4 = t341 * t7 + t43 * t421;
t3 = (-pkin(10) * t341 + t421) * t13;
t2 = t333 * t7 + t373 * t43;
t1 = (-pkin(10) * t333 + t373) * t13;
t8 = [0, 0, 0, 0, 0, qJDD(1), t370, t353, 0, 0, (t292 + t371) * t335, -t343 * t290 + t335 * t295, t335 * t381 + t343 * (-t316 + t345), t434 * t343, t335 * (t318 - t345) + t343 * (qJDD(2) - t301), 0, pkin(12) * t295 + t343 * t286, pkin(12) * t290 - t335 * t286, t335 * t261 + t343 * t263 + pkin(12) * (t316 + t318), pkin(12) * t286, t335 * (t334 * t405 + t342 * t352) + t343 * (-t324 * t389 + t334 * t352), t335 * (-t342 * t202 + t334 * t208) + t343 * (-t334 * t202 - t342 * t208), t335 * (t334 * t259 - t442) + t343 * (-t342 * t259 - t334 * t433), t335 * (t334 * t226 + t342 * t406) + t343 * (-t342 * t226 + t324 * t397), t335 * (-t342 * t257 + t398) + t343 * (-t342 * t245 - t334 * t257), (t335 * (-t276 * t342 - t278 * t334) + t343 * (t389 - t397)) * t324, t250 * t396 + t343 * (pkin(1) * t202 - t390) + pkin(12) * t202, t335 * t390 + t343 * (-pkin(1) * t208 + t334 * t250) - pkin(12) * t208, t335 * t357 + t343 * (-pkin(1) * t230 + t334 * t196 + t342 * t198) - pkin(12) * t230, t193, t335 * (t334 * t136 - t342 * t137) + t343 * (-t342 * t136 - t334 * t137), t335 * (t334 * t73 - t342 * t75) + t343 * (-t334 * t75 - t342 * t73), t335 * (t334 * t164 - t342 * t166) + t343 * (-t342 * t164 - t334 * t166), t335 * (t334 * t134 - t342 * t135) + t343 * (-t342 * t134 - t334 * t135), t335 * (t334 * t165 - t342 * t167) + t343 * (-t342 * t165 - t334 * t167), t335 * (t334 * t180 - t342 * t181) + t343 * (-t342 * t180 - t334 * t181), t335 * (t334 * t103 + t342 * t400) + t343 * (-pkin(1) * t138 - t342 * t103 + t334 * t400) - pkin(12) * t138, t335 * (t334 * t102 + t342 * t392) + t343 * (-pkin(1) * t143 - t342 * t102 + t334 * t392) - pkin(12) * t143, t335 * (t334 * t46 - t441) + t343 * (-pkin(1) * t175 - t334 * t65 - t342 * t46) - pkin(12) * t175, (pkin(4) * t396 + t343 * (-pkin(4) * t342 + pkin(1)) + pkin(12)) * t177, t335 * (t334 * t61 - t342 * t63) + t343 * (-t334 * t63 - t342 * t61), t335 * (t334 * t27 - t342 * t28) + t343 * (-t342 * t27 - t334 * t28), t335 * (t334 * t33 - t342 * t35) + t343 * (-t342 * t33 - t334 * t35), t335 * (t334 * t60 - t342 * t62) + t343 * (-t334 * t62 - t342 * t60), t335 * (t334 * t34 - t342 * t36) + t343 * (-t334 * t36 - t342 * t34), t335 * (t334 * t80 - t342 * t81) + t343 * (-t334 * t81 - t342 * t80), t335 * (-t342 * t10 + t334 * t5) + t343 * (-pkin(1) * t67 - t334 * t10 - t342 * t5) - pkin(12) * t67, t335 * (-t342 * t11 + t334 * t6) + t343 * (-pkin(1) * t70 - t334 * t11 - t342 * t6) - pkin(12) * t70, t335 * (t334 * t2 - t342 * t4) + t343 * (-pkin(1) * t43 - t342 * t2 - t334 * t4) - pkin(12) * t43, t335 * (t334 * t1 - t342 * t3) + t343 * (-pkin(1) * t13 - t342 * t1 - t334 * t3) - pkin(12) * t13, t291 * t331, t339 * t291 + t331 * t293, t331 * (qJDD(6) + t299) + t339 * (-t315 + t344), t293 * t339, t331 * (t317 - t344) + t339 * (qJDD(6) - t299), 0, -pkin(6) * t293 + t339 * t287, pkin(6) * t291 - t331 * t287, t331 * t260 + t339 * t262 - pkin(6) * (t315 + t317), -pkin(6) * t287, t335 * (t338 * t227 - t323 * t413) + t343 * (t330 * t227 + t323 * t394), t335 * (-t338 * t199 - t330 * t427) + t343 * (-t330 * t199 + t338 * t427), t335 * (-t330 * t258 + t432) + t343 * (t330 * t242 + t338 * t258), t335 * (-t330 * t225 + t265 * t338) + t343 * (t338 * t225 + t323 * t402), t335 * (t338 * t256 - t404) + t343 * (t338 * t243 + t330 * t256), (t335 * (-t274 * t338 + t413) + t343 * (-t394 - t402)) * t323, -t335 * t403 + t343 * (-pkin(1) * t199 + t395) - pkin(12) * t199, -t335 * t395 + t343 * (-pkin(1) * t427 - t403) - pkin(12) * t427, t335 * t358 + t343 * (-pkin(1) * t229 + t330 * t195 + t338 * t197) - pkin(12) * t229, t193, t335 * (-t330 * t108 + t338 * t109) + t343 * (t338 * t108 + t330 * t109), t335 * (-t330 * t49 + t338 * t51) + t343 * (t330 * t51 + t338 * t49), t335 * (-t330 * t125 + t338 * t127) + t343 * (t338 * t125 + t330 * t127), t335 * (-t330 * t106 + t338 * t107) + t343 * (t338 * t106 + t330 * t107), t335 * (-t330 * t126 + t338 * t128) + t343 * (t338 * t126 + t330 * t128), t335 * (-t330 * t152 + t338 * t153) + t343 * (t338 * t152 + t330 * t153), t335 * (-t330 * t57 + t338 * t56) + t343 * (pkin(1) * t113 + t330 * t56 + t338 * t57) + pkin(12) * t113, t335 * (-t330 * t55 + t338 * t58) + t343 * (-pkin(1) * t117 + t330 * t58 + t338 * t55) - pkin(12) * t117, t335 * (-t330 * t19 + t338 * t20) + t343 * (-pkin(1) * t149 + t338 * t19 + t330 * t20) - pkin(12) * t149, (t335 * (t329 * t338 - t417 * t330) * pkin(3) + t343 * (pkin(1) + (t329 * t330 + t417 * t338) * pkin(3)) + pkin(12)) * t148; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t301, t316 - t318, t312, t301, t314, qJDD(2), -t261, -t263, 0, 0, -t414, t249, -t207, t414, t201, t379, pkin(1) * (-t334 * t426 - t442) + t196, pkin(1) * (t398 - t342 * (-t273 - t321)) + t198, pkin(1) * (-t334 * (-(qJD(3) - t324) * t278 + t363) - t342 * t207), -pkin(1) * t357, t192, t191, t142, -t192, t349, t308, pkin(1) * (-t334 * (t341 * t186 - t437) - t342 * t151) + t360, pkin(1) * (-t334 * (-t333 * t224 - t391) - t342 * t163) + t347, pkin(1) * (-t334 * (t333 * t142 + t341 * t349) - t342 * t74) + t72, pkin(1) * (-t334 * t366 + t441) - t59, t92, t42, t76, t90, t77, t144, pkin(1) * (-t334 * (-t333 * t97 + t341 * t68) - t342 * t30) + t368, pkin(1) * (-t334 * (-t333 * t101 + t341 * t71) - t342 * t32) + t369, pkin(1) * (-t334 * (-t333 * t155 + t341 * t45) - t342 * t24) + t361, pkin(1) * (-t334 * (t341 * t14 + t333 * t85) - t342 * t9) + t380, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t252, t248, t205, -t252, t200, t322, pkin(1) * (t330 * (-t320 - t270) + t432) - t195, pkin(1) * (-t404 + t338 * (-t272 - t320)) - t197, pkin(1) * (t200 * t330 - t338 * t205), -pkin(1) * t358, -t174, t173, t116, t174, t431, t307, pkin(1) * (t338 * t110 + t330 * t111) + t351, pkin(1) * (t338 * t123 + t330 * t124) + t350, pkin(1) * (t330 * t52 + t338 * t50) + t419, pkin(1) * (t330 * t40 + t338 * t39) + t420; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t414, t249, -t207, t414, t201, t379, t196, t198, 0, 0, t192, t191, t142, -t192, t349, t308, t360, t347, t72, -t59, t92, t42, t76, t90, t77, t144, t368, t369, t361, t380, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t192, t191, t142, -t192, t349, t308, -t132, -t133, 0, 0, t92, t42, t76, t90, t77, t144, t377, t378, t367, t418, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t179, t178, t100, -t179, -t96, t156, -t21, -t22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t299, t315 - t317, t311, t299, t313, qJDD(6), -t260, -t262, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t252, t248, t205, -t252, t200, t322, -t195, -t197, 0, 0, -t174, t173, t116, t174, t431, t307, t351, t350, t419, t420; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t174, t173, t116, t174, t431, t307, t88, -t89, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
tauJ_reg = t8;
