% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% palh3m1DE2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [4x1]
%   Generalized joint coordinates (joint angles)
% qJD [4x1]
%   Generalized joint velocities
% qJDD [4x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [19x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[AB,BC,BE,BG,DA,DC,DT2,EP,GH,GP,HW,OT1,T1A,T1T2,phi1,phi2,phi410,phi78,phi79]';
% 
% Output:
% tau_reg [4x(4*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2020-04-20 16:51
% Revision: bf71b3c88fbe513355f3920541c47e1db11bd916 (2020-04-17)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = palh3m1DE2_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(4,1),zeros(4,1),zeros(4,1),zeros(3,1),zeros(19,1)}
assert(isreal(qJ) && all(size(qJ) == [4 1]), ...
  'palh3m1DE2_invdynJ_fixb_reg2_slag_vp: qJ has to be [4x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [4 1]), ...
  'palh3m1DE2_invdynJ_fixb_reg2_slag_vp: qJD has to be [4x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [4 1]), ...
  'palh3m1DE2_invdynJ_fixb_reg2_slag_vp: qJDD has to be [4x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'palh3m1DE2_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [19 1]), ...
  'palh3m1DE2_invdynJ_fixb_reg2_slag_vp: pkin has to be [19x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2020-04-20 06:08:31
% EndTime: 2020-04-20 09:18:14
% DurationCPUTime: 3276.94s
% Computational Cost: add. (74889025->1145), mult. (116652909->1960), div. (4559496->28), fcn. (72817632->46), ass. (0->870)
t1160 = pkin(5) ^ 2;
t1135 = sin(pkin(16));
t1136 = cos(pkin(16));
t426 = sin(qJ(2));
t431 = cos(qJ(2));
t966 = t426 * t1135 - t431 * t1136;
t950 = pkin(5) * t966;
t925 = (-0.2e1 * t950 + pkin(1)) * pkin(1);
t904 = t925 + t1160;
t1152 = 0.1e1 / t904 ^ 2;
t897 = 0.1e1 / t904;
t1294 = 0.4e1 * t897 * t1152;
t1164 = pkin(1) ^ 2;
t393 = t1135 * t431 + t1136 * t426;
t923 = qJD(2) * t393;
t1293 = t1160 * t923 * t1164 * t1294;
t1163 = 0.1e1 / pkin(2);
t1141 = -pkin(6) - pkin(2);
t840 = (pkin(5) - t1141) * (pkin(5) + t1141) + t925;
t1140 = -pkin(6) + pkin(2);
t841 = (pkin(5) - t1140) * (pkin(5) + t1140) + t925;
t808 = t841 * t840;
t437 = sqrt(-t808);
t1154 = 0.1e1 / t437;
t1238 = t1154 / 0.2e1;
t1147 = pkin(1) * pkin(5);
t1289 = t840 + t841;
t1271 = t1289 * t1147;
t1210 = t1271 * t393;
t779 = t1210 * qJD(2);
t777 = 0.2e1 * t779;
t934 = -t950 + pkin(1);
t766 = t934 * t777;
t439 = pkin(2) ^ 2;
t1045 = pkin(6) ^ 2 - t439;
t881 = t904 - t1045;
t860 = pkin(5) * t881;
t825 = t860 * t966;
t823 = qJD(2) * t825;
t908 = t393 * t923;
t898 = t1160 * t908;
t892 = pkin(1) * t898;
t906 = t437 * t923;
t747 = t1163 * (-pkin(5) * t906 + t766 * t1238 - t823 - 0.2e1 * t892);
t739 = t897 * t747;
t1019 = t1152 * t1147;
t826 = t393 * t860;
t816 = t1163 * (t437 * t934 + t826);
t807 = t393 * t816;
t805 = t807 * t1019;
t800 = qJD(2) * t805;
t1213 = t739 / 0.2e1 + t800;
t420 = sin(pkin(19));
t422 = cos(pkin(19));
t1133 = pkin(1) * t393;
t919 = -0.2e1 * t1133;
t1207 = t934 * pkin(5) * t919 - t826;
t775 = t1154 * t777;
t772 = -t775 / 0.2e1;
t922 = qJD(2) * t966;
t1251 = t393 * t772 + t437 * t922;
t763 = t1251 * pkin(5);
t746 = t1163 * (qJD(2) * t1207 + t763);
t738 = t897 * t746;
t1062 = t393 * t437;
t1015 = pkin(5) * t1062;
t815 = t1163 * (t881 * t934 - t1015);
t806 = t393 * t815;
t804 = t806 * t1019;
t799 = qJD(2) * t804;
t300 = (-t738 / 0.2e1 - t799) * t422 + t1213 * t420;
t802 = t897 * t815;
t793 = -t802 / 0.2e1;
t803 = t897 * t816;
t794 = t803 / 0.2e1;
t361 = t420 * t794 + t422 * t793;
t353 = 0.1e1 / t361;
t354 = 0.1e1 / t361 ^ 2;
t355 = t353 * t354;
t792 = t802 / 0.2e1;
t362 = t420 * t792 + t422 * t794;
t1292 = t355 * t362 * t300;
t1139 = -pkin(8) - pkin(10);
t1161 = pkin(4) ^ 2;
t425 = sin(qJ(3));
t430 = cos(qJ(3));
t762 = t425 * t792 + t430 * t794;
t1021 = pkin(18) + pkin(19);
t985 = sin(t1021);
t756 = t985 * t762;
t761 = t425 * t794 + t430 * t793;
t986 = cos(t1021);
t732 = -t761 * t986 - t756;
t730 = pkin(3) * t732;
t728 = -0.2e1 * t730;
t724 = pkin(4) * t728 + t1161;
t692 = (pkin(3) - t1139) * (pkin(3) + t1139) + t724;
t1138 = pkin(10) - pkin(8);
t693 = (pkin(3) - t1138) * (pkin(3) + t1138) + t724;
t663 = t693 * t692;
t1165 = sqrt(-t663);
t659 = 0.1e1 / t1165;
t1291 = t659 / 0.2e1;
t734 = t738 / 0.2e1;
t299 = t1213 * t422 + (t734 + t799) * t420;
t1290 = t299 * t354;
t1069 = t354 * t362;
t1148 = qJD(3) ^ 2;
t1146 = pkin(1) * t1160;
t1247 = -0.4e1 * t393;
t1149 = qJD(2) ^ 2;
t921 = t966 * t1149;
t834 = qJDD(2) * t393 - t921;
t1205 = -t921 * t1247 - 0.2e1 * t393 * t834;
t774 = qJD(2) * t775;
t1206 = -t393 * t774 - t437 * t834;
t1243 = 0.2e1 * t923;
t1157 = t393 ^ 2;
t1194 = t1149 * t1157;
t916 = t1160 * t1194;
t901 = t1164 * t916;
t1278 = t901 * t1294;
t1018 = 0.2e1 * t1154;
t1153 = t1154 / t808;
t831 = pkin(5) * t834;
t827 = pkin(1) * t831;
t1281 = t1153 * t779 ^ 2 + (t1289 * t827 - 0.4e1 * t901) * t1018 / 0.2e1;
t745 = t747 * t1019;
t814 = t816 * t1019;
t833 = -qJDD(2) * t966 - t1149 * t393;
t886 = t897 / 0.2e1;
t876 = t1163 * t886;
t1178 = (t1206 * pkin(5) + t1205 * t1146 + t1281 * t934 + t833 * t860) * t876 + t745 * t1243 + t816 * t1278 + t834 * t814;
t795 = -t803 / 0.2e1;
t605 = qJDD(3) * t792 + t1148 * t795 + (t738 + 0.2e1 * t799) * qJD(3) + t1178;
t1175 = -t1281 * t393 - t437 * t833 + t966 * t774;
t1242 = -0.2e1 * t934;
t744 = t746 * t1019;
t813 = t815 * t1019;
t890 = t1163 * t897;
t1177 = (0.4e1 * pkin(1) * t916 + pkin(5) * t1175 + t827 * t1242 - t831 * t881) * t890 / 0.2e1 + t744 * t1243 + t834 * t813 + t815 * t1278;
t609 = qJDD(3) * t795 + t1148 * t793 + (-t739 - 0.2e1 * t800) * qJD(3) + t1177;
t1183 = -t986 * t605 - t609 * t985;
t1184 = -t985 * t605 + t609 * t986;
t525 = t1183 * t425 + t1184 * t430;
t523 = pkin(4) * t525;
t522 = pkin(3) * t523;
t1162 = pkin(3) ^ 2;
t1250 = qJD(3) * t761;
t1270 = t985 * t1250;
t1285 = -t1015 - t825;
t778 = t1210 * t1018;
t740 = (t934 * t778 / 0.2e1 + t1160 * t393 * t919 + t1285) * t876;
t1125 = pkin(5) * t393;
t946 = t966 * t437;
t741 = (pkin(5) * t946 - t778 * t1125 / 0.2e1 + t1207) * t890;
t675 = (t740 + t805) * t430 + (t741 / 0.2e1 + t804) * t425;
t673 = t985 * t675;
t801 = t425 * t805;
t676 = -t430 * t741 / 0.2e1 + t425 * t740 + t801;
t366 = t430 * t799;
t758 = qJD(3) * t762 - t366;
t631 = t986 * t758 - t1270 - (-t676 * t986 - t673) * qJD(2);
t629 = t631 ^ 2;
t624 = t1161 * t629;
t619 = t1162 * t624;
t722 = t724 + t1162;
t720 = 0.1e1 / t722 ^ 2;
t719 = 0.1e1 / t722;
t721 = t719 * t720;
t1288 = t720 * t522 + 0.4e1 * t721 * t619;
t812 = t393 * t814;
t1287 = -qJD(3) * t812 + t806 * t1293 + t393 * t744 - t813 * t922;
t356 = t362 ^ 2;
t339 = t354 * t356 + 0.1e1;
t336 = 0.1e1 / t339 ^ 2;
t1074 = t336 * t353;
t1001 = t299 * t1074;
t1068 = t355 * t356;
t270 = -0.2e1 * t1068 * t300 + 0.2e1 * t1069 * t299;
t1020 = pkin(1) * t1125;
t1029 = -t1154 / 0.2e1;
t374 = 0.4e1 * ((pkin(5) + pkin(6)) * (pkin(5) - pkin(6)) + t925 - t439) * t1020;
t989 = t374 * t1029;
t350 = (t946 + (t1045 + t989 - t1160) * t393) * pkin(5) + (-0.3e1 * pkin(1) + 0.4e1 * t950) * t1020;
t1022 = -0.2e1 * pkin(1) * t1157;
t911 = t934 * t1238;
t352 = t1160 * t1022 + t374 * t911 + t1285;
t811 = t393 * t813;
t859 = t420 * t876;
t307 = t350 * t859 + t420 * t811 + (t352 * t876 + t812) * t422;
t887 = -t897 / 0.2e1;
t877 = t1163 * t887;
t753 = t352 * t859 + t420 * t812 + (t350 * t877 - t811) * t422;
t750 = t753 * t1069;
t996 = t336 * t1069;
t977 = t300 * t996;
t1053 = (-t1074 * t307 + t336 * t750) * t270 - 0.2e1 * (-t1001 + t977) * (-t1068 * t753 + t1069 * t307);
t1193 = t1161 * t1162;
t1286 = -0.4e1 * t721 * t1193;
t419 = qJ(2) + qJ(3);
t1094 = sin(pkin(17));
t1095 = cos(pkin(17));
t1159 = 0.1e1 / pkin(10);
t441 = pkin(8) ^ 2;
t1044 = pkin(10) ^ 2 - t441;
t713 = t722 + t1044;
t704 = pkin(3) * t713;
t725 = -t730 + pkin(4);
t757 = t986 * t762;
t731 = t761 * t985 - t757;
t602 = t1165 * t725 + t704 * t731;
t600 = t1159 * t602;
t716 = t719 / 0.2e1;
t582 = t600 * t716;
t646 = t1165 * t731;
t601 = -pkin(3) * t646 + t713 * t725;
t599 = t1159 * t601;
t583 = t719 * t599;
t549 = -t1095 * t583 / 0.2e1 + t1094 * t582;
t550 = t1095 * t582 + t1094 * t583 / 0.2e1;
t512 = atan2(t550, t549);
t220 = t512 + t419;
t218 = sin(t220);
t1119 = g(3) * t218;
t219 = cos(t220);
t427 = sin(qJ(1));
t432 = cos(qJ(1));
t399 = g(1) * t432 + g(2) * t427;
t1284 = -t219 * t399 - t1119;
t1283 = -g(3) * t219 + t218 * t399;
t1215 = t692 + t693;
t521 = 0.2e1 * t522;
t627 = pkin(4) * t631;
t623 = pkin(3) * t627;
t618 = -0.2e1 * t623;
t551 = t1215 * t618;
t660 = t659 / t663;
t1282 = t660 * t551 ^ 2 / 0.4e1 + (t1215 * t521 - 0.8e1 * t619) * t1291;
t546 = 0.1e1 / t549 ^ 2;
t548 = t550 ^ 2;
t511 = t546 * t548 + 0.1e1;
t1280 = 0.2e1 / t511 ^ 2;
t1145 = pkin(3) * pkin(4);
t715 = t720 * t1145;
t580 = t599 * t715;
t581 = t600 * t715;
t1223 = t1094 * t581 - t1095 * t580;
t1245 = -0.2e1 * t725;
t1214 = t1145 * t1245 - t704;
t1259 = 0.4e1 * (-t441 + (pkin(3) + pkin(10)) * (pkin(3) - pkin(10)) + (t728 + pkin(4)) * pkin(4)) * t1145;
t856 = t425 * t876;
t847 = t350 * t856;
t854 = t430 * t876;
t310 = t352 * t854 + t425 * t811 + t430 * t812 + t847;
t855 = t430 * t877;
t311 = t350 * t855 + t352 * t856 + t425 * t812 - t430 * t811;
t294 = -t310 * t985 - t311 * t986;
t245 = t294 * t1259;
t293 = -t310 * t986 + t311 * t985;
t649 = -t659 / 0.2e1;
t645 = t731 * t649;
t1219 = -t293 * t1165 + t245 * t645;
t198 = pkin(3) * t1219 + t1214 * t294;
t1240 = t725 / 0.2e1;
t637 = t659 * t1240;
t652 = t294 * t1165;
t1241 = -0.2e1 * t1162;
t729 = pkin(4) * t731;
t726 = t729 * t1241;
t200 = -pkin(3) * t652 + t245 * t637 + t293 * t704 + t294 * t726;
t710 = t1159 * t716;
t689 = t1094 * t710;
t717 = t1159 * t719;
t700 = t1095 * t717;
t691 = -t700 / 0.2e1;
t148 = t1223 * t294 + t198 * t691 + t200 * t689;
t1224 = t1094 * t580 + t1095 * t581;
t690 = t700 / 0.2e1;
t149 = t1224 * t294 + t198 * t689 + t200 * t690;
t509 = 0.1e1 / t511;
t484 = t509 * t550;
t477 = t546 * t484;
t545 = 0.1e1 / t549;
t483 = t509 * t545;
t108 = -t148 * t477 + t149 * t483;
t107 = 0.1e1 + t108;
t1048 = t425 * t795 + t430 * t792;
t318 = -t1048 * t985 - t757;
t287 = t318 * t1259;
t317 = -t1048 * t986 + t756;
t1220 = -t317 * t1165 + t287 * t645;
t234 = pkin(3) * t1220 + t1214 * t318;
t650 = t318 * t1165;
t235 = -pkin(3) * t650 + t287 * t637 + t317 * t704 + t318 * t726;
t184 = t1223 * t318 + t234 * t691 + t235 * t689;
t185 = t1224 * t318 + t234 * t689 + t235 * t690;
t126 = -t184 * t477 + t185 * t483;
t125 = 0.1e1 + t126;
t542 = t659 * t551;
t539 = -t542 / 0.2e1;
t1269 = t986 * t1250;
t674 = t986 * t675;
t630 = t985 * t758 + t1269 + (t676 * t985 - t674) * qJD(2);
t1226 = -t1165 * t630 + t731 * t539;
t492 = t1159 * (pkin(3) * t1226 - t623 * t1245 + t631 * t704);
t489 = t492 * t715;
t562 = t631 * t599;
t1274 = t562 * t1286 + t489;
t1143 = pkin(4) * t1162;
t575 = t1165 * t631;
t596 = 0.2e1 * t731 * t631;
t493 = t1159 * (pkin(3) * t575 + t596 * t1143 + t542 * t1240 + t630 * t704);
t490 = t493 * t715;
t563 = t631 * t600;
t1273 = t563 * t1286 + t490;
t1144 = pkin(3) * t1161;
t314 = t722 - t1044;
t315 = pkin(4) * t732 - pkin(3);
t626 = pkin(4) * t630;
t196 = pkin(4) * t575 + t596 * t1144 + t314 * t626 + t315 * t539;
t281 = -t1165 * t315 + t314 * t729;
t435 = 0.1e1 / pkin(8);
t595 = t720 * t623;
t591 = t435 * t595;
t708 = t435 * t716;
t188 = t196 * t708 - t281 * t591;
t280 = -pkin(4) * t646 - t315 * t314;
t1158 = 0.1e1 / t280;
t277 = 0.1e1 / t280 ^ 2;
t278 = t1158 * t277;
t279 = t281 ^ 2;
t243 = t277 * t279 + 0.1e1;
t241 = 0.1e1 / t243;
t718 = pkin(8) * t722;
t712 = t241 * t718;
t699 = -0.2e1 * t277 * t712;
t195 = pkin(4) * t1226 + t314 * t627 + t315 * t618;
t187 = t195 * t708 - t280 * t591;
t703 = t187 * t712;
t1217 = 0.4e1 * t278 * t281 * t703 + t188 * t699;
t436 = 0.1e1 / pkin(6);
t1268 = (t1152 * t827 + t1278) * t436;
t1267 = t1288 * t1159;
t223 = sin(t512);
t1040 = qJD(1) * t431;
t1041 = qJD(1) * t426;
t390 = -t1040 * t430 + t1041 * t425;
t394 = t425 * t431 + t426 * t430;
t391 = t394 * qJD(1);
t508 = cos(t512);
t1232 = -t223 * t391 - t508 * t390;
t173 = qJD(4) + t1232;
t1034 = qJD(4) * t173;
t1189 = t492 * t716 - t562 * t715;
t561 = t563 * t715;
t475 = t1189 * t1095 + (-t719 * t493 / 0.2e1 + t561) * t1094;
t476 = (t493 * t716 - t561) * t1095 + t1189 * t1094;
t513 = t546 * t550;
t547 = t545 * t546;
t514 = t548 * t547;
t457 = (t475 * t514 + t476 * t513) * t1280;
t455 = t457 * t513;
t456 = t545 * t457;
t1179 = t1094 * t1273 - t1095 * t1274;
t1180 = t1094 * t1274 + t1095 * t1273;
t1054 = 0.2e1 * t1145;
t1218 = t1215 * t1054;
t1176 = qJD(3) * t811 + t807 * t1293 + t393 * t745 - t814 * t922;
t918 = pkin(1) * t923;
t903 = pkin(5) * t918;
t895 = t1152 * t903;
t885 = t1163 * t895;
t1204 = qJD(3) * t854 + t425 * t885;
t1198 = t1153 * t374;
t371 = -0.8e1 * t1164 * t898 - 0.2e1 * t1271 * t922;
t304 = t766 * t1198 / 0.4e1 + t371 * t911 + t763 + (t966 * t1243 - t922 * t1247) * t1146 + (pkin(5) * t989 - t860) * t923;
t917 = pkin(1) * t922;
t306 = t823 + 0.4e1 * t892 + (-t966 * t772 - t922 * t989 + t906 + (t1029 * t371 - t777 * t1198 / 0.4e1) * t393 - t917 * t1242) * pkin(5);
t868 = t430 * t885;
t246 = qJD(3) * t847 + t1176 * t425 + t1204 * t352 - t1287 * t430 + t304 * t856 + t306 * t855 - t350 * t868;
t1036 = qJD(3) * t425;
t247 = t304 * t854 + t306 * t856 + (t1036 * t877 + t868) * t352 + t1204 * t350 + t1176 * t430 + t1287 * t425;
t231 = -t246 * t986 - t247 * t985;
t614 = 0.8e1 * t631 * t1193;
t183 = t1218 * t231 + t294 * t614;
t230 = t246 * t985 - t247 * t986;
t544 = t660 * t551;
t528 = t725 * t544 / 0.4e1;
t573 = t631 * t1291;
t611 = t626 * t1241;
t620 = t1162 * t627;
t613 = 0.2e1 * t620;
t124 = t183 * t637 + t230 * t704 + t231 * t726 + t245 * t528 + t293 * t613 + t294 * t611 + (-t1165 * t231 + t245 * t573 + t294 * t539) * pkin(3);
t1263 = -0.2e1 * t547;
t473 = t509 * t475;
t474 = t509 * t476;
t1253 = t550 * t473 * t1263 - t546 * t474;
t1252 = -t731 * t544 / 0.4e1 + t630 * t649;
t612 = -0.4e1 * t620;
t129 = t294 * t612 + t1214 * t231 + (-t1165 * t230 + t1252 * t245 + t183 * t645 + t293 * t539) * pkin(3);
t469 = t546 * t473;
t593 = t1159 * t595;
t584 = t1094 * t593;
t585 = t1095 * t593;
t460 = t483 * (t1180 * t294 + t1224 * t231 + t124 * t690 + t129 * t689 - t198 * t584 - t200 * t585) + t149 * t469 - (t1179 * t294 + t1223 * t231 + t124 * t689 + t129 * t691 + t198 * t585 - t200 * t584) * t477 + t1253 * t148;
t17 = t148 * t455 - t149 * t456 + t460;
t1010 = t223 * t425 * pkin(1);
t216 = qJD(2) * t1010;
t1106 = pkin(1) * qJD(2);
t1007 = t430 * t1106;
t416 = qJD(2) + qJD(3);
t396 = pkin(4) * t416 - t1007;
t178 = t508 * t396 + t216;
t101 = t550 * t469 + t474 * t545;
t468 = t101 + t416;
t86 = -pkin(9) * t468 - t178;
t524 = t1183 * t430 - t1184 * t425;
t1181 = -t1165 * t524 - t1282 * t731 - t630 * t542;
t1261 = -0.2e1 * t631;
t1172 = (pkin(3) * t1181 + 0.4e1 * t629 * t1143 + t522 * t1245 - t525 * t704) * t717 / 0.2e1 + t489 * t1261 + t1267 * t601;
t1244 = -0.2e1 * t731;
t1227 = t525 * t1244 + 0.4e1 * t631 * t630;
t1228 = -t1165 * t525 + t631 * t542;
t1182 = (t1228 * pkin(3) + t1227 * t1143 + t1282 * t725 + t524 * t704) * t710 + t490 * t1261 + t1267 * t602;
t415 = qJDD(2) + qJDD(3);
t453 = -t415 + (t1094 * t1182 - t1095 * t1172) * t477 + (-t1172 * t1094 - t1182 * t1095) * t483 + (-0.2e1 * t469 + t456) * t476 + (t484 * t1263 * t475 + t455) * t475;
t507 = pkin(1) * t508;
t500 = qJD(2) * t507;
t498 = t425 * t500;
t1229 = -t223 * t396 + t498;
t1105 = pkin(1) * qJD(3);
t1003 = qJD(2) * t1105;
t1093 = pkin(1) * qJDD(2);
t1231 = t430 * t1003 + t425 * t1093;
t1025 = qJDD(2) * t430;
t403 = t425 * t1003;
t387 = -pkin(1) * t1025 + pkin(4) * t415 + t403;
t48 = t101 * t1229 + t1231 * t223 + t387 * t508;
t16 = pkin(9) * t453 - t48;
t915 = t16 + t1283;
t409 = -pkin(1) * t430 + pkin(4);
t501 = t425 * t507;
t181 = t223 * t409 - t501;
t96 = t107 * pkin(11) + t181;
t1266 = t1034 * t96 + t107 * t915 + t17 * t86;
t1129 = pkin(4) * t223;
t114 = pkin(11) * t125 + t1129;
t1035 = qJD(3) * t430;
t960 = -t425 * t739 / 0.2e1 + t430 * t734 + t366 + t793 * t1036 + t795 * t1035;
t286 = -t985 * t960 + t1269 + (t801 * t985 - t674) * qJD(2);
t232 = t1218 * t286 + t318 * t614;
t285 = -t986 * t960 - t1270 + (t801 * t986 + t673) * qJD(2);
t144 = t232 * t637 + t285 * t704 + t286 * t726 + t287 * t528 + t317 * t613 + t318 * t611 + (-t1165 * t286 + t287 * t573 + t318 * t539) * pkin(3);
t145 = t318 * t612 + t1214 * t286 + (-t1165 * t285 + t1252 * t287 + t232 * t645 + t317 * t539) * pkin(3);
t459 = t483 * (t1180 * t318 + t1224 * t286 + t144 * t690 + t145 * t689 - t234 * t584 - t235 * t585) + t185 * t469 - (t1179 * t318 + t1223 * t286 + t144 * t689 + t145 * t691 + t234 * t585 - t235 * t584) * t477 + t1253 * t184;
t28 = t184 * t455 - t185 * t456 + t459;
t1265 = t1034 * t114 + t125 * t915 + t28 * t86;
t1264 = -0.4e1 * t241;
t242 = 0.1e1 / t243 ^ 2;
t1239 = pkin(8) * t242;
t1080 = t277 * t281;
t1002 = t187 * t1080;
t701 = t722 * t1002;
t681 = 0.2e1 * t701 * t1239;
t1087 = t188 * t1158;
t709 = t722 * t1087;
t686 = -0.2e1 * t709 * t1239;
t1258 = 0.2e1 * t686 + 0.2e1 * t681;
t1257 = (-t475 * t513 - t476 * t545) * t1280;
t19 = t460 + (-t148 * t514 + t149 * t513) * t1257;
t1237 = t17 - t19;
t30 = t459 + (-t184 * t514 + t185 * t513) * t1257;
t1236 = t28 - t30;
t1027 = qJDD(1) * t394;
t957 = t425 * t426 - t430 * t431;
t943 = t957 * qJD(3);
t845 = qJD(2) * t957 + t943;
t379 = qJD(1) * t845 - t1027;
t1192 = t957 * qJDD(1);
t846 = t416 * t394;
t839 = t846 * qJD(1);
t819 = t839 + t1192;
t55 = t101 * t1232 - t223 * t819 - t379 * t508;
t1256 = qJD(4) * t468 - t55;
t384 = t904 + t1045;
t389 = pkin(1) * t966 - pkin(5);
t372 = -pkin(1) * t1062 - t389 * t384;
t373 = t1133 * t384 - t389 * t437;
t428 = sin(pkin(15));
t433 = cos(pkin(15));
t874 = t433 * t886;
t363 = (t373 * t428 * t886 + t372 * t874) * t436;
t358 = 0.1e1 / t363 ^ 2;
t875 = t428 * t887;
t364 = (t372 * t875 + t373 * t874) * t436;
t1066 = t358 * t364;
t342 = atan2(t362, t361);
t331 = sin(t342);
t1039 = qJD(2) * t331;
t1009 = pkin(1) * t1039;
t335 = 0.1e1 / t339;
t1076 = t335 * t353;
t997 = t335 * t1069;
t264 = t1076 * t299 - t300 * t997;
t1083 = t264 * t331;
t423 = cos(pkin(18));
t1130 = pkin(3) * t423;
t268 = t1076 * t307 - t335 * t750;
t1255 = -pkin(1) * t1083 + t1009 * t268 + t1053 * t1130;
t332 = cos(t342);
t1038 = qJD(2) * t332;
t1008 = pkin(1) * t1038;
t1082 = t264 * t332;
t421 = sin(pkin(18));
t1131 = pkin(3) * t421;
t1254 = pkin(1) * t1082 - t1008 * t268 + t1053 * t1131;
t180 = t508 * t409 + t1010;
t1006 = t223 * t1105;
t499 = qJD(3) * t507;
t1107 = t1006 * t430 - t101 * t181 - t1229 * t108 + t425 * t499;
t1249 = 0.2e1 * t335;
t1248 = 0.2e1 * t389;
t267 = t268 + 0.1e1;
t59 = t425 * t1006 + t101 * t180 - t430 * t499;
t67 = t178 * t108;
t1108 = t59 - t67;
t506 = t508 * pkin(4);
t502 = t101 * t506;
t497 = t430 * t500;
t72 = t126 * t178 + t216 - t497;
t1235 = t502 - t72;
t981 = t391 * t416;
t1191 = -g(1) * t427 + g(2) * t432;
t1234 = t1191 * t218;
t1233 = t1007 * t223 + t101 * t1129 + t1229 * t126 + t498;
t177 = t223 * t957 - t508 * t394;
t1128 = pkin(4) * t314;
t648 = t315 * t649;
t727 = t1144 * t1244;
t598 = -pkin(4) * t650 + t1128 * t317 + t287 * t648 + t318 * t727;
t706 = t318 * t715;
t567 = t281 * t706 + t598 * t716;
t566 = pkin(8) * t435 * t1158 * t567;
t1196 = t315 * t1054 - t1128;
t233 = pkin(4) * t1220 + t1196 * t318;
t667 = t233 * t716 + t280 * t706;
t711 = t435 * t718;
t702 = t281 * t711;
t639 = t667 * t702;
t1225 = -t277 * t639 + t722 * t566;
t1222 = t1288 * t435;
t1124 = pkin(8) * t241;
t610 = t623 * t1124;
t607 = -0.4e1 * t610 * t1080;
t684 = t435 * t699;
t1221 = t196 * t684 + t435 * t607;
t1209 = t1268 * t433;
t1208 = t1268 * t428;
t1202 = 0.4e1 * (t1002 - t1087) * t1124 * t1145;
t414 = cos(t419);
t406 = g(3) * t414;
t413 = sin(t419);
t1201 = -t399 * t413 + t406;
t298 = t331 * t431 + t332 * t426;
t296 = t298 * qJD(1);
t1115 = t431 * pkin(1);
t407 = pkin(13) + t1115;
t398 = t407 * qJD(1);
t263 = qJD(2) + t264;
t175 = t223 * t390 - t508 * t391;
t176 = -t223 * t394 - t508 * t957;
t665 = atan2(t281 * t708, t280 * t708);
t240 = cos(t665);
t662 = sin(t665);
t222 = -t423 * t240 - t421 * t662;
t1063 = t390 * t416;
t1195 = -t379 + t1027 - t1063;
t1190 = t425 ^ 2 + t430 ^ 2;
t1079 = t278 * t279;
t146 = -0.2e1 * t1079 * t195 + 0.2e1 * t1080 * t196;
t1185 = 0.2e1 * t146 * t242;
t47 = -qJD(3) * t497 - qJDD(2) * t501 + t101 * t178 + t223 * t387;
t1174 = -t47 + t1284;
t1173 = t48 - t1283;
t357 = 0.1e1 / t363;
t1142 = pkin(5) * t1164;
t1137 = -t1237 * pkin(9) - t1107;
t1134 = pkin(1) * t384;
t330 = qJ(2) + t342;
t329 = pkin(18) - t330;
t1132 = pkin(3) * cos(t329);
t1127 = pkin(4) * t391;
t1126 = pkin(4) * t413;
t1117 = g(3) * t431;
t1116 = t426 * pkin(1);
t424 = sin(qJ(4));
t429 = cos(qJ(4));
t83 = t175 * t424 - t429 * t468;
t85 = t429 * t175 + t424 * t468;
t1114 = t83 * t85;
t1113 = -t1236 * pkin(9) + t1233;
t1086 = t195 * t278;
t197 = pkin(4) * t1219 + t1196 * t294;
t199 = -pkin(4) * t652 + t1128 * t293 + t245 * t648 + t294 * t727;
t608 = 0.4e1 * t1158 * t610;
t707 = t294 * t715;
t669 = t197 * t716 + t280 * t707;
t640 = t669 * t702;
t636 = t277 * t640;
t668 = t199 * t716 + t281 * t707;
t638 = t1158 * t668 * t711;
t680 = t195 * t684;
t688 = t187 * t699;
t1112 = t199 * t688 + t1202 * t294 + t1217 * t197 + (-t1079 * t197 + t1080 * t199) * t1258 + t1086 * t640 * t1264 - t1221 * t669 - (t435 * t608 + t680) * t668 - (t636 - t638) * t1185 - t1053;
t597 = t277 * t598;
t1111 = -0.2e1 * t597 * t703 + t1202 * t318 + t1217 * t233 + (-t1079 * t233 + t281 * t597) * t1258 - t567 * t680 - t1221 * t667 + (t1086 * t639 + t566 * t623) * t1264 + t1225 * t1185;
t633 = t241 * t636;
t634 = t241 * t638;
t139 = 0.2e1 * t634 - 0.2e1 * t633;
t105 = t222 * t139;
t647 = -t240 * t421 + t423 * t662;
t106 = t647 * t139;
t252 = t1131 * t263 + t1009;
t253 = t1130 * t263 + t1008;
t257 = pkin(1) * t331 + t1131 * t267;
t258 = pkin(1) * t332 + t1130 * t267;
t666 = 0.2e1 * t709 - 0.2e1 * t701;
t632 = t662 * t666;
t664 = t240 * t666;
t97 = (-t421 * t632 - t423 * t664) * t1124;
t98 = (-t421 * t664 + t423 * t632) * t1124;
t1110 = -t105 * t253 - t106 * t252 + t1254 * t222 - t1255 * t647 + t257 * t98 + t258 * t97;
t1109 = t105 * t252 - t106 * t253 + t1254 * t647 + t1255 * t222 - t257 * t97 + t258 * t98;
t1033 = qJD(4) * t424;
t13 = t1033 * t175 - t1256 * t429 + t424 * t453;
t1104 = t13 * t424;
t1103 = t13 * t429;
t1032 = qJD(4) * t429;
t14 = t1032 * t175 + t1256 * t424 + t429 * t453;
t1102 = t14 * t424;
t1101 = t14 * t429;
t56 = t101 * t175 + t223 * t379 - t508 * t819;
t54 = qJDD(4) + t56;
t1100 = t177 * t54;
t1099 = t424 * t83;
t1098 = t424 * t85;
t1097 = t429 * t83;
t1096 = t429 * t85;
t1092 = qJD(4) * t86;
t1091 = t107 * t424;
t1090 = t107 * t429;
t1089 = t125 * t424;
t1088 = t125 * t429;
t349 = (t946 + (pkin(5) * t1248 - t384 + t989) * t393) * pkin(1);
t351 = t389 * t989 + (pkin(5) * t1022 - t384 * t966 - t1062) * pkin(1);
t873 = t436 * t886;
t851 = t433 * t873;
t853 = t436 * t875;
t972 = t393 * t436 * t1019;
t955 = t433 * t972;
t956 = t428 * t972;
t308 = t349 * t853 + t351 * t851 - t372 * t956 + t373 * t955;
t852 = t428 * t873;
t309 = t349 * t851 + t351 * t852 + t372 * t955 + t373 * t956;
t360 = t364 ^ 2;
t343 = t358 * t360 + 0.1e1;
t340 = 0.1e1 / t343;
t269 = (-t1066 * t309 + t308 * t357) * t340;
t434 = qJD(1) ^ 2;
t1081 = t269 * t434;
t1078 = t331 * t426;
t1077 = t332 * t431;
t344 = atan2(t364, t363);
t337 = sin(t344);
t338 = cos(t344);
t1073 = t337 * t338;
t341 = 0.1e1 / t343 ^ 2;
t1071 = t341 * t357;
t359 = t357 * t358;
t1065 = t359 * t360;
t1064 = t390 * t391;
t1060 = t424 * t427;
t1059 = t424 * t432;
t1056 = t427 * t429;
t1055 = t429 * t432;
t347 = t1251 * pkin(1) + t903 * t1248 - t384 * t918;
t348 = -pkin(1) * t906 - 0.2e1 * t908 * t1142 - t384 * t917 + t389 * t772;
t880 = t436 * t895;
t865 = t433 * t880;
t867 = t428 * t880;
t301 = t347 * t851 + t348 * t852 + t372 * t865 + t373 * t867;
t302 = t347 * t853 + t348 * t851 - t372 * t867 + t373 * t865;
t271 = -0.2e1 * t1065 * t301 + 0.2e1 * t1066 * t302;
t275 = -0.2e1 * t1065 * t309 + 0.2e1 * t1066 * t308;
t998 = t302 * t1071;
t1052 = -t271 * t308 * t1071 + t275 * t998 + (t271 * t309 - t275 * t301) * t341 * t1066;
t333 = t337 ^ 2;
t334 = t338 ^ 2;
t1049 = t333 - t334;
t1047 = t399 * t1116;
t417 = t426 ^ 2;
t418 = t431 ^ 2;
t1046 = t417 - t418;
t1043 = pkin(7) * qJDD(1);
t999 = t301 * t1066;
t266 = (t302 * t357 - t999) * t340;
t1042 = qJD(1) * t266;
t1037 = qJD(2) * t431;
t1031 = qJDD(1) * pkin(13);
t1028 = qJD(1) * qJD(2);
t1026 = qJDD(1) * t407;
t1024 = t426 * qJDD(1);
t1023 = t431 * qJDD(1);
t1017 = 0.2e1 * qJD(1);
t1005 = t390 * t1106;
t412 = t426 * t1106;
t411 = pkin(1) * t1041;
t995 = t426 * t434 * t431;
t992 = t331 * t1041;
t323 = t332 * t1040;
t987 = t431 * t1028;
t383 = t411 - t1127;
t984 = 0.2e1 * pkin(7) * t1042;
t982 = -0.2e1 * pkin(13) * t1028;
t405 = qJD(2) * t411;
t388 = t405 - t1026;
t979 = -t388 + t1026;
t941 = -t270 * t1001 + t1076 * (t1177 * t420 + t1178 * t422) + qJDD(2) - (-t1177 * t422 + t1178 * t420) * t997;
t189 = (t270 * t996 + (-t1290 + t1292) * t1249) * t300 + t941;
t978 = qJDD(2) * t267 + t189;
t976 = t1073 * t1081;
t975 = t1042 * t1073;
t973 = t426 * t987;
t971 = -pkin(4) * t414 + t1115;
t970 = -pkin(9) * t219 - pkin(11) * t218;
t967 = t263 * t1078;
t382 = -pkin(4) * t390 - t398;
t140 = pkin(9) * t1232 - pkin(11) * t175 + t382;
t87 = pkin(11) * t468 - t1229;
t74 = t140 * t429 - t424 * t87;
t75 = t140 * t424 + t429 * t87;
t965 = t424 * t75 + t429 * t74;
t964 = -t424 * t74 + t429 * t75;
t963 = t1097 + t1098;
t962 = -t1096 + t1099;
t959 = t263 * t268 - t264 * t267;
t295 = -t323 + t992;
t958 = t295 * t332 - t296 * t331;
t15 = -pkin(11) * t453 + t47;
t951 = -qJD(4) * t140 - t1119 - t15;
t949 = t1041 * t398 - t1117;
t64 = t107 * t1232;
t9 = -t429 * t19 - t424 * t64;
t942 = t1033 * t107 - t17 * t429 - t9;
t940 = -pkin(7) * t434 + t399;
t939 = pkin(13) * t434 + t399;
t10 = t19 * t424 - t429 * t64;
t938 = t1032 * t107 + t17 * t424 - t10;
t70 = t125 * t1232;
t20 = -t429 * t30 - t424 * t70;
t937 = t1033 * t125 - t28 * t429 - t20;
t21 = t30 * t424 - t429 * t70;
t936 = t1032 * t125 + t28 * t424 - t21;
t935 = qJD(1) * t1052 + qJDD(1) * t269;
t933 = t1191 + 0.2e1 * t1043;
t932 = -t1191 + 0.2e1 * t1031;
t7 = t17 * pkin(11) + t59;
t929 = t107 * t1092 - t173 * t7 - t54 * t96;
t25 = t28 * pkin(11) + t502;
t928 = t1092 * t125 - t114 * t54 - t173 * t25;
t386 = -pkin(4) * t957 - t407;
t141 = t176 * pkin(9) - t177 * pkin(11) + t386;
t57 = t101 * t176 - t223 * t846 - t508 * t845;
t927 = -t1034 * t141 + t16 * t177 - t57 * t86;
t381 = -pkin(4) * t846 + t412;
t58 = t101 * t177 + t223 * t845 - t508 * t846;
t35 = t58 * pkin(9) + t57 * pkin(11) + t381;
t926 = t1092 * t177 + t141 * t54 + t173 * t35;
t238 = -t665 + t329;
t236 = sin(t238);
t237 = cos(t238);
t171 = t189 * t1130 + (qJDD(2) * t332 - t1039 * t264) * pkin(1);
t172 = t189 * t1131 + (qJDD(2) * t331 + t1038 * t264) * pkin(1);
t43 = -t171 * t647 + t172 * t222 + t252 * t98 + t253 * t97;
t913 = g(3) * t236 - t237 * t399 - t43;
t44 = t171 * t222 + t172 * t647 - t252 * t97 + t253 * t98;
t912 = g(3) * t237 + t236 * t399 + t44;
t910 = 0.2e1 * t398 * t416;
t909 = -0.2e1 * t981;
t896 = -t391 * t398 + t1201 + t403;
t377 = -pkin(4) * t839 + qJDD(1) * t386 + t405;
t34 = t56 * pkin(9) + t55 * pkin(11) + t377;
t1 = qJD(4) * t74 + t15 * t429 + t34 * t424;
t33 = t429 * t34;
t2 = -qJD(4) * t75 - t15 * t424 + t33;
t889 = -qJD(4) * t965 + t1 * t429 - t2 * t424;
t888 = -qJD(4) * t963 - t1102 - t1103;
t872 = -g(3) * t971 - (-t1116 + t1126) * t399;
t861 = -g(3) * t413 + t390 * t398 - t399 * t414 + t1231;
t850 = 0.2e1 * t865;
t227 = t263 * t298;
t832 = t889 - t1284;
t828 = -g(3) * t970 - t399 * (pkin(9) * t218 - pkin(11) * t219);
t698 = 0.2e1 * t1158 * t712;
t685 = t281 * t699;
t590 = -0.2e1 * t591;
t395 = pkin(13) + t971;
t380 = -t390 ^ 2 + t391 ^ 2;
t378 = -t398 * t412 + (-t388 - t1191) * t407;
t376 = t819 - t981;
t375 = t379 - t1063;
t328 = cos(t330);
t327 = sin(t330);
t313 = pkin(1) * t1175 - t1134 * t834 + 0.4e1 * t1142 * t1194 + t827 * t1248;
t312 = t1206 * pkin(1) + t1134 * t833 + t1205 * t1142 - t1281 * t389;
t297 = -t1077 + t1078;
t289 = (t297 * t423 - t298 * t421) * pkin(3) - t407;
t288 = -t398 + (t295 * t423 - t296 * t421) * pkin(3);
t265 = t266 ^ 2;
t229 = t267 * t296;
t228 = t267 * t992 - t268 * t323 - t323;
t226 = -t1037 * t332 - t1077 * t264 + t967;
t225 = qJD(1) * t227 - t1023 * t332 + t1024 * t331;
t224 = qJD(1) * t967 - t1023 * t331 - t264 * t323 + (-t1024 - t987) * t332;
t212 = t1055 * t219 - t1060;
t211 = t1059 * t219 + t1056;
t210 = t1056 * t219 + t1059;
t209 = t1060 * t219 - t1055;
t194 = t411 + (t228 * t421 + t229 * t423) * pkin(3);
t193 = t412 + (t226 * t421 + t227 * t423) * pkin(3);
t191 = (t224 * t421 + t225 * t423) * pkin(3) + t388;
t190 = (t341 * t999 - t998) * t271 + ((-t1208 * t372 + t1209 * t373 + t312 * t851 + t313 * t853 - 0.2e1 * t347 * t867 + t348 * t850) * t357 - (t1208 * t373 + t1209 * t372 + t312 * t852 + t313 * t851 + t347 * t850 + 0.2e1 * t348 * t867) * t1066 + (0.2e1 * t359 * t364 * t301 - 0.2e1 * t302 * t358) * t301) * t340;
t165 = t222 * t298 + t297 * t647;
t164 = -t222 * t297 + t298 * t647;
t163 = t222 * t296 + t295 * t647;
t162 = -t222 * t295 + t296 * t647;
t155 = t222 * t257 - t258 * t647;
t154 = t222 * t258 + t257 * t647;
t153 = t222 * t252 - t253 * t647;
t152 = t222 * t253 + t252 * t647;
t147 = 0.2e1 * t1225 * t241;
t138 = t267 - 0.2e1 * t633 + 0.2e1 * t634;
t135 = t187 * t685 + t188 * t698 + t263;
t120 = t647 * t147;
t119 = t222 * t147;
t115 = -t125 * pkin(9) - t506;
t95 = -t107 * pkin(9) - t180;
t79 = -t119 * t296 - t120 * t295;
t78 = -t119 * t295 + t120 * t296;
t77 = -t119 * t252 + t120 * t253;
t76 = t119 * t253 + t120 * t252;
t71 = t125 * t175;
t65 = t107 * t175;
t63 = -t105 * t296 - t106 * t295 - t222 * t229 - t228 * t647;
t62 = -t105 * t295 + t106 * t296 - t222 * t228 + t229 * t647;
t52 = -t222 * t227 - t226 * t647 - t297 * t98 - t298 * t97;
t51 = -t222 * t226 + t227 * t647 - t297 * t97 + t298 * t98;
t50 = -t222 * t225 - t224 * t647 - t295 * t98 - t296 * t97;
t49 = -t222 * t224 + t225 * t647 - t295 * t97 + t296 * t98;
t40 = pkin(9) * t71 + pkin(11) * t70 - t1127;
t37 = pkin(9) * t65 + pkin(11) * t64 + t383;
t36 = t270 * t977 + ((t1228 * pkin(4) + t1128 * t524 + t1227 * t1144 - t1282 * t315) * t708 + t196 * t590 + t1222 * t281) * t698 + t188 * t608 + (t1222 * t280 + (0.4e1 * pkin(3) * t624 + t1181 * pkin(4) - t314 * t523 + t315 * t521) * t708) * t685 + t196 * t688 + t187 * t607 + t941 + (t590 * t685 + t1217) * t195 + (t686 + t681) * t146 + (t1249 * t1292 - 0.2e1 * t335 * t1290) * t300;
t22 = t30 * pkin(11) + t72;
t11 = pkin(11) * t19 + t67;
t6 = t22 * t429 + t40 * t424;
t5 = -t22 * t424 + t40 * t429;
t4 = t11 * t429 + t37 * t424;
t3 = -t11 * t424 + t37 * t429;
t8 = [0, 0, 0, 0, 0, qJDD(1), -t1191, t399, 0, 0, qJDD(1) * t417 + 0.2e1 * t973, -qJD(2) * t1017 * t1046 + 0.2e1 * t1023 * t426, qJDD(2) * t426 + t1149 * t431, qJDD(1) * t418 - 0.2e1 * t973, qJDD(2) * t431 - t1149 * t426, 0, t426 * t982 + t431 * t932, -t426 * t932 + t431 * t982, -t399, (-t1191 + t1031) * pkin(13), -t379 * t394 - t391 * t845, (t1195 * t431 + t909 * t426) * t430 + (-t1195 * t426 + t909 * t431) * t425, -t415 * t394 + t416 * t845, t390 * t846 + t819 * t957, t415 * t957 + t416 * t846, 0, t1191 * t414 + (t425 * t910 - t430 * t979) * t431 + (t425 * t979 + t430 * t910 - t1005) * t426, -t407 * t379 - t388 * t394 - t1191 * t413 - t398 * t943 + (-t1116 * t391 - t398 * t957) * qJD(2), ((-t430 * t394 - t425 * t957) * qJDD(2) - t1190 * qJD(2) * t1037) * pkin(1) - t399, t378, -t175 * t57 - t177 * t55, t1232 * t57 - t175 * t58 + t176 * t55 - t177 * t56, -t177 * t453 - t468 * t57, t1232 * t58 + t176 * t56, t176 * t453 - t468 * t58, 0, t1191 * t219 + t1232 * t381 + t176 * t377 + t382 * t58 + t386 * t56, t175 * t381 + t177 * t377 - t382 * t57 - t386 * t55 - t1234, t1229 * t58 - t176 * t47 - t177 * t48 + t178 * t57 - t399, -t1191 * t395 + t377 * t386 + t381 * t382, -t57 * t1096 + (-t1033 * t85 - t1103) * t177, t963 * t57 + (qJD(4) * t962 - t1101 + t1104) * t177, t429 * t1100 - t13 * t176 + t58 * t85 + (-t1033 * t177 - t429 * t57) * t173, -t57 * t1099 + (t1032 * t83 + t1102) * t177, -t424 * t1100 - t14 * t176 - t58 * t83 + (-t1032 * t177 + t424 * t57) * t173, t173 * t58 + t176 * t54, -g(1) * t210 + g(2) * t212 + t176 * t2 + t424 * t927 + t429 * t926 + t58 * t74, g(1) * t209 - g(2) * t211 - t1 * t176 - t424 * t926 + t429 * t927 - t58 * t75, t1234 + (t13 * t141 - t177 * t2 - t35 * t85 + t57 * t74 + (-t141 * t83 - t177 * t75) * qJD(4)) * t429 + (-t1 * t177 - t14 * t141 - t35 * t83 + t57 * t75 + (t141 * t85 + t177 * t74) * qJD(4)) * t424, t965 * t35 + (qJD(4) * t964 + t1 * t424 + t2 * t429) * t141 + t1191 * (-t395 - t970), qJDD(1) * t333 + 0.2e1 * t975, -t1017 * t1049 * t266 + 0.2e1 * qJDD(1) * t1073, t190 * t337 + t265 * t338, qJDD(1) * t334 - 0.2e1 * t975, t190 * t338 - t265 * t337, 0, t337 * t984 - t338 * t933, t337 * t933 + t338 * t984, -t399, (t1191 + t1043) * pkin(7), -t224 * t298 - t226 * t296, t224 * t297 - t225 * t298 + t226 * t295 - t227 * t296, t189 * t298 - t226 * t263, t225 * t297 + t227 * t295, -t189 * t297 - t227 * t263, 0, -t1191 * t328 - t225 * t407 - t227 * t398 + t295 * t412 + t297 * t388, t1191 * t327 + t224 * t407 + t226 * t398 + t296 * t412 + t298 * t388, ((-t297 * t331 - t298 * t332) * qJDD(2) + (t226 * t332 - t227 * t331 + (-t297 * t332 + t298 * t331) * t264) * qJD(2)) * pkin(1) - t399, t378, t163 * t51 + t165 * t49, t162 * t51 + t163 * t52 + t164 * t49 + t165 * t50, t135 * t51 + t165 * t36, t162 * t52 + t164 * t50, t135 * t52 + t164 * t36, 0, t1191 * t237 - t162 * t193 - t164 * t191 - t288 * t52 - t289 * t50, t1191 * t236 + t163 * t193 + t165 * t191 + t288 * t51 + t289 * t49, -t152 * t51 + t153 * t52 + t164 * t43 - t165 * t44 - t399, t191 * t289 + t193 * t288 - t1191 * (t407 + t1132); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t995, t1046 * t434, t1024, t995, t1023, qJDD(2), t426 * t939 - t1117, g(3) * t426 + t431 * t939, 0, 0, t1064, t380, t375, -t1064, t376, t415, (t390 * t1041 + t416 * t1036 + (-qJDD(2) - t415) * t430) * pkin(1) + t896, (t1035 * t416 + t1041 * t391 + t415 * t425) * pkin(1) + t861, -t430 * t1005 + ((-qJD(3) * t390 + t379) * t430 - t1192 * t425) * pkin(1), (t1093 * t1190 + t949) * pkin(1) + t1047, t175 * t64, -t1232 * t64 + t175 * t65, -t107 * t55 + t1237 * t175 + t468 * t64, -t1232 * t65, -t107 * t56 - t1232 * t1237 + t468 * t65, -t107 * t453 + t1237 * t468, t1173 * t107 + t1107 * t468 - t1232 * t383 + t1237 * t178 - t180 * t453 - t382 * t65, t1174 * t107 - t1108 * t468 + t1229 * t1237 - t383 * t175 + t181 * t453 + t382 * t64, -t1107 * t175 - t1108 * t1232 - t1229 * t65 - t178 * t64 + t180 * t55 - t181 * t56, t1107 * t178 - t1108 * t1229 + t48 * t180 + t47 * t181 - t382 * t383 + t872, -t1091 * t13 + t85 * t938, t10 * t83 + t107 * t888 - t17 * t962 + t85 * t9, t1091 * t54 + t173 * t938 - t65 * t85, -t1090 * t14 + t83 * t942, t1090 * t54 - t173 * t942 + t65 * t83, -t173 * t65, t1137 * t83 - t1266 * t429 + t14 * t95 - t173 * t3 + t929 * t424 - t65 * t74 - t86 * t9, -t10 * t86 + t1137 * t85 + t1266 * t424 - t13 * t95 + t173 * t4 + t929 * t429 + t65 * t75, t10 * t74 + t3 * t85 + t4 * t83 + t75 * t9 + (t17 * t75 - t7 * t83 + (qJD(4) * t85 - t14) * t96) * t429 + (-t17 * t74 + t7 * t85 + (qJD(4) * t83 - t13) * t96) * t424 + t832 * t107, t107 * t828 + t1137 * t86 + t16 * t95 - t74 * t3 - t75 * t4 + t7 * t964 + t889 * t96 + t872, -t976, t1049 * t1081, t935 * t337, t976, t935 * t338, t1052 * t266 + t190 * t269, (-g(3) * t338 + t337 * t940) * t269, (g(3) * t337 + t338 * t940) * t269, 0, 0, t296 * t228, -t228 * t295 + t229 * t296, t1053 * t296 - t224 * t267 + t228 * t263, -t295 * t229, -t1053 * t295 - t225 * t267 + t229 * t263, t1053 * t263 + t189 * t267, t229 * t398 + (-g(3) * t328 + t327 * t399) * t267 + (-t295 * t1041 - t263 * t1083 + t978 * t332 + (t1053 * t332 + t331 * t959) * qJD(2)) * pkin(1), -t228 * t398 + (g(3) * t327 + t328 * t399) * t267 + (-t296 * t1041 - t263 * t1082 - t978 * t331 + (-t1053 * t331 + t332 * t959) * qJD(2)) * pkin(1), (t224 * t332 - t225 * t331 - t958 * t264 + (-t228 * t332 + t229 * t331 + t268 * t958) * qJD(2)) * pkin(1), ((t331 ^ 2 + t332 ^ 2) * t1093 + t949) * pkin(1) + t1047, -t163 * t62, -t162 * t62 - t163 * t63, -t1112 * t163 - t135 * t62 + t138 * t49, -t162 * t63, -t1112 * t162 - t135 * t63 + t138 * t50, -t1112 * t135 + t138 * t36, t1109 * t135 - t1112 * t152 + t138 * t912 + t154 * t36 + t162 * t194 + t288 * t63, -t1110 * t135 + t1112 * t153 + t138 * t913 - t155 * t36 - t163 * t194 - t288 * t62, -t1109 * t163 + t1110 * t162 + t152 * t62 - t153 * t63 - t154 * t49 + t155 * t50, t43 * t155 + t44 * t154 - t288 * t194 - g(3) * (t1132 * t267 + t1115) - t399 * (pkin(3) * t267 * sin(t329) - t1116) + t1110 * t153 + t1109 * t152; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1064, t380, t375, -t1064, t376, t415, (-qJD(2) * t416 * t425 - t1025) * pkin(1) + t896, -t1007 * t416 + t861, 0, 0, t175 * t70, -t1232 * t70 + t175 * t71, t1236 * t175 - t125 * t55 + t468 * t70, -t1232 * t71, -t1232 * t1236 - t125 * t56 + t468 * t71, t1236 * t468 - t125 * t453, t1127 * t1232 + t1173 * t125 - t1233 * t468 + t1236 * t178 - t382 * t71 - t453 * t506, t1127 * t175 + t1129 * t453 + t1174 * t125 + t1229 * t1236 - t1235 * t468 + t382 * t70, -t1129 * t56 - t1229 * t71 - t1232 * t1235 + t1233 * t175 - t178 * t70 + t506 * t55, pkin(4) * t406 - t1126 * t399 + t1127 * t382 + t1129 * t47 - t1229 * t1235 - t1233 * t178 + t48 * t506, -t1089 * t13 + t85 * t936, t125 * t888 + t20 * t85 + t21 * t83 - t28 * t962, t1089 * t54 + t173 * t936 - t71 * t85, -t1088 * t14 + t83 * t937, t1088 * t54 - t173 * t937 + t71 * t83, -t173 * t71, t1113 * t83 + t115 * t14 - t1265 * t429 - t173 * t5 - t20 * t86 + t928 * t424 - t71 * t74, t1113 * t85 - t115 * t13 + t1265 * t424 + t173 * t6 - t21 * t86 + t928 * t429 + t71 * t75, t20 * t75 + t21 * t74 + t5 * t85 + t6 * t83 + t964 * t28 + (-t1097 + t1098) * t25 + (-t1104 - t1101 + (t1096 + t1099) * qJD(4)) * t114 + t832 * t125, pkin(4) * t1201 + t1113 * t86 + t889 * t114 + t16 * t115 + t828 * t125 + t964 * t25 - t74 * t5 - t75 * t6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t163 * t78, -t162 * t78 - t163 * t79, -t1111 * t163 - t135 * t78 + t147 * t49, -t162 * t79, -t1111 * t162 - t135 * t79 + t147 * t50, -t1111 * t135 + t147 * t36, -t1111 * t152 - t135 * t77 + t147 * t912 + t288 * t79, t1111 * t153 + t135 * t76 + t147 * t913 - t288 * t78, t152 * t78 - t153 * t79 - t162 * t76 + t163 * t77, -t152 * t77 - t153 * t76; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1114, -t83 ^ 2 + t85 ^ 2, t173 * t83 - t13, -t1114, t173 * t85 - t14, t54, -g(1) * t211 - g(2) * t209 - t1032 * t87 + t173 * t75 + t424 * t951 - t85 * t86 + t33, -g(1) * t212 - g(2) * t210 + t173 * t74 + t83 * t86 + (qJD(4) * t87 - t34) * t424 + t951 * t429, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
tau_reg = t8;
