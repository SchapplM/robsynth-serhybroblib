% Zeitableitung der rotatorischen Teilmatrix der geometrischen Jacobi-Matrix für beliebiges Segment von
% palh3m1DE2
% Use Code from Maple symbolic Code Generation
%
% Geometrische Jacobi-Matrix: Differentieller Zusammenhang zwischen
% Endeffektorgeschwindigkeit und Geschw. der verallgemeinerten Koordinaten.
% 
% 
% Input:
% qJ [4x1]
%   Generalized joint coordinates (joint angles)
% qJD [4x1]
%   Generalized joint velocities
% link_index [1x1 uint8]
%   Index des Segmentes, auf dem der Punkt C liegt. (0=Basis).
%   Siehe auch: bsp_3T1R_fkine_fixb_rotmat_mdh_sym_varpar.m
% pkin [19x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[AB,BC,BE,BG,DA,DC,DT2,EP,GH,GP,HW,OT1,T1A,T1T2,phi1,phi2,phi410,phi78,phi79]';
% 
% Output:
% JgD_rot [3x4]
%   Zeitableitung der rotatorischen Teilmatrix der geometrischen Jacobi-Matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2020-04-20 16:51
% Revision: bf71b3c88fbe513355f3920541c47e1db11bd916 (2020-04-17)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function JgD_rot = palh3m1DE2_jacobigD_rot_sym_varpar(qJ, qJD, link_index, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(4,1),zeros(4,1),uint8(0),zeros(19,1)}
assert(isreal(qJ) && all(size(qJ) == [4 1]), ...
  'palh3m1DE2_jacobigD_rot_sym_varpar: qJ has to be [4x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [4 1]), ...
  'palh3m1DE2_jacobigD_rot_sym_varpar: qJD has to be [4x1] (double)');
assert(isa(link_index,'uint8') && all(size(link_index) == [1 1]), ...
	'palh3m1DE2_jacobigD_rot_sym_varpar: link_index has to be [1x1] uint8');
assert(isreal(pkin) && all(size(pkin) == [19 1]), ...
  'palh3m1DE2_jacobigD_rot_sym_varpar: pkin has to be [19x1] (double)');
JgD_rot=NaN(3,4);
if link_index == 0
	%% Symbolic Calculation
	% From jacobigD_rot_0_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-20 16:20:42
	% EndTime: 2020-04-20 16:20:42
	% DurationCPUTime: 0.01s
	% Computational Cost: add. (0->0), mult. (0->0), div. (0->0), fcn. (0->0), ass. (0->1)
	t1 = [0, 0, 0, 0; 0, 0, 0, 0; 0, 0, 0, 0;];
	JgD_rot = t1;
elseif link_index == 1
	%% Symbolic Calculation
	% From jacobigD_rot_1_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-20 16:20:42
	% EndTime: 2020-04-20 16:20:42
	% DurationCPUTime: 0.01s
	% Computational Cost: add. (0->0), mult. (0->0), div. (0->0), fcn. (0->0), ass. (0->1)
	t1 = [0, 0, 0, 0; 0, 0, 0, 0; 0, 0, 0, 0;];
	JgD_rot = t1;
elseif link_index == 2
	%% Symbolic Calculation
	% From jacobigD_rot_2_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-20 16:20:42
	% EndTime: 2020-04-20 16:20:42
	% DurationCPUTime: 0.01s
	% Computational Cost: add. (0->0), mult. (2->2), div. (0->0), fcn. (2->2), ass. (0->1)
	t1 = [0, qJD(1) * cos(qJ(1)), 0, 0; 0, qJD(1) * sin(qJ(1)), 0, 0; 0, 0, 0, 0;];
	JgD_rot = t1;
elseif link_index == 3
	%% Symbolic Calculation
	% From jacobigD_rot_3_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-20 16:20:42
	% EndTime: 2020-04-20 16:20:42
	% DurationCPUTime: 0.01s
	% Computational Cost: add. (0->0), mult. (4->2), div. (0->0), fcn. (4->2), ass. (0->3)
	t36 = qJD(1) * cos(qJ(1));
	t35 = qJD(1) * sin(qJ(1));
	t1 = [0, t36, t36, 0; 0, t35, t35, 0; 0, 0, 0, 0;];
	JgD_rot = t1;
elseif link_index == 4
	%% Symbolic Calculation
	% From jacobigD_rot_4_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-20 16:22:02
	% EndTime: 2020-04-20 16:23:42
	% DurationCPUTime: 46.62s
	% Computational Cost: add. (1067500->212), mult. (1666316->433), div. (62252->14), fcn. (1041364->16), ass. (0->213)
	t506 = pkin(5) ^ 2;
	t510 = pkin(1) ^ 2;
	t614 = sin(qJ(2));
	t615 = sin(pkin(16));
	t616 = cos(qJ(2));
	t617 = cos(pkin(16));
	t489 = t614 * t615 - t616 * t617;
	t610 = pkin(5) * t489;
	t576 = -0.2e1 * pkin(1) * t610 + t510;
	t484 = t506 + t576;
	t481 = 0.1e1 / t484;
	t482 = 0.1e1 / t484 ^ 2;
	t640 = 0.4e1 * t481 * t482;
	t490 = t614 * t617 + t616 * t615;
	t487 = t490 * qJD(2);
	t509 = 0.1e1 / pkin(2);
	t480 = pkin(2) ^ 2 - pkin(6) ^ 2 + t484;
	t485 = pkin(1) - t610;
	t631 = -pkin(6) - pkin(2);
	t478 = (pkin(5) - t631) * (pkin(5) + t631) + t576;
	t630 = -pkin(6) + pkin(2);
	t479 = (pkin(5) - t630) * (pkin(5) + t630) + t576;
	t583 = t479 * t478;
	t512 = sqrt(-t583);
	t609 = pkin(5) * t490;
	t472 = t480 * t609 + t485 * t512;
	t503 = cos(qJ(3));
	t584 = t472 * t503;
	t579 = t490 * t512;
	t471 = -pkin(5) * t579 + t480 * t485;
	t501 = sin(qJ(3));
	t587 = t471 * t501;
	t534 = t584 / 0.2e1 + t587 / 0.2e1;
	t632 = pkin(1) * pkin(5);
	t574 = t482 * t632;
	t540 = 0.2e1 * (t478 + t479) * t632;
	t473 = t487 * t540;
	t488 = t489 * qJD(2);
	t636 = t490 * t506;
	t569 = t487 * t636;
	t552 = pkin(1) * t569;
	t476 = 0.1e1 / t512;
	t622 = t476 / 0.2e1;
	t562 = t485 * t622;
	t581 = t487 * t512;
	t459 = t473 * t562 - 0.2e1 * t552 + (-t488 * t480 - t581) * pkin(5);
	t593 = t459 * t501;
	t637 = t473 * t476;
	t464 = -t609 * t637 / 0.2e1;
	t608 = t485 * pkin(1);
	t558 = t480 + 0.2e1 * t608;
	t580 = t488 * t512;
	t458 = t464 + (-t558 * t487 + t580) * pkin(5);
	t594 = t458 * t503;
	t585 = t472 * t501;
	t586 = t471 * t503;
	t634 = t585 - t586;
	t434 = ((-t593 / 0.2e1 + t594 / 0.2e1 - t534 * qJD(3)) * t481 - t634 * t487 * t574) * t509;
	t541 = t584 + t587;
	t529 = t541 * t487;
	t535 = -t585 / 0.2e1 + t586 / 0.2e1;
	t592 = t459 * t503;
	t595 = t458 * t501;
	t435 = (t529 * t574 + (t592 / 0.2e1 + t595 / 0.2e1 + t535 * qJD(3)) * t481) * t509;
	t498 = pkin(18) + pkin(19);
	t494 = sin(t498);
	t495 = cos(t498);
	t430 = t434 * t495 - t435 * t494;
	t507 = pkin(4) ^ 2;
	t582 = t481 * t509;
	t462 = t535 * t582;
	t463 = t534 * t582;
	t453 = -t462 * t495 + t463 * t494;
	t611 = pkin(3) * t453;
	t633 = -2 * pkin(4);
	t578 = -t611 * t633 + t507;
	t629 = -pkin(8) - pkin(10);
	t443 = (pkin(3) - t629) * (pkin(3) + t629) + t578;
	t628 = -pkin(8) + pkin(10);
	t444 = (pkin(3) - t628) * (pkin(3) + t628) + t578;
	t598 = t444 * t443;
	t511 = sqrt(-t598);
	t639 = t430 * t511;
	t575 = 2 * pkin(4);
	t539 = pkin(3) * (t443 + t444) * t575;
	t421 = t430 * t539;
	t508 = pkin(3) ^ 2;
	t449 = t508 + t578;
	t445 = -pkin(8) ^ 2 + pkin(10) ^ 2 + t449;
	t450 = pkin(4) + t611;
	t557 = t450 * t633 - t445;
	t437 = 0.1e1 / t511;
	t543 = -t462 * t494 - t463 * t495;
	t623 = -t543 / 0.2e1;
	t566 = t437 * t623;
	t544 = -t434 * t494 - t435 * t495;
	t635 = t544 * t511;
	t403 = (t421 * t566 + t557 * t430 - t635) * pkin(3);
	t559 = t543 * t508 * t633;
	t624 = t437 / 0.2e1;
	t567 = t450 * t624;
	t404 = t421 * t567 + t430 * t559 + (t445 * t544 - t639) * pkin(3);
	t446 = 0.1e1 / t449;
	t505 = 0.1e1 / pkin(10);
	t596 = t446 * t505;
	t612 = pkin(3) * t543;
	t426 = t445 * t612 + t450 * t511;
	t499 = sin(pkin(17));
	t601 = t426 * t499;
	t425 = t445 * t450 - t511 * t612;
	t500 = cos(pkin(17));
	t602 = t425 * t500;
	t419 = (-t602 / 0.2e1 + t601 / 0.2e1) * t596;
	t416 = 0.1e1 / t419 ^ 2;
	t447 = 0.1e1 / t449 ^ 2;
	t573 = pkin(3) * pkin(4) * t447;
	t523 = (t601 - t602) * t573;
	t620 = -t500 / 0.2e1;
	t621 = t499 / 0.2e1;
	t638 = ((t403 * t620 + t404 * t621) * t446 + t430 * t523) * t505 * t416;
	t415 = 0.1e1 / t419;
	t627 = -t421 / 0.2e1;
	t474 = t490 * t540;
	t613 = pkin(1) * t506;
	t461 = t474 * t562 - 0.2e1 * t490 ^ 2 * t613 + (-t480 * t489 - t579) * pkin(5);
	t588 = t461 * t503;
	t548 = t474 * t622 + t480;
	t460 = (t489 * t512 + (-t548 - 0.2e1 * t608) * t490) * pkin(5);
	t591 = t460 * t501;
	t536 = t588 / 0.2e1 + t591 / 0.2e1;
	t555 = t490 * t574;
	t441 = (t536 * t481 + t541 * t555) * t509;
	t589 = t461 * t501;
	t590 = t460 * t503;
	t537 = -t589 / 0.2e1 + t590 / 0.2e1;
	t442 = (-t537 * t481 + t555 * t634) * t509;
	t433 = -t441 * t494 - t442 * t495;
	t422 = t433 * t539;
	t626 = -t422 / 0.2e1;
	t431 = t543 * t539;
	t625 = -t431 / 0.2e1;
	t619 = t500 / 0.2e1;
	t618 = t501 / 0.2e1;
	t600 = t426 * t500;
	t603 = t425 * t499;
	t522 = (t600 + t603) * t573;
	t396 = ((t403 * t621 + t404 * t619) * t446 + t430 * t522) * t505;
	t420 = (t600 / 0.2e1 + t603 / 0.2e1) * t596;
	t418 = t420 ^ 2;
	t409 = t416 * t418 + 0.1e1;
	t605 = t416 * t420;
	t606 = t415 * t638;
	t607 = 0.2e1 * (t396 * t605 - t418 * t606) / t409 ^ 2;
	t604 = t421 * t437 / t598;
	t599 = t430 * t508;
	t597 = t446 * t500;
	t502 = sin(qJ(1));
	t496 = qJD(1) * t502;
	t504 = cos(qJ(1));
	t497 = qJD(1) * t504;
	t571 = t507 * t599;
	t570 = 0.1e1 / t583 * t474 * t637;
	t568 = t604 / 0.4e1;
	t565 = t446 * t621;
	t564 = -t597 / 0.2e1;
	t563 = t597 / 0.2e1;
	t561 = t508 * t575;
	t560 = 0.4e1 * pkin(4) * t599;
	t407 = 0.1e1 / t409;
	t554 = t407 * t573;
	t553 = -0.8e1 * t571;
	t551 = t446 * t447 * t571;
	t550 = t510 * t569;
	t549 = -t543 * t604 / 0.4e1;
	t545 = t500 * t551;
	t538 = 0.4e1 * t499 * t551;
	t533 = -0.4e1 * t425 * t545;
	t532 = 0.4e1 * t426 * t545;
	t531 = t433 * t538;
	t530 = t543 * t538;
	t528 = -t407 * t638 - t415 * t607;
	t432 = -t441 * t495 + t442 * t494;
	t405 = (t422 * t566 - t432 * t511 + t557 * t433) * pkin(3);
	t470 = -t488 * t540 - 0.8e1 * t550;
	t439 = t464 + (t570 / 0.4e1 + t470 * t622) * t485 + (0.2e1 * t487 * t489 + 0.4e1 * t488 * t490) * t613 + (-t548 * t487 + t580) * pkin(5);
	t440 = 0.4e1 * t552 + (t581 - t490 * t570 / 0.4e1 + t558 * t488 + (t489 * t473 / 0.2e1 + t488 * t474 / 0.2e1 - t490 * t470 / 0.2e1) * t476) * pkin(5);
	t423 = (t634 * t550 * t640 + (-t440 * t503 / 0.2e1 + t439 * t618 + t536 * qJD(3)) * t481 + (-t634 * t488 - (-t589 + t590) * t487 + (t541 * qJD(3) + t593 - t594) * t490) * t574) * t509;
	t424 = (t510 * t529 * t636 * t640 + (t439 * t503 / 0.2e1 + t440 * t618 + t537 * qJD(3)) * t481 + (-t541 * t488 - (-t588 - t591) * t487 + (-qJD(3) * t634 + t592 + t595) * t490) * t574) * t509;
	t411 = -t423 * t495 - t424 * t494;
	t527 = t403 * t433 + t405 * t430 + t411 * t425;
	t413 = (t431 * t566 - t453 * t511 + t543 * t557) * pkin(3);
	t526 = t403 * t543 + t413 * t430 + t425 * t544;
	t406 = t422 * t567 + t433 * t559 + (t432 * t445 - t433 * t511) * pkin(3);
	t525 = t404 * t433 + t406 * t430 + t411 * t426;
	t414 = t431 * t567 + t543 * t559 + (t445 * t453 - t511 * t543) * pkin(3);
	t524 = t404 * t543 + t414 * t430 + t426 * t544;
	t521 = t605 * t607 + (-t396 * t416 + 0.2e1 * t420 * t606) * t407;
	t412 = t539 * t544 + t543 * t553;
	t410 = t423 * t494 - t424 * t495;
	t402 = ((t413 * t621 + t414 * t619) * t446 + t543 * t522) * t505;
	t401 = ((t413 * t620 + t414 * t621) * t446 + t543 * t523) * t505;
	t400 = t411 * t539 + t433 * t553;
	t399 = ((t405 * t621 + t406 * t619) * t446 + t433 * t522) * t505;
	t398 = ((t405 * t620 + t406 * t621) * t446 + t433 * t523) * t505;
	t397 = t543 * t560 + (t639 + t431 * t549 + t557 * t544 + (t412 * t623 + t453 * t627 + t544 * t625) * t437) * pkin(3);
	t394 = (t412 * t624 + t431 * t568) * t450 + (-t430 * t453 - 0.2e1 * t543 * t544) * t561 + (-t430 * t445 - t635 + (t430 * t625 + t543 * t627) * t437) * pkin(3);
	t393 = t433 * t560 + (-t410 * t511 + t422 * t549 + t557 * t411 + (t400 * t623 + t432 * t627 + t544 * t626) * t437) * pkin(3);
	t392 = (-t401 * t605 + t402 * t415) * t407;
	t391 = (t400 * t624 + t422 * t568) * t450 + (-t411 * t543 - t430 * t432 - t433 * t544) * t561 + (t410 * t445 - t411 * t511 + (t430 * t626 + t433 * t627) * t437) * pkin(3);
	t389 = (-t398 * t605 + t399 * t415) * t407;
	t388 = t528 * t402 + t521 * t401 + (((t394 * t563 + t397 * t565 + t425 * t530 + t532 * t543) * t415 - (t394 * t565 + t397 * t564 + t426 * t530 + t533 * t543) * t605) * t407 + ((t524 * t415 + t526 * t605) * t500 + (t526 * t415 - t524 * t605) * t499) * t554) * t505;
	t387 = t528 * t399 + t521 * t398 + (((t391 * t563 + t393 * t565 + t425 * t531 + t433 * t532) * t415 - (t391 * t565 + t393 * t564 + t426 * t531 + t433 * t533) * t605) * t407 + ((t525 * t415 + t527 * t605) * t500 + (t527 * t415 - t525 * t605) * t499) * t554) * t505;
	t1 = [0, t387 * t502 + t389 * t497 + t497, t388 * t502 + t392 * t497 + t497, 0; 0, -t387 * t504 + t389 * t496 + t496, -t388 * t504 + t392 * t496 + t496, 0; 0, 0, 0, 0;];
	JgD_rot = t1;
elseif link_index == 5
	%% Symbolic Calculation
	% From jacobigD_rot_5_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-20 16:24:14
	% EndTime: 2020-04-20 16:26:03
	% DurationCPUTime: 50.23s
	% Computational Cost: add. (1168659->220), mult. (1823339->442), div. (68682->14), fcn. (1139268->19), ass. (0->218)
	t703 = pkin(5) ^ 2;
	t707 = pkin(1) ^ 2;
	t812 = sin(qJ(2));
	t813 = sin(pkin(16));
	t814 = cos(qJ(2));
	t815 = cos(pkin(16));
	t686 = t812 * t813 - t814 * t815;
	t808 = pkin(5) * t686;
	t773 = -0.2e1 * pkin(1) * t808 + t707;
	t681 = t703 + t773;
	t678 = 0.1e1 / t681;
	t679 = 0.1e1 / t681 ^ 2;
	t838 = 0.4e1 * t678 * t679;
	t687 = t812 * t815 + t814 * t813;
	t684 = t687 * qJD(2);
	t706 = 0.1e1 / pkin(2);
	t677 = pkin(2) ^ 2 - pkin(6) ^ 2 + t681;
	t682 = pkin(1) - t808;
	t829 = -pkin(6) - pkin(2);
	t675 = (pkin(5) - t829) * (pkin(5) + t829) + t773;
	t828 = -pkin(6) + pkin(2);
	t676 = (pkin(5) - t828) * (pkin(5) + t828) + t773;
	t780 = t676 * t675;
	t709 = sqrt(-t780);
	t807 = pkin(5) * t687;
	t669 = t677 * t807 + t682 * t709;
	t700 = cos(qJ(3));
	t781 = t669 * t700;
	t776 = t687 * t709;
	t668 = -pkin(5) * t776 + t682 * t677;
	t698 = sin(qJ(3));
	t784 = t668 * t698;
	t731 = t781 / 0.2e1 + t784 / 0.2e1;
	t830 = pkin(1) * pkin(5);
	t771 = t679 * t830;
	t737 = 0.2e1 * (t675 + t676) * t830;
	t670 = t684 * t737;
	t685 = t686 * qJD(2);
	t834 = t687 * t703;
	t766 = t684 * t834;
	t749 = pkin(1) * t766;
	t673 = 0.1e1 / t709;
	t820 = t673 / 0.2e1;
	t759 = t682 * t820;
	t778 = t684 * t709;
	t656 = t670 * t759 - 0.2e1 * t749 + (-t685 * t677 - t778) * pkin(5);
	t790 = t656 * t698;
	t835 = t670 * t673;
	t661 = -t807 * t835 / 0.2e1;
	t806 = t682 * pkin(1);
	t755 = t677 + 0.2e1 * t806;
	t777 = t685 * t709;
	t655 = t661 + (-t755 * t684 + t777) * pkin(5);
	t791 = t655 * t700;
	t782 = t669 * t698;
	t783 = t668 * t700;
	t832 = t782 - t783;
	t631 = ((-t790 / 0.2e1 + t791 / 0.2e1 - t731 * qJD(3)) * t678 - t832 * t684 * t771) * t706;
	t738 = t781 + t784;
	t726 = t684 * t738;
	t732 = -t782 / 0.2e1 + t783 / 0.2e1;
	t789 = t656 * t700;
	t792 = t655 * t698;
	t632 = (t726 * t771 + (t789 / 0.2e1 + t792 / 0.2e1 + t732 * qJD(3)) * t678) * t706;
	t695 = pkin(18) + pkin(19);
	t691 = sin(t695);
	t692 = cos(t695);
	t627 = t692 * t631 - t691 * t632;
	t704 = pkin(4) ^ 2;
	t779 = t678 * t706;
	t659 = t732 * t779;
	t660 = t731 * t779;
	t650 = -t692 * t659 + t691 * t660;
	t809 = pkin(3) * t650;
	t831 = -2 * pkin(4);
	t775 = -t809 * t831 + t704;
	t827 = -pkin(8) - pkin(10);
	t640 = (pkin(3) - t827) * (pkin(3) + t827) + t775;
	t826 = -pkin(8) + pkin(10);
	t641 = (pkin(3) - t826) * (pkin(3) + t826) + t775;
	t795 = t641 * t640;
	t708 = sqrt(-t795);
	t837 = t627 * t708;
	t772 = 2 * pkin(4);
	t736 = pkin(3) * (t640 + t641) * t772;
	t618 = t627 * t736;
	t705 = pkin(3) ^ 2;
	t646 = t705 + t775;
	t642 = -pkin(8) ^ 2 + pkin(10) ^ 2 + t646;
	t647 = pkin(4) + t809;
	t754 = t647 * t831 - t642;
	t634 = 0.1e1 / t708;
	t740 = -t691 * t659 - t692 * t660;
	t821 = -t740 / 0.2e1;
	t763 = t634 * t821;
	t741 = -t691 * t631 - t692 * t632;
	t833 = t741 * t708;
	t597 = (t618 * t763 + t754 * t627 - t833) * pkin(3);
	t756 = t740 * t705 * t831;
	t822 = t634 / 0.2e1;
	t764 = t647 * t822;
	t598 = t618 * t764 + t627 * t756 + (t642 * t741 - t837) * pkin(3);
	t643 = 0.1e1 / t646;
	t702 = 0.1e1 / pkin(10);
	t644 = 0.1e1 / t646 ^ 2;
	t770 = pkin(3) * pkin(4) * t644;
	t810 = pkin(3) * t740;
	t623 = t642 * t810 + t647 * t708;
	t696 = sin(pkin(17));
	t798 = t623 * t696;
	t622 = t647 * t642 - t708 * t810;
	t697 = cos(pkin(17));
	t799 = t622 * t697;
	t720 = (t798 - t799) * t770;
	t818 = -t697 / 0.2e1;
	t819 = t696 / 0.2e1;
	t589 = ((t597 * t818 + t598 * t819) * t643 + t627 * t720) * t702;
	t793 = t643 * t702;
	t616 = (-t799 / 0.2e1 + t798 / 0.2e1) * t793;
	t613 = 0.1e1 / t616 ^ 2;
	t836 = t589 * t613;
	t612 = 0.1e1 / t616;
	t825 = -t618 / 0.2e1;
	t671 = t687 * t737;
	t811 = pkin(1) * t703;
	t658 = t671 * t759 - 0.2e1 * t687 ^ 2 * t811 + (-t686 * t677 - t776) * pkin(5);
	t785 = t658 * t700;
	t745 = t671 * t820 + t677;
	t657 = (t686 * t709 + (-t745 - 0.2e1 * t806) * t687) * pkin(5);
	t788 = t657 * t698;
	t733 = t785 / 0.2e1 + t788 / 0.2e1;
	t752 = t687 * t771;
	t638 = (t733 * t678 + t738 * t752) * t706;
	t786 = t658 * t698;
	t787 = t657 * t700;
	t734 = -t786 / 0.2e1 + t787 / 0.2e1;
	t639 = (-t734 * t678 + t752 * t832) * t706;
	t630 = -t691 * t638 - t692 * t639;
	t619 = t630 * t736;
	t824 = -t619 / 0.2e1;
	t628 = t740 * t736;
	t823 = -t628 / 0.2e1;
	t817 = t697 / 0.2e1;
	t816 = t698 / 0.2e1;
	t797 = t623 * t697;
	t800 = t622 * t696;
	t719 = (t797 + t800) * t770;
	t590 = ((t597 * t819 + t598 * t817) * t643 + t627 * t719) * t702;
	t617 = (t797 / 0.2e1 + t800 / 0.2e1) * t793;
	t615 = t617 ^ 2;
	t606 = t613 * t615 + 0.1e1;
	t604 = 0.1e1 / t606;
	t802 = t613 * t617;
	t582 = qJD(2) + qJD(3) + (-t589 * t802 + t590 * t612) * t604;
	t603 = qJ(2) + qJ(3) + atan2(t617, t616);
	t805 = t582 * cos(t603);
	t803 = t612 * t836;
	t804 = 0.2e1 * (t590 * t802 - t615 * t803) / t606 ^ 2;
	t801 = t618 * t634 / t795;
	t796 = t627 * t705;
	t794 = t643 * t697;
	t699 = sin(qJ(1));
	t693 = qJD(1) * t699;
	t701 = cos(qJ(1));
	t694 = qJD(1) * t701;
	t768 = t704 * t796;
	t767 = 0.1e1 / t780 * t671 * t835;
	t765 = t801 / 0.4e1;
	t762 = t643 * t819;
	t761 = -t794 / 0.2e1;
	t760 = t794 / 0.2e1;
	t758 = t705 * t772;
	t757 = 0.4e1 * pkin(4) * t796;
	t751 = t604 * t770;
	t750 = -0.8e1 * t768;
	t748 = t643 * t644 * t768;
	t747 = t707 * t766;
	t746 = -t740 * t801 / 0.4e1;
	t742 = t697 * t748;
	t735 = 0.4e1 * t696 * t748;
	t730 = -0.4e1 * t622 * t742;
	t729 = 0.4e1 * t623 * t742;
	t728 = t630 * t735;
	t727 = t740 * t735;
	t725 = -t604 * t836 - t612 * t804;
	t629 = -t692 * t638 + t691 * t639;
	t599 = (t619 * t763 - t629 * t708 + t754 * t630) * pkin(3);
	t667 = -t685 * t737 - 0.8e1 * t747;
	t636 = t661 + (t767 / 0.4e1 + t667 * t820) * t682 + (0.2e1 * t684 * t686 + 0.4e1 * t685 * t687) * t811 + (-t745 * t684 + t777) * pkin(5);
	t637 = 0.4e1 * t749 + (t778 - t687 * t767 / 0.4e1 + t755 * t685 + (t686 * t670 / 0.2e1 + t685 * t671 / 0.2e1 - t687 * t667 / 0.2e1) * t673) * pkin(5);
	t620 = (t832 * t747 * t838 + (-t637 * t700 / 0.2e1 + t636 * t816 + t733 * qJD(3)) * t678 + (-t832 * t685 - (-t786 + t787) * t684 + (t738 * qJD(3) + t790 - t791) * t687) * t771) * t706;
	t621 = (t707 * t726 * t834 * t838 + (t636 * t700 / 0.2e1 + t637 * t816 + t734 * qJD(3)) * t678 + (-t738 * t685 - (-t785 - t788) * t684 + (-qJD(3) * t832 + t789 + t792) * t687) * t771) * t706;
	t608 = -t692 * t620 - t691 * t621;
	t724 = t597 * t630 + t599 * t627 + t608 * t622;
	t610 = (t628 * t763 - t650 * t708 + t740 * t754) * pkin(3);
	t723 = t597 * t740 + t610 * t627 + t622 * t741;
	t600 = t619 * t764 + t630 * t756 + (t629 * t642 - t630 * t708) * pkin(3);
	t722 = t598 * t630 + t600 * t627 + t608 * t623;
	t611 = t628 * t764 + t740 * t756 + (t650 * t642 - t708 * t740) * pkin(3);
	t721 = t598 * t740 + t611 * t627 + t623 * t741;
	t718 = t802 * t804 + (-t590 * t613 + 0.2e1 * t617 * t803) * t604;
	t609 = t736 * t741 + t740 * t750;
	t607 = t691 * t620 - t692 * t621;
	t601 = sin(t603);
	t596 = ((t610 * t819 + t611 * t817) * t643 + t740 * t719) * t702;
	t595 = ((t610 * t818 + t611 * t819) * t643 + t740 * t720) * t702;
	t594 = t608 * t736 + t630 * t750;
	t593 = ((t599 * t819 + t600 * t817) * t643 + t630 * t719) * t702;
	t592 = ((t599 * t818 + t600 * t819) * t643 + t630 * t720) * t702;
	t591 = t740 * t757 + (t837 + t628 * t746 + t754 * t741 + (t609 * t821 + t650 * t825 + t741 * t823) * t634) * pkin(3);
	t588 = (t609 * t822 + t628 * t765) * t647 + (-t627 * t650 - 0.2e1 * t740 * t741) * t758 + (-t627 * t642 - t833 + (t627 * t823 + t740 * t825) * t634) * pkin(3);
	t587 = t630 * t757 + (-t607 * t708 + t619 * t746 + t754 * t608 + (t594 * t821 + t629 * t825 + t741 * t824) * t634) * pkin(3);
	t586 = (-t595 * t802 + t596 * t612) * t604;
	t585 = (t594 * t822 + t619 * t765) * t647 + (-t608 * t740 - t627 * t629 - t630 * t741) * t758 + (t607 * t642 - t608 * t708 + (t627 * t824 + t630 * t825) * t634) * pkin(3);
	t583 = (-t592 * t802 + t593 * t612) * t604;
	t581 = t725 * t596 + t718 * t595 + (((t588 * t760 + t591 * t762 + t622 * t727 + t729 * t740) * t612 - (t588 * t762 + t591 * t761 + t623 * t727 + t730 * t740) * t802) * t604 + ((t721 * t612 + t723 * t802) * t697 + (t723 * t612 - t721 * t802) * t696) * t751) * t702;
	t580 = t725 * t593 + t718 * t592 + (((t585 * t760 + t587 * t762 + t622 * t728 + t630 * t729) * t612 - (t585 * t762 + t587 * t761 + t623 * t728 + t630 * t730) * t802) * t604 + ((t722 * t612 + t724 * t802) * t697 + (t724 * t612 - t722 * t802) * t696) * t751) * t702;
	t1 = [0, t580 * t699 + t583 * t694 + t694, t581 * t699 + t586 * t694 + t694, t601 * t693 - t701 * t805; 0, -t580 * t701 + t583 * t693 + t693, -t581 * t701 + t586 * t693 + t693, -t601 * t694 - t699 * t805; 0, 0, 0, -t582 * t601;];
	JgD_rot = t1;
elseif link_index == 6
	%% Symbolic Calculation
	% From jacobigD_rot_6_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-20 16:20:45
	% EndTime: 2020-04-20 16:20:49
	% DurationCPUTime: 1.33s
	% Computational Cost: add. (12594->80), mult. (20244->171), div. (678->9), fcn. (12648->10), ass. (0->96)
	t268 = sin(qJ(2));
	t269 = sin(pkin(16));
	t270 = cos(qJ(2));
	t271 = cos(pkin(16));
	t208 = t268 * t271 + t270 * t269;
	t266 = pkin(1) * t208;
	t205 = t208 * qJD(2);
	t277 = pkin(1) * pkin(5);
	t245 = t205 * t277;
	t219 = pkin(1) ^ 2;
	t207 = t268 * t269 - t270 * t271;
	t267 = pkin(1) * t207;
	t249 = -0.2e1 * pkin(5) * t267 + t219;
	t276 = -pkin(6) - pkin(2);
	t196 = (pkin(5) - t276) * (pkin(5) + t276) + t249;
	t275 = -pkin(6) + pkin(2);
	t197 = (pkin(5) - t275) * (pkin(5) + t275) + t249;
	t250 = t196 + t197;
	t191 = t250 * t245;
	t256 = t197 * t196;
	t220 = sqrt(-t256);
	t194 = 0.1e1 / t220;
	t280 = t191 * t194;
	t187 = t266 * t280;
	t218 = pkin(5) ^ 2;
	t202 = t218 + t249;
	t198 = -pkin(2) ^ 2 + pkin(6) ^ 2 + t202;
	t203 = -pkin(5) + t267;
	t247 = 0.2e1 * t203 * pkin(5);
	t242 = -t198 + t247;
	t206 = t207 * qJD(2);
	t252 = t206 * t220;
	t177 = -t187 + (t242 * t205 + t252) * pkin(1);
	t244 = t219 * t208 * t205;
	t238 = pkin(5) * t244;
	t253 = t205 * t220;
	t257 = t194 * t203;
	t178 = -t191 * t257 - 0.2e1 * t238 + (-t206 * t198 - t253) * pkin(1);
	t199 = 0.1e1 / t202;
	t217 = 0.1e1 / pkin(6);
	t254 = t199 * t217;
	t190 = t198 * t266 - t203 * t220;
	t213 = sin(pkin(15));
	t259 = t190 * t213;
	t251 = t208 * t220;
	t189 = -pkin(1) * t251 - t203 * t198;
	t215 = cos(pkin(15));
	t260 = t189 * t215;
	t185 = (t260 / 0.2e1 + t259 / 0.2e1) * t254;
	t182 = 0.1e1 / t185 ^ 2;
	t231 = t259 + t260;
	t200 = 0.1e1 / t202 ^ 2;
	t241 = t200 * t245;
	t272 = t215 / 0.2e1;
	t273 = t213 / 0.2e1;
	t281 = ((t177 * t272 + t178 * t273) * t199 + t231 * t241) * t217 * t182;
	t237 = t250 * t277;
	t192 = t208 * t237;
	t279 = t194 * t192;
	t236 = t218 * t244;
	t278 = -t194 * (-t206 * t237 - 0.4e1 * t236) - 0.1e1 / t256 * t191 * t279;
	t181 = 0.1e1 / t185;
	t274 = -t213 / 0.2e1;
	t265 = t219 * pkin(5);
	t258 = t190 * t215;
	t261 = t189 * t213;
	t230 = -t258 + t261;
	t169 = ((t177 * t274 + t178 * t272) * t199 - t230 * t241) * t217;
	t186 = (t258 / 0.2e1 - t261 / 0.2e1) * t254;
	t184 = t186 ^ 2;
	t176 = t184 * t182 + 0.1e1;
	t262 = t182 * t186;
	t263 = t181 * t281;
	t264 = (t169 * t262 - t184 * t263) / t176 ^ 2;
	t255 = t199 * t213;
	t239 = t198 + t279;
	t179 = (t207 * t220 + (-t239 + t247) * t208) * pkin(1);
	t180 = -t192 * t257 - 0.2e1 * t208 ^ 2 * t265 + (-t207 * t198 - t251) * pkin(1);
	t246 = t200 * t277;
	t240 = t208 * t246;
	t172 = ((t179 * t274 + t180 * t272) * t199 - t230 * t240) * t217;
	t173 = ((t179 * t272 + t180 * t273) * t199 + t231 * t240) * t217;
	t174 = 0.1e1 / t176;
	t248 = qJD(1) * (t172 * t181 - t173 * t262) * t174;
	t243 = t199 * t272;
	t233 = t199 * t200 * t236;
	t229 = t213 * t233;
	t228 = 0.4e1 * t215 * t233;
	t227 = t177 * t208 + t179 * t205 - t189 * t206;
	t226 = t178 * t208 + t180 * t205 - t190 * t206;
	t214 = cos(qJ(1));
	t212 = sin(qJ(1));
	t171 = 0.4e1 * t238 + (t207 * t280 + t253 + t278 * t208 - (t242 - t279) * t206) * pkin(1);
	t170 = -t187 + t278 * t203 + (0.2e1 * t205 * t207 + 0.4e1 * t206 * t208) * t265 + (-t239 * t205 + t252) * pkin(1);
	t165 = (-t174 * t281 - 0.2e1 * t181 * t264) * t172 + (0.2e1 * t262 * t264 + (-t169 * t182 + 0.2e1 * t186 * t263) * t174) * t173 + ((t170 * t243 + t190 * t228 - t171 * t255 / 0.2e1 - 0.4e1 * t189 * t229) * t181 - (t171 * t243 + t189 * t228 + t170 * t255 / 0.2e1 + 0.4e1 * t190 * t229) * t262 + ((t226 * t181 - t227 * t262) * t215 + (-t227 * t181 - t226 * t262) * t213) * t246) * t174 * t217;
	t1 = [0, t165 * t212 + t214 * t248, 0, 0; 0, -t165 * t214 + t212 * t248, 0, 0; 0, 0, 0, 0;];
	JgD_rot = t1;
elseif link_index == 7
	%% Symbolic Calculation
	% From jacobigD_rot_7_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-20 16:20:45
	% EndTime: 2020-04-20 16:20:50
	% DurationCPUTime: 1.33s
	% Computational Cost: add. (12596->81), mult. (20246->173), div. (678->9), fcn. (12650->10), ass. (0->96)
	t273 = sin(qJ(2));
	t274 = sin(pkin(16));
	t275 = cos(qJ(2));
	t276 = cos(pkin(16));
	t213 = t273 * t276 + t275 * t274;
	t271 = pkin(5) * t213;
	t210 = t213 * qJD(2);
	t282 = pkin(1) * pkin(5);
	t251 = t210 * t282;
	t224 = pkin(1) ^ 2;
	t212 = t273 * t274 - t275 * t276;
	t272 = pkin(5) * t212;
	t253 = -0.2e1 * pkin(1) * t272 + t224;
	t281 = -pkin(6) - pkin(2);
	t201 = (pkin(5) - t281) * (pkin(5) + t281) + t253;
	t280 = -pkin(6) + pkin(2);
	t202 = (pkin(5) - t280) * (pkin(5) + t280) + t253;
	t254 = t201 + t202;
	t196 = t254 * t251;
	t260 = t202 * t201;
	t225 = sqrt(-t260);
	t199 = 0.1e1 / t225;
	t285 = t196 * t199;
	t192 = t271 * t285;
	t222 = pkin(5) ^ 2;
	t207 = t222 + t253;
	t203 = pkin(2) ^ 2 - pkin(6) ^ 2 + t207;
	t208 = pkin(1) - t272;
	t270 = t208 * pkin(1);
	t247 = t203 + 0.2e1 * t270;
	t211 = t212 * qJD(2);
	t256 = t211 * t225;
	t182 = -t192 + (-t247 * t210 + t256) * pkin(5);
	t250 = t222 * t213 * t210;
	t243 = pkin(1) * t250;
	t257 = t210 * t225;
	t261 = t199 * t208;
	t183 = t196 * t261 - 0.2e1 * t243 + (-t211 * t203 - t257) * pkin(5);
	t204 = 0.1e1 / t207;
	t223 = 0.1e1 / pkin(2);
	t258 = t204 * t223;
	t195 = t203 * t271 + t208 * t225;
	t217 = sin(pkin(19));
	t263 = t195 * t217;
	t255 = t213 * t225;
	t194 = -pkin(5) * t255 + t208 * t203;
	t218 = cos(pkin(19));
	t264 = t194 * t218;
	t190 = (-t264 / 0.2e1 + t263 / 0.2e1) * t258;
	t187 = 0.1e1 / t190 ^ 2;
	t236 = -t263 + t264;
	t205 = 0.1e1 / t207 ^ 2;
	t246 = t205 * t251;
	t278 = -t218 / 0.2e1;
	t279 = t217 / 0.2e1;
	t286 = ((t182 * t278 + t183 * t279) * t204 - t236 * t246) * t223 * t187;
	t242 = t254 * t282;
	t197 = t213 * t242;
	t284 = t199 * t197;
	t240 = t224 * t250;
	t283 = 0.1e1 / t260 * t196 * t284 + t199 * (-t211 * t242 - 0.4e1 * t240);
	t186 = 0.1e1 / t190;
	t277 = t218 / 0.2e1;
	t269 = t222 * pkin(1);
	t262 = t195 * t218;
	t265 = t194 * t217;
	t235 = t262 + t265;
	t173 = ((t182 * t279 + t183 * t277) * t204 + t235 * t246) * t223;
	t191 = (t262 / 0.2e1 + t265 / 0.2e1) * t258;
	t189 = t191 ^ 2;
	t181 = t189 * t187 + 0.1e1;
	t266 = t187 * t191;
	t267 = t186 * t286;
	t268 = (t173 * t266 - t189 * t267) / t181 ^ 2;
	t259 = t204 * t218;
	t252 = t205 * t282;
	t249 = t204 * t279;
	t244 = t203 + t284;
	t184 = (t212 * t225 + (-t244 - 0.2e1 * t270) * t213) * pkin(5);
	t185 = t197 * t261 - 0.2e1 * t213 ^ 2 * t269 + (-t212 * t203 - t255) * pkin(5);
	t245 = t213 * t252;
	t177 = ((t184 * t279 + t185 * t277) * t204 + t235 * t245) * t223;
	t178 = ((t184 * t278 + t185 * t279) * t204 - t236 * t245) * t223;
	t179 = 0.1e1 / t181;
	t248 = qJD(1) * ((t177 * t186 - t178 * t266) * t179 + 0.1e1);
	t237 = t204 * t205 * t240;
	t234 = t218 * t237;
	t233 = 0.4e1 * t217 * t237;
	t232 = t182 * t213 + t184 * t210 - t194 * t211;
	t231 = t183 * t213 + t185 * t210 - t195 * t211;
	t220 = cos(qJ(1));
	t219 = sin(qJ(1));
	t176 = 0.4e1 * t243 + (t212 * t285 + t257 - t283 * t213 - (-t247 - t284) * t211) * pkin(5);
	t175 = -t192 + t283 * t208 + (0.2e1 * t210 * t212 + 0.4e1 * t211 * t213) * t269 + (-t244 * t210 + t256) * pkin(5);
	t170 = (-t179 * t286 - 0.2e1 * t186 * t268) * t177 + (0.2e1 * t266 * t268 + (-t173 * t187 + 0.2e1 * t191 * t267) * t179) * t178 + ((t175 * t259 / 0.2e1 + 0.4e1 * t195 * t234 + t176 * t249 + t194 * t233) * t186 - (-t176 * t259 / 0.2e1 - 0.4e1 * t194 * t234 + t175 * t249 + t195 * t233) * t266 + ((t231 * t186 + t232 * t266) * t218 + (t232 * t186 - t231 * t266) * t217) * t252) * t179 * t223;
	t1 = [0, t170 * t219 + t220 * t248, 0, 0; 0, -t170 * t220 + t219 * t248, 0, 0; 0, 0, 0, 0;];
	JgD_rot = t1;
elseif link_index == 8
	%% Symbolic Calculation
	% From jacobigD_rot_8_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-20 16:21:27
	% EndTime: 2020-04-20 16:22:25
	% DurationCPUTime: 25.64s
	% Computational Cost: add. (542986->224), mult. (846766->490), div. (31210->18), fcn. (529626->16), ass. (0->228)
	t501 = pkin(5) ^ 2;
	t505 = pkin(1) ^ 2;
	t627 = sin(qJ(2));
	t628 = sin(pkin(16));
	t629 = cos(qJ(2));
	t630 = cos(pkin(16));
	t486 = t627 * t628 - t629 * t630;
	t620 = pkin(5) * t486;
	t583 = -0.2e1 * pkin(1) * t620 + t505;
	t481 = t501 + t583;
	t478 = 0.1e1 / t481;
	t479 = 0.1e1 / t481 ^ 2;
	t480 = t478 * t479;
	t487 = t627 * t630 + t629 * t628;
	t484 = t487 * qJD(2);
	t655 = t487 * t501;
	t572 = t484 * t655;
	t553 = t505 * t572;
	t540 = t480 * t553;
	t660 = 0.4e1 * t540;
	t504 = 0.1e1 / pkin(2);
	t477 = pkin(2) ^ 2 - pkin(6) ^ 2 + t481;
	t482 = pkin(1) - t620;
	t647 = -pkin(6) - pkin(2);
	t475 = (pkin(5) - t647) * (pkin(5) + t647) + t583;
	t646 = -pkin(6) + pkin(2);
	t476 = (pkin(5) - t646) * (pkin(5) + t646) + t583;
	t592 = t476 * t475;
	t507 = sqrt(-t592);
	t619 = pkin(5) * t487;
	t469 = t477 * t619 + t482 * t507;
	t498 = cos(qJ(3));
	t593 = t469 * t498;
	t587 = t487 * t507;
	t468 = -pkin(5) * t587 + t477 * t482;
	t496 = sin(qJ(3));
	t598 = t468 * t496;
	t524 = t593 / 0.2e1 + t598 / 0.2e1;
	t648 = pkin(1) * pkin(5);
	t580 = t479 * t648;
	t562 = t484 * t580;
	t533 = 0.2e1 * (t475 + t476) * t648;
	t470 = t484 * t533;
	t485 = t486 * qJD(2);
	t554 = pkin(1) * t572;
	t473 = 0.1e1 / t507;
	t635 = t473 / 0.2e1;
	t568 = t482 * t635;
	t589 = t484 * t507;
	t450 = t470 * t568 - 0.2e1 * t554 + (-t485 * t477 - t589) * pkin(5);
	t607 = t450 * t496;
	t656 = t470 * t473;
	t461 = -t619 * t656 / 0.2e1;
	t617 = t482 * pkin(1);
	t564 = t477 + 0.2e1 * t617;
	t588 = t485 * t507;
	t449 = t461 + (-t564 * t484 + t588) * pkin(5);
	t608 = t449 * t498;
	t594 = t469 * t496;
	t597 = t468 * t498;
	t652 = t594 - t597;
	t418 = ((-t607 / 0.2e1 + t608 / 0.2e1 - t524 * qJD(3)) * t478 - t652 * t562) * t504;
	t534 = t593 + t598;
	t522 = t484 * t534;
	t525 = -t594 / 0.2e1 + t597 / 0.2e1;
	t606 = t450 * t498;
	t609 = t449 * t496;
	t419 = (t522 * t580 + (t606 / 0.2e1 + t609 / 0.2e1 + t525 * qJD(3)) * t478) * t504;
	t493 = pkin(18) + pkin(19);
	t491 = sin(t493);
	t492 = cos(t493);
	t414 = t418 * t492 - t419 * t491;
	t503 = pkin(3) ^ 2;
	t502 = pkin(4) ^ 2;
	t590 = t478 * t504;
	t459 = t525 * t590;
	t460 = t524 * t590;
	t441 = -t459 * t492 + t460 * t491;
	t622 = pkin(4) * t441;
	t649 = -2 * pkin(3);
	t585 = -t622 * t649 + t502;
	t437 = t503 + t585;
	t433 = pkin(8) ^ 2 - pkin(10) ^ 2 + t437;
	t645 = -pkin(8) - pkin(10);
	t431 = (pkin(3) - t645) * (pkin(3) + t645) + t585;
	t644 = -pkin(8) + pkin(10);
	t432 = (pkin(3) - t644) * (pkin(3) + t644) + t585;
	t611 = t432 * t431;
	t506 = sqrt(-t611);
	t539 = -t418 * t491 - t419 * t492;
	t659 = -t414 * t506 + t539 * t433;
	t581 = 2 * pkin(3);
	t532 = pkin(4) * (t431 + t432) * t581;
	t396 = t414 * t532;
	t538 = -t459 * t491 - t460 * t492;
	t565 = t538 * t502 * t649;
	t438 = -pkin(3) - t622;
	t421 = 0.1e1 / t506;
	t640 = -t421 / 0.2e1;
	t570 = t438 * t640;
	t386 = t659 * pkin(4) + t396 * t570 + t414 * t565;
	t623 = pkin(4) * t538;
	t409 = -t433 * t438 - t506 * t623;
	t406 = 0.1e1 / t409 ^ 2;
	t410 = t433 * t623 - t438 * t506;
	t408 = t410 ^ 2;
	t399 = t406 * t408 + 0.1e1;
	t614 = t406 * t410;
	t563 = t438 * t581 - t433;
	t636 = -t538 / 0.2e1;
	t569 = t421 * t636;
	t653 = t539 * t506;
	t385 = (t396 * t569 + t563 * t414 - t653) * pkin(4);
	t405 = 0.1e1 / t409;
	t616 = t385 * t405 * t406;
	t658 = 0.2e1 * (t386 * t614 - t408 * t616) / t399 ^ 2;
	t494 = sin(pkin(19));
	t596 = t469 * t494;
	t495 = cos(pkin(19));
	t599 = t468 * t495;
	t457 = (-t599 / 0.2e1 + t596 / 0.2e1) * t590;
	t454 = 0.1e1 / t457 ^ 2;
	t537 = -t596 + t599;
	t633 = -t495 / 0.2e1;
	t634 = t494 / 0.2e1;
	t657 = ((t449 * t633 + t450 * t634) * t478 - t537 * t562) * t504 * t454;
	t397 = 0.1e1 / t399;
	t552 = pkin(3) * pkin(4) * pkin(8) * t397 * t414;
	t618 = pkin(8) * t437;
	t577 = t397 * t618;
	t556 = t406 * t577;
	t576 = t405 * t618;
	t651 = -t385 * t556 - 0.2e1 * t405 * t552 - t576 * t658;
	t575 = t410 * t618;
	t555 = t406 * t575;
	t650 = 0.2e1 * t397 * t575 * t616 - t386 * t556 + 0.2e1 * t552 * t614 + t555 * t658;
	t434 = 0.1e1 / t437;
	t453 = 0.1e1 / t457;
	t435 = 0.1e1 / t437 ^ 2;
	t643 = -t396 / 0.2e1;
	t471 = t487 * t533;
	t626 = pkin(1) * t501;
	t452 = t471 * t568 - 0.2e1 * t487 ^ 2 * t626 + (-t477 * t486 - t587) * pkin(5);
	t602 = t452 * t498;
	t550 = t471 * t635 + t477;
	t451 = (t486 * t507 + (-t550 - 0.2e1 * t617) * t487) * pkin(5);
	t605 = t451 * t496;
	t526 = t602 / 0.2e1 + t605 / 0.2e1;
	t561 = t487 * t580;
	t429 = (t526 * t478 + t534 * t561) * t504;
	t603 = t452 * t496;
	t604 = t451 * t498;
	t527 = -t603 / 0.2e1 + t604 / 0.2e1;
	t430 = (-t527 * t478 + t561 * t652) * t504;
	t417 = -t429 * t491 - t430 * t492;
	t400 = t417 * t532;
	t642 = -t400 / 0.2e1;
	t415 = t538 * t532;
	t641 = -t415 / 0.2e1;
	t467 = -t485 * t533 - 0.8e1 * t553;
	t573 = 0.1e1 / t592 * t471 * t656;
	t425 = t461 + (t573 / 0.4e1 + t467 * t635) * t482 + (0.2e1 * t484 * t486 + 0.4e1 * t485 * t487) * t626 + (-t550 * t484 + t588) * pkin(5);
	t639 = t425 / 0.2e1;
	t426 = 0.4e1 * t554 + (t589 - t487 * t573 / 0.4e1 + t564 * t485 + (t486 * t470 / 0.2e1 + t485 * t471 / 0.2e1 - t487 * t467 / 0.2e1) * t473) * pkin(5);
	t638 = -t426 / 0.2e1;
	t637 = t434 / 0.2e1;
	t632 = t495 / 0.2e1;
	t631 = t496 / 0.2e1;
	t625 = pkin(3) * t434;
	t624 = pkin(3) * t435;
	t500 = 0.1e1 / pkin(8);
	t621 = pkin(4) * t500;
	t595 = t469 * t495;
	t600 = t468 * t494;
	t536 = t595 + t600;
	t423 = ((t449 * t634 + t450 * t632) * t478 + t536 * t562) * t504;
	t458 = (t595 / 0.2e1 + t600 / 0.2e1) * t590;
	t456 = t458 ^ 2;
	t446 = t454 * t456 + 0.1e1;
	t601 = t454 * t458;
	t612 = t453 * t657;
	t615 = 0.2e1 * (t423 * t601 - t456 * t612) / t446 ^ 2;
	t613 = t414 * t502;
	t610 = t434 * t438;
	t591 = t478 * t495;
	t401 = (t652 * t660 + (t526 * qJD(3) + t425 * t631 + t498 * t638) * t478 + (-t652 * t485 - (-t603 + t604) * t484 + (t534 * qJD(3) + t607 - t608) * t487) * t580) * t504;
	t402 = (0.4e1 * t505 * t480 * t522 * t655 + (t527 * qJD(3) + t426 * t631 + t498 * t639) * t478 + (-t534 * t485 - (-t602 - t605) * t484 + (-qJD(3) * t652 + t606 + t609) * t487) * t580) * t504;
	t392 = -t401 * t492 - t402 * t491;
	t557 = -0.8e1 * t503 * t613;
	t382 = t392 * t532 + t417 * t557;
	t416 = -t429 * t492 + t430 * t491;
	t387 = (t400 * t569 - t416 * t506 + t563 * t417) * pkin(4);
	t579 = pkin(4) * t624;
	t560 = t417 * t579;
	t383 = (t387 * t637 + t409 * t560) * t500;
	t388 = t400 * t570 + t417 * t565 + (t416 * t433 - t417 * t506) * pkin(4);
	t384 = (t388 * t637 + t410 * t560) * t500;
	t391 = t401 * t491 - t402 * t492;
	t427 = ((t451 * t634 + t452 * t632) * t478 + t536 * t561) * t504;
	t428 = ((t451 * t633 + t452 * t634) * t478 - t537 * t561) * t504;
	t444 = 0.1e1 / t446;
	t578 = 0.4e1 * t434 * t435 * t503;
	t518 = t500 * (t409 * t578 + 0.2e1 * t625) * t613;
	t519 = t450 * t487 + t452 * t484 - t469 * t485;
	t520 = t449 * t487 + t451 * t484 - t468 * t485;
	t523 = t494 * t660;
	t529 = t495 * t540;
	t541 = t397 * t555;
	t542 = t397 * t500 * t576;
	t571 = -t396 * t421 / t611 / 0.4e1;
	t551 = t538 * t571;
	t558 = t410 * t578;
	t566 = t502 * t581;
	t567 = t478 * t634;
	t586 = 0.2e1 * (((t382 * t640 + t400 * t571) * t438 + (-t392 * t538 - t417 * t539) * t566) * t637 + (-t416 * t625 + t417 * t558) * t613 + ((t391 * t433 - t392 * t506 + (t414 * t642 + t417 * t643) * t421) * t637 + (t386 * t417 + t388 * t414 + t392 * t410) * t624) * pkin(4)) * t542 - 0.2e1 * (t417 * t518 + ((-t391 * t506 + t400 * t551 - t392 * t433 + (t382 * t636 + t416 * t643 + t539 * t642) * t421) * t637 + (t392 * t610 + (t385 * t417 + t387 * t414 + t392 * t409) * t435) * pkin(3)) * t621) * t541 + 0.2e1 * t651 * t384 + 0.2e1 * t650 * t383 + (-t444 * t657 - t453 * t615) * t427 + (t601 * t615 + (-t423 * t454 + 0.2e1 * t458 * t612) * t444) * t428 + ((t426 * t567 + t468 * t523 + 0.4e1 * t469 * t529 + t591 * t639) * t453 - (t425 * t567 - 0.4e1 * t468 * t529 + t469 * t523 + t591 * t638) * t601 + ((t519 * t453 + t520 * t601) * t495 + (t520 * t453 - t519 * t601) * t494) * t580) * t444 * t504;
	t394 = (t415 * t569 - t441 * t506 + t538 * t563) * pkin(4);
	t559 = t538 * t579;
	t389 = (t394 * t637 + t409 * t559) * t500;
	t395 = t415 * t570 + t538 * t565 + (t433 * t441 - t506 * t538) * pkin(4);
	t390 = (t395 * t637 + t410 * t559) * t500;
	t546 = 0.2e1 * t577;
	t582 = qJD(1) * (-t389 * t614 + t390 * t405) * t546;
	t549 = qJD(1) * ((-t383 * t614 + t384 * t405) * t546 + (t427 * t453 - t428 * t601) * t444 + 0.1e1);
	t499 = cos(qJ(1));
	t497 = sin(qJ(1));
	t393 = t532 * t539 + t538 * t557;
	t377 = 0.2e1 * (((t393 * t640 + t415 * t571) * t438 - 0.2e1 * t538 * t539 * t566) * t637 + (-t441 * t625 + t538 * t558) * t613 + ((-t414 * t433 - t653 + (t414 * t641 + t538 * t643) * t421) * t637 + (t386 * t538 + t395 * t414 + t410 * t539) * t624) * pkin(4)) * t542 - 0.2e1 * (t538 * t518 + ((t415 * t551 + (t393 * t636 + t441 * t643 + t539 * t641) * t421 - t659) * t637 + (t539 * t610 + (t385 * t538 + t394 * t414 + t409 * t539) * t435) * pkin(3)) * t621) * t541 + 0.2e1 * t651 * t390 + 0.2e1 * t650 * t389;
	t1 = [0, t586 * t497 + t499 * t549, t377 * t497 + t499 * t582, 0; 0, t497 * t549 - t586 * t499, -t377 * t499 + t497 * t582, 0; 0, 0, 0, 0;];
	JgD_rot = t1;
end