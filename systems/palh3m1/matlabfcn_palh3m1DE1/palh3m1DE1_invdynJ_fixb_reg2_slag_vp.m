% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% palh3m1DE1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [4x1]
%   Generalized joint coordinates (joint angles)
% qJD [4x1]
%   Generalized joint velocities
% qJDD [4x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [19x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[AB,BC,BE,BG,DA,DC,DT2,EP,GH,GP,HW,OT1,T1A,T1T2,phi1,phi2,phi410,phi78,phi79]';
% 
% Output:
% tau_reg [4x(4*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2020-04-19 19:20
% Revision: bf71b3c88fbe513355f3920541c47e1db11bd916 (2020-04-17)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = palh3m1DE1_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(4,1),zeros(4,1),zeros(4,1),zeros(3,1),zeros(19,1)}
assert(isreal(qJ) && all(size(qJ) == [4 1]), ...
  'palh3m1DE1_invdynJ_fixb_reg2_slag_vp: qJ has to be [4x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [4 1]), ...
  'palh3m1DE1_invdynJ_fixb_reg2_slag_vp: qJD has to be [4x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [4 1]), ...
  'palh3m1DE1_invdynJ_fixb_reg2_slag_vp: qJDD has to be [4x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'palh3m1DE1_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [19 1]), ...
  'palh3m1DE1_invdynJ_fixb_reg2_slag_vp: pkin has to be [19x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2020-04-19 05:49:53
% EndTime: 2020-04-19 10:04:23
% DurationCPUTime: 3340.28s
% Computational Cost: add. (76808899->1245), mult. (119551051->2123), div. (4688190->29), fcn. (74655442->36), ass. (0->877)
t1171 = pkin(5) ^ 2;
t1149 = sin(pkin(16));
t1150 = cos(pkin(16));
t455 = sin(qJ(2));
t460 = cos(qJ(2));
t952 = -t455 * t1149 + t460 * t1150;
t976 = pkin(5) * t952;
t946 = (0.2e1 * t976 + pkin(1)) * pkin(1);
t929 = t946 + t1171;
t1165 = 0.1e1 / t929 ^ 2;
t920 = 0.1e1 / t929;
t1307 = 0.4e1 * t920 * t1165;
t1175 = pkin(1) ^ 2;
t420 = t1149 * t460 + t1150 * t455;
t944 = qJD(2) * t420;
t1306 = t1171 * t944 * t1175 * t1307;
t450 = sin(pkin(19));
t452 = cos(pkin(19));
t1154 = pkin(5) + pkin(6);
t1155 = pkin(5) - pkin(6);
t865 = (pkin(2) + t1154) * (-pkin(2) + t1155) + t946;
t866 = (-pkin(2) + t1154) * (pkin(2) + t1155) + t946;
t835 = t866 * t865;
t465 = sqrt(-t835);
t1086 = t420 * t465;
t1036 = pkin(5) * t1086;
t1174 = 0.1e1 / pkin(2);
t467 = pkin(2) ^ 2;
t1066 = pkin(6) ^ 2 - t467;
t904 = t929 - t1066;
t955 = t976 + pkin(1);
t842 = t1174 * (t904 * t955 - t1036);
t829 = t920 * t842;
t820 = -t829 / 0.2e1;
t885 = pkin(5) * t904;
t853 = t420 * t885;
t843 = t1174 * (t465 * t955 + t853);
t830 = t920 * t843;
t821 = t830 / 0.2e1;
t375 = t450 * t821 + t452 * t820;
t368 = 0.1e1 / t375 ^ 2;
t819 = t829 / 0.2e1;
t376 = t450 * t819 + t452 * t821;
t370 = t376 ^ 2;
t353 = t368 * t370 + 0.1e1;
t349 = 0.1e1 / t353;
t1261 = 0.2e1 * t349;
t367 = 0.1e1 / t375;
t369 = t367 * t368;
t1039 = t369 * t1261;
t1167 = 0.1e1 / t465;
t1249 = t1167 / 0.2e1;
t1161 = pkin(1) * pkin(5);
t1300 = t865 + t866;
t1282 = t1300 * t1161;
t1218 = t1282 * t420;
t806 = t1218 * qJD(2);
t804 = 0.2e1 * t806;
t793 = t955 * t804;
t852 = t952 * t885;
t850 = qJD(2) * t852;
t933 = t420 * t944;
t921 = t1171 * t933;
t915 = pkin(1) * t921;
t931 = t465 * t944;
t779 = t1174 * (-pkin(5) * t931 + t793 * t1249 + t850 - 0.2e1 * t915);
t771 = t920 * t779;
t1042 = t1165 * t1161;
t834 = t420 * t843;
t832 = t834 * t1042;
t827 = qJD(2) * t832;
t1220 = t771 / 0.2e1 + t827;
t1147 = pkin(1) * t420;
t940 = -0.2e1 * t1147;
t1215 = t955 * pkin(5) * t940 - t853;
t802 = t1167 * t804;
t799 = -t802 / 0.2e1;
t943 = qJD(2) * t952;
t1267 = t420 * t799 - t465 * t943;
t790 = t1267 * pkin(5);
t778 = t1174 * (qJD(2) * t1215 + t790);
t770 = t920 * t778;
t833 = t420 * t842;
t831 = t833 * t1042;
t826 = qJD(2) * t831;
t319 = (-t770 / 0.2e1 - t826) * t452 + t1220 * t450;
t1305 = t1039 * t319;
t776 = t778 * t1042;
t841 = t843 * t1042;
t839 = t420 * t841;
t840 = t842 * t1042;
t1304 = -qJD(3) * t839 + t833 * t1306 + t420 * t776 + t840 * t943;
t766 = t770 / 0.2e1;
t318 = t1220 * t452 + (t766 + t826) * t450;
t1303 = t318 * t368;
t350 = 0.1e1 / t353 ^ 2;
t1102 = t350 * t367;
t1025 = t318 * t1102;
t1095 = t369 * t370;
t1096 = t368 * t376;
t284 = -0.2e1 * t1095 * t319 + 0.2e1 * t1096 * t318;
t1050 = -t1167 / 0.2e1;
t1141 = pkin(5) * t420;
t1043 = pkin(1) * t1141;
t388 = 0.4e1 * (t1154 * t1155 - t467 + t946) * t1043;
t1012 = t388 * t1050;
t973 = t952 * t465;
t364 = (-t973 + (t1012 + t1066 - t1171) * t420) * pkin(5) + (-0.3e1 * pkin(1) - 0.4e1 * t976) * t1043;
t1168 = t420 ^ 2;
t1045 = -0.2e1 * pkin(1) * t1168;
t1295 = t852 - t1036;
t934 = t955 * t1249;
t366 = t1045 * t1171 + t388 * t934 + t1295;
t838 = t420 * t840;
t909 = t920 / 0.2e1;
t899 = t1174 * t909;
t884 = t450 * t899;
t326 = t364 * t884 + t450 * t838 + (t366 * t899 + t839) * t452;
t910 = -t920 / 0.2e1;
t900 = t1174 * t910;
t327 = t366 * t884 + t450 * t839 + (t364 * t900 - t838) * t452;
t288 = -0.2e1 * t1095 * t327 + 0.2e1 * t1096 * t326;
t1302 = -t326 * t284 * t1102 + t288 * t1025;
t1153 = -pkin(8) - pkin(10);
t1172 = pkin(4) ^ 2;
t1044 = pkin(18) + pkin(19);
t1008 = cos(t1044);
t1007 = sin(t1044);
t454 = sin(qJ(3));
t459 = cos(qJ(3));
t789 = t454 * t819 + t459 * t821;
t783 = t1007 * t789;
t788 = t454 * t821 + t459 * t820;
t764 = -t1008 * t788 - t783;
t762 = pkin(3) * t764;
t760 = -0.2e1 * t762;
t756 = pkin(4) * t760 + t1172;
t720 = (pkin(3) - t1153) * (pkin(3) + t1153) + t756;
t1152 = pkin(10) - pkin(8);
t721 = (pkin(3) - t1152) * (pkin(3) + t1152) + t756;
t685 = t721 * t720;
t1176 = sqrt(-t685);
t680 = 0.1e1 / t1176;
t1301 = t680 / 0.2e1;
t1101 = t350 * t368;
t1106 = t319 * t376;
t1078 = (t1101 * t284 + t1305) * t376 * t327 - (t1039 * t327 + t1101 * t288) * t1106 + t1302;
t1162 = qJD(3) ^ 2;
t1160 = pkin(1) * t1171;
t1259 = -0.4e1 * t420;
t1163 = qJD(2) ^ 2;
t942 = t952 * t1163;
t859 = qJDD(2) * t420 + t942;
t1213 = t942 * t1259 - 0.2e1 * t420 * t859;
t801 = qJD(2) * t802;
t1214 = -t420 * t801 - t465 * t859;
t1255 = 0.2e1 * t944;
t1205 = t1163 * t1168;
t937 = t1171 * t1205;
t925 = t1175 * t937;
t1290 = t925 * t1307;
t1040 = 0.2e1 * t1167;
t1166 = t1167 / t835;
t857 = pkin(5) * t859;
t854 = pkin(1) * t857;
t1293 = t1166 * t806 ^ 2 + (t1300 * t854 - 0.4e1 * t925) * t1040 / 0.2e1;
t777 = t779 * t1042;
t858 = qJDD(2) * t952 - t1163 * t420;
t1190 = (t1214 * pkin(5) + t1213 * t1160 + t1293 * t955 + t858 * t885) * t899 + t777 * t1255 + t843 * t1290 + t859 * t841;
t822 = -t830 / 0.2e1;
t626 = qJDD(3) * t819 + t1162 * t822 + (t770 + 0.2e1 * t826) * qJD(3) + t1190;
t1187 = -t1293 * t420 - t465 * t858 - t952 * t801;
t1254 = -0.2e1 * t955;
t913 = t1174 * t920;
t1189 = (0.4e1 * pkin(1) * t937 + pkin(5) * t1187 + t854 * t1254 - t857 * t904) * t913 / 0.2e1 + t776 * t1255 + t859 * t840 + t842 * t1290;
t629 = qJDD(3) * t822 + t1162 * t820 + (-t771 - 0.2e1 * t827) * qJD(3) + t1189;
t1195 = -t1007 * t626 + t1008 * t629;
t1196 = -t1007 * t629 - t1008 * t626;
t551 = t1195 * t459 + t1196 * t454;
t549 = pkin(4) * t551;
t548 = pkin(3) * t549;
t1173 = pkin(3) ^ 2;
t1266 = qJD(3) * t788;
t1279 = t1007 * t1266;
t805 = t1218 * t1040;
t772 = (t955 * t805 / 0.2e1 + t1171 * t420 * t940 + t1295) * t899;
t773 = (-pkin(5) * t973 - t805 * t1141 / 0.2e1 + t1215) * t913;
t701 = (t772 + t832) * t459 + (t773 / 0.2e1 + t831) * t454;
t699 = t1007 * t701;
t828 = t454 * t832;
t702 = -t459 * t773 / 0.2e1 + t454 * t772 + t828;
t380 = t459 * t826;
t785 = qJD(3) * t789 - t380;
t651 = t1008 * t785 - t1279 - (-t1008 * t702 - t699) * qJD(2);
t649 = t651 ^ 2;
t644 = t1172 * t649;
t639 = t1173 * t644;
t754 = -t756 - t1173;
t752 = 0.1e1 / t754 ^ 2;
t751 = 0.1e1 / t754;
t753 = t751 * t752;
t1299 = t752 * t548 - 0.4e1 * t753 * t639;
t1265 = t1172 * t1173;
t1298 = 0.4e1 * t753 * t1265;
t1120 = sin(pkin(17));
t1121 = cos(pkin(17));
t1169 = 0.1e1 / pkin(10);
t784 = t1008 * t789;
t763 = t1007 * t788 - t784;
t661 = t1176 * t763;
t469 = pkin(8) ^ 2;
t1065 = pkin(10) ^ 2 - t469;
t743 = -t754 + t1065;
t757 = -t762 + pkin(4);
t622 = -pkin(3) * t661 + t743 * t757;
t620 = t1169 * t622;
t1159 = pkin(3) * pkin(4);
t746 = t752 * t1159;
t603 = t620 * t746;
t733 = pkin(3) * t743;
t623 = t1176 * t757 + t733 * t763;
t621 = t1169 * t623;
t604 = t621 * t746;
t1233 = t1120 * t604 - t1121 * t603;
t1257 = -0.2e1 * t757;
t1222 = t1159 * t1257 - t733;
t1272 = 0.4e1 * (-t469 + (pkin(3) + pkin(10)) * (pkin(3) - pkin(10)) + (t760 + pkin(4)) * pkin(4)) * t1159;
t881 = t454 * t899;
t872 = t364 * t881;
t879 = t459 * t899;
t330 = t366 * t879 + t454 * t838 + t459 * t839 + t872;
t880 = t459 * t900;
t331 = t364 * t880 + t366 * t881 + t454 * t839 - t459 * t838;
t309 = -t1007 * t330 - t1008 * t331;
t261 = t309 * t1272;
t308 = t1007 * t331 - t1008 * t330;
t667 = -t680 / 0.2e1;
t660 = t763 * t667;
t1230 = -t308 * t1176 + t261 * t660;
t210 = pkin(3) * t1230 + t1222 * t309;
t1251 = t757 / 0.2e1;
t655 = t680 * t1251;
t670 = t309 * t1176;
t1252 = -0.2e1 * t1173;
t761 = pkin(4) * t763;
t758 = t761 * t1252;
t212 = -pkin(3) * t670 + t261 * t655 + t308 * t733 + t309 * t758;
t747 = -t751 / 0.2e1;
t739 = t1169 * t747;
t717 = t1120 * t739;
t750 = t1169 * t751;
t730 = t1121 * t750;
t719 = t730 / 0.2e1;
t157 = t1233 * t309 + t210 * t719 + t212 * t717;
t1234 = t1120 * t603 + t1121 * t604;
t718 = -t730 / 0.2e1;
t158 = t1234 * t309 + t210 * t717 + t212 * t718;
t605 = t621 * t747;
t606 = t751 * t620;
t575 = t1121 * t606 / 0.2e1 + t1120 * t605;
t572 = 0.1e1 / t575 ^ 2;
t576 = t1121 * t605 - t1120 * t606 / 0.2e1;
t574 = t576 ^ 2;
t537 = t572 * t574 + 0.1e1;
t535 = 0.1e1 / t537;
t512 = t535 * t576;
t505 = t572 * t512;
t571 = 0.1e1 / t575;
t511 = t535 * t571;
t119 = -t157 * t505 + t158 * t511;
t1297 = -t119 - 0.1e1;
t1071 = t454 * t822 + t459 * t819;
t337 = -t1007 * t1071 - t784;
t302 = t337 * t1272;
t336 = -t1008 * t1071 + t783;
t1231 = -t336 * t1176 + t302 * t660;
t253 = pkin(3) * t1231 + t1222 * t337;
t668 = t337 * t1176;
t255 = -pkin(3) * t668 + t302 * t655 + t336 * t733 + t337 * t758;
t198 = t1233 * t337 + t253 * t719 + t255 * t717;
t199 = t1234 * t337 + t253 * t717 + t255 * t718;
t137 = -t198 * t505 + t199 * t511;
t1296 = -t137 - 0.1e1;
t1223 = t720 + t721;
t547 = 0.2e1 * t548;
t647 = pkin(4) * t651;
t643 = pkin(3) * t647;
t638 = -0.2e1 * t643;
t577 = t1223 * t638;
t681 = t680 / t685;
t1294 = t681 * t577 ^ 2 / 0.4e1 + (t1223 * t547 - 0.8e1 * t639) * t1301;
t1292 = 0.2e1 / t537 ^ 2;
t1128 = cos(pkin(18));
t1027 = pkin(3) * t1128;
t356 = atan2(t376, t375);
t345 = sin(t356);
t1060 = qJD(2) * t345;
t1032 = pkin(1) * t1060;
t1021 = t349 * t1096;
t1104 = t349 * t367;
t278 = -t319 * t1021 + t1104 * t318;
t1111 = t278 * t345;
t282 = -t327 * t1021 + t1104 * t326;
t1289 = -pkin(1) * t1111 + t1078 * t1027 + t1032 * t282;
t346 = cos(t356);
t1059 = qJD(2) * t346;
t1028 = pkin(1) * t1059;
t1110 = t278 * t346;
t451 = sin(pkin(18));
t1145 = pkin(3) * t451;
t1288 = pkin(1) * t1110 - t1028 * t282 + t1078 * t1145;
t568 = t680 * t577;
t565 = -t568 / 0.2e1;
t1278 = t1008 * t1266;
t700 = t1008 * t701;
t650 = t1007 * t785 + t1278 + (t1007 * t702 - t700) * qJD(2);
t1235 = -t1176 * t650 + t763 * t565;
t520 = t1169 * (pkin(3) * t1235 - t643 * t1257 + t651 * t733);
t517 = t520 * t746;
t588 = t651 * t620;
t1286 = t1298 * t588 + t517;
t1157 = pkin(4) * t1173;
t598 = t1176 * t651;
t619 = 0.2e1 * t763 * t651;
t521 = t1169 * (pkin(3) * t598 + t619 * t1157 + t568 * t1251 + t650 * t733);
t518 = t521 * t746;
t589 = t651 * t621;
t1285 = t1298 * t589 + t518;
t570 = t681 * t577;
t1284 = -t763 * t570 / 0.4e1 + t650 * t667;
t334 = -t754 - t1065;
t335 = pkin(4) * t764 - pkin(3);
t295 = -pkin(4) * t661 - t335 * t334;
t296 = -t1176 * t335 + t334 * t761;
t1170 = 0.1e1 / pkin(8);
t740 = t1170 * t747;
t689 = atan2(t296 * t740, t295 * t740);
t687 = sin(t689);
t688 = cos(t689);
t233 = -t1128 * t688 - t451 * t687;
t464 = 0.1e1 / pkin(6);
t1281 = (t1165 * t854 + t1290) * t464;
t1280 = t1299 * t1169;
t292 = 0.1e1 / t295 ^ 2;
t294 = t296 ^ 2;
t259 = t292 * t294 + 0.1e1;
t258 = 0.1e1 / t259 ^ 2;
t1277 = 0.2e1 * t258;
t573 = t571 * t572;
t1276 = -0.2e1 * t573;
t1274 = -0.2e1 * t651;
t207 = pkin(4) * t1235 + t334 * t647 + t335 * t638;
t618 = t752 * t643;
t616 = t1170 * t618;
t200 = t207 * t740 - t295 * t616;
t1158 = pkin(3) * t1172;
t646 = pkin(4) * t650;
t208 = pkin(4) * t598 + t1158 * t619 + t334 * t646 + t335 * t565;
t201 = t208 * t740 - t296 * t616;
t748 = t296 * t754;
t736 = t292 * t748;
t709 = -0.2e1 * pkin(8) * t258 * t736;
t291 = 0.1e1 / t295;
t749 = t291 * t754;
t742 = pkin(8) * t749;
t723 = t742 * t1277;
t1224 = t200 * t709 + t201 * t723;
t1271 = -0.2e1 * t1224;
t1201 = t520 * t747 - t588 * t746;
t587 = t589 * t746;
t503 = t1201 * t1121 + (t751 * t521 / 0.2e1 + t587) * t1120;
t504 = (t521 * t747 - t587) * t1121 + t1201 * t1120;
t539 = t572 * t576;
t1270 = (-t503 * t539 - t504 * t571) * t1292;
t540 = t574 * t573;
t485 = (t503 * t540 + t504 * t539) * t1292;
t483 = t485 * t539;
t484 = t571 * t485;
t1191 = t1120 * t1285 - t1121 * t1286;
t1192 = t1120 * t1286 + t1121 * t1285;
t501 = t535 * t503;
t502 = t535 * t504;
t1268 = t576 * t501 * t1276 - t572 * t502;
t1079 = 0.2e1 * t1159;
t1227 = t1223 * t1079;
t1188 = qJD(3) * t838 + t834 * t1306 + t420 * t777 + t841 * t943;
t939 = pkin(1) * t944;
t927 = pkin(5) * t939;
t918 = t1165 * t927;
t908 = t1174 * t918;
t1212 = qJD(3) * t879 + t454 * t908;
t1208 = t1166 * t388;
t385 = -0.8e1 * t1175 * t921 + 0.2e1 * t1282 * t943;
t323 = t793 * t1208 / 0.4e1 + t385 * t934 + t790 + (-t1255 * t952 + t943 * t1259) * t1160 + (pkin(5) * t1012 - t885) * t944;
t938 = pkin(1) * t943;
t325 = -t850 + 0.4e1 * t915 + (t943 * t1012 + t952 * t799 + t931 + (t1050 * t385 - t804 * t1208 / 0.4e1) * t420 + t938 * t1254) * pkin(5);
t892 = t459 * t908;
t262 = qJD(3) * t872 + t1188 * t454 + t1212 * t366 - t1304 * t459 + t323 * t881 + t325 * t880 - t364 * t892;
t1057 = qJD(3) * t454;
t263 = t323 * t879 + t325 * t881 + (t1057 * t900 + t892) * t366 + t1212 * t364 + t1188 * t459 + t1304 * t454;
t250 = -t1007 * t263 - t1008 * t262;
t634 = 0.8e1 * t651 * t1265;
t197 = t1227 * t250 + t309 * t634;
t249 = t1007 * t262 - t1008 * t263;
t554 = t757 * t570 / 0.4e1;
t596 = t651 * t1301;
t631 = t646 * t1252;
t640 = t1173 * t647;
t633 = 0.2e1 * t640;
t135 = t197 * t655 + t249 * t733 + t250 * t758 + t261 * t554 + t308 * t633 + t309 * t631 + (-t1176 * t250 + t261 * t596 + t309 * t565) * pkin(3);
t632 = -0.4e1 * t640;
t140 = t309 * t632 + t1222 * t250 + (-t1176 * t249 + t1284 * t261 + t197 * t660 + t308 * t565) * pkin(3);
t496 = t572 * t501;
t615 = t1169 * t618;
t607 = t1120 * t615;
t608 = t1121 * t615;
t488 = t511 * (t1192 * t309 + t1234 * t250 + t135 * t718 + t140 * t717 - t210 * t607 - t212 * t608) + t158 * t496 - (t1191 * t309 + t1233 * t250 + t135 * t717 + t140 * t719 + t210 * t608 - t212 * t607) * t505 + t1268 * t157;
t17 = t157 * t483 - t158 * t484 + t488;
t19 = t488 + (-t157 * t540 + t158 * t539) * t1270;
t1248 = t17 - t19;
t1056 = qJD(3) * t459;
t984 = -t454 * t771 / 0.2e1 + t459 * t766 + t380 + t820 * t1057 + t822 * t1056;
t301 = -t1007 * t984 + t1278 + (t1007 * t828 - t700) * qJD(2);
t251 = t1227 * t301 + t337 * t634;
t300 = -t1008 * t984 - t1279 + (t1008 * t828 + t699) * qJD(2);
t154 = pkin(3) * (-t301 * t1176 + t302 * t596 + t337 * t565) + t251 * t655 + t300 * t733 + t301 * t758 + t302 * t554 + t336 * t633 + t337 * t631;
t155 = pkin(3) * (-t300 * t1176 + t1284 * t302 + t251 * t660 + t336 * t565) + t1222 * t301 + t337 * t632;
t487 = t511 * (t1192 * t337 + t1234 * t301 + t154 * t718 + t155 * t717 - t253 * t607 - t255 * t608) + t199 * t496 - (t1191 * t337 + t1233 * t301 + t154 * t717 + t155 * t719 + t253 * t608 - t255 * t607) * t505 + t1268 * t198;
t28 = t198 * t483 - t199 * t484 + t487;
t30 = t487 + (-t198 * t540 + t199 * t539) * t1270;
t1247 = t28 - t30;
t112 = t576 * t496 + t502 * t571;
t447 = qJD(2) + qJD(3);
t495 = t112 + t447;
t538 = atan2(t576, t575);
t234 = sin(t538);
t1061 = qJD(1) * t460;
t1062 = qJD(1) * t455;
t414 = -t1061 * t459 + t1062 * t454;
t980 = t460 * t454 + t455 * t459;
t415 = t980 * qJD(1);
t534 = cos(t538);
t1241 = -t234 * t415 - t534 * t414;
t1082 = t459 * t460;
t418 = t454 * t455 - t1082;
t393 = qJD(1) * t418 * t447 - t980 * qJDD(1);
t1204 = t418 * qJDD(1);
t397 = t447 * t980;
t864 = t397 * qJD(1);
t846 = t1204 + t864;
t55 = t112 * t1241 - t234 * t846 - t393 * t534;
t1269 = qJD(4) * t495 - t55;
t400 = t929 + t1066;
t413 = -pkin(1) * t952 - pkin(5);
t386 = -pkin(1) * t1086 - t413 * t400;
t387 = t1147 * t400 - t413 * t465;
t457 = sin(pkin(15));
t462 = cos(pkin(15));
t897 = t462 * t909;
t377 = (t387 * t457 * t909 + t386 * t897) * t464;
t372 = 0.1e1 / t377 ^ 2;
t898 = t457 * t910;
t378 = (t386 * t898 + t387 * t897) * t464;
t1094 = t372 * t378;
t1035 = t234 * t454 * pkin(1);
t230 = qJD(2) * t1035;
t1146 = pkin(1) * t459;
t1031 = qJD(2) * t1146;
t421 = pkin(4) * t447 - t1031;
t192 = t534 * t421 + t230;
t232 = -t1128 * t687 + t451 * t688;
t1263 = -0.4e1 * t291;
t257 = 0.1e1 / t259;
t1140 = pkin(8) * t257;
t630 = t643 * t1140;
t724 = 0.2e1 * t292 * t754 * t1140;
t1225 = -t630 * t1263 + t207 * t724;
t440 = pkin(4) - t1146;
t194 = t534 * t440 + t1035;
t1108 = t292 * t296;
t1253 = 0.4e1 * t1108;
t627 = t630 * t1253;
t293 = t291 * t292;
t1202 = 0.4e1 * t257 * t293;
t741 = pkin(8) * t748;
t710 = t741 * t1202;
t1264 = -t207 * t710 + t208 * t724 - t627;
t1127 = pkin(1) * qJD(3);
t1030 = t234 * t1127;
t533 = pkin(1) * t534;
t527 = qJD(2) * t533;
t525 = t454 * t527;
t1238 = -t234 * t421 + t525;
t528 = t454 * t533;
t195 = t234 * t440 - t528;
t526 = qJD(3) * t533;
t1129 = t1030 * t459 - t112 * t195 - t1238 * t119 + t454 * t526;
t1041 = 0.2e1 * t257;
t1260 = 0.2e1 * t413;
t1256 = -0.2e1 * t763;
t281 = t282 + 0.1e1;
t1107 = t293 * t294;
t1210 = (t1253 * t200 + t1263 * t201) * t1140 * t1159;
t1226 = -t200 * t710 + t201 * t724;
t156 = -0.2e1 * t1107 * t207 + 0.2e1 * t1108 * t208;
t1143 = pkin(4) * t334;
t1203 = t335 * t1079 - t1143;
t252 = pkin(4) * t1231 + t1203 * t337;
t735 = t1170 * t746;
t726 = t337 * t735;
t235 = t252 * t740 + t295 * t726;
t665 = t335 * t667;
t759 = t1158 * t1256;
t254 = -pkin(4) * t668 + t1143 * t336 + t302 * t665 + t337 * t759;
t236 = t254 * t740 + t296 * t726;
t716 = t200 * t724;
t1246 = (t156 * t723 + t1225) * t236 + (t156 * t709 + t1264) * t235 - t254 * t716 - t1210 * t337 - t1226 * t252 + (-t1107 * t252 + t1108 * t254) * t1271;
t1221 = t200 * t736 - t201 * t749;
t1010 = pkin(8) * t1041;
t1229 = t233 * t1010;
t108 = t1229 * t1221;
t1228 = 0.2e1 * t232;
t1186 = t1228 * t1140;
t109 = t1221 * t1186;
t1185 = t296 * t309 * (t292 * t295 - t291) * t751 * t1159;
t209 = pkin(4) * t1230 + t1203 * t309;
t211 = -pkin(4) * t670 + t1143 * t308 + t261 * t665 + t309 * t759;
t974 = -t1108 * t209 + t211 * t291;
t116 = t233 * (t1041 * t1185 + t974 * t257);
t117 = (-t1185 * t1228 - t232 * t974) * t257;
t277 = qJD(2) + t278;
t268 = t1145 * t277 + t1032;
t269 = t1027 * t277 + t1028;
t271 = pkin(1) * t345 + t1145 * t281;
t272 = t346 * pkin(1) + t1027 * t281;
t1132 = t108 * t272 - t109 * t271 - t116 * t269 - t117 * t268 + t1288 * t233 + t1289 * t232;
t1131 = -t108 * t271 - t109 * t272 + t116 * t268 - t117 * t269 - t1288 * t232 + t1289 * t233;
t59 = t454 * t1030 + t112 * t194 - t459 * t526;
t73 = t192 * t119;
t1130 = t59 - t73;
t445 = t460 * pkin(1);
t1245 = -pkin(13) - t445;
t532 = t534 * pkin(4);
t529 = t112 * t532;
t524 = t459 * t527;
t84 = t137 * t192 + t230 - t524;
t1244 = t529 - t84;
t1105 = t345 * t455;
t344 = t460 * t346;
t1206 = -t344 + t1105;
t1243 = t282 * t1206;
t1088 = t415 * t447;
t1144 = pkin(4) * t234;
t1242 = t1031 * t234 + t112 * t1144 + t1238 * t137 + t525;
t461 = cos(qJ(1));
t1080 = t460 * t461;
t1083 = t455 * t461;
t410 = t1080 * t459 - t1083 * t454;
t411 = t980 * t461;
t185 = -t410 * t234 - t411 * t534;
t1074 = t234 * t980 + t418 * t534;
t1026 = qJD(2) * t1127;
t1119 = pkin(1) * qJDD(2);
t1240 = t459 * t1026 + t454 * t1119;
t1237 = -t1176 * t551 + t651 * t568;
t1236 = t551 * t1256 + 0.4e1 * t651 * t650;
t1232 = t1299 * t1170;
t694 = t235 * t736 - t236 * t749;
t1217 = t1281 * t462;
t1216 = t1281 * t457;
t317 = t345 * t460 + t346 * t455;
t315 = t317 * qJD(1);
t684 = t694 * t1010;
t456 = sin(qJ(1));
t408 = t980 * t456;
t1085 = t455 * t456;
t409 = t1082 * t456 - t1085 * t454;
t182 = t409 * t234 + t408 * t534;
t184 = t408 * t234 - t409 * t534;
t186 = t411 * t234 - t410 * t534;
t189 = t234 * t414 - t534 * t415;
t191 = t418 * t234 - t534 * t980;
t550 = -t1195 * t454 + t1196 * t459;
t1193 = -t1176 * t550 - t1294 * t763 - t650 * t568;
t1184 = -(pkin(3) * t1193 + 0.4e1 * t649 * t1157 + t548 * t1257 - t551 * t733) * t750 / 0.2e1 + t517 * t1274 + t1280 * t622;
t1194 = (t1237 * pkin(3) + t1236 * t1157 + t1294 * t757 + t550 * t733) * t739 + t518 * t1274 + t1280 * t623;
t446 = qJDD(2) + qJDD(3);
t481 = -t446 + (t1120 * t1194 - t1121 * t1184) * t505 + (-t1184 * t1120 - t1194 * t1121) * t511 + (-0.2e1 * t496 + t484) * t504 + (t512 * t1276 * t503 + t483) * t503;
t371 = 0.1e1 / t377;
t1156 = pkin(5) * t1175;
t1151 = -pkin(9) * t1248 - t1129;
t1148 = pkin(1) * t400;
t1142 = pkin(4) * t415;
t1139 = g(1) * t184;
t1138 = g(1) * t461;
t1137 = g(2) * t461;
t1136 = g(3) * t460;
t403 = t408 * pkin(4);
t405 = t411 * pkin(4);
t416 = t418 * pkin(4);
t453 = sin(qJ(4));
t458 = cos(qJ(4));
t95 = t189 * t453 - t458 * t495;
t97 = t458 * t189 + t453 * t495;
t1135 = t95 * t97;
t1134 = -pkin(9) * t1247 + t1242;
t1020 = t350 * t1096;
t1000 = t319 * t1020;
t1001 = t284 * t1020;
t727 = t309 * t735;
t693 = t209 * t740 + t295 * t727;
t652 = t693 * t724;
t653 = t693 * t741;
t692 = t211 * t740 + t296 * t727;
t654 = t692 * t742;
t1133 = -t207 * t653 * t1202 + t1001 * t327 + t208 * t652 - t627 * t693 + t1225 * t692 + (-t292 * t653 + t654) * t156 * t1277 - t1000 * t288 - t211 * t716 - t1210 * t309 - t1226 * t209 + (-t1107 * t209 + t1108 * t211) * t1271 + t1302;
t1054 = qJD(4) * t453;
t13 = t1054 * t189 - t1269 * t458 + t453 * t481;
t1126 = t13 * t458;
t1053 = qJD(4) * t458;
t14 = t1053 * t189 + t1269 * t453 + t458 * t481;
t1125 = t14 * t453;
t56 = t112 * t189 + t234 * t393 - t534 * t846;
t54 = qJDD(4) + t56;
t1124 = t191 * t54;
t1123 = t453 * t95;
t1122 = t458 * t97;
t98 = -pkin(9) * t495 - t192;
t1118 = qJD(4) * t98;
t99 = pkin(11) * t495 - t1238;
t1117 = qJD(4) * t99;
t1116 = t1297 * t453;
t1115 = t1297 * t458;
t1114 = t1296 * t453;
t1113 = t1296 * t458;
t363 = (-t973 + (pkin(5) * t1260 + t1012 - t400) * t420) * pkin(1);
t365 = t413 * t1012 + (pkin(5) * t1045 + t400 * t952 - t1086) * pkin(1);
t896 = t464 * t909;
t876 = t462 * t896;
t878 = t464 * t898;
t993 = t420 * t464 * t1042;
t978 = t462 * t993;
t979 = t457 * t993;
t328 = t363 * t878 + t365 * t876 - t386 * t979 + t387 * t978;
t877 = t457 * t896;
t329 = t363 * t876 + t365 * t877 + t386 * t978 + t387 * t979;
t374 = t378 ^ 2;
t357 = t372 * t374 + 0.1e1;
t354 = 0.1e1 / t357;
t283 = (-t1094 * t329 + t328 * t371) * t354;
t463 = qJD(1) ^ 2;
t1109 = t283 * t463;
t358 = atan2(t378, t377);
t351 = sin(t358);
t352 = cos(t358);
t1100 = t351 * t352;
t355 = 0.1e1 / t357 ^ 2;
t1098 = t355 * t371;
t373 = t371 * t372;
t1093 = t373 * t374;
t1089 = t414 * t415;
t361 = t1267 * pkin(1) + t927 * t1260 - t400 * t939;
t362 = -pkin(1) * t931 - 0.2e1 * t933 * t1156 + t400 * t938 + t413 * t799;
t903 = t464 * t918;
t889 = t462 * t903;
t891 = t457 * t903;
t321 = t361 * t878 + t362 * t876 - t386 * t891 + t387 * t889;
t1022 = t321 * t1098;
t320 = t361 * t876 + t362 * t877 + t386 * t889 + t387 * t891;
t285 = -0.2e1 * t1093 * t320 + 0.2e1 * t1094 * t321;
t289 = -0.2e1 * t1093 * t329 + 0.2e1 * t1094 * t328;
t1077 = -t285 * t328 * t1098 + t289 * t1022 + (t285 * t329 - t289 * t320) * t355 * t1094;
t347 = t351 ^ 2;
t348 = t352 ^ 2;
t1072 = t347 - t348;
t1070 = t416 + t445;
t1033 = pkin(1) * t1083;
t1034 = pkin(1) * t1085;
t1069 = g(1) * t1033 + g(2) * t1034;
t1068 = pkin(1) * t1080 + t461 * pkin(13);
t448 = t455 ^ 2;
t449 = t460 ^ 2;
t1067 = t448 - t449;
t1064 = pkin(7) * qJDD(1);
t1023 = t320 * t1094;
t280 = (t321 * t371 - t1023) * t354;
t1063 = qJD(1) * t280;
t1058 = qJD(2) * t455;
t187 = qJD(4) + t1241;
t1055 = qJD(4) * t187;
t1052 = qJDD(1) * pkin(13);
t1049 = qJD(1) * qJD(2);
t1048 = qJDD(2) * t459;
t1047 = t455 * qJDD(1);
t1046 = t460 * qJDD(1);
t1038 = 0.2e1 * qJD(1);
t443 = pkin(1) * t1058;
t442 = pkin(1) * t1062;
t402 = -pkin(13) - t1070;
t1019 = t455 * t463 * t460;
t1017 = -t410 * pkin(4) + t1068;
t1015 = t345 * t1062;
t343 = t346 * t1061;
t1009 = t460 * t1049;
t395 = -pkin(4) * t397 + t443;
t399 = t442 - t1142;
t1006 = 0.2e1 * pkin(7) * t1063;
t1003 = -0.2e1 * pkin(13) * t1049;
t964 = -t284 * t1025 + t1104 * (t1189 * t450 + t1190 * t452) + qJDD(2) - (-t1189 * t452 + t1190 * t450) * t1021;
t202 = (t1001 + (t1106 * t369 - t1303) * t1261) * t319 + t964;
t1002 = qJDD(2) * t281 + t202;
t999 = t1100 * t1109;
t998 = t1063 * t1100;
t996 = t455 * t1009;
t995 = t403 - t1034;
t994 = t405 - t1033;
t992 = -g(1) * t182 - g(2) * t185;
t423 = g(2) * t456 + t1138;
t991 = g(1) * t456 - t1137;
t990 = t1245 * t456;
t422 = t1245 * qJD(1);
t398 = -pkin(4) * t414 + t422;
t150 = pkin(9) * t1241 - pkin(11) * t189 + t398;
t86 = t150 * t458 - t453 * t99;
t87 = t150 * t453 + t458 * t99;
t988 = t453 * t87 + t458 * t86;
t987 = -t453 * t86 + t458 * t87;
t986 = -t453 * t97 - t458 * t95;
t985 = -t1122 + t1123;
t983 = t277 * t282 - t278 * t281;
t314 = -t343 + t1015;
t982 = t314 * t346 - t315 * t345;
t975 = -t1062 * t422 - t1136;
t972 = t409 * pkin(4) + t990;
t64 = t1297 * t184;
t66 = t1297 * t186;
t70 = t1297 * t191;
t971 = g(1) * t66 + g(2) * t64 + g(3) * t70;
t65 = t1297 * t182;
t67 = t1297 * t185;
t71 = t1297 * t1074;
t970 = -g(1) * t67 + g(2) * t65 + g(3) * t71;
t76 = t1296 * t184;
t78 = t1296 * t186;
t82 = t1296 * t191;
t969 = g(1) * t78 + g(2) * t76 + g(3) * t82;
t77 = t1296 * t182;
t79 = t1296 * t185;
t83 = t1296 * t1074;
t968 = -g(1) * t79 + g(2) * t77 + g(3) * t83;
t433 = qJD(2) * t442;
t412 = qJDD(1) * t1245 + t433;
t68 = t1297 * t1241;
t9 = -t458 * t19 + t453 * t68;
t965 = -t1054 * t1297 - t17 * t458 - t9;
t961 = -pkin(7) * t463 + t423;
t960 = pkin(13) * t463 + t423;
t10 = t19 * t453 + t458 * t68;
t959 = -t1053 * t1297 + t17 * t453 - t10;
t80 = t1296 * t1241;
t20 = -t458 * t30 + t453 * t80;
t958 = -t1054 * t1296 - t28 * t458 - t20;
t21 = t30 * t453 + t458 * t80;
t957 = -t1053 * t1296 + t28 * t453 - t21;
t956 = qJD(1) * t1077 + qJDD(1) * t283;
t954 = -t991 + 0.2e1 * t1064;
t953 = t991 + 0.2e1 * t1052;
t431 = t454 * t1026;
t407 = -pkin(1) * t1048 + pkin(4) * t446 + t431;
t47 = -qJD(3) * t524 - qJDD(2) * t528 + t112 * t192 + t234 * t407;
t15 = -pkin(11) * t481 + t47;
t950 = g(2) * t184 + g(3) * t191 - qJD(4) * t150 - t15;
t107 = -pkin(11) * t1297 + t195;
t7 = t17 * pkin(11) + t59;
t949 = -t107 * t54 - t1118 * t1297 - t187 * t7;
t125 = -pkin(11) * t1296 + t1144;
t25 = t28 * pkin(11) + t529;
t948 = -t1118 * t1296 - t125 * t54 - t187 * t25;
t151 = -pkin(9) * t1074 - pkin(11) * t191 + t402;
t48 = t112 * t1238 + t1240 * t234 + t407 * t534;
t16 = pkin(9) * t481 - t48;
t396 = -t1057 * t455 - t1058 * t454 + t1082 * t447;
t58 = t1074 * t112 + t397 * t234 - t396 * t534;
t947 = -t1055 * t151 + t16 * t191 + t58 * t98;
t936 = -g(1) * t990 - g(2) * t1068;
t935 = -t344 + t1243;
t928 = -g(1) * t411 - g(2) * t408 - g(3) * t418 + t415 * t422 + t431;
t57 = t112 * t191 - t396 * t234 - t397 * t534;
t35 = pkin(9) * t57 - pkin(11) * t58 + t395;
t923 = t1118 * t191 + t151 * t54 + t187 * t35 + t1139;
t919 = -g(1) * t410 - g(2) * t409 - g(3) * t980 - t414 * t422 + t1240;
t391 = t433 + (t1245 - t416) * qJDD(1) - pkin(4) * t864;
t34 = t56 * pkin(9) + t55 * pkin(11) + t391;
t1 = qJD(4) * t86 + t458 * t15 + t453 * t34;
t33 = t458 * t34;
t2 = -qJD(4) * t87 - t453 * t15 + t33;
t912 = -qJD(4) * t988 + t1 * t458 - t2 * t453;
t911 = qJD(4) * t986 - t1125 - t1126;
t247 = t281 * t317;
t875 = 0.2e1 * t889;
t239 = t277 * t317;
t871 = t1055 * t107 - t1297 * t16 + t17 * t98 - t970;
t870 = t1055 * t125 - t1296 * t16 + t28 * t98 - t968;
t725 = t257 * t291 / t740;
t711 = t296 * t724;
t613 = -0.2e1 * t616;
t439 = t461 * t453;
t394 = -t414 ^ 2 + t415 ^ 2;
t392 = t1245 * t412 + t422 * t443 + t936;
t390 = t846 - t1088;
t389 = -t414 * t447 + t393;
t339 = t345 * t1085;
t333 = pkin(1) * t1187 - t1148 * t859 + 0.4e1 * t1156 * t1205 + t854 * t1260;
t332 = t1214 * pkin(1) + t1148 * t858 + t1213 * t1156 - t1293 * t413;
t313 = t1206 * t461;
t312 = t317 * t461;
t311 = t344 * t456 - t339;
t310 = t317 * t456;
t304 = (t1128 * t1206 - t317 * t451) * pkin(3) + t1245;
t303 = t422 + (t1128 * t314 - t315 * t451) * pkin(3);
t279 = t280 ^ 2;
t248 = -t1206 - t1243;
t246 = t281 * t315;
t245 = t1015 * t281 - t282 * t343 - t343;
t244 = t247 * t461;
t243 = (t935 + t1105) * t461;
t242 = t247 * t456;
t241 = t456 * t935 + t339;
t240 = t277 * t1206;
t238 = qJD(1) * t239 - t1046 * t346 + t1047 * t345;
t237 = t1015 * t277 - t1046 * t345 - t278 * t343 + (-t1009 - t1047) * t346;
t206 = t442 + (t1128 * t246 + t245 * t451) * pkin(3);
t205 = t443 + (t1128 * t239 + t240 * t451) * pkin(3);
t204 = (t1128 * t238 + t237 * t451) * pkin(3) + t412;
t203 = (t1023 * t355 - t1022) * t285 + ((-t1216 * t386 + t1217 * t387 + t332 * t876 + t333 * t878 - 0.2e1 * t361 * t891 + t362 * t875) * t371 - (t1216 * t387 + t1217 * t386 + t332 * t877 + t333 * t876 + t361 * t875 + 0.2e1 * t362 * t891) * t1094 + (0.2e1 * t373 * t378 * t320 - 0.2e1 * t321 * t372) * t320) * t354;
t181 = t186 * t458 + t453 * t456;
t180 = -t186 * t453 + t456 * t458;
t179 = t202 * t1145 + (qJDD(2) * t345 + t1059 * t278) * pkin(1);
t178 = t202 * t1027 + (qJDD(2) * t346 - t1060 * t278) * pkin(1);
t173 = -t1206 * t232 + t233 * t317;
t172 = -t1206 * t233 - t232 * t317;
t171 = -t232 * t314 + t233 * t315;
t170 = -t232 * t315 - t233 * t314;
t164 = t232 * t272 + t233 * t271;
t163 = -t232 * t271 + t233 * t272;
t162 = t232 * t269 + t233 * t268;
t161 = -t232 * t268 + t233 * t269;
t149 = -t654 * t1041 + t296 * t652 + t281;
t146 = t200 * t711 + t201 * t725 + t277;
t131 = t694 * t1186;
t130 = t1229 * t694;
t126 = pkin(9) * t1296 - t532;
t106 = pkin(9) * t1297 - t194;
t91 = -t130 * t315 + t131 * t314;
t90 = -t130 * t314 - t131 * t315;
t89 = -t130 * t268 - t131 * t269;
t88 = t130 * t269 - t131 * t268;
t81 = t1296 * t189;
t69 = t1297 * t189;
t63 = -t116 * t315 - t117 * t314 + t232 * t245 - t233 * t246;
t62 = -t116 * t314 + t117 * t315 - t232 * t246 - t233 * t245;
t52 = -t108 * t1206 - t109 * t317 - t232 * t239 - t233 * t240;
t51 = -t108 * t317 + t109 * t1206 + t232 * t240 - t233 * t239;
t50 = -t108 * t315 + t109 * t314 + t232 * t237 - t233 * t238;
t49 = -t108 * t314 - t109 * t315 - t232 * t238 - t233 * t237;
t44 = -t108 * t268 - t109 * t269 + t178 * t233 - t179 * t232;
t43 = t108 * t269 - t109 * t268 + t178 * t232 + t179 * t233;
t40 = -pkin(9) * t81 - pkin(11) * t80 - t1142;
t37 = -pkin(9) * t69 - pkin(11) * t68 + t399;
t36 = t284 * t1000 + ((t1237 * pkin(4) + t1143 * t550 + t1236 * t1158 - t1294 * t335) * t740 + t208 * t613 + t1232 * t296) * t725 + (t1232 * t295 + t207 * t613 + (0.4e1 * pkin(3) * t644 + t1193 * pkin(4) - t334 * t549 + t335 * t547) * t740) * t711 + t964 + t1225 * t201 + t1224 * t156 + t1264 * t200 + (-0.2e1 * t349 * t1303 + t376 * t1305) * t319;
t22 = t30 * pkin(11) + t84;
t11 = pkin(11) * t19 + t73;
t6 = t22 * t458 + t40 * t453;
t5 = -t22 * t453 + t40 * t458;
t4 = t11 * t458 + t37 * t453;
t3 = -t11 * t453 + t37 * t458;
t8 = [0, 0, 0, 0, 0, qJDD(1), t991, t423, 0, 0, qJDD(1) * t448 + 0.2e1 * t996, -qJD(2) * t1038 * t1067 + 0.2e1 * t1046 * t455, qJDD(2) * t455 + t1163 * t460, qJDD(1) * t449 - 0.2e1 * t996, qJDD(2) * t460 - t1163 * t455, 0, t1003 * t455 + t460 * t953, t1003 * t460 - t455 * t953, -t423, (t991 + t1052) * pkin(13), -t393 * t980 + t396 * t415, t418 * t393 - t414 * t396 - t397 * t415 - t846 * t980, -t396 * t447 - t446 * t980, t414 * t397 + t418 * t846, t397 * t447 + t418 * t446, 0, -g(1) * t409 + g(2) * t410 - t422 * t397 - t412 * t418 - t414 * t443 + (-t1204 - t1088) * t1245, g(1) * t408 - g(2) * t411 + t1245 * t393 - t396 * t422 - t412 * t980 - t415 * t443, ((-t418 * t454 - t459 * t980) * qJDD(2) + (-t396 * t459 - t397 * t454 + (-t418 * t459 + t454 * t980) * qJD(3)) * qJD(2)) * pkin(1) - t423, t392, t189 * t58 - t191 * t55, -t1074 * t55 - t1241 * t58 - t189 * t57 - t191 * t56, -t191 * t481 + t495 * t58, -t1074 * t56 + t1241 * t57, -t1074 * t481 - t495 * t57, 0, -g(2) * t186 - t1074 * t391 + t1241 * t395 + t398 * t57 + t402 * t56 + t1139, t189 * t395 + t191 * t391 + t398 * t58 - t402 * t55 - t992, t1074 * t47 + t1238 * t57 - t191 * t48 - t192 * t58 - t423, -g(1) * t972 - g(2) * t1017 + t391 * t402 + t398 * t395, t58 * t1122 + (-t1054 * t97 - t1126) * t191, t986 * t58 + (qJD(4) * t985 + t13 * t453 - t14 * t458) * t191, t458 * t1124 + t13 * t1074 + t57 * t97 + (-t1054 * t191 + t458 * t58) * t187, t58 * t1123 + (t1053 * t95 + t1125) * t191, -t453 * t1124 + t14 * t1074 - t57 * t95 + (-t1053 * t191 - t453 * t58) * t187, -t1074 * t54 + t187 * t57, -g(1) * t439 - g(2) * t181 - t1074 * t2 + t453 * t947 + t458 * t923 + t86 * t57, -g(2) * t180 + t1 * t1074 - t87 * t57 + (t947 - t1138) * t458 - t923 * t453, (t13 * t151 - t191 * t2 - t35 * t97 - t58 * t86 + (-t151 * t95 - t191 * t87) * qJD(4)) * t458 + (-t1 * t191 - t14 * t151 - t35 * t95 - t58 * t87 + (t151 * t97 + t191 * t86) * qJD(4)) * t453 + t992, -g(2) * (pkin(9) * t186 + pkin(11) * t185 + t1017) - g(1) * (-pkin(9) * t184 + pkin(11) * t182 + t972) + t988 * t35 + (qJD(4) * t987 + t1 * t453 + t2 * t458) * t151, qJDD(1) * t347 + 0.2e1 * t998, -t1038 * t1072 * t280 + 0.2e1 * qJDD(1) * t1100, t203 * t351 + t279 * t352, qJDD(1) * t348 - 0.2e1 * t998, t203 * t352 - t279 * t351, 0, t1006 * t351 - t352 * t954, t1006 * t352 + t351 * t954, -t423, (-t991 + t1064) * pkin(7), -t237 * t317 - t240 * t315, t1206 * t237 - t238 * t317 - t239 * t315 + t240 * t314, t202 * t317 - t240 * t277, t1206 * t238 + t239 * t314, -t1206 * t202 - t239 * t277, 0, g(1) * t311 + g(2) * t313 + t1206 * t412 + t1245 * t238 + t239 * t422 + t314 * t443, -g(1) * t310 + g(2) * t312 - t1245 * t237 - t240 * t422 + t315 * t443 + t317 * t412, ((-t1206 * t345 - t317 * t346) * qJDD(2) + (-t239 * t345 + t240 * t346 + (-t1206 * t346 + t317 * t345) * t278) * qJD(2)) * pkin(1) - t423, t392, t171 * t52 + t173 * t49, t170 * t52 + t171 * t51 + t172 * t49 + t173 * t50, t146 * t52 + t173 * t36, t170 * t51 + t172 * t50, t146 * t51 + t172 * t36, 0, -t205 * t170 - t304 * t50 - t204 * t172 - t303 * t51 - g(2) * (-t232 * t312 - t233 * t313) - g(1) * (t232 * t310 - t233 * t311), t205 * t171 + t304 * t49 + t204 * t173 + t303 * t52 - g(2) * (t232 * t313 - t233 * t312) - g(1) * (t232 * t311 + t233 * t310), -t161 * t52 + t162 * t51 + t172 * t43 - t173 * t44 - t423, t204 * t304 + t303 * t205 + (-g(2) * (-t1128 * t313 + t312 * t451) - g(1) * (-t1128 * t311 - t310 * t451)) * pkin(3) + t936; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1019, t1067 * t463, t1047, t1019, t1046, qJDD(2), t455 * t960 - t1136, g(3) * t455 + t460 * t960, 0, 0, t1089, t394, t389, -t1089, t390, t446, (t414 * t1062 + t447 * t1057 + (-qJDD(2) - t446) * t459) * pkin(1) + t928, (t1056 * t447 + t1062 * t415 + t446 * t454) * pkin(1) + t919, -t414 * t1031 + ((-qJD(3) * t414 + t393) * t459 - t1204 * t454) * pkin(1), ((t454 ^ 2 + t459 ^ 2) * t1119 + t975) * pkin(1) + t1069, -t189 * t68, t1241 * t68 - t189 * t69, t1248 * t189 + t1297 * t55 - t495 * t68, t1241 * t69, -t1241 * t1248 + t1297 * t56 - t495 * t69, t1248 * t495 + t1297 * t481, t1129 * t495 - t1241 * t399 + t1248 * t192 - t1297 * t48 - t194 * t481 + t398 * t69 + t970, -t1130 * t495 + t1238 * t1248 + t1297 * t47 - t399 * t189 + t195 * t481 - t398 * t68 - t971, -t1129 * t189 - t1130 * t1241 + t1238 * t69 + t192 * t68 + t194 * t55 - t195 * t56, -g(1) * t994 - g(2) * t995 - g(3) * t1070 + t1129 * t192 - t1130 * t1238 + t48 * t194 + t47 * t195 - t398 * t399, t1116 * t13 + t959 * t97, t10 * t95 - t1297 * t911 - t17 * t985 + t9 * t97, -t1116 * t54 + t187 * t959 + t69 * t97, t1115 * t14 + t95 * t965, -t1115 * t54 - t187 * t965 - t69 * t95, t187 * t69, t106 * t14 + t1151 * t95 - t187 * t3 + t453 * t949 - t458 * t871 + t69 * t86 - t9 * t98, -t10 * t98 - t106 * t13 + t1151 * t97 + t187 * t4 + t453 * t871 + t458 * t949 - t69 * t87, t10 * t86 + t3 * t97 + t4 * t95 + t87 * t9 + (-t1 * t1297 - t107 * t14 + t17 * t87 - t7 * t95 + (t107 * t97 + t1297 * t86) * qJD(4)) * t458 + (-t107 * t13 + t1297 * t2 - t17 * t86 + t7 * t97 + (t107 * t95 + t1297 * t87) * qJD(4)) * t453 + t971, t16 * t106 - t87 * t4 - t86 * t3 - g(3) * (-pkin(9) * t71 - pkin(11) * t70 + t1070) - g(2) * (-pkin(9) * t65 - pkin(11) * t64 + t995) - g(1) * (pkin(9) * t67 - pkin(11) * t66 + t994) + t1151 * t98 + t987 * t7 + t912 * t107, -t999, t1072 * t1109, t956 * t351, t999, t956 * t352, t1077 * t280 + t203 * t283, (-g(3) * t352 + t351 * t961) * t283, (g(3) * t351 + t352 * t961) * t283, 0, 0, t315 * t245, -t245 * t314 + t246 * t315, t1078 * t315 - t237 * t281 + t245 * t277, -t314 * t246, -t1078 * t314 - t238 * t281 + t246 * t277, t1078 * t277 + t202 * t281, g(1) * t244 + g(2) * t242 - g(3) * t248 - t246 * t422 + (-t314 * t1062 - t277 * t1111 + t1002 * t346 + (t1078 * t346 + t345 * t983) * qJD(2)) * pkin(1), -g(1) * t243 - g(2) * t241 + g(3) * t247 + t245 * t422 + (-t315 * t1062 - t277 * t1110 - t1002 * t345 + (-t1078 * t345 + t346 * t983) * qJD(2)) * pkin(1), (t237 * t346 - t238 * t345 - t982 * t278 + (-t245 * t346 + t246 * t345 + t282 * t982) * qJD(2)) * pkin(1), ((t345 ^ 2 + t346 ^ 2) * t1119 + t975) * pkin(1) + t1069, -t171 * t62, -t170 * t62 - t171 * t63, t1133 * t171 - t146 * t62 + t149 * t49, -t170 * t63, t1133 * t170 - t146 * t63 + t149 * t50, t1133 * t146 + t149 * t36, t163 * t36 + t44 * t149 + t206 * t170 + t303 * t63 - g(3) * (-t116 * t1206 + t117 * t317 - t232 * t247 + t233 * t248) - g(2) * (-t116 * t310 + t117 * t311 + t232 * t241 - t233 * t242) - g(1) * (-t116 * t312 - t117 * t313 + t232 * t243 - t233 * t244) + t1133 * t161 + t1131 * t146, -t164 * t36 - t43 * t149 - t206 * t171 - t303 * t62 - g(3) * (-t116 * t317 - t117 * t1206 - t232 * t248 - t233 * t247) - g(2) * (-t116 * t311 - t117 * t310 + t232 * t242 + t233 * t241) - g(1) * (t116 * t313 - t117 * t312 + t232 * t244 + t233 * t243) - t1133 * t162 - t1132 * t146, -t1131 * t171 + t1132 * t170 + t161 * t62 - t162 * t63 - t163 * t49 + t164 * t50, t43 * t164 + t44 * t163 - t303 * t206 - g(3) * (t445 + (t1128 * t248 + t247 * t451) * pkin(3)) - g(2) * (-t1034 + (-t1128 * t242 - t241 * t451) * pkin(3)) - g(1) * (-t1033 + (-t1128 * t244 - t243 * t451) * pkin(3)) + t1132 * t162 + t1131 * t161; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1089, t394, t389, -t1089, t390, t446, (-qJD(2) * t447 * t454 - t1048) * pkin(1) + t928, -t1031 * t447 + t919, 0, 0, -t189 * t80, t1241 * t80 - t189 * t81, t1247 * t189 + t1296 * t55 - t495 * t80, t1241 * t81, -t1241 * t1247 + t1296 * t56 - t495 * t81, t1247 * t495 + t1296 * t481, t1142 * t1241 - t1242 * t495 + t1247 * t192 - t1296 * t48 + t398 * t81 - t481 * t532 + t968, t1142 * t189 + t1144 * t481 + t1238 * t1247 - t1244 * t495 + t1296 * t47 - t398 * t80 - t969, -t1144 * t56 + t1238 * t81 - t1241 * t1244 + t1242 * t189 + t192 * t80 + t532 * t55, -g(1) * t405 - g(2) * t403 - g(3) * t416 + t1142 * t398 + t1144 * t47 - t1238 * t1244 - t1242 * t192 + t48 * t532, t1114 * t13 + t957 * t97, -t1296 * t911 + t20 * t97 + t21 * t95 - t28 * t985, -t1114 * t54 + t187 * t957 + t81 * t97, t1113 * t14 + t95 * t958, -t1113 * t54 - t187 * t958 - t81 * t95, t187 * t81, t1134 * t95 + t126 * t14 - t187 * t5 - t20 * t98 + t453 * t948 - t458 * t870 + t81 * t86, t1134 * t97 - t126 * t13 + t187 * t6 - t21 * t98 + t453 * t870 + t458 * t948 - t81 * t87, t20 * t87 + t21 * t86 + t5 * t97 + t6 * t95 + (-t1 * t1296 - t125 * t14 - t25 * t95 + t28 * t87 + (t125 * t97 + t1296 * t86) * qJD(4)) * t458 + (-t125 * t13 + t1296 * t2 + t25 * t97 - t28 * t86 + (t125 * t95 + t1296 * t87) * qJD(4)) * t453 + t969, t16 * t126 - t87 * t6 - t86 * t5 - g(3) * (-pkin(9) * t83 - pkin(11) * t82 + t416) - g(2) * (-pkin(9) * t77 - pkin(11) * t76 + t403) - g(1) * (pkin(9) * t79 - pkin(11) * t78 + t405) + t1134 * t98 + t987 * t25 + t912 * t125, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t171 * t90, -t170 * t90 - t171 * t91, t1246 * t171 - t146 * t90 + t49 * t684, -t170 * t91, t1246 * t170 - t146 * t91 + t50 * t684, t1246 * t146 + t36 * t684, t44 * t684 + t303 * t91 - t89 * t146 - g(3) * (-t1206 * t130 - t131 * t317) - g(2) * (-t130 * t310 - t131 * t311) - g(1) * (-t130 * t312 + t131 * t313) + t1246 * t161, -t43 * t684 + t88 * t146 - t303 * t90 - g(3) * (t1206 * t131 - t130 * t317) - g(2) * (-t130 * t311 + t131 * t310) - g(1) * (t130 * t313 + t131 * t312) - t1246 * t162, t161 * t90 - t162 * t91 - t170 * t88 + t171 * t89, -t161 * t89 - t162 * t88; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1135, -t95 ^ 2 + t97 ^ 2, t187 * t95 - t13, -t1135, t97 * t187 - t14, t54, -g(1) * t180 + t87 * t187 - t98 * t97 + t33 + (-t1117 + t1137) * t458 + t950 * t453, g(1) * t181 - g(2) * t439 + t86 * t187 + t98 * t95 + (-t34 + t1117) * t453 + t950 * t458, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
tau_reg = t8;
