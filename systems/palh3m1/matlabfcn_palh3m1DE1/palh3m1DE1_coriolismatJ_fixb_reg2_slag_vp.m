% Calculate inertial parameters regressor of coriolis matrix for
% palh3m1DE1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [4x1]
%   Generalized joint coordinates (joint angles)
% qJD [4x1]
%   Generalized joint velocities
% pkin [19x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[AB,BC,BE,BG,DA,DC,DT2,EP,GH,GP,HW,OT1,T1A,T1T2,phi1,phi2,phi410,phi78,phi79]';
% 
% Output:
% cmat_reg [(4*4)x(4*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2020-04-19 19:20
% Revision: bf71b3c88fbe513355f3920541c47e1db11bd916 (2020-04-17)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = palh3m1DE1_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(4,1),zeros(4,1),zeros(19,1)}
assert(isreal(qJ) && all(size(qJ) == [4 1]), ...
  'palh3m1DE1_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [4x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [4 1]), ...
  'palh3m1DE1_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [4x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [19 1]), ...
  'palh3m1DE1_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [19x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2020-04-19 05:42:30
% EndTime: 2020-04-19 11:20:36
% DurationCPUTime: 5349.01s
% Computational Cost: add. (144788181->998), mult. (219189789->1832), div. (9284784->28), fcn. (139144261->34), ass. (0->907)
t1142 = sin(qJ(3));
t1145 = cos(qJ(3));
t1184 = 0.1e1 / pkin(2);
t499 = pkin(2) ^ 2;
t1049 = pkin(6) ^ 2 - t499;
t1181 = pkin(5) ^ 2;
t1143 = sin(pkin(16));
t1146 = cos(pkin(16));
t490 = sin(qJ(2));
t493 = cos(qJ(2));
t804 = -t490 * t1143 + t493 * t1146;
t797 = pkin(5) * t804;
t772 = (0.2e1 * t797 + pkin(1)) * pkin(1);
t753 = t772 + t1181;
t746 = t753 - t1049;
t781 = t797 + pkin(1);
t1166 = pkin(5) + pkin(6);
t1167 = pkin(5) - pkin(6);
t731 = (pkin(2) + t1166) * (-pkin(2) + t1167) + t772;
t732 = (-pkin(2) + t1166) * (pkin(2) + t1167) + t772;
t727 = t732 * t731;
t497 = sqrt(-t727);
t805 = t493 * t1143 + t490 * t1146;
t1244 = t805 * t497;
t785 = pkin(5) * t1244;
t725 = t1184 * (t746 * t781 - t785);
t752 = 0.1e1 / t753;
t713 = t752 * t725;
t711 = -t713 / 0.2e1;
t741 = pkin(5) * t746;
t1243 = t805 * t741;
t726 = t1184 * (t497 * t781 + t1243);
t747 = t752 / 0.2e1;
t712 = t726 * t747;
t697 = t1142 * t712 + t1145 * t711;
t1276 = t713 / 0.2e1;
t698 = t1142 * t1276 + t1145 * t712;
t985 = pkin(18) + pkin(19);
t902 = sin(t985);
t903 = cos(t985);
t418 = -t902 * t697 + t903 * t698;
t501 = pkin(8) ^ 2;
t1048 = pkin(10) ^ 2 - t501;
t1183 = pkin(3) ^ 2;
t1182 = pkin(4) ^ 2;
t1280 = t903 * t697 + t902 * t698;
t689 = pkin(3) * t1280;
t687 = 0.2e1 * t689;
t678 = pkin(4) * t687 + t1182;
t675 = -t678 - t1183;
t667 = -t675 + t1048;
t658 = pkin(3) * t667;
t1293 = t418 * t658;
t1165 = -pkin(8) - pkin(10);
t638 = (pkin(3) - t1165) * (pkin(3) + t1165) + t678;
t1164 = pkin(10) - pkin(8);
t639 = (pkin(3) - t1164) * (pkin(3) + t1164) + t678;
t622 = t639 * t638;
t1185 = sqrt(-t622);
t1281 = t418 * t1185;
t1117 = cos(pkin(17));
t1116 = sin(pkin(17));
t1250 = t1116 / 0.2e1;
t1180 = 0.1e1 / pkin(10);
t682 = t689 + pkin(4);
t581 = t1180 * (t1185 * t682 - t1293);
t672 = 0.1e1 / t675;
t669 = -t672 / 0.2e1;
t572 = t581 * t669;
t1292 = pkin(3) * t1281;
t580 = t1180 * (t667 * t682 + t1292);
t573 = t672 * t580;
t363 = t1117 * t572 - t573 * t1250;
t362 = t363 ^ 2;
t1249 = -t1117 / 0.2e1;
t540 = t1116 * t572 - t573 * t1249;
t538 = 0.1e1 / t540 ^ 2;
t348 = t362 * t538 + 0.1e1;
t1179 = 0.1e1 / t348;
t361 = 0.1e1 / t540;
t1087 = t361 * t1179;
t1171 = pkin(3) * pkin(4);
t673 = 0.1e1 / t675 ^ 2;
t668 = t673 * t1171;
t570 = t580 * t668;
t571 = t581 * t668;
t1239 = t1116 * t571 - t1117 * t570;
t1172 = pkin(1) * pkin(5);
t1263 = t1172 * t805;
t798 = pkin(5) * t805;
t789 = pkin(1) * t798;
t452 = 0.4e1 * (t1166 * t1167 + t772) * t789 - 0.4e1 * t499 * t1263;
t728 = t804 * t741;
t1178 = 0.1e1 / t497;
t756 = t1178 * t781 / 0.2e1;
t801 = t805 ^ 2;
t796 = t801 * pkin(1);
t787 = t1181 * t796;
t708 = t1184 * (t452 * t756 + t728 - t785 - 0.2e1 * t787);
t1177 = 0.1e1 / t753 ^ 2;
t983 = t1177 * t1172;
t724 = t726 * t983;
t1226 = t708 * t747 + t805 * t724;
t795 = t1178 * t805;
t780 = -t795 / 0.2e1;
t775 = t452 * t780;
t790 = t804 * t497;
t784 = pkin(5) * t790;
t707 = t1184 * (-t784 + pkin(5) * t775 - (-t1049 + t1181) * t798 + (-0.3e1 * pkin(1) - 0.4e1 * t797) * t1263);
t723 = t725 * t983;
t1228 = t707 * t747 + t805 * t723;
t625 = t1142 * t1226 - t1145 * t1228;
t626 = t1142 * t1228 + t1145 * t1226;
t605 = t625 * t902 - t903 * t626;
t1285 = t605 * t658;
t1230 = ((pkin(3) + pkin(10)) * (pkin(3) - pkin(10)) + (t687 + pkin(4)) * pkin(4) - t501) * t1171;
t606 = t625 * t903 + t902 * t626;
t1257 = -0.4e1 * t606;
t372 = t1230 * t1257;
t1252 = t682 / 0.2e1;
t621 = 0.1e1 / t1185;
t590 = t621 * t1252;
t617 = t1185 * t606;
t688 = pkin(4) * t418;
t683 = 0.2e1 * t1183 * t688;
t551 = t1180 * (pkin(3) * t617 + t372 * t590 - t606 * t683 + t1285);
t547 = t551 * t669;
t1253 = -0.2e1 * t682;
t1229 = t1171 * t1253 - t658;
t1283 = t1185 * t605;
t613 = -t621 / 0.2e1;
t596 = t418 * t613;
t1235 = -t372 * t596 - t1283;
t550 = t1180 * (pkin(3) * t1235 - t1229 * t606);
t548 = t672 * t550;
t524 = t1116 * t547 - t1239 * t606 - t548 * t1249;
t520 = t1179 * t538 * t524;
t1238 = t1116 * t570 + t1117 * t571;
t525 = t1117 * t547 - t1238 * t606 - t548 * t1250;
t265 = t1087 * t525 - t363 * t520;
t264 = 0.1e1 + t265;
t397 = -0.4e1 * t1230 * t418;
t565 = t1180 * (t1280 * t658 + t397 * t590 - t418 * t683 + t1292);
t558 = t565 * t669;
t1290 = t1185 * t1280;
t1234 = -t397 * t596 - t1290;
t564 = t1180 * (pkin(3) * t1234 - t1229 * t418);
t559 = t672 * t564;
t527 = t1116 * t558 - t1239 * t418 - t559 * t1249;
t526 = t1179 * t527;
t523 = t538 * t526;
t528 = t1117 * t558 - t1238 * t418 - t559 * t1250;
t284 = t1087 * t528 - t363 * t523;
t283 = 0.1e1 + t284;
t1291 = pkin(4) * t1281;
t786 = t801 * pkin(1) ^ 2 * t1181;
t1289 = 0.4e1 * t752 * t1177 * t786;
t779 = t1177 * t789;
t1288 = 0.2e1 * t779;
t1287 = 0.2e1 * t418;
t485 = sin(pkin(19));
t487 = cos(pkin(19));
t407 = t1226 * t485 - t1228 * t487;
t442 = t485 * t712 + t487 * t711;
t434 = 0.1e1 / t442;
t435 = 0.1e1 / t442 ^ 2;
t1286 = t407 * t434 * t435;
t1284 = t638 + t639;
t496 = 0.1e1 / pkin(6);
t799 = pkin(1) * t804;
t788 = pkin(5) * t799;
t1282 = (t1177 * t788 + t1289) * t496;
t489 = sin(qJ(4));
t492 = cos(qJ(4));
t1066 = t489 * t492;
t1277 = 0.2e1 * t1066;
t349 = atan2(t363, t540);
t1144 = cos(t349);
t346 = sin(t349);
t472 = t1142 * t490 - t1145 * t493;
t473 = -t1142 * t493 - t1145 * t490;
t1211 = t472 * t1144 - t473 * t346;
t193 = t264 * t1211;
t1096 = t283 * t193;
t1275 = t1096 / 0.2e1;
t1070 = t472 * t346;
t341 = t473 * t1144;
t1210 = t341 + t1070;
t192 = t264 * t1210;
t1274 = t192 * t283 / 0.2e1;
t977 = t1142 * pkin(1);
t343 = t346 * t977;
t978 = t1145 * pkin(1);
t479 = -t978 + pkin(4);
t323 = t1144 * t479 + t343;
t545 = t550 * t668;
t546 = t551 * t668;
t1273 = t1116 * t545 + t1117 * t546;
t556 = t564 * t668;
t557 = t565 * t668;
t1272 = t1116 * t556 + t1117 * t557;
t1176 = 0.4e1 * t606;
t414 = -t675 - t1048;
t1138 = pkin(4) * t414;
t416 = -pkin(4) * t1280 - pkin(3);
t1256 = 0.2e1 * t416;
t1214 = t1171 * t1256 - t1138;
t336 = pkin(4) * t1235 - t1214 * t606;
t389 = -t416 * t414 + t1291;
t386 = 0.1e1 / t389 ^ 2;
t390 = -t1185 * t416 - t414 * t688;
t388 = t390 ^ 2;
t368 = t386 * t388 + 0.1e1;
t366 = 0.1e1 / t368;
t1136 = pkin(8) * t366;
t666 = t675 * t1136;
t656 = t386 * t666;
t652 = 0.2e1 * t656;
t385 = 0.1e1 / t389;
t922 = t1136 * t1171;
t872 = t385 * t922;
t1271 = t872 * t1176 + t336 * t652;
t495 = 0.1e1 / pkin(8);
t661 = t606 * t668;
t333 = (t336 * t669 - t389 * t661) * t495;
t610 = t416 * t613;
t1170 = pkin(3) * t1182;
t684 = t1170 * t1287;
t337 = pkin(4) * t617 + t1138 * t605 + t372 * t610 - t606 * t684;
t334 = (t337 * t669 - t390 * t661) * t495;
t367 = 0.1e1 / t368 ^ 2;
t1083 = t386 * t390;
t663 = t675 * t1083;
t654 = pkin(8) * t663;
t642 = t367 * t654;
t670 = t385 * t675;
t665 = pkin(8) * t670;
t655 = t367 * t665;
t1270 = -0.2e1 * t333 * t642 + 0.2e1 * t334 * t655;
t358 = pkin(4) * t1234 - t1214 * t418;
t660 = t418 * t668;
t351 = (t358 * t669 - t389 * t660) * t495;
t359 = t1138 * t1280 + t397 * t610 - t418 * t684 + t1291;
t352 = (t359 * t669 - t390 * t660) * t495;
t1269 = -t351 * t642 + t352 * t655;
t465 = t753 + t1049;
t793 = t805 * t465;
t1267 = -t790 - t793;
t1246 = t606 * t418;
t604 = pkin(4) * t605;
t603 = pkin(3) * t604;
t1169 = t1183 * t1182;
t982 = t672 * t673 * t1169;
t962 = -0.4e1 * t982;
t884 = t495 * t962;
t1266 = t495 * t673 * t603 + t884 * t1246;
t483 = t489 ^ 2;
t484 = t492 ^ 2;
t1050 = t483 + t484;
t342 = t346 * t479;
t871 = t1144 * t1142;
t800 = pkin(1) * t871 - t342;
t248 = t264 * pkin(11) - t800;
t900 = t1050 * t248;
t275 = pkin(4) * t346 + pkin(11) * t283;
t1265 = t1050 * t275;
t443 = t485 * t1276 + t487 * t712;
t1264 = t443 * t1286;
t1175 = 0.2e1 * t606;
t1262 = t1280 * t1175 + 0.2e1 * t1287 * t605;
t387 = t385 * t386;
t643 = t387 * t390 * t666;
t851 = t922 * t1083;
t1261 = t851 * t1257 - 0.4e1 * t336 * t643 + t337 * t652;
t1204 = t707 * t1288 + t725 * t1289 + t804 * t723;
t1031 = qJD(2) * t264;
t521 = t538 * t525;
t539 = t361 * t538;
t522 = t539 * t524;
t981 = 0.2e1 / t348 ^ 2;
t515 = (-t362 * t522 + t363 * t521) * t981;
t537 = t363 * t538;
t512 = t515 * t537;
t514 = t361 * t515;
t1168 = pkin(4) * t1183;
t1056 = 0.4e1 * t1168;
t1247 = t372 * t397;
t979 = t1182 * t1246;
t561 = 0.2e1 * t621 * (-0.4e1 * t1183 * t979 + t1284 * t603);
t560 = -t561 / 0.2e1;
t587 = t621 * t605;
t600 = t621 * t1280;
t403 = t621 / t622;
t1151 = -t403 / 0.4e1;
t681 = t418 * t1151;
t1195 = -t397 * t587 / 0.2e1 - t418 * t560 - t617 - t372 * t600 / 0.2e1 - t681 * t1247;
t671 = t1180 * t672;
t1207 = -(pkin(3) * t1195 + t1056 * t1246 + t603 * t1253 - t1285) * t671 / 0.2e1 + t605 * t570;
t578 = t581 * t962;
t579 = t580 * t982;
t1236 = -0.4e1 * t1116 * t579 + t1117 * t578;
t1237 = t1116 * t578 + 0.4e1 * t1117 * t579;
t1205 = -t1283 + (-t372 * t418 - t397 * t606) * t613;
t664 = t1180 * t669;
t674 = t403 * t682 / 0.4e1;
t1240 = (t1205 * pkin(3) + t1168 * t1262 + t674 * t1247 + t561 * t1252 + t606 * t658) * t664 + t605 * t571;
t1259 = 0.2e1 * t363;
t536 = t1179 * t537;
t542 = t1117 * t545;
t543 = t1116 * t546;
t553 = t1117 * t556;
t554 = t1116 * t557;
t518 = t1087 * (-t1273 * t418 + t1240 * t1117 + t1207 * t1116 - (-t1236 * t418 + t1272) * t606) - (-(-t542 + t543) * t418 - t1207 * t1117 + t1240 * t1116 - (-t1237 * t418 - t553 + t554) * t606) * t536 - t528 * t520 + (t522 * t1259 - t521) * t526;
t87 = t512 * t527 - t514 * t528 + t518;
t517 = (-t362 * t527 * t539 + t528 * t537) * t981;
t513 = t517 * t537;
t516 = t361 * t517;
t98 = t513 * t524 - t516 * t525 + t518;
t1133 = t87 - t98;
t1191 = t1236 * t1087 - t1237 * t536;
t1192 = t1238 * t1087 - t1239 * t536;
t1255 = -0.2e1 * t418;
t417 = t418 ^ 2;
t1233 = t397 * t418 * t621 - t1290;
t1057 = -0.4e1 * t1169;
t1231 = t1284 * t1171;
t391 = 0.2e1 * t1057 * t417 + 0.2e1 * t1231 * t1280;
t396 = t397 ^ 2;
t685 = 0.4e1 * t418 * t1280;
t533 = (pkin(3) * t1233 + t685 * t1168 + t1280 * t683 + t391 * t590 + t396 * t674 + t1293) * t664;
t1199 = -t391 * t596 - t396 * t681 - t397 * t600 - t1281;
t534 = (pkin(3) * t1199 + t1056 * t417 + t1229 * t1280) * t671;
t535 = t1179 * t539 * t1259;
t124 = (t1117 * t533 - t534 * t1250 + t1255 * t1272) * t1087 - (t1116 * t533 - t534 * t1249 + t554 * t1255 + t1287 * t553) * t536 + (-0.2e1 * t523 - t516) * t528 + (t535 * t527 + t513) * t527 + t1192 * t1280 + t1191 * t417;
t764 = t98 * t1031 + (-t1133 * t283 + t124 * t264) * qJD(3);
t1025 = qJD(3) * t283;
t1258 = -0.2e1 * t606;
t450 = -0.8e1 * t786 + 0.2e1 * (t731 + t732) * t788;
t1071 = t1178 / t727 * t452 ^ 2;
t909 = -t1071 / 0.4e1;
t1196 = -t804 * t1178 * t452 + t450 * t780 + t805 * t909 + t1244;
t411 = pkin(5) * t1196 - 0.2e1 * t781 * t788 - t728 + 0.4e1 * t787;
t748 = -t752 / 0.2e1;
t1198 = t411 * t1184 * t748 - t1204;
t1203 = t708 * t1288 + t726 * t1289 + t804 * t724;
t734 = -0.6e1 * t805 * t799;
t783 = t452 * t795;
t413 = -t784 - pkin(5) * t783 + t781 * t1071 / 0.4e1 + t450 * t756 - t1243 + t1181 * t734;
t745 = t1184 * t747;
t733 = t1142 * t745;
t394 = t1142 * t1203 + t1145 * t1198 + t413 * t733;
t1197 = t413 * t745 + t1203;
t395 = t1142 * t1204 + t1145 * t1197 + t411 * t733;
t370 = -t394 * t903 - t395 * t902;
t401 = t606 ^ 2;
t1232 = t372 * t606 * t621 - t370 * t1185;
t350 = 0.2e1 * t1057 * t401 + 0.2e1 * t1231 * t370;
t369 = t394 * t902 - t395 * t903;
t371 = t372 ^ 2;
t602 = t605 * t1176;
t531 = (pkin(3) * t1232 + t602 * t1168 + t350 * t590 + t369 * t658 + t370 * t683 + t371 * t674) * t664;
t1200 = -t369 * t1185 - t350 * t596 - t371 * t681 - t372 * t587;
t532 = (pkin(3) * t1200 + t1056 * t401 + t1229 * t370) * t671;
t99 = (t1117 * t531 - t532 * t1250 + t1258 * t1273) * t1087 - (t1116 * t531 + t542 * t1175 - t532 * t1249 + t543 * t1258) * t536 + (-0.2e1 * t520 - t514) * t525 + (t535 * t524 + t512) * t524 + t1191 * t401 + t1192 * t370;
t765 = (t1133 * t264 + t283 * t99) * qJD(2) + t87 * t1025;
t437 = t443 ^ 2;
t427 = t435 * t437 + 0.1e1;
t423 = 0.1e1 / t427;
t1254 = 0.2e1 * t423;
t1077 = t423 * t434;
t406 = t1226 * t487 + t1228 * t485;
t1076 = t435 * t443;
t966 = t423 * t1076;
t379 = t406 * t1077 - t407 * t966;
t378 = t379 + 0.1e1;
t662 = t495 * t669;
t1251 = pkin(4) * t662;
t975 = t87 / 0.2e1 - t98 / 0.2e1;
t1248 = t1210 * t975;
t471 = -pkin(5) - t799;
t1173 = 0.2e1 * t471;
t432 = (t798 * t1173 + t1267 + t775) * pkin(1);
t791 = t804 * t465;
t986 = -t1178 / 0.2e1;
t433 = t471 * t452 * t986 + (-0.2e1 * pkin(5) * t796 - t1244 + t791) * pkin(1);
t448 = -pkin(1) * t1244 - t471 * t465;
t449 = pkin(1) * t793 - t471 * t497;
t494 = cos(pkin(15));
t742 = t496 * t747;
t735 = t494 * t742;
t491 = sin(pkin(15));
t736 = t491 * t742;
t770 = t496 * t779;
t760 = t494 * t770;
t762 = t491 * t770;
t409 = t432 * t735 + t433 * t736 + t448 * t760 + t449 * t762;
t743 = t494 * t747;
t444 = (t449 * t491 * t747 + t448 * t743) * t496;
t438 = 0.1e1 / t444;
t439 = 0.1e1 / t444 ^ 2;
t1245 = t409 * t438 * t439;
t195 = t800 * t265;
t1082 = t387 * t388;
t325 = -0.2e1 * t1082 * t358 + 0.2e1 * t1083 * t359;
t644 = t366 * t654;
t634 = 0.2e1 * t644;
t659 = t495 * t668;
t648 = t418 * t659;
t650 = t606 * t659;
t657 = t366 * t665;
t653 = -0.2e1 * t657;
t910 = t416 * t1151;
t519 = (t1266 * t390 - t337 * t648 - t359 * t650 + (t1138 * t606 + t1262 * t1170 + t910 * t1247 + t416 * t560) * t662) * t653 + ((0.4e1 * pkin(3) * t979 + t603 * t1256 - t414 * t604) * t662 - t336 * t648 - t358 * t650 + t1266 * t389) * t634 + (t1195 * t634 + t1205 * t653) * t1251;
t632 = t358 * t643;
t645 = t359 * t656;
t646 = t358 * t656;
t828 = t418 * t851;
t852 = t418 * t872;
t139 = t519 + (0.2e1 * t646 + 0.4e1 * t852) * t334 + t1270 * t325 + (-0.4e1 * t632 + 0.2e1 * t645 - 0.4e1 * t828) * t333;
t307 = -0.2e1 * t1082 * t336 + 0.2e1 * t1083 * t337;
t144 = t1261 * t351 + 0.2e1 * t1269 * t307 + t1271 * t352 + t519;
t1242 = t139 + t144;
t1241 = t483 - t484;
t1225 = t1282 * t494;
t1224 = t1282 * t491;
t1097 = t275 * t192;
t1153 = t1210 / 0.2e1;
t1156 = t1211 / 0.2e1;
t217 = -t1144 * t978 + t284 * t323 + t343;
t59 = t98 * pkin(11) + t217;
t218 = pkin(1) * (t1145 * t346 + t284 * t871 + t871) - t284 * t342;
t60 = -t98 * pkin(9) - t218;
t215 = t283 * t1210;
t1162 = -t215 / 0.2e1;
t216 = t283 * t1211;
t247 = -t264 * pkin(9) - t323;
t824 = t247 * t216 / 0.2e1 + t248 * t1162;
t1223 = t60 * t1153 + t59 * t1156 - t1097 / 0.2e1 + t824;
t1111 = t124 * t1210;
t1218 = qJD(3) * (t216 * t283 + t1111);
t1118 = t98 * t1210;
t1101 = t264 * t216;
t919 = t1101 / 0.2e1;
t826 = t919 + t1118 / 0.2e1;
t1147 = t492 / 0.2e1;
t907 = t193 * t1147;
t911 = t1210 * t1147;
t19 = t1066 * t826 + (t283 * t907 + t87 * t911) * t489;
t1150 = -t483 / 0.2e1;
t905 = t484 / 0.2e1 + t1150;
t869 = t1210 * t905;
t211 = t283 * t869;
t997 = t211 * qJD(4);
t1222 = -qJD(2) * t19 - t1066 * t1218 - t997;
t1221 = t1280 * t659 + t417 * t884;
t1220 = t370 * t659 + t401 * t884;
t1125 = t1210 * t99;
t1219 = qJD(2) * (t193 * t264 + t1125);
t813 = qJD(2) * (-t1211 * t99 + t192 * t264);
t810 = qJD(3) * (-t1211 * t124 + t215 * t283);
t188 = t264 * t869;
t1001 = t188 * qJD(4);
t1217 = -qJD(3) * t19 - t1066 * t1219 - t1001;
t25 = -t919 + t1275 + t1248;
t20 = t25 * t1066;
t1109 = t20 * qJD(1);
t1100 = t264 * t283;
t1019 = qJD(4) * t492;
t941 = t489 * t1019;
t225 = t941 * t1100;
t1216 = t225 - t1109;
t1215 = -qJD(2) * t20 - t997;
t1213 = t341 / 0.2e1 + t1070 / 0.2e1;
t1212 = t1109 + t225;
t365 = atan2(t390 * t662, t389 * t662);
t1141 = sin(t365);
t364 = cos(t365);
t486 = sin(pkin(18));
t488 = cos(pkin(18));
t345 = -t486 * t1141 - t488 * t364;
t744 = t491 * t748;
t445 = (t448 * t744 + t449 * t743) * t496;
t1074 = t439 * t445;
t737 = t496 * t744;
t408 = t432 * t737 + t433 * t735 - t448 * t762 + t449 * t760;
t1209 = -t409 * t1074 + t408 * t438;
t1208 = qJD(3) * t20 - t1001;
t1108 = t215 * t264;
t921 = t1108 / 0.2e1;
t771 = -t1211 * t975 + t1274 - t921;
t320 = t1210 ^ 2;
t301 = t1241 * t320;
t870 = t1210 * t1277;
t1201 = (t1025 + t1031) * t870 - qJD(1) * t301;
t282 = t283 ^ 2;
t121 = t1066 * (qJD(3) * t282 + t283 * t1031) + qJD(1) * t211;
t263 = t264 ^ 2;
t114 = t1066 * (qJD(2) * t263 + t264 * t1025) + qJD(1) * t188;
t1099 = t265 * t346;
t68 = pkin(4) * t1099 - pkin(9) * t87;
t1134 = t60 - t68;
t276 = -pkin(4) * t1144 - t283 * pkin(9);
t56 = -t99 * pkin(9) - t195;
t1194 = t1133 * t247 - t1134 * t264 + t276 * t99 + t283 * t56;
t1095 = t284 * t346;
t112 = pkin(4) * t1095 - pkin(9) * t124;
t1193 = -t112 * t264 + t1133 * t276 - t1134 * t283 - t124 * t247;
t1163 = -t193 / 0.2e1;
t1161 = -t216 / 0.2e1;
t1160 = -t276 / 0.2e1;
t296 = t333 * t634 + t334 * t653 + t378;
t1159 = t296 / 0.2e1;
t974 = atan2(t443, t442);
t422 = sin(t974);
t883 = cos(t974);
t404 = t490 * t422 - t493 * t883;
t405 = t493 * t422 + t490 * t883;
t819 = t488 * t1141 - t364 * t486;
t315 = -t345 * t404 + t405 * t819;
t1158 = t315 / 0.2e1;
t1155 = -t1211 / 0.2e1;
t1154 = -t1210 / 0.2e1;
t1149 = -t489 / 0.2e1;
t1148 = t489 / 0.2e1;
t1140 = pkin(3) * t486;
t1139 = pkin(3) * t488;
t1137 = pkin(4) * t473;
t482 = t490 * pkin(1);
t961 = t265 * t1144;
t69 = pkin(4) * t961 + t87 * pkin(11);
t1135 = t59 - t69;
t1132 = pkin(1) * qJD(2);
t1131 = pkin(4) * qJD(3);
t729 = t1097 / 0.2e1 + t193 * t1160 + (t60 / 0.2e1 - t68 / 0.2e1) * t1210 - (-t59 / 0.2e1 + t69 / 0.2e1) * t1211 + t824;
t2 = t729 * t492;
t1130 = t2 * qJD(1);
t1129 = t247 * t60;
t1127 = t276 * t68;
t4 = t729 * t489;
t1124 = t4 * qJD(1);
t1123 = t489 * t59;
t1122 = t489 * t69;
t1121 = t492 * t59;
t1120 = t492 * t69;
t831 = t905 * t1096;
t5 = -t905 * t1101 - t1241 * t1248 + t831;
t1119 = t5 * qJD(1);
t1107 = t217 * t264;
t1106 = t218 * t264;
t904 = 0.2e1 * t1136;
t306 = (t351 * t663 - t352 * t670) * t904;
t278 = t345 * t306;
t279 = t819 * t306;
t375 = pkin(1) * t422 + t1140 * t378;
t376 = pkin(1) * t883 + t1139 * t378;
t227 = t278 * t376 + t279 * t375;
t1105 = t227 * t296;
t228 = -t278 * t375 + t279 * t376;
t1104 = t228 * t296;
t1103 = t247 * t283;
t1102 = t25 * qJD(1);
t1098 = t771 * qJD(1);
t297 = (t333 * t663 - t334 * t670) * t904;
t260 = t345 * t297;
t261 = t819 * t297;
t355 = t378 * t405;
t356 = t378 * t404;
t184 = -t260 * t405 - t261 * t404 - t345 * t355 - t356 * t819;
t1094 = t306 * t184;
t185 = -t260 * t404 + t261 * t405 - t345 * t356 + t355 * t819;
t1093 = t306 * t185;
t1092 = t1210 * t346;
t956 = t1144 * t1211;
t730 = (-t346 * t192 / 0.2e1 + t1144 * t1163 + (t956 / 0.2e1 + t1092 / 0.2e1) * t265) * pkin(4);
t757 = t218 * t1154 + t217 * t1156 + t323 * t1161 - t1162 * t800;
t33 = t730 - t757;
t1091 = t33 * qJD(1);
t468 = t482 + t1137;
t118 = pkin(9) * t192 - pkin(11) * t193 + t468;
t896 = t1050 * t1210;
t478 = -pkin(1) * t493 - pkin(13);
t466 = -pkin(4) * t472 + t478;
t300 = -pkin(9) * t1211 - pkin(11) * t1210 + t466;
t897 = t1050 * t300;
t35 = t118 * t896 + t193 * t897;
t1090 = t35 * qJD(1);
t1089 = t355 * t404;
t1088 = t356 * t405;
t1086 = t379 * t422;
t1085 = 0.2e1 * (t1076 * t406 - t437 * t1286) / t427 ^ 2;
t135 = pkin(9) * t215 - pkin(11) * t216 + t1137;
t40 = t135 * t896 + t216 * t897;
t1081 = t40 * qJD(1);
t1080 = t406 * t435;
t906 = t139 / 0.2e1 - t144 / 0.2e1;
t230 = -t278 * t405 - t279 * t404;
t914 = t230 * t1159;
t42 = t914 - t1094 / 0.2e1 + t906 * t315;
t1078 = t42 * qJD(1);
t316 = t345 * t405 + t404 * t819;
t229 = -t278 * t404 + t279 * t405;
t915 = t229 * t1159;
t44 = t915 - t1093 / 0.2e1 + t906 * t316;
t1073 = t44 * qJD(1);
t45 = t118 * t897;
t1072 = t45 * qJD(1);
t1068 = t483 * t264;
t65 = t135 * t897;
t1065 = t65 * qJD(1);
t844 = -t118 * t1211 + t192 * t300;
t70 = t844 * t489;
t1064 = t70 * qJD(1);
t71 = t844 * t492;
t1063 = t71 * qJD(1);
t311 = t345 * t376 + t375 * t819;
t312 = t345 * t375 - t376 * t819;
t73 = t227 * t1158 + t312 * t230 / 0.2e1 - t228 * t316 / 0.2e1 - t311 * t229 / 0.2e1;
t1062 = t73 * qJD(1);
t1061 = t73 * qJD(2);
t823 = t247 * t1154 + t248 * t1155;
t803 = t118 / 0.2e1 + t823;
t74 = t803 * t489;
t1060 = t74 * qJD(1);
t77 = t803 * t492;
t1059 = t77 * qJD(1);
t1058 = 0.4e1 * t1170;
t1055 = t139 - t144;
t916 = t276 * t1148;
t920 = t1103 / 0.2e1;
t1054 = t264 * t916 + t489 * t920;
t918 = t264 * t1147;
t1053 = t276 * t918 + t492 * t920;
t194 = t323 * t265;
t864 = t264 * t1155 + t1163;
t141 = t864 * t492;
t1047 = qJD(1) * t141;
t142 = t864 * t489;
t1046 = qJD(1) * t142;
t863 = t283 * t1155 + t1161;
t170 = t863 * t492;
t1045 = qJD(1) * t170;
t171 = t863 * t489;
t1044 = qJD(1) * t171;
t1040 = qJD(1) * t315;
t1039 = qJD(1) * t316;
t1038 = qJD(1) * t1211;
t1037 = qJD(1) * t1210;
t398 = (t404 * t488 - t405 * t486) * pkin(3) + t478;
t1036 = qJD(1) * t398;
t1035 = qJD(1) * t473;
t1034 = qJD(1) * t478;
t1033 = qJD(1) * t492;
t1032 = qJD(1) * t493;
t441 = t445 ^ 2;
t430 = t439 * t441 + 0.1e1;
t428 = 0.1e1 / t430;
t381 = t1209 * t428;
t1030 = qJD(2) * t381;
t1029 = qJD(2) * t489;
t1028 = qJD(2) * t490;
t1027 = qJD(2) * t492;
t1026 = qJD(2) * t493;
t1024 = qJD(3) * t398;
t1023 = qJD(3) * t478;
t1022 = qJD(3) * t489;
t1021 = qJD(3) * t492;
t1020 = qJD(4) * t489;
t841 = -t1211 * t135 + t215 * t300;
t100 = t841 * t489;
t1018 = t100 * qJD(1);
t101 = t841 * t492;
t1017 = t101 * qJD(1);
t820 = t276 * t1153 + t275 * t1156;
t802 = -t135 / 0.2e1 + t820;
t104 = t802 * t489;
t1016 = t104 * qJD(1);
t107 = t802 * t492;
t1015 = t107 * qJD(1);
t108 = t184 * t316 + t185 * t315;
t1014 = t108 * qJD(1);
t840 = t1210 * t192 - t1211 * t193;
t109 = t840 * t489;
t1013 = t109 * qJD(1);
t110 = t840 * t492;
t1012 = t110 * qJD(1);
t1011 = t840 * qJD(1);
t839 = t1210 * t215 - t1211 * t216;
t125 = t839 * t489;
t1010 = t125 * qJD(1);
t126 = t839 * t492;
t1009 = t126 * qJD(1);
t1008 = t839 * qJD(1);
t130 = t227 * t312 + t228 * t311;
t1007 = t130 * qJD(2);
t138 = t229 * t315 + t230 * t316;
t1006 = t138 * qJD(1);
t335 = t482 + (t355 * t488 + t356 * t486) * pkin(3);
t173 = -t184 * t398 - t315 * t335;
t1005 = t173 * qJD(1);
t174 = t185 * t398 + t316 * t335;
t1004 = t174 * qJD(1);
t179 = -t1211 * t468 + t192 * t466;
t1003 = t179 * qJD(1);
t180 = t1210 * t468 + t193 * t466;
t1002 = t180 * qJD(1);
t191 = t264 * t1213;
t1000 = t191 * qJD(1);
t198 = t1137 * t1211 - t466 * t215;
t999 = t198 * qJD(1);
t199 = -t1137 * t1210 - t466 * t216;
t998 = t199 * qJD(1);
t214 = t283 * t1213;
t996 = t214 * qJD(1);
t329 = -t355 * t405 + t356 * t404;
t995 = t329 * qJD(1);
t353 = t355 * t478 + t404 * t482;
t994 = t353 * qJD(1);
t354 = -t356 * t478 + t405 * t482;
t993 = t354 * qJD(1);
t431 = atan2(t445, t444);
t425 = sin(t431);
t426 = cos(t431);
t357 = (t425 ^ 2 - t426 ^ 2) * t381;
t992 = t357 * qJD(1);
t456 = t472 ^ 2 - t473 ^ 2;
t991 = t456 * qJD(1);
t458 = -t472 * t482 + t473 * t478;
t990 = t458 * qJD(1);
t459 = t472 * t478 + t473 * t482;
t989 = t459 * qJD(1);
t476 = -t490 ^ 2 + t493 ^ 2;
t988 = t476 * qJD(1);
t984 = qJD(2) + qJD(3);
t980 = t478 * t482;
t976 = pkin(7) * t381 * t425;
t973 = t1144 * t87;
t972 = pkin(13) * t490 * qJD(1);
t971 = pkin(13) * t1032;
t965 = t98 * t1148;
t67 = -t1120 / 0.2e1;
t960 = t284 * t1144;
t954 = t489 * t1038;
t953 = t1211 * t1033;
t952 = qJD(1) * t381 * t426;
t951 = t489 * t1033;
t950 = t247 * t1031;
t949 = t426 * t1030;
t948 = t276 * t1025;
t947 = t264 * t1020;
t946 = t264 * t1019;
t945 = t283 * t1020;
t944 = t283 * t1019;
t943 = t1211 * t1020;
t942 = t1211 * t1019;
t940 = t184 * t1040;
t939 = t230 * t1040;
t938 = t185 * t1039;
t937 = t229 * t1039;
t936 = t192 * t1038;
t935 = t215 * t1038;
t934 = t193 * t1037;
t933 = t216 * t1037;
t932 = t229 * t1036;
t931 = t230 * t1036;
t930 = t335 * t1036;
t929 = qJD(1) * t1089;
t928 = qJD(1) * t1088;
t927 = t466 * t468 * qJD(1);
t926 = t472 * t1035;
t925 = t472 * t1034;
t924 = t473 * t1034;
t923 = t490 * t1026;
t913 = t1211 * t1149;
t912 = t1211 * t1147;
t901 = t264 * t1050;
t898 = t1050 * t283;
t893 = qJD(2) * t1241;
t892 = qJD(3) * t1241;
t462 = t984 * t473;
t461 = t984 * t472;
t891 = t466 * pkin(4) * t1035;
t890 = -qJD(4) + t1038;
t889 = qJD(2) * t978;
t888 = qJD(2) * t977;
t887 = qJD(1) * t976;
t886 = pkin(7) * t952;
t885 = t1076 * t1085;
t882 = t283 * t961;
t881 = t483 * t934;
t880 = t484 * t934;
t879 = t483 * t933;
t878 = t484 * t933;
t877 = t263 * t941;
t876 = t282 * t941;
t875 = t320 * t941;
t874 = t425 * t949;
t873 = t1210 * t951;
t868 = -0.2e1 * t1210 * t941;
t867 = -0.2e1 * t873;
t866 = 0.2e1 * t873;
t862 = t247 * t99 + t264 * t56;
t861 = t247 * t98 + t264 * t60;
t859 = t276 * t87 + t283 * t68;
t55 = pkin(11) * t99 + t194;
t853 = qJD(2) * (-t247 * t264 - t55);
t21 = t771 * t492;
t38 = t975 * t492;
t850 = qJD(1) * t21 + qJD(4) * t38;
t23 = t771 * t489;
t36 = t975 * t489;
t849 = qJD(1) * t23 + qJD(4) * t36;
t845 = t112 * t283 + t124 * t276;
t128 = -t217 * t800 + t323 * t218;
t113 = pkin(4) * t960 + t124 * pkin(11);
t838 = qJD(3) * (-t276 * t283 - t113);
t837 = t890 * t489;
t836 = t890 * t492;
t835 = qJD(2) * t193 + qJD(3) * t216;
t833 = t379 * t883;
t738 = t485 * t745;
t832 = -t406 * t434 * t1085 + (t1197 * t487 + t1204 * t485 + t411 * t738) * t1077 - (t1198 * t487 + t1203 * t485 + t413 * t738) * t966;
t827 = t87 * t1155 + t1274;
t821 = t264 * t1160 - t1103 / 0.2e1;
t818 = -t1144 * t800 - t323 * t346;
t817 = qJD(4) * t191 - t936;
t816 = qJD(4) * t214 - t935;
t812 = (qJD(2) * t99 + qJD(3) * t98) * t264;
t809 = (qJD(2) * t87 + qJD(3) * t124) * t283;
t808 = (qJD(2) * t192 + qJD(3) * t215) * t1211;
t807 = t835 * t1210;
t119 = -qJD(2) * t188 - qJD(3) * t211 + t320 * t951;
t146 = t1068 * t283 - t1100 * t484;
t204 = t1241 * t263;
t774 = qJD(2) * t204 + qJD(3) * t146 + t264 * t866;
t231 = t1241 * t282;
t773 = qJD(2) * t146 + qJD(3) * t231 + t283 * t866;
t767 = qJD(2) * (t1210 * t56 + t1211 * t55 - t192 * t248 + t193 * t247);
t766 = qJD(3) * (t112 * t1210 + t113 * t1211 - t215 * t275 + t216 * t276);
t755 = 0.2e1 * t760;
t641 = -0.2e1 * t650;
t640 = -0.2e1 * t648;
t481 = qJD(3) * t978;
t480 = qJD(3) * t977;
t477 = t490 * t1032;
t475 = qJD(2) * t980;
t474 = qJD(1) * t980;
t412 = (t450 * t986 + t909) * t471 + (pkin(5) * t734 + t1267 - t783) * pkin(1);
t410 = (-t791 + (t804 * t1173 + 0.4e1 * t796) * pkin(5) + t1196) * pkin(1);
t380 = t381 ^ 2;
t373 = t425 * t952;
t332 = -0.2e1 * t1209 * (t1074 * t408 - t441 * t1245) / t430 ^ 2 + ((t410 * t737 + t412 * t735 - 0.2e1 * t432 * t762 + t433 * t755) * t438 - (t410 * t735 + t412 * t736 + t432 * t755 + 0.2e1 * t433 * t762) * t1074 + (-t1074 * t1224 + t1225 * t438) * t449 + (-t1074 * t1225 - t1224 * t438) * t448 + 0.2e1 * (t445 * t1245 - t408 * t439) * t409) * t428;
t331 = (t885 + (-t1080 + t1264) * t1254) * t407 + t832;
t327 = pkin(1) * t833 + t1140 * t331;
t326 = -pkin(1) * t1086 + t1139 * t331;
t266 = t283 * t868;
t242 = t264 * t868;
t181 = -0.2e1 * ((pkin(4) * t1233 + t1138 * t418 + t685 * t1170 + t1280 * t684 + t391 * t610 + t396 * t910) * t662 + t359 * t640 + t1221 * t390) * t657 + 0.2e1 * ((t1058 * t417 + t1214 * t1280) * t662 + t358 * t640 + t1221 * t389 + t1199 * t1251) * t644 + 0.2e1 * t351 * t645 + 0.2e1 * (t646 + 0.2e1 * t852) * t352 + 0.2e1 * t1269 * t325 + 0.4e1 * (-t828 - t632) * t351;
t178 = -t260 * t375 + t261 * t376 + t326 * t345 + t327 * t819;
t177 = t260 * t376 + t261 * t375 - t326 * t819 + t327 * t345;
t172 = t1149 * t216 - t283 * t913;
t169 = t1147 * t216 - t283 * t912;
t145 = t146 * qJD(4);
t143 = t1149 * t193 - t264 * t913;
t140 = -t264 * t912 + t907;
t129 = ((pkin(4) * t1232 + t1138 * t369 + t602 * t1170 + t350 * t610 + t370 * t684 + t371 * t910) * t662 + t337 * t641 + t1220 * t390) * t653 + ((t1058 * t401 + t1214 * t370) * t662 + t336 * t641 + t1220 * t389 + t1200 * t1251) * t634 + t832 + t1271 * t334 + t1270 * t307 + (-0.2e1 * t423 * t1080 + t1254 * t1264 + t885) * t407 + t1261 * t333;
t123 = qJD(2) * t191 + qJD(3) * t214;
t106 = t1147 * t135 + t492 * t820;
t105 = t1149 * t135 - t489 * t820;
t103 = t139 * t311 + t1104;
t102 = -t139 * t312 - t1105;
t76 = t1147 * t118 - t492 * t823;
t75 = t1149 * t118 + t489 * t823;
t72 = t73 * qJD(3);
t66 = -t1122 / 0.2e1;
t58 = -t1121 / 0.2e1;
t57 = -t1123 / 0.2e1;
t50 = (-t346 * t87 - t882) * pkin(4);
t49 = (-t1099 * t283 + t973) * pkin(4);
t48 = t323 * t98 + t1106;
t47 = t800 * t98 - t1107;
t43 = t915 + t1093 / 0.2e1 + t1242 * t316 / 0.2e1;
t41 = t914 + t1094 / 0.2e1 + t1242 * t1158;
t39 = (t87 + t98) * t1147;
t37 = t1148 * t87 + t965;
t34 = t730 + t757;
t32 = t859 * t492;
t31 = t859 * t489;
t30 = t861 * t492;
t29 = t861 * t489;
t28 = -t1108 / 0.2e1 + t98 * t1156 - t827;
t26 = t87 * t1153 + t1275 + t826;
t24 = -t1211 * t965 + (t827 + t921) * t489;
t22 = t215 * t918 + t492 * t827 - t912 * t98;
t16 = t492 * t821 + t58 + t67;
t15 = t489 * t821 + t57 + t66;
t14 = t67 + t1121 / 0.2e1 + t1053;
t13 = t58 + t1120 / 0.2e1 + t1053;
t12 = t66 + t1123 / 0.2e1 + t1054;
t11 = t57 + t1122 / 0.2e1 + t1054;
t10 = t1265 * t69 + t1127;
t9 = t59 * t900 + t1129;
t8 = t1265 * t87 + t69 * t898;
t7 = t59 * t901 + t900 * t98;
t6 = t1068 * t1161 + t1118 * t1150 + t484 * t826 + t87 * t869 + t831;
t3 = t1148 * t1210 * t68 + t1223 * t489 + t193 * t916 - t69 * t913;
t1 = -t1211 * t67 + t1223 * t492 + t276 * t907 + t68 * t911;
t17 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t923, t476 * qJD(2), 0, -t923, 0, 0, -pkin(13) * t1028, -pkin(13) * t1026, 0, 0, t473 * t461, t984 * t456, 0, -t472 * t462, 0, 0, qJD(2) * t458 + t1023 * t473, qJD(2) * t459 + t1023 * t472, 0, t475, t807, -qJD(2) * t840 - qJD(3) * t839, 0, -t808, 0, 0, qJD(2) * t179 - qJD(3) * t198, qJD(2) * t180 - qJD(3) * t199, 0, (qJD(2) * t468 + t1131 * t473) * t466, t484 * t807 - t875, qJD(4) * t301 - t835 * t870, qJD(2) * t110 + qJD(3) * t126 + t1210 * t943, t483 * t807 + t875, -qJD(2) * t109 - qJD(3) * t125 + t1210 * t942, -t808, qJD(2) * t71 + qJD(3) * t101 + t300 * t943, -qJD(2) * t70 - qJD(3) * t100 + t300 * t942, -qJD(2) * t35 - qJD(3) * t40, qJD(2) * t45 + qJD(3) * t65, t874, -t357 * qJD(2), 0, -t874, 0, 0, qJD(2) * t976, pkin(7) * t949, 0, 0, -qJD(2) * t1088, t329 * qJD(2), 0, qJD(2) * t1089, 0, 0, t353 * qJD(2), t354 * qJD(2), 0, t475, (qJD(2) * t185 + qJD(3) * t229) * t316, qJD(2) * t108 + qJD(3) * t138, 0, (qJD(2) * t184 + qJD(3) * t230) * t315, 0, 0, qJD(2) * t173 - t1024 * t230, qJD(2) * t174 + t1024 * t229, 0, t398 * t335 * qJD(2); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t477, t988, t1026, -t477, -t1028, 0, -t972, -t971, 0, 0, t926, t991, t461, -t926, -t462, 0, t990, t989, (t1142 * t473 + t1145 * t472) * t1132, t474, t934, -t1011, t26 * qJD(3) + t1219, -t936, t28 * qJD(3) - t813, 0, t1003, t1002, (-t1210 * t195 + t1211 * t194 + t192 * t800 - t193 * t323) * qJD(2) + t34 * qJD(3), t927, t880 - t1217, t6 * qJD(3) + t242 - t893 * t1125 + (-t264 * t893 + t867) * t193, t24 * qJD(3) + t140 * qJD(4) + t489 * t813 + t1012, t881 + t1217, t22 * qJD(3) + t143 * qJD(4) + t492 * t813 - t1013, t817, t3 * qJD(3) + t76 * qJD(4) + t489 * t767 + t1063, t1 * qJD(3) + t75 * qJD(4) + t492 * t767 - t1064, -t1090, t1072, t373, -t992, (t332 * t425 + t380 * t426) * qJD(2), -t373, (t332 * t426 - t380 * t425) * qJD(2), 0, t887, t886, 0, 0, -t928, t995, (t331 * t405 - t356 * t378) * qJD(2), t929, (-t331 * t404 - t355 * t378) * qJD(2), 0, t994, t993, (t883 * t356 - t355 * t422 + (-t404 * t883 + t405 * t422) * t379) * t1132, t474, t938, t1014, (t129 * t316 + t185 * t296) * qJD(2) + t43 * qJD(3), t940, (t129 * t315 + t184 * t296) * qJD(2) + t41 * qJD(3), 0, t1005, t1004, (t177 * t315 - t178 * t316 + t184 * t312 - t185 * t311) * qJD(2) + t72, t930; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t926, t991, t461, -t926, -t462, 0, t924, t925, 0, 0, t933, -t1008, t26 * qJD(2) + t1218, -t935, t28 * qJD(2) - t810, 0, -t999, -t998, t34 * qJD(2) + (-t1144 * t216 - t215 * t346 + (t956 + t1092) * t284) * t1131, t891, t878 - t1222, t6 * qJD(2) + t266 - t892 * t1111 + (-t283 * t892 + t867) * t216, t24 * qJD(2) + t169 * qJD(4) + t489 * t810 + t1009, t879 + t1222, t22 * qJD(2) + t172 * qJD(4) + t492 * t810 - t1010, t816, t3 * qJD(2) + t106 * qJD(4) + t489 * t766 + t1017, t1 * qJD(2) + t105 * qJD(4) + t492 * t766 - t1018, -t1081, t1065, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t937, t1006, t43 * qJD(2) + (t181 * t316 + t229 * t306) * qJD(3), t939, t41 * qJD(2) + (t181 * t315 + t230 * t306) * qJD(3), 0, -t931, t932, t1061, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t119, -t1201, qJD(2) * t140 + qJD(3) * t169 + t1210 * t837, t119, qJD(2) * t143 + qJD(3) * t172 + t1210 * t836, t123, qJD(2) * t76 + qJD(3) * t106 + t300 * t837, qJD(2) * t75 + qJD(3) * t105 + t300 * t836, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t477, -t988, 0, t477, 0, 0, t972, t971, 0, 0, -t926, -t991, 0, t926, 0, 0, -t990, -t989, 0, -t474, -t934, t1011, -t25 * qJD(3), t936, t771 * qJD(3), 0, -t1003, -t1002, -t33 * qJD(3), -t927, -t880 - t1208, -qJD(3) * t5 + t193 * t866 + t242, -qJD(3) * t23 + qJD(4) * t141 - t1012, -t881 + t1208, -qJD(3) * t21 - qJD(4) * t142 + t1013, -t817, qJD(3) * t4 - qJD(4) * t77 - t1063, qJD(3) * t2 + qJD(4) * t74 + t1064, t1090, -t1072, -t373, t992, 0, t373, 0, 0, -t887, -t886, 0, 0, t928, -t995, 0, -t929, 0, 0, -t994, -t993, 0, -t474, -t938, -t1014, t44 * qJD(3), -t940, t42 * qJD(3), 0, -t1005, -t1004, t72, -t930; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t480, t481, 0, 0, 0, 0, 0, 0, 0, t812, (t195 * t264 + t323 * t99) * qJD(2) + t48 * qJD(3), (-t194 * t264 + t800 * t99) * qJD(2) + t47 * qJD(3), 0, (-t194 * t800 + t195 * t323) * qJD(2) + t128 * qJD(3), t483 * t812 + t877, -qJD(4) * t204 + t1277 * t812, 0, t484 * t812 - t877, 0, 0, -t30 * qJD(3) - t1027 * t862 + t247 * t947, t29 * qJD(3) + t1029 * t862 + t247 * t946, (t55 * t901 + t900 * t99) * qJD(2) + t7 * qJD(3), (t247 * t56 + t55 * t900) * qJD(2) + t9 * qJD(3), 0, 0, 0, 0, 0, t332 * t1030, 0, 0, 0, 0, 0, 0, 0, 0, 0, t378 * t331 * qJD(2), (-t1086 * t378 + t331 * t883) * t1132, (-t331 * t422 - t378 * t833) * t1132, 0, 0, 0, 0, 0, 0, 0, (qJD(2) * t129 + qJD(3) * t139) * t296, (t129 * t311 + t178 * t296) * qJD(2) + t103 * qJD(3), (-t129 * t312 - t177 * t296) * qJD(2) + t102 * qJD(3), 0, (t177 * t312 + t178 * t311) * qJD(2) + t130 * qJD(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t888 + t480, t889 + t481, 0, 0, 0, 0, -t1102, 0, t1098, t764, t48 * qJD(2) + (t323 * t124 + t218 * t283) * qJD(3) + (-t973 + t1144 * t98 + (-t264 * t284 + t265 * t283) * t346) * t1131, t47 * qJD(2) + (t124 * t800 - t217 * t283) * qJD(3) + (t1133 * t346 - t264 * t960 + t882) * t1131, -t1091, t128 * qJD(2) + (t1144 * t218 + t217 * t346 + t284 * t818) * t1131, t483 * t764 + t1216, t1277 * t764 - t1119 - t145, -t849, t484 * t764 - t1216, -t850, 0, -t30 * qJD(2) + t11 * qJD(4) + t1021 * t1193 + t1124, t29 * qJD(2) + t13 * qJD(4) - t1022 * t1193 + t1130, t7 * qJD(2) + t1050 * qJD(3) * (t113 * t264 - t1133 * t275 + t1135 * t283 + t124 * t248), t9 * qJD(2) + (t112 * t247 + t113 * t900 + t1135 * t1265 + t276 * t60 - t1127) * qJD(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1073, 0, t1078, t296 * t139 * qJD(2) + (t1055 * t306 + t181 * t296) * qJD(3), t103 * qJD(2) + (t181 * t311 + t228 * t306) * qJD(3), t102 * qJD(2) + (-t181 * t312 - t227 * t306) * qJD(3), t1062, t1007; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t114, -t774, -qJD(3) * t36 + t1047 + t946, -t114, -qJD(3) * t38 - t1046 - t947, -t1000, qJD(3) * t11 - t1019 * t248 + t489 * t950 - t1059, qJD(3) * t13 + t1020 * t248 + t492 * t950 + t1060, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t926, -t991, 0, t926, 0, 0, -t924, -t925, 0, 0, -t933, t1008, t25 * qJD(2), t935, -t771 * qJD(2), 0, t999, t998, t33 * qJD(2), -t891, -t878 - t1215, qJD(2) * t5 + t216 * t866 + t266, qJD(2) * t23 + qJD(4) * t170 - t1009, -t879 + t1215, qJD(2) * t21 - qJD(4) * t171 + t1010, -t816, -qJD(2) * t4 + qJD(4) * t107 - t1017, -qJD(2) * t2 - qJD(4) * t104 + t1018, t1081, -t1065, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t937, -t1006, -t44 * qJD(2), -t939, -t42 * qJD(2), 0, t931, -t932, -t1061, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t888, -t889, 0, 0, 0, 0, t1102, 0, -t1098, t765, (t195 * t283 - t1106 + t1133 * t323 + (-t1099 * t264 + t1144 * t99) * pkin(4)) * qJD(2) + t49 * qJD(3), (-t194 * t283 + t1107 + t1133 * t800 + (-t264 * t961 - t346 * t99) * pkin(4)) * qJD(2) + t50 * qJD(3), t1091, ((t1144 * t195 + t194 * t346 + t265 * t818) * pkin(4) - t128) * qJD(2), t483 * t765 + t1212, t1277 * t765 + t1119 - t145, t849, t484 * t765 - t1212, t850, 0, -t32 * qJD(3) + t12 * qJD(4) - t1027 * t1194 - t1124, t31 * qJD(3) + t14 * qJD(4) + t1029 * t1194 - t1130, t8 * qJD(3) + t1050 * qJD(2) * (t1133 * t248 - t1135 * t264 + t275 * t99 + t283 * t55), t10 * qJD(3) + (-t1135 * t900 + t1265 * t55 + t247 * t68 + t276 * t56 - t1129) * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1073, 0, -t1078, (-t1055 * t296 + t129 * t306) * qJD(2) + t306 * t144 * qJD(3), (-t1055 * t311 + t178 * t306 - t1104) * qJD(2), (t1055 * t312 - t177 * t306 + t1105) * qJD(2), -t1062, -t1007; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t809, t49 * qJD(2) + (-t1095 * t283 + t1144 * t124) * t1131, t50 * qJD(2) + (-t124 * t346 - t283 * t960) * t1131, 0, 0, t483 * t809 + t876, -qJD(4) * t231 + t1277 * t809, 0, t484 * t809 - t876, 0, 0, -t32 * qJD(2) - t1021 * t845 + t276 * t945, t31 * qJD(2) + t1022 * t845 + t276 * t944, t8 * qJD(2) + (t113 * t898 + t124 * t1265) * qJD(3), t10 * qJD(2) + (t112 * t276 + t113 * t1265) * qJD(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, (qJD(2) * t144 + qJD(3) * t181) * t306, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t121, -t773, qJD(2) * t36 + t1045 + t944, -t121, qJD(2) * t38 - t1044 - t945, -t996, qJD(2) * t12 - t1019 * t275 + t489 * t948 + t1015, qJD(2) * t14 + t1020 * t275 + t492 * t948 - t1016, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t119, t1201, -qJD(2) * t141 - qJD(3) * t170 - t1210 * t954, -t119, qJD(2) * t142 + qJD(3) * t171 - t1210 * t953, t123, qJD(2) * t77 - qJD(3) * t107 - t300 * t954, -qJD(2) * t74 + qJD(3) * t104 - t300 * t953, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t114, t774, qJD(3) * t37 + t1029 * t99 - t1047, t114, qJD(3) * t39 + t1027 * t99 + t1046, t1000, t15 * qJD(3) + t489 * t853 + t1059, t16 * qJD(3) + t492 * t853 - t1060, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t121, t773, qJD(2) * t37 + t1022 * t124 - t1045, t121, qJD(2) * t39 + t1021 * t124 + t1044, t996, t15 * qJD(2) + t489 * t838 - t1015, t16 * qJD(2) + t492 * t838 + t1016, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t17;
