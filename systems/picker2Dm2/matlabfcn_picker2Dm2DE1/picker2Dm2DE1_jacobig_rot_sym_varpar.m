% Rotatorische Teilmatrix der geometrischen Jacobi-Matrix für beliebiges Segment von
% picker2Dm2DE1
% Use Code from Maple symbolic Code Generation
%
% Geometrische Jacobi-Matrix: Differentieller Zusammenhang zwischen
% Endeffektorgeschwindigkeit und Geschw. der verallgemeinerten Koordinaten.
% 
% 
% Input:
% qJ [2x1]
%   Generalized joint coordinates (joint angles)
% link_index [1x1 uint8]
%   Index des Segmentes, auf dem der Punkt C liegt. (0=Basis).
%   Siehe auch: bsp_3T1R_fkine_fixb_rotmat_mdh_sym_varpar.m
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[L1,L2,L3,L4,L5,L6,e,phi05,phi1]';
% 
% Output:
% Jg_rot [3x2]
%   Rotatorische Teilmatrix der geometrischen Jacobi-Matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2020-05-09 18:54
% Revision: 73758128893bc0a8beabae04bd7e71472107ac81 (2020-05-07)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function Jg_rot = picker2Dm2DE1_jacobig_rot_sym_varpar(qJ, link_index, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(2,1),uint8(0),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [2 1]), ...
  'picker2Dm2DE1_jacobig_rot_sym_varpar: qJ has to be [2x1] (double)');
assert(isa(link_index,'uint8') && all(size(link_index) == [1 1]), ...
	'picker2Dm2DE1_jacobig_rot_sym_varpar: link_index has to be [1x1] uint8');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'picker2Dm2DE1_jacobig_rot_sym_varpar: pkin has to be [9x1] (double)');
Jg_rot=NaN(3,2);
if link_index == 0
	%% Symbolic Calculation
	% From jacobig_rot_0_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-05-09 18:15:03
	% EndTime: 2020-05-09 18:15:03
	% DurationCPUTime: 0.01s
	% Computational Cost: add. (0->0), mult. (0->0), div. (0->0), fcn. (0->0), ass. (0->1)
	t1 = [0, 0; 0, 0; 0, 0;];
	Jg_rot = t1;
elseif link_index == 1
	%% Symbolic Calculation
	% From jacobig_rot_1_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-05-09 18:15:03
	% EndTime: 2020-05-09 18:15:03
	% DurationCPUTime: 0.01s
	% Computational Cost: add. (0->0), mult. (0->0), div. (0->0), fcn. (0->0), ass. (0->1)
	t1 = [0, 0; 0, 0; 1, 0;];
	Jg_rot = t1;
elseif link_index == 2
	%% Symbolic Calculation
	% From jacobig_rot_2_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-05-09 18:15:15
	% EndTime: 2020-05-09 18:15:17
	% DurationCPUTime: 0.64s
	% Computational Cost: add. (1376->96), mult. (3717->173), div. (28->6), fcn. (958->6), ass. (0->78)
	t305 = 4 * pkin(1);
	t304 = 2 * pkin(7);
	t303 = 2 * pkin(1);
	t264 = (pkin(3) ^ 2);
	t260 = 2 * t264;
	t257 = sin(qJ(1));
	t258 = cos(qJ(2));
	t292 = t257 * t258;
	t247 = pkin(3) * t292;
	t275 = pkin(1) * t247;
	t244 = -0.2e1 * t275;
	t266 = pkin(1) ^ 2;
	t256 = sin(qJ(2));
	t248 = pkin(3) * t256 + pkin(7);
	t259 = cos(qJ(1));
	t242 = t248 * t259;
	t279 = pkin(1) * t242;
	t284 = t256 * t304;
	t249 = pkin(3) * t284;
	t267 = pkin(7) ^ 2;
	t286 = t249 + t267;
	t231 = t244 + t264 + t266 + 0.2e1 * t279 + t286;
	t229 = 0.1e1 / t231;
	t302 = t229 / 0.2e1;
	t254 = t256 ^ 2;
	t238 = t254 * t260 - t264 + t286;
	t301 = pkin(1) * t238;
	t300 = pkin(3) * t258;
	t230 = 0.1e1 / t231 ^ 2;
	t290 = t258 * t259;
	t278 = pkin(3) * t290;
	t294 = t256 * t257;
	t245 = pkin(3) * pkin(1) * t294;
	t253 = pkin(7) * t300;
	t288 = t245 + t253;
	t299 = t230 * (pkin(1) * t278 + t288);
	t293 = t257 * t248;
	t237 = t278 + t293;
	t298 = t230 * t237 * pkin(1);
	t285 = -pkin(4) ^ 2 + t267;
	t252 = t266 + t285;
	t241 = t249 + t252;
	t235 = t244 + t241;
	t251 = (t266 - t267) * t264;
	t262 = 0.2e1 * pkin(3);
	t255 = t259 ^ 2;
	t272 = -0.2e1 * t238 * t255 - t285;
	t277 = -0.4e1 * pkin(3) * pkin(7) * t252;
	t283 = 2 * t266;
	t268 = sqrt(0.4e1 * t251 * t254 + t256 * t277 - (t266 ^ 2) - (t267 - (t262 + pkin(4)) * pkin(4)) * (t267 + (t262 - pkin(4)) * pkin(4)) + (-(2 * t264) + t272) * t283 + (-t235 * t242 + t241 * t247) * t305);
	t297 = t237 * t268;
	t250 = 0.2e1 * t253;
	t274 = 0.4e1 * t264 * t256 * t258;
	t239 = t250 + t274;
	t296 = t239 * t255;
	t295 = t248 * t255;
	t291 = t257 * t259;
	t289 = t259 * t268;
	t287 = -t247 + t242;
	t282 = pkin(7) * t257 * t264;
	t224 = 0.1e1 / t268;
	t281 = 0.2e1 * t224 * ((t238 * t291 + t295 * t300) * t283 + (t235 * t293 + t241 * t278) * pkin(1));
	t280 = t259 * t301;
	t276 = (-0.4e1 * t266 * t296 + (0.8e1 * t251 * t256 + t277) * t258 + (-0.8e1 * t288 * t242 + 0.8e1 * t258 ^ 2 * t282 + 0.4e1 * (-t235 * t290 - t241 * t294) * pkin(3)) * pkin(1)) * t224 / 0.2e1;
	t246 = t260 + 3 * t266 + t285;
	t233 = t246 + t249 - 0.4e1 * t275;
	t243 = t247 - pkin(1);
	t220 = -t233 * t242 + t297 + (t243 * t284 + t246 * t292) * pkin(3) + (-t266 + (0.2e1 * t254 - 0.4e1) * t264 + t272) * pkin(1);
	t219 = 0.1e1 / t220 ^ 2;
	t240 = t260 + t241;
	t227 = t240 * t248 + 0.2e1 * t280;
	t228 = t240 * t259 + (0.4e1 * t255 - 0.2e1) * t248 * pkin(1);
	t236 = pkin(1) + t287;
	t221 = t227 * t257 + t228 * t300 + t236 * t268;
	t273 = 0.1e1 / (t219 * t221 ^ 2 + 0.1e1) * t231;
	t271 = 0.1e1 / t220 * t273;
	t270 = t219 * t221 * t273;
	t1 = [0, 0; 0, 0; 0.1e1 + 0.2e1 * ((-t297 + t236 * t281 + t227 * t259 + ((-t240 - 0.8e1 * t279) * t300 - 0.2e1 * t257 * t301) * t257) * t302 + t221 * t298) * t271 - 0.2e1 * ((t287 * t268 + t237 * t281 + (t233 * t248 + 0.4e1 * t280) * t257 + (t264 * t259 * t284 + (t246 * t259 + t295 * t305) * pkin(3)) * t258) * t302 + t220 * t298) * t270, 0.2e1 * ((t239 * t291 * t303 + t236 * t276) * t302 - t221 * t299 + ((t257 * t268 - t228) * t256 * t302 + (t289 / 0.2e1 + (t248 * t304 + t240) * t257 / 0.2e1 + (pkin(7) * t259 + t255 * t303 - pkin(1)) * t300) * t229 * t258) * pkin(3)) * t271 - 0.2e1 * ((t247 * t268 + t237 * t276 - (0.4e1 * t245 + t250) * t242 - 0.2e1 * t254 * t282 + (t274 - 0.2e1 * t296) * pkin(1) + ((-t233 * t259 + t243 * t304) * t258 + (-t246 * t257 - t289) * t256) * pkin(3)) * t302 - t220 * t299) * t270;];
	Jg_rot = t1;
elseif link_index == 3
	%% Symbolic Calculation
	% From jacobig_rot_3_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-05-09 18:15:41
	% EndTime: 2020-05-09 18:15:44
	% DurationCPUTime: 0.96s
	% Computational Cost: add. (7698->123), mult. (20545->234), div. (232->10), fcn. (5698->10), ass. (0->118)
	t442 = 4 * pkin(1);
	t385 = (pkin(3) ^ 2);
	t381 = 2 * t385;
	t387 = pkin(1) ^ 2;
	t388 = pkin(7) ^ 2;
	t412 = (-pkin(4) ^ 2 + t388);
	t363 = t381 + 3 * t387 + t412;
	t375 = sin(qJ(2));
	t440 = 2 * pkin(7);
	t411 = t375 * t440;
	t366 = pkin(3) * t411;
	t376 = sin(qJ(1));
	t378 = cos(qJ(2));
	t419 = t376 * t378;
	t364 = pkin(3) * t419;
	t399 = pkin(1) * t364;
	t348 = t363 + t366 - 0.4e1 * t399;
	t365 = pkin(3) * t375 + pkin(7);
	t379 = cos(qJ(1));
	t359 = t365 * t379;
	t360 = t364 - pkin(1);
	t371 = t375 ^ 2;
	t413 = t366 + t388;
	t355 = t371 * t381 - t385 + t413;
	t372 = t379 ^ 2;
	t396 = -0.2e1 * t355 * t372 - t412;
	t417 = t378 * t379;
	t405 = pkin(3) * t417;
	t420 = t376 * t365;
	t352 = t405 + t420;
	t369 = t387 + t412;
	t358 = t366 + t369;
	t361 = -0.2e1 * t399;
	t350 = t361 + t358;
	t368 = (t387 - t388) * t385;
	t383 = 0.2e1 * pkin(3);
	t404 = -0.4e1 * pkin(7) * pkin(3) * t369;
	t410 = 2 * t387;
	t389 = sqrt(0.4e1 * t368 * t371 + t375 * t404 - (t387 ^ 2) - (t388 - (t383 + pkin(4)) * pkin(4)) * (t388 + (t383 - pkin(4)) * pkin(4)) + (-(2 * t385) + t396) * t410 + (-t350 * t359 + t358 * t364) * t442);
	t424 = t352 * t389;
	t335 = -t348 * t359 + t424 + (t360 * t411 + t363 * t419) * pkin(3) + (-t387 + (0.2e1 * t371 - 0.4e1) * t385 + t396) * pkin(1);
	t441 = t335 / 0.2e1;
	t439 = 2 * pkin(1);
	t406 = pkin(1) * t359;
	t346 = t361 + t385 + t387 + 0.2e1 * t406 + t413;
	t345 = 0.1e1 / t346 ^ 2;
	t438 = 0.2e1 * t345;
	t357 = t381 + t358;
	t432 = pkin(1) * t355;
	t407 = t379 * t432;
	t342 = t365 * t357 + 0.2e1 * t407;
	t343 = t357 * t379 + (0.4e1 * t372 - 0.2e1) * t365 * pkin(1);
	t414 = -t364 + t359;
	t351 = pkin(1) + t414;
	t431 = pkin(3) * t378;
	t336 = t342 * t376 + t343 * t431 + t351 * t389;
	t437 = -t336 / 0.2e1;
	t344 = 0.1e1 / t346;
	t436 = t344 / 0.2e1;
	t373 = sin(pkin(8));
	t374 = cos(pkin(8));
	t353 = t373 * t379 - t374 * t376;
	t435 = -t353 / 0.2e1;
	t434 = t353 / 0.2e1;
	t354 = t373 * t376 + t374 * t379;
	t433 = t354 / 0.2e1;
	t393 = t335 * t434 + t354 * t437;
	t386 = 0.1e1 / pkin(3);
	t427 = t344 * t386;
	t325 = t393 * t427;
	t401 = t427 / 0.2e1;
	t428 = t336 * t353;
	t332 = t401 * t428;
	t429 = t335 * t354;
	t326 = t401 * t429 + t332;
	t377 = sin(pkin(9));
	t380 = cos(pkin(9));
	t324 = -t377 * t325 + t380 * t326;
	t322 = 0.1e1 / t324 ^ 2;
	t323 = t380 * t325 + t377 * t326;
	t316 = 0.1e1 / (t323 ^ 2 * t322 + 0.1e1);
	t430 = t316 / t324;
	t421 = t375 * t376;
	t362 = pkin(3) * pkin(1) * t421;
	t370 = pkin(7) * t431;
	t415 = t362 + t370;
	t347 = pkin(1) * t405 + t415;
	t426 = t345 * t347;
	t349 = t352 * pkin(1);
	t425 = t345 * t349;
	t367 = 0.2e1 * t370;
	t398 = 0.4e1 * t385 * t375 * t378;
	t356 = t367 + t398;
	t423 = t356 * t372;
	t422 = t365 * t372;
	t418 = t376 * t379;
	t416 = t379 * t389;
	t409 = pkin(7) * t376 * t385;
	t339 = 0.1e1 / t389;
	t408 = 0.2e1 * t339 * ((t355 * t418 + t422 * t431) * t410 + (t350 * t420 + t358 * t405) * pkin(1));
	t403 = t316 * t322 * t323;
	t402 = (-0.4e1 * t387 * t423 + (0.8e1 * t368 * t375 + t404) * t378 + (-0.8e1 * t415 * t359 + 0.8e1 * t378 ^ 2 * t409 + 0.4e1 * (-t350 * t417 - t358 * t421) * pkin(3)) * pkin(1)) * t339 / 0.2e1;
	t329 = -t424 + t351 * t408 + t342 * t379 + ((-t357 - 0.8e1 * t406) * t431 - 0.2e1 * t376 * t432) * t376;
	t400 = t441 + t329 / 0.2e1;
	t334 = 0.1e1 / t335 ^ 2;
	t397 = pkin(3) / (t336 ^ 2 * t334 + 0.1e1) * t346 * t386;
	t395 = t397 / t441;
	t394 = -0.2e1 * t334 * t336 * t397;
	t392 = t393 * t438;
	t391 = (-t429 / 0.2e1 - t428 / 0.2e1) * t438;
	t330 = t414 * t389 + t352 * t408 + (t365 * t348 + 0.4e1 * t407) * t376 + (t385 * t379 * t411 + (t363 * t379 + t422 * t442) * pkin(3)) * t378;
	t328 = t364 * t389 + t352 * t402 - (0.4e1 * t362 + t367) * t359 - 0.2e1 * t371 * t409 + (t398 - 0.2e1 * t423) * pkin(1) + ((-t348 * t379 + t360 * t440) * t378 + (-t363 * t376 - t416) * t375) * pkin(3);
	t327 = t351 * t402 + t356 * t418 * t439 + ((t376 * t389 - t343) * t375 + (t416 + (t365 * t440 + t357) * t376 + 0.2e1 * (pkin(7) * t379 + t372 * t439 - pkin(1)) * t431) * t378) * pkin(3);
	t320 = ((t327 * t434 + t328 * t433) * t344 + t347 * t391) * t386;
	t319 = ((t327 * t433 + t328 * t435) * t344 + t347 * t392) * t386;
	t318 = (-t349 * t391 + ((t330 / 0.2e1 + t437) * t354 + t400 * t353) * t344) * t386;
	t317 = t332 + (-t349 * t392 + (t330 * t435 + t400 * t354) * t344) * t386;
	t1 = [0, 0; 0, 0; 0.1e1 + (t329 * t436 + t336 * t425) * t395 + (t330 * t436 + t335 * t425) * t394 + (-t380 * t317 + t377 * t318) * t430 - (t377 * t317 + t380 * t318) * t403, (t327 * t436 - t336 * t426) * t395 + (t328 * t436 - t335 * t426) * t394 + (-t380 * t319 + t377 * t320) * t430 - (t377 * t319 + t380 * t320) * t403;];
	Jg_rot = t1;
elseif link_index == 4
	%% Symbolic Calculation
	% From jacobig_rot_4_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-05-09 18:16:47
	% EndTime: 2020-05-09 18:17:18
	% DurationCPUTime: 9.87s
	% Computational Cost: add. (10697->581), mult. (35151->932), div. (52->12), fcn. (4345->6), ass. (0->393)
	t1211 = pkin(3) ^ 2;
	t1215 = (pkin(1) ^ 2);
	t1217 = pkin(7) ^ 2;
	t1346 = t1215 - t1217;
	t1116 = t1346 * t1211;
	t1179 = cos(qJ(1));
	t1134 = pkin(1) * t1179;
	t1110 = t1134 + pkin(7);
	t1176 = sin(qJ(2));
	t1132 = pkin(3) * t1176;
	t1077 = t1132 + t1110;
	t1413 = pkin(7) * t1176;
	t1365 = 0.2e1 * t1413;
	t1111 = pkin(3) * t1365;
	t1206 = pkin(4) ^ 2;
	t1343 = t1217 - t1206;
	t1119 = t1215 + t1343;
	t1075 = t1111 + t1119;
	t1177 = sin(qJ(1));
	t1178 = cos(qJ(2));
	t1378 = t1177 * t1178;
	t1107 = pkin(3) * t1378;
	t1263 = pkin(1) * t1107;
	t1094 = -0.2e1 * t1263;
	t1053 = t1094 + t1075;
	t1109 = t1132 + pkin(7);
	t1090 = t1109 * t1179;
	t1144 = t1176 ^ 2;
	t1204 = 0.2e1 * pkin(3);
	t1213 = t1215 ^ 2;
	t1382 = t1144 * t1211;
	t1323 = 0.2e1 * t1382;
	t1348 = -t1211 + t1217;
	t1067 = t1111 + t1323 + t1348;
	t1148 = t1179 ^ 2;
	t1420 = -0.2e1 * t1148;
	t1244 = t1067 * t1420 - t1343;
	t1300 = -0.4e1 * pkin(3) * pkin(7) * t1119;
	t1337 = 2 * t1215;
	t1436 = 0.4e1 * pkin(1);
	t1004 = 0.4e1 * t1116 * t1144 + t1176 * t1300 - t1213 - (t1217 - (t1204 + pkin(4)) * pkin(4)) * (t1217 + (t1204 - pkin(4)) * pkin(4)) + (-0.2e1 * t1211 + t1244) * t1337 + (-t1053 * t1090 + t1075 * t1107) * t1436;
	t1218 = sqrt(t1004);
	t1356 = t1215 / 0.3e1 + t1217;
	t1056 = -0.4e1 / 0.9e1 * t1263 + 0.4e1 / 0.9e1 * t1211 - t1206 / 0.9e1 + t1356;
	t1157 = -t1206 / 0.6e1;
	t1166 = 0.2e1 / 0.3e1 * t1211;
	t1240 = t1217 - t1263;
	t1064 = t1157 + t1166 + t1240;
	t1165 = 0.4e1 / 0.3e1 * t1211;
	t1139 = t1215 + t1217;
	t1159 = -t1206 / 0.3e1;
	t1275 = t1159 + t1139;
	t1096 = t1165 + t1275;
	t1129 = -t1215 / 0.3e1 + t1217;
	t1264 = -0.2e1 * t1107;
	t1369 = t1215 * t1148;
	t1314 = 0.6e1 * t1369;
	t1147 = t1179 * t1148;
	t1219 = pkin(1) * t1215;
	t1380 = t1147 * t1219;
	t1331 = pkin(7) * t1380;
	t1411 = pkin(7) * t1179;
	t1364 = 0.4e1 * t1411;
	t1371 = (pkin(7) + pkin(1)) * (pkin(7) - pkin(1));
	t1008 = 0.4e1 * t1331 + t1056 * t1314 + t1096 * t1371 + (t1064 * t1364 + t1129 * t1264) * pkin(1);
	t1194 = 6 * t1215;
	t1254 = -0.4e1 * t1263;
	t1161 = -0.2e1 / 0.3e1 * t1206;
	t1202 = 0.2e1 * t1217;
	t1274 = t1161 + t1166 + t1202;
	t1223 = t1211 ^ 2;
	t1273 = t1161 + t1139;
	t1361 = (t1166 + t1273) * t1139 + t1223;
	t1020 = t1096 * t1254 + (t1194 + t1274) * t1211 + t1361;
	t1130 = 0.10e2 / 0.3e1 * t1215;
	t1032 = (t1130 + t1274) * t1211 + t1361;
	t1169 = -t1211 / 0.3e1;
	t1127 = t1169 + t1217;
	t1069 = t1127 * t1094;
	t1372 = (pkin(7) + pkin(3)) * (pkin(7) - pkin(3));
	t1034 = t1096 * t1372 + t1069;
	t1138 = -0.3e1 * t1211 + t1217;
	t1280 = 0.8e1 * t1331;
	t1080 = t1138 * t1280;
	t1271 = t1211 + t1139;
	t1105 = -t1206 + t1271;
	t1131 = t1139 ^ 2;
	t1180 = 0.15e2 * t1213;
	t1181 = 15 * t1215;
	t1216 = t1217 ^ 2;
	t1198 = 0.3e1 * t1216;
	t1222 = pkin(3) * t1211;
	t1208 = t1222 ^ 2;
	t1061 = t1094 + t1096;
	t1115 = t1348 * t1215;
	t1342 = pkin(7) * t1134;
	t1298 = 0.4e1 * t1342;
	t1419 = 0.4e1 * t1148;
	t1007 = t1061 * t1298 + t1115 * t1419 + t1020;
	t1340 = 0.2e1 * t1134;
	t1114 = pkin(7) * t1340;
	t1141 = -(3 * t1215) + t1217;
	t1315 = 0.4e1 * t1369;
	t1068 = t1114 + t1315 + t1141;
	t1143 = t1176 * t1144;
	t1383 = t1143 * t1222;
	t1325 = 0.8e1 * t1383;
	t1338 = 0.6e1 * t1132;
	t1235 = t1007 * t1338 + t1068 * t1325;
	t1201 = 0.3e1 * t1217;
	t1349 = -t1206 + t1211;
	t1272 = t1201 + t1349;
	t1301 = 0.12e2 * t1369;
	t1303 = 0.12e2 * t1382;
	t991 = t1008 * t1303 + t1080 + t1034 * t1301 + t1208 + (t1181 + t1272) * t1223 + (t1194 * t1272 + t1202 * t1349 + t1180 + t1198) * t1211 + t1131 * t1105 + t1235 * t1110 + 0.6e1 * (t1020 * t1411 - t1032 * t1107) * pkin(1);
	t1133 = pkin(3) * t1178;
	t1137 = t1211 + t1337;
	t1376 = t1178 * t1179;
	t1308 = pkin(3) * t1376;
	t1307 = t1215 * t1133;
	t1076 = -t1177 * t1219 + t1307;
	t1393 = t1076 * t1148;
	t1426 = 0.2e1 * pkin(7);
	t1021 = -t1346 * t1133 + 0.2e1 * t1393 + (t1137 * t1177 + t1308 * t1426) * pkin(1);
	t1195 = 3 * t1215;
	t1352 = t1195 + t1217;
	t1120 = t1211 + t1352;
	t1079 = t1120 * t1133;
	t1121 = 0.3e1 * t1211 + t1139;
	t1387 = t1121 * t1177;
	t1049 = -pkin(1) * t1387 + t1079;
	t1313 = 0.8e1 * t1215 * t1222;
	t1417 = 0.4e1 * t1213;
	t1108 = pkin(3) * t1417 + t1313;
	t1286 = t1219 * t1372;
	t1051 = t1108 * t1178 + 0.4e1 * t1177 * t1286;
	t1182 = 10 * t1215;
	t1189 = 0.5e1 * t1223;
	t1072 = t1189 + (t1182 + 0.6e1 * t1217) * t1211 + t1131;
	t1192 = 0.5e1 * t1213;
	t1344 = t1216 + t1223;
	t1353 = t1182 + t1202;
	t1367 = t1217 * t1215;
	t1432 = -0.6e1 * t1367;
	t1246 = -t1211 * t1353 - t1192 + t1280 - t1344 + t1432;
	t1291 = t1110 * t1383;
	t1260 = -0.8e1 * t1291;
	t1324 = -0.4e1 * t1382;
	t1406 = pkin(1) * t1177;
	t1082 = t1133 - t1406;
	t1256 = t1148 * t1307;
	t1019 = -0.2e1 * t1256 + t1079 + (0.2e1 * t1082 * t1411 - t1387) * pkin(1);
	t1422 = -0.4e1 * t1110;
	t1327 = t1019 * t1422;
	t997 = t1021 * t1324 + t1051 * t1148 + (t1176 * t1327 + t1178 * t1246) * pkin(3) + (-0.4e1 * t1049 * t1411 + (t1072 + t1260) * t1177) * pkin(1);
	t988 = t1077 * t991 + t1218 * t997;
	t1438 = t988 ^ 2;
	t1437 = 0.2e1 * pkin(1);
	t1435 = 0.4e1 * pkin(3);
	t1377 = t1177 * t1179;
	t1389 = t1109 * t1177;
	t1390 = t1109 * t1148;
	t1434 = 0.2e1 * (t1067 * t1377 + t1133 * t1390) * t1337 + 0.2e1 * (t1053 * t1389 + t1075 * t1308) * pkin(1);
	t1433 = 0.8e1 * t1077;
	t1125 = pkin(7) * t1133;
	t1112 = 0.2e1 * t1125;
	t1375 = t1178 * t1211;
	t1287 = t1176 * t1375;
	t1258 = 0.4e1 * t1287;
	t1071 = t1112 + t1258;
	t1317 = -0.4e1 * t1369;
	t1412 = pkin(7) * t1177;
	t1332 = t1211 * t1412;
	t1379 = t1176 * t1177;
	t1415 = pkin(1) * pkin(3);
	t1099 = t1379 * t1415;
	t1360 = t1099 + t1125;
	t1431 = t1071 * t1317 / 0.2e1 + (0.8e1 * t1116 * t1176 + t1300) * t1178 / 0.2e1 + (-0.8e1 * t1360 * t1090 + 0.8e1 * t1178 ^ 2 * t1332 + (-t1053 * t1376 - t1075 * t1379) * t1435) * pkin(1) / 0.2e1;
	t1430 = t1077 * t1177;
	t1212 = 0.1e1 / pkin(3);
	t1205 = t1206 ^ 2;
	t1347 = t1213 + t1216;
	t1351 = t1202 - t1206;
	t1368 = t1217 * t1206;
	t1236 = t1351 * t1215 + t1205 / 0.6e1 + t1347 - t1368;
	t1234 = 0.5e1 / 0.6e1 * t1223 + t1236;
	t1039 = (t1130 + t1351) * t1211 + t1234;
	t1358 = t1205 / 0.2e1 - t1223 / 0.2e1;
	t1248 = -0.3e1 * t1368 + t1198 + t1358;
	t1162 = -0.3e1 / 0.2e1 * t1206;
	t1357 = t1162 + t1201;
	t1362 = t1139 * ((t1162 + t1202) * t1215 - 0.3e1 / 0.2e1 * t1368 + t1347 + t1358) + t1208;
	t1005 = -0.6e1 * t1039 * t1263 + (t1180 + (-0.9e1 * t1206 + 0.18e2 * t1217) * t1215 + t1248) * t1211 + (t1181 + t1357) * t1223 + t1362;
	t1062 = -t1223 / 0.6e1 + t1236;
	t1200 = 0.4e1 * t1217;
	t1123 = (t1200 + t1206) * t1215;
	t1160 = -t1206 / 0.2e1;
	t1102 = t1160 + t1271;
	t1265 = -0.4e1 * t1107;
	t1245 = t1102 * t1265;
	t1241 = pkin(1) * t1245;
	t1345 = t1216 - t1213;
	t1011 = t1127 * t1241 - t1208 + (-t1130 - t1343) * t1223 + (t1123 + t1223 / 0.6e1 - t1205 / 0.6e1 + t1345) * t1211 + t1062 * t1217;
	t1188 = -0.5e1 * t1206;
	t1191 = 0.7e1 * t1213;
	t1193 = 7 * t1215;
	t1016 = (t1193 + t1357) * t1223 + (t1191 + (t1188 + 0.10e2 * t1217) * t1215 + t1248) * t1211 + t1362;
	t1227 = pkin(7) * t1217;
	t1117 = -0.12e2 * pkin(7) * t1219 + t1227 * t1436;
	t1126 = -0.8e1 * t1213 + 0.12e2 * t1367;
	t1266 = 0.16e2 * t1331;
	t1146 = t1148 ^ 2;
	t1370 = t1213 * t1146;
	t1318 = 0.8e1 * t1370;
	t1027 = t1117 * t1179 + t1126 * t1148 + t1266 + t1318 + t1347 + t1432;
	t1041 = t1094 * t1372 + t1102 * t1138;
	t1091 = (-0.6e1 * t1211 * t1217 + t1344) * t1213;
	t1135 = -0.30e2 * t1206 + 0.60e2 * t1217;
	t1142 = t1144 ^ 2;
	t1187 = -0.2e1 * t1206;
	t1350 = t1205 - t1223;
	t1247 = -0.6e1 * t1368 + 0.6e1 * t1216 + t1350;
	t1199 = 0.8e1 * t1217;
	t1054 = t1219 * t1265 + t1417 + (0.4e1 * t1211 + t1187 + t1199) * t1215;
	t1158 = -t1206 / 0.4e1;
	t1427 = t1158 + t1211 / 0.2e1;
	t1060 = -t1215 + t1240 + t1427;
	t1009 = t1280 + t1054 * t1148 + t1102 * t1141 + (t1060 * t1364 + t1264 * t1371) * pkin(1);
	t1292 = t1009 * t1383;
	t1022 = t1241 + (t1194 + t1351) * t1211 + t1234;
	t1037 = t1102 * t1372 + t1069;
	t1297 = 0.6e1 * t1342;
	t998 = t1022 * t1297 + t1037 * t1301 + t1005 + t1080;
	t1336 = t998 * t1132;
	t1386 = t1131 * (-t1211 + t1119);
	t1086 = t1217 + t1211 / 0.4e1 + t1215 / 0.4e1 - t1206 / 0.8e1;
	t1354 = 0.4e1 / 0.7e1 * t1217 - t1206 / 0.7e1;
	t1013 = -0.32e2 / 0.21e2 * t1086 * t1263 + 0.5e1 / 0.42e2 * t1223 + (0.16e2 / 0.21e2 * t1215 + t1354) * t1211 + t1213 / 0.7e1 + t1354 * t1215 + t1216 - 0.3e1 / 0.7e1 * t1368 + t1205 / 0.42e2;
	t1088 = t1356 + t1427;
	t1171 = 0.4e1 / 0.3e1 * t1215;
	t1017 = -0.8e1 / 0.3e1 * t1088 * t1263 + 0.5e1 / 0.18e2 * t1223 + (t1171 + t1159) * t1211 + t1216 - t1213 / 0.3e1 + t1205 / 0.18e2 + (t1165 + 0.2e1 / 0.3e1 * t1215 + t1161) * t1217;
	t1173 = t1215 / 0.2e1;
	t1355 = t1173 + t1217;
	t1063 = -0.2e1 / 0.3e1 * t1263 + t1158 + t1355;
	t1170 = -0.2e1 / 0.3e1 * t1211;
	t1128 = t1170 + t1217;
	t996 = t1128 * t1318 + t1063 * t1266 + 0.14e2 * t1013 * t1369 - t1346 * t1223 + (t1123 - 0.10e2 / 0.3e1 * t1213 + 0.2e1 * t1216 - t1368) * t1211 + t1062 * t1371 + (0.6e1 * t1017 * t1411 + t1129 * t1245) * pkin(1);
	t984 = 0.16e2 * t1091 * t1146 + 0.32e2 * t1041 * t1331 + 0.24e2 * t1011 * t1369 + (t1187 + t1200 + (28 * t1215)) * t1208 + t1105 * t1386 + (t1135 * t1213 + 0.24e2 * t996 * t1144 + t1194 * t1247 + t1202 * t1350 - 0.6e1 * t1216 * t1206 + 0.28e2 * t1219 ^ 2 + 0.4e1 * t1227 ^ 2) * t1211 + (0.32e2 * t1292 + 0.8e1 * t1336) * t1110 + 0.8e1 * (t1005 * t1411 - t1016 * t1107) * pkin(1) + (0.16e2 * t1027 * t1142 + t1135 * t1215 + 0.70e2 * t1213 + t1223 + t1247) * t1223;
	t1136 = -t1206 - t1211;
	t1118 = t1201 + t1136;
	t1388 = t1118 * t1215;
	t1028 = t1223 + (t1161 + t1170 + t1353) * t1211 + t1192 + 0.2e1 * t1388 + t1217 * (t1161 + t1128);
	t1024 = t1028 * t1133;
	t1190 = 0.2e1 * t1211;
	t1040 = t1189 + ((5 * t1215) + t1118) * t1190 + (t1170 + t1273) * t1139;
	t1395 = t1040 * t1177;
	t1010 = -pkin(1) * t1395 + t1024;
	t1278 = 0.2e1 / 0.3e1 * t1206 + t1166 + t1200;
	t1279 = 0.4e1 / 0.3e1 * t1206 + t1165 - 0.2e1 * t1217;
	t1293 = 0.20e2 / 0.3e1 * t1215;
	t1036 = -0.3e1 * t1223 + (t1279 - t1293) * t1211 + t1278 * t1215 + t1345;
	t1167 = t1211 / 0.3e1;
	t1277 = t1206 / 0.3e1 + t1167 + t1202;
	t1044 = -0.5e1 / 0.3e1 * t1223 + (-t1215 + t1277) * t1211 + t1217 * (t1169 + t1275);
	t1341 = -0.2e1 * t1406;
	t1012 = t1036 * t1133 + t1044 * t1341;
	t1081 = t1133 + 0.2e1 * t1406;
	t1101 = t1160 + t1120;
	t1015 = t1141 * t1133 + 0.4e1 * t1393 + (t1081 * t1411 + t1101 * t1177) * t1437;
	t1085 = t1217 + 0.5e1 / 0.2e1 * t1211 + 0.3e1 / 0.2e1 * t1215 + t1160;
	t1045 = t1085 * t1133 + t1138 * t1406 / 0.2e1;
	t1089 = 0.10e2 * t1388;
	t1385 = t1136 * t1217;
	t1242 = 0.24e2 * t1127 * t1370 - t1208 - ((21 * t1215) + t1118) * t1223 - (t1089 + t1198 + 0.35e2 * t1213 + 0.2e1 * t1385) * t1211 - (t1191 + (t1188 + t1199 - 0.5e1 * t1211) * t1215 + t1217 * (-t1211 + t1343)) * t1139;
	t1304 = -0.12e2 * t1382;
	t1095 = 0.8e1 / 0.3e1 * t1211 + t1275;
	t1097 = t1159 + t1166 + t1352;
	t1038 = -t1095 * t1406 + t1097 * t1133;
	t1103 = 0.5e1 / 0.6e1 * t1211 + t1173 + t1157;
	t1047 = 0.2e1 * t1103 * t1133 + t1372 * t1406;
	t1270 = t1219 * t1125;
	t1421 = -0.8e1 * t1147;
	t1000 = t1270 * t1421 + t1047 * t1317 + t1024 + (t1038 * t1364 - t1395) * pkin(1);
	t1329 = -0.6e1 * t1000 * t1110;
	t1065 = 0.4e1 / 0.3e1 * t1369 + t1114 + t1129;
	t1384 = t1142 * t1223;
	t1428 = 0.7e1 * t1208 + (t1193 + t1118) * t1189 + (t1089 + 0.21e2 * t1213 + 0.9e1 * t1216 + 0.6e1 * t1385) * t1211 + t1386 - 0.24e2 * t1065 * t1384;
	t1084 = 0.7e1 / 0.6e1 * t1211 + t1157 + t1355;
	t1276 = t1157 + t1167 + t1217;
	t1087 = t1171 + t1276;
	t1033 = -t1084 * t1406 + t1087 * t1133;
	t1098 = t1215 + t1276;
	t1122 = t1190 - t1346;
	t1043 = t1098 * t1133 - t1122 * t1406 / 0.2e1;
	t1249 = -0.8e1 / 0.3e1 * t1370 - t1116 - 0.5e1 / 0.3e1 * t1213 + t1277 * t1215 + t1217 * (t1159 + t1127);
	t1410 = pkin(7) * t1213;
	t1363 = -0.4e1 * t1410;
	t1408 = t1223 / 0.2e1 - (t1278 - t1293) * t1211 / 0.2e1 + 0.3e1 / 0.2e1 * t1213 - t1279 * t1215 / 0.2e1 - t1216 / 0.2e1;
	t999 = t1177 * t1147 * t1363 + t1033 * t1315 + t1249 * t1133 + (t1043 * t1364 + t1177 * t1408) * pkin(1);
	t989 = t1045 * t1266 + t1015 * t1260 - 0.6e1 * t1012 * t1369 + t999 * t1304 + (t1176 * t1329 + t1178 * t1242) * pkin(3) + (-0.6e1 * t1010 * t1411 + t1177 * t1428) * pkin(1);
	t983 = t1077 * t984 + t1218 * t989;
	t1401 = 0.1e1 / t983 ^ 2 * t1438;
	t1405 = pkin(3) * t1218;
	t980 = 0.1e1 / (t1004 * t1401 + 0.1e1);
	t1429 = -0.2e1 * t1212 * t980 * t1401 * t1405;
	t1424 = 0.6e1 * t1039;
	t1423 = 0.4e1 * t1096;
	t1418 = -0.8e1 * t1179;
	t1416 = pkin(1) * pkin(7);
	t986 = 0.1e1 / t988;
	t1414 = t986 / 0.2e1;
	t1311 = pkin(1) * t1090;
	t1031 = t1094 + t1111 + t1271 + 0.2e1 * t1311;
	t1029 = 0.1e1 / t1031;
	t1409 = t1029 / 0.2e1;
	t1407 = pkin(1) * t1129;
	t1404 = t1016 * pkin(1);
	t1403 = t1032 * pkin(1);
	t1402 = -0.2e1 * t1416;
	t1400 = t983 / t1438;
	t1399 = t1110 * t986;
	t1030 = 0.1e1 / t1031 ^ 2;
	t1397 = t1030 * (pkin(1) * t1308 + t1360);
	t1059 = t1308 + t1389;
	t1396 = t1030 * t1059 * pkin(1);
	t1394 = t1059 * t1218;
	t1366 = t1219 * t1148;
	t1334 = pkin(7) * t1366;
	t1267 = -0.12e2 * t1334;
	t1392 = t1267 * t1430;
	t1391 = t1077 * t1110;
	t1381 = t1147 * t1213;
	t1374 = t1179 * t1215;
	t1373 = t1179 * t1218;
	t1359 = -t1107 + t1090;
	t1339 = -0.6e1 * t1132;
	t1335 = pkin(7) * t1369;
	t1333 = t1176 * t1411;
	t1330 = pkin(7) * t1374;
	t1003 = 0.1e1 / t1218;
	t1328 = t1003 * t1434;
	t1326 = -0.8e1 * t1383;
	t1322 = 0.3e1 * t1382;
	t1321 = -0.4e1 * t1380;
	t1320 = -0.2e1 * t1380;
	t1319 = 0.8e1 * t1374;
	t1316 = -0.2e1 * t1369;
	t1312 = t1067 * t1134;
	t1310 = pkin(1) * t1371;
	t1309 = t1077 * t1133;
	t1306 = t1129 * t1134;
	t1305 = 0.64e2 * t1383;
	t1302 = -0.32e2 * t1381;
	t1299 = -0.4e1 * t1342;
	t1296 = t1110 * t1400;
	t1295 = -t1400 / 0.2e1;
	t1294 = 0.32e2 / 0.3e1 * t1213;
	t1290 = t1127 * t1366;
	t1289 = t1143 * t1178 * t1223;
	t1288 = t1127 * t1380;
	t1285 = t1177 * t1374;
	t1284 = t1003 * t1431;
	t1283 = pkin(7) * t1317;
	t1282 = pkin(7) * t1316;
	t1281 = pkin(7) * t1315;
	t1269 = t1377 * t1435;
	t1268 = -0.48e2 * t1334;
	t1104 = t1190 + t1195 + t1343;
	t1050 = t1104 + t1111 + t1254;
	t1092 = t1107 - pkin(1);
	t994 = -t1050 * t1090 + t1394 + (t1092 * t1365 + t1104 * t1378) * pkin(3) + (-t1215 + (0.2e1 * t1144 - 0.4e1) * t1211 + t1244) * pkin(1);
	t993 = 0.1e1 / t994 ^ 2;
	t1073 = t1190 + t1075;
	t1023 = t1073 * t1109 + 0.2e1 * t1312;
	t1026 = t1073 * t1179 + (t1419 - 0.2e1) * t1109 * pkin(1);
	t1057 = pkin(1) + t1359;
	t995 = t1023 * t1177 + t1026 * t1133 + t1057 * t1218;
	t1262 = pkin(3) * t1031 * t1212 / (t993 * t995 ^ 2 + 0.1e1);
	t1261 = t1372 * t1410;
	t1259 = 0.4e1 * t1291;
	t1257 = t1003 * t980 / t983 * t988;
	t1253 = 0.64e2 / 0.3e1 * t1086 * t1219;
	t1252 = t1147 * t1294;
	t1251 = t1110 * t1144 * t1178 * t1222;
	t1250 = t1147 * t1286;
	t1243 = -0.24e2 * t1251;
	t1239 = 0.2e1 / t994 * t1262;
	t1238 = -0.2e1 * t993 * t995 * t1262;
	t1145 = t1177 ^ 2;
	t1113 = pkin(7) * t1341;
	t1083 = -0.2e1 * t1333 * t1415;
	t1074 = t1215 * t1269 * t1413;
	t1 = [0, 0; 0, 0; 0.1e1 + ((-t1394 + t1057 * t1328 - 0.2e1 * pkin(1) * t1067 * t1145 + t1023 * t1179 + (-t1073 - 0.8e1 * t1311) * t1107) * t1409 + t995 * t1396) * t1239 + ((t1359 * t1218 + t1059 * t1328 + (t1050 * t1109 + 0.4e1 * t1312) * t1177 + (t1333 * t1190 + (t1104 * t1179 + t1390 * t1436) * pkin(3)) * t1178) * t1409 + t994 * t1396) * t1238 + t1257 * t1434 + ((((0.12e2 * t1145 * t1148 * t1410 + t1084 * t1321 + t1122 * t1282 + t1146 * t1363) * t1304 + 0.12e2 * t1044 * t1380 + (t1408 * t1304 + t1428) * t1134 + (t1040 * t1314 + t1138 * t1318) * pkin(7)) * t1218 + t989 * t1328 + (((t1101 * t1340 + t1281 + t1321) * t1326 + (-t1040 * t1134 + t1095 * t1283 - 0.4e1 * t1250) * t1339) * t1218 + t1305 * t1392) * t1110 + (0.24e2 * (-pkin(7) * t1146 * t1294 - 0.16e2 * t1088 * t1335 - 0.4e1 * t1102 * t1306 - t1147 * t1253) * t1382 - 0.64e2 * t1146 * t1261 - 0.96e2 * t1102 * t1288 - 0.48e2 * t1039 * t1335 + t1404 * t1418 + ((-t1179 * t1310 + t1282 + t1320) * t1305 + 0.48e2 * (-t1039 * t1134 + t1102 * t1283 - 0.4e1 * t1288) * t1132) * t1110) * t1309 + ((0.2e1 * (-0.2e1 * t1126 * t1179 - t1117 + t1268 + t1302) * t1384 + 0.8e1 * (-t1054 * t1179 + t1060 * t1402) * t1291 + (-0.28e2 * t1013 * t1374 - 0.6e1 * t1017 * t1416 + t1063 * t1268 + t1128 * t1302) * t1322 + t1110 * (-t1022 * t1416 - 0.4e1 * t1037 * t1374 - 0.4e1 * t1138 * t1334) * t1338 + t1091 * t1421 + t1041 * t1267 - 0.6e1 * t1011 * t1374 - t1005 * t1416 + (-0.4e1 * t1292 - t1336) * pkin(1)) * t1433 - t984 * pkin(1) + ((-0.8e1 * t1033 * t1374 + t1133 * t1252) * t1304 - 0.96e2 * t1127 * t1381 * t1133 + t1045 * t1268 + 0.12e2 * t1012 * t1374 + (t1000 * t1338 + t1015 * t1325 + (-0.24e2 * t1113 + 0.64e2 * t1285) * t1384 + (0.48e2 * t1043 * t1382 + 0.6e1 * t1010) * pkin(7)) * pkin(1) + ((t1076 * t1418 + t1081 * t1402) * t1326 + (-0.4e1 * t1038 * t1416 + t1047 * t1319 + 0.24e2 * t1148 * t1270) * t1339) * t1110) * t1218) * t1177) * t1414 + ((t1145 * t1143 * t1313 + (t1134 * t1137 + t1320) * t1324 + 0.4e1 * t1250 + t1121 * t1281 + t1072 * t1134) * t1218 + t997 * t1328 + t1303 * t1392 + ((-0.8e1 / 0.3e1 * t1380 + t1283 - 0.2e1 * t1306) * t1303 - 0.24e2 * t1288 - 0.24e2 * t1096 * t1335 - 0.6e1 * t1179 * t1403) * t1309 + (0.24e2 * (-t1077 * t1138 - t1178 * t1405) * t1334 + ((0.16e2 * t1076 * t1382 - 0.2e1 * t1051) * t1218 + (-0.144e3 * t1056 * t1382 - 0.24e2 * t1034) * t1077 * t1215) * t1179 + (0.4e1 * t1019 * t1176 * t1405 - t1235 * t1077 - t991 + ((0.8e1 * pkin(3) * t1144 * t1375 + 0.4e1 * t1049) * t1218 + (-0.48e2 * t1064 * t1382 - 0.6e1 * t1020) * t1077) * pkin(7)) * pkin(1)) * t1177 + ((t1326 * t1134 - 0.4e1 * ((pkin(7) * t1420 + t1178 * t1269) * t1215 + (-0.2e1 * t1082 * t1412 - t1121 * t1179) * pkin(1)) * t1132) * t1218 + ((t1113 - 0.8e1 * t1285) * t1325 + (-0.8e1 * pkin(7) * t1256 - 0.8e1 * t1115 * t1377 + (-t1061 * t1412 - t1096 * t1308) * t1436) * t1338) * t1077) * t1110) * t1295) * t1429, ((t1071 * t1177 * t1340 + t1057 * t1284) * t1409 - t995 * t1397 + ((t1177 * t1218 - t1026) * t1176 * t1409 + (t1373 / 0.2e1 + (t1109 * t1426 + t1073) * t1177 / 0.2e1 + (t1148 * t1437 - pkin(1) + t1411) * t1133) * t1029 * t1178) * pkin(3)) * t1239 + ((t1107 * t1218 + t1059 * t1284 - (0.4e1 * t1099 + t1112) * t1090 - 0.2e1 * t1144 * t1332 + (t1071 * t1420 + t1258) * pkin(1) + ((-t1050 * t1179 + t1092 * t1426) * t1178 + (-t1104 * t1177 - t1373) * t1176) * pkin(3)) * t1409 - t994 * t1397) * t1238 + t1257 * t1431 + (((-0.96e2 * t1065 * t1289 * t1406 + t1015 * t1243 + t1083 * t1260 - 0.24e2 * t1287 * t999) * t1218 + t989 * t1284 + (0.12e2 * t1009 * t1251 + 0.8e1 * t1027 * t1289 + t1074 * t1259 + 0.6e1 * t1287 * t996) * t1433) * t1414 + ((-t1108 * t1176 * t1148 - 0.8e1 * t1021 * t1287 + t1083 * t1324 + t1243 * t1406) * t1218 + t997 * t1284 + 0.6e1 * (t1008 * t1258 + 0.4e1 * t1068 * t1251 + t1074 * t1323) * t1077) * t1295 + (((t1218 * t1329 + 0.8e1 * t1391 * t998 + t984) * t1414 + (0.6e1 * t1007 * t1391 + t1218 * t1327 + t991) * t1295) * t1178 + ((((-t1141 + t1317) * t1260 + (t1087 * t1317 + t1098 * t1299 - t1249) * t1304 - 0.16e2 * t1085 * t1331 + t1036 * t1314 + t1028 * t1297 - t1242) * t1414 + ((t1346 + t1316) * t1324 + t1083 * t1422 + t1120 * t1298 - t1246) * t1295 + (-0.3e1 * (t1097 * t1299 + 0.8e1 * t1103 * t1369 - t1028 + t1280) * t1399 + 0.2e1 * (-t1120 + 0.2e1 * t1369) * t1296) * t1132) * t1218 + (0.4e1 * ((0.2e1 * t1310 + 0.4e1 * t1366) * t1259 + (pkin(7) * t1252 + 0.16e2 * t1088 * t1330 + 0.4e1 * t1102 * t1407 + t1148 * t1253) * t1322 + 0.8e1 * t1147 * t1261 + 0.12e2 * t1102 * t1290 + t1330 * t1424 + t1404) * t986 - 0.3e1 * ((0.8e1 / 0.3e1 * t1366 + 0.2e1 * t1407) * t1323 + 0.4e1 * t1290 + t1330 * t1423 + t1403) * t1400 + (0.4e1 * (pkin(1) * t1424 + 0.24e2 * t1102 * t1330 + 0.24e2 * t1290) * t1399 - 0.3e1 * (pkin(1) * t1423 + pkin(7) * t1319) * t1296) * t1132) * t1430) * t1176) * pkin(3)) * t1429;];
	Jg_rot = t1;
elseif link_index == 5
	%% Symbolic Calculation
	% From jacobig_rot_5_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-05-09 18:15:03
	% EndTime: 2020-05-09 18:15:03
	% DurationCPUTime: 0.01s
	% Computational Cost: add. (10->0), mult. (20->0), div. (5->0), fcn. (28->0), ass. (0->1)
	t1 = [0, 0; 0, 0; 1, 0;];
	Jg_rot = t1;
elseif link_index == 6
	%% Symbolic Calculation
	% From jacobig_rot_6_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-05-09 18:15:40
	% EndTime: 2020-05-09 18:15:43
	% DurationCPUTime: 0.99s
	% Computational Cost: add. (7698->123), mult. (20545->234), div. (232->10), fcn. (5698->10), ass. (0->118)
	t442 = 4 * pkin(1);
	t385 = (pkin(3) ^ 2);
	t381 = 2 * t385;
	t387 = pkin(1) ^ 2;
	t388 = pkin(7) ^ 2;
	t412 = (-pkin(4) ^ 2 + t388);
	t363 = t381 + 3 * t387 + t412;
	t375 = sin(qJ(2));
	t440 = 2 * pkin(7);
	t411 = t375 * t440;
	t366 = pkin(3) * t411;
	t376 = sin(qJ(1));
	t378 = cos(qJ(2));
	t419 = t376 * t378;
	t364 = pkin(3) * t419;
	t399 = pkin(1) * t364;
	t348 = t363 + t366 - 0.4e1 * t399;
	t365 = pkin(3) * t375 + pkin(7);
	t379 = cos(qJ(1));
	t359 = t365 * t379;
	t360 = t364 - pkin(1);
	t371 = t375 ^ 2;
	t413 = t366 + t388;
	t355 = t371 * t381 - t385 + t413;
	t372 = t379 ^ 2;
	t396 = -0.2e1 * t355 * t372 - t412;
	t417 = t378 * t379;
	t405 = pkin(3) * t417;
	t420 = t376 * t365;
	t352 = t405 + t420;
	t369 = t387 + t412;
	t358 = t366 + t369;
	t361 = -0.2e1 * t399;
	t350 = t361 + t358;
	t368 = (t387 - t388) * t385;
	t383 = 0.2e1 * pkin(3);
	t404 = -0.4e1 * pkin(7) * pkin(3) * t369;
	t410 = 2 * t387;
	t389 = sqrt(0.4e1 * t368 * t371 + t375 * t404 - (t387 ^ 2) - (t388 - (t383 + pkin(4)) * pkin(4)) * (t388 + (t383 - pkin(4)) * pkin(4)) + (-(2 * t385) + t396) * t410 + (-t350 * t359 + t358 * t364) * t442);
	t424 = t352 * t389;
	t335 = -t348 * t359 + t424 + (t360 * t411 + t363 * t419) * pkin(3) + (-t387 + (0.2e1 * t371 - 0.4e1) * t385 + t396) * pkin(1);
	t441 = t335 / 0.2e1;
	t439 = 2 * pkin(1);
	t406 = pkin(1) * t359;
	t346 = t361 + t385 + t387 + 0.2e1 * t406 + t413;
	t345 = 0.1e1 / t346 ^ 2;
	t438 = 0.2e1 * t345;
	t357 = t381 + t358;
	t432 = pkin(1) * t355;
	t407 = t379 * t432;
	t342 = t365 * t357 + 0.2e1 * t407;
	t343 = t357 * t379 + (0.4e1 * t372 - 0.2e1) * t365 * pkin(1);
	t414 = -t364 + t359;
	t351 = pkin(1) + t414;
	t431 = pkin(3) * t378;
	t336 = t342 * t376 + t343 * t431 + t351 * t389;
	t437 = -t336 / 0.2e1;
	t344 = 0.1e1 / t346;
	t436 = t344 / 0.2e1;
	t373 = sin(pkin(8));
	t374 = cos(pkin(8));
	t353 = t373 * t379 - t374 * t376;
	t435 = -t353 / 0.2e1;
	t434 = t353 / 0.2e1;
	t354 = t373 * t376 + t374 * t379;
	t433 = t354 / 0.2e1;
	t393 = t335 * t434 + t354 * t437;
	t386 = 0.1e1 / pkin(3);
	t427 = t344 * t386;
	t325 = t393 * t427;
	t401 = t427 / 0.2e1;
	t428 = t336 * t353;
	t332 = t401 * t428;
	t429 = t335 * t354;
	t326 = t401 * t429 + t332;
	t377 = sin(pkin(9));
	t380 = cos(pkin(9));
	t324 = -t377 * t325 + t380 * t326;
	t322 = 0.1e1 / t324 ^ 2;
	t323 = t380 * t325 + t377 * t326;
	t316 = 0.1e1 / (t323 ^ 2 * t322 + 0.1e1);
	t430 = t316 / t324;
	t421 = t375 * t376;
	t362 = pkin(3) * pkin(1) * t421;
	t370 = pkin(7) * t431;
	t415 = t362 + t370;
	t347 = pkin(1) * t405 + t415;
	t426 = t345 * t347;
	t349 = t352 * pkin(1);
	t425 = t345 * t349;
	t367 = 0.2e1 * t370;
	t398 = 0.4e1 * t385 * t375 * t378;
	t356 = t367 + t398;
	t423 = t356 * t372;
	t422 = t365 * t372;
	t418 = t376 * t379;
	t416 = t379 * t389;
	t409 = t376 * t385 * pkin(7);
	t339 = 0.1e1 / t389;
	t408 = 0.2e1 * t339 * ((t355 * t418 + t422 * t431) * t410 + (t350 * t420 + t358 * t405) * pkin(1));
	t403 = t316 * t322 * t323;
	t402 = (-0.4e1 * t387 * t423 + (0.8e1 * t368 * t375 + t404) * t378 + (-0.8e1 * t415 * t359 + 0.8e1 * t378 ^ 2 * t409 + 0.4e1 * (-t350 * t417 - t358 * t421) * pkin(3)) * pkin(1)) * t339 / 0.2e1;
	t329 = -t424 + t351 * t408 + t342 * t379 + ((-t357 - 0.8e1 * t406) * t431 - 0.2e1 * t376 * t432) * t376;
	t400 = t441 + t329 / 0.2e1;
	t334 = 0.1e1 / t335 ^ 2;
	t397 = pkin(3) / (t336 ^ 2 * t334 + 0.1e1) * t346 * t386;
	t395 = t397 / t441;
	t394 = -0.2e1 * t334 * t336 * t397;
	t392 = t393 * t438;
	t391 = (-t429 / 0.2e1 - t428 / 0.2e1) * t438;
	t330 = t414 * t389 + t352 * t408 + (t365 * t348 + 0.4e1 * t407) * t376 + (t385 * t379 * t411 + (t363 * t379 + t422 * t442) * pkin(3)) * t378;
	t328 = t364 * t389 + t352 * t402 - (0.4e1 * t362 + t367) * t359 - 0.2e1 * t371 * t409 + (t398 - 0.2e1 * t423) * pkin(1) + ((-t348 * t379 + t360 * t440) * t378 + (-t363 * t376 - t416) * t375) * pkin(3);
	t327 = t351 * t402 + t356 * t418 * t439 + ((t376 * t389 - t343) * t375 + (t416 + (t365 * t440 + t357) * t376 + 0.2e1 * (pkin(7) * t379 + t372 * t439 - pkin(1)) * t431) * t378) * pkin(3);
	t320 = ((t327 * t434 + t328 * t433) * t344 + t347 * t391) * t386;
	t319 = ((t327 * t433 + t328 * t435) * t344 + t347 * t392) * t386;
	t318 = (-t349 * t391 + ((t330 / 0.2e1 + t437) * t354 + t400 * t353) * t344) * t386;
	t317 = t332 + (-t349 * t392 + (t330 * t435 + t400 * t354) * t344) * t386;
	t1 = [0, 0; 0, 0; 0.1e1 + (t329 * t436 + t336 * t425) * t395 + (t330 * t436 + t335 * t425) * t394 + (-t380 * t317 + t377 * t318) * t430 - (t377 * t317 + t380 * t318) * t403, (t327 * t436 - t336 * t426) * t395 + (t328 * t436 - t335 * t426) * t394 + (-t380 * t319 + t377 * t320) * t430 - (t377 * t319 + t380 * t320) * t403;];
	Jg_rot = t1;
elseif link_index == 7
	%% Symbolic Calculation
	% From jacobig_rot_7_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-05-09 18:15:03
	% EndTime: 2020-05-09 18:15:03
	% DurationCPUTime: 0.01s
	% Computational Cost: add. (0->0), mult. (0->0), div. (0->0), fcn. (0->0), ass. (0->1)
	t1 = [0, 0; 0, 0; 0, 1;];
	Jg_rot = t1;
elseif link_index == 8
	%% Symbolic Calculation
	% From jacobig_rot_8_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-05-09 18:15:03
	% EndTime: 2020-05-09 18:15:03
	% DurationCPUTime: 0.02s
	% Computational Cost: add. (12->5), mult. (22->7), div. (6->2), fcn. (32->4), ass. (0->9)
	t44 = sin(pkin(8));
	t45 = cos(pkin(8));
	t46 = sin(qJ(1));
	t47 = cos(qJ(1));
	t42 = t44 * t47 - t45 * t46;
	t43 = t44 * t46 + t45 * t47;
	t48 = t42 ^ 2 / t43 ^ 2;
	t39 = 0.1e1 / (0.1e1 + t48);
	t1 = [0, 0; 0, 0; -t39 * t48 - t39 + 0.1e1, 0;];
	Jg_rot = t1;
elseif link_index == 9
	%% Symbolic Calculation
	% From jacobig_rot_9_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-05-09 18:16:25
	% EndTime: 2020-05-09 18:16:30
	% DurationCPUTime: 1.61s
	% Computational Cost: add. (14020->96), mult. (37373->166), div. (436->6), fcn. (10438->6), ass. (0->77)
	t548 = 4 * pkin(1);
	t542 = 2 * pkin(7);
	t541 = 2 * pkin(1);
	t482 = (pkin(3) ^ 2);
	t478 = 2 * t482;
	t473 = sin(qJ(1));
	t475 = cos(qJ(2));
	t518 = t473 * t475;
	t461 = pkin(3) * t518;
	t497 = pkin(1) * t461;
	t458 = -0.2e1 * t497;
	t484 = pkin(1) ^ 2;
	t472 = sin(qJ(2));
	t462 = pkin(3) * t472 + pkin(7);
	t476 = cos(qJ(1));
	t456 = t462 * t476;
	t505 = pkin(1) * t456;
	t510 = t472 * t542;
	t463 = pkin(3) * t510;
	t485 = pkin(7) ^ 2;
	t512 = t463 + t485;
	t443 = t458 + t482 + t484 + 0.2e1 * t505 + t512;
	t536 = 0.1e1 / t443 / 0.2e1;
	t468 = t472 ^ 2;
	t452 = t468 * t478 - t482 + t512;
	t532 = pkin(1) * t452;
	t531 = pkin(3) * t475;
	t442 = 0.1e1 / t443 ^ 2;
	t516 = t475 * t476;
	t504 = pkin(3) * t516;
	t519 = t472 * t473;
	t459 = pkin(3) * pkin(1) * t519;
	t467 = pkin(7) * t531;
	t514 = t459 + t467;
	t525 = t442 * (pkin(1) * t504 + t514);
	t520 = t462 * t473;
	t449 = t504 + t520;
	t524 = t442 * t449 * pkin(1);
	t511 = -pkin(4) ^ 2 + t485;
	t466 = t484 + t511;
	t455 = t463 + t466;
	t447 = t458 + t455;
	t465 = (t484 - t485) * t482;
	t480 = 0.2e1 * pkin(3);
	t469 = t476 ^ 2;
	t494 = -0.2e1 * t452 * t469 - t511;
	t503 = -0.4e1 * pkin(7) * pkin(3) * t466;
	t509 = 2 * t484;
	t486 = sqrt(0.4e1 * t465 * t468 + t472 * t503 - (t484 ^ 2) - (t485 - (t480 + pkin(4)) * pkin(4)) * (t485 + (t480 - pkin(4)) * pkin(4)) + (-(2 * t482) + t494) * t509 + (-t447 * t456 + t455 * t461) * t548);
	t523 = t449 * t486;
	t464 = 0.2e1 * t467;
	t496 = 0.4e1 * t482 * t472 * t475;
	t453 = t464 + t496;
	t522 = t453 * t469;
	t521 = t462 * t469;
	t517 = t473 * t476;
	t515 = t476 * t486;
	t513 = -t461 + t456;
	t508 = t473 * t482 * pkin(7);
	t436 = 0.1e1 / t486;
	t507 = 0.2e1 * t436 * ((t452 * t517 + t521 * t531) * t509 + (t447 * t520 + t455 * t504) * pkin(1));
	t506 = t476 * t532;
	t500 = (-0.4e1 * t484 * t522 + (0.8e1 * t465 * t472 + t503) * t475 + (-0.8e1 * t514 * t456 + 0.8e1 * t475 ^ 2 * t508 + 0.4e1 * (-t447 * t516 - t455 * t519) * pkin(3)) * pkin(1)) * t436 / 0.2e1;
	t460 = t478 + 3 * t484 + t511;
	t445 = t460 + t463 - 0.4e1 * t497;
	t457 = t461 - pkin(1);
	t432 = -t445 * t456 + t523 + (t457 * t510 + t460 * t518) * pkin(3) + (-t484 + (0.2e1 * t468 - 0.4e1) * t482 + t494) * pkin(1);
	t431 = 0.1e1 / t432 ^ 2;
	t454 = t478 + t455;
	t439 = t454 * t462 + 0.2e1 * t506;
	t440 = t454 * t476 + (0.4e1 * t469 - 0.2e1) * t462 * pkin(1);
	t448 = pkin(1) + t513;
	t433 = t439 * t473 + t440 * t531 + t448 * t486;
	t495 = 0.1e1 / (t431 * t433 ^ 2 + 0.1e1) * t443;
	t493 = 0.2e1 / t432 * t495;
	t492 = -0.2e1 * t431 * t433 * t495;
	t1 = [0, 0; 0, 0; 0.1e1 + ((-t523 + t448 * t507 + t439 * t476 + ((-t454 - 0.8e1 * t505) * t531 - 0.2e1 * t473 * t532) * t473) * t536 + t433 * t524) * t493 + ((t513 * t486 + t449 * t507 + (t462 * t445 + 0.4e1 * t506) * t473 + (t482 * t476 * t510 + (t460 * t476 + t521 * t548) * pkin(3)) * t475) * t536 + t432 * t524) * t492, ((t448 * t500 + t453 * t517 * t541 + ((t473 * t486 - t440) * t472 + (t515 + (t462 * t542 + t454) * t473 + 0.2e1 * (pkin(7) * t476 + t469 * t541 - pkin(1)) * t531) * t475) * pkin(3)) * t536 - t433 * t525) * t493 + ((t461 * t486 + t449 * t500 - (0.4e1 * t459 + t464) * t456 - 0.2e1 * t468 * t508 + (t496 - 0.2e1 * t522) * pkin(1) + ((-t445 * t476 + t457 * t542) * t475 + (-t460 * t473 - t515) * t472) * pkin(3)) * t536 - t432 * t525) * t492;];
	Jg_rot = t1;
elseif link_index == 10
	%% Symbolic Calculation
	% From jacobig_rot_10_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-05-09 18:19:12
	% EndTime: 2020-05-09 18:19:45
	% DurationCPUTime: 11.84s
	% Computational Cost: add. (69131->623), mult. (225951->1005), div. (516->18), fcn. (28005->6), ass. (0->435)
	t1389 = pkin(3) ^ 2;
	t1394 = pkin(1) ^ 2;
	t1396 = pkin(7) ^ 2;
	t1530 = t1394 - t1396;
	t1294 = t1530 * t1389;
	t1384 = pkin(4) ^ 2;
	t1355 = sin(qJ(1));
	t1356 = cos(qJ(2));
	t1566 = t1355 * t1356;
	t1284 = pkin(3) * t1566;
	t1442 = pkin(1) * t1284;
	t1540 = t1394 / 0.3e1 + t1396;
	t1231 = -0.4e1 / 0.9e1 * t1442 + 0.4e1 / 0.9e1 * t1389 - t1384 / 0.9e1 + t1540;
	t1335 = -t1384 / 0.6e1;
	t1344 = 0.2e1 / 0.3e1 * t1389;
	t1423 = t1396 - t1442;
	t1239 = t1335 + t1344 + t1423;
	t1343 = 0.4e1 / 0.3e1 * t1389;
	t1317 = t1394 + t1396;
	t1337 = -t1384 / 0.3e1;
	t1454 = t1337 + t1317;
	t1273 = t1343 + t1454;
	t1307 = -t1394 / 0.3e1 + t1396;
	t1443 = -0.2e1 * t1284;
	t1357 = cos(qJ(1));
	t1326 = t1357 ^ 2;
	t1555 = t1394 * t1326;
	t1498 = 0.6e1 * t1555;
	t1325 = t1357 * t1326;
	t1398 = pkin(1) * t1394;
	t1570 = t1325 * t1398;
	t1517 = pkin(7) * t1570;
	t1607 = pkin(7) * t1357;
	t1550 = 0.4e1 * t1607;
	t1559 = (pkin(7) + pkin(1)) * (pkin(7) - pkin(1));
	t1183 = 0.4e1 * t1517 + t1231 * t1498 + t1273 * t1559 + (t1239 * t1550 + t1307 * t1443) * pkin(1);
	t1372 = 0.6e1 * t1394;
	t1435 = -0.4e1 * t1442;
	t1339 = -0.2e1 / 0.3e1 * t1384;
	t1380 = 0.2e1 * t1396;
	t1453 = t1339 + t1344 + t1380;
	t1402 = t1389 ^ 2;
	t1452 = t1339 + t1317;
	t1545 = (t1344 + t1452) * t1317 + t1402;
	t1195 = t1273 * t1435 + (t1372 + t1453) * t1389 + t1545;
	t1308 = 0.10e2 / 0.3e1 * t1394;
	t1207 = (t1308 + t1453) * t1389 + t1545;
	t1271 = -0.2e1 * t1442;
	t1347 = -t1389 / 0.3e1;
	t1305 = t1347 + t1396;
	t1244 = t1305 * t1271;
	t1560 = (pkin(7) + pkin(3)) * (pkin(7) - pkin(3));
	t1209 = t1273 * t1560 + t1244;
	t1316 = -0.3e1 * t1389 + t1396;
	t1462 = 0.8e1 * t1517;
	t1257 = t1316 * t1462;
	t1450 = t1389 + t1317;
	t1282 = -t1384 + t1450;
	t1312 = pkin(1) * t1357;
	t1288 = t1312 + pkin(7);
	t1309 = t1317 ^ 2;
	t1392 = t1394 ^ 2;
	t1358 = 0.15e2 * t1392;
	t1359 = 0.15e2 * t1394;
	t1395 = t1396 ^ 2;
	t1376 = 0.3e1 * t1395;
	t1401 = pkin(3) * t1389;
	t1386 = t1401 ^ 2;
	t1236 = t1271 + t1273;
	t1532 = -t1389 + t1396;
	t1293 = t1532 * t1394;
	t1523 = 0.4e1 * t1312;
	t1614 = 0.4e1 * t1326;
	t1182 = pkin(7) * t1236 * t1523 + t1293 * t1614 + t1195;
	t1524 = 0.2e1 * t1312;
	t1292 = pkin(7) * t1524;
	t1319 = -0.3e1 * t1394 + t1396;
	t1499 = 0.4e1 * t1555;
	t1243 = t1292 + t1499 + t1319;
	t1354 = sin(qJ(2));
	t1322 = t1354 ^ 2;
	t1321 = t1354 * t1322;
	t1574 = t1321 * t1401;
	t1509 = 0.8e1 * t1574;
	t1310 = pkin(3) * t1354;
	t1520 = 0.6e1 * t1310;
	t1419 = t1182 * t1520 + t1243 * t1509;
	t1379 = 0.3e1 * t1396;
	t1533 = -t1384 + t1389;
	t1451 = t1379 + t1533;
	t1483 = 0.12e2 * t1555;
	t1557 = t1389 * t1322;
	t1484 = 0.12e2 * t1557;
	t1166 = t1183 * t1484 + t1257 + t1209 * t1483 + t1386 + (t1359 + t1451) * t1402 + (t1451 * t1372 + t1533 * t1380 + t1358 + t1376) * t1389 + t1309 * t1282 + t1419 * t1288 + 0.6e1 * (t1195 * t1607 - t1207 * t1284) * pkin(1);
	t1311 = pkin(3) * t1356;
	t1518 = 0.2e1 * t1394;
	t1315 = t1389 + t1518;
	t1564 = t1356 * t1357;
	t1490 = pkin(3) * t1564;
	t1489 = t1394 * t1311;
	t1253 = -t1355 * t1398 + t1489;
	t1584 = t1253 * t1326;
	t1623 = 0.2e1 * pkin(7);
	t1196 = -t1530 * t1311 + 0.2e1 * t1584 + (t1315 * t1355 + t1490 * t1623) * pkin(1);
	t1373 = 0.3e1 * t1394;
	t1536 = t1373 + t1396;
	t1298 = t1389 + t1536;
	t1256 = t1298 * t1311;
	t1299 = 0.3e1 * t1389 + t1317;
	t1578 = t1299 * t1355;
	t1224 = -pkin(1) * t1578 + t1256;
	t1497 = 0.8e1 * t1394 * t1401;
	t1611 = 0.4e1 * t1392;
	t1286 = pkin(3) * t1611 + t1497;
	t1470 = t1398 * t1560;
	t1226 = t1286 * t1356 + 0.4e1 * t1355 * t1470;
	t1370 = 0.5e1 * t1392;
	t1528 = t1395 + t1402;
	t1360 = 0.10e2 * t1394;
	t1537 = t1360 + t1380;
	t1553 = t1396 * t1394;
	t1241 = t1537 * t1389 + t1370 + t1528 + 0.6e1 * t1553;
	t1367 = 0.5e1 * t1402;
	t1249 = t1367 + (t1360 + 0.6e1 * t1396) * t1389 + t1309;
	t1474 = t1288 * t1574;
	t1440 = -0.8e1 * t1474;
	t1505 = -0.4e1 * t1557;
	t1580 = t1288 * t1354;
	t1597 = pkin(1) * t1355;
	t1259 = t1311 - t1597;
	t1437 = t1326 * t1489;
	t1194 = -0.2e1 * t1437 + t1256 + (0.2e1 * t1259 * t1607 - t1578) * pkin(1);
	t1619 = -0.4e1 * t1194;
	t1172 = t1196 * t1505 + t1226 * t1326 + (t1580 * t1619 + (-t1241 + t1462) * t1356) * pkin(3) + (-0.4e1 * t1224 * t1607 + (t1249 + t1440) * t1355) * pkin(1);
	t1254 = t1310 + t1288;
	t1609 = pkin(7) * t1354;
	t1551 = 0.2e1 * t1609;
	t1289 = pkin(3) * t1551;
	t1527 = t1396 - t1384;
	t1297 = t1394 + t1527;
	t1252 = t1289 + t1297;
	t1228 = t1271 + t1252;
	t1287 = t1310 + pkin(7);
	t1267 = t1287 * t1357;
	t1382 = 0.2e1 * pkin(3);
	t1504 = 0.2e1 * t1557;
	t1242 = t1289 + t1504 + t1532;
	t1615 = -0.2e1 * t1326;
	t1426 = t1242 * t1615 - t1527;
	t1480 = -0.4e1 * pkin(7) * pkin(3) * t1297;
	t1629 = 0.4e1 * pkin(1);
	t1179 = 0.4e1 * t1294 * t1322 + t1354 * t1480 - t1392 - (t1396 - (t1382 + pkin(4)) * pkin(4)) * (t1396 + (t1382 - pkin(4)) * pkin(4)) + (-0.2e1 * t1389 + t1426) * t1518 + (-t1228 * t1267 + t1252 * t1284) * t1629;
	t1397 = sqrt(t1179);
	t1159 = t1166 * t1254 + t1172 * t1397;
	t1631 = t1159 ^ 2;
	t1630 = 0.2e1 * pkin(1);
	t1628 = 0.4e1 * pkin(3);
	t1495 = pkin(1) * t1267;
	t1206 = t1271 + t1289 + t1450 + 0.2e1 * t1495;
	t1205 = 0.1e1 / t1206 ^ 2;
	t1627 = -0.2e1 * t1205;
	t1617 = 0.8e1 * t1254;
	t1368 = 0.2e1 * t1389;
	t1281 = t1368 + t1373 + t1527;
	t1225 = t1281 + t1289 + t1435;
	t1269 = t1284 - pkin(1);
	t1581 = t1287 * t1355;
	t1234 = t1490 + t1581;
	t1585 = t1234 * t1397;
	t1169 = -t1225 * t1267 + t1585 + (t1269 * t1551 + t1281 * t1566) * pkin(3) + (-t1394 + (0.2e1 * t1322 - 0.4e1) * t1389 + t1426) * pkin(1);
	t1626 = 0.2e1 / t1169;
	t1240 = 0.4e1 / 0.3e1 * t1555 + t1292 + t1307;
	t1314 = -t1384 - t1389;
	t1296 = t1379 + t1314;
	t1579 = t1296 * t1394;
	t1266 = 0.10e2 * t1579;
	t1371 = 0.7e1 * t1394;
	t1320 = t1322 ^ 2;
	t1575 = t1320 * t1402;
	t1576 = t1314 * t1396;
	t1577 = t1309 * (-t1389 + t1297);
	t1625 = 0.7e1 * t1386 + (t1371 + t1296) * t1367 + (t1266 + 0.21e2 * t1392 + 0.9e1 * t1395 + 0.6e1 * t1576) * t1389 + t1577 - 0.24e2 * t1240 * t1575;
	t1336 = -t1384 / 0.4e1;
	t1624 = t1336 + t1389 / 0.2e1;
	t1622 = -0.2e1 * pkin(1);
	t1348 = -0.2e1 / 0.3e1 * t1389;
	t1306 = t1348 + t1396;
	t1203 = t1402 + (t1339 + t1348 + t1537) * t1389 + t1370 + 0.2e1 * t1579 + t1396 * (t1339 + t1306);
	t1199 = t1203 * t1311;
	t1272 = 0.8e1 / 0.3e1 * t1389 + t1454;
	t1274 = t1337 + t1344 + t1536;
	t1213 = -t1272 * t1597 + t1274 * t1311;
	t1351 = t1394 / 0.2e1;
	t1280 = 0.5e1 / 0.6e1 * t1389 + t1351 + t1335;
	t1519 = 0.2e1 * t1311;
	t1222 = t1280 * t1519 + t1560 * t1597;
	t1303 = pkin(7) * t1311;
	t1449 = t1398 * t1303;
	t1501 = -0.4e1 * t1555;
	t1215 = t1367 + (0.5e1 * t1394 + t1296) * t1368 + (t1348 + t1452) * t1317;
	t1586 = t1215 * t1355;
	t1616 = -0.8e1 * t1325;
	t1175 = t1449 * t1616 + t1222 * t1501 + t1199 + (t1213 * t1550 - t1586) * pkin(1);
	t1620 = -0.6e1 * t1175;
	t1383 = t1384 ^ 2;
	t1531 = t1392 + t1395;
	t1535 = t1380 - t1384;
	t1554 = t1396 * t1384;
	t1420 = t1535 * t1394 + t1383 / 0.6e1 + t1531 - t1554;
	t1416 = 0.5e1 / 0.6e1 * t1402 + t1420;
	t1214 = (t1308 + t1535) * t1389 + t1416;
	t1618 = 0.6e1 * t1214;
	t1613 = 0.4e1 * t1354;
	t1612 = -0.8e1 * t1357;
	t1610 = pkin(1) * pkin(7);
	t1608 = pkin(7) * t1355;
	t1606 = pkin(7) * t1392;
	t1157 = 0.1e1 / t1159;
	t1605 = t1157 / 0.2e1;
	t1604 = t1157 / 0.4e1;
	t1158 = 0.1e1 / t1631;
	t1603 = -t1158 / 0.4e1;
	t1204 = 0.1e1 / t1206;
	t1602 = t1204 / 0.2e1;
	t1378 = 0.4e1 * t1396;
	t1457 = 0.2e1 / 0.3e1 * t1384 + t1344 + t1378;
	t1458 = 0.4e1 / 0.3e1 * t1384 + t1343 - 0.2e1 * t1396;
	t1478 = 0.20e2 / 0.3e1 * t1394;
	t1601 = t1402 / 0.2e1 - (t1457 - t1478) * t1389 / 0.2e1 + 0.3e1 / 0.2e1 * t1392 - t1458 * t1394 / 0.2e1 - t1395 / 0.2e1;
	t1600 = -t1397 / 0.4e1;
	t1599 = t1397 / 0.4e1;
	t1598 = pkin(1) * t1307;
	t1596 = pkin(3) * t1397;
	t1366 = -0.5e1 * t1384;
	t1369 = 0.7e1 * t1392;
	t1542 = t1383 / 0.2e1 - t1402 / 0.2e1;
	t1429 = -0.3e1 * t1554 + t1376 + t1542;
	t1340 = -0.3e1 / 0.2e1 * t1384;
	t1541 = t1340 + t1379;
	t1546 = t1317 * ((t1340 + t1380) * t1394 - 0.3e1 / 0.2e1 * t1554 + t1531 + t1542) + t1386;
	t1191 = (t1371 + t1541) * t1402 + (t1369 + (t1366 + 0.10e2 * t1396) * t1394 + t1429) * t1389 + t1546;
	t1595 = t1191 * pkin(1);
	t1594 = -0.2e1 * t1610;
	t1263 = t1396 + t1389 / 0.4e1 + t1394 / 0.4e1 - t1384 / 0.8e1;
	t1538 = 0.4e1 / 0.7e1 * t1396 - t1384 / 0.7e1;
	t1188 = -0.32e2 / 0.21e2 * t1263 * t1442 + 0.5e1 / 0.42e2 * t1402 + (0.16e2 / 0.21e2 * t1394 + t1538) * t1389 + t1392 / 0.7e1 + t1538 * t1394 + t1395 - 0.3e1 / 0.7e1 * t1554 + t1383 / 0.42e2;
	t1265 = t1540 + t1624;
	t1349 = 0.4e1 / 0.3e1 * t1394;
	t1192 = -0.8e1 / 0.3e1 * t1265 * t1442 + 0.5e1 / 0.18e2 * t1402 + (t1349 + t1337) * t1389 + t1395 - t1392 / 0.3e1 + t1383 / 0.18e2 + (t1343 + 0.2e1 / 0.3e1 * t1394 + t1339) * t1396;
	t1237 = -t1402 / 0.6e1 + t1420;
	t1539 = t1351 + t1396;
	t1238 = -0.2e1 / 0.3e1 * t1442 + t1336 + t1539;
	t1301 = (t1378 + t1384) * t1394;
	t1338 = -t1384 / 0.2e1;
	t1279 = t1338 + t1450;
	t1444 = -0.4e1 * t1284;
	t1427 = t1279 * t1444;
	t1447 = 0.16e2 * t1517;
	t1324 = t1326 ^ 2;
	t1556 = t1392 * t1324;
	t1502 = 0.8e1 * t1556;
	t1171 = t1306 * t1502 + t1238 * t1447 + 0.14e2 * t1188 * t1555 - t1530 * t1402 + (t1301 - 0.10e2 / 0.3e1 * t1392 + 0.2e1 * t1395 - t1554) * t1389 + t1237 * t1559 + (0.6e1 * t1192 * t1607 + t1307 * t1427) * pkin(1);
	t1180 = -0.6e1 * t1214 * t1442 + (t1358 + (-0.9e1 * t1384 + 0.18e2 * t1396) * t1394 + t1429) * t1389 + (t1359 + t1541) * t1402 + t1546;
	t1424 = pkin(1) * t1427;
	t1529 = t1395 - t1392;
	t1186 = t1305 * t1424 - t1386 + (-t1308 - t1527) * t1402 + (t1301 + t1402 / 0.6e1 - t1383 / 0.6e1 + t1529) * t1389 + t1237 * t1396;
	t1406 = pkin(7) * t1396;
	t1295 = -0.12e2 * pkin(7) * t1398 + t1406 * t1629;
	t1304 = -0.8e1 * t1392 + 0.12e2 * t1553;
	t1202 = t1295 * t1357 + t1304 * t1326 + t1447 + t1502 + t1531 - 0.6e1 * t1553;
	t1216 = t1271 * t1560 + t1279 * t1316;
	t1268 = (-0.6e1 * t1389 * t1396 + t1528) * t1392;
	t1313 = -0.30e2 * t1384 + 0.60e2 * t1396;
	t1365 = -0.2e1 * t1384;
	t1534 = t1383 - t1402;
	t1428 = -0.6e1 * t1554 + 0.6e1 * t1395 + t1534;
	t1377 = 0.8e1 * t1396;
	t1229 = t1398 * t1444 + t1611 + (0.4e1 * t1389 + t1365 + t1377) * t1394;
	t1235 = -t1394 + t1423 + t1624;
	t1184 = t1462 + t1229 * t1326 + t1279 * t1319 + (t1235 * t1550 + t1443 * t1559) * pkin(1);
	t1476 = t1184 * t1574;
	t1197 = t1424 + (t1372 + t1535) * t1389 + t1416;
	t1212 = t1279 * t1560 + t1244;
	t1526 = pkin(7) * t1312;
	t1481 = 0.6e1 * t1526;
	t1173 = t1197 * t1481 + t1212 * t1483 + t1180 + t1257;
	t1493 = t1173 * t1310;
	t1155 = 0.16e2 * t1268 * t1324 + 0.32e2 * t1216 * t1517 + 0.24e2 * t1186 * t1555 + (t1365 + t1378 + 0.28e2 * t1394) * t1386 + t1282 * t1577 + (0.24e2 * t1171 * t1322 + t1313 * t1392 + t1428 * t1372 + t1534 * t1380 - 0.6e1 * t1395 * t1384 + 0.28e2 * t1398 ^ 2 + 0.4e1 * t1406 ^ 2) * t1389 + (0.32e2 * t1476 + 0.8e1 * t1493) * t1288 + 0.8e1 * (t1180 * t1607 - t1191 * t1284) * pkin(1) + (0.16e2 * t1202 * t1320 + t1313 * t1394 + 0.70e2 * t1392 + t1402 + t1428) * t1402;
	t1261 = 0.7e1 / 0.6e1 * t1389 + t1335 + t1539;
	t1345 = t1389 / 0.3e1;
	t1455 = t1335 + t1345 + t1396;
	t1264 = t1349 + t1455;
	t1208 = -t1261 * t1597 + t1264 * t1311;
	t1275 = t1394 + t1455;
	t1300 = t1368 - t1530;
	t1218 = t1275 * t1311 - t1300 * t1597 / 0.2e1;
	t1456 = t1384 / 0.3e1 + t1345 + t1380;
	t1430 = -0.8e1 / 0.3e1 * t1556 - t1294 - 0.5e1 / 0.3e1 * t1392 + t1456 * t1394 + t1396 * (t1337 + t1305);
	t1549 = -0.4e1 * t1606;
	t1174 = t1355 * t1325 * t1549 + t1208 * t1499 + t1430 * t1311 + (t1218 * t1550 + t1355 * t1601) * pkin(1);
	t1185 = -pkin(1) * t1586 + t1199;
	t1211 = -0.3e1 * t1402 + (t1458 - t1478) * t1389 + t1457 * t1394 + t1529;
	t1219 = -0.5e1 / 0.3e1 * t1402 + (-t1394 + t1456) * t1389 + t1396 * (t1347 + t1454);
	t1525 = -0.2e1 * t1597;
	t1187 = t1211 * t1311 + t1219 * t1525;
	t1258 = t1311 + 0.2e1 * t1597;
	t1278 = t1338 + t1298;
	t1190 = t1319 * t1311 + 0.4e1 * t1584 + (t1258 * t1607 + t1278 * t1355) * t1630;
	t1262 = t1396 + 0.5e1 / 0.2e1 * t1389 + 0.3e1 / 0.2e1 * t1394 + t1338;
	t1220 = t1262 * t1311 + t1316 * t1597 / 0.2e1;
	t1425 = 0.24e2 * t1305 * t1556 - t1386 - (0.21e2 * t1394 + t1296) * t1402 - (t1266 + t1376 + 0.35e2 * t1392 + 0.2e1 * t1576) * t1389 - (t1369 + (t1366 + t1377 - 0.5e1 * t1389) * t1394 + t1396 * (-t1389 + t1527)) * t1317;
	t1485 = -0.12e2 * t1557;
	t1160 = t1220 * t1447 + t1190 * t1440 + t1174 * t1485 - 0.6e1 * t1187 * t1555 + (t1425 * t1356 + t1580 * t1620) * pkin(3) + (-0.6e1 * t1185 * t1607 + t1625 * t1355) * pkin(1);
	t1152 = t1155 * t1254 + t1160 * t1397;
	t1250 = t1368 + t1252;
	t1496 = t1242 * t1312;
	t1198 = t1250 * t1287 + 0.2e1 * t1496;
	t1201 = t1250 * t1357 + (t1614 - 0.2e1) * t1287 * pkin(1);
	t1543 = -t1284 + t1267;
	t1232 = pkin(1) + t1543;
	t1170 = t1198 * t1355 + t1201 * t1311 + t1232 * t1397;
	t1466 = t1170 * t1604;
	t1418 = t1152 * t1466 + t1169 * t1599;
	t1385 = 0.1e1 / pkin(4);
	t1558 = t1385 / pkin(3) ^ 2;
	t1475 = t1204 * t1558;
	t1148 = t1418 * t1475;
	t1569 = t1354 * t1355;
	t1245 = t1564 + t1569;
	t1145 = t1245 * t1148;
	t1467 = t1169 * t1604;
	t1417 = t1152 * t1467 + t1170 * t1600;
	t1147 = t1417 * t1475;
	t1568 = t1354 * t1357;
	t1246 = t1566 - t1568;
	t1142 = -t1147 * t1246 - t1145;
	t1140 = 0.1e1 / t1142 ^ 2;
	t1146 = t1246 * t1148;
	t1141 = -t1147 * t1245 + t1146;
	t1138 = 0.1e1 / (t1140 * t1141 ^ 2 + 0.1e1);
	t1592 = t1138 / t1142;
	t1591 = 0.1e1 / t1152 ^ 2 * t1631;
	t1290 = 0.2e1 * t1303;
	t1563 = t1356 * t1389;
	t1439 = t1563 * t1613;
	t1248 = t1290 + t1439;
	t1514 = t1389 * t1608;
	t1491 = pkin(3) * t1569;
	t1276 = pkin(1) * t1491;
	t1544 = t1276 + t1303;
	t1176 = t1248 * t1501 + (0.8e1 * t1294 * t1354 + t1480) * t1356 + (-0.8e1 * t1544 * t1267 + 0.8e1 * t1356 ^ 2 * t1514 + (-t1228 * t1564 - t1252 * t1569) * t1628) * pkin(1);
	t1178 = 0.1e1 / t1397;
	t1590 = t1176 * t1178;
	t1565 = t1355 * t1357;
	t1582 = t1287 * t1326;
	t1181 = (t1242 * t1565 + t1582 * t1311) * t1518 + (t1228 * t1581 + t1252 * t1490) * pkin(1);
	t1589 = t1178 * t1181;
	t1223 = pkin(1) * t1490 + t1544;
	t1588 = t1205 * t1223;
	t1227 = t1234 * pkin(1);
	t1587 = t1205 * t1227;
	t1552 = t1398 * t1326;
	t1516 = pkin(7) * t1552;
	t1445 = -0.12e2 * t1516;
	t1583 = t1254 * t1355 * t1445;
	t1573 = t1321 * t1402;
	t1572 = t1322 * t1401;
	t1571 = t1325 * t1392;
	t1567 = t1354 * t1389;
	t1562 = t1357 * t1394;
	t1561 = t1357 * t1397;
	t1291 = pkin(7) * t1525;
	t1323 = t1355 ^ 2;
	t1431 = t1325 * t1470;
	t1479 = 0.32e2 / 0.3e1 * t1392;
	t1433 = t1325 * t1479;
	t1434 = 0.64e2 / 0.3e1 * t1263 * t1398;
	t1441 = t1560 * t1606;
	t1446 = -0.48e2 * t1516;
	t1459 = pkin(7) * t1499;
	t1500 = -0.2e1 * t1555;
	t1460 = pkin(7) * t1500;
	t1461 = pkin(7) * t1501;
	t1469 = t1355 * t1562;
	t1471 = t1305 * t1570;
	t1486 = -0.32e2 * t1571;
	t1487 = 0.64e2 * t1574;
	t1488 = t1307 * t1312;
	t1492 = t1254 * t1311;
	t1494 = pkin(1) * t1559;
	t1503 = 0.3e1 * t1557;
	t1506 = 0.8e1 * t1562;
	t1507 = -0.2e1 * t1570;
	t1508 = -0.4e1 * t1570;
	t1510 = -0.8e1 * t1574;
	t1511 = 0.2e1 * t1589;
	t1513 = pkin(7) * t1555;
	t1522 = -0.6e1 * t1310;
	t1143 = ((0.12e2 * t1323 * t1326 * t1606 + t1261 * t1508 + t1300 * t1460 + t1324 * t1549) * t1485 + 0.12e2 * t1219 * t1570 + (t1601 * t1485 + t1625) * t1312 + (t1215 * t1498 + t1316 * t1502) * pkin(7)) * t1397 + t1160 * t1511 + (((t1278 * t1524 + t1459 + t1508) * t1510 + (-t1215 * t1312 + t1272 * t1461 - 0.4e1 * t1431) * t1522) * t1397 + t1487 * t1583) * t1288 + (0.24e2 * (-pkin(7) * t1324 * t1479 - 0.16e2 * t1265 * t1513 - 0.4e1 * t1279 * t1488 - t1325 * t1434) * t1557 - 0.64e2 * t1324 * t1441 - 0.96e2 * t1279 * t1471 - 0.48e2 * t1214 * t1513 + t1595 * t1612 + ((-t1357 * t1494 + t1460 + t1507) * t1487 + 0.48e2 * (-t1214 * t1312 + t1279 * t1461 - 0.4e1 * t1471) * t1310) * t1288) * t1492 + ((0.2e1 * (-0.2e1 * t1304 * t1357 - t1295 + t1446 + t1486) * t1575 + 0.8e1 * (-t1229 * t1357 + t1235 * t1594) * t1474 + (-0.28e2 * t1188 * t1562 - 0.6e1 * t1192 * t1610 + t1238 * t1446 + t1306 * t1486) * t1503 + t1288 * (-t1197 * t1610 - 0.4e1 * t1212 * t1562 - 0.4e1 * t1316 * t1516) * t1520 + t1268 * t1616 + t1216 * t1445 - 0.6e1 * t1186 * t1562 - t1180 * t1610 + (-0.4e1 * t1476 - t1493) * pkin(1)) * t1617 - t1155 * pkin(1) + ((-0.8e1 * t1208 * t1562 + t1433 * t1311) * t1485 - 0.96e2 * t1305 * t1571 * t1311 + t1220 * t1446 + 0.12e2 * t1187 * t1562 + (t1175 * t1520 + t1190 * t1509 + (-0.24e2 * t1291 + 0.64e2 * t1469) * t1575 + (0.48e2 * t1218 * t1557 + 0.6e1 * t1185) * pkin(7)) * pkin(1) + ((t1253 * t1612 + t1258 * t1594) * t1510 + (-0.4e1 * t1213 * t1610 + t1222 * t1506 + 0.24e2 * t1326 * t1449) * t1522) * t1288) * t1397) * t1355;
	t1448 = t1565 * t1628;
	t1521 = -0.4e1 * t1310;
	t1153 = (t1323 * t1321 * t1497 + (t1315 * t1312 + t1507) * t1505 + 0.4e1 * t1431 + t1299 * t1459 + t1249 * t1312) * t1397 + t1172 * t1511 + t1484 * t1583 + ((-0.8e1 / 0.3e1 * t1570 + t1461 - 0.2e1 * t1488) * t1484 - 0.24e2 * t1471 - 0.24e2 * t1273 * t1513 - 0.6e1 * t1207 * t1312) * t1492 + (0.24e2 * (-t1254 * t1316 - t1356 * t1596) * t1516 + ((0.16e2 * t1253 * t1557 - 0.2e1 * t1226) * t1397 + (-0.144e3 * t1231 * t1557 - 0.24e2 * t1209) * t1254 * t1394) * t1357 + (t1194 * t1596 * t1613 - t1419 * t1254 - t1166 + ((0.8e1 * t1557 * t1311 + 0.4e1 * t1224) * t1397 + (-0.48e2 * t1239 * t1557 - 0.6e1 * t1195) * t1254) * pkin(7)) * pkin(1)) * t1355 + ((t1510 * t1312 + ((pkin(7) * t1615 + t1356 * t1448) * t1394 + (-0.2e1 * t1259 * t1608 - t1299 * t1357) * pkin(1)) * t1521) * t1397 + ((t1291 - 0.8e1 * t1469) * t1509 + (-0.8e1 * pkin(7) * t1437 - 0.8e1 * t1293 * t1565 + (-t1236 * t1608 - t1273 * t1490) * t1629) * t1520) * t1254) * t1288;
	t1163 = -t1585 + t1232 * t1511 + t1242 * t1323 * t1622 + t1198 * t1357 + (-t1250 - 0.8e1 * t1495) * t1284;
	t1515 = pkin(7) * t1568;
	t1164 = t1543 * t1397 + t1234 * t1511 + (t1287 * t1225 + 0.4e1 * t1496) * t1355 + (t1515 * t1368 + (t1281 * t1357 + t1582 * t1629) * pkin(3)) * t1356;
	t1414 = t1418 * t1627;
	t1464 = t1170 * t1603;
	t1548 = (-t1227 * t1414 + (t1164 * t1599 + t1589 / t1626 + t1143 * t1466 + (t1153 * t1464 + t1163 * t1604) * t1152) * t1204) * t1558 + t1147;
	t1251 = t1394 * t1448 * t1609;
	t1260 = pkin(3) * t1515 * t1622;
	t1463 = t1590 / 0.2e1;
	t1472 = t1305 * t1552;
	t1473 = t1288 * t1572;
	t1482 = -0.4e1 * t1526;
	t1512 = pkin(7) * t1562;
	t1144 = t1160 * t1463 + (0.32e2 * t1251 * t1254 - 0.8e1 * t1260 * t1397) * t1474 + (0.24e2 * (-0.4e1 * t1240 * t1573 * t1597 - t1174 * t1567 - t1190 * t1473) * t1397 + (0.6e1 * t1171 * t1567 + 0.12e2 * t1184 * t1473 + 0.8e1 * t1202 * t1573) * t1617) * t1356 + ((t1155 + (t1173 * t1617 + t1397 * t1620) * t1288) * t1356 + (((t1264 * t1501 + t1275 * t1482 - t1430) * t1485 - 0.16e2 * t1262 * t1517 + t1211 * t1498 + t1203 * t1481 + ((-t1319 + t1501) * t1510 + (t1274 * t1482 + 0.8e1 * t1280 * t1555 - t1203 + t1462) * t1522) * t1288 - t1425) * t1397 + ((pkin(7) * t1433 + 0.16e2 * t1265 * t1512 + 0.4e1 * t1279 * t1598 + t1326 * t1434) * t1503 + 0.8e1 * t1325 * t1441 + 0.12e2 * t1279 * t1472 + t1512 * t1618 + t1595 + (0.4e1 * (0.2e1 * t1494 + 0.4e1 * t1552) * t1574 + (pkin(1) * t1618 + 0.24e2 * t1279 * t1512 + 0.24e2 * t1472) * t1310) * t1288) * t1355 * t1617) * t1354) * pkin(3);
	t1154 = (t1260 * t1505 + (-0.8e1 * t1196 * t1563 - t1286 * t1326 + ((t1530 + t1500) * t1505 + t1241 + (t1298 * t1523 - 0.8e1 * t1570) * pkin(7)) * pkin(3)) * t1354 + ((t1260 + (-t1298 + 0.2e1 * t1555) * t1310) * t1521 + (pkin(3) * t1619 - 0.24e2 * t1572 * t1597) * t1356) * t1288) * t1397 + t1172 * t1463 + 0.6e1 * (0.4e1 * t1243 * t1356 * t1473 + (t1251 + (0.8e1 / 0.3e1 * t1552 + 0.2e1 * t1598) * t1491) * t1504 + t1183 * t1439 + 0.4e1 * t1472 * t1491 + t1273 * t1251 + t1207 * t1276 + ((pkin(7) * t1506 + t1273 * t1629) * t1355 * t1557 + t1182 * t1311) * t1288) * t1254 + t1166 * t1311;
	t1161 = t1232 * t1463 + t1248 * t1355 * t1524 + ((t1355 * t1397 - t1201) * t1354 + (t1561 + (t1287 * t1623 + t1250) * t1355 + (t1326 * t1630 - pkin(1) + t1607) * t1519) * t1356) * pkin(3);
	t1162 = t1284 * t1397 + t1234 * t1463 - (0.4e1 * t1276 + t1290) * t1267 - 0.2e1 * t1322 * t1514 + (t1248 * t1615 + t1439) * pkin(1) + ((-t1225 * t1357 + t1269 * t1623) * t1356 + (-t1281 * t1355 - t1561) * t1354) * pkin(3);
	t1547 = (t1223 * t1414 + (t1162 * t1599 + t1169 * t1590 / 0.8e1 + t1144 * t1466 + (t1154 * t1464 + t1161 * t1604) * t1152) * t1204) * t1558 - t1147;
	t1477 = t1138 * t1140 * t1141;
	t1468 = -t1152 * t1158 / 0.2e1;
	t1465 = t1169 * t1603;
	t1168 = 0.1e1 / t1169 ^ 2;
	t1390 = 0.1e1 / pkin(3);
	t1438 = pkin(3) / (t1168 * t1170 ^ 2 + 0.1e1) * t1206 * t1390;
	t1149 = 0.1e1 / (t1179 * t1591 + 0.1e1);
	t1432 = t1149 / t1152 * t1159 * t1178;
	t1422 = t1438 * t1626;
	t1421 = -0.2e1 * t1168 * t1170 * t1438;
	t1415 = -0.2e1 * pkin(4) * t1149 * t1385 * t1390 * t1591 * t1596;
	t1413 = t1417 * t1627;
	t1136 = (t1223 * t1413 + (t1144 * t1467 + t1161 * t1600 - t1170 * t1590 / 0.8e1 + (t1154 * t1465 + t1162 * t1604) * t1152) * t1204) * t1558;
	t1134 = (-t1227 * t1413 + (t1143 * t1467 + t1163 * t1600 - t1170 * t1589 / 0.2e1 + (t1153 * t1465 + t1164 * t1604) * t1152) * t1204) * t1558;
	t1 = [0, 0; 0, 0; 0.1e1 + (t1163 * t1602 + t1170 * t1587) * t1422 + (t1164 * t1602 + t1169 * t1587) * t1421 + 0.2e1 * t1181 * t1432 + (t1143 * t1605 + t1153 * t1468) * t1415 + (t1548 * t1246 + (-t1134 + t1148) * t1245) * t1592 - (-t1134 * t1246 - t1548 * t1245 + t1146) * t1477, (t1161 * t1602 - t1170 * t1588) * t1422 + (t1162 * t1602 - t1169 * t1588) * t1421 + t1176 * t1432 / 0.2e1 + (t1144 * t1605 + t1154 * t1468) * t1415 + (-t1136 * t1245 + t1547 * t1246 - t1145) * t1592 - ((-t1136 - t1148) * t1246 - t1547 * t1245) * t1477;];
	Jg_rot = t1;
end