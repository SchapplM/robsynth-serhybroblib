% Calculate potential energy for
% picker2Dm2DE1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [2x1]
%   Generalized joint coordinates (joint angles)
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[L1,L2,L3,L4,L5,L6,e,phi05,phi1]';
% m [11x1]
%   mass of all robot links (including the base)
% mrSges [11x3]
%  first moment of all robot links (mass times center of mass in body frames)
%  rows: links of the robot (starting with base)
%  columns: x-, y-, z-coordinates
% 
% Output:
% U [1x1]
%   Potential energy

% Quelle: HybrDyn-Toolbox
% Datum: 2020-05-09 18:54
% Revision: 73758128893bc0a8beabae04bd7e71472107ac81 (2020-05-07)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function U = picker2Dm2DE1_energypot_fixb_slag_vp2(qJ, g, ...
  pkin, m, mrSges)
%% Coder Information
%#codegen
%$cgargs {zeros(2,1),zeros(3,1),zeros(9,1),zeros(11,1),zeros(11,3)}
assert(isreal(qJ) && all(size(qJ) == [2 1]), ...
  'picker2Dm2DE1_energypot_fixb_slag_vp2: qJ has to be [2x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'picker2Dm2DE1_energypot_fixb_slag_vp2: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'picker2Dm2DE1_energypot_fixb_slag_vp2: pkin has to be [9x1] (double)');
assert(isreal(m) && all(size(m) == [11 1]), ...
  'picker2Dm2DE1_energypot_fixb_slag_vp2: m has to be [11x1] (double)'); 
assert(isreal(mrSges) && all(size(mrSges) == [11,3]), ...
  'picker2Dm2DE1_energypot_fixb_slag_vp2: mrSges has to be [11x3] (double)');

%% Symbolic Calculation
% From energy_potential_fixb_worldframe_par2_matlab.m
% OptimizationMode: 2
% StartTime: 2020-05-09 14:28:19
% EndTime: 2020-05-09 14:28:35
% DurationCPUTime: 8.88s
% Computational Cost: add. (79893->459), mult. (235162->561), div. (1676->6), fcn. (42008->31), ass. (0->245)
t452 = sin(qJ(1));
t454 = cos(qJ(2));
t615 = t452 * t454;
t570 = pkin(3) * t615;
t544 = pkin(1) * t570;
t390 = -0.2e1 * t544;
t633 = 0.1e1 / pkin(3);
t624 = t633 / 0.2e1;
t480 = 0.1e1 / t624;
t491 = pkin(1) ^ 2;
t489 = t491 ^ 2;
t493 = pkin(7) ^ 2;
t455 = cos(qJ(1));
t421 = t455 ^ 2;
t451 = sin(qJ(2));
t397 = pkin(7) * t451 * t480;
t418 = t451 ^ 2;
t487 = pkin(3) ^ 2;
t616 = t418 * t487;
t574 = 0.2e1 * t616;
t589 = -t487 + t493;
t524 = t397 + t574 + t589;
t521 = t524 * t421;
t413 = t491 + t493;
t482 = pkin(4) ^ 2;
t551 = -t482 + t413;
t537 = t397 + t551;
t407 = pkin(3) * t451;
t626 = t407 + pkin(7);
t548 = t626 * t455;
t590 = t482 - t493;
t550 = -0.2e1 * t487 + t590;
t577 = -0.4e1 * t407;
t587 = t491 - t493;
t629 = 0.2e1 * t491;
t637 = 0.4e1 * pkin(1);
t360 = sqrt(-0.4e1 * t491 * t521 + 0.4e1 * t587 * t616 + pkin(7) * t551 * t577 - t489 + t550 * t629 - (t493 - (t480 + pkin(4)) * pkin(4)) * (t493 + (t480 - pkin(4)) * pkin(4)) + (-(t390 + t537) * t548 + t537 * t570) * t637);
t549 = t487 + t413;
t518 = 0.1e1 / (0.2e1 * pkin(1) * t548 + t390 + t397 + t549);
t533 = -pkin(1) + t570;
t471 = 0.3e1 * t491;
t534 = t471 - t550;
t539 = -0.4e1 * t544;
t614 = t454 * t455;
t569 = pkin(3) * t614;
t631 = 0.4e1 * t487;
t515 = t518 * ((t452 * t626 + t569) * t360 - (t397 + t534 + t539) * t548 + t533 * t397 + t534 * t570 + (-0.2e1 * t521 + t574 - t631 - t551) * pkin(1));
t513 = t515 / 0.4e1;
t408 = pkin(3) * t454;
t632 = 0.2e1 * t487;
t528 = t632 + t537;
t409 = pkin(1) * t455;
t580 = 0.2e1 * t409;
t517 = t518 * ((t548 - t533) * t360 + (t524 * t580 + t528 * t626) * t452 + (t455 * t528 + (0.4e1 * t421 - 0.2e1) * pkin(1) * t626) * t408);
t483 = 0.1e1 / pkin(4);
t611 = t483 / pkin(3) ^ 2;
t498 = t487 ^ 2;
t481 = t482 ^ 2;
t492 = t493 ^ 2;
t588 = t489 + t492;
t478 = 0.2e1 * t493;
t593 = t478 - t482;
t608 = t493 * t482;
t522 = t593 * t491 + t481 / 0.6e1 + t588 - t608;
t377 = -t498 / 0.6e1 + t522;
t442 = -t487 / 0.3e1;
t403 = t442 + t493;
t380 = t403 * t390;
t396 = t409 + pkin(7);
t385 = t407 + t396;
t412 = -0.3e1 * t487 + t493;
t420 = t455 * t421;
t494 = pkin(1) * t491;
t606 = t494 * t420;
t576 = pkin(7) * t606;
t547 = 0.8e1 * t576;
t388 = t412 * t547;
t411 = -t482 - t487;
t477 = 0.3e1 * t493;
t399 = t477 + t411;
t621 = t399 * t491;
t389 = 0.10e2 * t621;
t438 = 0.4e1 / 0.3e1 * t487;
t432 = -t482 / 0.3e1;
t556 = t432 + t413;
t391 = t438 + t556;
t433 = -t482 / 0.2e1;
t393 = t433 + t549;
t394 = -t482 + t549;
t398 = pkin(7) * t580;
t476 = 0.4e1 * t493;
t401 = (t476 + t482) * t491;
t404 = -t491 / 0.3e1 + t493;
t405 = 0.10e2 / 0.3e1 * t491;
t406 = t413 ^ 2;
t410 = -0.30e2 * t482 + 0.60e2 * t493;
t415 = -0.3e1 * t491 + t493;
t430 = -t482 / 0.6e1;
t431 = -t482 / 0.4e1;
t439 = 0.2e1 / 0.3e1 * t487;
t444 = 0.4e1 / 0.3e1 * t491;
t446 = t491 / 0.2e1;
t457 = 0.15e2 * t489;
t458 = 0.15e2 * t491;
t459 = 0.10e2 * t491;
t464 = -0.2e1 * t482;
t465 = -0.5e1 * t482;
t466 = 0.5e1 * t498;
t467 = 0.7e1 * t489;
t468 = 0.5e1 * t489;
t469 = 0.7e1 * t491;
t470 = 0.6e1 * t491;
t474 = 0.3e1 * t492;
t475 = 0.8e1 * t493;
t497 = pkin(3) * t487;
t484 = t497 ^ 2;
t502 = pkin(7) * t493;
t520 = 0.5e1 / 0.6e1 * t498 + t522;
t527 = t493 - t544;
t601 = t481 / 0.2e1 - t498 / 0.2e1;
t536 = -0.3e1 * t608 + t474 + t601;
t540 = -0.6e1 * t544;
t435 = -0.3e1 / 0.2e1 * t482;
t600 = t435 + t477;
t603 = t413 * ((t435 + t478) * t491 - 0.3e1 / 0.2e1 * t608 + t588 + t601) + t484;
t529 = ((t405 + t593) * t487 + t520) * t540 + (t457 + (-0.9e1 * t482 + 0.18e2 * t493) * t491 + t536) * t487 + (t458 + t600) * t498 + t603;
t530 = t393 * t539;
t594 = t471 + t493;
t553 = t487 + t594;
t625 = pkin(1) * t452;
t531 = -(0.3e1 * t487 + t413) * t625 + t553 * t408;
t434 = -0.2e1 / 0.3e1 * t482;
t443 = -0.2e1 / 0.3e1 * t487;
t554 = t434 + t413;
t595 = t459 + t478;
t599 = t443 + t493;
t532 = -(t466 + (0.5e1 * t491 + t399) * t632 + (t443 + t554) * t413) * t625 + (t498 + (t434 + t443 + t595) * t487 + t468 + 0.2e1 * t621 + t493 * (t434 + t599)) * t408;
t592 = t481 - t498;
t535 = -0.6e1 * t608 + 0.6e1 * t492 + t592;
t555 = t434 + t439 + t478;
t602 = (t439 + t554) * t413 + t498;
t538 = t391 * t539 + (t470 + t555) * t487 + t602;
t541 = t606 * t408;
t610 = t489 * t421 ^ 2;
t542 = t610 * t408;
t567 = 0.16e2 * t606;
t545 = pkin(7) * t567;
t546 = 0.20e2 / 0.3e1 * t491;
t591 = -t482 + t487;
t552 = t477 + t591;
t440 = t487 / 0.3e1;
t557 = t430 + t440 + t493;
t558 = t482 / 0.3e1 + t440 + t478;
t559 = 0.2e1 / 0.3e1 * t482 + t439 + t476;
t560 = 0.4e1 / 0.3e1 * t482 + t438 - 0.2e1 * t493;
t613 = (pkin(7) + pkin(3)) * (pkin(7) - pkin(3));
t561 = t452 * t613;
t578 = 0.6e1 * t409;
t562 = pkin(7) * t578;
t579 = 0.4e1 * t409;
t563 = pkin(7) * t579;
t565 = -t625 / 0.2e1;
t609 = t491 * t421;
t568 = 0.12e2 * t609;
t571 = t491 * t408;
t572 = 0.4e1 * t609;
t573 = 0.8e1 * t610;
t617 = t451 * t418 * t497;
t575 = -0.8e1 * t617;
t581 = 0.2e1 * t625;
t582 = pkin(7) * t409;
t584 = 0.4e1 * pkin(7);
t585 = t492 + t498;
t586 = t492 - t489;
t596 = 0.4e1 / 0.7e1 * t493 - t482 / 0.7e1;
t597 = t446 + t493;
t598 = t491 / 0.3e1 + t493;
t607 = t493 * t491;
t612 = (pkin(7) + pkin(1)) * (pkin(7) - pkin(1));
t618 = t418 ^ 2 * t498;
t619 = t411 * t493;
t620 = t406 * (-t487 + t551);
t622 = (-t452 * t494 + t571) * t421;
t630 = 0.4e1 * t489;
t634 = t431 + t487 / 0.2e1;
t623 = ((-0.24e2 * (0.4e1 / 0.3e1 * t609 + t398 + t404) * t618 * t625 - 0.12e2 * (-0.8e1 / 0.3e1 * t542 + ((t444 + t557) * t408 - (0.7e1 / 0.6e1 * t487 + t430 + t597) * t625) * t572 + (-t487 * t587 - 0.5e1 / 0.3e1 * t489 + t558 * t491 + t493 * (t432 + t403)) * t408 + (-t498 + (-t546 + t559) * t487 - 0.3e1 * t489 + t560 * t491 + t492) * t565 + (-t452 * t489 * t420 + ((t491 + t557) * t408 + (t632 - t587) * t565) * t409) * t584) * t616 + 0.24e2 * t403 * t542 + ((t493 + 0.5e1 / 0.2e1 * t487 + 0.3e1 / 0.2e1 * t491 + t433) * t408 + t412 * t625 / 0.2e1) * t545 - 0.6e1 * ((-0.3e1 * t498 + (-t546 + t560) * t487 + t559 * t491 + t586) * t408 - 0.2e1 * (-0.5e1 / 0.3e1 * t498 + (-t491 + t558) * t487 + t493 * (t442 + t556)) * t625) * t609 - 0.6e1 * t532 * t582 - (t484 + (0.21e2 * t491 + t399) * t498 + (t389 + t474 + 0.35e2 * t489 + 0.2e1 * t619) * t487 + (t467 + (t465 + t475 - 0.5e1 * t487) * t491 + t493 * (-t482 + t589)) * t413) * t408 + (0.7e1 * t484 + (t469 + t399) * t466 + (t389 + 0.21e2 * t489 + 0.9e1 * t492 + 0.6e1 * t619) * t487 + t620) * t625) * t360 + (0.16e2 * (t573 + t545 + (-0.8e1 * t489 + 0.12e2 * t607) * t421 + (-0.12e2 * pkin(7) * t494 + t502 * t637) * t455 - 0.6e1 * t607 + t588) * t618 + 0.24e2 * (t599 * t573 + 0.14e2 * (-0.32e2 / 0.21e2 * (t493 + t487 / 0.4e1 + t491 / 0.4e1 - t482 / 0.8e1) * t544 + 0.5e1 / 0.42e2 * t498 + (0.16e2 / 0.21e2 * t491 + t596) * t487 + t489 / 0.7e1 + t596 * t491 + t492 - 0.3e1 / 0.7e1 * t608 + t481 / 0.42e2) * t609 + t404 * t530 - t587 * t498 + (t401 - 0.10e2 / 0.3e1 * t489 + 0.2e1 * t492 - t608) * t487 + t377 * t612 + ((-0.2e1 / 0.3e1 * t544 + t431 + t597) * t567 + (-0.8e1 / 0.3e1 * (t598 + t634) * t544 + 0.5e1 / 0.18e2 * t498 + (0.4e1 / 0.3e1 * t493 + t444 + t432) * t487 + t492 + 0.2e1 / 0.3e1 * t607 - 0.2e1 / 0.3e1 * t608 - t489 / 0.3e1 + t481 / 0.18e2) * t578) * pkin(7)) * t616 + 0.16e2 * (-0.6e1 * t493 * t487 + t585) * t610 + 0.32e2 * (t390 * t613 + t393 * t412) * t576 + 0.24e2 * (t403 * t530 - t484 + (-t405 + t590) * t498 + (t401 + t498 / 0.6e1 - t481 / 0.6e1 + t586) * t487 + t377 * t493) * t609 + 0.8e1 * t529 * t582 - 0.8e1 * ((t469 + t600) * t498 + (t467 + (t465 + 0.10e2 * t493) * t491 + t536) * t487 + t603) * t544 + t498 ^ 2 + (t464 + t476 + 0.28e2 * t491) * t484 + (t410 * t491 + 0.70e2 * t489 + t535) * t498 + (t410 * t489 + t535 * t470 + t592 * t478 - 0.6e1 * t492 * t482 + 0.28e2 * t494 ^ 2 + 0.4e1 * t502 ^ 2) * t487 + t394 * t620) * t385 + (((0.4e1 * t622 + (t408 + t581) * t398 + t415 * t408 + (t433 + t553) * t581) * t575 - 0.6e1 * (-0.4e1 * ((0.5e1 / 0.6e1 * t487 + t446 + t430) * t454 * t480 + pkin(1) * t561) * t609 + (-0.8e1 * t541 + ((t432 + t439 + t594) * t408 - (0.8e1 / 0.3e1 * t487 + t556) * t625) * t579) * pkin(7) + t532) * t407) * t360 + (0.32e2 * (t547 + (-0.4e1 * t494 * t570 + t630 + (t631 + t464 + t475) * t491) * t421 + (-t491 + t527 + t634) * t563 + t390 * t612 + t415 * t393) * t617 + 0.8e1 * (t388 + (t393 * t613 + t380) * t568 + (t530 + (t470 + t593) * t487 + t520) * t562 + t529) * t407) * t385) * t396) / ((-0.4e1 * (-t587 * t408 + 0.2e1 * t622 + (0.2e1 * pkin(7) * t569 + t452 * (t487 + t629)) * pkin(1)) * t616 + 0.8e1 * pkin(7) * t541 + ((pkin(3) * t630 + 0.8e1 * t491 * t497) * t454 + 0.4e1 * t494 * t561) * t421 - 0.4e1 * t531 * t582 - (t487 * t595 + t468 + t585 + 0.6e1 * t607) * t408 + (t466 + (t459 + 0.6e1 * t493) * t487 + t406) * t625) * t360 + (0.12e2 * (0.6e1 * (-0.4e1 / 0.9e1 * t544 + 0.4e1 / 0.9e1 * t487 - t482 / 0.9e1 + t598) * t609 + t404 * t390 + t391 * t612 + (t606 + (t430 + t439 + t527) * t409) * t584) * t616 + t388 + (t391 * t613 + t380) * t568 + t538 * t562 + ((t405 + t555) * t487 + t602) * t540 + t484 + (t458 + t552) * t498 + (t552 * t470 + t591 * t478 + t457 + t474) * t487 + t406 * t394) * t385 + ((t575 * t625 + (-0.2e1 * t421 * t571 + (t408 - t625) * t398 + t531) * t577) * t360 + (0.8e1 * (t398 + t572 + t415) * t617 + 0.6e1 * (t589 * t572 + (t390 + t391) * t563 + t538) * t407) * t385) * t396);
t335 = (t513 * t623 - t360 * t517 / 0.4e1) * t611;
t336 = (t360 * t513 + t517 * t623 / 0.4e1) * t611;
t381 = -t451 * t452 - t614;
t382 = -t451 * t455 + t615;
t325 = atan2(t335 * t381 + t336 * t382, -t335 * t382 + t336 * t381);
t323 = sin(t325);
t324 = cos(t325);
t564 = t483 * t624;
t339 = atan2(t360 * t564, t564 * t623);
t337 = sin(t339);
t338 = cos(t339);
t514 = t633 * t515;
t512 = t514 / 0.2e1;
t516 = t517 * t624;
t511 = atan2(t516, t512);
t509 = sin(t511);
t510 = cos(t511);
t353 = -t452 * t510 - t455 * t509;
t354 = t452 * t509 - t455 * t510;
t327 = t337 * t354 + t338 * t353;
t543 = -t337 * t353 + t354 * t338;
t639 = t323 * t327 - t324 * t543;
t638 = t323 * t543 + t324 * t327;
t627 = -m(4) - m(10);
t628 = pkin(5) * m(6);
t605 = t354 * pkin(3) - t409;
t583 = m(3) + m(7) + m(9);
t448 = sin(pkin(8));
t449 = cos(pkin(8));
t378 = t448 * t455 - t449 * t452;
t379 = t448 * t452 + t449 * t455;
t356 = -t378 * t514 / 0.2e1 + t379 * t516;
t357 = t378 * t516 + t379 * t512;
t453 = sin(pkin(9));
t456 = cos(pkin(9));
t347 = -t356 * t456 + t357 * t453;
t348 = t356 * t453 + t357 * t456;
t344 = atan2(t347, t348);
t340 = sin(t344);
t342 = cos(t344);
t526 = t340 * t354 + t342 * t353;
t525 = t340 * t353 - t342 * t354;
t345 = atan2(t347, -t348);
t341 = sin(t345);
t343 = cos(t345);
t523 = t341 * mrSges(10,1) + t343 * mrSges(10,2) - mrSges(4,2) - mrSges(7,2);
t519 = -m(10) * pkin(6) + t343 * mrSges(10,1) - t341 * mrSges(10,2) - mrSges(4,1) - mrSges(7,1);
t372 = atan2(t378, -t379);
t371 = atan2(t378, t379);
t370 = cos(t372);
t369 = cos(t371);
t368 = sin(t372);
t367 = sin(t371);
t364 = -t367 * t452 + t369 * t455;
t363 = t367 * t455 + t369 * t452;
t362 = -t368 * t448 + t370 * t449;
t361 = t368 * t449 + t370 * t448;
t349 = t353 * pkin(3);
t1 = (-mrSges(11,3) - mrSges(10,3) - mrSges(9,3) - mrSges(8,3) - mrSges(7,3) - mrSges(6,3) - mrSges(4,3) - mrSges(3,3) - mrSges(2,3) - mrSges(1,3) - mrSges(5,3)) * g(3) + (mrSges(8,1) * t454 - mrSges(8,2) * t451 - m(11) * (pkin(4) * t327 + t349) - m(5) * t349 + t638 * mrSges(11,1) - t639 * mrSges(11,2) - t327 * mrSges(5,1) - mrSges(3,2) * t354 - mrSges(9,1) * t363 - mrSges(9,2) * t364 - mrSges(6,1) * t361 - mrSges(6,2) * t362 - t448 * t628 + mrSges(2,2) * t455 - t543 * mrSges(5,2) - mrSges(1,2) - t519 * t526 + t523 * t525 + (mrSges(2,1) + (m(11) + m(5) + t583 - t627) * pkin(1)) * t452 + (t627 * pkin(2) - mrSges(3,1)) * t353) * g(2) + (-mrSges(6,1) * t362 + mrSges(6,2) * t361 - mrSges(8,1) * t451 - mrSges(8,2) * t454 + t327 * mrSges(5,2) - mrSges(9,1) * t364 + mrSges(9,2) * t363 - t449 * t628 - mrSges(3,1) * t354 + mrSges(3,2) * t353 - mrSges(2,2) * t452 - t639 * mrSges(11,1) - t638 * mrSges(11,2) - t543 * mrSges(5,1) - m(8) * pkin(7) - m(11) * (pkin(4) * t543 + t605) - m(5) * t605 - mrSges(1,1) + t519 * t525 + t523 * t526 + (pkin(1) * t583 + mrSges(2,1)) * t455 + t627 * (t354 * pkin(2) - t409)) * g(1);
U = t1;
