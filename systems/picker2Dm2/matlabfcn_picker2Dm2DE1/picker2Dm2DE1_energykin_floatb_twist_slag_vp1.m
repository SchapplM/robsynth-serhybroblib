% Calculate kinetic energy for
% picker2Dm2DE1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [2x1]
%   Generalized joint coordinates (joint angles)
% qJD [2x1]
%   Generalized joint velocities
% V_base [6x1]
%   Base Velocity (twist: stacked translational and angular velocity) in base frame
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[L1,L2,L3,L4,L5,L6,e,phi05,phi1]';
% m [11x1]
%   mass of all robot links (including the base)
% rSges [11x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [11x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% T [1x1]
%   kinetic energy

% Quelle: HybrDyn-Toolbox
% Datum: 2020-05-09 18:54
% Revision: 73758128893bc0a8beabae04bd7e71472107ac81 (2020-05-07)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function T = picker2Dm2DE1_energykin_floatb_twist_slag_vp1(qJ, qJD, V_base, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(2,1),zeros(2,1),zeros(6,1),zeros(9,1),zeros(11,1),zeros(11,3),zeros(11,6)}
assert(isreal(qJ) && all(size(qJ) == [2 1]), ...
  'picker2Dm2DE1_energykin_floatb_twist_slag_vp1: qJ has to be [2x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [2 1]), ...
  'picker2Dm2DE1_energykin_floatb_twist_slag_vp1: qJD has to be [2x1] (double)');
assert(isreal(V_base) && all(size(V_base) == [6 1]), ...
  'picker2Dm2DE1_energykin_floatb_twist_slag_vp1: V_base has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'picker2Dm2DE1_energykin_floatb_twist_slag_vp1: pkin has to be [9x1] (double)');
assert(isreal(m) && all(size(m) == [11 1]), ...
  'picker2Dm2DE1_energykin_floatb_twist_slag_vp1: m has to be [11x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [11,3]), ...
  'picker2Dm2DE1_energykin_floatb_twist_slag_vp1: rSges has to be [11x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [11 6]), ...
  'picker2Dm2DE1_energykin_floatb_twist_slag_vp1: Icges has to be [11x6] (double)'); 

%% Symbolic Calculation
% From energy_kinetic_floatb_twist_worldframe_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2020-05-09 14:28:37
% EndTime: 2020-05-09 14:30:00
% DurationCPUTime: 73.36s
% Computational Cost: add. (1134763->957), mult. (3429752->1447), div. (20228->26), fcn. (594248->31), ass. (0->629)
t1429 = Icges(4,4) + Icges(7,4);
t1056 = sin(pkin(9));
t1059 = cos(pkin(9));
t1378 = 0.1e1 / pkin(3);
t1347 = t1378 / 0.2e1;
t1098 = (pkin(1) ^ 2);
t1100 = (pkin(7) ^ 2);
t1013 = t1098 + t1100;
t1094 = (pkin(3) ^ 2);
t1200 = t1094 + t1013;
t1058 = cos(qJ(1));
t1054 = sin(qJ(2));
t1007 = pkin(3) * t1054;
t986 = t1007 + pkin(7);
t1319 = t1058 * t986;
t1253 = pkin(1) * t1319;
t1055 = sin(qJ(1));
t1057 = cos(qJ(2));
t1292 = t1055 * t1057;
t1237 = pkin(3) * t1292;
t1189 = pkin(1) * t1237;
t968 = -0.2e1 * t1189;
t1373 = 0.2e1 * t1054;
t1281 = pkin(7) * t1373;
t988 = pkin(3) * t1281;
t870 = t1200 + t968 + t988 + 0.2e1 * t1253;
t1376 = 0.1e1 / t870;
t1248 = t1376 * t1347;
t1051 = sin(pkin(8));
t1052 = cos(pkin(8));
t919 = t1051 * t1055 + t1052 * t1058;
t1183 = t919 * t1248;
t1348 = -t1378 / 0.2e1;
t1249 = t1376 * t1348;
t1384 = -t1051 * t1058 + t1052 * t1055;
t1185 = t1384 * t1249;
t1018 = t1054 ^ 2;
t1086 = -2 * t1100;
t1087 = 0.1e1 / t1347;
t1089 = (pkin(4) ^ 2);
t1096 = t1098 ^ 2;
t1379 = -0.4e1 * pkin(7);
t1262 = t1100 - t1089;
t993 = t1098 + t1262;
t1241 = pkin(3) * t993 * t1379;
t1312 = 0.4e1 * pkin(1);
t1022 = t1058 ^ 2;
t1266 = -t1094 + t1100;
t1301 = t1018 * t1094;
t921 = t1266 + t988 + 0.2e1 * t1301;
t1318 = t921 * t1022;
t933 = t988 + t993;
t897 = t968 + t933;
t1401 = 4 * t1098;
t1023 = t1094 * t1401;
t1285 = t1094 * t1100;
t991 = t1023 - 4 * t1285;
t823 = t991 * t1018 + t1054 * t1241 - t1096 - (t1100 - (t1087 + pkin(4)) * pkin(4)) * (t1100 + (t1087 - pkin(4)) * pkin(4)) + (t1086 + (2 * t1089) - (4 * t1094) - 0.4e1 * t1318) * t1098 + (t1237 * t933 - t1319 * t897) * t1312;
t1101 = sqrt(t823);
t1172 = -0.4e1 * t1189;
t1072 = 2 * t1094;
t1078 = 3 * t1098;
t981 = t1072 + t1078 + t1262;
t893 = t981 + t988 + t1172;
t1290 = t1057 * t1058;
t1236 = pkin(3) * t1290;
t903 = t1055 * t986 + t1236;
t967 = -pkin(1) + t1237;
t795 = -t893 * t1319 + t903 * t1101 + (t1281 * t967 + t1292 * t981) * pkin(3) + (-0.2e1 * t1318 + (0.2e1 * t1018 - 0.4e1) * t1094 - t993) * pkin(1);
t1008 = pkin(3) * t1057;
t1009 = pkin(1) * t1058;
t1260 = 0.2e1 * t1009;
t929 = t1072 + t933;
t848 = t1260 * t921 + t929 * t986;
t852 = t1058 * t929 + (0.4e1 * t1022 - 0.2e1) * t986 * pkin(1);
t901 = -t967 + t1319;
t797 = t1008 * t852 + t1055 * t848 + t1101 * t901;
t782 = t1183 * t797 - t1185 * t795;
t1242 = t1384 * t1347;
t1184 = t1376 * t1242;
t783 = t1183 * t795 - t1184 * t797;
t766 = t1056 * t783 - t1059 * t782;
t767 = t1056 * t782 + t1059 * t783;
t749 = atan2(t766, t767);
t743 = sin(t749);
t745 = cos(t749);
t1187 = t795 * t1248;
t1125 = atan2(t797 * t1248, t1187);
t1121 = sin(t1125);
t1122 = cos(t1125);
t772 = -t1055 * t1122 - t1058 * t1121;
t773 = t1055 * t1121 - t1058 * t1122;
t1157 = t743 * t772 - t745 * t773;
t718 = t743 * t773 + t745 * t772;
t750 = atan2(t766, -t767);
t744 = sin(t750);
t746 = cos(t750);
t679 = -t1157 * t744 + t718 * t746;
t1428 = Icges(10,4) * t679;
t1427 = Icges(4,1) + Icges(7,1);
t1426 = Icges(4,2) + Icges(7,2);
t1090 = 0.1e1 / pkin(4);
t1230 = t1090 * t1347;
t1010 = -30 * t1089 + 60 * t1100;
t1016 = t1018 ^ 2;
t1020 = t1022 ^ 2;
t1068 = -2 * t1089;
t1070 = -6 * t1089;
t1077 = 6 * t1098;
t1083 = 4 * t1100;
t1085 = 2 * t1100;
t1105 = pkin(3) * t1094;
t1091 = t1105 ^ 2;
t1099 = t1100 ^ 2;
t1102 = pkin(1) * t1098;
t1106 = t1094 ^ 2;
t1110 = pkin(7) * t1100;
t1088 = t1089 ^ 2;
t1268 = t1088 - t1106;
t1283 = t1100 * t1089;
t1135 = 6 * t1099 + t1268 - 6 * t1283;
t1021 = t1058 * t1022;
t1298 = t1021 * t1102;
t1250 = pkin(7) * t1298;
t1195 = 0.32e2 * t1250;
t1284 = t1098 * t1022;
t1017 = t1054 * t1018;
t1302 = t1017 * t1105;
t1006 = (t1013 ^ 2);
t1324 = t1006 * (-t1094 + t993);
t1354 = pkin(7) * t1058;
t1261 = pkin(7) * t1009;
t1227 = 0.6e1 * t1261;
t1229 = 0.12e2 * t1284;
t1038 = -0.3e1 / 0.2e1 * t1089;
t1060 = 0.15e2 * t1096;
t1067 = 18 * t1100;
t1080 = 3 * t1099;
t1278 = t1088 / 0.2e1 - t1106 / 0.2e1;
t1164 = -(3 * t1283) + t1080 + t1278;
t1084 = 3 * t1100;
t1274 = 15 * t1098 + t1084;
t1265 = t1096 + t1099;
t1315 = t1091 + t1013 * ((t1038 + t1085) * t1098 - 0.3e1 / 0.2e1 * t1283 + t1265 + t1278);
t1024 = 0.10e2 / 0.3e1 * t1098;
t1269 = t1085 - t1089;
t1133 = (t1269 * t1098) + t1088 / 0.6e1 + t1265 - t1283;
t1130 = 0.5e1 / 0.6e1 * t1106 + t1133;
t882 = (t1024 + t1269) * t1094 + t1130;
t824 = -0.6e1 * t882 * t1189 + t1315 + (t1060 + ((t1067 - 9 * t1089) * t1098) + t1164) * t1094 + (t1038 + t1274) * t1106;
t1198 = -0.4e1 * t1237;
t1036 = -t1089 / 0.2e1;
t975 = t1036 + t1200;
t1165 = t975 * t1198;
t1152 = pkin(1) * t1165;
t847 = t1152 + ((t1077 + t1269) * t1094) + t1130;
t1288 = (pkin(7) + pkin(3)) * (pkin(7) - pkin(3));
t1045 = -t1094 / 0.3e1;
t1003 = t1045 + t1100;
t923 = t1003 * t968;
t875 = t1288 * t975 + t923;
t1012 = -3 * t1094 + t1100;
t1209 = 0.8e1 * t1250;
t957 = t1012 * t1209;
t800 = t1227 * t847 + t1229 * t875 + t824 + t957;
t1403 = 0.8e1 * t800;
t1046 = -0.2e1 / 0.3e1 * t1094;
t1004 = t1046 + t1100;
t1005 = -t1098 / 0.3e1 + t1100;
t1014 = -t1098 + t1100;
t1196 = 0.16e2 * t1250;
t1300 = t1020 * t1096;
t1246 = 0.8e1 * t1300;
t1279 = 0.6e1 * t1354;
t1287 = (pkin(7) + pkin(1)) * (pkin(7) - pkin(1));
t1275 = 0.4e1 / 0.7e1 * t1100 - t1089 / 0.7e1;
t963 = t1100 + t1094 / 0.4e1 + t1098 / 0.4e1 - t1089 / 0.8e1;
t840 = -0.32e2 / 0.21e2 * t963 * t1189 + 0.5e1 / 0.42e2 * t1106 + (0.16e2 / 0.21e2 * t1098 + t1275) * t1094 + t1096 / 0.7e1 + t1275 * t1098 + t1099 - 0.3e1 / 0.7e1 * t1283 + t1088 / 0.42e2;
t1035 = -t1089 / 0.3e1;
t1037 = -0.2e1 / 0.3e1 * t1089;
t1041 = 0.4e1 / 0.3e1 * t1094;
t1047 = 0.4e1 / 0.3e1 * t1098;
t1277 = t1098 / 0.3e1 + t1100;
t1034 = -t1089 / 0.4e1;
t1387 = t1034 + t1094 / 0.2e1;
t965 = t1277 + t1387;
t842 = -0.8e1 / 0.3e1 * t965 * t1189 + 0.5e1 / 0.18e2 * t1106 + (t1047 + t1035) * t1094 + t1099 - t1096 / 0.3e1 + t1088 / 0.18e2 + (t1041 + 0.2e1 / 0.3e1 * t1098 + t1037) * t1100;
t906 = -t1106 / 0.6e1 + t1133;
t1049 = t1098 / 0.2e1;
t1276 = t1049 + t1100;
t910 = -0.2e1 / 0.3e1 * t1189 + t1034 + t1276;
t997 = (t1083 + t1089) * t1098;
t799 = t1004 * t1246 + t910 * t1196 + 0.14e2 * t840 * t1284 + (t1014 * t1106) + (-0.10e2 / 0.3e1 * t1096 + (2 * t1099) - t1283 + t997) * t1094 + t906 * t1287 + (t1005 * t1165 + t1279 * t842) * pkin(1);
t1015 = -3 * t1098 + t1100;
t1197 = -0.2e1 * t1237;
t1280 = 0.4e1 * t1354;
t1081 = 8 * t1100;
t1370 = 0.4e1 * t1096;
t898 = t1102 * t1198 + t1023 + t1370 + ((t1068 + t1081) * t1098);
t1149 = t1100 - t1189;
t904 = -t1098 + t1149 + t1387;
t826 = t1209 + t1015 * t975 + t1022 * t898 + (t1197 * t1287 + t1280 * t904) * pkin(1);
t1264 = t1099 - t1096;
t834 = t1003 * t1152 - t1091 + (-t1024 - t1262) * t1106 + (t997 + t1106 / 0.6e1 - t1088 / 0.6e1 + t1264) * t1094 + t906 * t1100;
t1069 = -5 * t1089;
t1075 = 0.7e1 * t1096;
t838 = (t1038 + t1084 + (7 * t1098)) * t1106 + (t1075 + ((t1069 + 10 * t1100) * t1098) + t1164) * t1094 + t1315;
t1282 = t1100 * t1098;
t992 = -0.12e2 * pkin(7) * t1102 + t1110 * t1312;
t999 = -0.8e1 * t1096 + (12 * t1282);
t855 = t1022 * t999 + t1058 * t992 + t1196 + t1246 + t1265 - (6 * t1282);
t877 = t1012 * t975 + t1288 * t968;
t1263 = t1099 + t1106;
t958 = 0.16e2 * (t1263 - 6 * t1285) * t1096;
t982 = -t1089 + t1200;
t987 = t1009 + pkin(7);
t774 = t958 * t1020 + t877 * t1195 + 0.24e2 * t834 * t1284 + (t1068 + t1083 + 28 * t1098) * t1091 + t982 * t1324 + (t1007 * t1403 + 0.32e2 * t1302 * t826) * t987 + (t1010 * t1096 + 0.24e2 * t799 * t1018 + (t1070 * t1099) + (t1077 * t1135) + (t1085 * t1268) + 0.28e2 * t1102 ^ 2 + 0.4e1 * t1110 ^ 2) * t1094 + 0.8e1 * (-t1237 * t838 + t1354 * t824) * pkin(1) + ((t1010 * t1098) + 0.16e2 * t1016 * t855 + 0.70e2 * t1096 + t1106 + t1135) * t1106;
t1303 = t1016 * t1106;
t989 = pkin(7) * t1260;
t912 = 0.4e1 / 0.3e1 * t1284 + t989 + t1005;
t1179 = -0.24e2 * t912 * t1303;
t1220 = t987 * t1302;
t1188 = -0.8e1 * t1220;
t1232 = -0.12e2 * t1301;
t1245 = -0.6e1 * t1284;
t1322 = t1054 * t987;
t1299 = t1021 * t1096;
t1212 = t1055 * t1299;
t1243 = 0.4e1 * t1284;
t1352 = -t1055 / 0.2e1;
t1350 = pkin(1) * t1055;
t1033 = -t1089 / 0.6e1;
t961 = 0.7e1 / 0.6e1 * t1094 + t1033 + t1276;
t1043 = t1094 / 0.3e1;
t1205 = t1033 + t1043 + t1100;
t964 = t1047 + t1205;
t871 = t1008 * t964 - t1350 * t961;
t1206 = t1089 / 0.3e1 + t1043 + t1085;
t878 = (t1094 * t1014) - 0.5e1 / 0.3e1 * t1096 + t1206 * t1098 + t1100 * (t1035 + t1003);
t1025 = -0.20e2 / 0.3e1 * t1098;
t1042 = 0.2e1 / 0.3e1 * t1094;
t1207 = 0.2e1 / 0.3e1 * t1089 + t1042 + t1083;
t1208 = 0.4e1 / 0.3e1 * t1089 + t1041 + t1086;
t880 = -t1106 + (t1025 + t1207) * t1094 - 0.3e1 * t1096 + t1208 * t1098 + t1099;
t972 = t1098 + t1205;
t996 = t1072 + t1014;
t884 = t972 * t1008 - t996 * t1350 / 0.2e1;
t817 = t1212 * t1379 + t871 * t1243 + (-0.8e1 / 0.3e1 * t1300 + t878) * t1008 + (t1280 * t884 + t1352 * t880) * pkin(1);
t1234 = t1102 * t1008;
t1244 = -0.4e1 * t1284;
t1062 = 10 * t1098;
t1071 = 5 * t1106;
t1082 = 6 * t1100;
t1418 = -2 * t1094;
t1272 = t1068 + t1418;
t1201 = t1082 + t1272;
t1202 = t1037 + t1013;
t883 = t1071 + ((t1062 + t1201) * t1094) + (t1046 + t1202) * t1013;
t1321 = t1055 * t883;
t1380 = -0.8e1 * pkin(7);
t1076 = 0.5e1 * t1096;
t1273 = t1062 + t1085;
t863 = t1106 + (t1037 + t1046 + t1273) * t1094 + t1076 + (t1201 * t1098) + t1100 * (t1037 + t1004);
t851 = t863 * t1008;
t1204 = t1035 + t1013;
t969 = 0.8e1 / 0.3e1 * t1094 + t1204;
t1270 = t1078 + t1100;
t971 = t1035 + t1042 + t1270;
t876 = t1008 * t971 - t1350 * t969;
t1211 = t1055 * t1288;
t1258 = t1057 * t1087;
t976 = 0.5e1 / 0.6e1 * t1094 + t1049 + t1033;
t891 = pkin(1) * t1211 + t1258 * t976;
t820 = t1021 * t1234 * t1380 + t891 * t1244 + t851 + (t1280 * t876 - t1321) * pkin(1);
t835 = -pkin(1) * t1321 + t851;
t1402 = 0.10e2 / 0.3e1 * t1106 + (-t1098 + t1206) * t1418 + (t1045 + t1204) * t1086;
t881 = -(3 * t1106) + (t1025 + t1208) * t1094 + t1207 * t1098 + t1264;
t836 = t1008 * t881 + t1350 * t1402;
t1271 = t1069 - 5 * t1094;
t1386 = t1084 - t1089 - t1094;
t978 = t1386 * t1062;
t837 = t1091 + ((21 * t1098 + t1386) * t1106) + ((t1100 * t1272) + t1080 + 0.35e2 * t1096 + t978) * t1094 + (t1075 + ((t1081 + t1271) * t1098) + (t1100 * (-t1094 + t1262))) * t1013;
t1313 = 0.2e1 * pkin(1);
t1235 = t1098 * t1008;
t1134 = -t1055 * t1102 + t1235;
t935 = 0.4e1 * t1134;
t959 = t1008 + 0.2e1 * t1350;
t994 = t1094 + t1270;
t974 = t1036 + t994;
t839 = t1015 * t1008 + t1022 * t935 + (t1055 * t974 + t1354 * t959) * t1313;
t845 = 0.7e1 * t1091 + ((35 * t1098 + 15 * t1100 + t1271) * t1106) + (0.21e2 * t1096 + t978 + (9 * t1099) + ((t1070 - 6 * t1094) * t1100)) * t1094 + t1324;
t1233 = pkin(1) * t1012 / 0.2e1;
t962 = t1100 + 0.5e1 / 0.2e1 * t1094 + 0.3e1 / 0.2e1 * t1098 + t1036;
t886 = t1008 * t962 + t1055 * t1233;
t781 = t886 * t1196 + t839 * t1188 + t817 * t1232 + t836 * t1245 + (-0.6e1 * t820 * t1322 + (0.24e2 * t1003 * t1300 - t837) * t1057) * pkin(3) + (-0.6e1 * t835 * t1354 + (t845 + t1179) * t1055) * pkin(1);
t936 = t1007 + t987;
t762 = t1101 * t781 + t774 * t936;
t1231 = 0.12e2 * t1301;
t1311 = 0.6e1 * pkin(1);
t900 = -0.4e1 / 0.9e1 * t1189 + 0.4e1 / 0.9e1 * t1094 - t1089 / 0.9e1 + t1277;
t911 = t1033 + t1042 + t1149;
t970 = t1041 + t1204;
t825 = 0.4e1 * t1250 + 0.6e1 * t900 * t1284 + t970 * t1287 + (t1005 * t1197 + t1280 * t911) * pkin(1);
t1259 = 0.4e1 * t1009;
t1203 = t1037 + t1042 + t1085;
t1314 = t1106 + (t1042 + t1202) * t1013;
t844 = t970 * t1172 + t1314 + (t1077 + t1203) * t1094;
t905 = t968 + t970;
t990 = t1266 * t1401;
t827 = pkin(7) * t1259 * t905 + t1022 * t990 + t844;
t872 = t1288 * t970 + t923;
t874 = (t1024 + t1203) * t1094 + t1314;
t922 = t989 + t1243 + t1015;
t787 = t825 * t1231 + t957 + t872 * t1229 + t1091 + ((-t1089 + t1094 + t1274) * t1106) + (t1060 + ((t1067 + t1070 + 6 * t1094) * t1098) + t1080 + ((t1068 + t1072) * t1100)) * t1094 + t1006 * t982 + (0.6e1 * t1007 * t827 + 0.8e1 * t1302 * t922) * t987 + (-t1237 * t874 + t1354 * t844) * t1311;
t1247 = -0.4e1 * t1301;
t995 = (3 * t1094) + t1013;
t1320 = t1055 * t995;
t956 = t994 * t1008;
t960 = t1008 - t1350;
t843 = -0.2e1 * t1022 * t1235 + t956 + (0.2e1 * t1354 * t960 - t1320) * pkin(1);
t1011 = t1094 + 2 * t1098;
t1228 = pkin(7) * t1258;
t934 = 0.2e1 * t1134;
t846 = t1014 * t1008 + t1022 * t934 + (t1011 * t1055 + t1058 * t1228) * pkin(1);
t892 = -pkin(1) * t1320 + t956;
t1369 = 0.4e1 * t1102;
t1400 = 8 * t1098;
t985 = pkin(3) * t1370 + t1105 * t1400;
t894 = t1057 * t985 + t1211 * t1369;
t917 = (t1094 * t1273) + t1076 + t1263 + (6 * t1282);
t927 = t1071 + (t1062 + t1082) * t1094 + t1006;
t798 = t846 * t1247 + t1022 * t894 + (-0.4e1 * t843 * t1322 + (-t917 + t1209) * t1057) * pkin(3) + (-0.4e1 * t892 * t1354 + (t927 + t1188) * t1055) * pkin(1);
t780 = t1101 * t798 + t787 * t936;
t778 = 0.1e1 / t780;
t740 = atan2(t1101 * t1230, t762 * t778 * t1230);
t738 = sin(t740);
t739 = cos(t740);
t1192 = -t738 * t772 + t773 * t739;
t1294 = t1054 * t1055;
t1146 = t1290 + t1294;
t1293 = t1054 * t1058;
t1147 = -t1292 + t1293;
t1316 = t1376 / 0.4e1;
t1224 = t778 * t1316;
t1175 = t795 * t1224;
t1317 = -t1376 / 0.4e1;
t1219 = t1101 * t1317;
t1286 = t1090 / pkin(3) ^ 2;
t734 = (t1175 * t762 + t1219 * t797) * t1286;
t1174 = t797 * t1224;
t1218 = t1101 * t1316;
t735 = (t1174 * t762 + t1218 * t795) * t1286;
t721 = -t1146 * t734 - t1147 * t735;
t722 = -t1146 * t735 + t1147 * t734;
t710 = atan2(t721, t722);
t707 = sin(t710);
t708 = cos(t710);
t713 = t738 * t773 + t739 * t772;
t659 = t1192 * t707 + t708 * t713;
t1425 = Icges(11,4) * t659;
t1405 = -t1157 * t746 - t718 * t744;
t1424 = t1405 / 0.2e1;
t1406 = -t1192 * t708 + t707 * t713;
t1423 = t1406 / 0.2e1;
t1422 = Icges(10,4) * t1405;
t1421 = Icges(11,4) * t1406;
t1420 = t1429 * t1157;
t1419 = t1429 * t718;
t1416 = Icges(5,4) * t713;
t1414 = t1426 * t1157 - t1419;
t1413 = t1426 * t718 + t1420;
t1412 = -t1427 * t718 + t1420;
t1411 = t1427 * t1157 + t1419;
t1374 = 0.1e1 / t919 ^ 2;
t907 = t1384 * qJD(1);
t908 = t919 * qJD(1);
t1410 = (-t907 * t1384 * t1374 - t908 / t919) / (t1374 * t1384 ^ 2 + 0.1e1);
t1375 = 0.1e1 / t767 ^ 2;
t1382 = 0.1e1 / (t1375 * t766 ^ 2 + 0.1e1);
t1368 = pkin(1) * pkin(3);
t1190 = t1294 * t1368;
t1161 = qJD(2) * t1190;
t1210 = qJD(1) * t1290;
t1162 = t1210 * t1368;
t1407 = -t1162 + t1161;
t1329 = 0.2e1 * t1407;
t979 = qJD(2) * t1228;
t1226 = t979 + t1329;
t1309 = qJD(1) * t1055;
t1335 = ((qJD(2) * t1236 - t1309 * t986) * t1313 + t1226) / t870 ^ 2;
t1128 = -t1242 * t1335 - t1249 * t908;
t1186 = t1335 * t1348;
t1129 = t1186 * t919 + t1249 * t907;
t1307 = qJD(1) * t1058;
t1216 = t1055 * t1307;
t1171 = t921 * t1216;
t1304 = qJD(2) * t1094;
t1305 = qJD(2) * t1057;
t1167 = t1054 * t1057 * t1304;
t1159 = 0.4e1 * t1167;
t909 = t979 + t1159;
t1323 = t1022 * t909;
t1336 = ((0.8e1 * t1171 - 0.4e1 * t1323) * t1098 + (t1373 * t991 + t1241) * t1305 + (-0.4e1 * t1226 * t1319 + (0.8e1 * pkin(7) * t1057 ^ 2 * t1304 + 0.4e1 * qJD(1) * t897 * t986) * t1055 + 0.4e1 * (t933 * t1210 + (-t1290 * t897 - t1294 * t933) * qJD(2)) * pkin(3)) * pkin(1)) / t1101;
t1223 = t1336 / 0.2e1;
t1289 = t1058 * t1101;
t1291 = t1055 * t1101;
t1308 = qJD(1) * t1057;
t1310 = 0.2e1 * pkin(3);
t1325 = 0.2e1 * pkin(7);
t1349 = pkin(1) * t1022;
t775 = t901 * t1223 + (t1058 * t848 - t1291 * t986) * qJD(1) + (t1058 * t909 - t1309 * t921) * t1055 * t1313 + ((-t1289 + (-t929 - 0.8e1 * t1253) * t1055) * t1308 + ((-t852 + t1291) * t1054 + (t1289 + (t1325 * t986 + t929) * t1055 + (-pkin(1) + t1354 + 0.2e1 * t1349) * t1057 * t1310) * t1057) * qJD(2)) * pkin(3);
t1215 = qJD(2) * t1294;
t1132 = t1210 - t1215;
t1124 = 0.4e1 * t1132;
t1120 = t1124 * t1009;
t776 = t903 * t1223 + (-t979 * t1058 + (t1055 * t893 + t1289) * qJD(1)) * t986 + (t1159 + 0.4e1 * t1171 - 0.2e1 * t1323) * pkin(1) + ((t1058 * t981 - t1291) * t1308 + (-t1101 * t1147 - t1290 * t893 - t1294 * t981) * qJD(2) + (t1007 * t1132 + t1305 * t967) * t1325 + t986 * t1120) * pkin(3);
t736 = t1128 * t795 + t1129 * t797 + t1183 * t775 - t1185 * t776;
t737 = -t1128 * t797 + t1129 * t795 + t1183 * t776 - t1184 * t775;
t1409 = t1382 * (t1056 * t737 - t1059 * t736) / t767;
t1408 = -0.6e1 * t1162 + 0.6e1 * t1161;
t1404 = t780 ^ 2;
t1399 = t1157 / 0.2e1;
t1398 = t1192 / 0.2e1;
t1397 = Icges(4,5) + Icges(7,5);
t1396 = Icges(4,6) + Icges(7,6);
t1394 = Icges(5,4) * t1192;
t1388 = qJD(1) - qJD(2);
t1163 = qJD(1) * t1190;
t1221 = t987 * t1305;
t1182 = pkin(3) * t1221;
t1385 = t1163 - t1182;
t1377 = -0.4e1 * pkin(1);
t1372 = -0.8e1 * t1058;
t1371 = -0.2e1 * t1058;
t1363 = t773 / 0.2e1;
t869 = atan2(-t1384, -t919);
t860 = sin(t869);
t862 = cos(t869);
t831 = -t1051 * t860 + t1052 * t862;
t1362 = t831 / 0.2e1;
t868 = atan2(-t1384, t919);
t859 = sin(t868);
t861 = cos(t868);
t833 = -t1055 * t859 + t1058 * t861;
t1361 = t833 / 0.2e1;
t1360 = pkin(2) * t773;
t1359 = pkin(3) * t773;
t1358 = pkin(4) * t713;
t1357 = pkin(4) * t1192;
t1356 = pkin(6) * t718;
t1355 = pkin(6) * t1157;
t1353 = t1054 / 0.2e1;
t1351 = -t1058 / 0.2e1;
t1346 = Icges(3,4) * t772;
t830 = t1051 * t862 + t1052 * t860;
t1345 = Icges(6,4) * t830;
t832 = t1055 * t861 + t1058 * t859;
t1344 = Icges(9,4) * t832;
t1001 = V_base(6) + qJD(1);
t794 = 0.1e1 / t795 ^ 2;
t732 = t1001 + ((t1186 * t797 + t1248 * t775) / t1187 + (t1186 * t795 + t1248 * t776) * t797 * t794 / t1249) / (t794 * t797 ^ 2 + 0.1e1);
t1341 = t732 * t772;
t1340 = t732 * t773;
t1019 = t1055 ^ 2;
t1148 = t1018 * t1105 * t1221;
t1137 = -0.24e2 * t1148;
t1140 = t1005 * t1161;
t1141 = t1005 * t1162;
t1297 = t1022 * t1102;
t1251 = pkin(7) * t1297;
t1160 = t1251 * t1309;
t1144 = -0.24e2 * t1160;
t1166 = t1098 * t1216;
t1153 = -0.24e2 * t1166;
t1306 = qJD(2) * t1054;
t1238 = pkin(3) * t1306;
t1154 = t1238 * t1298;
t1217 = qJD(1) * t1302;
t1178 = pkin(1) * t1217;
t1156 = t1055 * t1178;
t1169 = t1288 * t1307;
t1240 = pkin(1) * t1309;
t1199 = pkin(7) * t1240;
t1173 = -0.6e1 * t1199;
t1180 = -0.2e1 * t1216;
t1239 = pkin(1) * t1307;
t1181 = t995 * t1239;
t1191 = t1284 * t1368;
t1214 = qJD(2) * t1293;
t1252 = pkin(3) * t1322;
t1330 = 0.4e1 * t1407 * t970;
t1126 = t1132 * pkin(3);
t1119 = pkin(1) * t1003 * t1126 * t1284;
t1331 = t1012 * t1144 - 0.24e2 * t1119;
t879 = t1098 * t1126 * t1280;
t928 = pkin(3) * t1305 - t1240;
t980 = -0.2e1 * t1199;
t1339 = ((t987 * t1178 * t1372 + t1019 * t1217 * t1400 + t1137 * t1350 + (0.2e1 * (-t1098 * t1238 - t1102 * t1307) * t1022 + t934 * t1180 - t1014 * t1238 + (t1011 * t1307 + (-qJD(1) * t1292 - t1214) * pkin(7) * t1310) * pkin(1)) * t1247 - 0.8e1 * t846 * t1167 - 0.4e1 * (-t1181 + (0.4e1 * t1057 * t1166 + (-t994 + 0.2e1 * t1284) * t1306) * pkin(3) + ((-t1238 - t1239) * t1009 - t960 * t1240) * t1325) * t1252 + t1154 * t1380 + t1144 * t1008 + (t1169 * t1369 - t985 * t1306) * t1022 + t894 * t1180 - 0.4e1 * (-t1238 * t994 - t1181) * t1261 + 0.4e1 * t892 * t1199 + t917 * t1238 + t927 * t1239 + 0.4e1 * t1385 * t843) * t1101 + t798 * t1223 + (0.8e1 * (t980 - 0.8e1 * t1166) * t1220 + (-0.12e2 * t1160 + 0.6e1 * (-0.4e1 / 0.9e1 * t1210 + 0.4e1 / 0.9e1 * t1215) * t1191 - 0.12e2 * t900 * t1166 - t879 - 0.4e1 * t911 * t1199 - 0.2e1 * t1141 + 0.2e1 * t1140) * t1231 + 0.24e2 * t825 * t1167 + 0.6e1 * (t990 * t1180 + (t1058 * t1329 - t1309 * t905) * pkin(7) * t1312 + t1330) * t1252 + t872 * t1153 + t1330 * t1227 + t844 * t1173 + t1331 + (-0.8e1 * t1156 + 0.24e2 * t1148) * t922 + t1408 * t874 - 0.6e1 * t1385 * t827) * t936 + t787 * t928) / t1404;
t1337 = 0.1e1 / t762 ^ 2 * t1404;
t1332 = t1408 * t882;
t1328 = Icges(2,4) * t1055;
t1327 = Icges(2,4) * t1058;
t1326 = Icges(8,4) * t1057;
t1257 = t1001 * t1350 + V_base(1);
t1256 = V_base(5) * t1009 + V_base(3);
t1254 = pkin(5) * V_base(6);
t1225 = t772 * V_base(4);
t1222 = -t1335 / 0.4e1;
t1213 = t1055 * t1303;
t1194 = pkin(3) * t1225 + t1256;
t1193 = pkin(2) * t1225 + t1256;
t1177 = pkin(3) * t1214;
t1176 = t1317 * t1339;
t1170 = qJD(1) * t1212;
t1168 = t1017 * t1106 * t1305;
t1158 = -t1001 * t1009 + V_base(2);
t1155 = t1238 * t1300;
t1145 = -0.48e2 * t1160;
t1143 = -pkin(2) * t1341 + t1257;
t1142 = -pkin(3) * t1341 + t1257;
t1139 = pkin(3) * t1340 + t1158;
t1138 = pkin(2) * t1340 + t1158;
t1136 = t732 + t1409;
t1123 = t1132 * t1313;
t1127 = -t1238 * t863 - t1239 * t883;
t723 = (t1179 * t1239 - 0.24e2 * pkin(1) * (-0.8e1 / 0.3e1 * t1166 + t980) * t1213 - 0.96e2 * t912 * t1168 * t1350 + ((-t1015 + t1244) * t1238 + 0.2e1 * (pkin(1) * t974 - t1055 * t935 - 0.2e1 * t1297) * t1307 + (-0.2e1 * t1177 + (-0.2e1 * t1055 * t959 + 0.4e1 * t1349) * qJD(1)) * pkin(1) * pkin(7)) * t1188 + (0.8e1 / 0.3e1 * t1155 + (-t1238 * t964 - t1239 * t961) * t1243 - t878 * t1238 - t880 * t1239 / 0.2e1 + (0.32e2 / 0.3e1 * t1299 * t1008 + t1098 * t871 * t1372) * t1309 + (t972 * t1177 * t1377 + ((0.12e2 * t1019 * t1022 - 0.4e1 * t1020) * t1096 + (-0.4e1 * t1055 * t884 - 0.2e1 * t1349 * t996) * pkin(1)) * qJD(1)) * pkin(7)) * t1232 - 0.24e2 * t817 * t1167 - 0.6e1 * ((-0.4e1 * (pkin(1) * t1169 - 0.2e1 * t1238 * t976) * t1022 + 0.8e1 * t891 * t1216) * t1098 + (0.8e1 * t1154 + (-t1238 * t971 - t1239 * t969) * t1259 + (0.24e2 * t1022 * t1234 + t1377 * t876) * t1309) * pkin(7) + t1127) * t1252 + (t1233 * t1307 - t1238 * t962) * t1196 + t886 * t1145 + (-t1238 * t881 + t1239 * t1402) * t1245 + 0.12e2 * t836 * t1166 - 0.6e1 * t1127 * t1261 + 0.6e1 * t835 * t1199 + t837 * t1238 + t845 * t1239 + (0.8e1 * t1156 + t1137) * t839 + 0.6e1 * t1385 * t820 + (-0.96e2 * t1008 * t1170 - 0.24e2 * t1155) * t1003) * t1101 + t781 * t1223 + (0.16e2 * (t1371 * t999 - 0.48e2 * t1251 - 0.32e2 * t1299 - t992) * qJD(1) * t1213 + 0.64e2 * t855 * t1168 + 0.32e2 * (-t879 + (t898 * t1371 + (t1377 * t904 - 0.24e2 * t1297) * pkin(7)) * t1309 + (-t1123 * t1287 - t1124 * t1297) * pkin(3)) * t1220 + 0.24e2 * (-0.32e2 * t1004 * t1170 + (-0.2e1 / 0.3e1 * t1210 + 0.2e1 / 0.3e1 * t1215) * t1196 * t1368 + t910 * t1145 - 0.28e2 * t840 * t1166 + (-0.8e1 / 0.3e1 * t1210 + 0.8e1 / 0.3e1 * t1215) * t965 * pkin(3) * t1098 * t1279 + t842 * t1173 + 0.4e1 * (-t1141 + t1140) * t975 - 0.64e2 / 0.3e1 * t1132 * t963 * t1191) * t1301 + 0.48e2 * t799 * t1167 - 0.8e1 * t800 * t1163 + 0.8e1 * (t875 * t1153 + (-pkin(3) * t1120 * t975 - t1309 * t847) * pkin(7) * t1311 + t1331 + t1332) * t1252 + t1182 * t1403 - 0.4e1 * t958 * t1021 * t1309 - pkin(3) * t1123 * t1195 * t1288 - 0.96e2 * t877 * t1160 - 0.96e2 * t975 * t1119 - 0.48e2 * t834 * t1166 + 0.8e1 * t1332 * t1261 - 0.8e1 * t824 * t1199 + 0.8e1 * t1407 * t838 + (-0.32e2 * t1156 + 0.96e2 * t1148) * t826) * t936 + t774 * t928;
t674 = t732 + (0.1e1 / t762 * t780 * t1223 + (t1339 * t1348 * t762 + t1347 * t723 * t778) * t1090 * pkin(4) * t1101 * t1337 / t1348) / (t1337 * t823 + 0.1e1);
t1131 = t1101 * t1335 / 0.4e1 - t1376 * t1336 / 0.8e1;
t1002 = Icges(8,4) * t1054;
t1000 = V_base(6) + qJD(2);
t955 = -rSges(2,1) * t1058 + rSges(2,2) * t1055;
t954 = -rSges(8,1) * t1057 + rSges(8,2) * t1054;
t953 = -rSges(2,1) * t1055 - rSges(2,2) * t1058;
t952 = rSges(8,1) * t1054 + rSges(8,2) * t1057;
t948 = -Icges(2,1) * t1058 + t1328;
t947 = -Icges(2,1) * t1055 - t1327;
t946 = -Icges(8,1) * t1057 + t1002;
t945 = Icges(8,1) * t1054 + t1326;
t944 = Icges(2,2) * t1055 - t1327;
t943 = -Icges(2,2) * t1058 - t1328;
t942 = Icges(8,2) * t1054 - t1326;
t941 = Icges(8,2) * t1057 + t1002;
t932 = -rSges(1,1) * V_base(5) + rSges(1,2) * V_base(4) + V_base(3);
t931 = rSges(1,1) * V_base(6) - rSges(1,3) * V_base(4) + V_base(2);
t930 = -rSges(1,2) * V_base(6) + rSges(1,3) * V_base(5) + V_base(1);
t889 = V_base(5) * rSges(2,3) - t1001 * t953 + V_base(1);
t888 = V_base(5) * rSges(8,3) - t1000 * t954 + V_base(1);
t887 = -V_base(4) * rSges(2,3) + t1001 * t955 + V_base(2);
t873 = -V_base(4) * rSges(8,3) + V_base(6) * pkin(7) + t1000 * t952 + V_base(2);
t867 = t953 * V_base(4) - t955 * V_base(5) + V_base(3);
t858 = t1388 * t1146;
t857 = t1388 * t1147;
t854 = t954 * V_base(4) + V_base(3) + (-pkin(7) - t952) * V_base(5);
t829 = Icges(9,4) * t833;
t828 = Icges(6,4) * t831;
t819 = V_base(6) - t1410;
t818 = t1001 + t1410;
t816 = rSges(9,1) * t833 - rSges(9,2) * t832;
t815 = rSges(9,1) * t832 + rSges(9,2) * t833;
t814 = Icges(9,1) * t833 - t1344;
t813 = Icges(9,1) * t832 + t829;
t812 = -Icges(9,2) * t832 + t829;
t811 = Icges(9,2) * t833 + t1344;
t808 = rSges(6,1) * t831 - rSges(6,2) * t830;
t807 = rSges(6,1) * t830 + rSges(6,2) * t831;
t806 = Icges(6,1) * t831 - t1345;
t805 = Icges(6,1) * t830 + t828;
t804 = -Icges(6,2) * t830 + t828;
t803 = Icges(6,2) * t831 + t1345;
t793 = V_base(5) * rSges(6,3) - t1051 * t1254 - t807 * t819 + V_base(1);
t792 = -V_base(4) * rSges(6,3) + t1052 * t1254 + t808 * t819 + V_base(2);
t791 = V_base(5) * rSges(9,3) - t815 * t818 + t1257;
t790 = -V_base(4) * rSges(9,3) + t816 * t818 + t1158;
t789 = -t816 * V_base(5) + (t815 - t1350) * V_base(4) + t1256;
t788 = t807 * V_base(4) - t808 * V_base(5) + V_base(3) + (t1051 * V_base(4) - t1052 * V_base(5)) * pkin(5);
t771 = Icges(3,4) * t773;
t758 = rSges(3,1) * t773 - rSges(3,2) * t772;
t757 = rSges(3,1) * t772 + rSges(3,2) * t773;
t756 = Icges(3,1) * t773 - t1346;
t755 = Icges(3,1) * t772 + t771;
t754 = -Icges(3,2) * t772 + t771;
t753 = Icges(3,2) * t773 + t1346;
t731 = -t758 * V_base(5) + (t757 - t1350) * V_base(4) + t1256;
t725 = V_base(5) * rSges(3,3) - t732 * t757 + t1257;
t724 = -V_base(4) * rSges(3,3) + t732 * t758 + t1158;
t720 = 0.1e1 / t722 ^ 2;
t706 = rSges(4,1) * t1157 + rSges(4,2) * t718;
t705 = rSges(7,1) * t1157 + rSges(7,2) * t718;
t704 = -rSges(4,1) * t718 + rSges(4,2) * t1157;
t703 = -rSges(7,1) * t718 + rSges(7,2) * t1157;
t690 = rSges(5,1) * t1192 - rSges(5,2) * t713;
t689 = rSges(5,1) * t713 + rSges(5,2) * t1192;
t688 = Icges(5,1) * t1192 - t1416;
t687 = Icges(5,1) * t713 + t1394;
t686 = -Icges(5,2) * t713 + t1394;
t685 = Icges(5,2) * t1192 + t1416;
t677 = (t776 * t1218 + t723 * t1174 - t1131 * t795 + (t797 * t1176 + (t1222 * t797 + t1316 * t775) * t778) * t762) * t1286;
t676 = (t723 * t1175 + t775 * t1219 + t1131 * t797 + (t795 * t1176 + (t1222 * t795 + t1316 * t776) * t778) * t762) * t1286;
t675 = -(t1056 * t736 + t1059 * t737) * t766 * t1375 * t1382 + t1136;
t673 = -t705 * V_base(5) + (t703 - t1350) * V_base(4) + t1256;
t672 = (-t706 - t1360) * V_base(5) + (t704 - t1350) * V_base(4) + t1193;
t671 = (-t690 - t1359) * V_base(5) + (t689 - t1350) * V_base(4) + t1194;
t670 = rSges(10,1) * t1405 - rSges(10,2) * t679;
t669 = rSges(10,1) * t679 + rSges(10,2) * t1405;
t668 = Icges(10,1) * t1405 - t1428;
t667 = Icges(10,1) * t679 + t1422;
t666 = -Icges(10,2) * t679 + t1422;
t665 = Icges(10,2) * t1405 + t1428;
t662 = V_base(5) * rSges(7,3) - t675 * t703 + t1257;
t661 = -V_base(4) * rSges(7,3) + t675 * t705 + t1158;
t656 = V_base(5) * rSges(4,3) - t675 * t704 + t1143;
t655 = -V_base(4) * rSges(4,3) + t675 * t706 + t1138;
t654 = t1136 - t1409;
t653 = V_base(5) * rSges(5,3) - t674 * t689 + t1142;
t652 = -V_base(4) * rSges(5,3) + t674 * t690 + t1139;
t651 = rSges(11,1) * t1406 + rSges(11,2) * t659;
t650 = -rSges(11,1) * t659 + rSges(11,2) * t1406;
t649 = Icges(11,1) * t1406 + t1425;
t648 = -Icges(11,1) * t659 + t1421;
t647 = Icges(11,2) * t659 + t1421;
t646 = Icges(11,2) * t1406 - t1425;
t643 = (-t1355 - t670 - t1360) * V_base(5) + (-t1350 + t669 - t1356) * V_base(4) + t1193;
t642 = V_base(5) * rSges(10,3) + t1356 * t675 - t654 * t669 + t1143;
t641 = -V_base(4) * rSges(10,3) + t1355 * t675 + t654 * t670 + t1138;
t640 = ((-t1146 * t676 - t1147 * t677 - t734 * t857 + t735 * t858) / t722 - (-t1146 * t677 + t1147 * t676 - t734 * t858 - t735 * t857) * t721 * t720) / (t720 * t721 ^ 2 + 0.1e1) + t674;
t639 = (-t1357 - t651 - t1359) * V_base(5) + (-t1350 + t650 + t1358) * V_base(4) + t1194;
t638 = V_base(5) * rSges(11,3) - t1358 * t674 - t640 * t650 + t1142;
t637 = -V_base(4) * rSges(11,3) + t1357 * t674 + t640 * t651 + t1139;
t1 = Icges(6,3) * t819 ^ 2 / 0.2e1 + Icges(9,3) * t818 ^ 2 / 0.2e1 + m(3) * (t724 ^ 2 + t725 ^ 2 + t731 ^ 2) / 0.2e1 + m(9) * (t789 ^ 2 + t790 ^ 2 + t791 ^ 2) / 0.2e1 + m(6) * (t788 ^ 2 + t792 ^ 2 + t793 ^ 2) / 0.2e1 + Icges(3,3) * t732 ^ 2 / 0.2e1 + m(4) * (t655 ^ 2 + t656 ^ 2 + t672 ^ 2) / 0.2e1 + Icges(1,3) * V_base(6) ^ 2 / 0.2e1 + m(1) * (t930 ^ 2 + t931 ^ 2 + t932 ^ 2) / 0.2e1 + m(5) * (t652 ^ 2 + t653 ^ 2 + t671 ^ 2) / 0.2e1 + m(8) * (t854 ^ 2 + t873 ^ 2 + t888 ^ 2) / 0.2e1 + m(2) * (t867 ^ 2 + t887 ^ 2 + t889 ^ 2) / 0.2e1 + m(11) * (t637 ^ 2 + t638 ^ 2 + t639 ^ 2) / 0.2e1 + Icges(2,3) * t1001 ^ 2 / 0.2e1 + Icges(5,3) * t674 ^ 2 / 0.2e1 + Icges(8,3) * t1000 ^ 2 / 0.2e1 + m(10) * (t641 ^ 2 + t642 ^ 2 + t643 ^ 2) / 0.2e1 + Icges(10,3) * t654 ^ 2 / 0.2e1 + Icges(11,3) * t640 ^ 2 / 0.2e1 + m(7) * (t661 ^ 2 + t662 ^ 2 + t673 ^ 2) / 0.2e1 + (Icges(1,6) * V_base(6) + (-Icges(8,5) * t1057 + Icges(8,6) * t1054) * t1000 + (-Icges(2,5) * t1055 - Icges(2,6) * t1058) * t1001 + (-Icges(11,5) * t659 + Icges(11,6) * t1406) * t640 + (Icges(10,5) * t679 + Icges(10,6) * t1405) * t654 + (Icges(5,5) * t713 + Icges(5,6) * t1192) * t674 + (Icges(3,5) * t772 + Icges(3,6) * t773) * t732 + (Icges(6,5) * t830 + Icges(6,6) * t831) * t819 + (Icges(9,5) * t832 + Icges(9,6) * t833) * t818 + (t803 * t1362 + t805 * t830 / 0.2e1 + t942 * t1353 - t1057 * t946 / 0.2e1 + t665 * t1424 + t667 * t679 / 0.2e1 + t685 * t1398 + t687 * t713 / 0.2e1 + t947 * t1352 + t943 * t1351 + Icges(1,2) / 0.2e1 + t753 * t1363 + t755 * t772 / 0.2e1 + t646 * t1423 - t648 * t659 / 0.2e1 + t811 * t1361 + t813 * t832 / 0.2e1 + t1414 * t1399 - t1412 * t718 / 0.2e1) * V_base(5)) * V_base(5) + ((Icges(4,3) / 0.2e1 + Icges(7,3) / 0.2e1) * t675 + (t1157 * t1396 - t1397 * t718) * V_base(5)) * t675 + ((Icges(3,5) * t773 - Icges(3,6) * t772) * t732 + (Icges(6,5) * t831 - Icges(6,6) * t830) * t819 + (Icges(9,5) * t833 - Icges(9,6) * t832) * t818 + (Icges(8,5) * t1054 + Icges(8,6) * t1057) * t1000 + (-Icges(2,5) * t1058 + Icges(2,6) * t1055) * t1001 + (Icges(11,5) * t1406 + Icges(11,6) * t659) * t640 + (Icges(10,5) * t1405 - Icges(10,6) * t679) * t654 + (Icges(5,5) * t1192 - Icges(5,6) * t713) * t674 + Icges(1,4) * V_base(5) + Icges(1,5) * V_base(6) + (t1157 * t1397 + t1396 * t718) * t675 + ((t812 + t813) * t833 + (t814 - t811) * t832 + (t804 + t805) * t831 + (t806 - t803) * t830 + (t755 + t754) * t773 + (-t753 + t756) * t772 + (t686 + t687) * t1192 + (-t944 - t947) * t1058 + (t942 - t945) * t1057 + (-t948 + t943) * t1055 + (t946 + t941) * t1054 + (t1412 + t1413) * t1157 + (t1414 - t1411) * t718 + (-t685 + t688) * t713 + (t647 + t648) * t1406 + (t666 + t667) * t1405 + (-t665 + t668) * t679 + (t646 - t649) * t659) * V_base(5) / 0.2e1 + (-t804 * t830 / 0.2e1 + t806 * t1362 + t945 * t1353 + t1057 * t941 / 0.2e1 - t686 * t713 / 0.2e1 + t688 * t1398 + t1055 * t944 / 0.2e1 + t948 * t1351 + Icges(1,1) / 0.2e1 - t666 * t679 / 0.2e1 + t668 * t1424 - t754 * t772 / 0.2e1 + t756 * t1363 + t647 * t659 / 0.2e1 + t649 * t1423 - t812 * t832 / 0.2e1 + t814 * t1361 + t1413 * t718 / 0.2e1 + t1411 * t1399) * V_base(4)) * V_base(4);
T = t1;
