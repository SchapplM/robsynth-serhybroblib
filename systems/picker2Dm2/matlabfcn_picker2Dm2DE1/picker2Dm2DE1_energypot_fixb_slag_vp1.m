% Calculate potential energy for
% picker2Dm2DE1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [2x1]
%   Generalized joint coordinates (joint angles)
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[L1,L2,L3,L4,L5,L6,e,phi05,phi1]';
% m [11x1]
%   mass of all robot links (including the base)
% rSges [11x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% 
% Output:
% U [1x1]
%   Potential energy

% Quelle: HybrDyn-Toolbox
% Datum: 2020-05-09 18:54
% Revision: 73758128893bc0a8beabae04bd7e71472107ac81 (2020-05-07)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function U = picker2Dm2DE1_energypot_fixb_slag_vp1(qJ, g, ...
  pkin, m, rSges)
%% Coder Information
%#codegen
%$cgargs {zeros(2,1),zeros(3,1),zeros(9,1),zeros(11,1),zeros(11,3)}
assert(isreal(qJ) && all(size(qJ) == [2 1]), ...
  'picker2Dm2DE1_energypot_fixb_slag_vp1: qJ has to be [2x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'picker2Dm2DE1_energypot_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'picker2Dm2DE1_energypot_fixb_slag_vp1: pkin has to be [9x1] (double)');
assert(isreal(m) && all(size(m) == [11 1]), ...
  'picker2Dm2DE1_energypot_fixb_slag_vp1: m has to be [11x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [11,3]), ...
  'picker2Dm2DE1_energypot_fixb_slag_vp1: rSges has to be [11x3] (double)');

%% Symbolic Calculation
% From energy_potential_fixb_worldframe_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2020-05-09 14:28:20
% EndTime: 2020-05-09 14:28:36
% DurationCPUTime: 8.90s
% Computational Cost: add. (79893->467), mult. (235156->602), div. (1676->6), fcn. (42008->31), ass. (0->244)
t449 = sin(qJ(1));
t451 = cos(qJ(2));
t610 = t449 * t451;
t566 = pkin(3) * t610;
t538 = pkin(1) * t566;
t387 = -0.2e1 * t538;
t626 = 0.1e1 / pkin(3);
t619 = t626 / 0.2e1;
t477 = 0.1e1 / t619;
t488 = pkin(1) ^ 2;
t486 = t488 ^ 2;
t490 = pkin(7) ^ 2;
t452 = cos(qJ(1));
t418 = t452 ^ 2;
t448 = sin(qJ(2));
t394 = pkin(7) * t448 * t477;
t415 = t448 ^ 2;
t484 = pkin(3) ^ 2;
t611 = t415 * t484;
t570 = 0.2e1 * t611;
t584 = -t484 + t490;
t519 = t394 + t570 + t584;
t517 = t519 * t418;
t410 = t488 + t490;
t479 = pkin(4) ^ 2;
t547 = -t479 + t410;
t531 = t394 + t547;
t404 = pkin(3) * t448;
t621 = t404 + pkin(7);
t544 = t621 * t452;
t585 = t479 - t490;
t546 = -0.2e1 * t484 + t585;
t573 = -0.4e1 * t404;
t582 = t488 - t490;
t622 = 0.2e1 * t488;
t632 = 0.4e1 * pkin(1);
t357 = sqrt(-0.4e1 * t488 * t517 + 0.4e1 * t582 * t611 + pkin(7) * t547 * t573 - t486 + t546 * t622 - (t490 - (t477 + pkin(4)) * pkin(4)) * (t490 + (t477 - pkin(4)) * pkin(4)) + (-(t387 + t531) * t544 + t531 * t566) * t632);
t545 = t484 + t410;
t515 = 0.1e1 / (0.2e1 * pkin(1) * t544 + t387 + t394 + t545);
t527 = -pkin(1) + t566;
t468 = 0.3e1 * t488;
t528 = t468 - t546;
t533 = -0.4e1 * t538;
t609 = t451 * t452;
t565 = pkin(3) * t609;
t624 = 0.4e1 * t484;
t512 = t515 * ((t449 * t621 + t565) * t357 - (t394 + t528 + t533) * t544 + t527 * t394 + t528 * t566 + (-0.2e1 * t517 + t570 - t624 - t547) * pkin(1));
t510 = t512 / 0.4e1;
t405 = pkin(3) * t451;
t625 = 0.2e1 * t484;
t522 = t625 + t531;
t406 = pkin(1) * t452;
t576 = 0.2e1 * t406;
t514 = t515 * ((t544 - t527) * t357 + (t519 * t576 + t522 * t621) * t449 + (t452 * t522 + (0.4e1 * t418 - 0.2e1) * pkin(1) * t621) * t405);
t480 = 0.1e1 / pkin(4);
t606 = t480 / pkin(3) ^ 2;
t495 = t484 ^ 2;
t478 = t479 ^ 2;
t489 = t490 ^ 2;
t583 = t486 + t489;
t475 = 0.2e1 * t490;
t588 = t475 - t479;
t603 = t490 * t479;
t518 = t588 * t488 + t478 / 0.6e1 + t583 - t603;
t374 = -t495 / 0.6e1 + t518;
t439 = -t484 / 0.3e1;
t400 = t439 + t490;
t377 = t400 * t387;
t393 = t406 + pkin(7);
t382 = t404 + t393;
t409 = -0.3e1 * t484 + t490;
t417 = t452 * t418;
t491 = pkin(1) * t488;
t601 = t491 * t417;
t572 = pkin(7) * t601;
t543 = 0.8e1 * t572;
t385 = t409 * t543;
t408 = -t479 - t484;
t474 = 0.3e1 * t490;
t396 = t474 + t408;
t616 = t396 * t488;
t386 = 0.10e2 * t616;
t435 = 0.4e1 / 0.3e1 * t484;
t429 = -t479 / 0.3e1;
t552 = t429 + t410;
t388 = t435 + t552;
t430 = -t479 / 0.2e1;
t390 = t430 + t545;
t391 = -t479 + t545;
t395 = pkin(7) * t576;
t473 = 0.4e1 * t490;
t398 = (t473 + t479) * t488;
t401 = -t488 / 0.3e1 + t490;
t402 = 0.10e2 / 0.3e1 * t488;
t403 = t410 ^ 2;
t407 = -0.30e2 * t479 + 0.60e2 * t490;
t412 = -0.3e1 * t488 + t490;
t427 = -t479 / 0.6e1;
t428 = -t479 / 0.4e1;
t436 = 0.2e1 / 0.3e1 * t484;
t441 = 0.4e1 / 0.3e1 * t488;
t443 = t488 / 0.2e1;
t454 = 0.15e2 * t486;
t455 = 0.15e2 * t488;
t456 = 0.10e2 * t488;
t461 = -0.2e1 * t479;
t462 = -0.5e1 * t479;
t463 = 0.5e1 * t495;
t464 = 0.7e1 * t486;
t465 = 0.5e1 * t486;
t466 = 0.7e1 * t488;
t467 = 0.6e1 * t488;
t471 = 0.3e1 * t489;
t472 = 0.8e1 * t490;
t494 = pkin(3) * t484;
t481 = t494 ^ 2;
t499 = pkin(7) * t490;
t516 = 0.5e1 / 0.6e1 * t495 + t518;
t521 = t490 - t538;
t596 = t478 / 0.2e1 - t495 / 0.2e1;
t530 = -0.3e1 * t603 + t471 + t596;
t534 = -0.6e1 * t538;
t432 = -0.3e1 / 0.2e1 * t479;
t595 = t432 + t474;
t598 = t410 * ((t432 + t475) * t488 - 0.3e1 / 0.2e1 * t603 + t583 + t596) + t481;
t523 = ((t402 + t588) * t484 + t516) * t534 + (t454 + (-0.9e1 * t479 + 0.18e2 * t490) * t488 + t530) * t484 + (t455 + t595) * t495 + t598;
t524 = t390 * t533;
t589 = t468 + t490;
t549 = t484 + t589;
t620 = pkin(1) * t449;
t525 = -(0.3e1 * t484 + t410) * t620 + t549 * t405;
t431 = -0.2e1 / 0.3e1 * t479;
t440 = -0.2e1 / 0.3e1 * t484;
t550 = t431 + t410;
t590 = t456 + t475;
t594 = t440 + t490;
t526 = -(t463 + (0.5e1 * t488 + t396) * t625 + (t440 + t550) * t410) * t620 + (t495 + (t431 + t440 + t590) * t484 + t465 + 0.2e1 * t616 + t490 * (t431 + t594)) * t405;
t587 = t478 - t495;
t529 = -0.6e1 * t603 + 0.6e1 * t489 + t587;
t551 = t431 + t436 + t475;
t597 = (t436 + t550) * t410 + t495;
t532 = t388 * t533 + (t467 + t551) * t484 + t597;
t535 = t601 * t405;
t605 = t486 * t418 ^ 2;
t536 = t605 * t405;
t563 = 0.16e2 * t601;
t541 = pkin(7) * t563;
t542 = 0.20e2 / 0.3e1 * t488;
t586 = -t479 + t484;
t548 = t474 + t586;
t437 = t484 / 0.3e1;
t553 = t427 + t437 + t490;
t554 = t479 / 0.3e1 + t437 + t475;
t555 = 0.2e1 / 0.3e1 * t479 + t436 + t473;
t556 = 0.4e1 / 0.3e1 * t479 + t435 - 0.2e1 * t490;
t608 = (pkin(7) + pkin(3)) * (pkin(7) - pkin(3));
t557 = t449 * t608;
t574 = 0.6e1 * t406;
t558 = pkin(7) * t574;
t575 = 0.4e1 * t406;
t559 = pkin(7) * t575;
t561 = -t620 / 0.2e1;
t604 = t488 * t418;
t564 = 0.12e2 * t604;
t567 = t488 * t405;
t568 = 0.4e1 * t604;
t569 = 0.8e1 * t605;
t612 = t448 * t415 * t494;
t571 = -0.8e1 * t612;
t577 = 0.2e1 * t620;
t578 = pkin(7) * t406;
t579 = 0.4e1 * pkin(7);
t580 = t489 + t495;
t581 = t489 - t486;
t591 = 0.4e1 / 0.7e1 * t490 - t479 / 0.7e1;
t592 = t443 + t490;
t593 = t488 / 0.3e1 + t490;
t602 = t490 * t488;
t607 = (pkin(7) + pkin(1)) * (pkin(7) - pkin(1));
t613 = t415 ^ 2 * t495;
t614 = t408 * t490;
t615 = t403 * (-t484 + t547);
t617 = (-t449 * t491 + t567) * t418;
t623 = 0.4e1 * t486;
t627 = t428 + t484 / 0.2e1;
t618 = ((-0.24e2 * (0.4e1 / 0.3e1 * t604 + t395 + t401) * t613 * t620 - 0.12e2 * (-0.8e1 / 0.3e1 * t536 + ((t441 + t553) * t405 - (0.7e1 / 0.6e1 * t484 + t427 + t592) * t620) * t568 + (-t484 * t582 - 0.5e1 / 0.3e1 * t486 + t554 * t488 + t490 * (t429 + t400)) * t405 + (-t495 + (-t542 + t555) * t484 - 0.3e1 * t486 + t556 * t488 + t489) * t561 + (-t449 * t486 * t417 + ((t488 + t553) * t405 + (t625 - t582) * t561) * t406) * t579) * t611 + 0.24e2 * t400 * t536 + ((t490 + 0.5e1 / 0.2e1 * t484 + 0.3e1 / 0.2e1 * t488 + t430) * t405 + t409 * t620 / 0.2e1) * t541 - 0.6e1 * ((-0.3e1 * t495 + (-t542 + t556) * t484 + t555 * t488 + t581) * t405 - 0.2e1 * (-0.5e1 / 0.3e1 * t495 + (-t488 + t554) * t484 + t490 * (t439 + t552)) * t620) * t604 - 0.6e1 * t526 * t578 - (t481 + (0.21e2 * t488 + t396) * t495 + (t386 + t471 + 0.35e2 * t486 + 0.2e1 * t614) * t484 + (t464 + (t462 + t472 - 0.5e1 * t484) * t488 + t490 * (-t479 + t584)) * t410) * t405 + (0.7e1 * t481 + (t466 + t396) * t463 + (t386 + 0.21e2 * t486 + 0.9e1 * t489 + 0.6e1 * t614) * t484 + t615) * t620) * t357 + (0.16e2 * (t569 + t541 + (-0.8e1 * t486 + 0.12e2 * t602) * t418 + (-0.12e2 * pkin(7) * t491 + t499 * t632) * t452 - 0.6e1 * t602 + t583) * t613 + 0.24e2 * (t594 * t569 + 0.14e2 * (-0.32e2 / 0.21e2 * (t490 + t484 / 0.4e1 + t488 / 0.4e1 - t479 / 0.8e1) * t538 + 0.5e1 / 0.42e2 * t495 + (0.16e2 / 0.21e2 * t488 + t591) * t484 + t486 / 0.7e1 + t591 * t488 + t489 - 0.3e1 / 0.7e1 * t603 + t478 / 0.42e2) * t604 + t401 * t524 - t582 * t495 + (t398 - 0.10e2 / 0.3e1 * t486 + 0.2e1 * t489 - t603) * t484 + t374 * t607 + ((-0.2e1 / 0.3e1 * t538 + t428 + t592) * t563 + (-0.8e1 / 0.3e1 * (t593 + t627) * t538 + 0.5e1 / 0.18e2 * t495 + (0.4e1 / 0.3e1 * t490 + t441 + t429) * t484 + t489 + 0.2e1 / 0.3e1 * t602 - 0.2e1 / 0.3e1 * t603 - t486 / 0.3e1 + t478 / 0.18e2) * t574) * pkin(7)) * t611 + 0.16e2 * (-0.6e1 * t490 * t484 + t580) * t605 + 0.32e2 * (t387 * t608 + t390 * t409) * t572 + 0.24e2 * (t400 * t524 - t481 + (-t402 + t585) * t495 + (t398 + t495 / 0.6e1 - t478 / 0.6e1 + t581) * t484 + t374 * t490) * t604 + 0.8e1 * t523 * t578 - 0.8e1 * ((t466 + t595) * t495 + (t464 + (t462 + 0.10e2 * t490) * t488 + t530) * t484 + t598) * t538 + t495 ^ 2 + (t461 + t473 + 0.28e2 * t488) * t481 + (t407 * t488 + 0.70e2 * t486 + t529) * t495 + (t407 * t486 + t529 * t467 + t587 * t475 - 0.6e1 * t489 * t479 + 0.28e2 * t491 ^ 2 + 0.4e1 * t499 ^ 2) * t484 + t391 * t615) * t382 + (((0.4e1 * t617 + (t405 + t577) * t395 + t412 * t405 + (t430 + t549) * t577) * t571 - 0.6e1 * (-0.4e1 * ((0.5e1 / 0.6e1 * t484 + t443 + t427) * t451 * t477 + pkin(1) * t557) * t604 + (-0.8e1 * t535 + ((t429 + t436 + t589) * t405 - (0.8e1 / 0.3e1 * t484 + t552) * t620) * t575) * pkin(7) + t526) * t404) * t357 + (0.32e2 * (t543 + (-0.4e1 * t491 * t566 + t623 + (t624 + t461 + t472) * t488) * t418 + (-t488 + t521 + t627) * t559 + t387 * t607 + t412 * t390) * t612 + 0.8e1 * (t385 + (t390 * t608 + t377) * t564 + (t524 + (t467 + t588) * t484 + t516) * t558 + t523) * t404) * t382) * t393) / ((-0.4e1 * (-t582 * t405 + 0.2e1 * t617 + (0.2e1 * pkin(7) * t565 + t449 * (t484 + t622)) * pkin(1)) * t611 + 0.8e1 * pkin(7) * t535 + ((pkin(3) * t623 + 0.8e1 * t488 * t494) * t451 + 0.4e1 * t491 * t557) * t418 - 0.4e1 * t525 * t578 - (t484 * t590 + t465 + t580 + 0.6e1 * t602) * t405 + (t463 + (t456 + 0.6e1 * t490) * t484 + t403) * t620) * t357 + (0.12e2 * (0.6e1 * (-0.4e1 / 0.9e1 * t538 + 0.4e1 / 0.9e1 * t484 - t479 / 0.9e1 + t593) * t604 + t401 * t387 + t388 * t607 + (t601 + (t427 + t436 + t521) * t406) * t579) * t611 + t385 + (t388 * t608 + t377) * t564 + t532 * t558 + ((t402 + t551) * t484 + t597) * t534 + t481 + (t455 + t548) * t495 + (t548 * t467 + t586 * t475 + t454 + t471) * t484 + t403 * t391) * t382 + ((t571 * t620 + (-0.2e1 * t418 * t567 + (t405 - t620) * t395 + t525) * t573) * t357 + (0.8e1 * (t395 + t568 + t412) * t612 + 0.6e1 * (t584 * t568 + (t387 + t388) * t559 + t532) * t404) * t382) * t393);
t332 = (t510 * t618 - t357 * t514 / 0.4e1) * t606;
t333 = (t357 * t510 + t514 * t618 / 0.4e1) * t606;
t378 = -t448 * t449 - t609;
t379 = -t448 * t452 + t610;
t322 = atan2(t332 * t378 + t333 * t379, -t332 * t379 + t333 * t378);
t320 = sin(t322);
t321 = cos(t322);
t560 = t480 * t619;
t336 = atan2(t357 * t560, t560 * t618);
t334 = sin(t336);
t335 = cos(t336);
t511 = t626 * t512;
t509 = t511 / 0.2e1;
t513 = t514 * t619;
t508 = atan2(t513, t509);
t506 = sin(t508);
t507 = cos(t508);
t350 = -t449 * t507 - t452 * t506;
t351 = t449 * t506 - t452 * t507;
t324 = t334 * t351 + t335 * t350;
t537 = -t334 * t350 + t351 * t335;
t636 = t320 * t324 - t321 * t537;
t635 = t320 * t537 + t321 * t324;
t445 = sin(pkin(8));
t446 = cos(pkin(8));
t375 = t445 * t452 - t446 * t449;
t376 = t445 * t449 + t446 * t452;
t353 = -t375 * t511 / 0.2e1 + t376 * t513;
t354 = t375 * t513 + t376 * t509;
t450 = sin(pkin(9));
t453 = cos(pkin(9));
t344 = -t353 * t453 + t354 * t450;
t345 = t353 * t450 + t354 * t453;
t341 = atan2(t344, t345);
t337 = sin(t341);
t339 = cos(t341);
t329 = t337 * t351 + t339 * t350;
t342 = atan2(t344, -t345);
t338 = sin(t342);
t340 = cos(t342);
t520 = t337 * t350 - t339 * t351;
t634 = -t329 * t338 - t340 * t520;
t633 = t329 * t340 - t338 * t520;
t600 = t351 * pkin(3) - t406;
t599 = t351 * pkin(2) - t406;
t540 = t350 * pkin(3) - t620;
t539 = t350 * pkin(2) - t620;
t369 = atan2(t375, -t376);
t368 = atan2(t375, t376);
t367 = cos(t369);
t366 = cos(t368);
t365 = sin(t369);
t364 = sin(t368);
t361 = -t364 * t449 + t366 * t452;
t360 = t364 * t452 + t366 * t449;
t359 = -t365 * t445 + t367 * t446;
t358 = t365 * t446 + t367 * t445;
t1 = -m(1) * (g(1) * rSges(1,1) + g(2) * rSges(1,2) + g(3) * rSges(1,3)) - m(2) * (g(1) * (-rSges(2,1) * t452 + rSges(2,2) * t449) + g(2) * (-rSges(2,1) * t449 - rSges(2,2) * t452) + g(3) * rSges(2,3)) - m(3) * (g(1) * (rSges(3,1) * t351 - rSges(3,2) * t350 - t406) + g(2) * (rSges(3,1) * t350 + rSges(3,2) * t351 - t620) + g(3) * rSges(3,3)) - m(4) * (g(1) * (rSges(4,1) * t520 + rSges(4,2) * t329 + t599) + g(2) * (-rSges(4,1) * t329 + rSges(4,2) * t520 + t539) + g(3) * rSges(4,3)) - m(5) * (g(1) * (rSges(5,1) * t537 - rSges(5,2) * t324 + t600) + g(2) * (rSges(5,1) * t324 + rSges(5,2) * t537 + t540) + g(3) * rSges(5,3)) - m(6) * (g(1) * (pkin(5) * t446 + rSges(6,1) * t359 - rSges(6,2) * t358) + g(2) * (pkin(5) * t445 + rSges(6,1) * t358 + rSges(6,2) * t359) + g(3) * rSges(6,3)) - m(7) * (g(1) * (rSges(7,1) * t520 + rSges(7,2) * t329 - t406) + g(2) * (-rSges(7,1) * t329 + rSges(7,2) * t520 - t620) + g(3) * rSges(7,3)) - m(8) * (g(1) * (rSges(8,1) * t448 + rSges(8,2) * t451 + pkin(7)) + g(2) * (-rSges(8,1) * t451 + rSges(8,2) * t448) + g(3) * rSges(8,3)) - m(9) * (g(1) * (rSges(9,1) * t361 - rSges(9,2) * t360 - t406) + g(2) * (rSges(9,1) * t360 + rSges(9,2) * t361 - t620) + g(3) * rSges(9,3)) - m(10) * (g(1) * (t520 * pkin(6) + rSges(10,1) * t634 - rSges(10,2) * t633 + t599) + g(2) * (-t329 * pkin(6) + rSges(10,1) * t633 + rSges(10,2) * t634 + t539) + g(3) * rSges(10,3)) - m(11) * (g(1) * (t537 * pkin(4) + rSges(11,1) * t636 + t635 * rSges(11,2) + t600) + g(2) * (t324 * pkin(4) - t635 * rSges(11,1) + rSges(11,2) * t636 + t540) + g(3) * rSges(11,3));
U = t1;
