% Rotatorische Teilmatrix der analytischen Jacobi-Matrix für beliebiges Segment von
% picker2Dm2DE2
% Use Code from Maple symbolic Code Generation
% 
% analytische Jacobi-Matrix: Differentieller Zusammenhang zwischen
% Endeffektorposition und verallgemeinerten Koordinaten.
% Zeitableitung der Winkeldarstellung des Endeffektors in Basis-Koordinaten
% 
% Winkeldarstellung: Euler-XYZ-Winkel, rotx(alpha)*roty(beta)*rotz(gamma)
% 
% Input:
% qJ [2x1]
%   Generalized joint coordinates (joint angles)
% link_index [1x1 uint8]
%   Index des Segmentes, auf dem der Punkt C liegt.
%   Wie in picker2Dm2DE2_fkine_fixb_rotmat_mdh_sym_varpar.m (1=Basis).
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[L1,L2,L3,L4,L5,L6,e,phi05,phi1]';
% 
% Output:
% Ja_rot [3x2]
%   Rotatorische Teilmatrix der analytischen Jacobi-Matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2020-05-09 23:02
% Revision: 73758128893bc0a8beabae04bd7e71472107ac81 (2020-05-07)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function Ja_rot = picker2Dm2DE2_jacobia_rot_sym_varpar(qJ, link_index, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(2,1),uint8(0),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [2 1]), ...
  'picker2Dm2DE2_jacobia_rot_sym_varpar: qJ has to be [2x1] (double)');
assert(isa(link_index,'uint8') && all(size(link_index) == [1 1]), ...
	'picker2Dm2DE2_jacobia_rot_sym_varpar: link_index has to be [1x1] uint8');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'picker2Dm2DE2_jacobia_rot_sym_varpar: pkin has to be [9x1] (double)');
Ja_rot=NaN(3,2);
if link_index == 0
	%% Symbolic Calculation
	% From jacobia_rot_0_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-05-09 22:44:00
	% EndTime: 2020-05-09 22:44:00
	% DurationCPUTime: 0.01s
	% Computational Cost: add. (0->0), mult. (0->0), div. (0->0), fcn. (0->0), ass. (0->1)
	t1 = [0, 0; 0, 0; 0, 0;];
	Ja_rot = t1;
elseif link_index == 1
	%% Symbolic Calculation
	% From jacobia_rot_1_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-05-09 22:44:00
	% EndTime: 2020-05-09 22:44:00
	% DurationCPUTime: 0.01s
	% Computational Cost: add. (3->0), mult. (6->0), div. (5->0), fcn. (6->0), ass. (0->1)
	t1 = [0, 0; 0, 0; 1, 0;];
	Ja_rot = t1;
elseif link_index == 2
	%% Symbolic Calculation
	% From jacobia_rot_2_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-05-09 22:44:05
	% EndTime: 2020-05-09 22:44:08
	% DurationCPUTime: 0.81s
	% Computational Cost: add. (4114->96), mult. (10916->173), div. (114->6), fcn. (2828->6), ass. (0->78)
	t199 = 4 * pkin(1);
	t198 = 2 * pkin(7);
	t197 = 2 * pkin(1);
	t155 = (pkin(3) ^ 2);
	t151 = 2 * t155;
	t148 = sin(qJ(1));
	t149 = cos(qJ(2));
	t186 = t148 * t149;
	t138 = pkin(3) * t186;
	t167 = pkin(1) * t138;
	t135 = -0.2e1 * t167;
	t157 = pkin(1) ^ 2;
	t147 = sin(qJ(2));
	t139 = pkin(3) * t147 + pkin(7);
	t150 = cos(qJ(1));
	t133 = t139 * t150;
	t173 = pkin(1) * t133;
	t178 = t147 * t198;
	t140 = pkin(3) * t178;
	t158 = pkin(7) ^ 2;
	t180 = t140 + t158;
	t122 = t135 + t155 + t157 + 0.2e1 * t173 + t180;
	t120 = 0.1e1 / t122;
	t196 = t120 / 0.2e1;
	t145 = t147 ^ 2;
	t129 = t145 * t151 - t155 + t180;
	t195 = pkin(1) * t129;
	t194 = pkin(3) * t149;
	t121 = 0.1e1 / t122 ^ 2;
	t184 = t149 * t150;
	t172 = pkin(3) * t184;
	t188 = t147 * t148;
	t136 = pkin(3) * pkin(1) * t188;
	t144 = pkin(7) * t194;
	t182 = t136 + t144;
	t193 = t121 * (pkin(1) * t172 + t182);
	t187 = t148 * t139;
	t128 = t172 + t187;
	t192 = t121 * t128 * pkin(1);
	t179 = -pkin(4) ^ 2 + t158;
	t143 = t157 + t179;
	t132 = t140 + t143;
	t126 = t135 + t132;
	t142 = (t157 - t158) * t155;
	t153 = 0.2e1 * pkin(3);
	t146 = t150 ^ 2;
	t164 = -0.2e1 * t129 * t146 - t179;
	t171 = -0.4e1 * pkin(7) * pkin(3) * t143;
	t177 = 2 * t157;
	t159 = sqrt(0.4e1 * t142 * t145 + t147 * t171 - (t157 ^ 2) - (t158 - (t153 + pkin(4)) * pkin(4)) * (t158 + (t153 - pkin(4)) * pkin(4)) + (-(2 * t155) + t164) * t177 + (-t126 * t133 + t132 * t138) * t199);
	t191 = t128 * t159;
	t141 = 0.2e1 * t144;
	t166 = 0.4e1 * t155 * t147 * t149;
	t130 = t141 + t166;
	t190 = t130 * t146;
	t189 = t139 * t146;
	t185 = t148 * t150;
	t183 = t150 * t159;
	t181 = -t138 + t133;
	t176 = t148 * t155 * pkin(7);
	t115 = 0.1e1 / t159;
	t175 = 0.2e1 * t115 * ((t129 * t185 + t189 * t194) * t177 + (t126 * t187 + t132 * t172) * pkin(1));
	t174 = t150 * t195;
	t170 = (-0.4e1 * t157 * t190 + (0.8e1 * t142 * t147 + t171) * t149 + (-0.8e1 * t182 * t133 + 0.8e1 * t149 ^ 2 * t176 + 0.4e1 * (-t126 * t184 - t132 * t188) * pkin(3)) * pkin(1)) * t115 / 0.2e1;
	t137 = t151 + 3 * t157 + t179;
	t124 = t137 + t140 - 0.4e1 * t167;
	t134 = t138 - pkin(1);
	t111 = -t124 * t133 + t191 + (t134 * t178 + t137 * t186) * pkin(3) + (-t157 + (0.2e1 * t145 - 0.4e1) * t155 + t164) * pkin(1);
	t110 = 0.1e1 / t111 ^ 2;
	t131 = t151 + t132;
	t118 = t131 * t139 + 0.2e1 * t174;
	t119 = t131 * t150 + (0.4e1 * t146 - 0.2e1) * t139 * pkin(1);
	t127 = pkin(1) + t181;
	t112 = t118 * t148 + t119 * t194 + t127 * t159;
	t165 = 0.1e1 / (t110 * t112 ^ 2 + 0.1e1) * t122;
	t162 = 0.1e1 / t111 * t165;
	t161 = t110 * t112 * t165;
	t1 = [0, 0; 0, 0; 0.1e1 + 0.2e1 * ((-t191 + t127 * t175 + t118 * t150 + ((-t131 - 0.8e1 * t173) * t194 - 0.2e1 * t148 * t195) * t148) * t196 + t112 * t192) * t162 - 0.2e1 * ((t181 * t159 + t128 * t175 + (t139 * t124 + 0.4e1 * t174) * t148 + (t155 * t150 * t178 + (t137 * t150 + t189 * t199) * pkin(3)) * t149) * t196 + t111 * t192) * t161, 0.2e1 * ((t130 * t185 * t197 + t127 * t170) * t196 - t112 * t193 + ((t148 * t159 - t119) * t147 * t196 + (t183 / 0.2e1 + (t139 * t198 + t131) * t148 / 0.2e1 + (pkin(7) * t150 + t146 * t197 - pkin(1)) * t194) * t120 * t149) * pkin(3)) * t162 - 0.2e1 * ((t138 * t159 + t128 * t170 - (0.4e1 * t136 + t141) * t133 - 0.2e1 * t145 * t176 + (t166 - 0.2e1 * t190) * pkin(1) + ((-t124 * t150 + t134 * t198) * t149 + (-t137 * t148 - t183) * t147) * pkin(3)) * t196 - t111 * t193) * t161;];
	Ja_rot = t1;
elseif link_index == 3
	%% Symbolic Calculation
	% From jacobia_rot_3_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-05-09 22:44:10
	% EndTime: 2020-05-09 22:44:16
	% DurationCPUTime: 1.86s
	% Computational Cost: add. (22314->123), mult. (58780->234), div. (714->10), fcn. (16304->10), ass. (0->116)
	t284 = 4 * pkin(1);
	t225 = (pkin(3) ^ 2);
	t221 = 2 * t225;
	t227 = pkin(1) ^ 2;
	t228 = pkin(7) ^ 2;
	t256 = (-pkin(4) ^ 2 + t228);
	t203 = t221 + 3 * t227 + t256;
	t215 = sin(qJ(2));
	t282 = 2 * pkin(7);
	t255 = t215 * t282;
	t206 = pkin(3) * t255;
	t216 = sin(qJ(1));
	t218 = cos(qJ(2));
	t263 = t216 * t218;
	t204 = pkin(3) * t263;
	t242 = pkin(1) * t204;
	t188 = t203 + t206 - 0.4e1 * t242;
	t205 = pkin(3) * t215 + pkin(7);
	t219 = cos(qJ(1));
	t199 = t205 * t219;
	t200 = t204 - pkin(1);
	t211 = t215 ^ 2;
	t257 = t206 + t228;
	t195 = t211 * t221 - t225 + t257;
	t212 = t219 ^ 2;
	t237 = -0.2e1 * t195 * t212 - t256;
	t261 = t218 * t219;
	t249 = pkin(3) * t261;
	t265 = t205 * t216;
	t192 = t249 + t265;
	t209 = t227 + t256;
	t198 = t206 + t209;
	t201 = -0.2e1 * t242;
	t190 = t201 + t198;
	t208 = (t227 - t228) * t225;
	t223 = 0.2e1 * pkin(3);
	t248 = -0.4e1 * pkin(7) * pkin(3) * t209;
	t254 = 2 * t227;
	t229 = sqrt(0.4e1 * t208 * t211 + t215 * t248 - (t227 ^ 2) - (t228 - (t223 + pkin(4)) * pkin(4)) * (t228 + (t223 - pkin(4)) * pkin(4)) + (-(2 * t225) + t237) * t254 + (-t190 * t199 + t198 * t204) * t284);
	t268 = t192 * t229;
	t175 = -t188 * t199 + t268 + (t200 * t255 + t203 * t263) * pkin(3) + (-t227 + (0.2e1 * t211 - 0.4e1) * t225 + t237) * pkin(1);
	t283 = t175 / 0.2e1;
	t281 = 2 * pkin(1);
	t250 = pkin(1) * t199;
	t186 = t201 + t225 + t227 + 0.2e1 * t250 + t257;
	t185 = 0.1e1 / t186 ^ 2;
	t280 = 0.2e1 * t185;
	t184 = 0.1e1 / t186;
	t279 = t184 / 0.2e1;
	t213 = sin(pkin(8));
	t214 = cos(pkin(8));
	t193 = t213 * t219 - t214 * t216;
	t278 = -t193 / 0.2e1;
	t277 = t193 / 0.2e1;
	t194 = t213 * t216 + t214 * t219;
	t276 = -t194 / 0.2e1;
	t275 = t194 / 0.2e1;
	t274 = pkin(1) * t195;
	t273 = pkin(3) * t218;
	t197 = t221 + t198;
	t251 = t219 * t274;
	t182 = t197 * t205 + 0.2e1 * t251;
	t183 = t197 * t219 + (0.4e1 * t212 - 0.2e1) * t205 * pkin(1);
	t258 = -t204 + t199;
	t191 = pkin(1) + t258;
	t176 = t182 * t216 + t183 * t273 + t191 * t229;
	t233 = t175 * t277 + t176 * t276;
	t226 = 0.1e1 / pkin(3);
	t271 = t184 * t226;
	t165 = t233 * t271;
	t245 = t271 / 0.2e1;
	t172 = t193 * t176 * t245;
	t166 = t175 * t194 * t245 + t172;
	t217 = sin(pkin(9));
	t220 = cos(pkin(9));
	t164 = -t165 * t217 + t166 * t220;
	t162 = 0.1e1 / t164 ^ 2;
	t163 = t165 * t220 + t166 * t217;
	t156 = 0.1e1 / (t162 * t163 ^ 2 + 0.1e1);
	t272 = t156 / t164;
	t264 = t215 * t216;
	t202 = pkin(3) * pkin(1) * t264;
	t210 = pkin(7) * t273;
	t259 = t202 + t210;
	t187 = pkin(1) * t249 + t259;
	t270 = t185 * t187;
	t189 = t192 * pkin(1);
	t269 = t185 * t189;
	t207 = 0.2e1 * t210;
	t241 = 0.4e1 * t225 * t215 * t218;
	t196 = t207 + t241;
	t267 = t196 * t212;
	t266 = t205 * t212;
	t262 = t216 * t219;
	t260 = t219 * t229;
	t253 = t216 * t225 * pkin(7);
	t179 = 0.1e1 / t229;
	t252 = 0.2e1 * t179 * ((t195 * t262 + t266 * t273) * t254 + (t190 * t265 + t198 * t249) * pkin(1));
	t247 = t156 * t162 * t163;
	t246 = (-0.4e1 * t227 * t267 + (0.8e1 * t208 * t215 + t248) * t218 + (-0.8e1 * t259 * t199 + 0.8e1 * t218 ^ 2 * t253 + 0.4e1 * (-t190 * t261 - t198 * t264) * pkin(3)) * pkin(1)) * t179 / 0.2e1;
	t169 = -t268 + t191 * t252 + t182 * t219 + ((-t197 - 0.8e1 * t250) * t273 - 0.2e1 * t216 * t274) * t216;
	t244 = t283 + t169 / 0.2e1;
	t174 = 0.1e1 / t175 ^ 2;
	t240 = pkin(3) / (t174 * t176 ^ 2 + 0.1e1) * t186 * t226;
	t235 = t240 / t283;
	t234 = -0.2e1 * t174 * t176 * t240;
	t232 = t233 * t280;
	t231 = (t175 * t276 + t176 * t278) * t280;
	t170 = t258 * t229 + t192 * t252 + (t205 * t188 + 0.4e1 * t251) * t216 + (t225 * t219 * t255 + (t203 * t219 + t266 * t284) * pkin(3)) * t218;
	t168 = t204 * t229 + t192 * t246 - (0.4e1 * t202 + t207) * t199 - 0.2e1 * t211 * t253 + (t241 - 0.2e1 * t267) * pkin(1) + ((-t188 * t219 + t200 * t282) * t218 + (-t203 * t216 - t260) * t215) * pkin(3);
	t167 = t191 * t246 + t196 * t262 * t281 + ((t216 * t229 - t183) * t215 + (t260 + (t205 * t282 + t197) * t216 + 0.2e1 * (pkin(7) * t219 + t212 * t281 - pkin(1)) * t273) * t218) * pkin(3);
	t160 = ((t167 * t277 + t168 * t275) * t184 + t187 * t231) * t226;
	t159 = ((t167 * t275 + t168 * t278) * t184 + t187 * t232) * t226;
	t158 = (-t189 * t231 + ((t170 / 0.2e1 - t176 / 0.2e1) * t194 + t244 * t193) * t184) * t226;
	t157 = t172 + (-t189 * t232 + (t170 * t278 + t244 * t194) * t184) * t226;
	t1 = [0, 0; 0, 0; 0.1e1 + (t169 * t279 + t176 * t269) * t235 + (t170 * t279 + t175 * t269) * t234 + (-t157 * t220 + t158 * t217) * t272 - (t157 * t217 + t158 * t220) * t247, (t167 * t279 - t176 * t270) * t235 + (t168 * t279 - t175 * t270) * t234 + (-t159 * t220 + t160 * t217) * t272 - (t159 * t217 + t160 * t220) * t247;];
	Ja_rot = t1;
elseif link_index == 4
	%% Symbolic Calculation
	% From jacobia_rot_4_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-05-09 22:44:37
	% EndTime: 2020-05-09 22:45:13
	% DurationCPUTime: 11.31s
	% Computational Cost: add. (30496->581), mult. (99644->932), div. (222->12), fcn. (12182->6), ass. (0->393)
	t716 = pkin(3) ^ 2;
	t720 = pkin(1) ^ 2;
	t722 = pkin(7) ^ 2;
	t859 = t720 - t722;
	t621 = t859 * t716;
	t711 = pkin(4) ^ 2;
	t682 = sin(qJ(1));
	t683 = cos(qJ(2));
	t888 = t682 * t683;
	t612 = pkin(3) * t888;
	t769 = pkin(1) * t612;
	t869 = t720 / 0.3e1 + t722;
	t561 = -0.4e1 / 0.9e1 * t769 + 0.4e1 / 0.9e1 * t716 - t711 / 0.9e1 + t869;
	t662 = -t711 / 0.6e1;
	t671 = 0.2e1 / 0.3e1 * t716;
	t745 = t722 - t769;
	t569 = t662 + t671 + t745;
	t670 = 0.4e1 / 0.3e1 * t716;
	t644 = t720 + t722;
	t664 = -t711 / 0.3e1;
	t792 = t664 + t644;
	t601 = t670 + t792;
	t634 = -t720 / 0.3e1 + t722;
	t770 = -0.2e1 * t612;
	t684 = cos(qJ(1));
	t653 = t684 ^ 2;
	t879 = t720 * t653;
	t824 = 0.6e1 * t879;
	t652 = t684 * t653;
	t724 = pkin(1) * t720;
	t890 = t652 * t724;
	t841 = pkin(7) * t890;
	t922 = pkin(7) * t684;
	t854 = 0.4e1 * t922;
	t881 = (pkin(7) + pkin(1)) * (pkin(7) - pkin(1));
	t513 = 0.4e1 * t841 + t561 * t824 + t601 * t881 + (t569 * t854 + t634 * t770) * pkin(1);
	t699 = 0.6e1 * t720;
	t758 = -0.4e1 * t769;
	t666 = -0.2e1 / 0.3e1 * t711;
	t707 = 0.2e1 * t722;
	t791 = t666 + t671 + t707;
	t728 = t716 ^ 2;
	t790 = t666 + t644;
	t874 = (t671 + t790) * t644 + t728;
	t525 = t601 * t758 + (t699 + t791) * t716 + t874;
	t635 = 0.10e2 / 0.3e1 * t720;
	t537 = (t635 + t791) * t716 + t874;
	t599 = -0.2e1 * t769;
	t674 = -t716 / 0.3e1;
	t632 = t674 + t722;
	t574 = t632 * t599;
	t882 = (pkin(7) + pkin(3)) * (pkin(7) - pkin(3));
	t539 = t601 * t882 + t574;
	t643 = -0.3e1 * t716 + t722;
	t783 = 0.8e1 * t841;
	t585 = t643 * t783;
	t788 = t716 + t644;
	t610 = -t711 + t788;
	t639 = pkin(1) * t684;
	t615 = t639 + pkin(7);
	t636 = t644 ^ 2;
	t718 = t720 ^ 2;
	t685 = 0.15e2 * t718;
	t686 = 0.15e2 * t720;
	t721 = t722 ^ 2;
	t703 = 0.3e1 * t721;
	t727 = pkin(3) * t716;
	t713 = t727 ^ 2;
	t566 = t599 + t601;
	t861 = -t716 + t722;
	t620 = t861 * t720;
	t851 = pkin(7) * t639;
	t807 = 0.4e1 * t851;
	t929 = 0.4e1 * t653;
	t512 = t566 * t807 + t620 * t929 + t525;
	t849 = 0.2e1 * t639;
	t619 = pkin(7) * t849;
	t646 = -0.3e1 * t720 + t722;
	t825 = 0.4e1 * t879;
	t573 = t619 + t825 + t646;
	t681 = sin(qJ(2));
	t649 = t681 ^ 2;
	t648 = t681 * t649;
	t893 = t648 * t727;
	t835 = 0.8e1 * t893;
	t637 = pkin(3) * t681;
	t847 = 0.6e1 * t637;
	t741 = t512 * t847 + t573 * t835;
	t706 = 0.3e1 * t722;
	t862 = -t711 + t716;
	t789 = t706 + t862;
	t810 = 0.12e2 * t879;
	t892 = t649 * t716;
	t812 = 0.12e2 * t892;
	t496 = t513 * t812 + t585 + t539 * t810 + t713 + (t686 + t789) * t728 + (t699 * t789 + t707 * t862 + t685 + t703) * t716 + t636 * t610 + t741 * t615 + 0.6e1 * (t525 * t922 - t537 * t612) * pkin(1);
	t638 = pkin(3) * t683;
	t846 = 0.2e1 * t720;
	t642 = t716 + t846;
	t887 = t683 * t684;
	t817 = pkin(3) * t887;
	t816 = t720 * t638;
	t581 = -t682 * t724 + t816;
	t903 = t581 * t653;
	t936 = 0.2e1 * pkin(7);
	t526 = -t859 * t638 + 0.2e1 * t903 + (t642 * t682 + t817 * t936) * pkin(1);
	t700 = 0.3e1 * t720;
	t865 = t700 + t722;
	t625 = t716 + t865;
	t584 = t625 * t638;
	t626 = 0.3e1 * t716 + t644;
	t897 = t626 * t682;
	t554 = -pkin(1) * t897 + t584;
	t823 = 0.8e1 * t720 * t727;
	t927 = 0.4e1 * t718;
	t613 = pkin(3) * t927 + t823;
	t798 = t724 * t882;
	t556 = t613 * t683 + 0.4e1 * t682 * t798;
	t687 = 0.10e2 * t720;
	t694 = 0.5e1 * t728;
	t577 = t694 + (t687 + 0.6e1 * t722) * t716 + t636;
	t697 = 0.5e1 * t718;
	t857 = t721 + t728;
	t866 = t687 + t707;
	t877 = t722 * t720;
	t942 = -0.6e1 * t877;
	t754 = -t716 * t866 - t697 + t783 - t857 + t942;
	t803 = t615 * t893;
	t767 = -0.8e1 * t803;
	t834 = -0.4e1 * t892;
	t915 = pkin(1) * t682;
	t587 = t638 - t915;
	t763 = t653 * t816;
	t524 = -0.2e1 * t763 + t584 + (0.2e1 * t587 * t922 - t897) * pkin(1);
	t932 = -0.4e1 * t615;
	t837 = t524 * t932;
	t502 = t526 * t834 + t556 * t653 + (t681 * t837 + t683 * t754) * pkin(3) + (-0.4e1 * t554 * t922 + (t577 + t767) * t682) * pkin(1);
	t582 = t637 + t615;
	t924 = pkin(7) * t681;
	t855 = 0.2e1 * t924;
	t616 = pkin(3) * t855;
	t856 = t722 - t711;
	t624 = t720 + t856;
	t580 = t616 + t624;
	t558 = t599 + t580;
	t614 = t637 + pkin(7);
	t595 = t614 * t684;
	t709 = 0.2e1 * pkin(3);
	t833 = 0.2e1 * t892;
	t572 = t616 + t833 + t861;
	t930 = -0.2e1 * t653;
	t750 = t572 * t930 - t856;
	t809 = -0.4e1 * pkin(3) * pkin(7) * t624;
	t946 = 0.4e1 * pkin(1);
	t509 = 0.4e1 * t621 * t649 + t681 * t809 - t718 - (t722 - (t709 + pkin(4)) * pkin(4)) * (t722 + (t709 - pkin(4)) * pkin(4)) + (-0.2e1 * t716 + t750) * t846 + (-t558 * t595 + t580 * t612) * t946;
	t723 = sqrt(t509);
	t493 = t496 * t582 + t502 * t723;
	t948 = t493 ^ 2;
	t947 = 0.2e1 * pkin(1);
	t945 = 0.4e1 * pkin(3);
	t885 = t684 * t682;
	t899 = t614 * t682;
	t900 = t614 * t653;
	t944 = 0.2e1 * (t572 * t885 + t638 * t900) * t846 + 0.2e1 * (t558 * t899 + t580 * t817) * pkin(1);
	t943 = 0.8e1 * t582;
	t630 = pkin(7) * t638;
	t617 = 0.2e1 * t630;
	t886 = t683 * t716;
	t799 = t681 * t886;
	t765 = 0.4e1 * t799;
	t576 = t617 + t765;
	t827 = -0.4e1 * t879;
	t923 = pkin(7) * t682;
	t843 = t716 * t923;
	t889 = t681 * t682;
	t925 = pkin(1) * pkin(3);
	t604 = t889 * t925;
	t873 = t604 + t630;
	t941 = t576 * t827 / 0.2e1 + (0.8e1 * t621 * t681 + t809) * t683 / 0.2e1 + (-0.8e1 * t873 * t595 + 0.8e1 * t683 ^ 2 * t843 + (-t558 * t887 - t580 * t889) * t945) * pkin(1) / 0.2e1;
	t940 = t582 * t682;
	t591 = t722 + t716 / 0.4e1 + t720 / 0.4e1 - t711 / 0.8e1;
	t710 = t711 ^ 2;
	t867 = 0.4e1 / 0.7e1 * t722 - t711 / 0.7e1;
	t878 = t722 * t711;
	t518 = -0.32e2 / 0.21e2 * t591 * t769 + 0.5e1 / 0.42e2 * t728 + (0.16e2 / 0.21e2 * t720 + t867) * t716 + t718 / 0.7e1 + t867 * t720 + t721 - 0.3e1 / 0.7e1 * t878 + t710 / 0.42e2;
	t663 = -t711 / 0.4e1;
	t937 = t663 + t716 / 0.2e1;
	t593 = t869 + t937;
	t676 = 0.4e1 / 0.3e1 * t720;
	t522 = -0.8e1 / 0.3e1 * t593 * t769 + 0.5e1 / 0.18e2 * t728 + (t676 + t664) * t716 + t721 - t718 / 0.3e1 + t710 / 0.18e2 + (t670 + 0.2e1 / 0.3e1 * t720 + t666) * t722;
	t860 = t718 + t721;
	t864 = t707 - t711;
	t742 = t864 * t720 + t710 / 0.6e1 + t860 - t878;
	t567 = -t728 / 0.6e1 + t742;
	t678 = t720 / 0.2e1;
	t868 = t678 + t722;
	t568 = -0.2e1 / 0.3e1 * t769 + t663 + t868;
	t705 = 0.4e1 * t722;
	t628 = (t705 + t711) * t720;
	t675 = -0.2e1 / 0.3e1 * t716;
	t633 = t675 + t722;
	t665 = -t711 / 0.2e1;
	t607 = t665 + t788;
	t771 = -0.4e1 * t612;
	t751 = t607 * t771;
	t772 = 0.16e2 * t841;
	t651 = t653 ^ 2;
	t880 = t718 * t651;
	t828 = 0.8e1 * t880;
	t501 = t633 * t828 + t568 * t772 + 0.14e2 * t518 * t879 - t859 * t728 + (t628 - 0.10e2 / 0.3e1 * t718 + 0.2e1 * t721 - t878) * t716 + t567 * t881 + (0.6e1 * t522 * t922 + t634 * t751) * pkin(1);
	t739 = 0.5e1 / 0.6e1 * t728 + t742;
	t544 = (t635 + t864) * t716 + t739;
	t871 = t710 / 0.2e1 - t728 / 0.2e1;
	t757 = -0.3e1 * t878 + t703 + t871;
	t667 = -0.3e1 / 0.2e1 * t711;
	t870 = t667 + t706;
	t875 = t644 * ((t667 + t707) * t720 - 0.3e1 / 0.2e1 * t878 + t860 + t871) + t713;
	t510 = -0.6e1 * t544 * t769 + (t685 + (-0.9e1 * t711 + 0.18e2 * t722) * t720 + t757) * t716 + (t686 + t870) * t728 + t875;
	t746 = pkin(1) * t751;
	t858 = t721 - t718;
	t516 = t632 * t746 - t713 + (-t635 - t856) * t728 + (t628 + t728 / 0.6e1 - t710 / 0.6e1 + t858) * t716 + t567 * t722;
	t693 = -0.5e1 * t711;
	t696 = 0.7e1 * t718;
	t698 = 0.7e1 * t720;
	t521 = (t698 + t870) * t728 + (t696 + (t693 + 0.10e2 * t722) * t720 + t757) * t716 + t875;
	t732 = pkin(7) * t722;
	t622 = -0.12e2 * pkin(7) * t724 + t732 * t946;
	t631 = -0.8e1 * t718 + 0.12e2 * t877;
	t532 = t622 * t684 + t631 * t653 + t772 + t828 + t860 + t942;
	t546 = t599 * t882 + t607 * t643;
	t596 = (-0.6e1 * t716 * t722 + t857) * t718;
	t640 = -0.30e2 * t711 + 0.60e2 * t722;
	t647 = t649 ^ 2;
	t692 = -0.2e1 * t711;
	t863 = t710 - t728;
	t756 = -0.6e1 * t878 + 0.6e1 * t721 + t863;
	t704 = 0.8e1 * t722;
	t559 = t724 * t771 + t927 + (0.4e1 * t716 + t692 + t704) * t720;
	t565 = -t720 + t745 + t937;
	t514 = t783 + t559 * t653 + t607 * t646 + (t565 * t854 + t770 * t881) * pkin(1);
	t804 = t514 * t893;
	t527 = t746 + (t699 + t864) * t716 + t739;
	t542 = t607 * t882 + t574;
	t806 = 0.6e1 * t851;
	t503 = t527 * t806 + t542 * t810 + t510 + t585;
	t819 = t503 * t637;
	t896 = t636 * (-t716 + t624);
	t489 = 0.16e2 * t596 * t651 + 0.32e2 * t546 * t841 + 0.24e2 * t516 * t879 + (t692 + t705 + 0.28e2 * t720) * t713 + t610 * t896 + (0.24e2 * t501 * t649 + t640 * t718 + t699 * t756 + t707 * t863 - 0.6e1 * t721 * t711 + 0.28e2 * t724 ^ 2 + 0.4e1 * t732 ^ 2) * t716 + (0.32e2 * t804 + 0.8e1 * t819) * t615 + 0.8e1 * (t510 * t922 - t521 * t612) * pkin(1) + (0.16e2 * t532 * t647 + t640 * t720 + 0.70e2 * t718 + t728 + t756) * t728;
	t589 = 0.7e1 / 0.6e1 * t716 + t662 + t868;
	t672 = t716 / 0.3e1;
	t793 = t662 + t672 + t722;
	t592 = t676 + t793;
	t538 = -t589 * t915 + t592 * t638;
	t603 = t720 + t793;
	t695 = 0.2e1 * t716;
	t627 = t695 - t859;
	t548 = t603 * t638 - t627 * t915 / 0.2e1;
	t794 = t711 / 0.3e1 + t672 + t707;
	t755 = -0.8e1 / 0.3e1 * t880 - t621 - 0.5e1 / 0.3e1 * t718 + t794 * t720 + t722 * (t664 + t632);
	t921 = pkin(7) * t718;
	t853 = -0.4e1 * t921;
	t777 = 0.20e2 / 0.3e1 * t720;
	t795 = 0.2e1 / 0.3e1 * t711 + t671 + t705;
	t796 = 0.4e1 / 0.3e1 * t711 + t670 - 0.2e1 * t722;
	t918 = t728 / 0.2e1 - (-t777 + t795) * t716 / 0.2e1 + 0.3e1 / 0.2e1 * t718 - t796 * t720 / 0.2e1 - t721 / 0.2e1;
	t504 = t682 * t652 * t853 + t538 * t825 + t755 * t638 + (t548 * t854 + t682 * t918) * pkin(1);
	t641 = -t711 - t716;
	t623 = t706 + t641;
	t898 = t623 * t720;
	t533 = t728 + (t666 + t675 + t866) * t716 + t697 + 0.2e1 * t898 + t722 * (t666 + t633);
	t529 = t533 * t638;
	t545 = t694 + (0.5e1 * t720 + t623) * t695 + (t675 + t790) * t644;
	t905 = t545 * t682;
	t515 = -pkin(1) * t905 + t529;
	t541 = -0.3e1 * t728 + (-t777 + t796) * t716 + t795 * t720 + t858;
	t549 = -0.5e1 / 0.3e1 * t728 + (-t720 + t794) * t716 + t722 * (t674 + t792);
	t850 = -0.2e1 * t915;
	t517 = t541 * t638 + t549 * t850;
	t586 = t638 + 0.2e1 * t915;
	t606 = t665 + t625;
	t520 = t646 * t638 + 0.4e1 * t903 + (t586 * t922 + t606 * t682) * t947;
	t590 = t722 + 0.5e1 / 0.2e1 * t716 + 0.3e1 / 0.2e1 * t720 + t665;
	t550 = t590 * t638 + t643 * t915 / 0.2e1;
	t594 = 0.10e2 * t898;
	t895 = t641 * t722;
	t747 = 0.24e2 * t632 * t880 - t713 - (0.21e2 * t720 + t623) * t728 - (t594 + t703 + 0.35e2 * t718 + 0.2e1 * t895) * t716 - (t696 + (t693 + t704 - 0.5e1 * t716) * t720 + t722 * (-t716 + t856)) * t644;
	t813 = -0.12e2 * t892;
	t600 = 0.8e1 / 0.3e1 * t716 + t792;
	t602 = t664 + t671 + t865;
	t543 = -t600 * t915 + t602 * t638;
	t608 = 0.5e1 / 0.6e1 * t716 + t678 + t662;
	t552 = 0.2e1 * t608 * t638 + t882 * t915;
	t776 = t724 * t630;
	t931 = -0.8e1 * t652;
	t505 = t776 * t931 + t552 * t827 + t529 + (t543 * t854 - t905) * pkin(1);
	t839 = -0.6e1 * t505 * t615;
	t570 = 0.4e1 / 0.3e1 * t879 + t619 + t634;
	t894 = t647 * t728;
	t938 = 0.7e1 * t713 + (t698 + t623) * t694 + (t594 + 0.21e2 * t718 + 0.9e1 * t721 + 0.6e1 * t895) * t716 + t896 - 0.24e2 * t570 * t894;
	t494 = t550 * t772 + t520 * t767 + t504 * t813 - 0.6e1 * t517 * t879 + (t681 * t839 + t683 * t747) * pkin(3) + (-0.6e1 * t515 * t922 + t682 * t938) * pkin(1);
	t488 = t489 * t582 + t494 * t723;
	t910 = 0.1e1 / t488 ^ 2 * t948;
	t485 = 0.1e1 / (t509 * t910 + 0.1e1);
	t717 = 0.1e1 / pkin(3);
	t914 = pkin(3) * t723;
	t939 = -0.2e1 * t717 * t485 * t910 * t914;
	t934 = 0.6e1 * t544;
	t933 = 0.4e1 * t601;
	t928 = -0.8e1 * t684;
	t926 = pkin(1) * pkin(7);
	t491 = 0.1e1 / t493;
	t920 = t491 / 0.2e1;
	t821 = pkin(1) * t595;
	t536 = t599 + t616 + t788 + 0.2e1 * t821;
	t534 = 0.1e1 / t536;
	t919 = t534 / 0.2e1;
	t916 = pkin(1) * t634;
	t913 = t521 * pkin(1);
	t912 = t537 * pkin(1);
	t911 = -0.2e1 * t926;
	t909 = t488 / t948;
	t908 = t491 * t615;
	t535 = 0.1e1 / t536 ^ 2;
	t907 = t535 * (pkin(1) * t817 + t873);
	t564 = t817 + t899;
	t906 = t535 * t564 * pkin(1);
	t904 = t564 * t723;
	t876 = t724 * t653;
	t845 = pkin(7) * t876;
	t773 = -0.12e2 * t845;
	t902 = t773 * t940;
	t901 = t582 * t615;
	t891 = t652 * t718;
	t884 = t684 * t720;
	t883 = t684 * t723;
	t872 = -t612 + t595;
	t848 = -0.6e1 * t637;
	t844 = t681 * t922;
	t842 = pkin(7) * t884;
	t840 = pkin(7) * t879;
	t508 = 0.1e1 / t723;
	t838 = t508 * t944;
	t836 = -0.8e1 * t893;
	t832 = 0.3e1 * t892;
	t831 = -0.4e1 * t890;
	t830 = -0.2e1 * t890;
	t829 = 0.8e1 * t884;
	t826 = -0.2e1 * t879;
	t822 = t572 * t639;
	t820 = pkin(1) * t881;
	t818 = t582 * t638;
	t815 = t634 * t639;
	t814 = 0.64e2 * t893;
	t811 = -0.32e2 * t891;
	t808 = -0.4e1 * t851;
	t805 = t615 * t909;
	t802 = t632 * t876;
	t801 = t648 * t683 * t728;
	t800 = t632 * t890;
	t797 = t682 * t884;
	t787 = -t909 / 0.2e1;
	t786 = t508 * t941;
	t782 = pkin(7) * t827;
	t781 = pkin(7) * t826;
	t780 = pkin(7) * t825;
	t778 = 0.32e2 / 0.3e1 * t718;
	t775 = t885 * t945;
	t774 = -0.48e2 * t845;
	t768 = t882 * t921;
	t766 = 0.4e1 * t803;
	t609 = t695 + t700 + t856;
	t555 = t609 + t616 + t758;
	t597 = t612 - pkin(1);
	t499 = -t555 * t595 + t904 + (t597 * t855 + t609 * t888) * pkin(3) + (-t720 + (0.2e1 * t649 - 0.4e1) * t716 + t750) * pkin(1);
	t498 = 0.1e1 / t499 ^ 2;
	t578 = t695 + t580;
	t528 = t578 * t614 + 0.2e1 * t822;
	t531 = t578 * t684 + (t929 - 0.2e1) * t614 * pkin(1);
	t562 = pkin(1) + t872;
	t500 = t528 * t682 + t531 * t638 + t562 * t723;
	t764 = pkin(3) / (t498 * t500 ^ 2 + 0.1e1) * t536 * t717;
	t761 = t485 / t488 * t493 * t508;
	t760 = t615 * t649 * t683 * t727;
	t759 = t652 * t798;
	t753 = 0.64e2 / 0.3e1 * t591 * t724;
	t752 = t652 * t778;
	t748 = -0.24e2 * t760;
	t744 = 0.2e1 / t499 * t764;
	t743 = -0.2e1 * t498 * t500 * t764;
	t650 = t682 ^ 2;
	t618 = pkin(7) * t850;
	t588 = -0.2e1 * t844 * t925;
	t579 = t720 * t775 * t924;
	t1 = [0, 0; 0, 0; 0.1e1 + ((-t904 + t562 * t838 - 0.2e1 * pkin(1) * t572 * t650 + t528 * t684 + (-t578 - 0.8e1 * t821) * t612) * t919 + t500 * t906) * t744 + ((t872 * t723 + t564 * t838 + (t555 * t614 + 0.4e1 * t822) * t682 + (t844 * t695 + (t609 * t684 + t900 * t946) * pkin(3)) * t683) * t919 + t499 * t906) * t743 + t761 * t944 + ((((0.12e2 * t650 * t653 * t921 + t589 * t831 + t627 * t781 + t651 * t853) * t813 + 0.12e2 * t549 * t890 + (t918 * t813 + t938) * t639 + (t545 * t824 + t643 * t828) * pkin(7)) * t723 + t494 * t838 + (((t606 * t849 + t780 + t831) * t836 + (-t545 * t639 + t600 * t782 - 0.4e1 * t759) * t848) * t723 + t814 * t902) * t615 + (0.24e2 * (-pkin(7) * t651 * t778 - 0.16e2 * t593 * t840 - 0.4e1 * t607 * t815 - t652 * t753) * t892 - 0.64e2 * t651 * t768 - 0.96e2 * t607 * t800 - 0.48e2 * t544 * t840 + t913 * t928 + ((-t684 * t820 + t781 + t830) * t814 + 0.48e2 * (-t544 * t639 + t607 * t782 - 0.4e1 * t800) * t637) * t615) * t818 + ((0.2e1 * (-0.2e1 * t631 * t684 - t622 + t774 + t811) * t894 + 0.8e1 * (-t559 * t684 + t565 * t911) * t803 + (-0.28e2 * t518 * t884 - 0.6e1 * t522 * t926 + t568 * t774 + t633 * t811) * t832 + t615 * (-t527 * t926 - 0.4e1 * t542 * t884 - 0.4e1 * t643 * t845) * t847 + t596 * t931 + t546 * t773 - 0.6e1 * t516 * t884 - t510 * t926 + (-0.4e1 * t804 - t819) * pkin(1)) * t943 - t489 * pkin(1) + ((-0.8e1 * t538 * t884 + t638 * t752) * t813 - 0.96e2 * t632 * t891 * t638 + t550 * t774 + 0.12e2 * t517 * t884 + (t505 * t847 + t520 * t835 + (-0.24e2 * t618 + 0.64e2 * t797) * t894 + (0.48e2 * t548 * t892 + 0.6e1 * t515) * pkin(7)) * pkin(1) + ((t581 * t928 + t586 * t911) * t836 + (-0.4e1 * t543 * t926 + t552 * t829 + 0.24e2 * t653 * t776) * t848) * t615) * t723) * t682) * t920 + ((t650 * t648 * t823 + (t639 * t642 + t830) * t834 + 0.4e1 * t759 + t626 * t780 + t577 * t639) * t723 + t502 * t838 + t812 * t902 + ((-0.8e1 / 0.3e1 * t890 + t782 - 0.2e1 * t815) * t812 - 0.24e2 * t800 - 0.24e2 * t601 * t840 - 0.6e1 * t684 * t912) * t818 + (0.24e2 * (-t582 * t643 - t683 * t914) * t845 + ((0.16e2 * t581 * t892 - 0.2e1 * t556) * t723 + (-0.144e3 * t561 * t892 - 0.24e2 * t539) * t582 * t720) * t684 + (0.4e1 * t524 * t681 * t914 - t741 * t582 - t496 + ((0.8e1 * pkin(3) * t649 * t886 + 0.4e1 * t554) * t723 + (-0.48e2 * t569 * t892 - 0.6e1 * t525) * t582) * pkin(7)) * pkin(1)) * t682 + ((t836 * t639 - 0.4e1 * ((pkin(7) * t930 + t683 * t775) * t720 + (-0.2e1 * t587 * t923 - t626 * t684) * pkin(1)) * t637) * t723 + ((t618 - 0.8e1 * t797) * t835 + (-0.8e1 * pkin(7) * t763 - 0.8e1 * t620 * t885 + (-t566 * t923 - t601 * t817) * t946) * t847) * t582) * t615) * t787) * t939, ((t576 * t682 * t849 + t562 * t786) * t919 - t500 * t907 + ((t682 * t723 - t531) * t681 * t919 + (t883 / 0.2e1 + (t614 * t936 + t578) * t682 / 0.2e1 + (t653 * t947 - pkin(1) + t922) * t638) * t534 * t683) * pkin(3)) * t744 + ((t612 * t723 + t564 * t786 - (0.4e1 * t604 + t617) * t595 - 0.2e1 * t649 * t843 + (t576 * t930 + t765) * pkin(1) + ((-t555 * t684 + t597 * t936) * t683 + (-t609 * t682 - t883) * t681) * pkin(3)) * t919 - t499 * t907) * t743 + t761 * t941 + (((-0.96e2 * t570 * t801 * t915 - 0.24e2 * t504 * t799 + t520 * t748 + t588 * t767) * t723 + t494 * t786 + (0.6e1 * t501 * t799 + 0.12e2 * t514 * t760 + 0.8e1 * t532 * t801 + t579 * t766) * t943) * t920 + ((-t613 * t681 * t653 - 0.8e1 * t526 * t799 + t588 * t834 + t748 * t915) * t723 + t502 * t786 + 0.6e1 * (t513 * t765 + 0.4e1 * t573 * t760 + t579 * t833) * t582) * t787 + (((0.8e1 * t503 * t901 + t723 * t839 + t489) * t920 + (0.6e1 * t512 * t901 + t723 * t837 + t496) * t787) * t683 + ((((-t646 + t827) * t767 + (t592 * t827 + t603 * t808 - t755) * t813 - 0.16e2 * t590 * t841 + t541 * t824 + t533 * t806 - t747) * t920 + ((t859 + t826) * t834 + t588 * t932 + t625 * t807 - t754) * t787 + (-0.3e1 * (t602 * t808 + 0.8e1 * t608 * t879 - t533 + t783) * t908 + 0.2e1 * (-t625 + 0.2e1 * t879) * t805) * t637) * t723 + (0.4e1 * ((0.2e1 * t820 + 0.4e1 * t876) * t766 + (pkin(7) * t752 + 0.16e2 * t593 * t842 + 0.4e1 * t607 * t916 + t653 * t753) * t832 + 0.8e1 * t652 * t768 + 0.12e2 * t607 * t802 + t842 * t934 + t913) * t491 - 0.3e1 * ((0.8e1 / 0.3e1 * t876 + 0.2e1 * t916) * t833 + 0.4e1 * t802 + t842 * t933 + t912) * t909 + (0.4e1 * (pkin(1) * t934 + 0.24e2 * t607 * t842 + 0.24e2 * t802) * t908 - 0.3e1 * (pkin(1) * t933 + pkin(7) * t829) * t805) * t637) * t940) * t681) * pkin(3)) * t939;];
	Ja_rot = t1;
elseif link_index == 5
	%% Symbolic Calculation
	% From jacobia_rot_5_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-05-09 22:44:00
	% EndTime: 2020-05-09 22:44:00
	% DurationCPUTime: 0.02s
	% Computational Cost: add. (41->0), mult. (71->0), div. (15->0), fcn. (116->0), ass. (0->1)
	t1 = [0, 0; 0, 0; 1, 0;];
	Ja_rot = t1;
elseif link_index == 6
	%% Symbolic Calculation
	% From jacobia_rot_6_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-05-09 22:44:11
	% EndTime: 2020-05-09 22:44:17
	% DurationCPUTime: 1.86s
	% Computational Cost: add. (22314->123), mult. (58780->234), div. (714->10), fcn. (16304->10), ass. (0->116)
	t273 = 4 * pkin(1);
	t214 = (pkin(3) ^ 2);
	t210 = 2 * t214;
	t216 = pkin(1) ^ 2;
	t217 = pkin(7) ^ 2;
	t245 = (-pkin(4) ^ 2 + t217);
	t192 = t210 + 3 * t216 + t245;
	t204 = sin(qJ(2));
	t271 = 2 * pkin(7);
	t244 = t204 * t271;
	t195 = pkin(3) * t244;
	t205 = sin(qJ(1));
	t207 = cos(qJ(2));
	t252 = t205 * t207;
	t193 = pkin(3) * t252;
	t231 = pkin(1) * t193;
	t177 = t192 + t195 - 0.4e1 * t231;
	t194 = pkin(3) * t204 + pkin(7);
	t208 = cos(qJ(1));
	t188 = t194 * t208;
	t189 = t193 - pkin(1);
	t200 = t204 ^ 2;
	t246 = t195 + t217;
	t184 = t200 * t210 - t214 + t246;
	t201 = t208 ^ 2;
	t226 = -0.2e1 * t184 * t201 - t245;
	t250 = t207 * t208;
	t238 = pkin(3) * t250;
	t253 = t205 * t194;
	t181 = t238 + t253;
	t198 = t216 + t245;
	t187 = t195 + t198;
	t190 = -0.2e1 * t231;
	t179 = t190 + t187;
	t197 = (t216 - t217) * t214;
	t212 = 0.2e1 * pkin(3);
	t237 = -0.4e1 * pkin(7) * pkin(3) * t198;
	t243 = 2 * t216;
	t218 = sqrt(0.4e1 * t197 * t200 + t204 * t237 - (t216 ^ 2) - (t217 - (t212 + pkin(4)) * pkin(4)) * (t217 + (t212 - pkin(4)) * pkin(4)) + (-(2 * t214) + t226) * t243 + (-t179 * t188 + t187 * t193) * t273);
	t257 = t181 * t218;
	t164 = -t177 * t188 + t257 + (t189 * t244 + t192 * t252) * pkin(3) + (-t216 + (0.2e1 * t200 - 0.4e1) * t214 + t226) * pkin(1);
	t272 = t164 / 0.2e1;
	t270 = 2 * pkin(1);
	t239 = pkin(1) * t188;
	t175 = t190 + t214 + t216 + 0.2e1 * t239 + t246;
	t174 = 0.1e1 / t175 ^ 2;
	t269 = 0.2e1 * t174;
	t173 = 0.1e1 / t175;
	t268 = t173 / 0.2e1;
	t202 = sin(pkin(8));
	t203 = cos(pkin(8));
	t182 = t202 * t208 - t203 * t205;
	t267 = -t182 / 0.2e1;
	t266 = t182 / 0.2e1;
	t183 = t202 * t205 + t203 * t208;
	t265 = -t183 / 0.2e1;
	t264 = t183 / 0.2e1;
	t263 = pkin(1) * t184;
	t262 = pkin(3) * t207;
	t186 = t210 + t187;
	t240 = t208 * t263;
	t171 = t194 * t186 + 0.2e1 * t240;
	t172 = t186 * t208 + (0.4e1 * t201 - 0.2e1) * t194 * pkin(1);
	t247 = -t193 + t188;
	t180 = pkin(1) + t247;
	t165 = t171 * t205 + t172 * t262 + t180 * t218;
	t222 = t164 * t266 + t165 * t265;
	t215 = 0.1e1 / pkin(3);
	t260 = t173 * t215;
	t154 = t222 * t260;
	t234 = t260 / 0.2e1;
	t161 = t182 * t165 * t234;
	t155 = t164 * t183 * t234 + t161;
	t206 = sin(pkin(9));
	t209 = cos(pkin(9));
	t153 = -t206 * t154 + t209 * t155;
	t151 = 0.1e1 / t153 ^ 2;
	t152 = t209 * t154 + t206 * t155;
	t145 = 0.1e1 / (t152 ^ 2 * t151 + 0.1e1);
	t261 = t145 / t153;
	t254 = t204 * t205;
	t191 = pkin(3) * pkin(1) * t254;
	t199 = pkin(7) * t262;
	t248 = t191 + t199;
	t176 = pkin(1) * t238 + t248;
	t259 = t174 * t176;
	t178 = t181 * pkin(1);
	t258 = t174 * t178;
	t196 = 0.2e1 * t199;
	t230 = 0.4e1 * t214 * t204 * t207;
	t185 = t196 + t230;
	t256 = t185 * t201;
	t255 = t194 * t201;
	t251 = t205 * t208;
	t249 = t208 * t218;
	t242 = t205 * t214 * pkin(7);
	t168 = 0.1e1 / t218;
	t241 = 0.2e1 * t168 * ((t184 * t251 + t255 * t262) * t243 + (t179 * t253 + t187 * t238) * pkin(1));
	t236 = t145 * t151 * t152;
	t235 = (-0.4e1 * t216 * t256 + (0.8e1 * t197 * t204 + t237) * t207 + (-0.8e1 * t248 * t188 + 0.8e1 * t207 ^ 2 * t242 + 0.4e1 * (-t179 * t250 - t187 * t254) * pkin(3)) * pkin(1)) * t168 / 0.2e1;
	t158 = -t257 + t180 * t241 + t171 * t208 + ((-t186 - 0.8e1 * t239) * t262 - 0.2e1 * t205 * t263) * t205;
	t233 = t272 + t158 / 0.2e1;
	t163 = 0.1e1 / t164 ^ 2;
	t229 = pkin(3) / (t165 ^ 2 * t163 + 0.1e1) * t175 * t215;
	t224 = t229 / t272;
	t223 = -0.2e1 * t163 * t165 * t229;
	t221 = t222 * t269;
	t220 = (t164 * t265 + t165 * t267) * t269;
	t159 = t247 * t218 + t181 * t241 + (t194 * t177 + 0.4e1 * t240) * t205 + (t214 * t208 * t244 + (t192 * t208 + t255 * t273) * pkin(3)) * t207;
	t157 = t193 * t218 + t181 * t235 - (0.4e1 * t191 + t196) * t188 - 0.2e1 * t200 * t242 + (t230 - 0.2e1 * t256) * pkin(1) + ((-t177 * t208 + t189 * t271) * t207 + (-t192 * t205 - t249) * t204) * pkin(3);
	t156 = t180 * t235 + t185 * t251 * t270 + ((t205 * t218 - t172) * t204 + (t249 + (t194 * t271 + t186) * t205 + 0.2e1 * (pkin(7) * t208 + t201 * t270 - pkin(1)) * t262) * t207) * pkin(3);
	t149 = ((t156 * t266 + t157 * t264) * t173 + t176 * t220) * t215;
	t148 = ((t156 * t264 + t157 * t267) * t173 + t176 * t221) * t215;
	t147 = (-t178 * t220 + ((t159 / 0.2e1 - t165 / 0.2e1) * t183 + t233 * t182) * t173) * t215;
	t146 = t161 + (-t178 * t221 + (t159 * t267 + t233 * t183) * t173) * t215;
	t1 = [0, 0; 0, 0; 0.1e1 + (t158 * t268 + t165 * t258) * t224 + (t159 * t268 + t164 * t258) * t223 + (-t209 * t146 + t206 * t147) * t261 - (t206 * t146 + t209 * t147) * t236, (t156 * t268 - t165 * t259) * t224 + (t157 * t268 - t164 * t259) * t223 + (-t209 * t148 + t206 * t149) * t261 - (t206 * t148 + t209 * t149) * t236;];
	Ja_rot = t1;
elseif link_index == 7
	%% Symbolic Calculation
	% From jacobia_rot_7_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-05-09 22:44:00
	% EndTime: 2020-05-09 22:44:00
	% DurationCPUTime: 0.01s
	% Computational Cost: add. (3->0), mult. (6->0), div. (5->0), fcn. (6->0), ass. (0->1)
	t1 = [0, 0; 0, 0; 0, 1;];
	Ja_rot = t1;
elseif link_index == 8
	%% Symbolic Calculation
	% From jacobia_rot_8_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-05-09 22:44:00
	% EndTime: 2020-05-09 22:44:01
	% DurationCPUTime: 0.02s
	% Computational Cost: add. (45->5), mult. (75->7), div. (17->2), fcn. (124->4), ass. (0->9)
	t27 = sin(pkin(8));
	t28 = cos(pkin(8));
	t29 = sin(qJ(1));
	t30 = cos(qJ(1));
	t25 = t27 * t30 - t28 * t29;
	t26 = t27 * t29 + t28 * t30;
	t31 = t25 ^ 2 / t26 ^ 2;
	t22 = 0.1e1 / (0.1e1 + t31);
	t1 = [0, 0; 0, 0; -t22 * t31 - t22 + 0.1e1, 0;];
	Ja_rot = t1;
elseif link_index == 9
	%% Symbolic Calculation
	% From jacobia_rot_9_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-05-09 22:44:21
	% EndTime: 2020-05-09 22:44:30
	% DurationCPUTime: 3.17s
	% Computational Cost: add. (40514->96), mult. (106644->166), div. (1314->6), fcn. (29780->6), ass. (0->77)
	t334 = 4 * pkin(1);
	t328 = 2 * pkin(7);
	t327 = 2 * pkin(1);
	t266 = (pkin(3) ^ 2);
	t262 = 2 * t266;
	t257 = sin(qJ(1));
	t259 = cos(qJ(2));
	t306 = t257 * t259;
	t245 = pkin(3) * t306;
	t284 = pkin(1) * t245;
	t242 = -0.2e1 * t284;
	t268 = pkin(1) ^ 2;
	t256 = sin(qJ(2));
	t246 = pkin(3) * t256 + pkin(7);
	t260 = cos(qJ(1));
	t240 = t246 * t260;
	t293 = pkin(1) * t240;
	t298 = t256 * t328;
	t247 = pkin(3) * t298;
	t269 = pkin(7) ^ 2;
	t300 = t247 + t269;
	t227 = t242 + t266 + t268 + 0.2e1 * t293 + t300;
	t323 = 0.1e1 / t227 / 0.2e1;
	t252 = t256 ^ 2;
	t236 = t252 * t262 - t266 + t300;
	t318 = pkin(1) * t236;
	t317 = pkin(3) * t259;
	t226 = 0.1e1 / t227 ^ 2;
	t304 = t259 * t260;
	t292 = pkin(3) * t304;
	t307 = t256 * t257;
	t243 = pkin(3) * pkin(1) * t307;
	t251 = pkin(7) * t317;
	t302 = t243 + t251;
	t313 = t226 * (pkin(1) * t292 + t302);
	t308 = t246 * t257;
	t233 = t292 + t308;
	t312 = t226 * t233 * pkin(1);
	t299 = -pkin(4) ^ 2 + t269;
	t250 = t268 + t299;
	t239 = t247 + t250;
	t231 = t242 + t239;
	t249 = (t268 - t269) * t266;
	t264 = 0.2e1 * pkin(3);
	t253 = t260 ^ 2;
	t279 = -0.2e1 * t236 * t253 - t299;
	t291 = -0.4e1 * pkin(7) * pkin(3) * t250;
	t297 = 2 * t268;
	t270 = sqrt(0.4e1 * t249 * t252 + t256 * t291 - (t268 ^ 2) - (t269 - (t264 + pkin(4)) * pkin(4)) * (t269 + (t264 - pkin(4)) * pkin(4)) + (-(2 * t266) + t279) * t297 + (-t231 * t240 + t239 * t245) * t334);
	t311 = t233 * t270;
	t248 = 0.2e1 * t251;
	t283 = 0.4e1 * t266 * t256 * t259;
	t237 = t248 + t283;
	t310 = t237 * t253;
	t309 = t246 * t253;
	t305 = t257 * t260;
	t303 = t260 * t270;
	t301 = -t245 + t240;
	t296 = t257 * t266 * pkin(7);
	t220 = 0.1e1 / t270;
	t295 = 0.2e1 * t220 * ((t236 * t305 + t309 * t317) * t297 + (t231 * t308 + t239 * t292) * pkin(1));
	t294 = t260 * t318;
	t288 = (-0.4e1 * t268 * t310 + (0.8e1 * t249 * t256 + t291) * t259 + (-0.8e1 * t302 * t240 + 0.8e1 * t259 ^ 2 * t296 + 0.4e1 * (-t231 * t304 - t239 * t307) * pkin(3)) * pkin(1)) * t220 / 0.2e1;
	t244 = t262 + 3 * t268 + t299;
	t229 = t244 + t247 - 0.4e1 * t284;
	t241 = t245 - pkin(1);
	t216 = -t229 * t240 + t311 + (t241 * t298 + t244 * t306) * pkin(3) + (-t268 + (0.2e1 * t252 - 0.4e1) * t266 + t279) * pkin(1);
	t215 = 0.1e1 / t216 ^ 2;
	t238 = t262 + t239;
	t223 = t238 * t246 + 0.2e1 * t294;
	t224 = t238 * t260 + (0.4e1 * t253 - 0.2e1) * t246 * pkin(1);
	t232 = pkin(1) + t301;
	t217 = t223 * t257 + t224 * t317 + t232 * t270;
	t282 = 0.1e1 / (t215 * t217 ^ 2 + 0.1e1) * t227;
	t277 = 0.2e1 / t216 * t282;
	t276 = -0.2e1 * t215 * t217 * t282;
	t1 = [0, 0; 0, 0; 0.1e1 + ((-t311 + t232 * t295 + t223 * t260 + ((-t238 - 0.8e1 * t293) * t317 - 0.2e1 * t257 * t318) * t257) * t323 + t217 * t312) * t277 + ((t301 * t270 + t233 * t295 + (t246 * t229 + 0.4e1 * t294) * t257 + (t266 * t260 * t298 + (t244 * t260 + t309 * t334) * pkin(3)) * t259) * t323 + t216 * t312) * t276, ((t232 * t288 + t237 * t305 * t327 + ((t257 * t270 - t224) * t256 + (t303 + (t246 * t328 + t238) * t257 + 0.2e1 * (pkin(7) * t260 + t253 * t327 - pkin(1)) * t317) * t259) * pkin(3)) * t323 - t217 * t313) * t277 + ((t245 * t270 + t233 * t288 - (0.4e1 * t243 + t248) * t240 - 0.2e1 * t252 * t296 + (t283 - 0.2e1 * t310) * pkin(1) + ((-t229 * t260 + t241 * t328) * t259 + (-t244 * t257 - t303) * t256) * pkin(3)) * t323 - t216 * t313) * t276;];
	Ja_rot = t1;
elseif link_index == 10
	%% Symbolic Calculation
	% From jacobia_rot_10_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-05-09 22:45:11
	% EndTime: 2020-05-09 22:46:09
	% DurationCPUTime: 19.43s
	% Computational Cost: add. (183784->623), mult. (598796->1005), div. (1486->18), fcn. (73530->6), ass. (0->435)
	t806 = pkin(3) ^ 2;
	t811 = pkin(1) ^ 2;
	t813 = pkin(7) ^ 2;
	t955 = t811 - t813;
	t711 = t955 * t806;
	t774 = cos(qJ(1));
	t1029 = pkin(7) * t774;
	t801 = pkin(4) ^ 2;
	t772 = sin(qJ(1));
	t773 = cos(qJ(2));
	t989 = t772 * t773;
	t701 = pkin(3) * t989;
	t860 = pkin(1) * t701;
	t965 = t811 / 0.3e1 + t813;
	t648 = -0.4e1 / 0.9e1 * t860 + 0.4e1 / 0.9e1 * t806 - t801 / 0.9e1 + t965;
	t752 = -t801 / 0.6e1;
	t761 = 0.2e1 / 0.3e1 * t806;
	t840 = t813 - t860;
	t656 = t752 + t761 + t840;
	t760 = 0.4e1 / 0.3e1 * t806;
	t734 = t811 + t813;
	t754 = -t801 / 0.3e1;
	t887 = t754 + t734;
	t690 = t760 + t887;
	t724 = -t811 / 0.3e1 + t813;
	t861 = -0.2e1 * t701;
	t743 = t774 ^ 2;
	t977 = t811 * t743;
	t919 = 0.6e1 * t977;
	t742 = t774 * t743;
	t815 = pkin(1) * t811;
	t993 = t742 * t815;
	t933 = pkin(7) * t993;
	t950 = 0.4e1 * t1029;
	t982 = (pkin(7) + pkin(1)) * (pkin(7) - pkin(1));
	t600 = 0.4e1 * t933 + t648 * t919 + t690 * t982 + (t656 * t950 + t724 * t861) * pkin(1);
	t789 = 0.6e1 * t811;
	t851 = -0.4e1 * t860;
	t756 = -0.2e1 / 0.3e1 * t801;
	t797 = 0.2e1 * t813;
	t886 = t756 + t761 + t797;
	t819 = t806 ^ 2;
	t885 = t756 + t734;
	t970 = (t761 + t885) * t734 + t819;
	t612 = t690 * t851 + (t789 + t886) * t806 + t970;
	t725 = 0.10e2 / 0.3e1 * t811;
	t624 = (t725 + t886) * t806 + t970;
	t688 = -0.2e1 * t860;
	t764 = -t806 / 0.3e1;
	t722 = t764 + t813;
	t661 = t722 * t688;
	t983 = (pkin(7) + pkin(3)) * (pkin(7) - pkin(3));
	t626 = t690 * t983 + t661;
	t733 = -0.3e1 * t806 + t813;
	t871 = 0.8e1 * t933;
	t674 = t733 * t871;
	t883 = t806 + t734;
	t699 = -t801 + t883;
	t729 = pkin(1) * t774;
	t705 = t729 + pkin(7);
	t726 = t734 ^ 2;
	t809 = t811 ^ 2;
	t775 = 0.15e2 * t809;
	t776 = 0.15e2 * t811;
	t812 = t813 ^ 2;
	t793 = 0.3e1 * t812;
	t818 = pkin(3) * t806;
	t803 = t818 ^ 2;
	t1036 = 0.4e1 * t743;
	t653 = t688 + t690;
	t957 = -t806 + t813;
	t710 = t957 * t811;
	t944 = 0.4e1 * t729;
	t599 = pkin(7) * t653 * t944 + t710 * t1036 + t612;
	t945 = 0.2e1 * t729;
	t709 = pkin(7) * t945;
	t736 = -0.3e1 * t811 + t813;
	t920 = 0.4e1 * t977;
	t660 = t709 + t920 + t736;
	t771 = sin(qJ(2));
	t739 = t771 ^ 2;
	t738 = t771 * t739;
	t997 = t738 * t818;
	t930 = 0.8e1 * t997;
	t727 = pkin(3) * t771;
	t941 = 0.6e1 * t727;
	t836 = t599 * t941 + t660 * t930;
	t796 = 0.3e1 * t813;
	t958 = -t801 + t806;
	t884 = t796 + t958;
	t904 = 0.12e2 * t977;
	t979 = t806 * t739;
	t905 = 0.12e2 * t979;
	t583 = t600 * t905 + t674 + t626 * t904 + t803 + (t776 + t884) * t819 + (t884 * t789 + t958 * t797 + t775 + t793) * t806 + t726 * t699 + t836 * t705 + 0.6e1 * (t612 * t1029 - t624 * t701) * pkin(1);
	t1003 = t705 * t771;
	t716 = 0.3e1 * t806 + t734;
	t1001 = t716 * t772;
	t790 = 0.3e1 * t811;
	t961 = t790 + t813;
	t715 = t806 + t961;
	t728 = pkin(3) * t773;
	t673 = t715 * t728;
	t1019 = pkin(1) * t772;
	t676 = t728 - t1019;
	t910 = t811 * t728;
	t855 = t743 * t910;
	t611 = -0.2e1 * t855 + t673 + (0.2e1 * t676 * t1029 - t1001) * pkin(1);
	t1041 = -0.4e1 * t611;
	t670 = -t772 * t815 + t910;
	t1007 = t670 * t743;
	t1045 = 0.2e1 * pkin(7);
	t939 = 0.2e1 * t811;
	t732 = t806 + t939;
	t987 = t773 * t774;
	t911 = pkin(3) * t987;
	t613 = -t955 * t728 + 0.2e1 * t1007 + (t911 * t1045 + t732 * t772) * pkin(1);
	t641 = -pkin(1) * t1001 + t673;
	t1033 = 0.4e1 * t809;
	t918 = 0.8e1 * t811 * t818;
	t703 = pkin(3) * t1033 + t918;
	t893 = t815 * t983;
	t643 = t703 * t773 + 0.4e1 * t772 * t893;
	t787 = 0.5e1 * t809;
	t953 = t812 + t819;
	t777 = 0.10e2 * t811;
	t962 = t777 + t797;
	t975 = t813 * t811;
	t658 = t806 * t962 + t787 + t953 + 0.6e1 * t975;
	t784 = 0.5e1 * t819;
	t666 = t784 + (t777 + 0.6e1 * t813) * t806 + t726;
	t897 = t705 * t997;
	t858 = -0.8e1 * t897;
	t926 = -0.4e1 * t979;
	t589 = t613 * t926 + t643 * t743 + (t1003 * t1041 + (-t658 + t871) * t773) * pkin(3) + (-0.4e1 * t641 * t1029 + (t666 + t858) * t772) * pkin(1);
	t671 = t727 + t705;
	t1051 = 0.4e1 * pkin(1);
	t1031 = pkin(7) * t771;
	t951 = 0.2e1 * t1031;
	t706 = pkin(3) * t951;
	t952 = t813 - t801;
	t714 = t811 + t952;
	t669 = t706 + t714;
	t645 = t688 + t669;
	t704 = t727 + pkin(7);
	t684 = t704 * t774;
	t799 = 0.2e1 * pkin(3);
	t1037 = -0.2e1 * t743;
	t925 = 0.2e1 * t979;
	t659 = t706 + t925 + t957;
	t844 = t659 * t1037 - t952;
	t901 = -0.4e1 * pkin(7) * pkin(3) * t714;
	t596 = 0.4e1 * t711 * t739 + t771 * t901 - t809 - (t813 - (t799 + pkin(4)) * pkin(4)) * (t813 + (t799 - pkin(4)) * pkin(4)) + (-0.2e1 * t806 + t844) * t939 + (-t645 * t684 + t669 * t701) * t1051;
	t814 = sqrt(t596);
	t576 = t583 * t671 + t589 * t814;
	t1053 = t576 ^ 2;
	t1052 = 0.2e1 * pkin(1);
	t1050 = 0.4e1 * pkin(3);
	t916 = pkin(1) * t684;
	t623 = t688 + t706 + t883 + 0.2e1 * t916;
	t622 = 0.1e1 / t623 ^ 2;
	t1049 = -0.2e1 * t622;
	t1039 = 0.8e1 * t671;
	t1004 = t704 * t772;
	t651 = t911 + t1004;
	t1008 = t651 * t814;
	t785 = 0.2e1 * t806;
	t698 = t785 + t790 + t952;
	t642 = t698 + t706 + t851;
	t686 = t701 - pkin(1);
	t586 = -t642 * t684 + t1008 + (t686 * t951 + t698 * t989) * pkin(3) + (-t811 + (0.2e1 * t739 - 0.4e1) * t806 + t844) * pkin(1);
	t1048 = 0.2e1 / t586;
	t1000 = t726 * (-t806 + t714);
	t657 = 0.4e1 / 0.3e1 * t977 + t709 + t724;
	t731 = -t801 - t806;
	t713 = t796 + t731;
	t1002 = t713 * t811;
	t683 = 0.10e2 * t1002;
	t788 = 0.7e1 * t811;
	t737 = t739 ^ 2;
	t998 = t737 * t819;
	t999 = t731 * t813;
	t1047 = 0.7e1 * t803 + (t788 + t713) * t784 + (t683 + 0.21e2 * t809 + 0.9e1 * t812 + 0.6e1 * t999) * t806 + t1000 - 0.24e2 * t657 * t998;
	t753 = -t801 / 0.4e1;
	t1046 = t753 + t806 / 0.2e1;
	t1044 = -0.2e1 * pkin(1);
	t765 = -0.2e1 / 0.3e1 * t806;
	t632 = t784 + (0.5e1 * t811 + t713) * t785 + (t765 + t885) * t734;
	t1009 = t632 * t772;
	t1038 = -0.8e1 * t742;
	t723 = t765 + t813;
	t620 = t819 + (t756 + t765 + t962) * t806 + t787 + 0.2e1 * t1002 + t813 * (t756 + t723);
	t616 = t620 * t728;
	t689 = 0.8e1 / 0.3e1 * t806 + t887;
	t691 = t754 + t761 + t961;
	t630 = -t689 * t1019 + t691 * t728;
	t768 = t811 / 0.2e1;
	t697 = 0.5e1 / 0.6e1 * t806 + t768 + t752;
	t940 = 0.2e1 * t728;
	t639 = t983 * t1019 + t697 * t940;
	t720 = pkin(7) * t728;
	t867 = t815 * t720;
	t922 = -0.4e1 * t977;
	t592 = t867 * t1038 + t639 * t922 + t616 + (t630 * t950 - t1009) * pkin(1);
	t1042 = -0.6e1 * t592;
	t800 = t801 ^ 2;
	t956 = t809 + t812;
	t960 = t797 - t801;
	t976 = t813 * t801;
	t837 = t960 * t811 + t800 / 0.6e1 + t956 - t976;
	t833 = 0.5e1 / 0.6e1 * t819 + t837;
	t631 = (t725 + t960) * t806 + t833;
	t1040 = 0.6e1 * t631;
	t1035 = 0.4e1 * t771;
	t1034 = -0.8e1 * t774;
	t1032 = pkin(1) * pkin(7);
	t1030 = pkin(7) * t772;
	t1028 = pkin(7) * t809;
	t574 = 0.1e1 / t576;
	t1027 = t574 / 0.2e1;
	t1026 = t574 / 0.4e1;
	t575 = 0.1e1 / t1053;
	t1025 = -t575 / 0.4e1;
	t621 = 0.1e1 / t623;
	t1024 = t621 / 0.2e1;
	t868 = 0.20e2 / 0.3e1 * t811;
	t795 = 0.4e1 * t813;
	t890 = 0.2e1 / 0.3e1 * t801 + t761 + t795;
	t891 = 0.4e1 / 0.3e1 * t801 + t760 - 0.2e1 * t813;
	t1023 = t819 / 0.2e1 - (-t868 + t890) * t806 / 0.2e1 + 0.3e1 / 0.2e1 * t809 - t891 * t811 / 0.2e1 - t812 / 0.2e1;
	t1022 = -t814 / 0.4e1;
	t1021 = t814 / 0.4e1;
	t1020 = pkin(1) * t724;
	t1018 = pkin(3) * t814;
	t783 = -0.5e1 * t801;
	t786 = 0.7e1 * t809;
	t967 = t800 / 0.2e1 - t819 / 0.2e1;
	t850 = -0.3e1 * t976 + t793 + t967;
	t757 = -0.3e1 / 0.2e1 * t801;
	t966 = t757 + t796;
	t971 = t734 * ((t757 + t797) * t811 - 0.3e1 / 0.2e1 * t976 + t956 + t967) + t803;
	t608 = (t788 + t966) * t819 + (t786 + (t783 + 0.10e2 * t813) * t811 + t850) * t806 + t971;
	t1017 = t608 * pkin(1);
	t1016 = -0.2e1 * t1032;
	t680 = t813 + t806 / 0.4e1 + t811 / 0.4e1 - t801 / 0.8e1;
	t963 = 0.4e1 / 0.7e1 * t813 - t801 / 0.7e1;
	t605 = -0.32e2 / 0.21e2 * t680 * t860 + 0.5e1 / 0.42e2 * t819 + (0.16e2 / 0.21e2 * t811 + t963) * t806 + t809 / 0.7e1 + t963 * t811 + t812 - 0.3e1 / 0.7e1 * t976 + t800 / 0.42e2;
	t682 = t965 + t1046;
	t766 = 0.4e1 / 0.3e1 * t811;
	t609 = -0.8e1 / 0.3e1 * t682 * t860 + 0.5e1 / 0.18e2 * t819 + (t766 + t754) * t806 + t812 - t809 / 0.3e1 + t800 / 0.18e2 + (t760 + 0.2e1 / 0.3e1 * t811 + t756) * t813;
	t654 = -t819 / 0.6e1 + t837;
	t964 = t768 + t813;
	t655 = -0.2e1 / 0.3e1 * t860 + t753 + t964;
	t718 = (t795 + t801) * t811;
	t755 = -t801 / 0.2e1;
	t696 = t755 + t883;
	t862 = -0.4e1 * t701;
	t845 = t696 * t862;
	t863 = 0.16e2 * t933;
	t741 = t743 ^ 2;
	t978 = t809 * t741;
	t923 = 0.8e1 * t978;
	t588 = t723 * t923 + t655 * t863 + 0.14e2 * t605 * t977 - t955 * t819 + (t718 - 0.10e2 / 0.3e1 * t809 + 0.2e1 * t812 - t976) * t806 + t654 * t982 + (0.6e1 * t609 * t1029 + t724 * t845) * pkin(1);
	t597 = -0.6e1 * t631 * t860 + (t775 + (-0.9e1 * t801 + 0.18e2 * t813) * t811 + t850) * t806 + (t776 + t966) * t819 + t971;
	t841 = pkin(1) * t845;
	t954 = t812 - t809;
	t603 = t722 * t841 - t803 + (-t725 - t952) * t819 + (t718 + t819 / 0.6e1 - t800 / 0.6e1 + t954) * t806 + t654 * t813;
	t823 = pkin(7) * t813;
	t712 = -0.12e2 * pkin(7) * t815 + t1051 * t823;
	t721 = -0.8e1 * t809 + 0.12e2 * t975;
	t619 = t712 * t774 + t721 * t743 + t863 + t923 + t956 - 0.6e1 * t975;
	t633 = t688 * t983 + t696 * t733;
	t685 = (-0.6e1 * t806 * t813 + t953) * t809;
	t730 = -0.30e2 * t801 + 0.60e2 * t813;
	t782 = -0.2e1 * t801;
	t959 = t800 - t819;
	t849 = -0.6e1 * t976 + 0.6e1 * t812 + t959;
	t794 = 0.8e1 * t813;
	t646 = t815 * t862 + t1033 + (0.4e1 * t806 + t782 + t794) * t811;
	t652 = -t811 + t840 + t1046;
	t601 = t871 + t646 * t743 + t696 * t736 + (t652 * t950 + t861 * t982) * pkin(1);
	t899 = t601 * t997;
	t614 = t841 + (t789 + t960) * t806 + t833;
	t629 = t696 * t983 + t661;
	t947 = pkin(7) * t729;
	t902 = 0.6e1 * t947;
	t590 = t614 * t902 + t629 * t904 + t597 + t674;
	t914 = t590 * t727;
	t572 = 0.16e2 * t685 * t741 + 0.32e2 * t633 * t933 + 0.24e2 * t603 * t977 + (t782 + t795 + 0.28e2 * t811) * t803 + t699 * t1000 + (0.24e2 * t588 * t739 + t730 * t809 + t849 * t789 + t959 * t797 - 0.6e1 * t812 * t801 + 0.28e2 * t815 ^ 2 + 0.4e1 * t823 ^ 2) * t806 + (0.32e2 * t899 + 0.8e1 * t914) * t705 + 0.8e1 * (t597 * t1029 - t608 * t701) * pkin(1) + (0.16e2 * t619 * t737 + t730 * t811 + 0.70e2 * t809 + t819 + t849) * t819;
	t678 = 0.7e1 / 0.6e1 * t806 + t752 + t964;
	t762 = t806 / 0.3e1;
	t888 = t752 + t762 + t813;
	t681 = t766 + t888;
	t625 = -t678 * t1019 + t681 * t728;
	t692 = t811 + t888;
	t717 = t785 - t955;
	t635 = t692 * t728 - t717 * t1019 / 0.2e1;
	t889 = t801 / 0.3e1 + t762 + t797;
	t848 = -0.8e1 / 0.3e1 * t978 - t711 - 0.5e1 / 0.3e1 * t809 + t889 * t811 + t813 * (t754 + t722);
	t949 = -0.4e1 * t1028;
	t591 = t772 * t742 * t949 + t625 * t920 + t848 * t728 + (t772 * t1023 + t635 * t950) * pkin(1);
	t602 = -pkin(1) * t1009 + t616;
	t628 = -0.3e1 * t819 + (-t868 + t891) * t806 + t890 * t811 + t954;
	t636 = -0.5e1 / 0.3e1 * t819 + (-t811 + t889) * t806 + t813 * (t764 + t887);
	t946 = -0.2e1 * t1019;
	t604 = t628 * t728 + t636 * t946;
	t675 = t728 + 0.2e1 * t1019;
	t695 = t755 + t715;
	t607 = t736 * t728 + 0.4e1 * t1007 + (t675 * t1029 + t695 * t772) * t1052;
	t679 = t813 + 0.5e1 / 0.2e1 * t806 + 0.3e1 / 0.2e1 * t811 + t755;
	t637 = t679 * t728 + t733 * t1019 / 0.2e1;
	t842 = 0.24e2 * t722 * t978 - t803 - (0.21e2 * t811 + t713) * t819 - (t683 + t793 + 0.35e2 * t809 + 0.2e1 * t999) * t806 - (t786 + (t783 + t794 - 0.5e1 * t806) * t811 + t813 * (-t806 + t952)) * t734;
	t906 = -0.12e2 * t979;
	t577 = t637 * t863 + t607 * t858 + t591 * t906 - 0.6e1 * t604 * t977 + (t1003 * t1042 + t773 * t842) * pkin(3) + (-0.6e1 * t602 * t1029 + t1047 * t772) * pkin(1);
	t569 = t572 * t671 + t577 * t814;
	t667 = t785 + t669;
	t917 = t659 * t729;
	t615 = t667 * t704 + 0.2e1 * t917;
	t618 = t667 * t774 + (t1036 - 0.2e1) * t704 * pkin(1);
	t968 = -t701 + t684;
	t649 = pkin(1) + t968;
	t587 = t615 * t772 + t618 * t728 + t649 * t814;
	t880 = t587 * t1026;
	t835 = t586 * t1021 + t569 * t880;
	t802 = 0.1e1 / pkin(4);
	t980 = t802 / pkin(3) ^ 2;
	t898 = t621 * t980;
	t565 = t835 * t898;
	t992 = t771 * t772;
	t662 = t987 + t992;
	t562 = t662 * t565;
	t881 = t586 * t1026;
	t834 = t587 * t1022 + t569 * t881;
	t564 = t834 * t898;
	t991 = t771 * t774;
	t663 = t989 - t991;
	t559 = -t564 * t663 - t562;
	t557 = 0.1e1 / t559 ^ 2;
	t563 = t663 * t565;
	t558 = -t564 * t662 + t563;
	t555 = 0.1e1 / (t557 * t558 ^ 2 + 0.1e1);
	t1015 = t555 / t559;
	t1014 = 0.1e1 / t569 ^ 2 * t1053;
	t707 = 0.2e1 * t720;
	t986 = t773 * t806;
	t857 = t986 * t1035;
	t665 = t707 + t857;
	t935 = t806 * t1030;
	t912 = pkin(3) * t992;
	t693 = pkin(1) * t912;
	t969 = t693 + t720;
	t593 = t665 * t922 + (0.8e1 * t711 * t771 + t901) * t773 + (-0.8e1 * t969 * t684 + 0.8e1 * t773 ^ 2 * t935 + (-t645 * t987 - t669 * t992) * t1050) * pkin(1);
	t595 = 0.1e1 / t814;
	t1013 = t593 * t595;
	t1005 = t704 * t743;
	t988 = t772 * t774;
	t598 = (t1005 * t728 + t659 * t988) * t939 + (t1004 * t645 + t669 * t911) * pkin(1);
	t1012 = t595 * t598;
	t640 = pkin(1) * t911 + t969;
	t1011 = t622 * t640;
	t644 = t651 * pkin(1);
	t1010 = t622 * t644;
	t974 = t815 * t743;
	t937 = pkin(7) * t974;
	t864 = -0.12e2 * t937;
	t1006 = t671 * t772 * t864;
	t996 = t738 * t819;
	t995 = t739 * t818;
	t994 = t742 * t809;
	t990 = t771 * t806;
	t985 = t774 * t811;
	t984 = t774 * t814;
	t708 = pkin(7) * t946;
	t740 = t772 ^ 2;
	t869 = 0.32e2 / 0.3e1 * t809;
	t846 = t742 * t869;
	t847 = 0.64e2 / 0.3e1 * t680 * t815;
	t852 = t742 * t893;
	t859 = t983 * t1028;
	t865 = -0.48e2 * t937;
	t872 = pkin(7) * t920;
	t921 = -0.2e1 * t977;
	t873 = pkin(7) * t921;
	t874 = pkin(7) * t922;
	t892 = t772 * t985;
	t894 = t722 * t993;
	t907 = -0.32e2 * t994;
	t908 = 0.64e2 * t997;
	t909 = t724 * t729;
	t913 = t671 * t728;
	t915 = pkin(1) * t982;
	t924 = 0.3e1 * t979;
	t927 = 0.8e1 * t985;
	t928 = -0.2e1 * t993;
	t929 = -0.4e1 * t993;
	t931 = -0.8e1 * t997;
	t932 = 0.2e1 * t1012;
	t938 = pkin(7) * t977;
	t943 = -0.6e1 * t727;
	t560 = ((0.12e2 * t740 * t743 * t1028 + t678 * t929 + t717 * t873 + t741 * t949) * t906 + 0.12e2 * t636 * t993 + (t1023 * t906 + t1047) * t729 + (t632 * t919 + t733 * t923) * pkin(7)) * t814 + t577 * t932 + (((t695 * t945 + t872 + t929) * t931 + (-t632 * t729 + t689 * t874 - 0.4e1 * t852) * t943) * t814 + t908 * t1006) * t705 + (0.24e2 * (-pkin(7) * t741 * t869 - 0.16e2 * t682 * t938 - 0.4e1 * t696 * t909 - t742 * t847) * t979 - 0.64e2 * t741 * t859 - 0.96e2 * t696 * t894 - 0.48e2 * t631 * t938 + t1017 * t1034 + ((-t774 * t915 + t873 + t928) * t908 + 0.48e2 * (-t631 * t729 + t696 * t874 - 0.4e1 * t894) * t727) * t705) * t913 + ((0.2e1 * (-0.2e1 * t721 * t774 - t712 + t865 + t907) * t998 + 0.8e1 * (t1016 * t652 - t646 * t774) * t897 + (-0.6e1 * t609 * t1032 - 0.28e2 * t605 * t985 + t655 * t865 + t723 * t907) * t924 + t705 * (-t614 * t1032 - 0.4e1 * t629 * t985 - 0.4e1 * t733 * t937) * t941 + t685 * t1038 + t633 * t864 - 0.6e1 * t603 * t985 - t597 * t1032 + (-0.4e1 * t899 - t914) * pkin(1)) * t1039 - t572 * pkin(1) + ((-0.8e1 * t625 * t985 + t846 * t728) * t906 - 0.96e2 * t722 * t994 * t728 + t637 * t865 + 0.12e2 * t604 * t985 + (t592 * t941 + t607 * t930 + (-0.24e2 * t708 + 0.64e2 * t892) * t998 + (0.48e2 * t635 * t979 + 0.6e1 * t602) * pkin(7)) * pkin(1) + ((t1016 * t675 + t670 * t1034) * t931 + (-0.4e1 * t630 * t1032 + t639 * t927 + 0.24e2 * t743 * t867) * t943) * t705) * t814) * t772;
	t866 = t988 * t1050;
	t942 = -0.4e1 * t727;
	t570 = (t740 * t738 * t918 + (t732 * t729 + t928) * t926 + 0.4e1 * t852 + t716 * t872 + t666 * t729) * t814 + t589 * t932 + t905 * t1006 + ((-0.8e1 / 0.3e1 * t993 + t874 - 0.2e1 * t909) * t905 - 0.24e2 * t894 - 0.24e2 * t690 * t938 - 0.6e1 * t624 * t729) * t913 + (0.24e2 * (-t1018 * t773 - t671 * t733) * t937 + ((0.16e2 * t670 * t979 - 0.2e1 * t643) * t814 + (-0.144e3 * t648 * t979 - 0.24e2 * t626) * t671 * t811) * t774 + (t611 * t1018 * t1035 - t836 * t671 - t583 + ((0.8e1 * t728 * t979 + 0.4e1 * t641) * t814 + (-0.48e2 * t656 * t979 - 0.6e1 * t612) * t671) * pkin(7)) * pkin(1)) * t772 + ((t931 * t729 + ((pkin(7) * t1037 + t773 * t866) * t811 + (-0.2e1 * t676 * t1030 - t716 * t774) * pkin(1)) * t942) * t814 + ((t708 - 0.8e1 * t892) * t930 + (-0.8e1 * pkin(7) * t855 - 0.8e1 * t710 * t988 + (-t653 * t1030 - t690 * t911) * t1051) * t941) * t671) * t705;
	t580 = -t1008 + t649 * t932 + t659 * t740 * t1044 + t615 * t774 + (-t667 - 0.8e1 * t916) * t701;
	t936 = pkin(7) * t991;
	t581 = t968 * t814 + t651 * t932 + (t704 * t642 + 0.4e1 * t917) * t772 + (t936 * t785 + (t1005 * t1051 + t698 * t774) * pkin(3)) * t773;
	t831 = t835 * t1049;
	t878 = t587 * t1025;
	t973 = (-t644 * t831 + (t581 * t1021 + t1012 / t1048 + t560 * t880 + (t580 * t1026 + t570 * t878) * t569) * t621) * t980 + t564;
	t668 = t811 * t866 * t1031;
	t677 = pkin(3) * t936 * t1044;
	t877 = t1013 / 0.2e1;
	t895 = t722 * t974;
	t896 = t705 * t995;
	t903 = -0.4e1 * t947;
	t934 = pkin(7) * t985;
	t561 = t577 * t877 + (0.32e2 * t668 * t671 - 0.8e1 * t677 * t814) * t897 + (0.24e2 * (-0.4e1 * t657 * t996 * t1019 - t591 * t990 - t607 * t896) * t814 + (0.6e1 * t588 * t990 + 0.12e2 * t601 * t896 + 0.8e1 * t619 * t996) * t1039) * t773 + ((t572 + (t590 * t1039 + t814 * t1042) * t705) * t773 + (((t681 * t922 + t692 * t903 - t848) * t906 - 0.16e2 * t679 * t933 + t628 * t919 + t620 * t902 + ((-t736 + t922) * t931 + (t691 * t903 + 0.8e1 * t697 * t977 - t620 + t871) * t943) * t705 - t842) * t814 + ((pkin(7) * t846 + 0.4e1 * t696 * t1020 + 0.16e2 * t682 * t934 + t743 * t847) * t924 + 0.8e1 * t742 * t859 + 0.12e2 * t696 * t895 + t934 * t1040 + t1017 + (0.4e1 * (0.2e1 * t915 + 0.4e1 * t974) * t997 + (pkin(1) * t1040 + 0.24e2 * t696 * t934 + 0.24e2 * t895) * t727) * t705) * t772 * t1039) * t771) * pkin(3);
	t571 = (t677 * t926 + (-0.8e1 * t613 * t986 - t703 * t743 + ((t955 + t921) * t926 + t658 + (t715 * t944 - 0.8e1 * t993) * pkin(7)) * pkin(3)) * t771 + ((t677 + (-t715 + 0.2e1 * t977) * t727) * t942 + (pkin(3) * t1041 - 0.24e2 * t995 * t1019) * t773) * t705) * t814 + t589 * t877 + 0.6e1 * (0.4e1 * t660 * t773 * t896 + (t668 + (0.8e1 / 0.3e1 * t974 + 0.2e1 * t1020) * t912) * t925 + t600 * t857 + 0.4e1 * t895 * t912 + t690 * t668 + t624 * t693 + ((pkin(7) * t927 + t1051 * t690) * t772 * t979 + t599 * t728) * t705) * t671 + t583 * t728;
	t578 = t649 * t877 + t665 * t772 * t945 + ((t772 * t814 - t618) * t771 + (t984 + (t704 * t1045 + t667) * t772 + (t743 * t1052 - pkin(1) + t1029) * t940) * t773) * pkin(3);
	t579 = t701 * t814 + t651 * t877 - (0.4e1 * t693 + t707) * t684 - 0.2e1 * t739 * t935 + (t665 * t1037 + t857) * pkin(1) + ((t686 * t1045 - t642 * t774) * t773 + (-t698 * t772 - t984) * t771) * pkin(3);
	t972 = (t640 * t831 + (t579 * t1021 + t586 * t1013 / 0.8e1 + t561 * t880 + (t578 * t1026 + t571 * t878) * t569) * t621) * t980 - t564;
	t900 = t555 * t557 * t558;
	t882 = -t569 * t575 / 0.2e1;
	t879 = t586 * t1025;
	t585 = 0.1e1 / t586 ^ 2;
	t807 = 0.1e1 / pkin(3);
	t856 = pkin(3) / (t585 * t587 ^ 2 + 0.1e1) * t623 * t807;
	t566 = 0.1e1 / (t1014 * t596 + 0.1e1);
	t853 = t566 / t569 * t576 * t595;
	t839 = t856 * t1048;
	t838 = -0.2e1 * t585 * t587 * t856;
	t832 = -0.2e1 * pkin(4) * t566 * t802 * t807 * t1014 * t1018;
	t830 = t834 * t1049;
	t548 = (t640 * t830 + (t561 * t881 + t578 * t1022 - t587 * t1013 / 0.8e1 + (t579 * t1026 + t571 * t879) * t569) * t621) * t980;
	t546 = (-t644 * t830 + (t560 * t881 + t580 * t1022 - t587 * t1012 / 0.2e1 + (t581 * t1026 + t570 * t879) * t569) * t621) * t980;
	t1 = [0, 0; 0, 0; 0.1e1 + (t587 * t1010 + t580 * t1024) * t839 + (t586 * t1010 + t581 * t1024) * t838 + 0.2e1 * t598 * t853 + (t560 * t1027 + t570 * t882) * t832 + (t973 * t663 + (-t546 + t565) * t662) * t1015 - (-t546 * t663 - t662 * t973 + t563) * t900, (-t587 * t1011 + t578 * t1024) * t839 + (-t586 * t1011 + t579 * t1024) * t838 + t593 * t853 / 0.2e1 + (t561 * t1027 + t571 * t882) * t832 + (-t548 * t662 + t663 * t972 - t562) * t1015 - ((-t548 - t565) * t663 - t972 * t662) * t900;];
	Ja_rot = t1;
end