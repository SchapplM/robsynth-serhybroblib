% Calculate kinetic energy for
% picker2Dm2DE2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [2x1]
%   Generalized joint coordinates (joint angles)
% qJD [2x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[L1,L2,L3,L4,L5,L6,e,phi05,phi1]';
% m [11x1]
%   mass of all robot links (including the base)
% mrSges [11x3]
%  first moment of all robot links (mass times center of mass in body frames)
%  rows: links of the robot (starting with base)
%  columns: x-, y-, z-coordinates
% Ifges [11x6]
%   inertia of all robot links about their respective body frame origins, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertial_parameters_convert_par1_par2.m)
% 
% Output:
% T [1x1]
%   kinetic energy

% Quelle: HybrDyn-Toolbox
% Datum: 2020-05-09 23:02
% Revision: 73758128893bc0a8beabae04bd7e71472107ac81 (2020-05-07)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function T = picker2Dm2DE2_energykin_fixb_slag_vp2(qJ, qJD, ...
  pkin, m, mrSges, Ifges)
%% Coder Information
%#codegen
%$cgargs {zeros(2,1),zeros(2,1),zeros(9,1),zeros(11,1),zeros(11,3),zeros(11,6)}
assert(isreal(qJ) && all(size(qJ) == [2 1]), ...
  'picker2Dm2DE2_energykin_fixb_slag_vp2: qJ has to be [2x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [2 1]), ...
  'picker2Dm2DE2_energykin_fixb_slag_vp2: qJD has to be [2x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'picker2Dm2DE2_energykin_fixb_slag_vp2: pkin has to be [9x1] (double)');
assert(isreal(m) && all(size(m) == [11 1]), ...
  'picker2Dm2DE2_energykin_fixb_slag_vp2: m has to be [11x1] (double)'); 
assert(isreal(mrSges) && all(size(mrSges) == [11,3]), ...
  'picker2Dm2DE2_energykin_fixb_slag_vp2: mrSges has to be [11x3] (double)');
assert(isreal(Ifges) && all(size(Ifges) == [11 6]), ...
  'picker2Dm2DE2_energykin_fixb_slag_vp2: Ifges has to be [11x6] (double)'); 

%% Symbolic Calculation
% From energy_kinetic_fixb_linkframe_par2_matlab.m
% OptimizationMode: 2
% StartTime: 2020-05-09 19:16:38
% EndTime: 2020-05-09 19:17:06
% DurationCPUTime: 23.52s
% Computational Cost: add. (312279->671), mult. (966310->1107), div. (4524->23), fcn. (167666->28), ass. (0->483)
t1113 = 4 * pkin(1);
t965 = (pkin(3) ^ 2);
t1226 = -2 * t965;
t972 = (pkin(7) ^ 2);
t956 = -2 * t972;
t921 = sin(pkin(8));
t922 = cos(pkin(8));
t925 = sin(qJ(1));
t928 = cos(qJ(1));
t813 = t921 * t925 + t922 * t928;
t1204 = 0.1e1 / t813 ^ 2;
t1121 = qJD(1) * t928;
t1123 = qJD(1) * t925;
t801 = -t921 * t1121 + t922 * t1123;
t802 = t813 * qJD(1);
t812 = t921 * t928 - t922 * t925;
t727 = (t801 * t812 * t1204 - t802 / t813) / (t1204 * t812 ^ 2 + 0.1e1);
t1191 = t812 / 0.2e1;
t879 = pkin(1) * t928;
t1109 = 0.2e1 * t879;
t1129 = -t965 + t972;
t924 = sin(qJ(2));
t888 = t924 ^ 2;
t1165 = t888 * t965;
t1203 = 0.2e1 * t924;
t1117 = pkin(7) * t1203;
t861 = pkin(3) * t1117;
t815 = t1129 + t861 + 0.2e1 * t1165;
t960 = (pkin(4) ^ 2);
t1125 = t972 - t960;
t970 = pkin(1) ^ 2;
t866 = t970 + t1125;
t824 = t861 + t866;
t942 = 2 * t965;
t823 = t942 + t824;
t877 = pkin(3) * t924;
t859 = t877 + pkin(7);
t750 = t815 * t1109 + t823 * t859;
t892 = t928 ^ 2;
t754 = t823 * t928 + (0.4e1 * t892 - 0.2e1) * t859 * pkin(1);
t1171 = t859 * t928;
t927 = cos(qJ(2));
t1159 = t925 * t927;
t1097 = pkin(3) * t1159;
t841 = -pkin(1) + t1097;
t795 = -t841 + t1171;
t878 = pkin(3) * t927;
t1085 = -0.4e1 * pkin(3) * pkin(7) * t866;
t1172 = t815 * t892;
t1221 = 0.2e1 * pkin(3);
t1047 = pkin(1) * t1097;
t842 = -0.2e1 * t1047;
t791 = t842 + t824;
t1151 = t965 * t972;
t1218 = 4 * t970;
t893 = t965 * t1218;
t864 = t893 - 4 * t1151;
t968 = t970 ^ 2;
t731 = t864 * t888 + t924 * t1085 - t968 - (t972 - (t1221 + pkin(4)) * pkin(4)) * (t972 + (t1221 - pkin(4)) * pkin(4)) + (t956 + (2 * t960) - (4 * t965) - 0.4e1 * t1172) * t970 + (t824 * t1097 - t791 * t1171) * t1113;
t973 = sqrt(t731);
t721 = t750 * t925 + t754 * t878 + t795 * t973;
t1215 = -t721 / 0.2e1;
t1037 = -0.4e1 * t1047;
t948 = 3 * t970;
t855 = t942 + t948 + t1125;
t787 = t855 + t861 + t1037;
t1157 = t927 * t928;
t797 = pkin(3) * t1157 + t859 * t925;
t719 = -t787 * t1171 + t797 * t973 + (t841 * t1117 + t855 * t1159) * pkin(3) + (-0.2e1 * t1172 + (0.2e1 * t888 - 0.4e1) * t965 - t866) * pkin(1);
t1003 = t719 * t1191 + t813 * t1215;
t883 = t970 + t972;
t1069 = t965 + t883;
t1099 = pkin(1) * t1171;
t768 = t1069 + t842 + t861 + 0.2e1 * t1099;
t765 = 0.1e1 / t768;
t966 = 0.1e1 / pkin(3);
t1177 = t765 * t966;
t710 = t1003 * t1177;
t1190 = t813 / 0.2e1;
t1002 = t719 * t1190 + t721 * t1191;
t711 = t1002 * t1177;
t926 = sin(pkin(9));
t929 = cos(pkin(9));
t700 = -t710 * t926 + t711 * t929;
t1205 = 0.1e1 / t700 ^ 2;
t699 = t710 * t929 + t711 * t926;
t1209 = 0.1e1 / (t1205 * t699 ^ 2 + 0.1e1);
t1160 = t924 * t925;
t1198 = pkin(1) * pkin(3);
t1048 = t1160 * t1198;
t1024 = qJD(2) * t1048;
t1062 = t927 * t1121;
t1025 = t1062 * t1198;
t1223 = -t1025 + t1024;
t1142 = 0.2e1 * t1223;
t1107 = 0.2e1 * t878;
t1084 = pkin(7) * t1107;
t853 = qJD(2) * t1084;
t1078 = t853 + t1142;
t1119 = qJD(2) * t927;
t1087 = pkin(3) * t1119;
t1114 = 2 * pkin(1);
t1178 = ((t928 * t1087 - t859 * t1123) * t1114 + t1078) / t768 ^ 2;
t1192 = -t801 / 0.2e1;
t1216 = t719 / 0.2e1;
t1066 = t925 * t1121;
t1031 = t815 * t1066;
t1118 = qJD(2) * t965;
t1030 = t924 * t927 * t1118;
t1022 = 0.4e1 * t1030;
t803 = t853 + t1022;
t1173 = t803 * t892;
t1197 = pkin(7) * t925;
t1179 = ((0.8e1 * t1031 - 0.4e1 * t1173) * t970 + (t864 * t1203 + t1085) * t1119 + (0.2e1 * t927 ^ 2 * t1118 * t1197 + (-t1078 * t928 + t791 * t1123) * t859 + (t824 * t1062 + (-t791 * t1157 - t824 * t1160) * qJD(2)) * pkin(3)) * t1113) / t973;
t1058 = t1179 / 0.2e1;
t1122 = qJD(1) * t927;
t1124 = 0.2e1 * pkin(7);
t1156 = t928 * t973;
t1158 = t925 * t973;
t1186 = pkin(1) * t892;
t1196 = pkin(7) * t928;
t703 = t795 * t1058 + (-t859 * t1158 + t750 * t928) * qJD(1) + (-t815 * t1123 + t803 * t928) * t925 * t1114 + ((-t1156 + (-t823 - 0.8e1 * t1099) * t925) * t1122 + ((-t754 + t1158) * t924 + (t1156 + (t859 * t1124 + t823) * t925 + (-pkin(1) + t1196 + 0.2e1 * t1186) * t927 * t1221) * t927) * qJD(2)) * pkin(3);
t1012 = t924 * t928 - t1159;
t1120 = qJD(2) * t924;
t1064 = t925 * t1120;
t998 = t1062 - t1064;
t994 = 0.4e1 * t998;
t992 = t994 * t879;
t704 = t797 * t1058 + (-t853 * t928 + (t787 * t925 + t1156) * qJD(1)) * t859 + (t1022 + 0.4e1 * t1031 - 0.2e1 * t1173) * pkin(1) + ((t855 * t928 - t1158) * t1122 + (-t1012 * t973 - t787 * t1157 - t855 * t1160) * qJD(2) + (t841 * t1119 + t998 * t877) * t1124 + t859 * t992) * pkin(3);
t676 = (t1003 * t1178 + (-t704 * t812 / 0.2e1 + t802 * t1216 + t721 * t1192 + t703 * t1190) * t765) * t966;
t677 = (-t1002 * t1178 + (t704 * t1190 + t703 * t1191 + t719 * t1192 + t802 * t1215) * t765) * t966;
t1225 = t1209 * (-t676 * t929 + t677 * t926) / t700;
t1224 = -0.6e1 * t1025 + 0.6e1 * t1024;
t1150 = t970 * t892;
t1092 = 0.12e2 * t1150;
t1093 = 0.12e2 * t1165;
t1112 = 6 * pkin(1);
t954 = 3 * t972;
t1137 = 15 * t970 + t954;
t887 = t924 * t888;
t977 = pkin(3) * t965;
t1166 = t887 * t977;
t1052 = -0.2e1 * t1097;
t891 = t928 * t892;
t974 = pkin(1) * t970;
t1162 = t891 * t974;
t1105 = pkin(7) * t1162;
t1116 = 0.4e1 * t1196;
t1154 = (pkin(7) + pkin(1)) * (pkin(7) - pkin(1));
t1140 = t970 / 0.3e1 + t972;
t794 = -0.4e1 / 0.9e1 * t1047 + 0.4e1 / 0.9e1 * t965 - t960 / 0.9e1 + t1140;
t1016 = t972 - t1047;
t903 = -t960 / 0.6e1;
t912 = 0.2e1 / 0.3e1 * t965;
t805 = t1016 + t903 + t912;
t905 = -t960 / 0.3e1;
t1073 = t905 + t883;
t911 = 0.4e1 / 0.3e1 * t965;
t844 = t911 + t1073;
t875 = -t970 / 0.3e1 + t972;
t733 = 0.4e1 * t1105 + 0.6e1 * t794 * t1150 + t844 * t1154 + (t1052 * t875 + t805 * t1116) * pkin(1);
t1108 = 0.4e1 * t879;
t907 = -0.2e1 / 0.3e1 * t960;
t955 = 2 * t972;
t1072 = t907 + t912 + t955;
t1071 = t907 + t883;
t978 = t965 ^ 2;
t1143 = (t912 + t1071) * t883 + t978;
t947 = 6 * t970;
t746 = t844 * t1037 + t1143 + (t947 + t1072) * t965;
t799 = t842 + t844;
t863 = t1129 * t1218;
t735 = pkin(7) * t799 * t1108 + t863 * t892 + t746;
t1155 = (pkin(7) + pkin(3)) * (pkin(7) - pkin(3));
t915 = -t965 / 0.3e1;
t873 = t915 + t972;
t817 = t873 * t842;
t770 = t844 * t1155 + t817;
t894 = 0.10e2 / 0.3e1 * t970;
t771 = (t894 + t1072) * t965 + t1143;
t1100 = 0.4e1 * t1150;
t862 = pkin(7) * t1109;
t885 = -3 * t970 + t972;
t816 = t862 + t1100 + t885;
t1054 = 0.8e1 * t1105;
t882 = -3 * t965 + t972;
t832 = t882 * t1054;
t856 = -t960 + t1069;
t860 = t879 + pkin(7);
t876 = t883 ^ 2;
t930 = 15 * t968;
t937 = 18 * t972;
t938 = -2 * t960;
t940 = -6 * t960;
t971 = t972 ^ 2;
t950 = 3 * t971;
t962 = t977 ^ 2;
t717 = t733 * t1093 + t832 + t770 * t1092 + t962 + ((-t960 + t965 + t1137) * t978) + ((t930 + (t937 + t940 + 6 * t965) * t970 + t950 + (t938 + t942) * t972) * t965) + (t876 * t856) + (0.8e1 * t816 * t1166 + 0.6e1 * t735 * t877) * t860 + (-t771 * t1097 + t746 * t1196) * t1112;
t1081 = t860 * t1166;
t1045 = -0.8e1 * t1081;
t1104 = -0.4e1 * t1165;
t1170 = t860 * t924;
t1096 = t970 * t878;
t868 = 3 * t965 + t883;
t1169 = t868 * t925;
t1133 = t948 + t972;
t867 = t965 + t1133;
t831 = t867 * t878;
t1187 = pkin(1) * t925;
t835 = t878 - t1187;
t745 = -0.2e1 * t892 * t1096 + t831 + (0.2e1 * t835 * t1196 - t1169) * pkin(1);
t1004 = -t925 * t974 + t1096;
t825 = 0.2e1 * t1004;
t881 = t965 + 2 * t970;
t884 = -t970 + t972;
t748 = t884 * t878 + t825 * t892 + (t928 * t1084 + t881 * t925) * pkin(1);
t786 = -pkin(1) * t1169 + t831;
t1079 = t925 * t1155;
t1199 = 4 * t974;
t1200 = 4 * t968;
t1217 = 8 * t970;
t858 = pkin(3) * t1200 + t977 * t1217;
t788 = t1079 * t1199 + t858 * t927;
t1126 = t971 + t978;
t932 = 10 * t970;
t1136 = t932 + t955;
t1148 = t972 * t970;
t946 = 5 * t968;
t811 = t1136 * t965 + t1126 + 6 * t1148 + t946;
t941 = 5 * t978;
t952 = 6 * t972;
t821 = t941 + (t932 + t952) * t965 + t876;
t722 = t748 * t1104 + t788 * t892 + (-0.4e1 * t745 * t1170 + (-t811 + t1054) * t927) * pkin(3) + (-0.4e1 * t786 * t1196 + (t821 + t1045) * t925) * pkin(1);
t827 = t877 + t860;
t708 = t717 * t827 + t722 * t973;
t1222 = t708 ^ 2;
t1110 = pkin(7) * t879;
t1083 = 0.6e1 * t1110;
t959 = t960 ^ 2;
t1141 = t959 / 0.2e1 - t978 / 0.2e1;
t1149 = t972 * t960;
t1035 = -(3 * t1149) + t950 + t1141;
t1128 = t968 + t971;
t908 = -0.3e1 / 0.2e1 * t960;
t1145 = t883 * ((t908 + t955) * t970 - 0.3e1 / 0.2e1 * t1149 + t1128 + t1141) + t962;
t1132 = t955 - t960;
t1001 = (t1132 * t970) + t1128 - t1149 + t959 / 0.6e1;
t997 = t1001 + 0.5e1 / 0.6e1 * t978;
t779 = (t894 + t1132) * t965 + t997;
t732 = -0.6e1 * t779 * t1047 + t1145 + (t930 + ((t937 - 9 * t960) * t970) + t1035) * t965 + (t908 + t1137) * t978;
t1053 = -0.4e1 * t1097;
t906 = -t960 / 0.2e1;
t849 = t906 + t1069;
t1027 = t849 * t1053;
t1017 = pkin(1) * t1027;
t749 = t1017 + ((t947 + t1132) * t965) + t997;
t772 = t849 * t1155 + t817;
t724 = t749 * t1083 + t772 * t1092 + t732 + t832;
t1220 = 0.8e1 * t724;
t913 = t965 / 0.3e1;
t1075 = t960 / 0.3e1 + t913 + t955;
t1219 = 0.10e2 / 0.3e1 * t978 + (-t970 + t1075) * t1226 + (t915 + t1073) * t956;
t904 = -t960 / 0.4e1;
t1214 = t904 + t965 / 0.2e1;
t1213 = t954 - t960 - t965;
t1212 = qJD(1) - qJD(2);
t1026 = qJD(1) * t1048;
t1065 = t860 * t1119;
t1040 = pkin(3) * t1065;
t1211 = t1026 - t1040;
t1207 = -0.8e1 * pkin(7);
t1206 = -4 * pkin(1);
t1202 = -0.8e1 * t928;
t1201 = -0.2e1 * t928;
t706 = 0.1e1 / t708;
t1195 = t706 / 0.4e1;
t1194 = t765 / 0.2e1;
t953 = 4 * t972;
t1076 = 0.2e1 / 0.3e1 * t960 + t912 + t953;
t1077 = 0.4e1 / 0.3e1 * t960 + t911 + t956;
t895 = -0.20e2 / 0.3e1 * t970;
t1193 = t978 / 0.2e1 - (t895 + t1076) * t965 / 0.2e1 + 0.3e1 / 0.2e1 * t968 - t1077 * t970 / 0.2e1 - t971 / 0.2e1;
t1189 = -t973 / 0.4e1;
t1188 = t973 / 0.4e1;
t1185 = pkin(1) * qJD(1);
t1015 = t888 * t977 * t1065;
t1005 = -0.24e2 * t1015;
t1007 = t875 * t1024;
t1008 = t875 * t1025;
t1161 = t892 * t974;
t1106 = pkin(7) * t1161;
t1023 = t1106 * t1123;
t1009 = -0.24e2 * t1023;
t1029 = t970 * t1066;
t1018 = -0.24e2 * t1029;
t1088 = pkin(3) * t1120;
t1019 = t1088 * t1162;
t1068 = qJD(1) * t1166;
t1041 = pkin(1) * t1068;
t1021 = t925 * t1041;
t1033 = t1121 * t1155;
t1090 = pkin(1) * t1123;
t1046 = pkin(7) * t1090;
t1036 = -0.6e1 * t1046;
t1089 = pkin(1) * t1121;
t1038 = t868 * t1089;
t1043 = -0.2e1 * t1066;
t1049 = t1150 * t1198;
t1063 = t928 * t1120;
t1098 = pkin(3) * t1170;
t1144 = 0.4e1 * t1223 * t844;
t996 = t998 * pkin(3);
t991 = pkin(1) * t873 * t996 * t1150;
t1146 = t882 * t1009 - 0.24e2 * t991;
t776 = t970 * t996 * t1116;
t822 = t1087 - t1090;
t854 = -0.2e1 * t1046;
t889 = t925 ^ 2;
t1182 = ((t860 * t1041 * t1202 + t889 * t1068 * t1217 + t1005 * t1187 + (0.2e1 * (-t970 * t1088 - t974 * t1121) * t892 + t825 * t1043 - t884 * t1088 + (t881 * t1121 + (-t925 * t1122 - t1063) * pkin(7) * t1221) * pkin(1)) * t1104 - 0.8e1 * t748 * t1030 - 0.4e1 * (-t1038 + (0.4e1 * t927 * t1029 + (-t867 + 0.2e1 * t1150) * t1120) * pkin(3) + ((-t1088 - t1089) * t879 - t835 * t1090) * t1124) * t1098 + t1019 * t1207 + t1009 * t878 + (t1033 * t1199 - t858 * t1120) * t892 + t788 * t1043 - 0.4e1 * (-t867 * t1088 - t1038) * t1110 + 0.4e1 * t786 * t1046 + t811 * t1088 + t821 * t1089 + 0.4e1 * t1211 * t745) * t973 + t722 * t1058 + (0.8e1 * (t854 - 0.8e1 * t1029) * t1081 + (-0.12e2 * t1023 + 0.6e1 * (-0.4e1 / 0.9e1 * t1062 + 0.4e1 / 0.9e1 * t1064) * t1049 - 0.12e2 * t794 * t1029 - t776 - 0.4e1 * t805 * t1046 - 0.2e1 * t1008 + 0.2e1 * t1007) * t1093 + 0.24e2 * t733 * t1030 + 0.6e1 * (t863 * t1043 + (-t799 * t1123 + t1142 * t928) * pkin(7) * t1113 + t1144) * t1098 + t770 * t1018 + t1144 * t1083 + t746 * t1036 + t1146 + (-0.8e1 * t1021 + 0.24e2 * t1015) * t816 + t1224 * t771 - 0.6e1 * t1211 * t735) * t827 + t717 * t822) / t1222;
t1131 = t959 - t978;
t1006 = t1131 + 6 * t971 - 6 * t1149;
t1050 = 0.32e2 * t1105;
t1168 = t876 * (-t965 + t866);
t1051 = 0.16e2 * t1105;
t890 = t892 ^ 2;
t1164 = t890 * t968;
t1103 = 0.8e1 * t1164;
t1115 = 0.6e1 * t1196;
t1138 = 0.4e1 / 0.7e1 * t972 - t960 / 0.7e1;
t838 = t972 + t965 / 0.4e1 + t970 / 0.4e1 - t960 / 0.8e1;
t742 = -0.32e2 / 0.21e2 * t838 * t1047 + 0.5e1 / 0.42e2 * t978 + (0.16e2 / 0.21e2 * t970 + t1138) * t965 + t968 / 0.7e1 + t1138 * t970 + t971 - 0.3e1 / 0.7e1 * t1149 + t959 / 0.42e2;
t840 = t1140 + t1214;
t917 = 0.4e1 / 0.3e1 * t970;
t744 = -0.8e1 / 0.3e1 * t840 * t1047 + 0.5e1 / 0.18e2 * t978 + (t917 + t905) * t965 + t971 - t968 / 0.3e1 + t959 / 0.18e2 + (t911 + 0.2e1 / 0.3e1 * t970 + t907) * t972;
t800 = -t978 / 0.6e1 + t1001;
t919 = t970 / 0.2e1;
t1139 = t919 + t972;
t804 = -0.2e1 / 0.3e1 * t1047 + t904 + t1139;
t870 = (t953 + t960) * t970;
t916 = -0.2e1 / 0.3e1 * t965;
t874 = t916 + t972;
t723 = t874 * t1103 + t804 * t1051 + 0.14e2 * t742 * t1150 + (t884 * t978) + (-t1149 + t870 - 0.10e2 / 0.3e1 * t968 + (2 * t971)) * t965 + t800 * t1154 + (t1027 * t875 + t744 * t1115) * pkin(1);
t951 = 8 * t972;
t792 = t974 * t1053 + t893 + t1200 + ((t938 + t951) * t970);
t798 = t1016 - t970 + t1214;
t734 = t1054 + t792 * t892 + t849 * t885 + (t1052 * t1154 + t798 * t1116) * pkin(1);
t1127 = t971 - t968;
t736 = t873 * t1017 - t962 + (-t894 - t1125) * t978 + (t870 + t978 / 0.6e1 - t959 / 0.6e1 + t1127) * t965 + t800 * t972;
t939 = -5 * t960;
t945 = 7 * t968;
t740 = (t908 + t954 + (7 * t970)) * t978 + (t945 + ((t939 + 10 * t972) * t970) + t1035) * t965 + t1145;
t982 = pkin(7) * t972;
t865 = -0.12e2 * pkin(7) * t974 + t982 * t1113;
t872 = -8 * t968 + 12 * t1148;
t756 = t865 * t928 + t872 * t892 + t1051 + t1103 + t1128 - (6 * t1148);
t774 = t842 * t1155 + t849 * t882;
t833 = 16 * (t1126 - 6 * t1151) * t968;
t880 = -30 * t960 + 60 * t972;
t886 = t888 ^ 2;
t702 = t833 * t890 + t774 * t1050 + 0.24e2 * t736 * t1150 + (t938 + t953 + 28 * t970) * t962 + (t856 * t1168) + ((t1006 * t947) + (t1131 * t955) + 0.24e2 * t723 * t888 + (t880 * t968) + (t971 * t940) + (28 * t974 ^ 2) + 0.4e1 * t982 ^ 2) * t965 + (0.32e2 * t734 * t1166 + t877 * t1220) * t860 + 0.8e1 * (-t740 * t1097 + t732 * t1196) * pkin(1) + (0.16e2 * t756 * t886 + (t880 * t970) + t1006 + (70 * t968) + t978) * t978;
t1167 = t886 * t978;
t806 = 0.4e1 / 0.3e1 * t1150 + t862 + t875;
t1042 = -0.24e2 * t806 * t1167;
t1094 = -0.12e2 * t1165;
t1102 = -0.6e1 * t1150;
t1163 = t891 * t968;
t836 = 0.7e1 / 0.6e1 * t965 + t903 + t1139;
t1074 = t903 + t913 + t972;
t839 = t917 + t1074;
t769 = -t836 * t1187 + t839 * t878;
t775 = (t965 * t884) - 0.5e1 / 0.3e1 * t968 + t1075 * t970 + t972 * (t905 + t873);
t846 = t970 + t1074;
t869 = t942 + t884;
t781 = t846 * t878 - t869 * t1187 / 0.2e1;
t725 = -0.4e1 * t1163 * t1197 + t769 * t1100 + (-0.8e1 / 0.3e1 * t1164 + t775) * t878 + (t781 * t1116 + t925 * t1193) * pkin(1);
t1095 = t974 * t878;
t1101 = -0.4e1 * t1150;
t1135 = t938 + t1226;
t1070 = t952 + t1135;
t780 = t941 + ((t932 + t1070) * t965) + (t916 + t1071) * t883;
t1176 = t780 * t925;
t762 = t978 + (t907 + t916 + t1136) * t965 + t946 + (t1070 * t970) + t972 * (t907 + t874);
t753 = t762 * t878;
t843 = 0.8e1 / 0.3e1 * t965 + t1073;
t845 = t905 + t912 + t1133;
t773 = -t843 * t1187 + t845 * t878;
t850 = 0.5e1 / 0.6e1 * t965 + t919 + t903;
t785 = pkin(1) * t1079 + t850 * t1107;
t728 = t891 * t1095 * t1207 + t785 * t1101 + t753 + (t773 * t1116 - t1176) * pkin(1);
t737 = -pkin(1) * t1176 + t753;
t778 = -(3 * t978) + (t895 + t1077) * t965 + t1076 * t970 + t1127;
t738 = t1187 * t1219 + t778 * t878;
t1134 = t939 - 5 * t965;
t852 = t1213 * t932;
t739 = t962 + ((21 * t970 + t1213) * t978) + ((t1135 * t972 + t852 + t950 + 35 * t968) * t965) + ((t945 + (t951 + t1134) * t970 + t972 * (-t965 + t1125)) * t883);
t826 = 0.4e1 * t1004;
t834 = t878 + 0.2e1 * t1187;
t848 = t906 + t867;
t741 = t885 * t878 + t826 * t892 + (t834 * t1196 + t848 * t925) * t1114;
t747 = 0.7e1 * t962 + ((35 * t970 + 15 * t972 + t1134) * t978) + ((21 * t968 + t852 + 9 * t971 + (t940 - 6 * t965) * t972) * t965) + t1168;
t1086 = (pkin(1) * t882) / 0.2e1;
t837 = t972 + 0.5e1 / 0.2e1 * t965 + 0.3e1 / 0.2e1 * t970 + t906;
t783 = t925 * t1086 + t837 * t878;
t709 = t783 * t1051 + t741 * t1045 + t725 * t1094 + t738 * t1102 + (-0.6e1 * t728 * t1170 + (0.24e2 * t873 * t1164 - t739) * t927) * pkin(3) + (-0.6e1 * t737 * t1196 + (t747 + t1042) * t925) * pkin(1);
t695 = t702 * t827 + t709 * t973;
t1180 = 0.1e1 / t695 ^ 2 * t1222;
t961 = 0.1e1 / pkin(4);
t1153 = t961 * t966;
t1152 = t961 / pkin(3) ^ 2;
t1147 = t1224 * t779;
t1056 = t1177 / 0.2e1;
t715 = atan2(t721 * t1056, t719 * t1056);
t713 = sin(t715);
t1091 = t713 * t1185;
t714 = cos(t715);
t712 = t714 * t1185;
t1082 = t765 * t1152;
t1080 = t925 * t1167;
t1067 = t891 * t1123;
t1061 = -t1182 / 0.4e1;
t1060 = t719 * t1195;
t1059 = t721 * t1195;
t1057 = -t1178 / 0.2e1;
t1055 = t1153 / 0.2e1;
t718 = 0.1e1 / t719 ^ 2;
t673 = qJD(1) + ((t721 * t1057 + t703 * t1194) / t1216 - 0.2e1 * (t719 * t1057 + t704 * t1194) * t721 * t718) * pkin(3) / (t718 * t721 ^ 2 + 0.1e1) * t768 * t966;
t672 = pkin(2) * t673 + t712;
t690 = atan2(t699, t700);
t684 = sin(t690);
t678 = t684 * t1091;
t686 = cos(t690);
t658 = -t672 * t686 + t678;
t1039 = pkin(3) * t1063;
t1034 = t968 * t1067;
t1032 = t887 * t978 * t1119;
t1028 = t673 + t1225;
t1020 = t1088 * t1164;
t1010 = -0.48e2 * t1023;
t993 = t998 * t1114;
t995 = -t762 * t1088 - t780 * t1089;
t665 = (t1042 * t1089 - 0.24e2 * pkin(1) * (-0.8e1 / 0.3e1 * t1029 + t854) * t1080 - 0.96e2 * t806 * t1032 * t1187 + ((-t885 + t1101) * t1088 + 0.2e1 * (pkin(1) * t848 - t826 * t925 - 0.2e1 * t1161) * t1121 + (-0.2e1 * t1039 + (-0.2e1 * t834 * t925 + 0.4e1 * t1186) * qJD(1)) * pkin(1) * pkin(7)) * t1045 + (0.8e1 / 0.3e1 * t1020 + (-t839 * t1088 - t836 * t1089) * t1100 - t775 * t1088 + t1089 * t1193 + (0.32e2 / 0.3e1 * t1163 * t878 + t970 * t769 * t1202) * t1123 + (t846 * t1039 * t1206 + ((0.12e2 * t889 * t892 - 0.4e1 * t890) * t968 + (-0.2e1 * t869 * t1186 - 0.4e1 * t781 * t925) * pkin(1)) * qJD(1)) * pkin(7)) * t1094 - 0.24e2 * t725 * t1030 - 0.6e1 * ((-0.4e1 * (pkin(1) * t1033 - 0.2e1 * t850 * t1088) * t892 + 0.8e1 * t785 * t1066) * t970 + (0.8e1 * t1019 + (-t845 * t1088 - t843 * t1089) * t1108 + (0.24e2 * t892 * t1095 + t773 * t1206) * t1123) * pkin(7) + t995) * t1098 + (t1086 * t1121 - t837 * t1088) * t1051 + t783 * t1010 + (-t778 * t1088 + t1089 * t1219) * t1102 + 0.12e2 * t738 * t1029 - 0.6e1 * t995 * t1110 + 0.6e1 * t737 * t1046 + t739 * t1088 + t747 * t1089 + (-0.96e2 * t1034 * t878 - 0.24e2 * t1020) * t873 + (0.8e1 * t1021 + t1005) * t741 + 0.6e1 * t1211 * t728) * t973 + t709 * t1058 + (0.16e2 * (t872 * t1201 - 0.48e2 * t1106 - 0.32e2 * t1163 - t865) * qJD(1) * t1080 + 0.64e2 * t756 * t1032 + 0.32e2 * (-t776 + (t792 * t1201 + (t798 * t1206 - 0.24e2 * t1161) * pkin(7)) * t1123 + (-t993 * t1154 - t994 * t1161) * pkin(3)) * t1081 + 0.24e2 * (-0.32e2 * t874 * t1034 + (-0.2e1 / 0.3e1 * t1062 + 0.2e1 / 0.3e1 * t1064) * t1051 * t1198 + t804 * t1010 - 0.28e2 * t742 * t1029 + (-0.8e1 / 0.3e1 * t1062 + 0.8e1 / 0.3e1 * t1064) * t840 * pkin(3) * t970 * t1115 + t744 * t1036 + 0.4e1 * (-t1008 + t1007) * t849 - 0.64e2 / 0.3e1 * t998 * t838 * t1049) * t1165 + 0.48e2 * t723 * t1030 - 0.8e1 * t724 * t1026 + 0.8e1 * (t772 * t1018 + (-pkin(3) * t849 * t992 - t749 * t1123) * pkin(7) * t1112 + t1146 + t1147) * t1098 + t1040 * t1220 - 0.4e1 * t833 * t1067 - pkin(3) * t993 * t1050 * t1155 - 0.96e2 * t774 * t1023 - 0.96e2 * t849 * t991 - 0.48e2 * t736 * t1029 + 0.8e1 * t1147 * t1110 - 0.8e1 * t732 * t1046 + 0.8e1 * t1223 * t740 + (-0.32e2 * t1021 + 0.96e2 * t1015) * t734) * t827 + t702 * t822;
t646 = t673 + (0.1e1 / t695 * t708 * t1058 - 0.2e1 * (t665 * t706 / 0.2e1 - t695 * t1182 / 0.2e1) * pkin(4) * pkin(3) * t973 * t1153 * t1180) / (t731 * t1180 + 0.1e1);
t1011 = t1157 + t1160;
t671 = pkin(3) * t673 + t712;
t681 = atan2(t973 * t1055, t695 * t706 * t1055);
t679 = sin(t681);
t680 = cos(t681);
t656 = -t679 * t1091 + t680 * t671;
t1000 = t695 * t1059 + t719 * t1188;
t999 = t695 * t1060 + t721 * t1189;
t767 = atan2(t812, t813);
t761 = cos(t767);
t760 = sin(t767);
t759 = t1212 * t1011;
t758 = t1212 * t1012;
t726 = qJD(1) + t727;
t691 = atan2(t699, -t700);
t687 = cos(t691);
t685 = sin(t691);
t675 = t1000 * t1082;
t674 = t999 * t1082;
t669 = (-t684 * t714 - t686 * t713) * t1185;
t668 = -t686 * t712 + t678;
t664 = -t1011 * t675 + t1012 * t674;
t663 = -t1011 * t674 - t1012 * t675;
t662 = 0.1e1 / t664 ^ 2;
t659 = -t686 * t1091 - t672 * t684;
t657 = t680 * t1091 + t671 * t679;
t655 = atan2(t663, t664);
t653 = cos(t655);
t652 = sin(t655);
t650 = (-t1000 * t1178 + (t704 * t1188 + t719 * t1179 / 0.8e1 + t665 * t1059 + (t721 * t1061 + t703 * t1195) * t695) * t765) * t1152;
t649 = (-t999 * t1178 + (t665 * t1060 + t703 * t1189 - t721 * t1179 / 0.8e1 + (t719 * t1061 + t704 * t1195) * t695) * t765) * t1152;
t648 = -(t676 * t926 + t677 * t929) * t699 * t1205 * t1209 + t1028;
t645 = pkin(6) * t648 + t658;
t644 = pkin(4) * t646 + t656;
t643 = t1028 - t1225;
t642 = -t645 * t685 - t659 * t687;
t641 = -t645 * t687 + t659 * t685;
t640 = -t644 * t652 - t653 * t657;
t639 = -t644 * t653 + t652 * t657;
t638 = ((-t1011 * t649 - t1012 * t650 - t674 * t758 + t675 * t759) / t664 - (-t1011 * t650 + t1012 * t649 - t674 * t759 - t675 * t758) * t663 * t662) / (t662 * t663 ^ 2 + 0.1e1) + t646;
t1 = qJD(2) ^ 2 * Ifges(8,3) / 0.2e1 + t673 ^ 2 * Ifges(3,3) / 0.2e1 + m(5) * (t656 ^ 2 + t657 ^ 2) / 0.2e1 + m(10) * (t641 ^ 2 + t642 ^ 2) / 0.2e1 + t726 ^ 2 * Ifges(9,3) / 0.2e1 + t727 ^ 2 * Ifges(6,3) / 0.2e1 + m(11) * (t639 ^ 2 + t640 ^ 2) / 0.2e1 + m(4) * (t658 ^ 2 + t659 ^ 2) / 0.2e1 + m(7) * (t668 ^ 2 + t669 ^ 2) / 0.2e1 + (t656 * mrSges(5,1) - t657 * mrSges(5,2) + Ifges(5,3) * t646 / 0.2e1) * t646 + (t641 * mrSges(10,1) - t642 * mrSges(10,2) + Ifges(10,3) * t643 / 0.2e1) * t643 + (t639 * mrSges(11,1) - t640 * mrSges(11,2) + Ifges(11,3) * t638 / 0.2e1) * t638 + ((-mrSges(9,1) * t761 + mrSges(9,2) * t760) * t726 + (mrSges(3,1) * t714 - mrSges(3,2) * t713) * t673) * t1185 + (Ifges(2,3) / 0.2e1 + (m(9) * (t760 ^ 2 + t761 ^ 2) / 0.2e1 + m(3) * (t713 ^ 2 + t714 ^ 2) / 0.2e1) * t970) * qJD(1) ^ 2 + (t658 * mrSges(4,1) + t668 * mrSges(7,1) - t659 * mrSges(4,2) - t669 * mrSges(7,2) + (Ifges(7,3) / 0.2e1 + Ifges(4,3) / 0.2e1) * t648) * t648;
T = t1;
