% Calculate potential energy for
% picker2Dm2DE2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [2x1]
%   Generalized joint coordinates (joint angles)
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[L1,L2,L3,L4,L5,L6,e,phi05,phi1]';
% m [11x1]
%   mass of all robot links (including the base)
% rSges [11x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% 
% Output:
% U [1x1]
%   Potential energy

% Quelle: HybrDyn-Toolbox
% Datum: 2020-05-09 23:02
% Revision: 73758128893bc0a8beabae04bd7e71472107ac81 (2020-05-07)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function U = picker2Dm2DE2_energypot_fixb_slag_vp1(qJ, g, ...
  pkin, m, rSges)
%% Coder Information
%#codegen
%$cgargs {zeros(2,1),zeros(3,1),zeros(9,1),zeros(11,1),zeros(11,3)}
assert(isreal(qJ) && all(size(qJ) == [2 1]), ...
  'picker2Dm2DE2_energypot_fixb_slag_vp1: qJ has to be [2x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'picker2Dm2DE2_energypot_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'picker2Dm2DE2_energypot_fixb_slag_vp1: pkin has to be [9x1] (double)');
assert(isreal(m) && all(size(m) == [11 1]), ...
  'picker2Dm2DE2_energypot_fixb_slag_vp1: m has to be [11x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [11,3]), ...
  'picker2Dm2DE2_energypot_fixb_slag_vp1: rSges has to be [11x3] (double)');

%% Symbolic Calculation
% From energy_potential_fixb_worldframe_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2020-05-09 19:15:52
% EndTime: 2020-05-09 19:16:01
% DurationCPUTime: 5.44s
% Computational Cost: add. (31097->460), mult. (92594->576), div. (594->5), fcn. (15660->31), ass. (0->231)
t580 = 4 * pkin(1);
t443 = pkin(4) ^ 2;
t391 = -t443 / 0.4e1;
t448 = pkin(3) ^ 2;
t579 = t391 + t448 / 0.2e1;
t578 = 2 * pkin(7);
t415 = cos(qJ(1));
t381 = t415 ^ 2;
t577 = -0.2e1 * t381;
t427 = 0.2e1 * t448;
t576 = 0.4e1 * t448;
t453 = pkin(1) ^ 2;
t451 = t453 ^ 2;
t575 = 4 * t451;
t574 = 2 * t453;
t431 = 6 * t453;
t455 = pkin(7) ^ 2;
t439 = 2 * t455;
t460 = t448 ^ 2;
t426 = 0.5e1 * t460;
t408 = sin(pkin(8));
t409 = cos(pkin(8));
t412 = sin(qJ(1));
t336 = t408 * t412 + t409 * t415;
t573 = t336 / 0.2e1;
t369 = pkin(1) * t415;
t356 = t369 + pkin(7);
t411 = sin(qJ(2));
t367 = pkin(3) * t411;
t414 = cos(qJ(2));
t368 = pkin(3) * t414;
t572 = t412 * pkin(1);
t357 = t367 * t578;
t378 = t411 ^ 2;
t562 = t378 * t448;
t524 = 0.2e1 * t562;
t538 = -t448 + t455;
t337 = t357 + t524 + t538;
t561 = t412 * t414;
t520 = pkin(3) * t561;
t490 = pkin(1) * t520;
t349 = -0.2e1 * t490;
t441 = 0.2e1 * pkin(3);
t373 = t453 + t455;
t500 = -t443 + t373;
t484 = t357 + t500;
t556 = t453 * t381;
t522 = -0.4e1 * t556;
t528 = -0.4e1 * t367;
t536 = t453 - t455;
t539 = t443 - t455;
t355 = t367 + pkin(7);
t568 = t355 * t415;
t320 = sqrt(t337 * t522 + 0.4e1 * t536 * t562 + pkin(7) * t500 * t528 - t451 + (-0.2e1 * t448 + t539) * t574 - (t455 - (t441 + pkin(4)) * pkin(4)) * (t455 + (t441 - pkin(4)) * pkin(4)) + (-(t349 + t484) * t568 + t484 * t520) * t580);
t442 = t443 ^ 2;
t454 = t455 ^ 2;
t537 = t451 + t454;
t542 = t439 - t443;
t555 = t455 * t443;
t472 = t542 * t453 + t442 / 0.6e1 + t537 - t555;
t334 = -t460 / 0.6e1 + t472;
t402 = -t448 / 0.3e1;
t363 = t402 + t455;
t338 = t363 * t349;
t344 = t367 + t356;
t372 = -0.3e1 * t448 + t455;
t380 = t415 * t381;
t456 = pkin(1) * t453;
t553 = t456 * t380;
t526 = pkin(7) * t553;
t495 = 0.8e1 * t526;
t347 = t372 * t495;
t371 = -t443 - t448;
t438 = 3 * t455;
t359 = t438 + t371;
t567 = t359 * t453;
t348 = 0.10e2 * t567;
t398 = 0.4e1 / 0.3e1 * t448;
t392 = -t443 / 0.3e1;
t505 = t392 + t373;
t350 = t398 + t505;
t393 = -t443 / 0.2e1;
t499 = t448 + t373;
t352 = t393 + t499;
t353 = -t443 + t499;
t531 = 0.2e1 * t369;
t358 = pkin(7) * t531;
t437 = 4 * t455;
t361 = (t437 + t443) * t453;
t364 = -t453 / 0.3e1 + t455;
t365 = 0.10e2 / 0.3e1 * t453;
t366 = t373 ^ 2;
t370 = -0.30e2 * t443 + (60 * t455);
t375 = -3 * t453 + t455;
t390 = -t443 / 0.6e1;
t399 = 0.2e1 / 0.3e1 * t448;
t404 = 0.4e1 / 0.3e1 * t453;
t406 = t453 / 0.2e1;
t417 = 15 * t451;
t418 = 15 * t453;
t419 = 10 * t453;
t424 = -0.2e1 * t443;
t425 = -0.5e1 * t443;
t428 = 7 * t451;
t429 = 5 * t451;
t430 = 7 * t453;
t435 = 3 * t454;
t436 = 8 * t455;
t459 = pkin(3) * t448;
t445 = t459 ^ 2;
t464 = pkin(7) * t455;
t471 = 0.5e1 / 0.6e1 * t460 + t472;
t473 = t455 - t490;
t550 = t442 / 0.2e1 - t460 / 0.2e1;
t483 = -0.3e1 * t555 + t435 + t550;
t487 = -0.6e1 * t490;
t395 = -0.3e1 / 0.2e1 * t443;
t549 = t395 + t438;
t552 = t373 * ((t395 + t439) * t453 - 0.3e1 / 0.2e1 * t555 + t537 + t550) + t445;
t474 = ((t365 + t542) * t448 + t471) * t487 + (t417 + (-0.9e1 * t443 + (18 * t455)) * t453 + t483) * t448 + (t418 + t549) * t460 + t552;
t486 = -0.4e1 * t490;
t475 = t352 * t486;
t432 = 3 * t453;
t543 = t432 + t455;
t502 = t448 + t543;
t478 = -(0.3e1 * t448 + t373) * t572 + t502 * t368;
t394 = -0.2e1 / 0.3e1 * t443;
t403 = -0.2e1 / 0.3e1 * t448;
t503 = t394 + t373;
t544 = t419 + t439;
t548 = t403 + t455;
t479 = -(t426 + ((5 * t453) + t359) * t427 + (t403 + t503) * t373) * t572 + (t460 + (t394 + t403 + t544) * t448 + t429 + 0.2e1 * t567 + t455 * (t394 + t548)) * t368;
t541 = t442 - t460;
t482 = -0.6e1 * t555 + (6 * t454) + t541;
t504 = t394 + t399 + t439;
t551 = (t399 + t503) * t373 + t460;
t485 = t350 * t486 + (t431 + t504) * t448 + t551;
t518 = t456 * t368;
t488 = t380 * t518;
t557 = t451 * t381 ^ 2;
t489 = t557 * t368;
t515 = 0.16e2 * t553;
t493 = pkin(7) * t515;
t494 = 0.20e2 / 0.3e1 * t453;
t540 = -t443 + t448;
t501 = t438 + t540;
t400 = t448 / 0.3e1;
t506 = t390 + t400 + t455;
t507 = t443 / 0.3e1 + t400 + t439;
t508 = 0.2e1 / 0.3e1 * t443 + t399 + t437;
t509 = 0.4e1 / 0.3e1 * t443 + t398 - (2 * t455);
t559 = (pkin(7) + pkin(3)) * (pkin(7) - pkin(3));
t510 = t412 * t559;
t529 = 0.6e1 * t369;
t512 = pkin(7) * t529;
t530 = 0.4e1 * t369;
t513 = pkin(7) * t530;
t514 = -t572 / 0.2e1;
t516 = 0.12e2 * t556;
t517 = t453 * t368;
t560 = t414 * t415;
t519 = pkin(3) * t560;
t521 = 0.4e1 * t556;
t523 = 0.8e1 * t557;
t563 = t411 * t378 * t459;
t525 = -0.8e1 * t563;
t527 = 0.2e1 * t572;
t532 = pkin(7) * t369;
t533 = 4 * pkin(7);
t534 = t454 + t460;
t535 = t454 - t451;
t545 = 0.4e1 / 0.7e1 * t455 - t443 / 0.7e1;
t546 = t406 + t455;
t547 = t453 / 0.3e1 + t455;
t554 = t455 * t453;
t558 = (pkin(7) + pkin(1)) * (pkin(7) - pkin(1));
t564 = t378 ^ 2 * t460;
t565 = t371 * t455;
t566 = t366 * (-t448 + t500);
t569 = (-t412 * t456 + t517) * t381;
t571 = ((-0.24e2 * (0.4e1 / 0.3e1 * t556 + t358 + t364) * t564 * t572 - 0.12e2 * (-0.8e1 / 0.3e1 * t489 + ((t404 + t506) * t368 - (0.7e1 / 0.6e1 * t448 + t390 + t546) * t572) * t521 + (-t448 * t536 - 0.5e1 / 0.3e1 * t451 + t507 * t453 + t455 * (t392 + t363)) * t368 + (-t460 + (-t494 + t508) * t448 - (3 * t451) + t509 * t453 + t454) * t514 + (-t412 * t451 * t380 + ((t453 + t506) * t368 + (t427 - t536) * t514) * t369) * t533) * t562 + 0.24e2 * t363 * t489 + ((t455 + 0.5e1 / 0.2e1 * t448 + 0.3e1 / 0.2e1 * t453 + t393) * t368 + t372 * t572 / 0.2e1) * t493 - 0.6e1 * ((-0.3e1 * t460 + (-t494 + t509) * t448 + t508 * t453 + t535) * t368 - 0.2e1 * (-0.5e1 / 0.3e1 * t460 + (-t453 + t507) * t448 + t455 * (t402 + t505)) * t572) * t556 - 0.6e1 * t479 * t532 - (t445 + ((21 * t453) + t359) * t460 + (t348 + t435 + (35 * t451) + 0.2e1 * t565) * t448 + (t428 + (t425 + t436 - 0.5e1 * t448) * t453 + t455 * (-t443 + t538)) * t373) * t368 + (0.7e1 * t445 + (t430 + t359) * t426 + (t348 + (21 * t451) + (9 * t454) + 0.6e1 * t565) * t448 + t566) * t572) * t320 + (0.16e2 * (t523 + t493 + (-8 * t451 + 12 * t554) * t381 + (-12 * pkin(7) * t456 + t464 * t580) * t415 - (6 * t554) + t537) * t564 + 0.24e2 * (t548 * t523 + 0.14e2 * (-0.32e2 / 0.21e2 * (t455 + t448 / 0.4e1 + t453 / 0.4e1 - t443 / 0.8e1) * t490 + 0.5e1 / 0.42e2 * t460 + (0.16e2 / 0.21e2 * t453 + t545) * t448 + t451 / 0.7e1 + t545 * t453 + t454 - 0.3e1 / 0.7e1 * t555 + t442 / 0.42e2) * t556 + t364 * t475 - t536 * t460 + (t361 - 0.10e2 / 0.3e1 * t451 + (2 * t454) - t555) * t448 + t334 * t558 + ((-0.2e1 / 0.3e1 * t490 + t391 + t546) * t515 + (-0.8e1 / 0.3e1 * (t547 + t579) * t490 + 0.5e1 / 0.18e2 * t460 + (0.4e1 / 0.3e1 * t455 + t404 + t392) * t448 + t454 + 0.2e1 / 0.3e1 * t554 - 0.2e1 / 0.3e1 * t555 - t451 / 0.3e1 + t442 / 0.18e2) * t529) * pkin(7)) * t562 + 0.16e2 * (-0.6e1 * t455 * t448 + t534) * t557 + 0.32e2 * (t349 * t559 + t352 * t372) * t526 + 0.24e2 * (t363 * t475 - t445 + (-t365 + t539) * t460 + (t361 + t460 / 0.6e1 - t442 / 0.6e1 + t535) * t448 + t334 * t455) * t556 + 0.8e1 * t474 * t532 - 0.8e1 * ((t430 + t549) * t460 + (t428 + (t425 + (10 * t455)) * t453 + t483) * t448 + t552) * t490 + t460 ^ 2 + (t424 + t437 + (28 * t453)) * t445 + (t370 * t453 + (70 * t451) + t482) * t460 + (t370 * t451 + t482 * t431 + t541 * t439 - 0.6e1 * t454 * t443 + (28 * t456 ^ 2) + (4 * t464 ^ 2)) * t448 + t353 * t566) * t344 + (((0.4e1 * t569 + (t368 + t527) * t358 + t375 * t368 + (t393 + t502) * t527) * t525 - 0.6e1 * ((0.2e1 * (0.5e1 / 0.6e1 * t448 + t406 + t390) * t368 + pkin(1) * t510) * t522 + (-0.8e1 * t488 + ((t392 + t399 + t543) * t368 - (0.8e1 / 0.3e1 * t448 + t505) * t572) * t530) * pkin(7) + t479) * t367) * t320 + (0.32e2 * (t495 + (-0.4e1 * t412 * t518 + t575 + (t576 + t424 + t436) * t453) * t381 + (-t453 + t473 + t579) * t513 + t349 * t558 + t375 * t352) * t563 + 0.8e1 * (t347 + (t352 * t559 + t338) * t516 + (t475 + (t431 + t542) * t448 + t471) * t512 + t474) * t367) * t344) * t356) / ((-0.4e1 * (-t536 * t368 + 0.2e1 * t569 + (t519 * t578 + t412 * (t448 + t574)) * pkin(1)) * t562 + 0.8e1 * pkin(7) * t488 + ((pkin(3) * t575 + 0.8e1 * t453 * t459) * t414 + 0.4e1 * t456 * t510) * t381 - 0.4e1 * t478 * t532 - (t448 * t544 + t429 + t534 + (6 * t554)) * t368 + (t426 + (t419 + 6 * t455) * t448 + t366) * t572) * t320 + (0.12e2 * (0.6e1 * (-0.4e1 / 0.9e1 * t490 + 0.4e1 / 0.9e1 * t448 - t443 / 0.9e1 + t547) * t556 + t364 * t349 + t350 * t558 + (t553 + (t390 + t399 + t473) * t369) * t533) * t562 + t347 + (t350 * t559 + t338) * t516 + t485 * t512 + ((t365 + t504) * t448 + t551) * t487 + t445 + (t418 + t501) * t460 + (t501 * t431 + t540 * t439 + t417 + t435) * t448 + t366 * t353) * t344 + ((t525 * t572 + (t517 * t577 + (t368 - t572) * t358 + t478) * t528) * t320 + (0.8e1 * (t358 + t521 + t375) * t563 + 0.6e1 * (t538 * t521 + (t349 + t350) * t513 + t485) * t367) * t344) * t356);
t329 = 0.1e1 / (t355 * t531 + t349 + t357 + t499);
t449 = 0.1e1 / pkin(3);
t570 = t329 * t449;
t480 = -pkin(1) + t520;
t481 = t427 + t432 - t539;
t318 = (t355 * t412 + t519) * t320 - (t357 + t481 + t486) * t568 + t480 * t357 + t481 * t520 + (t337 * t577 - t500 + t524 - t576) * pkin(1);
t342 = t427 + t484;
t319 = (-t480 + t568) * t320 + (t337 * t531 + t342 * t355) * t412 + (t342 * t415 + (0.4e1 * t381 - 0.2e1) * t355 * pkin(1)) * t368;
t497 = t570 / 0.2e1;
t316 = qJ(1) + atan2(t319 * t497, t318 * t497);
t444 = 0.1e1 / pkin(4);
t511 = t329 * t444 / pkin(3) ^ 2;
t496 = t444 * t449 / 0.2e1;
t300 = atan2(t320 * t496, t496 * t571) + t316;
t335 = t408 * t415 - t409 * t412;
t312 = (-t318 * t335 / 0.2e1 + t319 * t573) * t570;
t313 = (t318 * t573 + t319 * t335 / 0.2e1) * t570;
t413 = sin(pkin(9));
t416 = cos(pkin(9));
t309 = -t312 * t416 + t313 * t413;
t310 = t312 * t413 + t313 * t416;
t305 = atan2(t309, t310) + t316;
t498 = t571 / 0.4e1;
t315 = cos(t316);
t492 = -pkin(2) * t315 - t369;
t491 = -pkin(3) * t315 - t369;
t314 = sin(t316);
t477 = -pkin(2) * t314 - t572;
t476 = -pkin(3) * t314 - t572;
t340 = -t411 * t415 + t561;
t339 = -t411 * t412 - t560;
t328 = qJ(1) + atan2(t335, t336);
t327 = pkin(8) + atan2(t335, -t336);
t326 = cos(t328);
t325 = sin(t328);
t324 = cos(t327);
t323 = sin(t327);
t304 = cos(t305);
t303 = sin(t305);
t302 = (t318 * t320 / 0.4e1 + t319 * t498) * t511;
t301 = (t318 * t498 - t319 * t320 / 0.4e1) * t511;
t299 = cos(t300);
t298 = sin(t300);
t297 = atan2(t309, -t310) + t305;
t296 = cos(t297);
t295 = sin(t297);
t294 = atan2(t301 * t339 + t302 * t340, -t301 * t340 + t302 * t339) + t300;
t293 = cos(t294);
t292 = sin(t294);
t1 = -m(1) * (rSges(1,1) * g(1) + g(2) * rSges(1,2) + g(3) * rSges(1,3)) - m(2) * (g(1) * (-rSges(2,1) * t415 + rSges(2,2) * t412) + g(2) * (-rSges(2,1) * t412 - rSges(2,2) * t415) + g(3) * rSges(2,3)) - m(3) * (g(1) * (-rSges(3,1) * t315 + rSges(3,2) * t314 - t369) + g(2) * (-rSges(3,1) * t314 - rSges(3,2) * t315 - t572) + g(3) * rSges(3,3)) - m(4) * (g(1) * (rSges(4,1) * t304 - rSges(4,2) * t303 + t492) + g(2) * (rSges(4,1) * t303 + rSges(4,2) * t304 + t477) + g(3) * rSges(4,3)) - m(5) * (g(1) * (-rSges(5,1) * t299 + rSges(5,2) * t298 + t491) + g(2) * (-rSges(5,1) * t298 - rSges(5,2) * t299 + t476) + g(3) * rSges(5,3)) - m(6) * (g(1) * (pkin(5) * t409 + rSges(6,1) * t324 - rSges(6,2) * t323) + g(2) * (pkin(5) * t408 + rSges(6,1) * t323 + rSges(6,2) * t324) + g(3) * rSges(6,3)) - m(7) * (g(1) * (rSges(7,1) * t304 - rSges(7,2) * t303 - t369) + g(2) * (rSges(7,1) * t303 + rSges(7,2) * t304 - t572) + g(3) * rSges(7,3)) - m(8) * (g(1) * (rSges(8,1) * t411 + rSges(8,2) * t414 + pkin(7)) + g(2) * (-rSges(8,1) * t414 + rSges(8,2) * t411) + g(3) * rSges(8,3)) - m(9) * (g(1) * (rSges(9,1) * t326 - rSges(9,2) * t325 - t369) + g(2) * (rSges(9,1) * t325 + rSges(9,2) * t326 - t572) + g(3) * rSges(9,3)) - m(10) * (g(1) * (pkin(6) * t304 - rSges(10,1) * t296 + rSges(10,2) * t295 + t492) + g(2) * (pkin(6) * t303 - rSges(10,1) * t295 - rSges(10,2) * t296 + t477) + g(3) * rSges(10,3)) - m(11) * (g(1) * (-pkin(4) * t299 + rSges(11,1) * t293 - rSges(11,2) * t292 + t491) + g(2) * (-pkin(4) * t298 + rSges(11,1) * t292 + rSges(11,2) * t293 + t476) + g(3) * rSges(11,3));
U = t1;
