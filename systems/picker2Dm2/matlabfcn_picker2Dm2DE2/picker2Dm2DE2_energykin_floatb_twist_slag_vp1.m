% Calculate kinetic energy for
% picker2Dm2DE2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [2x1]
%   Generalized joint coordinates (joint angles)
% qJD [2x1]
%   Generalized joint velocities
% V_base [6x1]
%   Base Velocity (twist: stacked translational and angular velocity) in base frame
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[L1,L2,L3,L4,L5,L6,e,phi05,phi1]';
% m [11x1]
%   mass of all robot links (including the base)
% rSges [11x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [11x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% T [1x1]
%   kinetic energy

% Quelle: HybrDyn-Toolbox
% Datum: 2020-05-09 23:02
% Revision: 73758128893bc0a8beabae04bd7e71472107ac81 (2020-05-07)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function T = picker2Dm2DE2_energykin_floatb_twist_slag_vp1(qJ, qJD, V_base, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(2,1),zeros(2,1),zeros(6,1),zeros(9,1),zeros(11,1),zeros(11,3),zeros(11,6)}
assert(isreal(qJ) && all(size(qJ) == [2 1]), ...
  'picker2Dm2DE2_energykin_floatb_twist_slag_vp1: qJ has to be [2x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [2 1]), ...
  'picker2Dm2DE2_energykin_floatb_twist_slag_vp1: qJD has to be [2x1] (double)');
assert(isreal(V_base) && all(size(V_base) == [6 1]), ...
  'picker2Dm2DE2_energykin_floatb_twist_slag_vp1: V_base has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'picker2Dm2DE2_energykin_floatb_twist_slag_vp1: pkin has to be [9x1] (double)');
assert(isreal(m) && all(size(m) == [11 1]), ...
  'picker2Dm2DE2_energykin_floatb_twist_slag_vp1: m has to be [11x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [11,3]), ...
  'picker2Dm2DE2_energykin_floatb_twist_slag_vp1: rSges has to be [11x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [11 6]), ...
  'picker2Dm2DE2_energykin_floatb_twist_slag_vp1: Icges has to be [11x6] (double)'); 

%% Symbolic Calculation
% From energy_kinetic_floatb_twist_worldframe_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2020-05-09 19:16:01
% EndTime: 2020-05-09 19:17:04
% DurationCPUTime: 52.33s
% Computational Cost: add. (682451->946), mult. (2104116->1427), div. (10384->23), fcn. (352016->31), ass. (0->613)
t1339 = Icges(4,4) + Icges(7,4);
t1338 = Icges(4,1) + Icges(7,1);
t1337 = Icges(4,2) + Icges(7,2);
t979 = sin(pkin(8));
t980 = cos(pkin(8));
t983 = sin(qJ(1));
t986 = cos(qJ(1));
t846 = t979 * t986 - t980 * t983;
t1286 = t846 / 0.2e1;
t1029 = (pkin(7) ^ 2);
t1014 = -2 * t1029;
t1017 = (pkin(4) ^ 2);
t1022 = (pkin(3) ^ 2);
t1027 = (pkin(1) ^ 2);
t1025 = t1027 ^ 2;
t1308 = -4 * pkin(7);
t1179 = t1029 - t1017;
t921 = t1027 + t1179;
t1155 = pkin(3) * t921 * t1308;
t985 = cos(qJ(2));
t1239 = t983 * t985;
t1174 = pkin(3) * t1239;
t1200 = 4 * pkin(1);
t982 = sin(qJ(2));
t935 = pkin(3) * t982;
t914 = t935 + pkin(7);
t1244 = t914 * t986;
t1183 = -t1022 + t1029;
t946 = t982 ^ 2;
t1222 = t1022 * t946;
t1305 = 0.2e1 * t982;
t1212 = pkin(7) * t1305;
t916 = pkin(3) * t1212;
t849 = t1183 + t916 + 0.2e1 * t1222;
t950 = t986 ^ 2;
t1245 = t849 * t950;
t1324 = 2 * pkin(3);
t861 = t916 + t921;
t1118 = pkin(1) * t1174;
t896 = -0.2e1 * t1118;
t825 = t896 + t861;
t1194 = t1022 * t1029;
t1321 = 4 * t1027;
t951 = t1022 * t1321;
t919 = t951 - 4 * t1194;
t738 = t919 * t946 + t982 * t1155 - t1025 - ((t1029 - (t1324 + pkin(4)) * pkin(4)) * (t1029 + (t1324 - pkin(4)) * pkin(4))) + (t1014 + (2 * t1017) - (4 * t1022) - 0.4e1 * t1245) * t1027 + (t1174 * t861 - t1244 * t825) * t1200;
t1030 = sqrt(t738);
t937 = pkin(1) * t986;
t1190 = 0.2e1 * t937;
t1000 = 2 * t1022;
t857 = t1000 + t861;
t773 = t1190 * t849 + t857 * t914;
t1306 = 0.4e1 * t950;
t779 = t857 * t986 + (t1306 - 0.2e1) * t914 * pkin(1);
t895 = -pkin(1) + t1174;
t829 = -t895 + t1244;
t936 = pkin(3) * t985;
t726 = t1030 * t829 + t773 * t983 + t779 * t936;
t1318 = -t726 / 0.2e1;
t1098 = -0.4e1 * t1118;
t1006 = 3 * t1027;
t909 = t1000 + t1006 + t1179;
t821 = t909 + t916 + t1098;
t1238 = t985 * t986;
t831 = pkin(3) * t1238 + t914 * t983;
t724 = -t821 * t1244 + t831 * t1030 + (t1212 * t895 + t1239 * t909) * pkin(3) + (-0.2e1 * t1245 + (0.2e1 * t946 - 0.4e1) * t1022 - t921) * pkin(1);
t847 = t979 * t983 + t980 * t986;
t1064 = t724 * t1286 + t1318 * t847;
t1023 = 1 / pkin(3);
t941 = t1027 + t1029;
t1112 = t1022 + t941;
t1176 = pkin(1) * t1244;
t798 = t1112 + t896 + t916 + 0.2e1 * t1176;
t795 = 0.1e1 / t798;
t1221 = t1023 * t795;
t709 = t1064 * t1221;
t1285 = t847 / 0.2e1;
t1063 = t1285 * t724 + t1286 * t726;
t710 = t1063 * t1221;
t984 = sin(pkin(9));
t987 = cos(pkin(9));
t690 = t709 * t987 + t710 * t984;
t691 = -t709 * t984 + t710 * t987;
t1126 = t1221 / 0.2e1;
t715 = qJ(1) + atan2(t726 * t1126, t724 * t1126);
t675 = atan2(t690, t691) + t715;
t674 = cos(t675);
t1336 = t1339 * t674;
t673 = sin(t675);
t1335 = t1339 * t673;
t1334 = -2 * t1022;
t1333 = t1337 * t674 + t1335;
t1332 = -t1337 * t673 + t1336;
t1331 = t1338 * t673 + t1336;
t1330 = t1338 * t674 - t1335;
t1302 = 0.1e1 / t847 ^ 2;
t1225 = qJD(1) * t986;
t1227 = qJD(1) * t983;
t835 = -t1225 * t979 + t1227 * t980;
t836 = t847 * qJD(1);
t1329 = (t835 * t846 * t1302 - t836 / t847) / (t1302 * t846 ^ 2 + 0.1e1);
t1303 = 0.1e1 / t691 ^ 2;
t1310 = 0.1e1 / (t1303 * t690 ^ 2 + 0.1e1);
t1240 = t982 * t983;
t1300 = pkin(1) * pkin(3);
t1119 = t1240 * t1300;
t1085 = qJD(2) * t1119;
t1140 = t985 * t1225;
t1086 = t1140 * t1300;
t1326 = -t1086 + t1085;
t1232 = 0.2e1 * t1326;
t1188 = 0.2e1 * t936;
t1154 = pkin(7) * t1188;
t907 = qJD(2) * t1154;
t1151 = t907 + t1232;
t1223 = qJD(2) * t985;
t1161 = pkin(3) * t1223;
t1201 = 2 * pkin(1);
t1250 = ((t1161 * t986 - t1227 * t914) * t1201 + t1151) / t798 ^ 2;
t1287 = -t835 / 0.2e1;
t1319 = t724 / 0.2e1;
t1148 = t983 * t1225;
t1095 = t849 * t1148;
t1197 = qJD(2) * t1022;
t1228 = 2 * pkin(7);
t1091 = t982 * t985 * t1197;
t1081 = 0.4e1 * t1091;
t837 = t907 + t1081;
t1246 = t837 * t950;
t1251 = ((0.8e1 * t1095 - 0.4e1 * t1246) * t1027 + (t1305 * t919 + t1155) * t1223 + (t983 * t985 ^ 2 * t1197 * t1228 + (-t1151 * t986 + t1227 * t825) * t914 + (t861 * t1140 + (-t1238 * t825 - t1240 * t861) * qJD(2)) * pkin(3)) * t1200) / t1030;
t1136 = t1251 / 0.2e1;
t1213 = t986 * t1030;
t1217 = t1030 * t983;
t1226 = qJD(1) * t985;
t1280 = pkin(1) * t950;
t1299 = pkin(7) * t986;
t702 = t829 * t1136 + (-t1217 * t914 + t773 * t986) * qJD(1) + (-t1227 * t849 + t837 * t986) * t983 * t1201 + ((-t1213 + (-t857 - 0.8e1 * t1176) * t983) * t1226 + ((-t779 + t1217) * t982 + (t1213 + (t1228 * t914 + t857) * t983 + (-pkin(1) + t1299 + 0.2e1 * t1280) * t985 * t1324) * t985) * qJD(2)) * pkin(3);
t1224 = qJD(2) * t982;
t1146 = t983 * t1224;
t1057 = t1140 - t1146;
t1051 = 0.4e1 * t1057;
t1049 = t1051 * t937;
t1074 = t982 * t986 - t1239;
t703 = t831 * t1136 + (-t907 * t986 + (t821 * t983 + t1213) * qJD(1)) * t914 + (t1081 + 0.4e1 * t1095 - 0.2e1 * t1246) * pkin(1) + ((t909 * t986 - t1217) * t1226 + (-t1030 * t1074 - t1238 * t821 - t1240 * t909) * qJD(2) + (t1057 * t935 + t1223 * t895) * t1228 + t914 * t1049) * pkin(3);
t669 = (t1064 * t1250 + (-t703 * t846 / 0.2e1 + t836 * t1319 + t726 * t1287 + t702 * t1285) * t795) * t1023;
t670 = (-t1063 * t1250 + (t703 * t1285 + t702 * t1286 + t724 * t1287 + t1318 * t836) * t795) * t1023;
t1328 = t1310 * (-t669 * t987 + t670 * t984) / t691;
t1327 = -0.6e1 * t1086 + 0.6e1 * t1085;
t1028 = t1029 ^ 2;
t1008 = 3 * t1028;
t1034 = pkin(3) * t1022;
t1019 = t1034 ^ 2;
t1035 = t1022 ^ 2;
t1218 = t1027 * t950;
t1156 = 0.12e2 * t1218;
t1157 = 0.12e2 * t1222;
t1199 = 6 * pkin(1);
t1012 = 3 * t1029;
t1208 = t1012 + 15 * t1027;
t945 = t982 * t946;
t1215 = t1034 * t945;
t1124 = -0.2e1 * t1174;
t1031 = pkin(1) * t1027;
t1275 = pkin(7) * t1031;
t949 = t986 * t950;
t1173 = t949 * t1275;
t1211 = 0.4e1 * t1299;
t1236 = (pkin(7) + pkin(1)) * (pkin(7) - pkin(1));
t1206 = t1029 + t1027 / 0.3e1;
t828 = -0.4e1 / 0.9e1 * t1118 + 0.4e1 / 0.9e1 * t1022 - t1017 / 0.9e1 + t1206;
t1072 = t1029 - t1118;
t961 = -t1017 / 0.6e1;
t970 = 0.2e1 / 0.3e1 * t1022;
t839 = t1072 + t961 + t970;
t963 = -t1017 / 0.3e1;
t1122 = t963 + t941;
t969 = 0.4e1 / 0.3e1 * t1022;
t898 = t969 + t1122;
t933 = -t1027 / 0.3e1 + t1029;
t740 = 0.4e1 * t1173 + 0.6e1 * t828 * t1218 + t898 * t1236 + (t1124 * t933 + t1211 * t839) * pkin(1);
t1189 = 0.4e1 * t937;
t1005 = 6 * t1027;
t1013 = 2 * t1029;
t965 = -0.2e1 / 0.3e1 * t1017;
t1134 = t1013 + t965 + t970;
t1121 = t965 + t941;
t1204 = t1035 + (t970 + t1121) * t941;
t769 = t898 * t1098 + t1204 + (t1005 + t1134) * t1022;
t833 = t896 + t898;
t918 = t1183 * t1321;
t742 = pkin(7) * t1189 * t833 + t918 * t950 + t769;
t1237 = (pkin(7) + pkin(3)) * (pkin(7) - pkin(3));
t973 = -t1022 / 0.3e1;
t931 = t973 + t1029;
t851 = t931 * t896;
t800 = t1237 * t898 + t851;
t952 = 0.10e2 / 0.3e1 * t1027;
t802 = (t952 + t1134) * t1022 + t1204;
t1166 = 0.4e1 * t1218;
t917 = pkin(7) * t1190;
t943 = -3 * t1027 + t1029;
t850 = t917 + t1166 + t943;
t1123 = 0.8e1 * t1173;
t940 = -3 * t1022 + t1029;
t885 = t940 * t1123;
t910 = -t1017 + t1112;
t915 = t937 + pkin(7);
t934 = t941 ^ 2;
t988 = 0.15e2 * t1025;
t995 = 18 * t1029;
t996 = -2 * t1017;
t998 = -6 * t1017;
t718 = t740 * t1157 + t885 + t800 * t1156 + t1019 + ((-t1017 + t1022 + t1208) * t1035) + (t988 + ((t995 + t998 + 6 * t1022) * t1027) + t1008 + ((t996 + t1000) * t1029)) * t1022 + (t934 * t910) + (0.8e1 * t1215 * t850 + 0.6e1 * t742 * t935) * t915 + (-t1174 * t802 + t1299 * t769) * t1199;
t1142 = t915 * t1215;
t1105 = -0.8e1 * t1142;
t1170 = -0.4e1 * t1222;
t1243 = t915 * t982;
t1160 = t1027 * t936;
t923 = 3 * t1022 + t941;
t1242 = t923 * t983;
t1187 = t1006 + t1029;
t922 = t1022 + t1187;
t884 = t922 * t936;
t1281 = pkin(1) * t983;
t888 = t936 - t1281;
t768 = -0.2e1 * t950 * t1160 + t884 + (0.2e1 * t1299 * t888 - t1242) * pkin(1);
t1065 = -t1031 * t983 + t1160;
t862 = 0.2e1 * t1065;
t939 = t1022 + 2 * t1027;
t942 = -t1027 + t1029;
t771 = t942 * t936 + t862 * t950 + (t1154 * t986 + t939 * t983) * pkin(1);
t820 = -pkin(1) * t1242 + t884;
t1152 = t983 * t1237;
t1301 = 4 * t1031;
t1272 = pkin(3) * t1025;
t1320 = 8 * t1027;
t913 = (t1034 * t1320) + 0.4e1 * t1272;
t822 = t1152 * t1301 + t913 * t985;
t1004 = 0.5e1 * t1025;
t1180 = t1028 + t1035;
t1192 = t1029 * t1027;
t990 = 10 * t1027;
t1203 = t990 + t1013;
t845 = (t1022 * t1203) + t1004 + t1180 + (6 * t1192);
t1010 = 6 * t1029;
t999 = 5 * t1035;
t855 = t999 + (t990 + t1010) * t1022 + t934;
t727 = t771 * t1170 + t822 * t950 + (-0.4e1 * t768 * t1243 + (-t845 + t1123) * t985) * pkin(3) + (-0.4e1 * t820 * t1299 + (t855 + t1105) * t983) * pkin(1);
t864 = t935 + t915;
t707 = t1030 * t727 + t718 * t864;
t1325 = t707 ^ 2;
t1191 = pkin(7) * t937;
t1153 = 0.6e1 * t1191;
t1193 = t1029 * t1017;
t1016 = t1017 ^ 2;
t1231 = t1016 / 0.2e1 - t1035 / 0.2e1;
t1093 = t1008 - (3 * t1193) + t1231;
t1182 = t1025 + t1028;
t966 = -0.3e1 / 0.2e1 * t1017;
t1207 = t1019 + t941 * ((t966 + t1013) * t1027 - 0.3e1 / 0.2e1 * t1193 + t1182 + t1231);
t1186 = t1013 - t1017;
t1060 = (t1186 * t1027) + t1016 / 0.6e1 + t1182 - t1193;
t1054 = t1060 + 0.5e1 / 0.6e1 * t1035;
t810 = (t952 + t1186) * t1022 + t1054;
t739 = -0.6e1 * t810 * t1118 + t1207 + (t988 + ((t995 - 9 * t1017) * t1027) + t1093) * t1022 + (t966 + t1208) * t1035;
t1125 = -0.4e1 * t1174;
t964 = -t1017 / 0.2e1;
t903 = t964 + t1112;
t1088 = t903 * t1125;
t1077 = pkin(1) * t1088;
t772 = t1077 + ((t1005 + t1186) * t1022) + t1054;
t803 = t1237 * t903 + t851;
t729 = t1153 * t772 + t1156 * t803 + t739 + t885;
t1323 = 0.8e1 * t729;
t971 = t1022 / 0.3e1;
t1130 = t1017 / 0.3e1 + t971 + t1013;
t1322 = 0.10e2 / 0.3e1 * t1035 + (-t1027 + t1130) * t1334 + (t973 + t1122) * t1014;
t1317 = Icges(4,5) + Icges(7,5);
t1316 = Icges(4,6) + Icges(7,6);
t962 = -t1017 / 0.4e1;
t1315 = t962 + t1022 / 0.2e1;
t1314 = qJD(1) - qJD(2);
t1313 = t1012 - t1017 - t1022;
t1087 = qJD(1) * t1119;
t1147 = t915 * t1223;
t1104 = pkin(3) * t1147;
t1312 = t1087 - t1104;
t1307 = -4 * pkin(1);
t1304 = -0.2e1 * t986;
t1073 = t1238 + t1240;
t705 = 0.1e1 / t707;
t1292 = t705 / 0.4e1;
t1138 = t724 * t1292;
t1274 = -t1030 / 0.4e1;
t1011 = 4 * t1029;
t1039 = pkin(7) * t1029;
t1185 = t1016 - t1035;
t1061 = 6 * t1028 + t1185 - 6 * t1193;
t1113 = 0.32e2 * t1173;
t1241 = t934 * (-t1022 + t921);
t1114 = 0.16e2 * t1173;
t948 = t950 ^ 2;
t1220 = t1025 * t948;
t1169 = 0.8e1 * t1220;
t1210 = 0.6e1 * t1299;
t1230 = 0.4e1 / 0.7e1 * t1029 - t1017 / 0.7e1;
t891 = t1029 + t1022 / 0.4e1 + t1027 / 0.4e1 - t1017 / 0.8e1;
t765 = -0.32e2 / 0.21e2 * t891 * t1118 + 0.5e1 / 0.42e2 * t1035 + (0.16e2 / 0.21e2 * t1027 + t1230) * t1022 + t1025 / 0.7e1 + t1230 * t1027 + t1028 - 0.3e1 / 0.7e1 * t1193 + t1016 / 0.42e2;
t893 = t1206 + t1315;
t975 = 0.4e1 / 0.3e1 * t1027;
t767 = -0.8e1 / 0.3e1 * t893 * t1118 + 0.5e1 / 0.18e2 * t1035 + (t975 + t963) * t1022 + t1028 - t1025 / 0.3e1 + t1016 / 0.18e2 + (t969 + 0.2e1 / 0.3e1 * t1027 + t965) * t1029;
t834 = -t1035 / 0.6e1 + t1060;
t977 = t1027 / 0.2e1;
t1205 = t1029 + t977;
t838 = -0.2e1 / 0.3e1 * t1118 + t962 + t1205;
t925 = (t1011 + t1017) * t1027;
t974 = -0.2e1 / 0.3e1 * t1022;
t932 = t974 + t1029;
t728 = t932 * t1169 + t838 * t1114 + 0.14e2 * t765 * t1218 + (t942 * t1035) + (-0.10e2 / 0.3e1 * t1025 + (2 * t1028) - t1193 + t925) * t1022 + t834 * t1236 + (t1088 * t933 + t1210 * t767) * pkin(1);
t1009 = 8 * t1029;
t826 = t1031 * t1125 + t951 + 0.4e1 * t1025 + ((t996 + t1009) * t1027);
t832 = -t1027 + t1072 + t1315;
t741 = t1123 + t826 * t950 + t903 * t943 + (t1124 * t1236 + t1211 * t832) * pkin(1);
t1181 = t1028 - t1025;
t759 = t931 * t1077 - t1019 + (-t952 - t1179) * t1035 + (t925 + t1035 / 0.6e1 - t1016 / 0.6e1 + t1181) * t1022 + t834 * t1029;
t1003 = 0.7e1 * t1025;
t997 = -5 * t1017;
t763 = (t1012 + t966 + (7 * t1027)) * t1035 + (t1003 + ((t997 + 10 * t1029) * t1027) + t1093) * t1022 + t1207;
t920 = t1039 * t1200 - 12 * t1275;
t927 = -0.8e1 * t1025 + (12 * t1192);
t782 = t920 * t986 + t927 * t950 + t1114 + t1169 + t1182 - (6 * t1192);
t805 = t1237 * t896 + t903 * t940;
t886 = 0.16e2 * (t1180 - 6 * t1194) * t1025;
t938 = -30 * t1017 + 60 * t1029;
t944 = t946 ^ 2;
t701 = t886 * t948 + t805 * t1113 + 0.24e2 * t759 * t1218 + ((t1011 + t996 + 28 * t1027) * t1019) + (t910 * t1241) + (0.32e2 * t1215 * t741 + t1323 * t935) * t915 + ((t1005 * t1061) + (t1013 * t1185) + t938 * t1025 + (t1028 * t998) + (28 * t1031 ^ 2) + (4 * t1039 ^ 2) + 0.24e2 * t728 * t946) * t1022 + 0.8e1 * (-t1174 * t763 + t1299 * t739) * pkin(1) + ((t1027 * t938) + 0.16e2 * t782 * t944 + 0.70e2 * t1025 + t1035 + t1061) * t1035;
t1214 = t1035 * t944;
t840 = 0.4e1 / 0.3e1 * t1218 + t917 + t933;
t1100 = -0.24e2 * t840 * t1214;
t1144 = t931 * t1220;
t1158 = -0.12e2 * t1222;
t1168 = -0.6e1 * t1218;
t1219 = t1025 * t949;
t1143 = t983 * t1219;
t1283 = -t983 / 0.2e1;
t889 = 0.7e1 / 0.6e1 * t1022 + t961 + t1205;
t1133 = t1029 + t961 + t971;
t892 = t975 + t1133;
t799 = -t1281 * t889 + t892 * t936;
t806 = (t1022 * t942) - 0.5e1 / 0.3e1 * t1025 + t1130 * t1027 + t1029 * (t963 + t931);
t1131 = 0.2e1 / 0.3e1 * t1017 + t970 + t1011;
t1132 = 0.4e1 / 0.3e1 * t1017 + t969 + t1014;
t953 = -0.20e2 / 0.3e1 * t1027;
t808 = -t1035 + (t953 + t1131) * t1022 - 0.3e1 * t1025 + t1132 * t1027 + t1028;
t900 = t1027 + t1133;
t924 = t1000 + t942;
t812 = t900 * t936 - t924 * t1281 / 0.2e1;
t732 = t1143 * t1308 + t799 * t1166 + (-0.8e1 / 0.3e1 * t1220 + t806) * t936 + (t1211 * t812 + t1283 * t808) * pkin(1);
t1097 = -0.8e1 * pkin(3) * t1173;
t1167 = -0.4e1 * t1218;
t1202 = t996 + t1334;
t1120 = t1010 + t1202;
t811 = t999 + ((t990 + t1120) * t1022) + (t974 + t1121) * t941;
t1249 = t811 * t983;
t792 = t1035 + (t965 + t974 + t1203) * t1022 + t1004 + (t1120 * t1027) + t1029 * (t965 + t932);
t777 = t792 * t936;
t897 = 0.8e1 / 0.3e1 * t1022 + t1122;
t899 = t963 + t970 + t1187;
t804 = -t1281 * t897 + t899 * t936;
t904 = 0.5e1 / 0.6e1 * t1022 + t977 + t961;
t819 = pkin(1) * t1152 + t1188 * t904;
t735 = t985 * t1097 + t819 * t1167 + t777 + (t1211 * t804 - t1249) * pkin(1);
t760 = -pkin(1) * t1249 + t777;
t809 = -(3 * t1035) + (t953 + t1132) * t1022 + t1131 * t1027 + t1181;
t761 = t1281 * t1322 + t809 * t936;
t1209 = -5 * t1022 + t997;
t906 = t1313 * t990;
t762 = t1019 + ((21 * t1027 + t1313) * t1035) + ((t1029 * t1202) + t1008 + 0.35e2 * t1025 + t906) * t1022 + (t1003 + ((t1009 + t1209) * t1027) + (t1029 * (-t1022 + t1179))) * t941;
t863 = 0.4e1 * t1065;
t887 = t936 + 0.2e1 * t1281;
t902 = t964 + t922;
t764 = t943 * t936 + t863 * t950 + (t1299 * t887 + t902 * t983) * t1201;
t770 = (7 * t1019) + ((35 * t1027 + 15 * t1029 + t1209) * t1035) + (0.21e2 * t1025 + t906 + (9 * t1028) + ((t998 - 6 * t1022) * t1029)) * t1022 + t1241;
t1159 = (pkin(1) * t940) / 0.2e1;
t890 = t1029 + 0.5e1 / 0.2e1 * t1022 + 0.3e1 / 0.2e1 * t1027 + t964;
t814 = t1159 * t983 + t890 * t936;
t708 = t814 * t1114 + t764 * t1105 + t732 * t1158 + t761 * t1168 + (-0.6e1 * t735 * t1243 + (-t762 + 0.24e2 * t1144) * t985) * pkin(3) + (-0.6e1 * t760 * t1299 + (t770 + t1100) * t983) * pkin(1);
t686 = t1030 * t708 + t701 * t864;
t1058 = t1138 * t686 + t1274 * t726;
t1018 = 1 / pkin(4);
t1195 = t1018 / pkin(3) ^ 2;
t1128 = t795 * t1195;
t667 = t1058 * t1128;
t1137 = t726 * t1292;
t1273 = t1030 / 0.4e1;
t1059 = t1137 * t686 + t1273 * t724;
t668 = t1059 * t1128;
t634 = -t1073 * t667 - t1074 * t668;
t635 = -t1073 * t668 + t1074 * t667;
t1196 = t1018 * t1023;
t1116 = t1196 / 0.2e1;
t666 = atan2(t1030 * t1116, t686 * t705 * t1116) + t715;
t611 = atan2(t634, t635) + t666;
t610 = cos(t611);
t1298 = t610 / 0.2e1;
t658 = atan2(t690, -t691) + t675;
t657 = cos(t658);
t1297 = -t657 / 0.2e1;
t665 = cos(t666);
t1296 = -t665 / 0.2e1;
t1293 = t674 / 0.2e1;
t714 = cos(t715);
t1291 = -t714 / 0.2e1;
t790 = pkin(8) + atan2(t846, -t847);
t785 = cos(t790);
t1290 = t785 / 0.2e1;
t791 = qJ(1) + atan2(t846, t847);
t787 = cos(t791);
t1289 = t787 / 0.2e1;
t1288 = t795 / 0.2e1;
t1284 = t982 / 0.2e1;
t1282 = -t986 / 0.2e1;
t664 = sin(t666);
t1279 = pkin(4) * t664;
t1278 = pkin(4) * t665;
t1277 = pkin(6) * t673;
t1276 = pkin(6) * t674;
t1271 = Icges(2,4) * t983;
t1270 = Icges(2,4) * t986;
t713 = sin(t715);
t1269 = Icges(3,4) * t713;
t1268 = Icges(3,4) * t714;
t1266 = Icges(5,4) * t664;
t1265 = Icges(5,4) * t665;
t784 = sin(t790);
t1264 = Icges(6,4) * t784;
t1262 = Icges(8,4) * t985;
t786 = sin(t791);
t1261 = Icges(9,4) * t786;
t656 = sin(t658);
t1260 = Icges(10,4) * t656;
t1259 = Icges(10,4) * t657;
t1135 = -t1250 / 0.2e1;
t723 = 0.1e1 / t724 ^ 2;
t929 = V_base(6) + qJD(1);
t663 = t929 + ((t1135 * t726 + t1288 * t702) / t1319 - 0.2e1 * (t1135 * t724 + t1288 * t703) * t726 * t723) * pkin(3) * t1023 / (t723 * t726 ^ 2 + 0.1e1) * t798;
t1256 = t663 * t713;
t1255 = t663 * t714;
t1071 = t1034 * t946 * t1147;
t1066 = -0.24e2 * t1071;
t1216 = t1031 * t950;
t1172 = pkin(7) * t1216;
t1082 = t1172 * t1227;
t1067 = -0.24e2 * t1082;
t1069 = t933 * t1085;
t1070 = t933 * t1086;
t1089 = t1027 * t1148;
t1078 = -0.24e2 * t1089;
t1129 = qJD(1) * t1215;
t1099 = pkin(1) * t1129;
t1079 = t983 * t1099;
t1094 = t1225 * t1237;
t1164 = pkin(1) * t1227;
t1117 = pkin(7) * t1164;
t1096 = -0.6e1 * t1117;
t1163 = pkin(1) * t1225;
t1101 = t923 * t1163;
t1106 = -0.2e1 * t1148;
t1111 = t1218 * t1300;
t1115 = -0.4e1 * t1164;
t1145 = t986 * t1224;
t1149 = t983 * t1226;
t1162 = pkin(3) * t1224;
t1175 = pkin(3) * t1243;
t1233 = 0.4e1 * t1326 * t898;
t1053 = t1057 * pkin(3);
t1048 = pkin(1) * t931 * t1053 * t1218;
t1234 = t940 * t1067 - 0.24e2 * t1048;
t807 = t1027 * t1053 * t1211;
t856 = t1161 - t1164;
t908 = -0.2e1 * t1117;
t947 = t983 ^ 2;
t1254 = ((-0.8e1 * t986 * t915 * t1099 + t947 * t1129 * t1320 + t1066 * t1281 + (0.2e1 * (-t1027 * t1162 - t1031 * t1225) * t950 + t862 * t1106 - t942 * t1162 + (t939 * t1225 + (-t1145 - t1149) * pkin(7) * t1324) * pkin(1)) * t1170 - 0.8e1 * t771 * t1091 - 0.4e1 * (-t1101 + (0.4e1 * t985 * t1089 + (-t922 + 0.2e1 * t1218) * t1224) * pkin(3) + ((-t1162 - t1163) * t937 - t888 * t1164) * t1228) * t1175 + t1097 * t1224 + t1067 * t936 + (t1094 * t1301 - t1224 * t913) * t950 + t822 * t1106 - 0.4e1 * (-t1162 * t922 - t1101) * t1191 + 0.4e1 * t820 * t1117 + t845 * t1162 + t855 * t1163 + 0.4e1 * t1312 * t768) * t1030 + t727 * t1136 + (0.8e1 * (t908 - 0.8e1 * t1089) * t1142 + (-0.12e2 * t1082 + 0.6e1 * (-0.4e1 / 0.9e1 * t1140 + 0.4e1 / 0.9e1 * t1146) * t1111 - 0.12e2 * t828 * t1089 - t807 + t839 * pkin(7) * t1115 - 0.2e1 * t1070 + 0.2e1 * t1069) * t1157 + 0.24e2 * t740 * t1091 + 0.6e1 * (t918 * t1106 + (-t1227 * t833 + t1232 * t986) * pkin(7) * t1200 + t1233) * t1175 + t800 * t1078 + t1233 * t1153 + t769 * t1096 + t1234 + (-0.8e1 * t1079 + 0.24e2 * t1071) * t850 + t1327 * t802 - 0.6e1 * t1312 * t742) * t864 + t718 * t856) / t1325;
t1252 = 0.1e1 / t686 ^ 2 * t1325;
t1235 = t1327 * t810;
t609 = sin(t611);
t1229 = Icges(11,4) * t609;
t1178 = t929 * t1281 + V_base(1);
t1177 = V_base(5) * t937 + V_base(3);
t1165 = pkin(5) * V_base(6);
t1150 = t714 * V_base(5);
t1141 = t983 * t1214;
t1139 = -t1254 / 0.4e1;
t1127 = 0.8e1 / 0.3e1 * t1224;
t1110 = pkin(3) * t1256 + t1178;
t1109 = pkin(2) * t1256 + t1178;
t1108 = pkin(3) * t1150 + t1177;
t1107 = pkin(2) * t1150 + t1177;
t1103 = pkin(3) * t1145;
t1092 = qJD(1) * t1143;
t1090 = t1035 * t945 * t1223;
t1084 = -pkin(2) * t713 - t1281;
t1083 = -pkin(3) * t713 - t1281;
t1080 = -t929 * t937 + V_base(2);
t1068 = -0.48e2 * t1082;
t1062 = t663 + t1328;
t1050 = t1057 * t1201;
t1052 = -t1162 * t792 - t1163 * t811;
t636 = (t1100 * t1163 - 0.24e2 * pkin(1) * (-0.8e1 / 0.3e1 * t1089 + t908) * t1141 - 0.96e2 * t840 * t1090 * t1281 + ((-t943 + t1167) * t1162 + 0.2e1 * (pkin(1) * t902 - t863 * t983 - 0.2e1 * t1216) * t1225 + (-0.2e1 * t1103 + (-0.2e1 * t887 * t983 + 0.4e1 * t1280) * qJD(1)) * pkin(1) * pkin(7)) * t1105 + (-t806 * t1162 - t808 * t1163 / 0.2e1 + ((-t1162 * t892 - t1163 * t889) * t1306 - 0.8e1 * t799 * t1148) * t1027 + (t948 * t1127 + 0.32e2 / 0.3e1 * t949 * t1149) * t1272 + (t900 * t1103 * t1307 + ((0.12e2 * t947 * t950 - 0.4e1 * t948) * t1025 + (-0.2e1 * t1280 * t924 - 0.4e1 * t812 * t983) * pkin(1)) * qJD(1)) * pkin(7)) * t1158 - 0.24e2 * t732 * t1091 - 0.6e1 * ((-0.4e1 * (pkin(1) * t1094 - 0.2e1 * t1162 * t904) * t950 + 0.8e1 * t819 * t1148) * t1027 + ((-t1162 * t899 - t1163 * t897) * t1189 + t804 * t1115 + (0.24e2 * t1149 * t950 + 0.8e1 * t1224 * t949) * pkin(3) * t1031) * pkin(7) + t1052) * t1175 - 0.24e2 * t1144 * t1162 - 0.96e2 * t931 * t1092 * t936 + (t1159 * t1225 - t1162 * t890) * t1114 + t814 * t1068 + (-t1162 * t809 + t1163 * t1322) * t1168 + 0.12e2 * t761 * t1089 - 0.6e1 * t1052 * t1191 + 0.6e1 * t760 * t1117 + t762 * t1162 + t770 * t1163 + (0.8e1 * t1079 + t1066) * t764 + 0.6e1 * t1312 * t735) * t1030 + t708 * t1136 + (0.16e2 * (t1304 * t927 - 0.48e2 * t1172 - 0.32e2 * t1219 - t920) * qJD(1) * t1141 + 0.64e2 * t782 * t1090 + 0.32e2 * (-t807 + (t826 * t1304 + (t1307 * t832 - 0.24e2 * t1216) * pkin(7)) * t1227 + (-t1050 * t1236 - t1051 * t1216) * pkin(3)) * t1142 + 0.24e2 * (-0.32e2 * t932 * t1092 + (-0.2e1 / 0.3e1 * t1140 + 0.2e1 / 0.3e1 * t1146) * t1114 * t1300 + t838 * t1068 - 0.28e2 * t765 * t1089 + (-0.8e1 / 0.3e1 * t1140 + t983 * t1127) * t893 * pkin(3) * t1027 * t1210 + t767 * t1096 + 0.4e1 * (-t1070 + t1069) * t903 - 0.64e2 / 0.3e1 * t1057 * t891 * t1111) * t1222 + 0.48e2 * t728 * t1091 - 0.8e1 * t729 * t1087 + 0.8e1 * (t803 * t1078 + (-pkin(3) * t1049 * t903 - t1227 * t772) * pkin(7) * t1199 + t1234 + t1235) * t1175 + t1104 * t1323 - 0.4e1 * t886 * t949 * t1227 - pkin(3) * t1050 * t1113 * t1237 - 0.96e2 * t805 * t1082 - 0.96e2 * t903 * t1048 - 0.48e2 * t759 * t1089 + 0.8e1 * t1235 * t1191 - 0.8e1 * t739 * t1117 + 0.8e1 * t1326 * t763 + (-0.32e2 * t1079 + 0.96e2 * t1071) * t741) * t864 + t701 * t856;
t603 = t663 + (0.1e1 / t686 * t707 * t1136 - 0.2e1 * (t636 * t705 / 0.2e1 - t686 * t1254 / 0.2e1) * pkin(4) * pkin(3) * t1030 * t1196 * t1252) / (t1252 * t738 + 0.1e1);
t1056 = -pkin(2) * t1255 + t1080;
t1055 = -pkin(3) * t1255 + t1080;
t930 = Icges(8,4) * t982;
t928 = V_base(6) + qJD(2);
t883 = -rSges(2,1) * t986 + rSges(2,2) * t983;
t882 = -rSges(8,1) * t985 + rSges(8,2) * t982;
t881 = -rSges(2,1) * t983 - rSges(2,2) * t986;
t880 = rSges(8,1) * t982 + rSges(8,2) * t985;
t876 = -Icges(2,1) * t986 + t1271;
t875 = -Icges(2,1) * t983 - t1270;
t874 = -Icges(8,1) * t985 + t930;
t873 = Icges(8,1) * t982 + t1262;
t872 = Icges(2,2) * t983 - t1270;
t871 = -Icges(2,2) * t986 - t1271;
t870 = Icges(8,2) * t982 - t1262;
t869 = Icges(8,2) * t985 + t930;
t860 = -rSges(1,1) * V_base(5) + rSges(1,2) * V_base(4) + V_base(3);
t859 = rSges(1,1) * V_base(6) - rSges(1,3) * V_base(4) + V_base(2);
t858 = -rSges(1,2) * V_base(6) + rSges(1,3) * V_base(5) + V_base(1);
t817 = V_base(5) * rSges(2,3) - t881 * t929 + V_base(1);
t816 = V_base(5) * rSges(8,3) - t882 * t928 + V_base(1);
t815 = -V_base(4) * rSges(2,3) + t883 * t929 + V_base(2);
t801 = -V_base(4) * rSges(8,3) + V_base(6) * pkin(7) + t880 * t928 + V_base(2);
t797 = t881 * V_base(4) - t883 * V_base(5) + V_base(3);
t789 = t1314 * t1073;
t788 = t1314 * t1074;
t781 = t882 * V_base(4) + V_base(3) + (-pkin(7) - t880) * V_base(5);
t778 = Icges(9,4) * t787;
t776 = Icges(6,4) * t785;
t758 = rSges(9,1) * t787 - rSges(9,2) * t786;
t757 = rSges(9,1) * t786 + rSges(9,2) * t787;
t756 = Icges(9,1) * t787 - t1261;
t755 = Icges(9,1) * t786 + t778;
t754 = -Icges(9,2) * t786 + t778;
t753 = Icges(9,2) * t787 + t1261;
t750 = rSges(6,1) * t785 - rSges(6,2) * t784;
t749 = rSges(6,1) * t784 + rSges(6,2) * t785;
t748 = Icges(6,1) * t785 - t1264;
t747 = Icges(6,1) * t784 + t776;
t746 = -Icges(6,2) * t784 + t776;
t745 = Icges(6,2) * t785 + t1264;
t734 = V_base(6) - t1329;
t733 = t929 + t1329;
t731 = -t758 * V_base(5) + (t757 - t1281) * V_base(4) + t1177;
t730 = t749 * V_base(4) - t750 * V_base(5) + V_base(3) + (t979 * V_base(4) - t980 * V_base(5)) * pkin(5);
t722 = V_base(5) * rSges(6,3) - t1165 * t979 - t734 * t749 + V_base(1);
t721 = -V_base(4) * rSges(6,3) + t1165 * t980 + t734 * t750 + V_base(2);
t720 = V_base(5) * rSges(9,3) - t733 * t757 + t1178;
t719 = -V_base(4) * rSges(9,3) + t733 * t758 + t1080;
t700 = -rSges(3,1) * t714 + rSges(3,2) * t713;
t699 = -rSges(3,1) * t713 - rSges(3,2) * t714;
t698 = -Icges(3,1) * t714 + t1269;
t697 = -Icges(3,1) * t713 - t1268;
t696 = Icges(3,2) * t713 - t1268;
t695 = -Icges(3,2) * t714 - t1269;
t682 = -t700 * V_base(5) + (t699 - t1281) * V_base(4) + t1177;
t660 = V_base(5) * rSges(3,3) - t663 * t699 + t1178;
t659 = -V_base(4) * rSges(3,3) + t663 * t700 + t1080;
t654 = rSges(4,1) * t674 - rSges(4,2) * t673;
t653 = rSges(7,1) * t674 - rSges(7,2) * t673;
t652 = rSges(4,1) * t673 + rSges(4,2) * t674;
t651 = rSges(7,1) * t673 + rSges(7,2) * t674;
t633 = 0.1e1 / t635 ^ 2;
t632 = -rSges(5,1) * t665 + rSges(5,2) * t664;
t631 = -rSges(5,1) * t664 - rSges(5,2) * t665;
t630 = -Icges(5,1) * t665 + t1266;
t629 = -Icges(5,1) * t664 - t1265;
t628 = Icges(5,2) * t664 - t1265;
t627 = -Icges(5,2) * t665 - t1266;
t623 = -rSges(10,1) * t657 + rSges(10,2) * t656;
t622 = -rSges(10,1) * t656 - rSges(10,2) * t657;
t621 = -Icges(10,1) * t657 + t1260;
t620 = -Icges(10,1) * t656 - t1259;
t619 = Icges(10,2) * t656 - t1259;
t618 = -Icges(10,2) * t657 - t1260;
t615 = -t653 * V_base(5) + (t651 - t1281) * V_base(4) + t1177;
t614 = -t654 * V_base(5) + (t1084 + t652) * V_base(4) + t1107;
t612 = -t632 * V_base(5) + (t1083 + t631) * V_base(4) + t1108;
t608 = Icges(11,4) * t610;
t606 = (-t1059 * t1250 + (t703 * t1273 + t724 * t1251 / 0.8e1 + t636 * t1137 + (t1139 * t726 + t1292 * t702) * t686) * t795) * t1195;
t605 = (-t1058 * t1250 + (t636 * t1138 + t702 * t1274 - t726 * t1251 / 0.8e1 + (t1139 * t724 + t1292 * t703) * t686) * t795) * t1195;
t604 = -(t669 * t984 + t670 * t987) * t690 * t1303 * t1310 + t1062;
t602 = (-t623 - t1276) * V_base(5) + (t1084 + t622 + t1277) * V_base(4) + t1107;
t601 = V_base(5) * rSges(7,3) - t604 * t651 + t1178;
t600 = -V_base(4) * rSges(7,3) + t604 * t653 + t1080;
t599 = rSges(11,1) * t610 - rSges(11,2) * t609;
t598 = rSges(11,1) * t609 + rSges(11,2) * t610;
t597 = Icges(11,1) * t610 - t1229;
t596 = Icges(11,1) * t609 + t608;
t595 = -Icges(11,2) * t609 + t608;
t594 = Icges(11,2) * t610 + t1229;
t591 = V_base(5) * rSges(4,3) - t604 * t652 + t1109;
t590 = -V_base(4) * rSges(4,3) + t604 * t654 + t1056;
t589 = V_base(5) * rSges(5,3) - t603 * t631 + t1110;
t588 = -V_base(4) * rSges(5,3) + t603 * t632 + t1055;
t587 = t1062 - t1328;
t586 = (-t599 + t1278) * V_base(5) + (t1083 + t598 - t1279) * V_base(4) + t1108;
t585 = V_base(5) * rSges(10,3) - t1277 * t604 - t587 * t622 + t1109;
t584 = -V_base(4) * rSges(10,3) + t1276 * t604 + t587 * t623 + t1056;
t583 = ((-t1073 * t605 - t1074 * t606 - t667 * t788 + t668 * t789) / t635 - (-t1073 * t606 + t1074 * t605 - t667 * t789 - t668 * t788) * t634 * t633) / (t633 * t634 ^ 2 + 0.1e1) + t603;
t582 = V_base(5) * rSges(11,3) + t1279 * t603 - t583 * t598 + t1110;
t581 = -V_base(4) * rSges(11,3) - t1278 * t603 + t583 * t599 + t1055;
t1 = Icges(11,3) * t583 ^ 2 / 0.2e1 + m(6) * (t721 ^ 2 + t722 ^ 2 + t730 ^ 2) / 0.2e1 + m(9) * (t719 ^ 2 + t720 ^ 2 + t731 ^ 2) / 0.2e1 + m(3) * (t659 ^ 2 + t660 ^ 2 + t682 ^ 2) / 0.2e1 + m(4) * (t590 ^ 2 + t591 ^ 2 + t614 ^ 2) / 0.2e1 + Icges(5,3) * t603 ^ 2 / 0.2e1 + Icges(6,3) * t734 ^ 2 / 0.2e1 + Icges(10,3) * t587 ^ 2 / 0.2e1 + (Icges(1,6) * V_base(6) + (Icges(11,5) * t609 + Icges(11,6) * t610) * t583 + (-Icges(10,5) * t656 - Icges(10,6) * t657) * t587 + (-Icges(5,5) * t664 - Icges(5,6) * t665) * t603 + (-Icges(3,5) * t713 - Icges(3,6) * t714) * t663 + (Icges(9,5) * t786 + Icges(9,6) * t787) * t733 + (Icges(6,5) * t784 + Icges(6,6) * t785) * t734 + (-Icges(8,5) * t985 + Icges(8,6) * t982) * t928 + (-Icges(2,5) * t983 - Icges(2,6) * t986) * t929 + (t627 * t1296 - t629 * t664 / 0.2e1 + t618 * t1297 - t620 * t656 / 0.2e1 + t870 * t1284 - t874 * t985 / 0.2e1 + t695 * t1291 - t697 * t713 / 0.2e1 + t871 * t1282 + t875 * t1283 + t753 * t1289 + t755 * t786 / 0.2e1 + t745 * t1290 + t747 * t784 / 0.2e1 + t594 * t1298 + t596 * t609 / 0.2e1 + Icges(1,2) / 0.2e1 + t1331 * t673 / 0.2e1 + t1333 * t1293) * V_base(5)) * V_base(5) + Icges(2,3) * t929 ^ 2 / 0.2e1 + m(5) * (t588 ^ 2 + t589 ^ 2 + t612 ^ 2) / 0.2e1 + Icges(3,3) * t663 ^ 2 / 0.2e1 + m(8) * (t781 ^ 2 + t801 ^ 2 + t816 ^ 2) / 0.2e1 + m(2) * (t797 ^ 2 + t815 ^ 2 + t817 ^ 2) / 0.2e1 + m(1) * (t858 ^ 2 + t859 ^ 2 + t860 ^ 2) / 0.2e1 + (Icges(1,4) * V_base(5) + Icges(1,5) * V_base(6) + (t628 * t664 / 0.2e1 + t630 * t1296 + t619 * t656 / 0.2e1 + t621 * t1297 + t869 * t985 / 0.2e1 + t873 * t1284 + t696 * t713 / 0.2e1 + t698 * t1291 + t872 * t983 / 0.2e1 + t876 * t1282 - t754 * t786 / 0.2e1 + t756 * t1289 - t746 * t784 / 0.2e1 + t748 * t1290 - t595 * t609 / 0.2e1 + t597 * t1298 + Icges(1,1) / 0.2e1 - t1332 * t673 / 0.2e1 + t1330 * t1293) * V_base(4) + (Icges(9,5) * t787 - Icges(9,6) * t786) * t733 + (Icges(8,5) * t982 + Icges(8,6) * t985) * t928 + (-Icges(2,5) * t986 + Icges(2,6) * t983) * t929 + (Icges(11,5) * t610 - Icges(11,6) * t609) * t583 + (-Icges(10,5) * t657 + Icges(10,6) * t656) * t587 + (-Icges(5,5) * t665 + Icges(5,6) * t664) * t603 + (-Icges(3,5) * t714 + Icges(3,6) * t713) * t663 + (Icges(6,5) * t785 - Icges(6,6) * t784) * t734) * V_base(4) + ((Icges(7,3) / 0.2e1 + Icges(4,3) / 0.2e1) * t604 + (t1316 * V_base(5) + t1317 * V_base(4)) * t674 + (-t1316 * V_base(4) + t1317 * V_base(5)) * t673) * t604 + Icges(8,3) * t928 ^ 2 / 0.2e1 + Icges(1,3) * V_base(6) ^ 2 / 0.2e1 + Icges(9,3) * t733 ^ 2 / 0.2e1 + m(7) * (t600 ^ 2 + t601 ^ 2 + t615 ^ 2) / 0.2e1 + m(10) * (t584 ^ 2 + t585 ^ 2 + t602 ^ 2) / 0.2e1 + m(11) * (t581 ^ 2 + t582 ^ 2 + t586 ^ 2) / 0.2e1 + ((-t875 - t872) * t986 + (t870 - t873) * t985 + (t871 - t876) * t983 + (t874 + t869) * t982 + (t755 + t754) * t787 + (-t753 + t756) * t786 + (t746 + t747) * t785 + (t748 - t745) * t784 + (-t697 - t696) * t714 + (t695 - t698) * t713 + (-t628 - t629) * t665 + (-t630 + t627) * t664 + (-t620 - t619) * t657 + (t618 - t621) * t656 + (t595 + t596) * t610 + (t597 - t594) * t609 + (t1331 + t1332) * t674 + (t1330 - t1333) * t673) * V_base(4) * V_base(5) / 0.2e1;
T = t1;
