% Calculate potential energy for
% picker2Dm2TE
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [2x1]
%   Generalized joint coordinates (joint angles)
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[L1,L2,L3,L4,L5,L6,e,phi05,phi1]';
% m [11x1]
%   mass of all robot links (including the base)
% rSges [11x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% 
% Output:
% U [1x1]
%   Potential energy

% Quelle: HybrDyn-Toolbox
% Datum: 2020-05-09 14:06
% Revision: 73758128893bc0a8beabae04bd7e71472107ac81 (2020-05-07)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function U = picker2Dm2TE_energypot_fixb_slag_vp1(qJ, g, ...
  pkin, m, rSges)
%% Coder Information
%#codegen
%$cgargs {zeros(2,1),zeros(3,1),zeros(9,1),zeros(11,1),zeros(11,3)}
assert(isreal(qJ) && all(size(qJ) == [2 1]), ...
  'picker2Dm2TE_energypot_fixb_slag_vp1: qJ has to be [2x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'picker2Dm2TE_energypot_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'picker2Dm2TE_energypot_fixb_slag_vp1: pkin has to be [9x1] (double)');
assert(isreal(m) && all(size(m) == [11 1]), ...
  'picker2Dm2TE_energypot_fixb_slag_vp1: m has to be [11x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [11,3]), ...
  'picker2Dm2TE_energypot_fixb_slag_vp1: rSges has to be [11x3] (double)');

%% Symbolic Calculation
% From energy_potential_fixb_worldframe_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2020-05-09 10:34:18
% EndTime: 2020-05-09 10:34:28
% DurationCPUTime: 6.56s
% Computational Cost: add. (40049->465), mult. (117758->609), div. (838->5), fcn. (20852->10), ass. (0->227)
t421 = sin(qJ(1));
t422 = cos(qJ(2));
t585 = t421 * t422;
t541 = pkin(3) * t585;
t512 = pkin(1) * t541;
t358 = -0.2e1 * t512;
t448 = 0.2e1 * pkin(3);
t460 = pkin(1) ^ 2;
t458 = t460 ^ 2;
t462 = pkin(7) ^ 2;
t423 = cos(qJ(1));
t390 = t423 ^ 2;
t420 = sin(qJ(2));
t376 = pkin(3) * t420;
t601 = 2 * pkin(7);
t366 = t376 * t601;
t387 = t420 ^ 2;
t455 = pkin(3) ^ 2;
t586 = t387 * t455;
t544 = 0.2e1 * t586;
t558 = -t455 + t462;
t492 = t366 + t544 + t558;
t489 = t492 * t390;
t382 = t460 + t462;
t450 = pkin(4) ^ 2;
t522 = -t450 + t382;
t505 = t366 + t522;
t596 = t376 + pkin(7);
t519 = t596 * t423;
t559 = t450 - t462;
t521 = -0.2e1 * t455 + t559;
t547 = -0.4e1 * t376;
t556 = t460 - t462;
t597 = 0.2e1 * t460;
t608 = 0.4e1 * pkin(1);
t336 = sqrt(-0.4e1 * t460 * t489 + 0.4e1 * t556 * t586 + pkin(7) * t522 * t547 - t458 + t521 * t597 - (t462 - (t448 + pkin(4)) * pkin(4)) * (t462 + (t448 - pkin(4)) * pkin(4)) + (-(t358 + t505) * t519 + t505 * t541) * t608);
t520 = t455 + t382;
t486 = 0.1e1 / (0.2e1 * pkin(1) * t519 + t358 + t366 + t520);
t501 = -pkin(1) + t541;
t439 = 0.3e1 * t460;
t502 = t439 - t521;
t507 = -0.4e1 * t512;
t584 = t422 * t423;
t540 = pkin(3) * t584;
t599 = 0.4e1 * t455;
t482 = t486 * ((t421 * t596 + t540) * t336 - (t366 + t502 + t507) * t519 + t501 * t366 + t502 * t541 + (-0.2e1 * t489 + t544 - t599 - t522) * pkin(1));
t479 = t482 / 0.4e1;
t377 = pkin(3) * t422;
t600 = 0.2e1 * t455;
t496 = t600 + t505;
t378 = pkin(1) * t423;
t550 = 0.2e1 * t378;
t485 = t486 * ((t519 - t501) * t336 + (t492 * t550 + t496 * t596) * t421 + (t423 * t496 + (0.4e1 * t390 - 0.2e1) * pkin(1) * t596) * t377);
t451 = 0.1e1 / pkin(4);
t580 = t451 / pkin(3) ^ 2;
t467 = t455 ^ 2;
t449 = t450 ^ 2;
t461 = t462 ^ 2;
t557 = t458 + t461;
t446 = 0.2e1 * t462;
t562 = t446 - t450;
t577 = t462 * t450;
t490 = t562 * t460 + t449 / 0.6e1 + t557 - t577;
t345 = -t467 / 0.6e1 + t490;
t411 = -t455 / 0.3e1;
t372 = t411 + t462;
t348 = t372 * t358;
t365 = t378 + pkin(7);
t353 = t376 + t365;
t381 = -0.3e1 * t455 + t462;
t389 = t423 * t390;
t463 = pkin(1) * t460;
t575 = t463 * t389;
t546 = pkin(7) * t575;
t517 = 0.8e1 * t546;
t356 = t381 * t517;
t380 = -t450 - t455;
t445 = 0.3e1 * t462;
t368 = t445 + t380;
t591 = t368 * t460;
t357 = 0.10e2 * t591;
t407 = 0.4e1 / 0.3e1 * t455;
t401 = -t450 / 0.3e1;
t527 = t401 + t382;
t359 = t407 + t527;
t402 = -t450 / 0.2e1;
t361 = t402 + t520;
t362 = -t450 + t520;
t367 = pkin(7) * t550;
t444 = 0.4e1 * t462;
t370 = (t444 + t450) * t460;
t373 = -t460 / 0.3e1 + t462;
t374 = 0.10e2 / 0.3e1 * t460;
t375 = t382 ^ 2;
t379 = -0.30e2 * t450 + 0.60e2 * t462;
t384 = -0.3e1 * t460 + t462;
t399 = -t450 / 0.6e1;
t400 = -t450 / 0.4e1;
t408 = 0.2e1 / 0.3e1 * t455;
t413 = 0.4e1 / 0.3e1 * t460;
t415 = t460 / 0.2e1;
t425 = 0.15e2 * t458;
t426 = 0.15e2 * t460;
t427 = 0.10e2 * t460;
t432 = -0.2e1 * t450;
t433 = -0.5e1 * t450;
t434 = 0.5e1 * t467;
t435 = 0.7e1 * t458;
t436 = 0.5e1 * t458;
t437 = 0.7e1 * t460;
t438 = 0.6e1 * t460;
t442 = 0.3e1 * t461;
t443 = 0.8e1 * t462;
t466 = pkin(3) * t455;
t452 = t466 ^ 2;
t471 = pkin(7) * t462;
t487 = 0.5e1 / 0.6e1 * t467 + t490;
t495 = t462 - t512;
t570 = t449 / 0.2e1 - t467 / 0.2e1;
t504 = -0.3e1 * t577 + t442 + t570;
t508 = -0.6e1 * t512;
t404 = -0.3e1 / 0.2e1 * t450;
t569 = t404 + t445;
t572 = t382 * ((t404 + t446) * t460 - 0.3e1 / 0.2e1 * t577 + t557 + t570) + t452;
t497 = ((t374 + t562) * t455 + t487) * t508 + (t425 + (-0.9e1 * t450 + 0.18e2 * t462) * t460 + t504) * t455 + (t426 + t569) * t467 + t572;
t498 = t361 * t507;
t563 = t439 + t462;
t524 = t455 + t563;
t594 = pkin(1) * t421;
t499 = -(0.3e1 * t455 + t382) * t594 + t524 * t377;
t403 = -0.2e1 / 0.3e1 * t450;
t412 = -0.2e1 / 0.3e1 * t455;
t525 = t403 + t382;
t564 = t427 + t446;
t568 = t412 + t462;
t500 = -(t434 + (0.5e1 * t460 + t368) * t600 + (t412 + t525) * t382) * t594 + (t467 + (t403 + t412 + t564) * t455 + t436 + 0.2e1 * t591 + t462 * (t403 + t568)) * t377;
t561 = t449 - t467;
t503 = -0.6e1 * t577 + 0.6e1 * t461 + t561;
t526 = t403 + t408 + t446;
t571 = (t408 + t525) * t382 + t467;
t506 = t359 * t507 + (t438 + t526) * t455 + t571;
t509 = t575 * t377;
t579 = t458 * t390 ^ 2;
t510 = t579 * t377;
t537 = 0.16e2 * t575;
t515 = pkin(7) * t537;
t516 = 0.20e2 / 0.3e1 * t460;
t560 = -t450 + t455;
t523 = t445 + t560;
t409 = t455 / 0.3e1;
t528 = t399 + t409 + t462;
t529 = t450 / 0.3e1 + t409 + t446;
t530 = 0.2e1 / 0.3e1 * t450 + t408 + t444;
t531 = 0.4e1 / 0.3e1 * t450 + t407 - 0.2e1 * t462;
t583 = (pkin(7) + pkin(3)) * (pkin(7) - pkin(3));
t532 = t421 * t583;
t548 = 0.6e1 * t378;
t533 = pkin(7) * t548;
t549 = 0.4e1 * t378;
t534 = pkin(7) * t549;
t535 = -t594 / 0.2e1;
t578 = t460 * t390;
t538 = 0.12e2 * t578;
t539 = t460 * t377;
t542 = 0.4e1 * t578;
t543 = 0.8e1 * t579;
t587 = t420 * t387 * t466;
t545 = -0.8e1 * t587;
t551 = 0.2e1 * t594;
t552 = pkin(7) * t378;
t553 = 4 * pkin(7);
t554 = t461 + t467;
t555 = t461 - t458;
t565 = 0.4e1 / 0.7e1 * t462 - t450 / 0.7e1;
t566 = t415 + t462;
t567 = t460 / 0.3e1 + t462;
t576 = t462 * t460;
t582 = (pkin(7) + pkin(1)) * (pkin(7) - pkin(1));
t588 = t387 ^ 2 * t467;
t589 = t380 * t462;
t590 = t375 * (-t455 + t522);
t592 = (-t421 * t463 + t539) * t390;
t598 = 0.4e1 * t458;
t602 = t400 + t455 / 0.2e1;
t593 = ((-0.24e2 * (0.4e1 / 0.3e1 * t578 + t367 + t373) * t588 * t594 - 0.12e2 * (-0.8e1 / 0.3e1 * t510 + ((t413 + t528) * t377 - (0.7e1 / 0.6e1 * t455 + t399 + t566) * t594) * t542 + (-t455 * t556 - 0.5e1 / 0.3e1 * t458 + t529 * t460 + t462 * (t401 + t372)) * t377 + (-t467 + (-t516 + t530) * t455 - 0.3e1 * t458 + t531 * t460 + t461) * t535 + (-t421 * t458 * t389 + ((t460 + t528) * t377 + (t600 - t556) * t535) * t378) * t553) * t586 + 0.24e2 * t372 * t510 + ((t462 + 0.5e1 / 0.2e1 * t455 + 0.3e1 / 0.2e1 * t460 + t402) * t377 + t381 * t594 / 0.2e1) * t515 - 0.6e1 * ((-0.3e1 * t467 + (-t516 + t531) * t455 + t530 * t460 + t555) * t377 - 0.2e1 * (-0.5e1 / 0.3e1 * t467 + (-t460 + t529) * t455 + t462 * (t411 + t527)) * t594) * t578 - 0.6e1 * t500 * t552 - (t452 + (0.21e2 * t460 + t368) * t467 + (t357 + t442 + 0.35e2 * t458 + 0.2e1 * t589) * t455 + (t435 + (t433 + t443 - 0.5e1 * t455) * t460 + t462 * (-t450 + t558)) * t382) * t377 + (0.7e1 * t452 + (t437 + t368) * t434 + (t357 + 0.21e2 * t458 + 0.9e1 * t461 + 0.6e1 * t589) * t455 + t590) * t594) * t336 + (0.16e2 * (t543 + t515 + (-0.8e1 * t458 + 0.12e2 * t576) * t390 + (-0.12e2 * pkin(7) * t463 + t471 * t608) * t423 - 0.6e1 * t576 + t557) * t588 + 0.24e2 * (t568 * t543 + 0.14e2 * (-0.32e2 / 0.21e2 * (t462 + t455 / 0.4e1 + t460 / 0.4e1 - t450 / 0.8e1) * t512 + 0.5e1 / 0.42e2 * t467 + (0.16e2 / 0.21e2 * t460 + t565) * t455 + t458 / 0.7e1 + t565 * t460 + t461 - 0.3e1 / 0.7e1 * t577 + t449 / 0.42e2) * t578 + t373 * t498 - t556 * t467 + (t370 - 0.10e2 / 0.3e1 * t458 + 0.2e1 * t461 - t577) * t455 + t345 * t582 + ((-0.2e1 / 0.3e1 * t512 + t400 + t566) * t537 + (-0.8e1 / 0.3e1 * (t567 + t602) * t512 + 0.5e1 / 0.18e2 * t467 + (0.4e1 / 0.3e1 * t462 + t413 + t401) * t455 + t461 + 0.2e1 / 0.3e1 * t576 - 0.2e1 / 0.3e1 * t577 - t458 / 0.3e1 + t449 / 0.18e2) * t548) * pkin(7)) * t586 + 0.16e2 * (-0.6e1 * t462 * t455 + t554) * t579 + 0.32e2 * (t358 * t583 + t361 * t381) * t546 + 0.24e2 * (t372 * t498 - t452 + (-t374 + t559) * t467 + (t370 + t467 / 0.6e1 - t449 / 0.6e1 + t555) * t455 + t345 * t462) * t578 + 0.8e1 * t497 * t552 - 0.8e1 * ((t437 + t569) * t467 + (t435 + (t433 + 0.10e2 * t462) * t460 + t504) * t455 + t572) * t512 + t467 ^ 2 + (t432 + t444 + 0.28e2 * t460) * t452 + (t379 * t460 + 0.70e2 * t458 + t503) * t467 + (t379 * t458 + t503 * t438 + t561 * t446 - 0.6e1 * t461 * t450 + 0.28e2 * t463 ^ 2 + 0.4e1 * t471 ^ 2) * t455 + t362 * t590) * t353 + (((0.4e1 * t592 + (t377 + t551) * t367 + t384 * t377 + (t402 + t524) * t551) * t545 - 0.6e1 * (-0.4e1 * (0.2e1 * (0.5e1 / 0.6e1 * t455 + t415 + t399) * t377 + pkin(1) * t532) * t578 + (-0.8e1 * t509 + ((t401 + t408 + t563) * t377 - (0.8e1 / 0.3e1 * t455 + t527) * t594) * t549) * pkin(7) + t500) * t376) * t336 + (0.32e2 * (t517 + (-0.4e1 * t463 * t541 + t598 + (t599 + t432 + t443) * t460) * t390 + (-t460 + t495 + t602) * t534 + t358 * t582 + t384 * t361) * t587 + 0.8e1 * (t356 + (t361 * t583 + t348) * t538 + (t498 + (t438 + t562) * t455 + t487) * t533 + t497) * t376) * t353) * t365) / ((-0.4e1 * (-t556 * t377 + 0.2e1 * t592 + (t540 * t601 + t421 * (t455 + t597)) * pkin(1)) * t586 + 0.8e1 * pkin(7) * t509 + ((pkin(3) * t598 + 0.8e1 * t460 * t466) * t422 + 0.4e1 * t463 * t532) * t390 - 0.4e1 * t499 * t552 - (t455 * t564 + t436 + t554 + 0.6e1 * t576) * t377 + (t434 + (t427 + 0.6e1 * t462) * t455 + t375) * t594) * t336 + (0.12e2 * (0.6e1 * (-0.4e1 / 0.9e1 * t512 + 0.4e1 / 0.9e1 * t455 - t450 / 0.9e1 + t567) * t578 + t373 * t358 + t359 * t582 + (t575 + (t399 + t408 + t495) * t378) * t553) * t586 + t356 + (t359 * t583 + t348) * t538 + t506 * t533 + ((t374 + t526) * t455 + t571) * t508 + t452 + (t426 + t523) * t467 + (t523 * t438 + t560 * t446 + t425 + t442) * t455 + t375 * t362) * t353 + ((t545 * t594 + (-0.2e1 * t390 * t539 + (t377 - t594) * t367 + t499) * t547) * t336 + (0.8e1 * (t367 + t542 + t384) * t587 + 0.6e1 * (t558 * t542 + (t358 + t359) * t534 + t506) * t376) * t353) * t365);
t318 = (t479 * t593 - t336 * t485 / 0.4e1) * t580;
t319 = (t336 * t479 + t485 * t593 / 0.4e1) * t580;
t349 = -t420 * t421 - t584;
t350 = -t420 * t423 + t585;
t308 = t318 * t349 + t319 * t350;
t309 = t318 * t350 - t319 * t349;
t456 = 0.1e1 / pkin(3);
t481 = -t482 / 0.2e1;
t484 = -t485 / 0.2e1;
t332 = (t421 * t481 + t423 * t484) * t456;
t483 = t485 / 0.2e1;
t333 = (t421 * t483 + t423 * t481) * t456;
t518 = t593 / 0.2e1;
t581 = t451 * t456;
t491 = (-t332 * t336 / 0.2e1 + t333 * t518) * t581;
t603 = (t332 * t518 + t333 * t336 / 0.2e1) * t581;
t612 = t308 * t603 + t309 * t491;
t611 = -t308 * t491 + t309 * t603;
t417 = sin(pkin(8));
t418 = cos(pkin(8));
t346 = -t417 * t423 + t418 * t421;
t347 = t417 * t421 + t418 * t423;
t480 = t482 / 0.2e1;
t327 = (t346 * t480 + t347 * t483) * t456;
t424 = cos(pkin(9));
t478 = t456 * (t346 * t484 + t347 * t480);
t595 = sin(pkin(9));
t323 = t327 * t424 - t478 * t595;
t324 = t327 * t595 + t424 * t478;
t315 = t323 * t333 - t324 * t332;
t511 = -t323 * t332 - t333 * t324;
t610 = -t315 * t323 + t324 * t511;
t609 = t315 * t324 + t323 * t511;
t574 = t333 * pkin(3) - t378;
t573 = t333 * pkin(2) - t378;
t514 = t332 * pkin(3) - t594;
t513 = t332 * pkin(2) - t594;
t494 = t346 * t423 - t347 * t421;
t493 = t346 * t421 + t347 * t423;
t340 = t346 * t417 - t347 * t418;
t339 = -t346 * t418 - t347 * t417;
t1 = -m(1) * (g(1) * rSges(1,1) + g(2) * rSges(1,2) + g(3) * rSges(1,3)) - m(2) * (g(1) * (-rSges(2,1) * t423 + rSges(2,2) * t421) + g(2) * (-rSges(2,1) * t421 - rSges(2,2) * t423) + g(3) * rSges(2,3)) - m(3) * (g(1) * (rSges(3,1) * t333 - rSges(3,2) * t332 - t378) + g(2) * (rSges(3,1) * t332 + rSges(3,2) * t333 - t594) + g(3) * rSges(3,3)) - m(4) * (g(1) * (rSges(4,1) * t511 - rSges(4,2) * t315 + t573) + g(2) * (rSges(4,1) * t315 + rSges(4,2) * t511 + t513) + g(3) * rSges(4,3)) - m(5) * (g(1) * (rSges(5,1) * t491 - rSges(5,2) * t603 + t574) + g(2) * (rSges(5,1) * t603 + rSges(5,2) * t491 + t514) + g(3) * rSges(5,3)) - m(6) * (g(1) * (pkin(5) * t418 + rSges(6,1) * t340 - rSges(6,2) * t339) + g(2) * (pkin(5) * t417 + rSges(6,1) * t339 + rSges(6,2) * t340) + g(3) * rSges(6,3)) - m(7) * (g(1) * (rSges(7,1) * t511 - rSges(7,2) * t315 - t378) + g(2) * (rSges(7,1) * t315 + rSges(7,2) * t511 - t594) + g(3) * rSges(7,3)) - m(8) * (g(1) * (rSges(8,1) * t420 + rSges(8,2) * t422 + pkin(7)) + g(2) * (-rSges(8,1) * t422 + rSges(8,2) * t420) + g(3) * rSges(8,3)) - m(9) * (g(1) * (rSges(9,1) * t493 + rSges(9,2) * t494 - t378) + g(2) * (-rSges(9,1) * t494 + rSges(9,2) * t493 - t594) + g(3) * rSges(9,3)) - m(10) * (g(1) * (t511 * pkin(6) + rSges(10,1) * t610 - rSges(10,2) * t609 + t573) + g(2) * (t315 * pkin(6) + rSges(10,1) * t609 + rSges(10,2) * t610 + t513) + g(3) * rSges(10,3)) - m(11) * (g(1) * (t491 * pkin(4) + rSges(11,1) * t612 - t611 * rSges(11,2) + t574) + g(2) * (t603 * pkin(4) + t611 * rSges(11,1) + rSges(11,2) * t612 + t514) + g(3) * rSges(11,3));
U = t1;
