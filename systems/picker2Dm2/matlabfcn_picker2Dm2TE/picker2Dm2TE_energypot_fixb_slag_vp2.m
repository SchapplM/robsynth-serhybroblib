% Calculate potential energy for
% picker2Dm2TE
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [2x1]
%   Generalized joint coordinates (joint angles)
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[L1,L2,L3,L4,L5,L6,e,phi05,phi1]';
% m [11x1]
%   mass of all robot links (including the base)
% mrSges [11x3]
%  first moment of all robot links (mass times center of mass in body frames)
%  rows: links of the robot (starting with base)
%  columns: x-, y-, z-coordinates
% 
% Output:
% U [1x1]
%   Potential energy

% Quelle: HybrDyn-Toolbox
% Datum: 2020-05-09 14:06
% Revision: 73758128893bc0a8beabae04bd7e71472107ac81 (2020-05-07)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function U = picker2Dm2TE_energypot_fixb_slag_vp2(qJ, g, ...
  pkin, m, mrSges)
%% Coder Information
%#codegen
%$cgargs {zeros(2,1),zeros(3,1),zeros(9,1),zeros(11,1),zeros(11,3)}
assert(isreal(qJ) && all(size(qJ) == [2 1]), ...
  'picker2Dm2TE_energypot_fixb_slag_vp2: qJ has to be [2x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'picker2Dm2TE_energypot_fixb_slag_vp2: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'picker2Dm2TE_energypot_fixb_slag_vp2: pkin has to be [9x1] (double)');
assert(isreal(m) && all(size(m) == [11 1]), ...
  'picker2Dm2TE_energypot_fixb_slag_vp2: m has to be [11x1] (double)'); 
assert(isreal(mrSges) && all(size(mrSges) == [11,3]), ...
  'picker2Dm2TE_energypot_fixb_slag_vp2: mrSges has to be [11x3] (double)');

%% Symbolic Calculation
% From energy_potential_fixb_worldframe_par2_matlab.m
% OptimizationMode: 2
% StartTime: 2020-05-09 10:34:18
% EndTime: 2020-05-09 10:34:28
% DurationCPUTime: 6.30s
% Computational Cost: add. (40049->455), mult. (117764->564), div. (838->5), fcn. (20852->10), ass. (0->228)
t424 = sin(qJ(1));
t425 = cos(qJ(2));
t590 = t424 * t425;
t545 = pkin(3) * t590;
t518 = pkin(1) * t545;
t361 = -0.2e1 * t518;
t451 = 0.2e1 * pkin(3);
t463 = pkin(1) ^ 2;
t461 = t463 ^ 2;
t465 = pkin(7) ^ 2;
t426 = cos(qJ(1));
t393 = t426 ^ 2;
t423 = sin(qJ(2));
t379 = pkin(3) * t423;
t608 = 2 * pkin(7);
t369 = t379 * t608;
t390 = t423 ^ 2;
t458 = pkin(3) ^ 2;
t591 = t390 * t458;
t548 = 0.2e1 * t591;
t563 = -t458 + t465;
t499 = t369 + t548 + t563;
t493 = t499 * t393;
t385 = t463 + t465;
t453 = pkin(4) ^ 2;
t526 = -t453 + t385;
t511 = t369 + t526;
t601 = t379 + pkin(7);
t523 = t601 * t426;
t564 = t453 - t465;
t525 = -0.2e1 * t458 + t564;
t551 = -0.4e1 * t379;
t561 = t463 - t465;
t604 = 0.2e1 * t463;
t613 = 0.4e1 * pkin(1);
t339 = sqrt(-0.4e1 * t463 * t493 + 0.4e1 * t561 * t591 + pkin(7) * t526 * t551 - t461 + t525 * t604 - (t465 - (t451 + pkin(4)) * pkin(4)) * (t465 + (t451 - pkin(4)) * pkin(4)) + (-(t361 + t511) * t523 + t511 * t545) * t613);
t524 = t458 + t385;
t489 = 0.1e1 / (0.2e1 * pkin(1) * t523 + t361 + t369 + t524);
t507 = -pkin(1) + t545;
t442 = 0.3e1 * t463;
t508 = t442 - t525;
t513 = -0.4e1 * t518;
t589 = t425 * t426;
t544 = pkin(3) * t589;
t606 = 0.4e1 * t458;
t485 = t489 * ((t424 * t601 + t544) * t339 - (t369 + t508 + t513) * t523 + t507 * t369 + t508 * t545 + (-0.2e1 * t493 + t548 - t606 - t526) * pkin(1));
t482 = t485 / 0.4e1;
t380 = pkin(3) * t425;
t607 = 0.2e1 * t458;
t502 = t607 + t511;
t381 = pkin(1) * t426;
t554 = 0.2e1 * t381;
t488 = t489 * ((t523 - t507) * t339 + (t499 * t554 + t601 * t502) * t424 + (t426 * t502 + (0.4e1 * t393 - 0.2e1) * pkin(1) * t601) * t380);
t454 = 0.1e1 / pkin(4);
t585 = t454 / pkin(3) ^ 2;
t470 = t458 ^ 2;
t452 = t453 ^ 2;
t464 = t465 ^ 2;
t562 = t461 + t464;
t449 = 0.2e1 * t465;
t567 = t449 - t453;
t582 = t465 * t453;
t494 = t567 * t463 + t452 / 0.6e1 + t562 - t582;
t348 = -t470 / 0.6e1 + t494;
t414 = -t458 / 0.3e1;
t375 = t414 + t465;
t351 = t375 * t361;
t368 = t381 + pkin(7);
t356 = t379 + t368;
t384 = -0.3e1 * t458 + t465;
t392 = t426 * t393;
t466 = pkin(1) * t463;
t580 = t466 * t392;
t550 = pkin(7) * t580;
t521 = 0.8e1 * t550;
t359 = t384 * t521;
t383 = -t453 - t458;
t448 = 0.3e1 * t465;
t371 = t448 + t383;
t596 = t371 * t463;
t360 = 0.10e2 * t596;
t410 = 0.4e1 / 0.3e1 * t458;
t404 = -t453 / 0.3e1;
t531 = t404 + t385;
t362 = t410 + t531;
t405 = -t453 / 0.2e1;
t364 = t405 + t524;
t365 = -t453 + t524;
t370 = pkin(7) * t554;
t447 = 0.4e1 * t465;
t373 = (t447 + t453) * t463;
t376 = -t463 / 0.3e1 + t465;
t377 = 0.10e2 / 0.3e1 * t463;
t378 = t385 ^ 2;
t382 = -0.30e2 * t453 + 0.60e2 * t465;
t387 = -0.3e1 * t463 + t465;
t402 = -t453 / 0.6e1;
t403 = -t453 / 0.4e1;
t411 = 0.2e1 / 0.3e1 * t458;
t416 = 0.4e1 / 0.3e1 * t463;
t418 = t463 / 0.2e1;
t428 = 0.15e2 * t461;
t429 = 0.15e2 * t463;
t430 = 0.10e2 * t463;
t435 = -0.2e1 * t453;
t436 = -0.5e1 * t453;
t437 = 0.5e1 * t470;
t438 = 0.7e1 * t461;
t439 = 0.5e1 * t461;
t440 = 0.7e1 * t463;
t441 = 0.6e1 * t463;
t445 = 0.3e1 * t464;
t446 = 0.8e1 * t465;
t469 = pkin(3) * t458;
t455 = t469 ^ 2;
t474 = pkin(7) * t465;
t491 = 0.5e1 / 0.6e1 * t470 + t494;
t501 = t465 - t518;
t575 = t452 / 0.2e1 - t470 / 0.2e1;
t510 = -0.3e1 * t582 + t445 + t575;
t514 = -0.6e1 * t518;
t407 = -0.3e1 / 0.2e1 * t453;
t574 = t407 + t448;
t577 = t385 * ((t407 + t449) * t463 - 0.3e1 / 0.2e1 * t582 + t562 + t575) + t455;
t503 = ((t377 + t567) * t458 + t491) * t514 + (t428 + (-0.9e1 * t453 + 0.18e2 * t465) * t463 + t510) * t458 + (t429 + t574) * t470 + t577;
t504 = t364 * t513;
t568 = t442 + t465;
t528 = t458 + t568;
t599 = pkin(1) * t424;
t505 = -(0.3e1 * t458 + t385) * t599 + t528 * t380;
t406 = -0.2e1 / 0.3e1 * t453;
t415 = -0.2e1 / 0.3e1 * t458;
t529 = t406 + t385;
t569 = t430 + t449;
t573 = t415 + t465;
t506 = -(t437 + (0.5e1 * t463 + t371) * t607 + (t415 + t529) * t385) * t599 + (t470 + (t406 + t415 + t569) * t458 + t439 + 0.2e1 * t596 + t465 * (t406 + t573)) * t380;
t566 = t452 - t470;
t509 = -0.6e1 * t582 + 0.6e1 * t464 + t566;
t530 = t406 + t411 + t449;
t576 = (t411 + t529) * t385 + t470;
t512 = t362 * t513 + (t441 + t530) * t458 + t576;
t515 = t580 * t380;
t584 = t461 * t393 ^ 2;
t516 = t584 * t380;
t541 = 0.16e2 * t580;
t519 = pkin(7) * t541;
t520 = 0.20e2 / 0.3e1 * t463;
t565 = -t453 + t458;
t527 = t448 + t565;
t412 = t458 / 0.3e1;
t532 = t402 + t412 + t465;
t533 = t453 / 0.3e1 + t412 + t449;
t534 = 0.2e1 / 0.3e1 * t453 + t411 + t447;
t535 = 0.4e1 / 0.3e1 * t453 + t410 - 0.2e1 * t465;
t588 = (pkin(7) + pkin(3)) * (pkin(7) - pkin(3));
t536 = t424 * t588;
t552 = 0.6e1 * t381;
t537 = pkin(7) * t552;
t553 = 0.4e1 * t381;
t538 = pkin(7) * t553;
t539 = -t599 / 0.2e1;
t583 = t463 * t393;
t542 = 0.12e2 * t583;
t543 = t463 * t380;
t546 = 0.4e1 * t583;
t547 = 0.8e1 * t584;
t592 = t423 * t390 * t469;
t549 = -0.8e1 * t592;
t555 = 0.2e1 * t599;
t556 = pkin(7) * t381;
t558 = 4 * pkin(7);
t559 = t464 + t470;
t560 = t464 - t461;
t570 = 0.4e1 / 0.7e1 * t465 - t453 / 0.7e1;
t571 = t418 + t465;
t572 = t463 / 0.3e1 + t465;
t581 = t465 * t463;
t587 = (pkin(7) + pkin(1)) * (pkin(7) - pkin(1));
t593 = t390 ^ 2 * t470;
t594 = t383 * t465;
t595 = t378 * (-t458 + t526);
t597 = (-t424 * t466 + t543) * t393;
t605 = 0.4e1 * t461;
t609 = t403 + t458 / 0.2e1;
t598 = ((-0.24e2 * (0.4e1 / 0.3e1 * t583 + t370 + t376) * t593 * t599 - 0.12e2 * (-0.8e1 / 0.3e1 * t516 + ((t416 + t532) * t380 - (0.7e1 / 0.6e1 * t458 + t402 + t571) * t599) * t546 + (-t458 * t561 - 0.5e1 / 0.3e1 * t461 + t533 * t463 + t465 * (t404 + t375)) * t380 + (-t470 + (-t520 + t534) * t458 - 0.3e1 * t461 + t535 * t463 + t464) * t539 + (-t424 * t461 * t392 + ((t463 + t532) * t380 + (t607 - t561) * t539) * t381) * t558) * t591 + 0.24e2 * t375 * t516 + ((t465 + 0.5e1 / 0.2e1 * t458 + 0.3e1 / 0.2e1 * t463 + t405) * t380 + t384 * t599 / 0.2e1) * t519 - 0.6e1 * ((-0.3e1 * t470 + (-t520 + t535) * t458 + t534 * t463 + t560) * t380 - 0.2e1 * (-0.5e1 / 0.3e1 * t470 + (-t463 + t533) * t458 + t465 * (t414 + t531)) * t599) * t583 - 0.6e1 * t506 * t556 - (t455 + (0.21e2 * t463 + t371) * t470 + (t360 + t445 + 0.35e2 * t461 + 0.2e1 * t594) * t458 + (t438 + (t436 + t446 - 0.5e1 * t458) * t463 + t465 * (-t453 + t563)) * t385) * t380 + (0.7e1 * t455 + (t440 + t371) * t437 + (t360 + 0.21e2 * t461 + 0.9e1 * t464 + 0.6e1 * t594) * t458 + t595) * t599) * t339 + (0.16e2 * (t547 + t519 + (-0.8e1 * t461 + 0.12e2 * t581) * t393 + (-0.12e2 * pkin(7) * t466 + t474 * t613) * t426 - 0.6e1 * t581 + t562) * t593 + 0.24e2 * (t573 * t547 + 0.14e2 * (-0.32e2 / 0.21e2 * (t465 + t458 / 0.4e1 + t463 / 0.4e1 - t453 / 0.8e1) * t518 + 0.5e1 / 0.42e2 * t470 + (0.16e2 / 0.21e2 * t463 + t570) * t458 + t461 / 0.7e1 + t570 * t463 + t464 - 0.3e1 / 0.7e1 * t582 + t452 / 0.42e2) * t583 + t376 * t504 - t561 * t470 + (t373 - 0.10e2 / 0.3e1 * t461 + 0.2e1 * t464 - t582) * t458 + t348 * t587 + ((-0.2e1 / 0.3e1 * t518 + t403 + t571) * t541 + (-0.8e1 / 0.3e1 * (t572 + t609) * t518 + 0.5e1 / 0.18e2 * t470 + (0.4e1 / 0.3e1 * t465 + t416 + t404) * t458 + t464 + 0.2e1 / 0.3e1 * t581 - 0.2e1 / 0.3e1 * t582 - t461 / 0.3e1 + t452 / 0.18e2) * t552) * pkin(7)) * t591 + 0.16e2 * (-0.6e1 * t458 * t465 + t559) * t584 + 0.32e2 * (t361 * t588 + t364 * t384) * t550 + 0.24e2 * (t375 * t504 - t455 + (-t377 + t564) * t470 + (t373 + t470 / 0.6e1 - t452 / 0.6e1 + t560) * t458 + t348 * t465) * t583 + 0.8e1 * t503 * t556 - 0.8e1 * ((t440 + t574) * t470 + (t438 + (t436 + 0.10e2 * t465) * t463 + t510) * t458 + t577) * t518 + t470 ^ 2 + (t435 + t447 + 0.28e2 * t463) * t455 + (t382 * t463 + 0.70e2 * t461 + t509) * t470 + (t382 * t461 + t509 * t441 + t566 * t449 - 0.6e1 * t464 * t453 + 0.28e2 * t466 ^ 2 + 0.4e1 * t474 ^ 2) * t458 + t365 * t595) * t356 + (((0.4e1 * t597 + (t380 + t555) * t370 + t387 * t380 + (t405 + t528) * t555) * t549 - 0.6e1 * (-0.4e1 * (0.2e1 * (0.5e1 / 0.6e1 * t458 + t418 + t402) * t380 + pkin(1) * t536) * t583 + (-0.8e1 * t515 + ((t404 + t411 + t568) * t380 - (0.8e1 / 0.3e1 * t458 + t531) * t599) * t553) * pkin(7) + t506) * t379) * t339 + (0.32e2 * (t521 + (-0.4e1 * t466 * t545 + t605 + (t606 + t435 + t446) * t463) * t393 + (-t463 + t501 + t609) * t538 + t361 * t587 + t387 * t364) * t592 + 0.8e1 * (t359 + (t364 * t588 + t351) * t542 + (t504 + (t441 + t567) * t458 + t491) * t537 + t503) * t379) * t356) * t368) / ((-0.4e1 * (-t561 * t380 + 0.2e1 * t597 + (t544 * t608 + t424 * (t458 + t604)) * pkin(1)) * t591 + 0.8e1 * pkin(7) * t515 + ((pkin(3) * t605 + 0.8e1 * t463 * t469) * t425 + 0.4e1 * t466 * t536) * t393 - 0.4e1 * t505 * t556 - (t458 * t569 + t439 + t559 + 0.6e1 * t581) * t380 + (t437 + (t430 + 0.6e1 * t465) * t458 + t378) * t599) * t339 + (0.12e2 * (0.6e1 * (-0.4e1 / 0.9e1 * t518 + 0.4e1 / 0.9e1 * t458 - t453 / 0.9e1 + t572) * t583 + t376 * t361 + t362 * t587 + (t580 + (t402 + t411 + t501) * t381) * t558) * t591 + t359 + (t362 * t588 + t351) * t542 + t512 * t537 + ((t377 + t530) * t458 + t576) * t514 + t455 + (t429 + t527) * t470 + (t527 * t441 + t565 * t449 + t428 + t445) * t458 + t378 * t365) * t356 + ((t549 * t599 + (-0.2e1 * t393 * t543 + (t380 - t599) * t370 + t505) * t551) * t339 + (0.8e1 * (t370 + t546 + t387) * t592 + 0.6e1 * (t563 * t546 + (t361 + t362) * t538 + t512) * t379) * t356) * t368);
t321 = (t482 * t598 - t339 * t488 / 0.4e1) * t585;
t322 = (t339 * t482 + t488 * t598 / 0.4e1) * t585;
t352 = -t423 * t424 - t589;
t353 = -t423 * t426 + t590;
t311 = t321 * t352 + t322 * t353;
t312 = t321 * t353 - t322 * t352;
t459 = 0.1e1 / pkin(3);
t484 = -t485 / 0.2e1;
t487 = -t488 / 0.2e1;
t335 = (t424 * t484 + t426 * t487) * t459;
t486 = t488 / 0.2e1;
t336 = (t424 * t486 + t426 * t484) * t459;
t522 = t598 / 0.2e1;
t586 = t454 * t459;
t496 = (-t335 * t339 / 0.2e1 + t336 * t522) * t586;
t610 = (t335 * t522 + t336 * t339 / 0.2e1) * t586;
t615 = t311 * t610 + t312 * t496;
t614 = -t311 * t496 + t312 * t610;
t602 = -m(4) - m(10);
t603 = pkin(5) * m(6);
t600 = sin(pkin(9));
t579 = t336 * pkin(3) - t381;
t557 = m(3) + m(7) + m(9);
t420 = sin(pkin(8));
t421 = cos(pkin(8));
t349 = -t420 * t426 + t421 * t424;
t350 = t420 * t424 + t421 * t426;
t483 = t485 / 0.2e1;
t330 = (t349 * t483 + t350 * t486) * t459;
t427 = cos(pkin(9));
t481 = t459 * (t349 * t487 + t350 * t483);
t326 = t330 * t427 - t600 * t481;
t327 = t600 * t330 + t427 * t481;
t517 = -t326 * t335 - t336 * t327;
t500 = t326 * t336 - t327 * t335;
t498 = -t350 * mrSges(9,1) - t349 * mrSges(9,2) + mrSges(2,1);
t497 = t349 * mrSges(9,1) - t350 * mrSges(9,2) + mrSges(2,2);
t495 = -t326 * mrSges(10,1) - t327 * mrSges(10,2) - mrSges(4,2) - mrSges(7,2);
t490 = -m(10) * pkin(6) - t327 * mrSges(10,1) + t326 * mrSges(10,2) - mrSges(4,1) - mrSges(7,1);
t343 = t349 * t420 - t350 * t421;
t342 = -t349 * t421 - t350 * t420;
t331 = t335 * pkin(3);
t1 = (-mrSges(5,3) - mrSges(1,3) - mrSges(10,3) - mrSges(6,3) - mrSges(7,3) - mrSges(8,3) - mrSges(3,3) - mrSges(11,3) - mrSges(4,3) - mrSges(2,3) - mrSges(9,3)) * g(3) + (-mrSges(6,1) * t342 - mrSges(6,2) * t343 + mrSges(8,1) * t425 - mrSges(8,2) * t423 - t610 * mrSges(5,1) - m(11) * (pkin(4) * t610 + t331) - m(5) * t331 - t420 * t603 - t614 * mrSges(11,1) - t615 * mrSges(11,2) - t496 * mrSges(5,2) - mrSges(3,2) * t336 - mrSges(1,2) + t490 * t500 + t495 * t517 + t497 * t426 + ((m(11) + m(5) + t557 - t602) * pkin(1) + t498) * t424 + (t602 * pkin(2) - mrSges(3,1)) * t335) * g(2) + (-mrSges(6,1) * t343 + mrSges(6,2) * t342 - mrSges(8,1) * t423 - mrSges(8,2) * t425 - mrSges(3,1) * t336 + mrSges(3,2) * t335 - m(11) * (pkin(4) * t496 + t579) - m(5) * t579 - t496 * mrSges(5,1) - (m(8) * pkin(7)) - t615 * mrSges(11,1) + t614 * mrSges(11,2) + t610 * mrSges(5,2) - t421 * t603 - mrSges(1,1) + t490 * t517 - t495 * t500 - t497 * t424 + (pkin(1) * t557 + t498) * t426 + t602 * (t336 * pkin(2) - t381)) * g(1);
U = t1;
