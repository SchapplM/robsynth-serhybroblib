% Zeitableitung der Rotationsmatrix-Jacobi-Matrix für beliebiges Segment von
% hybBKspatial
% Use Code from Maple symbolic Code Generation
% 
% Rotationsmatrix-Jacobi-Matrix: Differentieller Zusammenhang zwischen
% gestapelter Endeffektor-Rotationsmatrix und verallgemeinerten Koordinaten.
% Zeitableitung: Die Gradientenmatrix wird nochmal nach der Zeit abgeleitet.
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% link_index [1x1 uint8]
%   Index des Segmentes, auf dem der Punkt C liegt. (0=Basis).
%   Siehe auch: bsp_3T1R_fkine_fixb_rotmat_mdh_sym_varpar.m
% pkin [7x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[AB,AE,BC,CD,ED,L1,L2]';
% 
% Output:
% JRD_rot [9x6]
%   Zeitableitung der Jacobi-Matrix der Endeffektor-Rotationsmatrix

% Quelle: HybrDyn-Toolbox
% Datum: 2020-04-11 19:31
% Revision: 6ae2d958c5b90587a0d08029b131cb7b66342a68 (2020-04-11)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function JRD_rot = hybBKspatial_jacobiRD_rot_sym_varpar(qJ, qJD, link_index, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),uint8(0),zeros(7,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'hybBKspatial_jacobiRD_rot_sym_varpar: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'hybBKspatial_jacobiRD_rot_sym_varpar: qJD has to be [6x1] (double)');
assert(isa(link_index,'uint8') && all(size(link_index) == [1 1]), ...
	'hybBKspatial_jacobiRD_rot_sym_varpar: link_index has to be [1x1] uint8');
assert(isreal(pkin) && all(size(pkin) == [7 1]), ...
  'hybBKspatial_jacobiRD_rot_sym_varpar: pkin has to be [7x1] (double)');
if link_index == 0
	%% Symbolic Calculation
	% From jacobiRD_rot_0_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-11 19:22:50
	% EndTime: 2020-04-11 19:22:50
	% DurationCPUTime: 0.03s
	% Computational Cost: add. (0->0), mult. (0->0), div. (0->0), fcn. (0->0), ass. (0->1)
	t1 = [0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0;];
	JRD_rot = t1;
elseif link_index == 1
	%% Symbolic Calculation
	% From jacobiRD_rot_1_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-11 19:22:49
	% EndTime: 2020-04-11 19:22:49
	% DurationCPUTime: 0.04s
	% Computational Cost: add. (3->3), mult. (4->2), div. (0->0), fcn. (4->2), ass. (0->3)
	t31 = qJD(1) * sin(qJ(1));
	t30 = qJD(1) * cos(qJ(1));
	t1 = [-t30, 0, 0, 0, 0, 0; -t31, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0; t31, 0, 0, 0, 0, 0; -t30, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0;];
	JRD_rot = t1;
elseif link_index == 2
	%% Symbolic Calculation
	% From jacobiRD_rot_2_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-11 19:22:50
	% EndTime: 2020-04-11 19:22:50
	% DurationCPUTime: 0.03s
	% Computational Cost: add. (11->9), mult. (36->13), div. (0->0), fcn. (36->4), ass. (0->14)
	t32 = sin(qJ(1));
	t39 = qJD(1) * t32;
	t34 = cos(qJ(1));
	t38 = qJD(1) * t34;
	t31 = sin(qJ(2));
	t37 = qJD(2) * t31;
	t33 = cos(qJ(2));
	t36 = qJD(2) * t33;
	t35 = qJD(2) * t34;
	t30 = t32 * t37 - t33 * t38;
	t29 = t31 * t38 + t32 * t36;
	t28 = t31 * t35 + t33 * t39;
	t27 = t31 * t39 - t33 * t35;
	t1 = [t30, t27, 0, 0, 0, 0; -t28, -t29, 0, 0, 0, 0; 0, -t37, 0, 0, 0, 0; t29, t28, 0, 0, 0, 0; t27, t30, 0, 0, 0, 0; 0, -t36, 0, 0, 0, 0; -t39, 0, 0, 0, 0, 0; t38, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0;];
	JRD_rot = t1;
elseif link_index == 3
	%% Symbolic Calculation
	% From jacobiRD_rot_3_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-11 19:28:35
	% EndTime: 2020-04-11 19:31:07
	% DurationCPUTime: 158.52s
	% Computational Cost: add. (2619593->1416), mult. (8168370->2510), div. (12120->7), fcn. (1072930->8), ass. (0->1016)
	t4255 = cos(qJ(2));
	t5036 = -0.4e1 * t4255;
	t4286 = pkin(5) ^ 2;
	t4285 = t4286 ^ 2;
	t4289 = pkin(4) ^ 2;
	t4288 = t4289 ^ 2;
	t4770 = t4285 - t4288;
	t4252 = sin(qJ(2));
	t4293 = pkin(3) ^ 2;
	t4291 = t4293 ^ 2;
	t4297 = pkin(2) ^ 2;
	t4299 = pkin(1) ^ 2;
	t4298 = t4299 ^ 2;
	t4305 = t4297 ^ 2;
	t4251 = sin(qJ(3));
	t4831 = t4251 * t4252;
	t4179 = pkin(2) * t4831;
	t4569 = pkin(3) * t4179;
	t4776 = 0.4e1 / 0.7e1 * t4299 - t4286 / 0.7e1;
	t4805 = t4299 * t4286;
	t4154 = t4299 + t4297 / 0.4e1 + t4293 / 0.4e1 - t4286 / 0.8e1;
	t4998 = 0.32e2 / 0.21e2 * t4154;
	t3983 = -t4569 * t4998 + t4305 / 0.7e1 + (0.16e2 / 0.21e2 * t4293 + t4776) * t4297 + t4291 / 0.7e1 + t4776 * t4293 + t4298 - 0.3e1 / 0.7e1 * t4805 + t4770 / 0.42e2;
	t4231 = -t4286 / 0.4e1;
	t4246 = t4293 / 0.3e1;
	t4249 = t4297 / 0.2e1;
	t4777 = t4249 + t4299;
	t4155 = t4231 + t4246 + t4777;
	t4232 = -t4286 / 0.3e1;
	t4234 = -0.2e1 / 0.3e1 * t4286;
	t4245 = 0.4e1 / 0.3e1 * t4293;
	t4909 = 0.4e1 / 0.3e1 * t4297;
	t3986 = -0.8e1 / 0.3e1 * t4155 * t4569 + t4305 / 0.3e1 + (t4245 + t4232) * t4297 + t4298 - t4291 / 0.3e1 + (t4909 + 0.2e1 / 0.3e1 * t4293 + t4234) * t4299 + t4770 / 0.18e2;
	t4768 = t4291 + t4298;
	t4283 = 0.2e1 * t4299;
	t4771 = t4283 - t4286;
	t5001 = -t4285 / 0.6e1 + t4288 / 0.6e1;
	t4086 = t4771 * t4293 + t4768 - t4805 - t5001;
	t4247 = t4293 / 0.2e1;
	t4092 = -0.2e1 / 0.3e1 * t4569 + t4299 + t4247 + t4231;
	t4281 = 0.4e1 * t4299;
	t4197 = (t4281 + t4286) * t4293;
	t4209 = -t4293 + t4299;
	t4233 = -t4286 / 0.2e1;
	t4766 = t4297 + t4299;
	t4584 = t4293 + t4766;
	t4167 = t4233 + t4584;
	t4200 = -t4293 / 0.3e1 + t4299;
	t4547 = t4200 * t4179;
	t4474 = pkin(3) * t4547;
	t4409 = t4167 * t4474;
	t4202 = t4299 - 0.2e1 / 0.3e1 * t4297;
	t4254 = cos(qJ(3));
	t4216 = t4254 ^ 2;
	t4214 = t4216 ^ 2;
	t4811 = t4291 * t4214;
	t4618 = t4202 * t4811;
	t4808 = t4293 * t4216;
	t4672 = 0.14e2 * t4808;
	t4215 = t4254 * t4216;
	t4308 = pkin(3) * t4293;
	t4838 = t4215 * t4308;
	t4682 = 0.16e2 * t4838;
	t4205 = pkin(3) * t4254;
	t4745 = 0.6e1 * t4205;
	t4814 = (pkin(1) + pkin(3)) * (pkin(1) - pkin(3));
	t3940 = 0.8e1 * t4618 + t3983 * t4672 - 0.4e1 * t4409 + t4209 * t4305 + (t4197 - 0.10e2 / 0.3e1 * t4291 + 0.2e1 * t4298 - t4805) * t4297 + t4086 * t4814 + (t3986 * t4745 + t4092 * t4682) * pkin(1);
	t4235 = -0.3e1 / 0.2e1 * t4286;
	t4261 = 0.15e2 * t4291;
	t4264 = 0.18e2 * t4299;
	t4278 = 0.3e1 * t4298;
	t4780 = t4285 / 0.2e1 - t4288 / 0.2e1;
	t4491 = -0.3e1 * t4805 + t4278 + t4780;
	t4222 = 0.10e2 / 0.3e1 * t4293;
	t4342 = t4086 + t4305;
	t4040 = (t4222 + t4771) * t4297 + t4342;
	t4983 = -0.6e1 * pkin(3);
	t4756 = t4040 * t4983;
	t4666 = pkin(2) * t4756;
	t4523 = t4252 * t4666;
	t4282 = 0.3e1 * t4299;
	t4775 = 0.15e2 * t4293 + t4282;
	t4208 = t4293 + t4299;
	t4304 = pkin(2) * t4297;
	t4294 = t4304 ^ 2;
	t4786 = t4208 * ((t4235 + t4283) * t4293 - 0.3e1 / 0.2e1 * t4805 + t4768 + t4780) + t4294;
	t3959 = t4251 * t4523 + (t4261 + (t4264 - 0.9e1 * t4286) * t4293 + t4491) * t4297 + (t4235 + t4775) * t4305 + t4786;
	t4273 = 0.6e1 * t4293;
	t4522 = -0.4e1 * t4569;
	t4434 = t4167 * t4522;
	t3993 = t4434 + (t4273 + t4771) * t4297 + t4342;
	t4162 = -0.2e1 * t4569;
	t4201 = t4299 - t4297 / 0.3e1;
	t4111 = t4201 * t4162;
	t4813 = (pkin(1) + pkin(2)) * (pkin(1) - pkin(2));
	t4036 = t4167 * t4813 + t4111;
	t4211 = -0.3e1 * t4297 + t4299;
	t4712 = pkin(1) * t4838;
	t4551 = t4211 * t4712;
	t4148 = 0.8e1 * t4551;
	t4740 = pkin(1) * t4205;
	t4667 = 0.6e1 * t4740;
	t4673 = 0.12e2 * t4808;
	t3941 = t3993 * t4667 + t4036 * t4673 + t3959 + t4148;
	t4763 = t4299 - t4286;
	t4765 = t4298 - t4291;
	t3973 = t4201 * t4434 - t4294 + (-t4222 - t4763) * t4305 + (t4197 + t4765 + t5001) * t4297 + t4086 * t4299;
	t4721 = 0.8e1 * t4811;
	t4804 = t4299 * t4293;
	t4199 = -0.8e1 * t4291 + 0.12e2 * t4804;
	t4846 = t4199 * t4216;
	t4301 = pkin(1) * t4299;
	t4900 = pkin(1) * t4308;
	t5025 = 0.4e1 * pkin(3);
	t4183 = t4301 * t5025 - 0.12e2 * t4900;
	t4851 = t4183 * t4254;
	t4016 = pkin(1) * t4682 + t4721 + t4768 - 0.6e1 * t4804 + t4846 + t4851;
	t4583 = t4293 + t4763;
	t4177 = t4289 + t4583;
	t4204 = -0.30e2 * t4286 + 0.60e2 * t4299;
	t4219 = t4255 ^ 2;
	t4217 = t4219 ^ 2;
	t4265 = -0.2e1 * t4286;
	t4267 = -0.6e1 * t4286;
	t4404 = 0.6e1 * t4298 + t4770 - 0.6e1 * t4805;
	t4958 = 0.4e1 * t4293;
	t4220 = t4297 * t4958;
	t4279 = 0.8e1 * t4299;
	t4541 = t4308 * t4179;
	t4959 = 0.4e1 * t4291;
	t4076 = -0.4e1 * t4541 + t4220 + t4959 + (t4265 + t4279) * t4293;
	t4395 = -t4569 + t4777;
	t4087 = t4231 - t4293 + t4395;
	t4210 = -0.3e1 * t4293 + t4299;
	t4206 = pkin(2) * t4252;
	t4693 = pkin(3) * t4814;
	t4577 = -0.2e1 * t4693;
	t4436 = t4577 * t4206;
	t4731 = 0.8e1 * t4838;
	t4746 = 0.4e1 * t4205;
	t3968 = t4251 * t4436 + t4076 * t4216 + t4167 * t4210 + (t4087 * t4746 + t4731) * pkin(1);
	t4185 = pkin(1) + t4205;
	t4218 = t4255 * t4219;
	t4834 = t4218 * t4304;
	t4638 = t4185 * t4834;
	t4507 = t3968 * t4638;
	t4266 = -0.5e1 * t4286;
	t4271 = 0.7e1 * t4291;
	t3982 = (t4235 + t4282 + 0.7e1 * t4293) * t4305 + (t4271 + (t4266 + 0.10e2 * t4299) * t4293 + t4491) * t4297 + t4786;
	t4895 = pkin(3) * t3982;
	t4536 = t4831 * t4895;
	t4625 = t4251 * t4813;
	t4457 = t4625 * t4206;
	t4981 = -0.2e1 * pkin(3);
	t4041 = t4167 * t4211 + t4457 * t4981;
	t4643 = t4041 * t4838;
	t4671 = 0.24e2 * t4808;
	t4744 = 0.8e1 * t4205;
	t4203 = t4208 ^ 2;
	t4844 = t4203 * (-t4289 + t4583);
	t4848 = t4185 * t4255;
	t4764 = t4298 + t4305;
	t4806 = t4297 * t4299;
	t4150 = 0.16e2 * (t4764 - 0.6e1 * t4806) * t4291;
	t4854 = t4150 * t4214;
	t4886 = 0.8e1 * pkin(2);
	t4951 = 0.24e2 * t4219;
	t3910 = -0.32e2 * t4507 + t4854 + t3973 * t4671 + (t4265 + t4281 + 0.28e2 * t4293) * t4294 + t4177 * t4844 + (t3940 * t4951 + t4204 * t4291 + t4267 * t4298 + t4404 * t4273 + t4770 * t4283 + 0.4e1 * t4301 ^ 2 + 0.28e2 * t4308 ^ 2) * t4297 + (-t3941 * t4848 - t4536) * t4886 + (t3959 * t4744 + 0.32e2 * t4643) * pkin(1) + (0.16e2 * t4016 * t4217 + t4204 * t4293 + 0.70e2 * t4291 + t4305 + t4404) * t4305;
	t4272 = 0.5e1 * t4291;
	t4280 = 0.6e1 * t4299;
	t4773 = t4265 - 0.2e1 * t4289;
	t4585 = t4280 + t4773;
	t4263 = 0.10e2 * t4293;
	t4774 = t4263 + t4283;
	t4244 = -0.2e1 / 0.3e1 * t4289;
	t4778 = t4234 + t4244;
	t4024 = t4305 + (t4774 + t4778) * t4297 + t4272 + t4585 * t4293 + t4299 * (t4299 + t4778);
	t4276 = 0.5e1 * t4305;
	t4586 = t4234 + t4208;
	t4052 = t4276 + (t4263 + t4585) * t4297 + t4208 * (t4244 + t4586);
	t4891 = pkin(3) * t4251;
	t3974 = t4024 * t4206 - t4052 * t4891;
	t4277 = 0.3e1 * t4297;
	t5003 = t4232 - t4289 / 0.3e1;
	t4589 = t4299 + t5003;
	t4489 = t4293 + t4589;
	t4137 = t4277 + t4489;
	t4274 = 0.3e1 * t4293;
	t4196 = t4274 + t4766;
	t4138 = t4196 + t5003;
	t4025 = -t4137 * t4891 + t4138 * t4206;
	t4230 = -t4286 / 0.6e1;
	t4779 = t4230 - t4289 / 0.6e1;
	t4153 = t4247 + t4297 + t4779;
	t5017 = 0.2e1 * t4206;
	t4053 = pkin(3) * t4625 + t4153 * t5017;
	t4896 = pkin(2) * t4308;
	t4702 = t4252 * t4896;
	t4542 = t4215 * t4702;
	t4719 = -0.4e1 * t4808;
	t3947 = t4053 * t4719 + (t4025 * t4746 - 0.8e1 * t4542) * pkin(1) + t3974;
	t4223 = -0.20e2 / 0.3e1 * t4293;
	t4239 = 0.2e1 / 0.3e1 * t4289;
	t4592 = 0.2e1 / 0.3e1 * t4286 + t4239 + t4281;
	t4284 = -0.2e1 * t4299;
	t4593 = 0.4e1 / 0.3e1 * t4286 + 0.4e1 / 0.3e1 * t4289 + t4284;
	t4048 = -0.3e1 * t4305 + (t4223 + t4593) * t4297 + t4592 * t4293 + t4765;
	t4240 = t4289 / 0.3e1;
	t4591 = t4286 / 0.3e1 + t4240 + t4283;
	t4054 = -0.5e1 / 0.3e1 * t4305 + (-t4293 + t4591) * t4297 + t4299 * t4489;
	t4749 = -0.2e1 * t4891;
	t3978 = t4048 * t4206 + t4054 * t4749;
	t5002 = t4282 - t4286 - t4289;
	t4168 = t5002 * t4263;
	t4772 = t4266 - 0.5e1 * t4289;
	t3991 = 0.7e1 * t4294 + (0.35e2 * t4293 + 0.15e2 * t4299 + t4772) * t4305 + (0.21e2 * t4291 + t4168 + 0.9e1 * t4298 + (t4267 - 0.6e1 * t4289) * t4299) * t4297 + t4844;
	t4187 = 0.2e1 * t4740;
	t4093 = 0.4e1 / 0.3e1 * t4808 + t4187 + t4200;
	t4836 = t4217 * t4305;
	t4681 = -0.24e2 * t4836;
	t4444 = t4093 * t4681 + t3991;
	t3981 = t4294 + (0.21e2 * t4293 + t5002) * t4305 + (t4299 * t4773 + t4168 + t4278 + 0.35e2 * t4291) * t4297 + t4208 * (t4271 + (t4279 + t4772) * t4293 + t4299 * (-t4289 + t4763));
	t4637 = t4201 * t4811;
	t4445 = -t3981 + 0.24e2 * t4637;
	t4588 = t4233 - t4289 / 0.2e1 + t4299;
	t4129 = 0.3e1 / 0.2e1 * t4297 + t4274 + t4588;
	t4823 = t4251 * t4308;
	t4897 = pkin(2) * t4293;
	t4398 = t4252 * t4897 - t4823;
	t4141 = 0.4e1 * t4398;
	t4157 = t4206 + 0.2e1 * t4891;
	t4904 = pkin(1) * t4254;
	t4713 = t4157 * t4904;
	t4885 = 0.2e1 * pkin(3);
	t3980 = t4210 * t4206 + t4141 * t4216 + (t4129 * t4251 + t4713) * t4885;
	t4501 = t3980 * t4638;
	t4131 = t4277 + 0.3e1 / 0.2e1 * t4293 + t4588;
	t4688 = t4891 / 0.2e1;
	t4051 = t4131 * t4206 + t4211 * t4688;
	t4537 = t4051 * t4712;
	t4590 = t4299 + t4779;
	t4125 = t4909 + t4247 + t4590;
	t4490 = t4249 + t4590;
	t4126 = t4245 + t4490;
	t4019 = -t4125 * t4891 + t4126 * t4206;
	t4130 = t4293 + t4490;
	t4195 = 0.2e1 * t4297 + t4209;
	t4689 = -t4891 / 0.2e1;
	t4039 = t4130 * t4206 + t4195 * t4689;
	t4047 = -t4305 + (t4223 + t4592) * t4297 - 0.3e1 * t4291 + t4593 * t4293 + t4298;
	t4492 = -0.8e1 / 0.3e1 * t4811 + t4297 * t4209 - 0.5e1 / 0.3e1 * t4291 + t4591 * t4293 + t4299 * t4589;
	t4417 = pkin(2) * t4492;
	t4810 = t4291 * t4215;
	t4624 = t4251 * t4810;
	t4717 = 0.4e1 * t4808;
	t4888 = 0.4e1 * pkin(1);
	t3945 = t4019 * t4717 + t4047 * t4689 + t4252 * t4417 + (t4039 * t4205 - t4624) * t4888;
	t4833 = t4219 * t4297;
	t4648 = t3945 * t4833;
	t4720 = -0.6e1 * t4808;
	t4733 = 0.6e1 * t4848;
	t4762 = -0.6e1 * t4904;
	t3918 = 0.16e2 * t4537 + 0.8e1 * t4501 - 0.12e2 * t4648 + t3978 * t4720 + (t3974 * t4762 + t4251 * t4444) * pkin(3) + (t3947 * t4733 + t4252 * t4445) * pkin(2);
	t4898 = pkin(2) * t4255;
	t4184 = pkin(1) - t4898;
	t4140 = t4184 + t4205;
	t4582 = t4297 + t4763;
	t4488 = t4293 + t4582;
	t4160 = -t4289 + t4488;
	t4742 = pkin(1) * t4898;
	t4189 = -0.2e1 * t4742;
	t4101 = t4189 + t4160;
	t4058 = t4162 + t4101;
	t4158 = t4184 * t4254;
	t4190 = t4220 - 0.4e1 * t4806;
	t4268 = 0.2e1 * t4289;
	t4572 = t4160 * t4742;
	t4641 = t4101 * t4831;
	t4728 = 0.2e1 * t4833;
	t4767 = -t4297 + t4299;
	t4109 = t4189 + t4728 + t4767;
	t4855 = t4109 * t4216;
	t4946 = pkin(5) - pkin(4);
	t4947 = -pkin(4) - pkin(5);
	t3954 = t4190 * t4219 + 0.4e1 * t4572 - t4291 - (t4299 + (pkin(2) - t4947) * (pkin(2) + t4947)) * (t4299 + (pkin(2) - t4946) * (pkin(2) + t4946)) + (t4268 + t4284 + 0.2e1 * t4286 - 0.6e1 * t4297 - 0.4e1 * t4855) * t4293 + (pkin(2) * t4641 - t4058 * t4158) * t5025;
	t4300 = sqrt(t3954);
	t3904 = t3910 * t4140 + t3918 * t4300;
	t4065 = -0.4e1 / 0.9e1 * t4569 + t4299 + t4297 / 0.3e1 + t4246 + t4289 / 0.9e1 - t4286 / 0.9e1;
	t4139 = t4232 + t4240 + t4584;
	t4716 = 0.6e1 * t4808;
	t4083 = t4289 / 0.6e1 + t4230 + t4395;
	t4859 = t4083 * t4254;
	t3961 = -0.2e1 * t4474 + t4065 * t4716 + t4139 * t4814 + (pkin(3) * t4859 + t4838) * t4888;
	t4587 = t4234 + t4239 + t4283;
	t4784 = t4208 * (t4239 + t4586) + t4305;
	t3989 = t4139 * t4522 + (t4273 + t4587) * t4297 + t4784;
	t4077 = t4162 + t4139;
	t4191 = t4767 * t4958;
	t4668 = 0.4e1 * t4740;
	t3965 = t4077 * t4668 + t4191 * t4216 + t3989;
	t4031 = t4139 * t4813 + t4111;
	t4554 = t4210 + t4717;
	t4108 = t4187 + t4554;
	t4500 = t4108 * t4638;
	t4037 = (t4222 + t4587) * t4297 + t4784;
	t4645 = t4037 * t4831;
	t4887 = 0.6e1 * pkin(2);
	t4952 = 0.12e2 * t4219;
	t3925 = -0.8e1 * t4500 + t4148 + t4031 * t4673 + t3989 * t4667 + t4294 + (-t4286 + t4289 + t4775) * t4305 + t4203 * t4177 + (t3961 * t4952 + t4261 + (t4264 + t4267 + 0.6e1 * t4289) * t4293 + t4278 + (t4265 + t4268) * t4299) * t4297 + (-pkin(3) * t4645 - t3965 * t4848) * t4887;
	t4142 = 0.2e1 * t4398;
	t4207 = 0.2e1 * t4293 + t4297;
	t4843 = t4207 * t4251;
	t3998 = pkin(3) * t4843 + t4142 * t4216 + (t4209 + t4187) * t4206;
	t4807 = t4293 * t4304;
	t4192 = pkin(2) * t4959 + 0.8e1 * t4807;
	t4619 = t4308 * t4813;
	t5016 = 0.4e1 * t4251;
	t4071 = t4192 * t4252 + t4619 * t5016;
	t4119 = t4276 + (t4263 + t4280) * t4297 + t4203;
	t4557 = 0.8e1 * t4638;
	t4465 = t4119 + t4557;
	t4102 = t4297 * t4774 + t4272 + t4764 + 0.6e1 * t4804;
	t4483 = -t4102 + 0.8e1 * t4712;
	t4149 = t4196 * t4206;
	t4194 = t4277 + t4208;
	t4847 = t4194 * t4251;
	t4064 = -pkin(3) * t4847 + t4149;
	t4692 = t4064 * t4904;
	t4729 = -0.4e1 * t4833;
	t4156 = t4206 - t4891;
	t4761 = 0.2e1 * t4904;
	t4399 = t4156 * t4761 - t4847;
	t4634 = t4252 * t4808;
	t4546 = pkin(2) * t4634;
	t3990 = pkin(3) * t4399 + t4149 - 0.2e1 * t4546;
	t4970 = 0.4e1 * t3990;
	t3939 = t3998 * t4729 + t4071 * t4216 + (t4251 * t4465 - 0.4e1 * t4692) * pkin(3) + (t4252 * t4483 + t4848 * t4970) * pkin(2);
	t3917 = t3925 * t4140 + t3939 * t4300;
	t3914 = 0.1e1 / t3917;
	t4159 = t4274 + t4289 + t4582;
	t4161 = t4179 - pkin(3);
	t4059 = t4159 + t4189 + t4522;
	t4639 = t4059 * t4158;
	t4960 = -0.2e1 * t4255;
	t4760 = pkin(1) * t4960;
	t4821 = t4254 * t4252;
	t4703 = pkin(2) * t4821;
	t4850 = t4184 * t4251;
	t4085 = t4703 + t4850;
	t4858 = t4085 * t4300;
	t3933 = -t4639 + t4858 + (t4159 * t4831 + t4161 * t4760) * pkin(2) + (-t4177 - t4277 + t4728 - 0.2e1 * t4855) * pkin(3);
	t4933 = t3933 / 0.4e1;
	t4612 = t3914 * t4933;
	t4714 = (0.4e1 * t4216 - 0.2e1) * pkin(3);
	t4100 = t4189 + t4289 + t4488;
	t4856 = t4100 * t4254;
	t4009 = t4184 * t4714 + t4856;
	t4084 = -t4179 + t4158;
	t4078 = pkin(3) + t4084;
	t4697 = t4109 * t4205;
	t4000 = t4100 * t4184 + 0.2e1 * t4697;
	t4865 = t4000 * t4251;
	t3936 = t4009 * t4206 + t4078 * t4300 + t4865;
	t4868 = t3936 * t4300;
	t4368 = t3904 * t4612 - t4868 / 0.4e1;
	t4696 = pkin(3) * t4158;
	t4032 = t4162 + t4189 + t4584 + 0.2e1 * t4696;
	t4026 = 0.1e1 / t4032;
	t4812 = 0.1e1 / pkin(5) / pkin(4) ^ 2;
	t4646 = t4026 * t4812;
	t3894 = t4368 * t4646;
	t4926 = t3936 / 0.4e1;
	t4611 = t3914 * t4926;
	t4870 = t3933 * t4300;
	t4369 = t4870 / 0.4e1 + t3904 * t4611;
	t3895 = t4369 * t4646;
	t4829 = t4251 * t4255;
	t4118 = -t4821 + t4829;
	t4820 = t4254 * t4255;
	t4418 = t4820 + t4831;
	t3889 = t3894 * t4118 + t3895 * t4418;
	t4704 = pkin(2) * t4829;
	t4663 = 0.32e2 / 0.3e1 * t4291;
	t4515 = t4215 * t4663;
	t4853 = t4154 * t4308;
	t4516 = 0.64e2 / 0.3e1 * t4853;
	t4892 = pkin(3) * t4200;
	t5018 = -0.4e1 * t4167;
	t4578 = t4892 * t5018;
	t4819 = t4254 * t4293;
	t4997 = pkin(1) * (0.16e2 * t4155 * t4819 + t4515) + t4216 * t4516 - t4578;
	t3966 = t4997 * t4704;
	t4800 = t4308 * t4216;
	t4544 = t4800 * t4898;
	t4458 = t4251 * t4544;
	t4089 = -0.24e2 * t4201 * t4458;
	t4675 = -0.24e2 * t4819;
	t4564 = pkin(1) * t4675;
	t3971 = t4089 + (t4167 * t4564 + t4756) * t4704;
	t4615 = t4251 * t4819;
	t4950 = pkin(1) * pkin(2);
	t4481 = t4615 * t4950;
	t4124 = t4481 * t5036;
	t4576 = 0.2e1 * t4693;
	t4397 = t4576 + 0.4e1 * t4800;
	t4011 = -t4397 * t4704 + t4124;
	t4685 = -0.64e2 * t4016 * t4305;
	t4815 = t4255 * t4297;
	t5014 = -0.48e2 * t3940;
	t4363 = t4218 * t4685 + t4815 * t5014;
	t4620 = t4291 * t4813;
	t4526 = -0.64e2 * t4620;
	t4530 = -0.32e2 * t4638;
	t4954 = -0.96e2 * t4201;
	t4531 = t4167 * t4308 * t4954;
	t4832 = t4219 * t4304;
	t4533 = 0.96e2 * t3968 * t4832;
	t4676 = -0.48e2 * t4819;
	t4677 = 0.24e2 * t4833;
	t4758 = -0.8e1 * t4895;
	t4849 = t4185 * t4252;
	t4977 = 0.8e1 * t3941;
	t3908 = t4011 * t4530 - t3966 * t4677 + (t4185 * t4533 + t4363) * t4252 + (t4849 * t4977 + (-0.8e1 * t3971 * t4185 + (t4216 * t4531 + t4758 + (t4040 * t4676 + t4215 * t4526) * pkin(1)) * t4251) * t4255) * pkin(2);
	t4715 = 0.8e1 * t4808;
	t4466 = t4153 * t4715 - t4024;
	t3962 = ((t4138 * t4746 - 0.8e1 * t4838) * pkin(1) - t4466) * t4898;
	t4949 = pkin(1) * pkin(3);
	t4890 = -0.4e1 * t4949;
	t4665 = t4130 * t4890;
	t4328 = t4126 * t4719 + t4254 * t4665 - t4492;
	t3963 = t4328 * t4898;
	t4701 = pkin(2) * t4820;
	t4566 = pkin(3) * t4701;
	t5026 = 0.2e1 * pkin(1);
	t4152 = t4566 * t5026;
	t4045 = t4554 * t4898 + t4152;
	t4350 = -t3980 * t4185 * t4832 + t3945 * t4815;
	t4976 = -0.6e1 * t3947;
	t4560 = t4849 * t4976;
	t4679 = -0.12e2 * t4833;
	t4824 = t4251 * t4305;
	t4694 = pkin(3) * t4824;
	t4735 = 0.24e2 * t4252;
	t3913 = t4045 * t4557 - t3963 * t4679 + (0.4e1 * t4093 * t4218 * t4694 + t4350) * t4735 + (t4560 + (t4048 * t4720 + 0.6e1 * t3962 * t4185 + (-0.6e1 * t4024 * t4205 + t4131 * t4682) * pkin(1) + t4445) * t4255) * pkin(2);
	t4743 = pkin(1) * t4206;
	t4188 = 0.2e1 * t4743;
	t4568 = pkin(3) * t4704;
	t4103 = -0.2e1 * t4568 + t4188;
	t4623 = t4252 * t4815;
	t4556 = -0.4e1 * t4623;
	t4116 = t4188 + t4556;
	t4339 = -0.4e1 * t4058 * t4821 + 0.4e1 * t4101 * t4829;
	t4371 = (-0.4e1 * t4160 * t4950 + t4190 * t4960) * t4252;
	t4827 = t4251 * t4297;
	t4213 = t4252 ^ 2;
	t4965 = 0.8e1 * t4213;
	t4487 = pkin(1) * t4827 * t4965;
	t3950 = t4116 * t4719 + t4371 + (pkin(2) * t4339 - 0.4e1 * t4103 * t4158 + t4487) * pkin(3);
	t3952 = 0.1e1 / t4300;
	t4924 = t3952 / 0.2e1;
	t4602 = t3950 * t4924;
	t3893 = t4140 * t3908 + t3910 * t4206 + t3913 * t4300 + t3918 * t4602;
	t4415 = 0.8e1 / 0.3e1 * t4800 + 0.2e1 * t4892;
	t4008 = -t4415 * t4704 + t4124;
	t4724 = -0.8e1 * t4819;
	t4574 = pkin(1) * t4724;
	t4968 = -0.4e1 * t4139;
	t4754 = pkin(3) * t4968;
	t4023 = (t4574 + t4754) * t4704;
	t4527 = -0.24e2 * t4623;
	t4684 = t4108 * t4735;
	t4969 = -0.6e1 * t4037;
	t4973 = 0.6e1 * t3965;
	t3926 = t3961 * t4527 + t4089 + (t4185 * t4304 * t4684 + 0.12e2 * t4008 * t4297) * t4219 + (t4849 * t4973 + (-0.6e1 * t4023 * t4185 + (pkin(3) * t4969 + t4139 * t4564) * t4251) * t4255) * pkin(2);
	t4718 = 0.2e1 * t4808;
	t5004 = (-t4196 + t4718) * t4898;
	t4035 = t4152 - t5004;
	t4046 = t4152 + (t4209 + t4718) * t4898;
	t4825 = t4251 * t4304;
	t4695 = pkin(3) * t4825;
	t4538 = t4219 * t4695;
	t4469 = -0.24e2 * t4538;
	t4747 = -0.4e1 * t4205;
	t4971 = -0.4e1 * t3990;
	t3934 = t4046 * t4729 + (pkin(2) * t4971 + t4469) * t4849 + (0.8e1 * t3998 * t4252 * t4297 + t4192 * t4216 + (0.4e1 * t4035 * t4185 - t4102 + (t4196 * t4747 + t4731) * pkin(1)) * pkin(2)) * t4255;
	t3905 = t3925 * t4206 + t4140 * t3926 + t3934 * t4300 + t3939 * t4602;
	t4097 = t4179 + t4701;
	t4104 = t4188 - 0.4e1 * t4568;
	t4446 = -t4059 * t4254 + t4161 * t5026;
	t4331 = t4159 * t4829 + t4252 * t4446;
	t4910 = t4085 / 0.2e1;
	t4599 = t3952 * t4910;
	t4630 = t4219 * t4827;
	t4964 = -0.2e1 * t4216;
	t4985 = -0.2e1 * pkin(1);
	t3921 = t4097 * t4300 + t3950 * t4599 - t4104 * t4158 + t4630 * t4985 + (t4116 * t4964 + t4556) * pkin(3) + t4331 * pkin(2);
	t4567 = pkin(3) * t4703;
	t4061 = 0.2e1 * t4567 + t4103;
	t4027 = 0.1e1 / t4032 ^ 2;
	t4344 = t4027 * t4369;
	t4932 = t3933 / 0.8e1;
	t4607 = t3952 * t4932;
	t3915 = 0.1e1 / t3917 ^ 2;
	t4928 = -t3936 / 0.4e1;
	t4609 = t3915 * t4928;
	t4907 = t4300 / 0.4e1;
	t4573 = t4184 * t5026 + t4100;
	t4414 = t4573 * t4206;
	t3984 = 0.2e1 * t4116 * t4205 + t4414;
	t4060 = (t4714 + t4761) * t4206;
	t4096 = t4118 * pkin(2);
	t4911 = t4078 / 0.2e1;
	t4600 = t3952 * t4911;
	t4862 = t4009 * t4255;
	t3919 = -t4096 * t4300 + t3950 * t4600 + t3984 * t4251 + (t4060 * t4252 + t4862) * pkin(2);
	t4938 = t3919 / 0.4e1;
	t4788 = (-t4061 * t4344 + (t3921 * t4907 + t3950 * t4607 + t3893 * t4611 + (t3905 * t4609 + t3914 * t4938) * t3904) * t4026) * t4812 - t3894;
	t4343 = t4027 * t4368;
	t4927 = -t3936 / 0.8e1;
	t4604 = t3952 * t4927;
	t4934 = -t3933 / 0.4e1;
	t4610 = t3915 * t4934;
	t4908 = -t4300 / 0.4e1;
	t4937 = t3921 / 0.4e1;
	t4789 = (-t4061 * t4343 + (t3893 * t4612 + t3919 * t4908 + t3950 * t4604 + (t3905 * t4610 + t3914 * t4937) * t3904) * t4026) * t4812 + t3895;
	t4792 = t4118 * t4788 - t4418 * t4789 + t3889;
	t4563 = t4792 * t4255;
	t3875 = t4118 * t4789 + t4418 * t4788;
	t3890 = -t3894 * t4418 + t3895 * t4118;
	t4793 = t3875 - t3890;
	t4351 = t4252 * t4793 + t4563;
	t4627 = qJD(2) * t4829;
	t4651 = qJD(3) * t4821;
	t4366 = -t4627 - t4651;
	t4948 = pkin(2) * pkin(3);
	t3996 = t4366 * t4948 * t4998;
	t3999 = (-0.8e1 / 0.3e1 * t4651 - 0.8e1 / 0.3e1 * t4627) * t4155 * t4948;
	t4062 = (-0.2e1 / 0.3e1 * t4651 - 0.2e1 / 0.3e1 * t4627) * t4948;
	t4674 = -0.32e2 * t4810;
	t4686 = -0.28e2 * t3983 * t4293;
	t4362 = t4202 * t4674 + t4254 * t4686;
	t4670 = -0.48e2 * t4800;
	t4757 = t3986 * t4983;
	t4396 = t4092 * t4670 + t4757;
	t4165 = pkin(2) * t4627;
	t4475 = pkin(3) * t4165;
	t4412 = t4200 * t4475;
	t4473 = t4200 * t4567;
	t3928 = t4412 * t5018 + t3996 * t4672 + (t3999 * t4745 + t4062 * t4682) * pkin(1) + (t4473 * t5018 + (pkin(1) * t4396 + t4362) * t4251) * qJD(3);
	t4878 = qJD(2) * t4255;
	t4443 = t4666 * t4878;
	t4164 = pkin(2) * t4651;
	t4478 = pkin(3) * t4164;
	t3970 = -0.6e1 * t4040 * t4478 + t4251 * t4443;
	t4349 = pkin(2) * t4366;
	t4337 = 0.4e1 * t4349;
	t4332 = pkin(3) * t4337;
	t4013 = t4167 * t4332;
	t4502 = qJD(3) * t4615;
	t4447 = -0.24e2 * t4502;
	t4069 = pkin(3) * t4349;
	t4333 = 0.2e1 * t4069;
	t4033 = t4201 * t4333;
	t4635 = t4251 * t4800;
	t4552 = pkin(1) * t4635;
	t4120 = -0.24e2 * t4211 * t4552;
	t4787 = qJD(3) * t4120 + t4033 * t4673;
	t4876 = qJD(3) * t4251;
	t4883 = 0.6e1 * pkin(3);
	t3932 = t4036 * t4447 + (-t3993 * t4876 + t4013 * t4254) * pkin(1) * t4883 + t4787 + t3970;
	t4050 = t4069 * t4668;
	t4068 = t4308 * t4337;
	t4145 = -0.2e1 * t4475;
	t4982 = -0.4e1 * pkin(3);
	t4755 = t4087 * t4982;
	t4961 = -0.2e1 * t4254;
	t4330 = (t4076 * t4961 + (t4755 - 0.24e2 * t4800) * pkin(1)) * t4251;
	t3948 = t4145 * t4814 + t4068 * t4216 + t4050 + (t4254 * t4436 + t4330) * qJD(3);
	t3988 = t4201 * t4013;
	t4565 = pkin(1) * t4670;
	t4005 = (t4199 * t4961 - t4183 + t4565 + t4674) * t4251;
	t3992 = qJD(3) * t4005;
	t4029 = t4333 * t4813;
	t4383 = t3973 * t4676 - 0.4e1 * t4150 * t4215;
	t4524 = t4758 * t4898;
	t4532 = -0.96e2 * t4041 * t4800;
	t4647 = t3968 * t4834;
	t4680 = 0.16e2 * t4836;
	t3899 = t3928 * t4677 + t3988 * t4671 + t3992 * t4680 + (-0.8e1 * t3932 * t4898 - 0.32e2 * t3948 * t4834) * t4185 + (t3970 * t4744 + 0.32e2 * t4029 * t4838) * pkin(1) + (t4251 * t4524 + ((pkin(2) * t4977 + t4533) * t4185 + t4363) * t4252) * qJD(2) + (-0.8e1 * t3982 * t4567 + (pkin(1) * t4532 + 0.8e1 * (-pkin(1) * t3959 + t3941 * t4898 + 0.4e1 * t4647) * pkin(3) + t4383) * t4251) * qJD(3);
	t4193 = pkin(2) * t4878;
	t4875 = qJD(3) * t4254;
	t4698 = pkin(3) * t4875;
	t4012 = -t4125 * t4698 + t4126 * t4193;
	t4687 = -t4205 / 0.2e1;
	t4030 = qJD(3) * t4195 * t4687 + t4130 * t4193;
	t4464 = t4663 * t4206;
	t4750 = -0.4e1 * t4891;
	t4575 = t4039 * t4750;
	t4212 = t4251 ^ 2;
	t4842 = t4212 * t4216;
	t3931 = t4030 * t4668 + t4012 * t4717 + t4417 * t4878 + (t4047 * t4687 + (t4019 * t4724 + t4215 * t4464) * t4251 + (t4575 + (-0.4e1 * t4214 + 0.12e2 * t4842) * t4291) * pkin(1)) * qJD(3);
	t4010 = t4024 * t4193;
	t4018 = -t4137 * t4698 + t4138 * t4193;
	t4508 = t4813 * t4875;
	t4581 = 0.2e1 * t4193;
	t4038 = pkin(3) * t4508 + t4153 * t4581;
	t4828 = t4251 * t4293;
	t4726 = 0.8e1 * t4828;
	t4894 = pkin(3) * t4052;
	t4365 = (t4053 * t4726 - t4894) * t4254;
	t4655 = t4216 * t4876;
	t4534 = 0.24e2 * t4655;
	t3937 = t4038 * t4719 + t4010 + qJD(3) * t4365 + ((t4018 * t4254 - t4025 * t4876) * t5025 + (-0.8e1 * t4215 * t4878 + t4252 * t4534) * t4896) * pkin(1);
	t4816 = t4254 * t4308;
	t4650 = qJD(3) * t4816;
	t4700 = t4255 * t4897;
	t4354 = qJD(2) * t4700 - t4650;
	t4113 = 0.4e1 * t4354;
	t4123 = t4193 + 0.2e1 * t4698;
	t4830 = t4251 * t4254;
	t4653 = qJD(3) * t4830;
	t4562 = -0.2e1 * t4653;
	t3956 = t4210 * t4193 + t4141 * t4562 + t4113 * t4216 + (0.2e1 * t4129 * t4875 + (t4123 * t4254 - t4157 * t4876) * t5026) * pkin(3);
	t3972 = -t4052 * t4698 + t4010;
	t3976 = t4048 * t4193 - 0.2e1 * t4054 * t4698;
	t4034 = t4131 * t4193 + t4211 * t4698 / 0.2e1;
	t4741 = pkin(1) * t4891;
	t4186 = -0.2e1 * t4741;
	t4173 = qJD(3) * t4186;
	t4493 = -0.8e1 / 0.3e1 * t4615;
	t4088 = qJD(3) * t4493 + t4173;
	t5020 = -0.8e1 * t3980;
	t5021 = 0.6e1 * t3974;
	t4340 = pkin(1) * t5021 + t4834 * t5020 + t4898 * t4976;
	t4385 = t4444 * t4254;
	t4449 = t4252 * t4810 * t4954;
	t4835 = t4218 * t4252;
	t4955 = 0.96e2 * qJD(2);
	t5013 = 0.12e2 * t3978;
	t3902 = t3956 * t4557 + t3931 * t4679 + (-0.6e1 * t3976 * t4216 + t4653 * t5013) * t4293 + t4350 * qJD(2) * t4735 + (0.16e2 * t4034 * t4215 - 0.48e2 * t4051 * t4655) * t4900 + (t4449 * t4876 + t3937 * t4733 + (t4255 * t4445 + t4560) * qJD(2)) * pkin(2) + (t3972 * t4762 + (t4093 * t4835 * t4955 - 0.24e2 * t4088 * t4217) * t4824 + (t4251 * t4340 + t4385) * qJD(3)) * pkin(3);
	t4699 = pkin(3) * t4876;
	t4879 = qJD(2) * t4252;
	t4709 = pkin(2) * t4879;
	t4121 = -t4699 + t4709;
	t4506 = t4109 * t4653;
	t4561 = 0.4e1 * t4651;
	t4659 = t4058 * t4876;
	t4738 = 0.4e1 * t4184;
	t4175 = qJD(2) * t4188;
	t4510 = qJD(2) * t4623;
	t4467 = -0.4e1 * t4510;
	t4091 = t4175 + t4467;
	t4857 = t4091 * t4216;
	t4070 = -0.2e1 * t4478 + t4145;
	t4042 = t4175 + t4070;
	t4861 = t4042 * t4254;
	t3935 = (0.8e1 * t4506 - 0.4e1 * t4857) * t4293 + qJD(2) * t4371 + (qJD(2) * t4487 + (t4659 - t4861) * t4738 + (qJD(2) * t4339 + t4101 * t4561) * pkin(2)) * pkin(3);
	t4606 = t3935 * t4924;
	t3891 = t4140 * t3899 + t3902 * t4300 + t4121 * t3910 + t3918 * t4606;
	t4063 = (-0.4e1 / 0.9e1 * t4651 - 0.4e1 / 0.9e1 * t4627) * t4948;
	t4327 = (-0.12e2 * t4065 * t4819 + (t4083 * t4982 - 0.12e2 * t4800) * pkin(1)) * t4251;
	t3946 = -0.2e1 * t4412 + t4063 * t4716 + t4050 + (t4327 - 0.2e1 * t4473) * qJD(3);
	t3997 = (t4475 + t4478) * t4968;
	t3955 = t4191 * t4562 + (t4070 * t4254 - t4077 * t4876) * pkin(1) * t5025 + t3997;
	t4090 = t4173 - 0.8e1 * t4502;
	t4730 = 0.8e1 * t4834;
	t4559 = t4108 * t4730;
	t4987 = -0.6e1 * pkin(1);
	t4400 = t3989 * t4987 + t4559;
	t4644 = t4037 * t4821;
	t4759 = 0.6e1 * t4898;
	t4822 = t4252 * t4255;
	t4880 = qJD(2) * t4219;
	t4957 = -0.24e2 * qJD(2);
	t4963 = -0.8e1 * t4218;
	t3909 = t4031 * t4447 + (t3961 * t4822 * t4957 + t3946 * t4952) * t4297 + ((t4090 * t4963 + t4684 * t4880) * t4304 + (-t3955 * t4255 + t3965 * t4879) * t4887) * t4185 + (t4165 * t4969 + 0.6e1 * t3997 * t4904 + (-0.6e1 * pkin(2) * t4644 + (t3965 * t4759 + t4400) * t4251) * qJD(3)) * pkin(3) + t4787;
	t4122 = t4193 - t4698;
	t4128 = t4196 * t4193;
	t4657 = t4194 * t4875;
	t4852 = t4156 * t4251;
	t3964 = t4128 + (t4251 * t4561 + t4878 * t4964) * t4897 + (-t4657 + (-qJD(3) * t4852 + t4122 * t4254) * t5026) * pkin(3);
	t4114 = 0.2e1 * t4354;
	t4621 = qJD(2) * t4820;
	t4654 = qJD(3) * t4831;
	t4336 = (t4621 - t4654) * t4885;
	t4962 = -0.2e1 * t4251;
	t3967 = t4114 * t4216 + (pkin(3) * t4207 + t4142 * t4962) * t4875 + (pkin(1) * t4336 + t4209 * t4878) * pkin(2);
	t4055 = -pkin(3) * t4657 + t4128;
	t4057 = t4192 * t4878 + 0.4e1 * t4308 * t4508;
	t4636 = t4212 * t4807;
	t4866 = t3990 * t4255;
	t4323 = (t4465 * t4254 + (pkin(1) * t4064 - pkin(2) * t4866) * t5016) * pkin(3) + t4636 * t4963;
	t4707 = pkin(2) * t4848;
	t4579 = 0.4e1 * t4707;
	t4664 = -0.24e2 * t4743;
	t4722 = 0.8e1 * t4815;
	t3920 = -0.4e1 * t4055 * t4740 + t3964 * t4579 + t3967 * t4729 + t4057 * t4216 + ((t3998 * t4722 + t4185 * t4469) * t4252 + (t4255 * t4483 + t4849 * t4971) * pkin(2)) * qJD(2) + ((t4071 * t4961 + t4664 * t4800) * t4251 + t4323) * qJD(3);
	t4603 = t3939 * t4924;
	t3896 = t4140 * t3909 + t3920 * t4300 + t4121 * t3925 + t3935 * t4603;
	t4079 = t4165 + t4164;
	t4622 = qJD(2) * t4821;
	t4548 = pkin(2) * t4622;
	t4355 = -qJD(3) * t4850 + t4548;
	t4002 = t4355 - t4079;
	t3942 = t4002 * t4300;
	t3969 = (t4091 * t4254 - t4109 * t4876) * t4885 + qJD(2) * t4414;
	t4020 = (-t4100 - 0.8e1 * t4696) * t4251;
	t3977 = qJD(2) * t4060 + qJD(3) * t4020;
	t4864 = t4000 * t4254;
	t3911 = t3942 + t3935 * t4600 + t3969 * t4251 + qJD(3) * t4864 + (qJD(2) * t4862 + t3977 * t4252) * pkin(2);
	t4043 = t4175 + t4332;
	t4386 = -t4043 * t4254 + t4059 * t4876;
	t4003 = (qJD(2) * t4418 - t4654) * pkin(2) + qJD(3) * t4158;
	t4863 = t4003 * t4300;
	t3912 = t4863 + t3935 * t4599 + t4386 * t4184 + (t4467 + 0.4e1 * t4506 - 0.2e1 * t4857) * pkin(3) + (qJD(2) * t4331 + t4079 * t4760 + t4159 * t4651) * pkin(2);
	t3985 = t4355 * t4885 + t4042;
	t4939 = t3914 / 0.4e1;
	t3877 = (-t3985 * t4343 + (t3891 * t4612 + t3911 * t4908 + t3935 * t4604 + (t3896 * t4610 + t3912 * t4939) * t3904) * t4026) * t4812;
	t3878 = (-t3985 * t4344 + (t3912 * t4907 + t3935 * t4607 + t3891 * t4611 + (t3896 * t4609 + t3911 * t4939) * t3904) * t4026) * t4812;
	t4652 = qJD(3) * t4829;
	t4367 = t4622 + t4652;
	t4021 = -t4366 - t4367;
	t4628 = qJD(2) * t4831;
	t4022 = qJD(3) * t4418 - t4621 - t4628;
	t3871 = t3877 * t4118 + t3878 * t4418 + t3894 * t4022 + t3895 * t4021;
	t4505 = t4116 * t4653;
	t4511 = t4252 * t4627;
	t4781 = t4213 - t4219;
	t4520 = 0.2e1 * t4781;
	t4176 = pkin(1) * t4581;
	t4476 = qJD(2) * t4569;
	t4477 = qJD(3) * t4566;
	t4594 = -0.2e1 * t4477 + 0.2e1 * t4476 + t4176;
	t4736 = 0.4e1 * t4254;
	t4739 = 0.4e1 * qJD(2);
	t4394 = t4781 * t4297 * t4739;
	t4072 = t4176 + t4394;
	t4860 = t4072 * t4216;
	t4902 = pkin(1) * t4297;
	t3927 = (0.8e1 * t4505 - 0.4e1 * t4860) * t4293 + (t4190 * t4520 - 0.4e1 * t4572) * qJD(2) + ((t4103 * t4876 - t4254 * t4594) * t4738 + (t4875 * t4965 + 0.24e2 * t4511) * t4902 + ((-qJD(2) * t4058 + qJD(3) * t4101) * t4255 * t4736 + (0.4e1 * t4659 - 0.4e1 * t4861 + (-t4101 * t4251 - t4103 * t4254) * t4739) * t4252) * pkin(2)) * pkin(3);
	t4348 = pkin(3) * (-qJD(3) * t4820 + t4628);
	t4364 = pkin(1) * t4457 * t4810;
	t4845 = t4201 * t4216;
	t4403 = t4541 * t4845;
	t4372 = qJD(2) * t4403;
	t4509 = t4212 * t4650;
	t4706 = t4201 * t4898;
	t4374 = t4509 * t4706;
	t4632 = t4305 * t4835;
	t4470 = 0.96e2 * pkin(3) * t4632;
	t4405 = t4251 * t4470;
	t4413 = t4620 * t4742;
	t4426 = t4255 * t4502;
	t4662 = qJD(2) * t4848;
	t4428 = t4213 * t4304 * t4662;
	t4435 = t4536 * t4886;
	t4451 = 0.24e2 * t4510;
	t4452 = -0.48e2 * t4510;
	t4540 = t4217 * t4694;
	t4454 = t4093 * t4540;
	t4459 = t4637 * t4206;
	t4480 = qJD(3) * t4569;
	t4484 = t4254 * t4578;
	t4869 = t3935 * t3952 / t3954;
	t4605 = -t4869 / 0.4e1;
	t4497 = t3950 * t4605;
	t4629 = t4252 * t4832;
	t4504 = t4185 * t4629;
	t4513 = qJD(2) * t4634;
	t4514 = t4213 * t4305 * t4880;
	t4528 = -0.64e2 * t4632;
	t4549 = pkin(2) * t4662;
	t4580 = -0.8e1 * t4707;
	t4545 = t4216 * t4700;
	t4482 = pkin(1) * t4545;
	t4408 = t4252 * t4481;
	t4809 = t4293 * t4212;
	t4617 = qJD(3) * t4809;
	t5032 = qJD(2) * t4408 + t4617 * t4742;
	t4999 = -qJD(3) * t4482 + t5032;
	t4596 = 0.4e1 * t4999;
	t4683 = -0.24e2 * t4838;
	t4472 = pkin(2) * t4201 * t4683;
	t4407 = t4255 * t4472;
	t4597 = qJD(3) * t4407 + 0.24e2 * t4372 + 0.48e2 * t4374;
	t4608 = t3918 * t4924;
	t4656 = qJD(3) * t4842;
	t4660 = qJD(2) * t4833;
	t4839 = t4213 * t4297;
	t4661 = qJD(2) * t4839;
	t4691 = t4297 * t4848;
	t4708 = pkin(2) * t4849;
	t4732 = -0.4e1 * t4838;
	t4782 = t4212 - t4216;
	t4479 = qJD(3) * t4568;
	t5030 = pkin(1) * t4479 + t4548 * t4949;
	t4783 = 0.2e1 * t5030;
	t4801 = t4308 * t4212;
	t4841 = t4212 * t4254;
	t4874 = qJD(3) * t4255;
	t4901 = pkin(1) * t4300;
	t4906 = pkin(1) * qJD(3);
	t4956 = 0.24e2 * qJD(2);
	t4448 = t4215 * t4531;
	t4453 = t4252 * t4538;
	t5012 = -0.48e2 * t4040;
	t4988 = -0.8e1 * t3941 * t4569 - 0.96e2 * t3968 * t4453 - 0.64e2 * t4214 * t4413 + t4254 * t4524 + t4448 * t4898 + t4482 * t5012;
	t4512 = t4251 * t4622;
	t4996 = pkin(1) * t4293 * (t4782 * t4874 + t4512);
	t5000 = t4093 * t4254 * t4470 + 0.24e2 * t3980 * t4453 - 0.96e2 * t4624 * t4706;
	t5005 = t4367 * t5025;
	t5006 = t4308 * (0.8e1 * t4215 * t4879 + t4255 * t4534);
	t5010 = 0.16e2 * t4293;
	t5023 = -0.6e1 * t3937;
	t5024 = 0.8e1 * t3932;
	t4550 = qJD(2) * t4708;
	t5027 = -0.6e1 * t4479 - 0.6e1 * t4550;
	t5028 = 0.8e1 * t4479 + 0.8e1 * t4550;
	t4427 = qJD(2) * t4504;
	t4633 = t4218 * t4825;
	t4539 = pkin(3) * t4633;
	t4456 = qJD(3) * t4539;
	t5031 = -0.8e1 * t4456 - 0.24e2 * t4427;
	t5033 = 0.96e2 * t4427 + 0.32e2 * t4456;
	t3884 = (-0.48e2 * t4131 * t4458 * t4906 + 0.48e2 * t3980 * t4428 - 0.24e2 * t3945 * t4661 + 0.24e2 * t3931 * t4623 - t3963 * t4451 + 0.6e1 * (0.16e2 * t4153 * t4426 + t4466 * t4879 + (-t4138 * t5005 + t5006) * pkin(1)) * t4691 + t4088 * t4405 - 0.288e3 * t4093 * t4514 * t4891 + t4454 * t4955 + t4648 * t4956 + t4549 * t4976 - t4783 * t4557 - 0.24e2 * t3956 * t4504 + 0.6e1 * t3947 * t4480 + t3981 * t4709 + t4708 * t5023 + 0.6e1 * t5030 * t4024 + (t4501 + t4459) * t4957 + t5031 * t4045 + t5027 * t3962 + (((t4126 * t4724 + t4515 + t4665) * t4652 + t4328 * t4879) * t4679 + (-t4554 * t4879 - 0.8e1 * t4426) * t4557 + (0.12e2 * t4426 + 0.6e1 * t4513) * t4048) * pkin(2)) * t4300 + t3913 * t4606 + t3902 * t4602 + t3918 * t4497 + t3927 * t4608 + t3910 * t4193 + t3899 * t4206 + t4121 * t3908 + t4140 * (((0.6e1 * t4040 * t4348 + 0.24e2 * t4167 * t4996) * pkin(2) + t4597) * t4580 + 0.192e3 * t4167 * t4374 - 0.192e3 * t3968 * t4428 + 0.48e2 * t3940 * t4661 + ((t4397 * t4628 + (t4732 + (t4577 + 0.8e1 * t4801) * t4254) * t4874) * pkin(2) + t4596) * t4530 - 0.48e2 * t3928 * t4623 + t4708 * t5024 + 0.192e3 * t4413 * t4656 + 0.96e2 * t4167 * t4372 - t3966 * t4452 + t3992 * t4528 + t4507 * t4955 + t4549 * t4977 + (t4997 * t4628 + (t4484 + (0.128e3 / 0.3e1 * t4841 - 0.64e2 / 0.3e1 * t4215) * t4853 + ((-0.32e2 / 0.3e1 * t4214 + 0.32e2 * t4842) * t4291 + t4782 * t4155 * t5010) * pkin(1)) * t4874) * pkin(2) * t4677 + 0.192e3 * t4016 * t4514 + 0.96e2 * t3948 * t4504 + t4660 * t5014 + 0.48e2 * t5032 * t4040 + t5033 * t4011 + t5028 * t3971) + (-0.16e2 * t4131 * t4542 * t4901 + t4140 * (t4217 * t4685 + 0.64e2 * t4364 + t4435)) * qJD(2) + (t4140 * t4988 + t5000 * t4300) * qJD(3);
	t4450 = -0.24e2 * t4108 * t4629;
	t4598 = -0.8e1 / 0.3e1 * t4838;
	t4626 = t4251 * t4820;
	t4678 = 0.12e2 * t4833;
	t4725 = 0.8e1 * t4822;
	t4752 = -0.2e1 * t4892;
	t4837 = t4216 * t4252;
	t4974 = -0.4e1 * t3964;
	t4975 = 0.6e1 * t3955;
	t5029 = 0.6e1 * t4476 - 0.6e1 * t4477;
	t3886 = ((t3967 * t4725 + 0.4e1 * t4219 * t4783) * t4297 + (-0.2e1 * t4192 * t4626 + 0.24e2 * (-t4185 * t4205 + t4809) * t4629) * qJD(3) + (-t4192 * t4837 + (0.48e2 * t4213 * t4255 - 0.24e2 * t4218) * t4185 * t4695 + (-0.8e1 * t3998 * t4781 + t4046 * t4725) * t4297) * qJD(2) + ((-t4209 * t4879 - 0.4e1 * t4426 - 0.2e1 * t4513) * t4729 + t4102 * t4879 + 0.4e1 * (t3990 * t4252 - t4035 * t4255) * t4699 + (t4196 * t5005 - t5006) * pkin(1) + (t4783 * t5036 + t4252 * t4974 + 0.16e2 * t4219 * pkin(2) * t4502 + (-t4866 + (-t4035 + t5004) * t4252) * t4739) * t4185) * pkin(2)) * t4300 + t3934 * t4606 + t3920 * t4602 + t3939 * t4497 + t3927 * t4603 + t3925 * t4193 + t3909 * t4206 + t4121 * t3926 + t4140 * (-0.48e2 * t4108 * t4428 + t4450 * t4699 + t3946 * t4527 + ((t4415 * t4628 + (t4598 + (0.16e2 / 0.3e1 * t4801 + t4752) * t4254) * t4874) * pkin(2) + t4596) * t4678 + t4597 - 0.24e2 * t4008 * t4510 + t4500 * t4956 + t4549 * t4973 + 0.24e2 * t4090 * t4504 - 0.6e1 * t3965 * t4480 - 0.48e2 * t4691 * t4996 + t4708 * t4975 + t5029 * t4037 + 0.6e1 * (t4550 + t4479) * t4023) + 0.24e2 * t4140 * ((-t4348 * t4691 + t4999) * t4139 + (t4661 - t4660) * t3961);
	t4494 = t4085 * t4605;
	t4826 = t4251 * t4300;
	t4916 = t4003 / 0.2e1;
	t4930 = t3935 / 0.2e1;
	t3897 = t4079 * t4300 + t3950 * t4494 + (t4104 * t4876 - t4176 * t4254) * t4184 + (-0.2e1 * t4219 * t4875 + 0.4e1 * t4511) * t4902 + (t3927 * t4910 + t3950 * t4916 + t4097 * t4930) * t3952 + (t4394 + 0.4e1 * t4505 - 0.2e1 * t4860) * pkin(3) + ((t4446 * qJD(2) + (-t4826 + (t4159 + 0.4e1 * t4696) * t4254) * qJD(3)) * t4255 + (t4079 * t5026 + (-t4159 * t4251 + (t4184 * t4750 - t4104 - t4300) * t4254) * qJD(2) + t4386) * t4252) * pkin(2);
	t4495 = t4078 * t4605;
	t4553 = pkin(1) * t4661;
	t4737 = 0.2e1 * t4251;
	t4748 = -0.8e1 * t4205;
	t4818 = t4254 * t4300;
	t4917 = t4002 / 0.2e1;
	t3898 = t3950 * t4495 + (t4072 * t4205 - t4116 * t4699 + 0.2e1 * t4553) * t4737 + t3984 * t4875 + (t3927 * t4911 + t3950 * t4917 - t4096 * t4930) * t3952 + (t3977 * t4255 + (-t4255 * t4818 + (-t4300 + (t4985 + t4748) * t4206) * t4831) * qJD(3) + ((-t4009 + t4826) * t4252 + (t4818 + t4573 * t4251 + t4060 + (t4216 * t4885 - pkin(3) + t4904) * t5017) * t4255) * qJD(2)) * pkin(2);
	t5008 = t3914 / 0.2e1;
	t4613 = t3904 * t5008;
	t4867 = t3985 * t4026 * t4027;
	t4335 = (t4870 / 0.2e1 + t3936 * t4613) * t4867;
	t4914 = t4061 / 0.4e1;
	t4920 = t3985 / 0.4e1;
	t4356 = t3915 * (t3896 * t4914 + t3905 * t4920);
	t4944 = -t3896 / 0.4e1;
	t4945 = -t3891 / 0.4e1;
	t4359 = t3915 * (t3893 * t4944 + t3905 * t4945);
	t4915 = -t4061 / 0.4e1;
	t4921 = -t3985 / 0.4e1;
	t4360 = t3914 * (t3891 * t4915 + t3893 * t4921);
	t4391 = t3912 * t4915 + t3921 * t4921;
	t4392 = t3911 * t4914 + t3919 * t4920;
	t4517 = t4869 / 0.16e2;
	t4430 = t3950 * t4517;
	t4614 = t3896 * t3915 * t5008;
	t4498 = t3936 * t4614;
	t3987 = pkin(2) * t4336 + t4594;
	t4919 = -t3987 / 0.4e1;
	t4925 = t3950 / 0.8e1;
	t4929 = t3935 / 0.8e1;
	t4942 = t3911 / 0.4e1;
	t4943 = -t3911 / 0.4e1;
	t4991 = t3987 * t4907 + (t3985 * t4925 + t4061 * t4929) * t3952;
	t4794 = (t4061 * t4335 + (t4391 * t4300 + t3936 * t4360 - t4991 * t3933 + (t3936 * t4356 + (t3936 * t4919 - t4392) * t3914) * t3904) * t4027 + (-t3933 * t4430 + t3897 * t4907 + t3936 * t4359 + (t3912 * t4925 + t3921 * t4929 + t3927 * t4932) * t3952 + (t3884 * t4926 + t3891 * t4938 + t3893 * t4942) * t3914 + (t3898 * t4939 + t3905 * t4498 + (t3886 * t4928 + t3905 * t4943 + t3919 * t4944) * t3915) * t3904) * t4026) * t4812 - t3877;
	t4334 = (-t4868 / 0.2e1 + t3933 * t4613) * t4867;
	t4499 = t3933 * t4614;
	t4931 = -t3935 / 0.8e1;
	t4940 = t3912 / 0.4e1;
	t4941 = -t3912 / 0.4e1;
	t4795 = (t4061 * t4334 + (t4392 * t4300 + t3933 * t4360 + t4991 * t3936 + (t3933 * t4356 + (t3933 * t4919 + t4391) * t3914) * t3904) * t4027 + (t3936 * t4430 + t3898 * t4908 + t3933 * t4359 + (t3919 * t4931 + t3927 * t4927 - t3911 * t3950 / 0.8e1) * t3952 + (t3884 * t4933 + t3891 * t4937 + t3893 * t4940) * t3914 + (t3897 * t4939 + t3905 * t4499 + (t3886 * t4934 + t3905 * t4941 + t3921 * t4944) * t3915) * t3904) * t4026) * t4812 + t3878;
	t4798 = -t4021 * t4789 + t4022 * t4788 + t4118 * t4794 - t4418 * t4795 + t3871;
	t3872 = -t3877 * t4418 + t3878 * t4118 - t3894 * t4021 + t3895 * t4022;
	t4799 = t4021 * t4788 + t4022 * t4789 + t4118 * t4795 + t4418 * t4794 - t3872;
	t5035 = -qJD(2) * t4351 - t4798 * t4252 + t4799 * t4255;
	t5022 = -0.8e1 * t3959;
	t5015 = 0.6e1 * t4707;
	t4519 = 0.8e1 * t4782;
	t5009 = -0.24e2 * t4540;
	t4419 = t3889 * t4252 + t3890 * t4255;
	t4994 = qJD(2) * t4419 - t3871 * t4255 + t3872 * t4252;
	t4329 = pkin(2) * (-t4215 * t4516 + t4484);
	t4338 = pkin(2) * (-0.16e2 * t4155 * t4808 - t4214 * t4663);
	t3938 = t4362 * t4251 + t4252 * t4329 + (t4251 * t4396 + t4252 * t4338) * pkin(1);
	t4529 = -0.24e2 * t4634;
	t4751 = -0.6e1 * t4891;
	t4785 = t4252 * t4472 + t4120;
	t3943 = (-0.24e2 * t4036 * t4828 + t4523) * t4254 + (pkin(2) * t4167 * t4529 + t3993 * t4751) * pkin(1) + t4785;
	t4986 = -0.4e1 * pkin(1);
	t4151 = t4546 * t4986;
	t4353 = pkin(2) * (t4254 * t4577 + t4732);
	t3960 = t4252 * t4353 + t4151 + t4330;
	t3906 = t3960 * t4530 + t3938 * t4677 + t4005 * t4680 + (0.32e2 * pkin(3) * t4647 + (pkin(3) * t5022 + t4532) * pkin(1) + t4383) * t4251 + (0.8e1 * (t3941 * t4891 - t3943 * t4185) * t4255 + (t4448 + t3982 * t4748 + (t4214 * t4526 + t4808 * t5012) * pkin(1)) * t4252) * pkin(2);
	t4734 = -0.8e1 * t4019 * t4293;
	t4840 = t4212 * t4291;
	t3944 = (t4251 * t4734 - pkin(3) * t4047 / 0.2e1) * t4254 + (-0.4e1 * t4125 * t4308 + t4251 * t4464) * t4215 + (t4575 - 0.4e1 * t4811 + (-0.2e1 * t4195 * t4293 + 0.12e2 * t4840) * t4216) * pkin(1);
	t4503 = t4215 * t4619;
	t3949 = -0.4e1 * t4503 + t4365 + (t4025 * t4750 + (-0.4e1 * t4137 * t4293 + 0.24e2 * t4541) * t4216) * pkin(1);
	t4893 = pkin(3) * t4129;
	t3979 = t4732 + 0.2e1 * (-t4141 * t4251 + t4893) * t4254 + (t4157 * t4749 + t4717) * pkin(1);
	t4105 = t4493 + t4186;
	t3907 = t3944 * t4679 + 0.12e2 * t4054 * t4838 + (t3949 * t4759 + t3979 * t4730) * t4185 + pkin(3) * t4385 + (t4052 * t4716 + t4211 * t4721) * pkin(1) + (pkin(2) * t4449 + t4051 * t4565 + t4819 * t5013 + (t4105 * t4681 + t4340) * pkin(3)) * t4251;
	t4723 = 0.8e1 * t4819;
	t4753 = t4184 * t5025;
	t3957 = (t4058 * t4753 + t4109 * t4723) * t4251 + (t4101 * t4746 + t4184 * t4715) * t4206;
	t4922 = t3957 / 0.2e1;
	t4601 = t3952 * t4922;
	t3892 = t4140 * t3906 + t3907 * t4300 - t3910 * t4891 + t3918 * t4601;
	t4384 = t4254 * t4752 + t4598;
	t3958 = t4206 * t4384 + t4151 + t4327;
	t3975 = (t4191 * t4962 + t4206 * t4754) * t4254 + (t4077 * t4750 - 0.8e1 * t4546) * pkin(1);
	t4115 = t4186 - 0.8e1 * t4615;
	t4558 = -0.8e1 * t4638;
	t3924 = t4115 * t4558 + t3958 * t4678 + (pkin(3) * t4400 + t4031 * t4675) * t4251 + (pkin(1) * t4139 * t4529 - 0.6e1 * t3975 * t4848 + (t3965 * t4829 - t4644) * t4883) * pkin(2) + t4785;
	t4543 = t4293 * t4179;
	t3994 = (-pkin(3) * t4194 + 0.4e1 * t4543) * t4254 + (-pkin(3) * t4852 - t4808) * t5026;
	t4525 = t4179 * t4985;
	t4727 = -0.2e1 * t4830;
	t4001 = t4142 * t4727 - 0.2e1 * t4838 + (t4207 * t4254 + t4525) * pkin(3);
	t3929 = t3994 * t4579 + 0.4e1 * t4503 + t4001 * t4729 + t4071 * t4727 + (t4194 * t4958 - 0.24e2 * t4541) * t4216 * pkin(1) + t4323;
	t3903 = t4140 * t3924 - t3925 * t4891 + t3929 * t4300 + t3939 * t4601;
	t4710 = pkin(1) * t4815;
	t3923 = t4084 * t4300 + t3957 * t4599 + (t4059 * t4184 + 0.4e1 * t4697) * t4251 + (t4710 * t4961 + (t4159 * t4254 + t4216 * t4753) * pkin(2)) * t4252;
	t4073 = t4085 * t4885;
	t4966 = -0.2e1 * t4212;
	t3922 = pkin(3) * t4109 * t4966 + t3957 * t4600 + t4020 * t4206 - t4858 + t4864;
	t4936 = t3922 / 0.4e1;
	t4790 = (t4073 * t4344 + (t3923 * t4907 + t3957 * t4607 + t3892 * t4611 + (t3903 * t4609 + t3914 * t4936) * t3904) * t4026) * t4812 + t3894;
	t4935 = t3923 / 0.4e1;
	t4791 = (t4073 * t4343 + (t3892 * t4612 + t3922 * t4908 + t3957 * t4604 + (t3903 * t4610 + t3914 * t4935) * t3904) * t4026) * t4812 - t3895;
	t4347 = qJD(2) * t4216 * (t4184 * t4898 + t4839);
	t4460 = t4179 * t4158;
	t4642 = t4091 * t4830;
	t4978 = -0.4e1 * qJD(3);
	t3930 = (0.8e1 * t4642 + 0.8e1 * t4347 + (-t4109 * t4519 - 0.16e2 * t4460) * qJD(3)) * t4293 + (0.8e1 * t4254 * t4553 + (t4042 * t4251 + t4058 * t4875) * t4738 + (t4641 * t4978 + (t4058 * t4831 + t4101 * t4820) * t4739) * pkin(2)) * pkin(3);
	t4570 = pkin(1) * t4698;
	t4174 = -0.2e1 * t4570;
	t4373 = qJD(3) * t4403;
	t4381 = qJD(3) * t4408;
	t4463 = pkin(1) * t4509;
	t4425 = qJD(2) * t4407 - 0.24e2 * qJD(3) * t4551 - 0.24e2 * t4033 * t4615 + 0.48e2 * t4211 * t4463 + 0.72e2 * t4373;
	t4571 = pkin(1) * t4703;
	t4518 = 0.48e2 * t4571;
	t4431 = t4251 * t4518;
	t4817 = t4254 * t4304;
	t4631 = t4218 * t4817;
	t4455 = pkin(3) * qJD(3) * t4631;
	t4461 = qJD(2) * t4544;
	t4462 = qJD(2) * t4545;
	t4471 = t4681 * t4205;
	t4496 = t3957 * t4605;
	t4521 = 0.2e1 * t4782;
	t4705 = t4212 * t4206;
	t4535 = t4291 * t4705;
	t4595 = -0.4e1 * t4069 * t4741 + t4462 * t4986 + 0.8e1 * t4381;
	t4616 = qJD(3) * t4808;
	t4669 = 0.12e2 * t4800;
	t4979 = -0.12e2 * pkin(1);
	t3881 = (-0.48e2 * t4034 * t4552 - 0.32e2 * t4211 * t4624 * t4906 - t3991 * t4699 + (-t4113 * t4254 - t4123 * t4949) * t4737 * t4557 + t3944 * t4451 + t4088 * t4471 - 0.8e1 * t3956 * t4539 - 0.12e2 * t3978 * t4617 + 0.6e1 * t3972 * t4741 + 0.96e2 * t4051 * t4463 + 0.12e2 * t3976 * t4615 + t4052 * t4502 * t4979 + t4174 * t5009 + t4616 * t5013 + t4455 * t5020 + t4570 * t5021 + t4568 * t5023 + ((t4012 * t4724 + t4030 * t4890 + t4193 * t4515) * t4679 + (t4038 * t4723 + (t4018 * t4982 + 0.24e2 * t4461) * pkin(1)) * t5015) * t4251 + t5031 * t3979 + t5027 * t3949 + t5029 * t3947) * t4300 + t3907 * t4606 + t3902 * t4601 + t3918 * t4496 + t3930 * t4608 - t3910 * t4698 - t3899 * t4891 + t4121 * t3906 + t4140 * (-0.96e2 * t4643 * t4906 - 0.96e2 * t4029 * t4552 + 0.12e2 * t4150 * t4656 + (-0.28e2 * t3996 * t4615 + t4329 * t4878 + ((t3999 * t4983 + t4062 * t4670) * t4251 + t4338 * t4878) * pkin(1)) * t4677 + t3938 * t4452 + 0.32e2 * t3948 * t4539 + t4570 * t5022 - 0.8e1 * t3970 * t4741 + t4477 * t4977 + t4854 * t4978 + 0.288e3 * t4167 * t4373 + 0.192e3 * t4041 * t4463 + 0.96e2 * t4040 * t4381 + 0.32e2 * t3968 * t4455 - 0.48e2 * t3988 * t4615 + t4568 * t5024 + (t4068 * t4727 + t4353 * t4878 + t4595) * t4530 + (t4254 * t4443 + (t4013 * t4751 - 0.24e2 * t4167 * t4462) * pkin(1) + t4425) * t4580 + 0.48e2 * (t4617 - t4616) * t3973 + t5033 * t3960 + t5028 * t3943) + ((0.24e2 * t4454 + t4105 * t4471 + (t4713 * t4981 + t4141 * t4521 + (t4574 + t4669 - 0.2e1 * t4893) * t4251) * t4557 + ((0.12e2 * t4216 * t4619 + t4894) * t4251 - t4293 * t4053 * t4519 + (0.24e2 * t4542 + (t4025 * t4982 + t4137 * t4726 - 0.48e2 * t4212 * t4702) * t4254) * pkin(1)) * t5015 - 0.36e2 * t4054 * t4635 + (0.8e1 / 0.3e1 * t4212 - 0.8e1 / 0.3e1 * t4216) * t4293 * t5009 + 0.288e3 * t4535 * t4845 + (t4214 * t4464 + 0.8e1 * t4019 * t4809 + t4047 * t4688 + (0.12e2 * t4125 * t4823 - 0.32e2 * t4535 + t4734) * t4216 + (0.40e2 * t4624 + (-pkin(3) * t4039 + t4195 * t4828 - 0.6e1 * t4251 * t4840) * t4736) * pkin(1)) * t4679 - 0.96e2 * t4459 - 0.48e2 * t4537) * t4300 + t4140 * (0.256e3 * t4364 + t4435 + (0.4e1 * t4409 + 0.28e2 * t3983 * t4809 - 0.32e2 * t4618 + (0.64e2 * t4154 * t4541 + 0.96e2 * t4202 * t4840 + t4686) * t4216 + ((-0.48e2 * t4092 * t4308 + 0.128e3 / 0.3e1 * t4179 * t4291) * t4215 + (0.96e2 * t4092 * t4801 + 0.32e2 * t4155 * t4543 + t4757) * t4254) * pkin(1)) * t4677 + (-0.48e2 * t4712 - t4851 - 0.2e1 * t4846 - 0.32e2 * t4811 + (0.96e2 * pkin(1) * t4816 + 0.96e2 * t4216 * t4291 + 0.2e1 * t4199) * t4212) * t4680 + (t4076 * t4521 + (t4576 + t4669) * t4179 + (t4683 + (t4755 + 0.48e2 * t4801) * t4254) * pkin(1)) * t4530 + ((-t3993 * t4904 + t4040 * t4179) * t4883 + (0.24e2 * t4036 * t4782 + t4167 * t4431) * t4293) * t4580)) * qJD(3) + ((t4105 * t4405 + t5000) * t4300 + t4140 * (t4005 * t4528 + t4988)) * qJD(2);
	t4640 = t4140 * t4833;
	t4690 = pkin(1) * t4808;
	t4711 = pkin(1) * t4830;
	t4905 = pkin(1) * t4185;
	t4953 = -0.24e2 * t4216;
	t4967 = -0.6e1 * t4140;
	t4972 = 0.6e1 * t3975;
	t3885 = t3939 * t4496 + t4121 * t3924 + t4140 * (t4174 * t4558 + t4595 * t4678 + t4425) + (t3929 * t4930 + t3920 * t4922 + t3939 * t3930 / 0.2e1) * t3952 + (t4140 * (t4384 * t4728 + t4690 * t4968 - t4037 * t4205 - (t4139 * t4747 - 0.8e1 * t4690) * t4707) * t4255 * t4887 + ((t4001 * t4722 + t4636 * t4951) * t4300 - 0.24e2 * t4140 * t3958 * t4815 + ((-0.24e2 * pkin(3) * t4219 * t4817 - 0.4e1 * pkin(2) * t3994) * t4300 + t4140 * (pkin(2) * t4972 + 0.24e2 * t4115 * t4832)) * t4185) * t4252) * qJD(2) + (-0.24e2 * t4461 * t4901 + ((t4185 * t4660 * t5010 + 0.8e1 * t4114 * t4833 - 0.2e1 * t4057) * t4300 - 0.144e3 * t4063 * t4293 * t4640) * t4254 + (0.4e1 * t4055 * t4901 - t3909 + t4140 * (qJD(2) * t4450 + t3997 * t4987 + t4090 * t4730) + ((t3965 * t4967 + t4300 * t4970) * t4879 + ((0.8e1 * pkin(1) * t4660 - 0.8e1 * t4122 * t4905 + t4974) * t4300 + t4140 * (0.24e2 * t4070 * t4905 + t4975)) * t4255) * pkin(2)) * pkin(3)) * t4251 + (((t4212 * t4518 + t4215 * t4664 - 0.12e2 * t4216 * t4625 + t4630 * t4953) * t4300 + 0.12e2 * (0.24e2 * pkin(1) * t4841 + 0.8e1 * t4179 * t4216 + t4215 * t4979) * t4640) * t4308 + ((-0.24e2 * t4251 * t4631 + 0.4e1 * (pkin(2) * t4837 - t4705 + t4711) * t4579 - 0.8e1 * t4194 * t4711) * t4300 + t4140 * (-0.96e2 * t4626 * t4849 * t4902 + t4558 * t4519 + t4139 * t4431 + 0.12e2 * t4782 * t4678 * t4065 + (0.24e2 * t4212 + t4953) * t4031)) * t4293 + (((-0.2e1 * t4571 - t4843) * t4729 + 0.4e1 * t4692 + (t4558 - t4119) * t4251) * t4300 - t4254 * t3925 + t4140 * (0.8e1 * t4115 * t4633 + t4254 * t4559 + t4645 * t4887 + (t4859 * t4986 + 0.2e1 * t4547) * t4678 + t3989 * t4762) + (0.4e1 * (-t3990 * t4254 - t3994 * t4251 - t4185 * t4399) * t4300 + (t4254 * t4973 + t4251 * t4972 + 0.24e2 * (t4077 * t4904 - t4139 * t4179) * t4185) * t4140) * t4898) * pkin(3) + ((t4142 * t4729 + t4071) * t4300 + t4191 * t4707 * t4967) * t4521) * qJD(3);
	t3900 = -t4863 + t3957 * t4495 + t3969 * t4254 - qJD(3) * t4865 + (qJD(2) * t4525 - qJD(3) * t4856) * t4206 + t4020 * t4193 + (-t4085 * t3935 / 0.2e1 + t3957 * t4917 + t3930 * t4911) * t3952 + (t4091 * t4966 - 0.4e1 * t4506 + (t4782 * qJD(3) * t4184 - pkin(2) * t4512) * t4252 * t4886) * pkin(3);
	t3901 = t3942 + t3957 * t4494 + t4043 * t4850 + (t3930 * t4910 + t3957 * t4916 + t4084 * t4930) * t3952 + (t4639 + (-pkin(2) * t4159 + 0.2e1 * t4710) * t4831) * qJD(3) + (t4059 * t4179 + (t4159 * t4898 + t4520 * t4902) * t4254) * qJD(2) + (t4347 + t4642 + (-t4109 * t4782 - 0.2e1 * t4460) * qJD(3)) * t5025;
	t4912 = -t4073 / 0.4e1;
	t4357 = t3915 * (t3896 * t4912 + t3903 * t4920);
	t4358 = t3915 * (t3892 * t4944 + t3903 * t4945);
	t4913 = t4073 / 0.4e1;
	t4361 = t3914 * (t3891 * t4913 + t3892 * t4921);
	t4389 = t3912 * t4913 + t3923 * t4921;
	t4390 = t3911 * t4912 + t3922 * t4920;
	t4429 = t3957 * t4517;
	t3995 = 0.2e1 * t4003 * pkin(3);
	t4918 = t3995 / 0.4e1;
	t4923 = -t3957 / 0.8e1;
	t4992 = -t3995 * t4907 - (t3985 * t4923 - t4073 * t4931) * t3952;
	t4796 = (-t4073 * t4335 + (t4389 * t4300 + t3936 * t4361 - t4992 * t3933 + (t3936 * t4357 + (t3936 * t4918 - t4390) * t3914) * t3904) * t4027 + (-t3933 * t4429 + t3901 * t4907 + t3936 * t4358 + (t3930 * t4932 + t3923 * t4929 + t3912 * t3957 / 0.8e1) * t3952 + (t3881 * t4926 + t3891 * t4936 + t3892 * t4942) * t3914 + (t3900 * t4939 + t3903 * t4498 + (t3885 * t4928 + t3903 * t4943 + t3922 * t4944) * t3915) * t3904) * t4026) * t4812 + t3877;
	t4797 = (-t4073 * t4334 + (t4390 * t4300 + t3933 * t4361 + t4992 * t3936 + (t3933 * t4357 + (t3933 * t4918 + t4389) * t3914) * t3904) * t4027 + (t3936 * t4429 + t3900 * t4908 + t3933 * t4358 + (t3911 * t4923 + t3922 * t4931 + t3930 * t4927) * t3952 + (t3881 * t4933 + t3891 * t4935 + t3892 * t4940) * t3914 + (t3901 * t4939 + t3903 * t4499 + (t3885 * t4934 + t3903 * t4941 + t3923 * t4944) * t3915) * t3904) * t4026) * t4812 - t3878;
	t3863 = t4021 * t4790 + t4022 * t4791 + t4118 * t4797 + t4418 * t4796;
	t3864 = -t4021 * t4791 + t4022 * t4790 + t4118 * t4796 - t4418 * t4797;
	t3873 = t4118 * t4791 + t4418 * t4790;
	t3874 = t4118 * t4790 - t4418 * t4791;
	t4421 = t3873 * t4252 + t3874 * t4255;
	t4993 = qJD(2) * t4421 - t3863 * t4255 + t3864 * t4252;
	t4990 = t4252 * t4792 - t4255 * t4793;
	t4253 = sin(qJ(1));
	t4882 = qJD(1) * t4253;
	t4256 = cos(qJ(1));
	t4881 = qJD(1) * t4256;
	t4873 = t3871 * t4252;
	t4872 = t3889 * t4255;
	t4871 = t3890 * t4252;
	t4649 = t4253 * t4871;
	t4422 = t3873 * t4255 - t3874 * t4252;
	t4420 = -t4871 + t4872;
	t4375 = qJD(1) * t4419;
	t4326 = qJD(2) * t4422 + t3863 * t4252 + t3864 * t4255;
	t4324 = -qJD(2) * t4990 + t4252 * t4799 + t4255 * t4798;
	t3888 = qJD(1) * t4649;
	t3887 = qJD(2) * t4649;
	t1 = [t3887 - t4256 * t4375 + (-t4873 + (-qJD(2) * t3889 - t3872) * t4255) * t4253, t3888 + (-t3875 * t4252 - t4563) * t4882 + t4324 * t4256, t4256 * t4326 - t4421 * t4882, 0, 0, 0; -t4253 * t4375 + (qJD(2) * t4420 + t3872 * t4255 + t4873) * t4256, t4253 * t4324 + t4351 * t4881, t4253 * t4326 + t4421 * t4881, 0, 0, 0; 0, -t5035, t4993, 0, 0, 0; t4994 * t4253 - t4420 * t4881, t5035 * t4256 + t4990 * t4882, -t4256 * t4993 - t4422 * t4882, 0, 0, 0; -t4994 * t4256 - t4872 * t4882 + t3888, t3887 - t4990 * t4881 + ((-qJD(2) * t3875 - t4798) * t4252 + (-qJD(2) * t4792 + t4799) * t4255) * t4253, -t4253 * t4993 + t4422 * t4881, 0, 0, 0; 0, t4324, t4326, 0, 0, 0; -t4882, 0, 0, 0, 0, 0; t4881, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0;];
	JRD_rot = t1;
elseif link_index == 4
	%% Symbolic Calculation
	% From jacobiRD_rot_4_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-11 19:22:50
	% EndTime: 2020-04-11 19:22:50
	% DurationCPUTime: 0.03s
	% Computational Cost: add. (11->9), mult. (36->13), div. (0->0), fcn. (36->4), ass. (0->14)
	t32 = sin(qJ(1));
	t39 = qJD(1) * t32;
	t34 = cos(qJ(1));
	t38 = qJD(1) * t34;
	t31 = sin(qJ(3));
	t37 = qJD(3) * t31;
	t33 = cos(qJ(3));
	t36 = qJD(3) * t33;
	t35 = qJD(3) * t34;
	t30 = t32 * t37 - t33 * t38;
	t29 = t31 * t38 + t32 * t36;
	t28 = t31 * t35 + t33 * t39;
	t27 = t31 * t39 - t33 * t35;
	t1 = [t30, 0, t27, 0, 0, 0; -t28, 0, -t29, 0, 0, 0; 0, 0, -t37, 0, 0, 0; t29, 0, t28, 0, 0, 0; t27, 0, t30, 0, 0, 0; 0, 0, -t36, 0, 0, 0; -t39, 0, 0, 0, 0, 0; t38, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0;];
	JRD_rot = t1;
elseif link_index == 5
	%% Symbolic Calculation
	% From jacobiRD_rot_5_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-11 19:23:16
	% EndTime: 2020-04-11 19:23:27
	% DurationCPUTime: 6.26s
	% Computational Cost: add. (38667->330), mult. (95902->615), div. (552->5), fcn. (25156->8), ass. (0->272)
	t1019 = sin(qJ(3));
	t1022 = cos(qJ(3));
	t1020 = sin(qJ(2));
	t1171 = t1019 * t1020;
	t1007 = pkin(2) * t1171;
	t1001 = t1007 - pkin(3);
	t1023 = cos(qJ(2));
	t1018 = t1023 ^ 2;
	t1028 = pkin(4) ^ 2;
	t1030 = pkin(3) ^ 2;
	t1031 = pkin(2) ^ 2;
	t1032 = pkin(1) ^ 2;
	t1158 = -pkin(5) ^ 2 + t1032;
	t1017 = t1022 ^ 2;
	t1222 = -0.2e1 * t1017;
	t1198 = pkin(1) * t1023;
	t1157 = -0.2e1 * t1198;
	t1012 = pkin(2) * t1157;
	t1160 = t1012 + t1032;
	t1172 = t1018 * t1031;
	t995 = -t1031 + t1160 + 0.2e1 * t1172;
	t1095 = t995 * t1222 - t1158;
	t1114 = pkin(3) * t1007;
	t1117 = t1031 + t1158;
	t999 = 0.3e1 * t1030 + t1028 + t1117;
	t979 = t1012 + t999 - 0.4e1 * t1114;
	t1195 = pkin(2) * t1023;
	t1010 = pkin(1) - t1195;
	t998 = t1010 * t1022;
	t1131 = t979 * t998;
	t1100 = t1030 + t1117;
	t1000 = -t1028 + t1100;
	t1150 = t1000 * t1198;
	t1217 = -pkin(4) + pkin(5);
	t1218 = -pkin(4) - pkin(5);
	t1013 = (t1030 - t1032) * t1031;
	t1224 = 0.4e1 * t1013;
	t1241 = 0.4e1 * pkin(3);
	t1002 = -0.2e1 * t1114;
	t992 = t1012 + t1000;
	t978 = t1002 + t992;
	t959 = t1018 * t1224 + 0.4e1 * pkin(2) * t1150 - (t1032 + (pkin(2) - t1218) * (pkin(2) + t1218)) * (t1032 + (pkin(2) - t1217) * (pkin(2) + t1217)) + (t992 * t1007 - t978 * t998) * t1241 + (0.2e1 * t1028 - 0.6e1 * t1031 + 0.2e1 * t1095 - t1030) * t1030;
	t1033 = sqrt(t959);
	t1167 = t1020 * t1022;
	t1145 = pkin(2) * t1167;
	t1175 = t1010 * t1019;
	t987 = t1145 + t1175;
	t1183 = t987 * t1033;
	t951 = -t1131 + t1183 + (t1001 * t1157 + t999 * t1171) * pkin(2) + (-t1028 - t1030 + (0.2e1 * t1018 - 0.3e1) * t1031 + t1095) * pkin(3);
	t1214 = t951 / 0.2e1;
	t1164 = t1022 * t1030;
	t1173 = t1017 * t1030;
	t1194 = pkin(3) * t1022;
	t1196 = pkin(2) * t1020;
	t1225 = 0.2e1 * t1010;
	t960 = (pkin(3) * t1010 * t978 + 0.2e1 * t995 * t1164) * t1019 + (t1173 * t1225 + t992 * t1194) * t1196;
	t1227 = 0.2e1 * t960;
	t957 = 0.1e1 / t1033;
	t1156 = t957 * t1227;
	t1015 = t1019 ^ 2;
	t1223 = -0.2e1 * t1015;
	t1153 = t995 * t1194;
	t991 = t1012 + t1028 + t1100;
	t967 = t1010 * t991 + 0.2e1 * t1153;
	t1142 = pkin(3) * t998;
	t971 = (-t991 - 0.8e1 * t1142) * t1019;
	t986 = -t1007 + t998;
	t984 = pkin(3) + t986;
	t935 = pkin(3) * t995 * t1223 + t967 * t1022 + t984 * t1156 + t971 * t1196 - t1183;
	t1134 = t1214 + t935 / 0.2e1;
	t1151 = (0.4e1 * t1017 - 0.2e1) * pkin(3);
	t970 = t1010 * t1151 + t1022 * t991;
	t953 = t967 * t1019 + t1033 * t984 + t970 * t1196;
	t1212 = -t953 / 0.2e1;
	t1162 = t1023 * t1031;
	t1148 = pkin(1) * t1162;
	t1176 = t1010 * t1017;
	t936 = t986 * t1033 + t987 * t1156 + (t1010 * t979 + 0.4e1 * t1153) * t1019 + (-0.2e1 * t1022 * t1148 + (t1022 * t999 + t1176 * t1241) * pkin(2)) * t1020;
	t1135 = t936 / 0.2e1 + t1212;
	t1049 = t1134 * t1019 - t1135 * t1022;
	t1147 = qJD(2) * t1196;
	t1008 = pkin(1) * t1147;
	t1169 = t1019 * t1023;
	t1088 = t1167 - t1169;
	t1121 = qJD(3) * t1175;
	t1122 = qJD(3) * t1167;
	t964 = t1008 + (-t1121 + (t1088 * qJD(2) - t1122) * pkin(2)) * pkin(3);
	t975 = t1002 + t1030 + t1031 + 0.2e1 * t1142 + t1160;
	t973 = 0.1e1 / t975 ^ 2;
	t1192 = t964 * t973;
	t972 = 0.1e1 / t975;
	t1140 = 0.4e1 * t972 * t1192;
	t1185 = t1022 * t953;
	t1189 = t1019 * t951;
	t1245 = t1185 + t1189;
	t1237 = t1245 * t1140;
	t983 = t987 * pkin(3);
	t1050 = t983 * t1237;
	t1170 = t1019 * t1022;
	t1123 = qJD(3) * t1170;
	t1103 = t995 * t1123;
	t1109 = t1022 * t1007;
	t1125 = qJD(2) * t1171;
	t1110 = pkin(2) * t1125;
	t1054 = -0.4e1 * t978 * t1167 + 0.4e1 * t992 * t1169;
	t1068 = (-0.4e1 * pkin(1) * pkin(2) * t1000 - 0.8e1 * t1013 * t1023) * t1020;
	t1016 = t1020 ^ 2;
	t1174 = t1016 * t1031;
	t1149 = pkin(1) * t1174;
	t1108 = qJD(2) * t1149;
	t1099 = 0.8e1 * t1108;
	t1155 = 0.4e1 * qJD(3) * t978;
	t1005 = 0.2e1 * t1008;
	t1118 = t1020 * t1162;
	t1111 = -0.4e1 * t1118;
	t1094 = qJD(2) * t1111;
	t988 = t1005 + t1094;
	t1191 = t1017 * t988;
	t1220 = -0.8e1 * t1022;
	t1219 = pkin(2) * pkin(3);
	t1246 = qJD(2) * t1169 + t1122;
	t1052 = t1246 * t1219;
	t976 = t1008 - t1052;
	t952 = (0.8e1 * t1103 - 0.4e1 * t1191) * t1030 + qJD(2) * t1068 + (t1019 * t1099 + (t1019 * t1155 + t976 * t1220) * t1010 + (qJD(2) * t1054 + 0.4e1 * t992 * t1122) * pkin(2)) * pkin(3);
	t1193 = t952 * t957 / t959;
	t1141 = t960 * t1193;
	t1179 = qJD(2) * t1023;
	t1146 = pkin(2) * t1179;
	t1177 = qJD(3) * t1022;
	t1178 = qJD(3) * t1019;
	t1165 = t1022 * t1023;
	t1087 = t1165 + t1171;
	t1119 = qJD(3) * t1171;
	t1120 = qJD(3) * t998;
	t969 = t1120 + (t1087 * qJD(2) - t1119) * pkin(2);
	t1184 = t969 * t1033;
	t1207 = t984 / 0.2e1;
	t1053 = 0.4e1 * t992 * t1165 + 0.4e1 * t978 * t1171;
	t1221 = 0.8e1 * t1019;
	t1229 = qJD(2) * t1017 * (t1010 * t1195 + t1174) + t988 * t1170 + (-0.2e1 * t1010 * t1109 + t995 * (-t1015 + t1017)) * qJD(3);
	t1240 = -0.4e1 * t992;
	t950 = 0.8e1 * t1229 * t1030 + (t1022 * t1099 + (t1022 * t1155 + t976 * t1221) * t1010 + (qJD(2) * t1053 + t1119 * t1240) * pkin(2)) * pkin(3);
	t1116 = pkin(1) * t1225 + t991;
	t1086 = t1116 * t1196;
	t1242 = 0.2e1 * pkin(3);
	t961 = (t1022 * t988 - t995 * t1178) * t1242 + qJD(2) * t1086;
	t985 = t1246 * pkin(2);
	t968 = qJD(2) * t1145 - t1121 - t985;
	t925 = -t1184 - t984 * t1141 + t961 * t1022 - t967 * t1178 + (-0.2e1 * pkin(1) * t1110 - t991 * t1177) * t1196 + t971 * t1146 + (-t987 * t952 / 0.2e1 + t968 * t1227 + t950 * t1207) * t957 + (t988 * t1223 - 0.4e1 * t1103 + 0.8e1 * (-qJD(2) * t1109 + (t1010 * t1015 - t1176) * qJD(3)) * t1196) * pkin(3);
	t1228 = 0.2e1 * pkin(1);
	t1093 = t1001 * t1228 - t1022 * t979;
	t1048 = t1093 * t1020 + t999 * t1169;
	t977 = t1005 - 0.4e1 * t1052;
	t1070 = -t977 * t1022 + t979 * t1178;
	t1206 = t987 / 0.2e1;
	t1138 = t957 * t1206;
	t932 = t1184 + t952 * t1138 + t1070 * t1010 + (t1094 + 0.4e1 * t1103 - 0.2e1 * t1191) * pkin(3) + (t1048 * qJD(2) + t999 * t1122 + t985 * t1157) * pkin(2);
	t1136 = -t932 / 0.2e1 - t925 / 0.2e1;
	t1139 = t957 * t1207;
	t954 = t968 * t1033;
	t1199 = pkin(1) * t1022;
	t962 = qJD(3) * t971 + (t1151 + 0.2e1 * t1199) * t1147;
	t931 = t954 + t952 * t1139 + t961 * t1019 + t967 * t1177 + (t1020 * t962 + t970 * t1179) * pkin(2);
	t1216 = -t931 / 0.2e1;
	t1159 = t1016 - t1018;
	t1104 = 0.2e1 * t1159;
	t1197 = pkin(1) * t1031;
	t1213 = t952 / 0.2e1;
	t926 = t954 - t987 * t1141 + t977 * t1175 + (t950 * t1206 + t986 * t1213 + t969 * t1227) * t957 + (t1131 + (-pkin(2) * t999 + 0.2e1 * t1148) * t1171) * qJD(3) + (t979 * t1007 + (t1104 * t1197 + t999 * t1195) * t1022) * qJD(2) + t1229 * t1241;
	t1137 = t926 / 0.2e1 + t1216;
	t1226 = 0.2e1 * t973;
	t1210 = -t964 / 0.2e1;
	t1124 = qJD(2) * t1165;
	t997 = pkin(3) * t1110;
	t966 = -t997 + (-t1120 + (t1119 - t1124) * pkin(2)) * pkin(3);
	t1082 = t935 * t1210 + t966 * t1212;
	t1205 = qJD(3) / 0.2e1;
	t1209 = t964 / 0.2e1;
	t1098 = -t983 * t1205 + t1209;
	t1235 = t1098 * t951 + t983 * t1216 - t1082;
	t1083 = t936 * t1209 + t966 * t1214;
	t1215 = t932 / 0.2e1;
	t1236 = t1098 * t953 + t983 * t1215 - t1083;
	t1252 = (t1236 * t1019 - t1235 * t1022) * t1226 + (-qJD(3) * t1049 + t1137 * t1019 - t1136 * t1022) * t972 - t1050;
	t1096 = qJD(3) * t1212 + t1215;
	t1009 = pkin(1) * t1146;
	t1182 = t1009 + t997;
	t1208 = -(-t1087 * qJD(3) + t1124) * t1219 / 0.2e1 - t1182 / 0.2e1;
	t1200 = pkin(1) * t1019;
	t1115 = 0.8e1 * t1149;
	t1152 = -0.4e1 * t1173;
	t1014 = pkin(1) * t1196;
	t1113 = t1169 * t1219;
	t993 = t1014 - t1113;
	t1154 = t993 * t1220;
	t1011 = 0.2e1 * t1014;
	t996 = t1011 + t1111;
	t955 = t996 * t1152 + t1068 + (pkin(2) * t1054 + t1010 * t1154 + t1019 * t1115) * pkin(3);
	t1144 = pkin(2) * t1165;
	t990 = t1007 + t1144;
	t994 = t1011 - 0.4e1 * t1113;
	t934 = t990 * t1033 + t955 * t1138 - t994 * t998 - 0.2e1 * t1172 * t1200 + (t996 * t1222 + t1111) * pkin(3) + t1048 * pkin(2);
	t989 = t1088 * pkin(2);
	t981 = pkin(3) * t989 + t1014;
	t1046 = t1096 * t981 - t951 * t1208 - t934 * t1210;
	t1097 = t951 * t1205 + t931 / 0.2e1;
	t963 = 0.2e1 * t996 * t1194 + t1086;
	t980 = (t1017 * t1242 - pkin(3) + t1199) * t1196;
	t933 = t989 * t1033 + t955 * t1139 + t963 * t1019 + (0.2e1 * t1020 * t980 + t1023 * t970) * pkin(2);
	t1233 = t1097 * t981 - t953 * t1208 - t933 * t1210;
	t1250 = t1046 * t1019 + t1233 * t1022;
	t1024 = cos(qJ(1));
	t1029 = 0.1e1 / pkin(4);
	t1161 = t1024 * t1029;
	t1129 = t972 * t1161;
	t1101 = t1129 / 0.2e1;
	t1089 = t1022 * t1101;
	t1188 = t1019 * t953;
	t1127 = -t1188 / 0.2e1;
	t1248 = t951 * t1089 + t1127 * t1129;
	t1021 = sin(qJ(1));
	t1166 = t1021 * t1029;
	t1130 = t972 * t1166;
	t1102 = -t1130 / 0.2e1;
	t1090 = t1019 * t1102;
	t1247 = t951 * t1090 + t1102 * t1185;
	t1186 = t1022 * t951;
	t1244 = -t1186 + t1188;
	t1202 = -t1022 / 0.2e1;
	t1203 = t1019 / 0.2e1;
	t1073 = t934 * t1202 + t933 * t1203;
	t1204 = -t1019 / 0.2e1;
	t1006 = 0.2e1 * t1009;
	t1069 = 0.4e1 * t1159 * t1031 * qJD(2);
	t1107 = -t955 * t1193 / 0.4e1;
	t1168 = t1019 * t1033;
	t1211 = t955 / 0.2e1;
	t1143 = pkin(3) * t1178;
	t982 = t1006 + t1069;
	t937 = t982 * t1152 + (t996 * t1164 * t1221 + (pkin(2) * t1053 + t1022 * t1115) * pkin(3)) * qJD(3) - 0.8e1 * pkin(3) * t976 * t1145 + 0.4e1 * (-(-pkin(3) * qJD(3) * t1144 + t1182) * t1194 + t993 * t1143) * t1225 + (0.24e2 * pkin(3) * t1118 * t1200 + t1104 * t1224 + (-0.4e1 * t1150 + (-0.4e1 * t978 * t1165 + (t1019 * t1240 + t1154) * t1020) * pkin(3)) * pkin(2)) * qJD(2);
	t923 = t985 * t1033 + t987 * t1107 + (-(t1006 + 0.4e1 * t997) * t1022 + t994 * t1178) * t1010 + (-0.2e1 * t1018 * t1177 + 0.4e1 * t1023 * t1125) * t1197 + (t937 * t1206 + t969 * t1211 + t990 * t1213) * t957 + (0.4e1 * t996 * t1123 + t982 * t1222 + t1069) * pkin(3) + ((t1093 * qJD(2) + (-t1168 + (t999 + 0.4e1 * t1142) * t1022) * qJD(3)) * t1023 + (t985 * t1228 + (-t1019 * t999 + (-t1033 - t994) * t1022) * qJD(2) + t1070) * t1020) * pkin(2);
	t1163 = t1022 * t1033;
	t924 = t984 * t1107 + 0.2e1 * (-t996 * t1143 + t982 * t1194 + 0.2e1 * t1108) * t1019 + t963 * t1177 + (t937 * t1207 + t968 * t1211 + t989 * t1213) * t957 + (t962 * t1023 + (-t1023 * t1163 + (-t1033 + 0.2e1 * (-pkin(1) - 0.4e1 * t1194) * t1196) * t1171) * qJD(3) + ((-t970 + t1168) * t1020 + (t1116 * t1019 + t1163 + 0.4e1 * t980) * t1023) * qJD(2)) * pkin(2);
	t1041 = -(t1073 * qJD(3) + t924 * t1202 + t923 * t1204) * t972 + t981 * t1237;
	t1234 = t1096 * t983 - t1083;
	t1231 = t1135 * t1019 + t1134 * t1022;
	t1201 = t1022 / 0.2e1;
	t1190 = t1019 * t932;
	t1187 = t1022 * t932;
	t1181 = qJD(1) * t1021;
	t1180 = qJD(1) * t1024;
	t1133 = t972 * t1181;
	t1132 = t972 * t1180;
	t1076 = t936 * t1201 + t935 * t1204;
	t1075 = t935 * t1201 + t936 * t1203;
	t1074 = t933 * t1201 + t934 * t1203;
	t1072 = t1186 / 0.2e1 + t1127;
	t1071 = -t1185 / 0.2e1 - t1189 / 0.2e1;
	t1067 = t931 * t1090 + t1130 * t1187 / 0.2e1 + t1244 * t1166 * t1192 + t1247 * qJD(3) + t1248 * qJD(1);
	t1066 = -t1245 * t1161 * t1192 + t1247 * qJD(1) + t1248 * qJD(3) + t931 * t1089 + t1101 * t1190;
	t1065 = qJD(1) * t1072;
	t1064 = -0.2e1 * t973 * t1071;
	t1063 = t1072 * t1226;
	t1062 = t1244 * t1140;
	t1058 = t1072 * t1181;
	t1057 = t1071 * t1180;
	t1051 = t983 * t1062;
	t1045 = t1097 * t983 + t1082;
	t1042 = t981 * t1062 + (t1074 * qJD(3) + t923 * t1202 + t924 * t1203) * t972;
	t1039 = -t1019 * t1233 + t1046 * t1022;
	t1038 = -t1051 + (qJD(3) * t1231 - t1136 * t1019 - t1137 * t1022) * t972 + (-t1019 * t1235 - t1022 * t1236) * t1226;
	t1 = [t1067, (-t1073 * t1133 + t1042 * t1024 + (t1039 * t1024 - t981 * t1058) * t1226) * t1029, (t1076 * t1133 + (-t1051 + (t1075 * qJD(3) + t926 * t1202 + t925 * t1203) * t972) * t1024 + (t983 * t1058 + (t1045 * t1019 - t1234 * t1022) * t1024) * t1226) * t1029 + t1066, 0, 0, 0; (t972 * t1021 * t1065 + (t964 * t1063 + (-t1187 / 0.2e1 + t931 * t1203 - t1071 * qJD(3)) * t972) * t1024) * t1029, (t1073 * t1132 + t1042 * t1021 + (t981 * t1024 * t1065 + t1039 * t1021) * t1226) * t1029, ((t1049 * t972 - t1063 * t983) * t1180 + t1038 * t1021) * t1029, 0, 0, 0; 0, (t1250 * t1226 - t1041) * t1029, -t1252 * t1029, 0, 0, 0; (t972 * t1057 + (t964 * t1064 + (t931 * t1202 - t1190 / 0.2e1 - t1072 * qJD(3)) * t972) * t1021) * t1029, (-t1074 * t1133 + t1041 * t1024 + (-t1071 * t981 * t1181 - t1024 * t1250) * t1226) * t1029, ((-t983 * t1064 - t1231 * t972) * t1181 + t1252 * t1024) * t1029, 0, 0, 0; t1066, (t1074 * t1132 + t1041 * t1021 + (-t1021 * t1250 + t1057 * t981) * t1226) * t1029, (t1075 * t1132 + (-t1050 + (t1076 * qJD(3) + t925 * t1201 + t926 * t1203) * t972) * t1021 + (-t983 * t1057 + (t1234 * t1019 + t1045 * t1022) * t1021) * t1226) * t1029 + t1067, 0, 0, 0; 0, (t1039 * t1226 + t1042) * t1029, t1038 * t1029, 0, 0, 0; -t1181, 0, 0, 0, 0, 0; t1180, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0;];
	JRD_rot = t1;
elseif link_index == 6
	%% Symbolic Calculation
	% From jacobiRD_rot_6_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-11 19:23:29
	% EndTime: 2020-04-11 19:23:44
	% DurationCPUTime: 11.37s
	% Computational Cost: add. (101191->395), mult. (246286->734), div. (1600->5), fcn. (64510->10), ass. (0->318)
	t1203 = sin(qJ(3));
	t1204 = sin(qJ(2));
	t1360 = t1203 * t1204;
	t1190 = pkin(2) * t1360;
	t1303 = pkin(3) * t1190;
	t1185 = -0.2e1 * t1303;
	t1215 = pkin(3) ^ 2;
	t1216 = pkin(2) ^ 2;
	t1208 = cos(qJ(2));
	t1384 = pkin(2) * t1208;
	t1193 = pkin(1) - t1384;
	t1207 = cos(qJ(3));
	t1181 = t1193 * t1207;
	t1330 = pkin(3) * t1181;
	t1387 = pkin(1) * t1208;
	t1345 = -0.2e1 * t1387;
	t1195 = pkin(2) * t1345;
	t1217 = pkin(1) ^ 2;
	t1348 = t1195 + t1217;
	t1158 = t1185 + t1215 + t1216 + 0.2e1 * t1330 + t1348;
	t1155 = 0.1e1 / t1158;
	t1213 = pkin(4) ^ 2;
	t1346 = -pkin(5) ^ 2 + t1217;
	t1306 = t1216 + t1346;
	t1182 = 0.3e1 * t1215 + t1213 + t1306;
	t1162 = t1182 + t1195 - 0.4e1 * t1303;
	t1169 = -t1190 + t1181;
	t1356 = t1204 * t1207;
	t1334 = pkin(2) * t1356;
	t1366 = t1193 * t1203;
	t1170 = t1334 + t1366;
	t1289 = t1215 + t1306;
	t1183 = -t1213 + t1289;
	t1175 = t1195 + t1183;
	t1161 = t1185 + t1175;
	t1201 = t1208 ^ 2;
	t1363 = t1201 * t1216;
	t1178 = -t1216 + t1348 + 0.2e1 * t1363;
	t1200 = t1207 ^ 2;
	t1405 = -0.2e1 * t1200;
	t1284 = t1178 * t1405 - t1346;
	t1318 = t1175 * t1360;
	t1339 = t1183 * t1387;
	t1401 = pkin(5) - pkin(4);
	t1402 = -pkin(4) - pkin(5);
	t1196 = (t1215 - t1217) * t1216;
	t1407 = 0.4e1 * t1196;
	t1427 = 0.4e1 * pkin(3);
	t1142 = t1201 * t1407 + 0.4e1 * pkin(2) * t1339 - (t1217 + (pkin(2) - t1402) * (pkin(2) + t1402)) * (t1217 + (pkin(2) - t1401) * (pkin(2) + t1401)) + (pkin(2) * t1318 - t1161 * t1181) * t1427 + (0.2e1 * t1213 - 0.6e1 * t1216 + 0.2e1 * t1284 - t1215) * t1215;
	t1218 = sqrt(t1142);
	t1368 = t1178 * t1207;
	t1331 = pkin(3) * t1368;
	t1351 = t1208 * t1216;
	t1337 = pkin(1) * t1351;
	t1140 = 0.1e1 / t1218;
	t1364 = t1200 * t1215;
	t1383 = pkin(3) * t1207;
	t1385 = pkin(2) * t1204;
	t1408 = 0.2e1 * t1193;
	t1143 = (pkin(3) * t1161 * t1193 + 0.2e1 * t1215 * t1368) * t1203 + (t1175 * t1383 + t1364 * t1408) * t1385;
	t1410 = 0.2e1 * t1143;
	t1343 = t1140 * t1410;
	t1367 = t1193 * t1200;
	t1101 = t1169 * t1218 + t1170 * t1343 + (t1162 * t1193 + 0.4e1 * t1331) * t1203 + (-0.2e1 * t1207 * t1337 + (t1182 * t1207 + t1367 * t1427) * pkin(2)) * t1204;
	t1340 = (0.4e1 * t1200 - 0.2e1) * pkin(3);
	t1174 = t1195 + t1213 + t1289;
	t1369 = t1174 * t1207;
	t1153 = t1193 * t1340 + t1369;
	t1167 = pkin(3) + t1169;
	t1150 = t1174 * t1193 + 0.2e1 * t1331;
	t1376 = t1150 * t1203;
	t1136 = t1153 * t1385 + t1167 * t1218 + t1376;
	t1307 = t1136 / 0.2e1 - t1101 / 0.2e1;
	t1154 = (-t1174 - 0.8e1 * t1330) * t1203;
	t1371 = t1170 * t1218;
	t1375 = t1150 * t1207;
	t1198 = t1203 ^ 2;
	t1406 = -0.2e1 * t1198;
	t1100 = pkin(3) * t1178 * t1406 + t1154 * t1385 + t1167 * t1343 - t1371 + t1375;
	t1184 = t1190 - pkin(3);
	t1316 = t1162 * t1181;
	t1134 = -t1316 + t1371 + (t1182 * t1360 + t1184 * t1345) * pkin(2) + (-t1213 - t1215 + (0.2e1 * t1201 - 0.3e1) * t1216 + t1284) * pkin(3);
	t1400 = t1134 / 0.2e1;
	t1308 = t1100 / 0.2e1 + t1400;
	t1414 = t1307 * t1203 - t1308 * t1207;
	t1436 = t1155 * t1414;
	t1336 = qJD(2) * t1385;
	t1191 = pkin(1) * t1336;
	t1358 = t1203 * t1208;
	t1275 = t1356 - t1358;
	t1323 = qJD(3) * t1356;
	t1326 = qJD(3) * t1366;
	t1147 = t1191 + (-t1326 + (t1275 * qJD(2) - t1323) * pkin(2)) * pkin(3);
	t1353 = t1207 * t1208;
	t1274 = t1353 + t1360;
	t1328 = qJD(2) * t1353;
	t1299 = qJD(2) * t1190;
	t1180 = pkin(3) * t1299;
	t1335 = qJD(2) * t1384;
	t1192 = pkin(1) * t1335;
	t1349 = t1180 + t1192;
	t1403 = pkin(2) * pkin(3);
	t1148 = (-t1274 * qJD(3) + t1328) * t1403 + t1349;
	t1172 = t1275 * pkin(2);
	t1197 = pkin(1) * t1385;
	t1164 = pkin(3) * t1172 + t1197;
	t1329 = qJD(2) * t1358;
	t1431 = t1323 + t1329;
	t1248 = t1431 * t1403;
	t1159 = t1191 - t1248;
	t1247 = -0.4e1 * t1161 * t1356 + 0.4e1 * t1175 * t1358;
	t1261 = (-0.4e1 * pkin(1) * pkin(2) * t1183 - 0.8e1 * t1196 * t1208) * t1204;
	t1199 = t1204 ^ 2;
	t1365 = t1199 * t1216;
	t1338 = pkin(1) * t1365;
	t1305 = 0.8e1 * t1338;
	t1288 = t1203 * t1305;
	t1380 = qJD(3) * t1203;
	t1327 = t1178 * t1380;
	t1294 = t1207 * t1327;
	t1411 = 0.4e1 * qJD(3);
	t1344 = t1161 * t1411;
	t1188 = 0.2e1 * t1191;
	t1315 = t1204 * t1351;
	t1300 = -0.4e1 * t1315;
	t1286 = qJD(2) * t1300;
	t1171 = t1188 + t1286;
	t1370 = t1171 * t1200;
	t1404 = -0.8e1 * t1207;
	t1135 = (0.8e1 * t1294 - 0.4e1 * t1370) * t1215 + qJD(2) * t1261 + (qJD(2) * t1288 + (t1159 * t1404 + t1203 * t1344) * t1193 + (qJD(2) * t1247 + 0.4e1 * t1175 * t1323) * pkin(2)) * pkin(3);
	t1168 = t1431 * pkin(2);
	t1151 = qJD(2) * t1334 - t1168 - t1326;
	t1137 = t1151 * t1218;
	t1304 = pkin(1) * t1408 + t1174;
	t1273 = t1304 * t1385;
	t1428 = 0.2e1 * pkin(3);
	t1144 = (t1171 * t1207 - t1327) * t1428 + qJD(2) * t1273;
	t1388 = pkin(1) * t1207;
	t1145 = qJD(3) * t1154 + (t1340 + 0.2e1 * t1388) * t1336;
	t1395 = t1167 / 0.2e1;
	t1314 = t1140 * t1395;
	t1373 = t1153 * t1208;
	t1090 = t1137 + t1135 * t1314 + t1144 * t1203 + qJD(3) * t1375 + (qJD(2) * t1373 + t1145 * t1204) * pkin(2);
	t1412 = 0.2e1 * pkin(1);
	t1282 = -t1162 * t1207 + t1184 * t1412;
	t1238 = t1182 * t1358 + t1282 * t1204;
	t1160 = t1188 - 0.4e1 * t1248;
	t1262 = -t1160 * t1207 + t1162 * t1380;
	t1394 = t1170 / 0.2e1;
	t1313 = t1140 * t1394;
	t1324 = qJD(3) * t1360;
	t1325 = qJD(3) * t1181;
	t1152 = t1325 + (t1274 * qJD(2) - t1324) * pkin(2);
	t1374 = t1152 * t1218;
	t1091 = t1374 + t1135 * t1313 + t1262 * t1193 + (t1286 + 0.4e1 * t1294 - 0.2e1 * t1370) * pkin(3) + (qJD(2) * t1238 + t1168 * t1345 + t1182 * t1323) * pkin(2);
	t1355 = t1207 * t1134;
	t1361 = t1203 * t1136;
	t1264 = t1355 / 0.2e1 - t1361 / 0.2e1;
	t1391 = -t1207 / 0.2e1;
	t1393 = -t1203 / 0.2e1;
	t1233 = t1264 * qJD(3) - t1090 * t1391 - t1091 * t1393;
	t1354 = t1207 * t1136;
	t1362 = t1203 * t1134;
	t1263 = t1354 / 0.2e1 + t1362 / 0.2e1;
	t1194 = 0.2e1 * t1197;
	t1179 = t1194 + t1300;
	t1341 = -0.4e1 * t1364;
	t1302 = t1358 * t1403;
	t1176 = t1197 - t1302;
	t1342 = t1176 * t1404;
	t1138 = t1179 * t1341 + t1261 + (pkin(2) * t1247 + t1193 * t1342 + t1288) * pkin(3);
	t1146 = 0.2e1 * t1179 * t1383 + t1273;
	t1163 = (t1200 * t1428 - pkin(3) + t1388) * t1385;
	t1096 = t1172 * t1218 + t1138 * t1314 + t1146 * t1203 + (0.2e1 * t1163 * t1204 + t1373) * pkin(2);
	t1333 = pkin(2) * t1353;
	t1173 = t1190 + t1333;
	t1177 = t1194 - 0.4e1 * t1302;
	t1389 = pkin(1) * t1203;
	t1099 = t1173 * t1218 + t1138 * t1313 - t1177 * t1181 - 0.2e1 * t1363 * t1389 + (t1179 * t1405 + t1300) * pkin(3) + t1238 * pkin(2);
	t1390 = t1207 / 0.2e1;
	t1392 = t1203 / 0.2e1;
	t1266 = t1096 * t1390 + t1099 * t1392;
	t1435 = t1266 * t1147 + t1263 * t1148 + t1233 * t1164;
	t1434 = 0.8e1 * t1215;
	t1205 = sin(qJ(1));
	t1424 = t1205 * t1264;
	t1253 = qJD(1) * t1424;
	t1156 = 0.1e1 / t1158 ^ 2;
	t1377 = t1147 * t1156;
	t1320 = 0.4e1 * t1155 * t1377;
	t1430 = t1354 + t1362;
	t1421 = t1430 * t1320;
	t1242 = t1164 * t1421;
	t1166 = t1170 * pkin(3);
	t1433 = t1166 * t1421;
	t1432 = qJD(3) * t1134 + t1090;
	t1429 = t1355 - t1361;
	t1426 = t1090 / 0.2e1;
	t1209 = cos(qJ(1));
	t1381 = qJD(1) * t1209;
	t1423 = t1263 * t1381;
	t1422 = t1266 * t1155;
	t1420 = t1263 * qJD(3) + t1090 * t1392 + t1091 * t1391;
	t1189 = 0.2e1 * t1192;
	t1347 = t1199 - t1201;
	t1272 = 0.4e1 * t1347 * t1216 * qJD(2);
	t1165 = t1189 + t1272;
	t1246 = 0.4e1 * t1161 * t1360 + 0.4e1 * t1175 * t1353;
	t1287 = t1207 * t1305;
	t1297 = 0.2e1 * t1347;
	t1359 = t1203 * t1207;
	t1317 = t1179 * t1359;
	t1332 = pkin(3) * t1380;
	t1102 = t1165 * t1341 + (t1317 * t1434 + (pkin(2) * t1246 + t1287) * pkin(3)) * qJD(3) - 0.8e1 * pkin(3) * t1159 * t1334 + 0.4e1 * (-(-pkin(3) * qJD(3) * t1333 + t1349) * t1383 + t1176 * t1332) * t1408 + (0.24e2 * pkin(3) * t1315 * t1389 + t1297 * t1407 + (-0.4e1 * t1339 + (-0.4e1 * t1161 * t1353 + (-0.4e1 * t1175 * t1203 + t1342) * t1204) * pkin(3)) * pkin(2)) * qJD(2);
	t1378 = t1135 * t1140 / t1142;
	t1293 = -t1138 * t1378 / 0.4e1;
	t1357 = t1203 * t1218;
	t1379 = qJD(3) * t1207;
	t1386 = pkin(1) * t1216;
	t1398 = t1138 / 0.2e1;
	t1399 = t1135 / 0.2e1;
	t1066 = t1168 * t1218 + t1170 * t1293 + (-(0.4e1 * t1180 + t1189) * t1207 + t1177 * t1380) * t1193 + (-0.2e1 * t1201 * t1379 + 0.4e1 * t1204 * t1329) * t1386 + (t1102 * t1394 + t1152 * t1398 + t1173 * t1399) * t1140 + (t1165 * t1405 + t1317 * t1411 + t1272) * pkin(3) + ((t1282 * qJD(2) + (-t1357 + (t1182 + 0.4e1 * t1330) * t1207) * qJD(3)) * t1208 + (t1168 * t1412 + (-t1182 * t1203 + (-t1218 - t1177) * t1207) * qJD(2) + t1262) * t1204) * pkin(2);
	t1352 = t1207 * t1218;
	t1067 = t1167 * t1293 + 0.2e1 * (0.2e1 * qJD(2) * t1338 + t1165 * t1383 - t1179 * t1332) * t1203 + t1146 * t1379 + (t1102 * t1395 + t1151 * t1398 + t1172 * t1399) * t1140 + (t1145 * t1208 + (-t1208 * t1352 + (-t1218 + 0.2e1 * (-pkin(1) - 0.4e1 * t1383) * t1385) * t1360) * qJD(3) + ((-t1153 + t1357) * t1204 + (t1304 * t1203 + 0.4e1 * t1163 + t1352) * t1208) * qJD(2)) * pkin(2);
	t1268 = t1096 * t1392 + t1099 * t1391;
	t1419 = t1268 * qJD(3) + t1066 * t1393 + t1067 * t1391;
	t1214 = 0.1e1 / pkin(4);
	t1252 = t1264 * t1381;
	t1062 = (-0.2e1 * t1424 * t1377 + (-t1205 * t1420 + t1252) * t1155) * t1214;
	t1257 = -0.2e1 * t1156 * t1263;
	t1063 = (t1205 * t1147 * t1257 + (t1233 * t1205 + t1423) * t1155) * t1214;
	t1372 = t1155 * t1214;
	t1092 = t1424 * t1372;
	t1258 = t1205 * t1263;
	t1093 = t1258 * t1372;
	t1202 = sin(qJ(4));
	t1206 = cos(qJ(4));
	t1418 = t1062 * t1202 + t1063 * t1206 + (t1092 * t1206 - t1093 * t1202) * qJD(4);
	t1149 = -t1180 + (-t1325 + (t1324 - t1328) * pkin(2)) * pkin(3);
	t1396 = -t1166 / 0.2e1;
	t1397 = t1147 / 0.2e1;
	t1285 = qJD(3) * t1396 + t1397;
	t1417 = -t1091 * t1396 - t1101 * t1397 + t1285 * t1136 - t1149 * t1400;
	t1415 = t1308 * t1203 + t1307 * t1207;
	t1298 = t1207 * t1190;
	t1413 = qJD(2) * t1200 * (t1193 * t1384 + t1365) + t1171 * t1359 + (-0.2e1 * t1193 * t1298 + t1178 * (-t1198 + t1200)) * qJD(3);
	t1409 = 0.2e1 * t1156;
	t1382 = qJD(1) * t1205;
	t1350 = t1209 * t1214;
	t1311 = t1372 / 0.2e1;
	t1290 = t1209 * t1311;
	t1279 = t1207 * t1290;
	t1280 = t1203 * t1290;
	t1095 = t1134 * t1280 + t1136 * t1279;
	t1312 = -t1372 / 0.2e1;
	t1291 = t1207 * t1312;
	t1292 = t1203 * t1311;
	t1098 = t1134 * t1291 + t1136 * t1292;
	t1322 = t1143 * t1378;
	t1321 = t1214 * t1377;
	t1133 = t1413 * t1434 + (qJD(2) * t1287 + (0.8e1 * t1159 * t1203 + t1207 * t1344) * t1193 + (qJD(2) * t1246 - 0.4e1 * qJD(3) * t1318) * pkin(2)) * pkin(3);
	t1074 = -t1374 - t1167 * t1322 + t1144 * t1207 - qJD(3) * t1376 + (-0.2e1 * pkin(1) * t1299 - qJD(3) * t1369) * t1385 + t1154 * t1335 + (-t1170 * t1135 / 0.2e1 + t1151 * t1410 + t1133 * t1395) * t1140 + (t1171 * t1406 - 0.4e1 * t1294 + 0.8e1 * (-qJD(2) * t1298 + (t1193 * t1198 - t1367) * qJD(3)) * t1385) * pkin(3);
	t1310 = t1074 / 0.2e1 + t1091 / 0.2e1;
	t1075 = t1137 - t1170 * t1322 + t1160 * t1366 + (t1133 * t1394 + t1152 * t1410 + t1169 * t1399) * t1140 + (t1316 + (-pkin(2) * t1182 + 0.2e1 * t1337) * t1360) * qJD(3) + (t1162 * t1190 + (t1182 * t1384 + t1297 * t1386) * t1207) * qJD(2) + t1413 * t1427;
	t1309 = t1426 - t1075 / 0.2e1;
	t1296 = qJD(3) * t1136 * t1372;
	t1267 = t1100 * t1390 + t1101 * t1392;
	t1265 = t1100 * t1393 + t1101 * t1390;
	t1065 = t1091 * t1291 + t1432 * t1292 + t1296 * t1390 + t1429 * t1321;
	t1256 = t1264 * t1409;
	t1255 = t1263 * t1409;
	t1061 = t1430 * t1312 * t1382 + t1091 * t1280 + t1432 * t1279 + (t1296 * t1393 - t1321 * t1430) * t1209;
	t1251 = t1429 * t1320;
	t1245 = t1166 * t1256;
	t1244 = t1166 * t1255;
	t1241 = t1164 * t1251;
	t1240 = t1166 * t1251;
	t1237 = t1062 * t1206 - t1063 * t1202 + (-t1092 * t1202 - t1093 * t1206) * qJD(4);
	t1236 = t1266 * qJD(3) + t1066 * t1391 + t1067 * t1392;
	t1231 = -t1100 * t1147 / 0.2e1 + t1166 * t1426 - t1136 * t1149 / 0.2e1 - t1285 * t1134;
	t1230 = t1214 * (t1164 * t1257 + t1422);
	t1081 = (t1268 * t1155 + t1164 * t1256) * t1214;
	t1229 = -t1166 * t1257 - t1436;
	t1228 = t1155 * t1415 - t1245;
	t1227 = t1214 * t1229;
	t1073 = t1228 * t1214;
	t1225 = -t1268 * t1147 + t1264 * t1148 - t1164 * t1420;
	t1224 = t1240 + (-qJD(3) * t1414 + t1310 * t1203 + t1309 * t1207) * t1155 + (t1231 * t1203 - t1207 * t1417) * t1409;
	t1223 = -t1433 + (-qJD(3) * t1415 - t1309 * t1203 + t1310 * t1207) * t1155 + (t1203 * t1417 + t1231 * t1207) * t1409;
	t1097 = t1263 * t1372;
	t1094 = t1264 * t1155 * t1350;
	t1080 = (t1164 * t1255 - t1422) * t1214;
	t1079 = t1209 * t1230;
	t1078 = t1209 * t1081;
	t1077 = t1205 * t1230;
	t1076 = t1205 * t1081;
	t1072 = (-t1267 * t1155 - t1244) * t1214 + t1098;
	t1071 = t1209 * t1227;
	t1070 = (-t1265 * t1155 - t1245) * t1350 + t1095;
	t1069 = t1205 * t1227;
	t1068 = t1205 * t1073;
	t1064 = (t1147 * t1255 - t1233 * t1155) * t1214;
	t1060 = (t1209 * t1147 * t1256 + (t1209 * t1420 + t1253) * t1155) * t1214;
	t1059 = t1060 * t1206 + t1061 * t1202 + (t1094 * t1202 + t1095 * t1206) * qJD(4);
	t1058 = -t1060 * t1202 + t1061 * t1206 + (t1094 * t1206 - t1095 * t1202) * qJD(4);
	t1057 = (t1155 * t1236 + t1225 * t1409 - t1241) * t1214;
	t1056 = (t1419 * t1155 + t1435 * t1409 - t1242) * t1214;
	t1055 = (t1205 * t1242 + (-t1205 * t1419 + t1266 * t1381) * t1155 + (-t1164 * t1423 - t1205 * t1435) * t1409) * t1214;
	t1054 = (-t1205 * t1241 + (t1236 * t1205 + t1268 * t1381) * t1155 + (t1164 * t1252 + t1205 * t1225) * t1409) * t1214;
	t1053 = (t1209 * t1242 + (-t1209 * t1419 - t1266 * t1382) * t1155 + (qJD(1) * t1164 * t1258 - t1209 * t1435) * t1409) * t1214;
	t1052 = (-t1209 * t1241 + (t1236 * t1209 - t1268 * t1382) * t1155 + (-t1164 * t1253 + t1209 * t1225) * t1409) * t1214;
	t1051 = t1224 * t1214;
	t1050 = (t1433 + (-t1265 * qJD(3) + t1074 * t1391 + t1075 * t1393) * t1155 + (t1267 * t1147 + t1263 * t1149 - t1233 * t1166) * t1409) * t1214 + t1065;
	t1049 = ((-t1244 + t1436) * t1382 + t1223 * t1209) * t1214;
	t1048 = (t1205 * t1223 + t1229 * t1381) * t1214;
	t1047 = (t1209 * t1240 + (t1265 * t1382 + (t1267 * qJD(3) + t1074 * t1392 + t1075 * t1391) * t1209) * t1155 + (t1166 * t1253 + (t1265 * t1147 + t1264 * t1149 + t1166 * t1420) * t1209) * t1409) * t1214 + t1061;
	t1046 = (t1205 * t1224 + t1228 * t1381) * t1214;
	t1 = [t1237, t1052 * t1206 + t1053 * t1202 + (-t1078 * t1202 + t1079 * t1206) * qJD(4), t1047 * t1206 + t1049 * t1202 + (-t1070 * t1202 + t1071 * t1206) * qJD(4), t1058, 0, 0; t1059, t1054 * t1206 + t1055 * t1202 + (-t1076 * t1202 + t1077 * t1206) * qJD(4), t1046 * t1206 + t1048 * t1202 + (-t1068 * t1202 + t1069 * t1206) * qJD(4), t1418, 0, 0; 0, t1056 * t1206 + t1057 * t1202 + (-t1080 * t1202 + t1081 * t1206) * qJD(4), t1050 * t1206 + t1051 * t1202 + (-t1072 * t1202 + t1073 * t1206) * qJD(4), -t1064 * t1202 + t1065 * t1206 + (t1097 * t1206 - t1098 * t1202) * qJD(4), 0, 0; -t1418, -t1052 * t1202 + t1053 * t1206 + (-t1078 * t1206 - t1079 * t1202) * qJD(4), -t1047 * t1202 + t1049 * t1206 + (-t1070 * t1206 - t1071 * t1202) * qJD(4), -t1059, 0, 0; t1058, -t1054 * t1202 + t1055 * t1206 + (-t1076 * t1206 - t1077 * t1202) * qJD(4), -t1046 * t1202 + t1048 * t1206 + (-t1068 * t1206 - t1069 * t1202) * qJD(4), t1237, 0, 0; 0, -t1056 * t1202 + t1057 * t1206 + (-t1080 * t1206 - t1081 * t1202) * qJD(4), -t1050 * t1202 + t1051 * t1206 + (-t1072 * t1206 - t1073 * t1202) * qJD(4), -t1064 * t1206 - t1065 * t1202 + (-t1097 * t1202 - t1098 * t1206) * qJD(4), 0, 0; -t1382, 0, 0, 0, 0, 0; t1381, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0;];
	JRD_rot = t1;
elseif link_index == 7
	%% Symbolic Calculation
	% From jacobiRD_rot_7_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-11 19:24:50
	% EndTime: 2020-04-11 19:25:06
	% DurationCPUTime: 14.77s
	% Computational Cost: add. (179123->413), mult. (431314->757), div. (2992->5), fcn. (112898->12), ass. (0->332)
	t2105 = (pkin(4) ^ 2);
	t2107 = (pkin(3) ^ 2);
	t2108 = (pkin(2) ^ 2);
	t2109 = (pkin(1) ^ 2);
	t2232 = -pkin(5) ^ 2 + t2109;
	t2195 = (t2108 + t2232);
	t2175 = t2107 + t2195;
	t2075 = -t2105 + t2175;
	t2101 = cos(qJ(2));
	t2279 = pkin(2) * t2101;
	t2229 = pkin(1) * t2279;
	t2087 = -0.2e1 * t2229;
	t2064 = t2087 + t2075;
	t2095 = sin(qJ(3));
	t2096 = sin(qJ(2));
	t2248 = t2095 * t2096;
	t2084 = pkin(2) * t2248;
	t2192 = pkin(3) * t2084;
	t2077 = -0.2e1 * t2192;
	t2050 = t2077 + t2064;
	t2246 = t2095 * t2101;
	t2297 = pkin(2) * pkin(3);
	t2191 = t2246 * t2297;
	t2078 = -0.2e1 * t2191;
	t2280 = pkin(2) * t2096;
	t2304 = 0.2e1 * pkin(1);
	t2086 = t2280 * t2304;
	t2065 = t2078 + t2086;
	t2226 = 4 * t2108;
	t2088 = (t2107 - t2109) * t2226;
	t2100 = cos(qJ(3));
	t2236 = t2101 * t2108;
	t2189 = -0.4e1 * t2096 * t2236;
	t2068 = t2086 + t2189;
	t2247 = t2095 * t2100;
	t2213 = qJD(3) * t2247;
	t2182 = t2068 * t2213;
	t2216 = qJD(2) * t2246;
	t2184 = t2096 * t2216;
	t2090 = t2096 ^ 2;
	t2092 = t2101 ^ 2;
	t2233 = t2090 - t2092;
	t2185 = 0.2e1 * t2233;
	t2193 = t2075 * t2229;
	t2221 = qJD(2) * t2279;
	t2083 = t2221 * t2304;
	t2271 = qJD(3) * t2100;
	t2225 = -0.2e1 * t2271;
	t2186 = t2225 * t2297;
	t2188 = qJD(2) * t2084;
	t2325 = 0.2e1 * pkin(3);
	t2196 = t2101 * t2186 + t2188 * t2325 + t2083;
	t2272 = qJD(3) * t2095;
	t2215 = t2050 * t2272;
	t2085 = pkin(1) - t2279;
	t2227 = 0.4e1 * t2085;
	t2228 = 0.4e1 * qJD(2);
	t2238 = t2100 * t2101;
	t2159 = t2233 * qJD(2) * t2226;
	t2054 = t2083 + t2159;
	t2091 = t2100 ^ 2;
	t2260 = t2054 * t2091;
	t2082 = qJD(2) * t2086;
	t2048 = qJD(2) * t2078 + t2096 * t2186 + t2082;
	t2261 = t2048 * t2100;
	t2281 = pkin(1) * t2108;
	t2301 = 0.8e1 * t2090;
	t1991 = (0.8e1 * t2182 - 0.4e1 * t2260) * t2107 + (t2088 * t2185 - 0.4e1 * t2193) * qJD(2) + ((t2065 * t2272 - t2100 * t2196) * t2227 + (t2271 * t2301 + 0.24e2 * t2184) * t2281 + (0.4e1 * (-qJD(2) * t2050 + qJD(3) * t2064) * t2238 + (0.4e1 * t2215 - 0.4e1 * t2261 + (-t2064 * t2095 - t2065 * t2100) * t2228) * t2096) * pkin(2)) * pkin(3);
	t2073 = t2085 * t2100;
	t2244 = t2096 * t2100;
	t2133 = -0.4e1 * t2050 * t2244 + 0.4e1 * t2064 * t2246;
	t2298 = -0.2e1 * t2101;
	t2148 = (-0.4e1 * pkin(1) * pkin(2) * t2075 + t2088 * t2298) * t2096;
	t2223 = t2095 * t2281;
	t2253 = t2091 * t2107;
	t2027 = -0.4e1 * t2068 * t2253 + t2148 + (pkin(2) * t2133 - 0.4e1 * t2065 * t2073 + t2223 * t2301) * pkin(3);
	t2234 = t2087 + t2109;
	t2299 = 0.2e1 * t2092;
	t2067 = t2108 * t2299 - t2108 + t2234;
	t2300 = -0.2e1 * t2091;
	t2171 = t2067 * t2300 - t2232;
	t2210 = t2064 * t2248;
	t2276 = 0.4e1 * pkin(3);
	t2295 = -pkin(4) + pkin(5);
	t2296 = -pkin(4) - pkin(5);
	t2031 = t2088 * t2092 + 0.4e1 * t2193 - (t2109 + (pkin(2) - t2296) * (pkin(2) + t2296)) * (t2109 + (pkin(2) - t2295) * (pkin(2) + t2295)) + (pkin(2) * t2210 - t2050 * t2073) * t2276 + ((2 * t2105) - (6 * t2108) + 0.2e1 * t2171 - t2107) * t2107;
	t2110 = sqrt(t2031);
	t2029 = 0.1e1 / t2110;
	t2212 = qJD(3) * t2244;
	t2057 = (t2212 + t2216) * pkin(2);
	t2062 = pkin(2) * t2238 + t2084;
	t2066 = t2086 - 0.4e1 * t2191;
	t2074 = 3 * t2107 + t2105 + t2195;
	t2049 = -t2276 * t2057 + t2082;
	t2051 = t2074 + t2087 - 0.4e1 * t2192;
	t2149 = -t2049 * t2100 + t2051 * t2272;
	t2076 = t2084 - pkin(3);
	t2169 = -t2051 * t2100 + t2076 * t2304;
	t2220 = pkin(2) * t2244;
	t2255 = t2085 * t2095;
	t2059 = t2220 + t2255;
	t2254 = t2090 * t2108;
	t2187 = pkin(1) * qJD(2) * t2254;
	t2174 = 0.8e1 * t2187;
	t2183 = t2067 * t2213;
	t2173 = qJD(2) * t2189;
	t2060 = t2082 + t2173;
	t2258 = t2060 * t2091;
	t2324 = 0.4e1 * t2064;
	t2024 = (0.8e1 * t2183 - 0.4e1 * t2258) * t2107 + qJD(2) * t2148 + (t2095 * t2174 + (t2215 - t2261) * t2227 + (qJD(2) * t2133 + t2212 * t2324) * pkin(2)) * pkin(3);
	t2207 = -t2024 * t2029 / t2031 / 0.4e1;
	t2176 = t2059 * t2207;
	t2218 = pkin(3) * t2073;
	t2245 = t2095 * t2110;
	t2287 = t2059 / 0.2e1;
	t2214 = qJD(3) * t2248;
	t2041 = (qJD(2) * (t2238 + t2248) - t2214) * pkin(2) + qJD(3) * t2073;
	t2290 = t2041 / 0.2e1;
	t2294 = t2024 / 0.2e1;
	t1952 = t2057 * t2110 + t2027 * t2176 + (t2066 * t2272 - t2083 * t2100) * t2085 + (t2092 * t2225 + 0.4e1 * t2184) * t2281 + (t1991 * t2287 + t2027 * t2290 + t2062 * t2294) * t2029 + (t2159 + 0.4e1 * t2182 - 0.2e1 * t2260) * pkin(3) + ((t2169 * qJD(2) + (-t2245 + (t2074 + 0.4e1 * t2218) * t2100) * qJD(3)) * t2101 + (t2057 * t2304 + (-t2074 * t2095 + (-0.4e1 * pkin(3) * t2255 - t2066 - t2110) * t2100) * qJD(2) + t2149) * t2096) * pkin(2);
	t2063 = t2087 + t2105 + t2175;
	t2043 = (-t2063 - 0.8e1 * t2218) * t2095;
	t2224 = (0.4e1 * t2091 - 0.2e1) * pkin(3);
	t2282 = pkin(1) * t2100;
	t2052 = (t2224 + 0.2e1 * t2282) * t2280;
	t2034 = qJD(2) * t2052 + qJD(3) * t2043;
	t2194 = t2085 * t2304 + t2063;
	t2160 = t2194 * t2280;
	t2278 = pkin(3) * t2100;
	t2035 = 0.2e1 * t2068 * t2278 + t2160;
	t2257 = t2063 * t2100;
	t2042 = t2085 * t2224 + t2257;
	t2061 = (t2244 - t2246) * pkin(2);
	t2058 = -t2084 + t2073;
	t2056 = pkin(3) + t2058;
	t2181 = t2056 * t2207;
	t2237 = t2100 * t2110;
	t2288 = t2056 / 0.2e1;
	t2138 = qJD(2) * t2220 - qJD(3) * t2255;
	t2040 = t2138 - t2057;
	t2291 = t2040 / 0.2e1;
	t2305 = -0.2e1 * pkin(1);
	t1953 = t2027 * t2181 + 0.2e1 * (-pkin(3) * t2068 * t2272 + t2054 * t2278 + 0.2e1 * t2187) * t2095 + t2035 * t2271 + (t1991 * t2288 + t2027 * t2291 + t2061 * t2294) * t2029 + (t2034 * t2101 + (-t2101 * t2237 + (-t2110 + (t2305 - 0.8e1 * t2278) * t2280) * t2248) * qJD(3) + ((-t2042 + t2245) * t2096 + (t2237 + t2194 * t2095 + t2052 + 0.2e1 * (t2091 * t2325 - pkin(3) + t2282) * t2280) * t2101) * qJD(2)) * pkin(2);
	t2036 = t2138 * t2325 + t2048;
	t2037 = (qJD(2) * t2238 - t2214) * pkin(2) * t2325 + t2196;
	t2047 = t2077 + t2107 + t2108 + 0.2e1 * t2218 + t2234;
	t2044 = 0.1e1 / t2047;
	t2045 = 0.1e1 / t2047 ^ 2;
	t2053 = t2220 * t2325 + t2065;
	t2026 = t2040 * t2110;
	t2033 = (t2060 * t2100 - t2067 * t2272) * t2325 + qJD(2) * t2160;
	t2206 = t2029 * t2288;
	t2263 = t2042 * t2101;
	t2256 = t2067 * t2100;
	t2219 = pkin(3) * t2256;
	t2039 = t2063 * t2085 + 0.2e1 * t2219;
	t2265 = t2039 * t2100;
	t1979 = t2026 + t2024 * t2206 + t2033 * t2095 + qJD(3) * t2265 + (qJD(2) * t2263 + t2034 * t2096) * pkin(2);
	t2130 = t2074 * t2246 + t2096 * t2169;
	t2205 = t2029 * t2287;
	t2231 = pkin(1) * t2298;
	t2264 = t2041 * t2110;
	t1980 = t2264 + t2024 * t2205 + t2149 * t2085 + (t2173 + 0.4e1 * t2183 - 0.2e1 * t2258) * pkin(3) + (qJD(2) * t2130 + t2057 * t2231 + t2074 * t2212) * pkin(2);
	t2266 = t2039 * t2095;
	t2025 = t2042 * t2280 + t2056 * t2110 + t2266;
	t2249 = t2095 * t2025;
	t2202 = -t2249 / 0.2e1;
	t2208 = t2051 * t2073;
	t2259 = t2059 * t2110;
	t2023 = -t2208 + t2259 + (t2074 * t2248 + t2076 * t2231) * pkin(2) + (-t2105 - t2107 + (t2299 - 0.3e1) * t2108 + t2171) * pkin(3);
	t2240 = t2100 * t2023;
	t2151 = t2240 / 0.2e1 + t2202;
	t2284 = -t2100 / 0.2e1;
	t2286 = -t2095 / 0.2e1;
	t2128 = qJD(3) * t2151 - t1979 * t2284 - t1980 * t2286;
	t2239 = t2100 * t2025;
	t2250 = t2095 * t2023;
	t2150 = t2239 / 0.2e1 + t2250 / 0.2e1;
	t1987 = t2061 * t2110 + t2027 * t2206 + t2035 * t2095 + (t2052 * t2096 + t2263) * pkin(2);
	t1988 = t2062 * t2110 + t2027 * t2205 - t2066 * t2073 - 0.2e1 * t2092 * t2223 + (t2068 * t2300 + t2189) * pkin(3) + t2130 * pkin(2);
	t2283 = t2100 / 0.2e1;
	t2285 = t2095 / 0.2e1;
	t2153 = t1987 * t2283 + t1988 * t2285;
	t2155 = t1987 * t2285 + t1988 * t2284;
	t2268 = t2036 * t2045;
	t2267 = t2044 * t2268;
	t2329 = t2239 + t2250;
	t2315 = t2329 * t2267;
	t2339 = (t2036 * t2153 + t2037 * t2150 + t2053 * t2128) * t2045 + (qJD(3) * t2155 + t1952 * t2286 + t1953 * t2284) * t2044 - t2053 * t2315;
	t2055 = t2059 * t2325;
	t2317 = t2045 * t2151;
	t2136 = t2055 * t2317;
	t2230 = pkin(3) * t2227;
	t2333 = 8 * t2107;
	t2032 = (t2050 * t2230 + t2256 * t2333) * t2095 + (0.8e1 * t2085 * t2253 + t2278 * t2324) * t2280;
	t2089 = t2095 ^ 2;
	t2302 = -0.2e1 * t2089;
	t1989 = pkin(3) * t2067 * t2302 + t2032 * t2206 + t2043 * t2280 - t2259 + t2265;
	t2222 = pkin(1) * t2236;
	t1990 = t2058 * t2110 + t2032 * t2205 + (t2051 * t2085 + 0.4e1 * t2219) * t2095 + (-0.2e1 * t2100 * t2222 + (t2074 * t2100 + t2091 * t2230) * pkin(2)) * t2096;
	t2152 = t1989 * t2286 + t1990 * t2283;
	t2338 = t2044 * t2152 + t2136;
	t2097 = sin(qJ(1));
	t2106 = 0.1e1 / pkin(4);
	t2102 = cos(qJ(1));
	t2143 = t2151 * t2102;
	t2312 = qJD(3) * t2150 + t1979 * t2285 + t1980 * t2284;
	t2321 = t2036 * t2097;
	t1944 = (-t2317 * t2321 + (qJD(1) * t2143 - t2097 * t2312) * t2044) * t2106;
	t2274 = qJD(1) * t2102;
	t2316 = t2150 * t2045;
	t1945 = (-t2316 * t2321 + (t2097 * t2128 + t2150 * t2274) * t2044) * t2106;
	t2144 = t2151 * t2097;
	t2262 = t2044 * t2106;
	t1981 = t2144 * t2262;
	t2242 = t2097 * t2106;
	t1982 = t2150 * t2044 * t2242;
	t2094 = sin(qJ(4));
	t2099 = cos(qJ(4));
	t1965 = t1981 * t2094 + t1982 * t2099;
	t1933 = qJD(4) * t1965 - t1944 * t2099 + t1945 * t2094;
	t1964 = t1981 * t2099 - t1982 * t2094;
	t2093 = sin(qJ(5));
	t2098 = cos(qJ(5));
	t2241 = t2098 * t2102;
	t2252 = t2093 * t2097;
	t2337 = -t1933 * t2098 + qJD(1) * t2252 + (-t1964 * t2093 - t2241) * qJD(5);
	t2135 = t2055 * t2316;
	t2197 = t2025 / 0.2e1 - t1990 / 0.2e1;
	t2198 = t1989 / 0.2e1 + t2023 / 0.2e1;
	t2307 = t2095 * t2197 - t2100 * t2198;
	t2336 = t2307 * t2044 - t2135;
	t2243 = t2097 * t2098;
	t2251 = t2093 * t2102;
	t2334 = -qJD(1) * t2243 + (t1964 * t2098 - t2251) * qJD(5) - t1933 * t2093;
	t2332 = t2055 * t2315;
	t2331 = qJD(3) * t2023 + t1979;
	t2123 = -t2044 * t2153 + t2053 * t2316;
	t2124 = t2044 * t2155 + t2053 * t2317;
	t2322 = qJD(3) * t2044;
	t2314 = t2089 - t2091;
	t1932 = qJD(4) * t1964 + t1944 * t2094 + t1945 * t2099;
	t2172 = -qJD(3) * t2055 / 0.2e1 + t2036 / 0.2e1;
	t2289 = t2055 / 0.2e1;
	t2038 = 0.2e1 * t2041 * pkin(3);
	t2292 = t2038 / 0.2e1;
	t2293 = -t2036 / 0.2e1;
	t2310 = t1980 * t2289 + t1990 * t2293 + t2023 * t2292 + t2025 * t2172;
	t2308 = t2095 * t2198 + t2100 * t2197;
	t2306 = qJD(2) * t2091 * (t2085 * t2279 + t2254) + t2060 * t2247 + (-t2067 * t2314 - 0.2e1 * t2084 * t2073) * qJD(3);
	t2275 = qJD(1) * t2097;
	t2270 = qJD(5) * t2093;
	t2269 = qJD(5) * t2098;
	t2235 = t2102 * t2106;
	t2203 = t2262 / 0.2e1;
	t2177 = t2102 * t2203;
	t2165 = t2100 * t2177;
	t2166 = t2095 * t2177;
	t1984 = t2023 * t2166 + t2025 * t2165;
	t2204 = -t2262 / 0.2e1;
	t2178 = t2100 * t2204;
	t2179 = t2095 * t2203;
	t1986 = t2023 * t2178 + t2025 * t2179;
	t2022 = t2306 * t2333 + (t2100 * t2174 + (t2048 * t2095 + t2050 * t2271) * t2227 + (-0.4e1 * qJD(3) * t2210 + (t2050 * t2248 + t2064 * t2238) * t2228) * pkin(2)) * pkin(3);
	t1956 = -t2264 + t2032 * t2181 + t2033 * t2100 - qJD(3) * t2266 + (-qJD(3) * t2257 + t2188 * t2305) * t2280 + t2043 * t2221 + (-t2059 * t2024 / 0.2e1 + t2032 * t2291 + t2022 * t2288) * t2029 + (t2060 * t2302 - 0.4e1 * t2183 + 0.8e1 * (t2314 * qJD(3) * t2085 - t2100 * t2188) * t2280) * pkin(3);
	t2200 = t1956 / 0.2e1 + t1980 / 0.2e1;
	t1957 = t2026 + t2032 * t2176 + t2049 * t2255 + (t2022 * t2287 + t2032 * t2290 + t2058 * t2294) * t2029 + (t2208 + (-pkin(2) * t2074 + 0.2e1 * t2222) * t2248) * qJD(3) + (t2051 * t2084 + (t2074 * t2279 + t2185 * t2281) * t2100) * qJD(2) + t2306 * t2276;
	t2199 = t1979 / 0.2e1 - t1957 / 0.2e1;
	t2180 = t2106 * t2202;
	t2120 = t2308 * t2044 - t2136;
	t1955 = t2120 * t2106;
	t1948 = t2097 * t1955;
	t1949 = t2336 * t2242;
	t1936 = t1948 * t2099 - t1949 * t2094;
	t1950 = -t2338 * t2235 + t1984;
	t2119 = t2336 * t2102;
	t1951 = t2106 * t2119;
	t1937 = t1950 * t2099 - t1951 * t2094;
	t2154 = t1989 * t2283 + t1990 * t2285;
	t1954 = (-t2044 * t2154 - t2135) * t2106 + t1986;
	t1938 = t1954 * t2099 + t1955 * t2094;
	t1963 = t2124 * t2106;
	t1958 = t2097 * t1963;
	t1959 = t2123 * t2242;
	t1939 = t1958 * t2099 - t1959 * t2094;
	t1960 = t2102 * t1963;
	t2122 = t2123 * t2102;
	t1961 = t2106 * t2122;
	t1940 = t1960 * t2099 - t1961 * t2094;
	t1962 = t2123 * t2106;
	t1941 = t1962 * t2099 + t1963 * t2094;
	t1983 = t2151 * t2044 * t2235;
	t1968 = -t1983 * t2099 + t1984 * t2094;
	t1967 = t1983 * t2094 + t1984 * t2099;
	t1985 = t2150 * t2262;
	t1970 = -t1985 * t2099 + t1986 * t2094;
	t1969 = t1985 * t2094 + t1986 * t2099;
	t1947 = t1980 * t2178 + t2180 * t2268 + (t2023 * t2268 + t2025 * t2322) * t2106 * t2283 + t2331 * t2179;
	t2141 = (-t2240 + t2249) * t2267;
	t1943 = t2102 * t2180 * t2322 + t1980 * t2166 + t2331 * t2165 + (t2204 * t2275 - t2235 * t2268 / 0.2e1) * t2329;
	t2134 = t2055 * t2141;
	t2126 = t1979 * t2289 + t1989 * t2293 - t2172 * t2023 + t2025 * t2292;
	t2118 = t2053 * t2141 + (t2153 * qJD(3) + t1952 * t2284 + t1953 * t2285) * t2044 + (-t2036 * t2155 + t2037 * t2151 - t2053 * t2312) * t2045;
	t2116 = -t2134 + (-qJD(3) * t2307 + t2095 * t2200 + t2100 * t2199) * t2044 + (t2126 * t2095 - t2310 * t2100) * t2045;
	t2115 = -t2332 + (-t2308 * qJD(3) - t2199 * t2095 + t2200 * t2100) * t2044 + (t2310 * t2095 + t2126 * t2100) * t2045;
	t1946 = (t2036 * t2316 - t2044 * t2128) * t2106;
	t1942 = (t2143 * t2268 + (qJD(1) * t2144 + t2312 * t2102) * t2044) * t2106;
	t1935 = qJD(4) * t1969 + t1946 * t2099 + t1947 * t2094;
	t1934 = -qJD(4) * t1970 - t1946 * t2094 + t1947 * t2099;
	t1930 = qJD(4) * t1967 + t1942 * t2099 + t1943 * t2094;
	t1929 = -qJD(4) * t1968 - t1942 * t2094 + t1943 * t2099;
	t1928 = -qJD(1) * t2251 + t1930 * t2098 + (-t1968 * t2093 - t2243) * qJD(5);
	t1927 = -qJD(1) * t2241 - t1930 * t2093 + (-t1968 * t2098 + t2252) * qJD(5);
	t1926 = t2118 * t2106;
	t1925 = t2339 * t2106;
	t1924 = (-qJD(1) * t2122 - t2097 * t2339) * t2106;
	t1923 = (t2097 * t2118 + t2124 * t2274) * t2106;
	t1922 = (-t2102 * t2339 + t2123 * t2275) * t2106;
	t1921 = (t2118 * t2102 - t2124 * t2275) * t2106;
	t1920 = t2116 * t2106;
	t1919 = (t2332 + (-t2152 * qJD(3) + t1956 * t2284 + t1957 * t2286) * t2044 + (t2036 * t2154 - t2038 * t2150 - t2055 * t2128) * t2045) * t2106 + t1947;
	t1918 = (t2338 * t2275 + (-t2134 + (t2154 * qJD(3) + t1956 * t2285 + t1957 * t2284) * t2044 + (t2036 * t2152 - t2038 * t2151 + t2055 * t2312) * t2045) * t2102) * t2106 + t1943;
	t1917 = (t2115 * t2102 + t2336 * t2275) * t2106;
	t1916 = (t2097 * t2116 + t2120 * t2274) * t2106;
	t1915 = (-qJD(1) * t2119 + t2097 * t2115) * t2106;
	t1914 = t1925 * t2099 + t1926 * t2094 + (-t1962 * t2094 + t1963 * t2099) * qJD(4);
	t1913 = t1923 * t2099 + t1924 * t2094 + (-t1958 * t2094 - t1959 * t2099) * qJD(4);
	t1912 = t1921 * t2099 + t1922 * t2094 + (-t1960 * t2094 - t1961 * t2099) * qJD(4);
	t1911 = t1919 * t2099 + t1920 * t2094 + (-t1954 * t2094 + t1955 * t2099) * qJD(4);
	t1910 = t1917 * t2094 + t1918 * t2099 + (-t1950 * t2094 - t1951 * t2099) * qJD(4);
	t1909 = t1915 * t2094 + t1916 * t2099 + (-t1948 * t2094 - t1949 * t2099) * qJD(4);
	t1 = [t2337, t1912 * t2098 - t1940 * t2270, t1910 * t2098 - t1937 * t2270, t1929 * t2098 - t1967 * t2270, t1927, 0; t1928, t1913 * t2098 - t1939 * t2270, t1909 * t2098 - t1936 * t2270, t1932 * t2098 - t1965 * t2270, t2334, 0; 0, t1914 * t2098 - t1941 * t2270, t1911 * t2098 - t1938 * t2270, t1934 * t2098 - t1969 * t2270, -t1935 * t2093 - t1970 * t2269, 0; -t2334, -t1912 * t2093 - t1940 * t2269, -t1910 * t2093 - t1937 * t2269, -t1929 * t2093 - t1967 * t2269, -t1928, 0; t1927, -t1913 * t2093 - t1939 * t2269, -t1909 * t2093 - t1936 * t2269, -t1932 * t2093 - t1965 * t2269, t2337, 0; 0, -t1914 * t2093 - t1941 * t2269, -t1911 * t2093 - t1938 * t2269, -t1934 * t2093 - t1969 * t2269, -t1935 * t2098 + t1970 * t2270, 0; -t1932, -qJD(4) * t1940 - t1921 * t2094 + t1922 * t2099, -qJD(4) * t1937 + t1917 * t2099 - t1918 * t2094, -t1930, 0, 0; t1929, -qJD(4) * t1939 - t1923 * t2094 + t1924 * t2099, -qJD(4) * t1936 + t1915 * t2099 - t1916 * t2094, -t1933, 0, 0; 0, -qJD(4) * t1941 - t1925 * t2094 + t1926 * t2099, -qJD(4) * t1938 - t1919 * t2094 + t1920 * t2099, -t1935, 0, 0;];
	JRD_rot = t1;
elseif link_index == 8
	%% Symbolic Calculation
	% From jacobiRD_rot_8_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-11 19:25:25
	% EndTime: 2020-04-11 19:25:48
	% DurationCPUTime: 23.24s
	% Computational Cost: add. (352154->477), mult. (839726->873), div. (6168->5), fcn. (219682->14), ass. (0->388)
	t2295 = sin(qJ(3));
	t2296 = sin(qJ(2));
	t2475 = t2295 * t2296;
	t2283 = pkin(2) * t2475;
	t2418 = pkin(3) * t2283;
	t2276 = -0.2e1 * t2418;
	t2308 = pkin(3) ^ 2;
	t2309 = pkin(2) ^ 2;
	t2302 = cos(qJ(2));
	t2524 = pkin(2) * t2302;
	t2284 = pkin(1) - t2524;
	t2301 = cos(qJ(3));
	t2272 = t2284 * t2301;
	t2445 = pkin(3) * t2272;
	t2456 = pkin(1) * t2524;
	t2286 = -0.2e1 * t2456;
	t2310 = pkin(1) ^ 2;
	t2461 = t2286 + t2310;
	t2246 = t2276 + t2308 + t2309 + 0.2e1 * t2445 + t2461;
	t2243 = 0.1e1 / t2246;
	t2297 = sin(qJ(1));
	t2307 = 0.1e1 / pkin(4);
	t2303 = cos(qJ(1));
	t2290 = t2301 ^ 2;
	t2451 = (0.4e1 * t2290 - 0.2e1) * pkin(3);
	t2306 = pkin(4) ^ 2;
	t2459 = -pkin(5) ^ 2 + t2310;
	t2421 = t2309 + t2459;
	t2401 = t2308 + t2421;
	t2262 = t2286 + t2306 + t2401;
	t2486 = t2262 * t2301;
	t2241 = t2284 * t2451 + t2486;
	t2257 = -t2283 + t2272;
	t2255 = pkin(3) + t2257;
	t2274 = -t2306 + t2401;
	t2263 = t2286 + t2274;
	t2249 = t2276 + t2263;
	t2453 = 0.4e1 * t2309;
	t2287 = (t2308 - t2310) * t2453;
	t2291 = t2302 ^ 2;
	t2544 = 0.2e1 * t2291;
	t2266 = t2309 * t2544 - t2309 + t2461;
	t2545 = -0.2e1 * t2290;
	t2387 = t2266 * t2545 - t2459;
	t2419 = t2274 * t2456;
	t2435 = t2263 * t2475;
	t2521 = 0.4e1 * pkin(3);
	t2540 = -pkin(4) + pkin(5);
	t2541 = -pkin(4) - pkin(5);
	t2230 = t2287 * t2291 + 0.4e1 * t2419 - (t2310 + (pkin(2) - t2541) * (pkin(2) + t2541)) * (t2310 + (pkin(2) - t2540) * (pkin(2) + t2540)) + (pkin(2) * t2435 - t2249 * t2272) * t2521 + (0.2e1 * t2306 - 0.6e1 * t2309 + 0.2e1 * t2387 - t2308) * t2308;
	t2311 = sqrt(t2230);
	t2485 = t2266 * t2301;
	t2446 = pkin(3) * t2485;
	t2238 = t2262 * t2284 + 0.2e1 * t2446;
	t2495 = t2238 * t2295;
	t2525 = pkin(2) * t2296;
	t2224 = t2241 * t2525 + t2255 * t2311 + t2495;
	t2476 = t2295 * t2224;
	t2428 = -t2476 / 0.2e1;
	t2273 = 0.3e1 * t2308 + t2306 + t2421;
	t2275 = t2283 - pkin(3);
	t2250 = t2273 + t2286 - 0.4e1 * t2418;
	t2434 = t2250 * t2272;
	t2543 = -0.2e1 * t2302;
	t2458 = pkin(1) * t2543;
	t2471 = t2296 * t2301;
	t2447 = pkin(2) * t2471;
	t2484 = t2284 * t2295;
	t2258 = t2447 + t2484;
	t2488 = t2258 * t2311;
	t2222 = -t2434 + t2488 + (t2273 * t2475 + t2275 * t2458) * pkin(2) + (-t2306 - t2308 + (t2544 - 0.3e1) * t2309 + t2387) * pkin(3);
	t2467 = t2301 * t2222;
	t2363 = t2467 / 0.2e1 + t2428;
	t2353 = t2303 * t2363;
	t2473 = t2295 * t2302;
	t2334 = -0.4e1 * t2249 * t2471 + 0.4e1 * t2263 * t2473;
	t2359 = (-0.4e1 * pkin(1) * pkin(2) * t2274 + t2287 * t2543) * t2296;
	t2526 = pkin(1) * t2309;
	t2450 = t2295 * t2526;
	t2289 = t2296 ^ 2;
	t2546 = 0.8e1 * t2289;
	t2400 = t2450 * t2546;
	t2474 = t2295 * t2301;
	t2439 = qJD(3) * t2474;
	t2409 = t2266 * t2439;
	t2438 = qJD(3) * t2471;
	t2517 = qJD(3) * t2295;
	t2441 = t2249 * t2517;
	t2454 = 0.4e1 * t2284;
	t2549 = 0.2e1 * pkin(1);
	t2285 = t2525 * t2549;
	t2281 = qJD(2) * t2285;
	t2463 = t2302 * t2309;
	t2415 = -0.4e1 * t2296 * t2463;
	t2399 = qJD(2) * t2415;
	t2259 = t2281 + t2399;
	t2487 = t2259 * t2290;
	t2542 = pkin(2) * pkin(3);
	t2417 = t2473 * t2542;
	t2277 = -0.2e1 * t2417;
	t2516 = qJD(3) * t2301;
	t2452 = -0.2e1 * t2516;
	t2412 = t2452 * t2542;
	t2247 = qJD(2) * t2277 + t2296 * t2412 + t2281;
	t2490 = t2247 * t2301;
	t2567 = 0.4e1 * t2263;
	t2223 = (0.8e1 * t2409 - 0.4e1 * t2487) * t2308 + qJD(2) * t2359 + (qJD(2) * t2400 + (t2441 - t2490) * t2454 + (qJD(2) * t2334 + t2438 * t2567) * pkin(2)) * pkin(3);
	t2442 = qJD(2) * t2473;
	t2256 = (t2438 + t2442) * pkin(2);
	t2349 = qJD(2) * t2447 - qJD(3) * t2484;
	t2239 = t2349 - t2256;
	t2225 = t2239 * t2311;
	t2420 = t2284 * t2549 + t2262;
	t2372 = t2420 * t2525;
	t2568 = 0.2e1 * pkin(3);
	t2232 = (t2259 * t2301 - t2266 * t2517) * t2568 + qJD(2) * t2372;
	t2242 = (-t2262 - 0.8e1 * t2445) * t2295;
	t2527 = pkin(1) * t2301;
	t2251 = (t2451 + 0.2e1 * t2527) * t2525;
	t2233 = qJD(2) * t2251 + qJD(3) * t2242;
	t2228 = 0.1e1 / t2311;
	t2533 = t2255 / 0.2e1;
	t2432 = t2228 * t2533;
	t2492 = t2241 * t2302;
	t2494 = t2238 * t2301;
	t2175 = t2225 + t2223 * t2432 + t2232 * t2295 + qJD(3) * t2494 + (qJD(2) * t2492 + t2233 * t2296) * pkin(2);
	t2385 = -t2250 * t2301 + t2275 * t2549;
	t2331 = t2273 * t2473 + t2385 * t2296;
	t2248 = -t2521 * t2256 + t2281;
	t2361 = -t2248 * t2301 + t2250 * t2517;
	t2532 = t2258 / 0.2e1;
	t2431 = t2228 * t2532;
	t2440 = qJD(3) * t2475;
	t2465 = t2301 * t2302;
	t2240 = (qJD(2) * (t2465 + t2475) - t2440) * pkin(2) + qJD(3) * t2272;
	t2493 = t2240 * t2311;
	t2176 = t2493 + t2223 * t2431 + t2361 * t2284 + (t2399 + 0.4e1 * t2409 - 0.2e1 * t2487) * pkin(3) + (qJD(2) * t2331 + t2256 * t2458 + t2273 * t2438) * pkin(2);
	t2466 = t2301 * t2224;
	t2477 = t2295 * t2222;
	t2362 = t2466 / 0.2e1 + t2477 / 0.2e1;
	t2529 = -t2301 / 0.2e1;
	t2530 = t2295 / 0.2e1;
	t2557 = qJD(3) * t2362 + t2175 * t2530 + t2176 * t2529;
	t2244 = 0.1e1 / t2246 ^ 2;
	t2561 = t2244 * t2363;
	t2235 = t2349 * t2568 + t2247;
	t2566 = t2235 * t2297;
	t2134 = (-t2561 * t2566 + (qJD(1) * t2353 - t2297 * t2557) * t2243) * t2307;
	t2478 = t2295 * t2176;
	t2329 = qJD(3) * t2363 + t2478 / 0.2e1 - t2175 * t2529;
	t2519 = qJD(1) * t2303;
	t2562 = t2244 * t2362;
	t2135 = (-t2562 * t2566 + (t2297 * t2329 + t2362 * t2519) * t2243) * t2307;
	t2354 = t2297 * t2363;
	t2491 = t2243 * t2307;
	t2179 = t2354 * t2491;
	t2184 = t2362 * t2491;
	t2180 = t2297 * t2184;
	t2294 = sin(qJ(4));
	t2300 = cos(qJ(4));
	t2160 = t2179 * t2300 - t2180 * t2294;
	t2116 = qJD(4) * t2160 + t2134 * t2294 + t2135 * t2300;
	t2500 = t2179 * t2294;
	t2161 = t2180 * t2300 + t2500;
	t2292 = sin(qJ(6));
	t2298 = cos(qJ(6));
	t2293 = sin(qJ(5));
	t2299 = cos(qJ(5));
	t2378 = t2160 * t2293 + t2299 * t2303;
	t2589 = -(-t2161 * t2292 + t2298 * t2378) * qJD(6) - t2116 * t2298;
	t2264 = t2277 + t2285;
	t2252 = t2447 * t2568 + t2264;
	t2267 = t2285 + t2415;
	t2482 = t2290 * t2308;
	t2226 = -0.4e1 * t2267 * t2482 + t2359 + (pkin(2) * t2334 - 0.4e1 * t2264 * t2272 + t2400) * pkin(3);
	t2523 = pkin(3) * t2301;
	t2234 = 0.2e1 * t2267 * t2523 + t2372;
	t2260 = (t2471 - t2473) * pkin(2);
	t2186 = t2260 * t2311 + t2226 * t2432 + t2234 * t2295 + (t2251 * t2296 + t2492) * pkin(2);
	t2261 = pkin(2) * t2465 + t2283;
	t2265 = t2285 - 0.4e1 * t2417;
	t2187 = t2261 * t2311 + t2226 * t2431 - t2265 * t2272 - 0.2e1 * t2291 * t2450 + (t2267 * t2545 + t2415) * pkin(3) + t2331 * pkin(2);
	t2528 = t2301 / 0.2e1;
	t2365 = t2186 * t2528 + t2187 * t2530;
	t2324 = -t2243 * t2365 + t2252 * t2562;
	t2588 = t2324 * t2307;
	t2480 = t2293 * t2297;
	t2587 = -qJD(1) * t2480 + qJD(5) * t2378;
	t2408 = t2267 * t2439;
	t2410 = t2296 * t2442;
	t2460 = t2289 - t2291;
	t2411 = 0.2e1 * t2460;
	t2448 = qJD(2) * t2524;
	t2282 = t2448 * t2549;
	t2413 = qJD(2) * t2283;
	t2422 = t2302 * t2412 + t2413 * t2568 + t2282;
	t2455 = 0.4e1 * qJD(2);
	t2371 = t2460 * qJD(2) * t2453;
	t2253 = t2282 + t2371;
	t2489 = t2253 * t2290;
	t2190 = (0.8e1 * t2408 - 0.4e1 * t2489) * t2308 + (t2287 * t2411 - 0.4e1 * t2419) * qJD(2) + ((t2264 * t2517 - t2422 * t2301) * t2454 + (t2516 * t2546 + 0.24e2 * t2410) * t2526 + (0.4e1 * (-qJD(2) * t2249 + qJD(3) * t2263) * t2465 + (0.4e1 * t2441 - 0.4e1 * t2490 + (-t2263 * t2295 - t2264 * t2301) * t2455) * t2296) * pkin(2)) * pkin(3);
	t2433 = -t2223 * t2228 / t2230 / 0.4e1;
	t2407 = t2226 * t2433;
	t2472 = t2295 * t2311;
	t2535 = t2240 / 0.2e1;
	t2539 = t2223 / 0.2e1;
	t2142 = t2256 * t2311 + t2258 * t2407 + (t2265 * t2517 - t2282 * t2301) * t2284 + (t2291 * t2452 + 0.4e1 * t2410) * t2526 + (t2190 * t2532 + t2226 * t2535 + t2261 * t2539) * t2228 + (t2371 + 0.4e1 * t2408 - 0.2e1 * t2489) * pkin(3) + ((t2385 * qJD(2) + (-t2472 + (t2273 + 0.4e1 * t2445) * t2301) * qJD(3)) * t2302 + (t2256 * t2549 + (-t2273 * t2295 + (-0.4e1 * pkin(3) * t2484 - t2265 - t2311) * t2301) * qJD(2) + t2361) * t2296) * pkin(2);
	t2483 = t2289 * t2309;
	t2414 = pkin(1) * qJD(2) * t2483;
	t2464 = t2301 * t2311;
	t2536 = t2239 / 0.2e1;
	t2550 = -0.2e1 * pkin(1);
	t2143 = t2255 * t2407 + 0.2e1 * (-pkin(3) * t2267 * t2517 + t2253 * t2523 + 0.2e1 * t2414) * t2295 + t2234 * t2516 + (t2190 * t2533 + t2226 * t2536 + t2260 * t2539) * t2228 + (t2233 * t2302 + (-t2302 * t2464 + (-t2311 + (t2550 - 0.8e1 * t2523) * t2525) * t2475) * qJD(3) + ((-t2241 + t2472) * t2296 + (t2464 + t2420 * t2295 + t2251 + 0.2e1 * (t2290 * t2568 - pkin(3) + t2527) * t2525) * t2302) * qJD(2)) * pkin(2);
	t2236 = (qJD(2) * t2465 - t2440) * pkin(2) * t2568 + t2422;
	t2367 = t2186 * t2530 + t2187 * t2529;
	t2531 = -t2295 / 0.2e1;
	t2497 = t2235 * t2244;
	t2496 = t2243 * t2497;
	t2570 = t2466 + t2477;
	t2560 = t2570 * t2496;
	t2586 = (t2235 * t2365 + t2236 * t2362 + t2252 * t2329) * t2244 + (qJD(3) * t2367 + t2142 * t2531 + t2143 * t2529) * t2243 - t2252 * t2560;
	t2584 = (-t2161 * t2298 - t2292 * t2378) * qJD(6) - t2116 * t2292;
	t2254 = t2258 * t2568;
	t2347 = t2254 * t2561;
	t2457 = pkin(3) * t2454;
	t2577 = 0.8e1 * t2308;
	t2231 = (t2249 * t2457 + t2485 * t2577) * t2295 + (0.8e1 * t2284 * t2482 + t2523 * t2567) * t2525;
	t2288 = t2295 ^ 2;
	t2547 = -0.2e1 * t2288;
	t2188 = pkin(3) * t2266 * t2547 + t2231 * t2432 + t2242 * t2525 - t2488 + t2494;
	t2449 = pkin(1) * t2463;
	t2189 = t2257 * t2311 + t2231 * t2431 + (t2250 * t2284 + 0.4e1 * t2446) * t2295 + (-0.2e1 * t2301 * t2449 + (t2273 * t2301 + t2290 * t2457) * pkin(2)) * t2296;
	t2364 = t2188 * t2531 + t2189 * t2528;
	t2581 = t2243 * t2364 + t2347;
	t2479 = t2293 * t2303;
	t2377 = -t2160 * t2299 + t2479;
	t2470 = t2297 * t2299;
	t2580 = qJD(1) * t2470 + qJD(5) * t2377;
	t2346 = t2254 * t2562;
	t2423 = t2224 / 0.2e1 - t2189 / 0.2e1;
	t2424 = t2188 / 0.2e1 + t2222 / 0.2e1;
	t2552 = t2423 * t2295 - t2424 * t2301;
	t2579 = t2552 * t2243 - t2346;
	t2573 = t2254 * t2560;
	t2429 = t2491 / 0.2e1;
	t2404 = t2295 * t2429;
	t2427 = t2307 * t2528;
	t2572 = t2224 * t2243 * t2427 + t2222 * t2404;
	t2325 = t2243 * t2367 + t2252 * t2561;
	t2559 = t2288 - t2290;
	t2398 = -qJD(3) * t2254 / 0.2e1 + t2235 / 0.2e1;
	t2534 = t2254 / 0.2e1;
	t2237 = 0.2e1 * t2240 * pkin(3);
	t2537 = t2237 / 0.2e1;
	t2538 = -t2235 / 0.2e1;
	t2555 = t2176 * t2534 + t2189 * t2538 + t2222 * t2537 + t2398 * t2224;
	t2553 = t2424 * t2295 + t2423 * t2301;
	t2551 = qJD(2) * t2290 * (t2284 * t2524 + t2483) + t2259 * t2474 + (-t2266 * t2559 - 0.2e1 * t2283 * t2272) * qJD(3);
	t2520 = qJD(1) * t2297;
	t2515 = qJD(5) * t2293;
	t2514 = qJD(5) * t2299;
	t2430 = -t2491 / 0.2e1;
	t2403 = t2301 * t2430;
	t2185 = t2222 * t2403 + t2224 * t2404;
	t2166 = -t2184 * t2300 + t2185 * t2294;
	t2513 = qJD(6) * t2166;
	t2512 = qJD(6) * t2292;
	t2511 = qJD(6) * t2298;
	t2321 = t2553 * t2243 - t2347;
	t2145 = t2321 * t2307;
	t2138 = t2297 * t2145;
	t2320 = t2307 * t2579;
	t2139 = t2297 * t2320;
	t2121 = t2138 * t2300 - t2139 * t2294;
	t2510 = t2121 * t2293;
	t2182 = t2572 * t2303;
	t2462 = t2303 * t2307;
	t2140 = -t2581 * t2462 + t2182;
	t2141 = t2303 * t2320;
	t2123 = t2140 * t2300 - t2141 * t2294;
	t2509 = t2123 * t2293;
	t2366 = t2188 * t2528 + t2189 * t2530;
	t2144 = (-t2243 * t2366 - t2346) * t2307 + t2185;
	t2125 = t2144 * t2300 + t2145 * t2294;
	t2508 = t2125 * t2293;
	t2153 = t2325 * t2307;
	t2148 = t2297 * t2153;
	t2149 = t2297 * t2588;
	t2127 = t2148 * t2300 - t2149 * t2294;
	t2507 = t2127 * t2293;
	t2150 = t2303 * t2153;
	t2151 = t2303 * t2588;
	t2129 = t2150 * t2300 - t2151 * t2294;
	t2506 = t2129 * t2293;
	t2131 = t2153 * t2294 + t2300 * t2588;
	t2505 = t2131 * t2293;
	t2504 = t2135 * t2294;
	t2503 = t2161 * t2293;
	t2181 = t2363 * t2243 * t2462;
	t2499 = t2181 * t2294;
	t2163 = t2182 * t2300 + t2499;
	t2502 = t2163 * t2293;
	t2498 = t2184 * t2294;
	t2165 = t2185 * t2300 + t2498;
	t2501 = t2165 * t2293;
	t2481 = t2292 * t2299;
	t2469 = t2298 * t2299;
	t2221 = t2551 * t2577 + (0.8e1 * t2301 * t2414 + (t2247 * t2295 + t2249 * t2516) * t2454 + (-0.4e1 * qJD(3) * t2435 + (t2249 * t2475 + t2263 * t2465) * t2455) * pkin(2)) * pkin(3);
	t2405 = t2231 * t2433;
	t2146 = -t2493 + t2255 * t2405 + t2232 * t2301 - qJD(3) * t2495 + (-qJD(3) * t2486 + t2413 * t2550) * t2525 + t2242 * t2448 + (-t2258 * t2223 / 0.2e1 + t2231 * t2536 + t2221 * t2533) * t2228 + (t2259 * t2547 - 0.4e1 * t2409 + 0.8e1 * (t2559 * qJD(3) * t2284 - t2301 * t2413) * t2525) * pkin(3);
	t2426 = t2146 / 0.2e1 + t2176 / 0.2e1;
	t2147 = t2225 + t2258 * t2405 + t2248 * t2484 + (t2221 * t2532 + t2231 * t2535 + t2257 * t2539) * t2228 + (t2434 + (-pkin(2) * t2273 + 0.2e1 * t2449) * t2475) * qJD(3) + (t2250 * t2283 + (t2273 * t2524 + t2411 * t2526) * t2301) * qJD(2) + t2551 * t2521;
	t2425 = t2175 / 0.2e1 - t2147 / 0.2e1;
	t2406 = t2307 * t2428;
	t2402 = t2303 * t2429;
	t2327 = t2175 * t2534 + t2188 * t2538 - t2398 * t2222 + t2224 * t2537;
	t2316 = -t2573 + (-t2553 * qJD(3) - t2425 * t2295 + t2426 * t2301) * t2243 + (t2555 * t2295 + t2327 * t2301) * t2244;
	t2095 = (t2316 * t2303 + t2579 * t2520) * t2307;
	t2382 = t2301 * t2402;
	t2133 = t2175 * t2382 + t2402 * t2478 + (t2243 * t2303 * t2406 + t2222 * t2382) * qJD(3) + (t2430 * t2520 - t2462 * t2497 / 0.2e1) * t2570;
	t2352 = (-t2467 + t2476) * t2496;
	t2345 = t2254 * t2352;
	t2096 = (t2581 * t2520 + (-t2345 + (t2366 * qJD(3) + t2146 * t2530 + t2147 * t2529) * t2243 + (t2235 * t2364 - t2237 * t2363 + t2254 * t2557) * t2244) * t2303) * t2307 + t2133;
	t2397 = -qJD(4) * t2123 - qJD(6) * t2509 + t2095 * t2300 - t2096 * t2294;
	t2317 = -t2345 + (-qJD(3) * t2552 + t2426 * t2295 + t2425 * t2301) * t2243 + (t2327 * t2295 - t2555 * t2301) * t2244;
	t2097 = (t2297 * t2317 + t2321 * t2519) * t2307;
	t2098 = (t2297 * t2316 - t2519 * t2579) * t2307;
	t2396 = -qJD(4) * t2121 - qJD(6) * t2510 - t2097 * t2294 + t2098 * t2300;
	t2137 = t2175 * t2404 + t2176 * t2403 + (t2222 * t2427 + t2406) * t2497 + t2572 * qJD(3);
	t2099 = (t2573 + (-t2364 * qJD(3) + t2146 * t2529 + t2147 * t2531) * t2243 + (t2235 * t2366 - t2237 * t2362 - t2254 * t2329) * t2244) * t2307 + t2137;
	t2100 = t2317 * t2307;
	t2395 = -qJD(4) * t2125 - qJD(6) * t2508 - t2099 * t2294 + t2100 * t2300;
	t2319 = t2252 * t2352 + (t2365 * qJD(3) + t2142 * t2529 + t2143 * t2530) * t2243 + (-t2235 * t2367 + t2236 * t2363 - t2252 * t2557) * t2244;
	t2101 = (t2319 * t2303 - t2325 * t2520) * t2307;
	t2102 = (-t2303 * t2586 + t2324 * t2520) * t2307;
	t2394 = -qJD(4) * t2129 - qJD(6) * t2506 - t2101 * t2294 + t2102 * t2300;
	t2103 = (t2297 * t2319 + t2325 * t2519) * t2307;
	t2104 = (-t2297 * t2586 - t2324 * t2519) * t2307;
	t2393 = -qJD(4) * t2127 - qJD(6) * t2507 - t2103 * t2294 + t2104 * t2300;
	t2105 = t2586 * t2307;
	t2106 = t2319 * t2307;
	t2392 = -qJD(4) * t2131 - qJD(6) * t2505 - t2105 * t2294 + t2106 * t2300;
	t2132 = (t2353 * t2497 + (qJD(1) * t2354 + t2557 * t2303) * t2243) * t2307;
	t2113 = t2133 * t2294 + qJD(4) * t2499 + (qJD(4) * t2182 + t2132) * t2300;
	t2391 = -qJD(6) * t2502 - t2113;
	t2117 = t2504 + qJD(4) * t2500 + (qJD(4) * t2180 - t2134) * t2300;
	t2390 = -qJD(6) * t2503 - t2117;
	t2136 = (t2235 * t2562 - t2243 * t2329) * t2307;
	t2118 = -qJD(4) * t2166 - t2136 * t2294 + t2137 * t2300;
	t2389 = t2293 * t2513 - t2118;
	t2119 = t2137 * t2294 + qJD(4) * t2498 + (qJD(4) * t2185 + t2136) * t2300;
	t2388 = -qJD(6) * t2501 - t2119;
	t2120 = -t2138 * t2294 - t2139 * t2300;
	t2122 = -t2140 * t2294 - t2141 * t2300;
	t2124 = -t2144 * t2294 + t2145 * t2300;
	t2126 = -t2148 * t2294 - t2149 * t2300;
	t2128 = -t2150 * t2294 - t2151 * t2300;
	t2130 = t2153 * t2300 - t2294 * t2588;
	t2164 = -t2181 * t2300 + t2182 * t2294;
	t2375 = t2164 * t2293 + t2470;
	t2360 = t2119 * t2293 + t2166 * t2514;
	t2082 = qJD(4) * t2122 + t2095 * t2294 + t2096 * t2300;
	t2344 = qJD(6) * t2122 + t2082 * t2293 + t2123 * t2514;
	t2084 = qJD(4) * t2120 + t2097 * t2300 + t2098 * t2294;
	t2343 = qJD(6) * t2120 + t2084 * t2293 + t2121 * t2514;
	t2086 = qJD(4) * t2124 + t2099 * t2300 + t2100 * t2294;
	t2342 = qJD(6) * t2124 + t2086 * t2293 + t2125 * t2514;
	t2088 = qJD(4) * t2128 + t2101 * t2300 + t2102 * t2294;
	t2341 = qJD(6) * t2128 + t2088 * t2293 + t2129 * t2514;
	t2090 = qJD(4) * t2126 + t2103 * t2300 + t2104 * t2294;
	t2340 = qJD(6) * t2126 + t2090 * t2293 + t2127 * t2514;
	t2092 = qJD(4) * t2130 + t2105 * t2300 + t2106 * t2294;
	t2339 = qJD(6) * t2130 + t2092 * t2293 + t2131 * t2514;
	t2112 = -qJD(4) * t2164 - t2132 * t2294 + t2133 * t2300;
	t2338 = -qJD(6) * t2164 + t2112 * t2293 + t2163 * t2514;
	t2337 = qJD(6) * t2160 + t2116 * t2293 + t2161 * t2514;
	t2336 = t2118 * t2293 + t2165 * t2514 - t2513;
	t2335 = -qJD(6) * t2165 - t2360;
	t2158 = -t2164 * t2299 + t2480;
	t2115 = -qJD(4) * t2161 + t2134 * t2300 - t2504;
	t2111 = -t2117 * t2299 - t2587;
	t2110 = t2117 * t2293 + t2580;
	t2109 = -t2115 * t2293 + t2580;
	t2108 = qJD(1) * t2479 + qJD(5) * t2375 - t2113 * t2299;
	t2107 = t2113 * t2293 - qJD(5) * t2480 + (qJD(5) * t2164 + t2519) * t2299;
	t2094 = -t2107 * t2298 - t2112 * t2292 + (-t2163 * t2298 + t2292 * t2375) * qJD(6);
	t2093 = -t2107 * t2292 + t2112 * t2298 + (-t2163 * t2292 - t2298 * t2375) * qJD(6);
	t1 = [-t2109 * t2298 + t2584, t2292 * t2394 + t2298 * t2341, t2292 * t2397 + t2298 * t2344, t2292 * t2391 + t2298 * t2338, -t2108 * t2298 + t2158 * t2512, t2093; -t2094, t2292 * t2393 + t2298 * t2340, t2292 * t2396 + t2298 * t2343, t2292 * t2390 + t2298 * t2337, -t2111 * t2298 - t2377 * t2512, -t2110 * t2292 - t2589; 0, t2292 * t2392 + t2298 * t2339, t2292 * t2395 + t2298 * t2342, t2292 * t2388 + t2298 * t2336, t2119 * t2469 + (-qJD(6) * t2481 - t2298 * t2515) * t2166, t2292 * t2335 - t2298 * t2389; t2109 * t2292 + t2589, -t2292 * t2341 + t2298 * t2394, -t2292 * t2344 + t2298 * t2397, -t2292 * t2338 + t2298 * t2391, t2108 * t2292 + t2158 * t2511, t2094; t2093, -t2292 * t2340 + t2298 * t2393, -t2292 * t2343 + t2298 * t2396, -t2292 * t2337 + t2298 * t2390, t2111 * t2292 - t2377 * t2511, -t2110 * t2298 + t2584; 0, -t2292 * t2339 + t2298 * t2392, -t2292 * t2342 + t2298 * t2395, -t2292 * t2336 + t2298 * t2388, -t2119 * t2481 + (-qJD(6) * t2469 + t2292 * t2515) * t2166, t2292 * t2389 + t2298 * t2335; -t2115 * t2299 + t2587, qJD(5) * t2506 - t2088 * t2299, qJD(5) * t2509 - t2082 * t2299, qJD(5) * t2502 - t2112 * t2299, t2107, 0; t2108, qJD(5) * t2507 - t2090 * t2299, qJD(5) * t2510 - t2084 * t2299, qJD(5) * t2503 - t2116 * t2299, t2110, 0; 0, qJD(5) * t2505 - t2092 * t2299, qJD(5) * t2508 - t2086 * t2299, qJD(5) * t2501 - t2118 * t2299, t2360, 0;];
	JRD_rot = t1;
else
	JRD_rot=NaN(9,6);
end