% Rotatorische Teilmatrix der Rotationsmatrix-Jacobi-Matrix für beliebiges Segment von
% hybBKspatial
% Use Code from Maple symbolic Code Generation
% 
% Rotationsmatrix-Jacobi-Matrix: Differentieller Zusammenhang zwischen
% gestapelter Endeffektor-Rotationsmatrix und verallgemeinerten Koordinaten.
% 
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% link_index [1x1 uint8]
%   Index des Segmentes, auf dem der Punkt C liegt. (0=Basis).
%   Siehe auch: bsp_3T1R_fkine_fixb_rotmat_mdh_sym_varpar.m
% pkin [7x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[AB,AE,BC,CD,ED,L1,L2]';
% 
% Output:
% JR_rot [9x6]
%   Jacobi-Matrix der Endeffektor-Rotationsmatrix

% Quelle: HybrDyn-Toolbox
% Datum: 2020-04-11 19:31
% Revision: 6ae2d958c5b90587a0d08029b131cb7b66342a68 (2020-04-11)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function JR_rot = hybBKspatial_jacobiR_rot_sym_varpar(qJ, link_index, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),uint8(0),zeros(7,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'hybBKspatial_jacobiR_rot_sym_varpar: qJ has to be [6x1] (double)');
assert(isa(link_index,'uint8') && all(size(link_index) == [1 1]), ...
	'hybBKspatial_jacobiR_rot_sym_varpar: link_index has to be [1x1] uint8');
assert(isreal(pkin) && all(size(pkin) == [7 1]), ...
  'hybBKspatial_jacobiR_rot_sym_varpar: pkin has to be [7x1] (double)');
if link_index == 0
	%% Symbolic Calculation
	% From jacobiR_rot_0_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-11 19:22:49
	% EndTime: 2020-04-11 19:22:50
	% DurationCPUTime: 0.01s
	% Computational Cost: add. (0->0), mult. (0->0), div. (0->0), fcn. (0->0), ass. (0->1)
	t1 = [0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0;];
	JR_rot = t1;
elseif link_index == 1
	%% Symbolic Calculation
	% From jacobiR_rot_1_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-11 19:22:49
	% EndTime: 2020-04-11 19:22:49
	% DurationCPUTime: 0.01s
	% Computational Cost: add. (3->3), mult. (0->0), div. (0->0), fcn. (4->2), ass. (0->3)
	t9 = cos(qJ(1));
	t8 = sin(qJ(1));
	t1 = [-t8, 0, 0, 0, 0, 0; t9, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0; -t9, 0, 0, 0, 0, 0; -t8, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0;];
	JR_rot = t1;
elseif link_index == 2
	%% Symbolic Calculation
	% From jacobiR_rot_2_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-11 19:22:49
	% EndTime: 2020-04-11 19:22:49
	% DurationCPUTime: 0.02s
	% Computational Cost: add. (7->7), mult. (8->4), div. (0->0), fcn. (20->4), ass. (0->9)
	t8 = sin(qJ(2));
	t9 = sin(qJ(1));
	t15 = t9 * t8;
	t11 = cos(qJ(1));
	t14 = t11 * t8;
	t10 = cos(qJ(2));
	t13 = t9 * t10;
	t12 = t11 * t10;
	t1 = [-t13, -t14, 0, 0, 0, 0; t12, -t15, 0, 0, 0, 0; 0, t10, 0, 0, 0, 0; t15, -t12, 0, 0, 0, 0; -t14, -t13, 0, 0, 0, 0; 0, -t8, 0, 0, 0, 0; t11, 0, 0, 0, 0, 0; t9, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0;];
	JR_rot = t1;
elseif link_index == 3
	%% Symbolic Calculation
	% From jacobiR_rot_3_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-11 19:23:41
	% EndTime: 2020-04-11 19:24:01
	% DurationCPUTime: 17.71s
	% Computational Cost: add. (283280->632), mult. (856628->984), div. (1816->6), fcn. (104662->8), ass. (0->443)
	t1260 = pkin(5) ^ 2;
	t1259 = t1260 ^ 2;
	t1263 = pkin(4) ^ 2;
	t1262 = t1263 ^ 2;
	t1431 = t1259 - t1262;
	t1521 = 4 * pkin(3);
	t1511 = 2 * pkin(1);
	t1480 = 2 * pkin(3);
	t1267 = pkin(3) ^ 2;
	t1196 = 0.10e2 / 0.3e1 * t1267;
	t1271 = pkin(2) ^ 2;
	t1208 = -0.2e1 / 0.3e1 * t1260;
	t1213 = 0.2e1 / 0.3e1 * t1263;
	t1273 = pkin(1) ^ 2;
	t1257 = 2 * t1273;
	t1345 = t1208 + t1213 + t1257;
	t1183 = t1267 + t1273;
	t1279 = t1271 ^ 2;
	t1344 = t1208 + t1183;
	t1444 = t1183 * (t1213 + t1344) + t1279;
	t1077 = (t1196 + t1345) * t1271 + t1444;
	t1520 = -0.6e1 * t1077;
	t1265 = t1267 ^ 2;
	t1272 = t1273 ^ 2;
	t1428 = t1265 + t1272;
	t1432 = t1257 - t1260;
	t1455 = t1273 * t1260;
	t1513 = -t1259 / 0.6e1 + t1262 / 0.6e1;
	t1103 = t1432 * t1267 + t1428 - t1455 - t1513;
	t1291 = t1103 + t1279;
	t1079 = (t1196 + t1432) * t1271 + t1291;
	t1519 = -0.6e1 * t1079;
	t1226 = sin(qJ(2));
	t1181 = pkin(2) * t1226;
	t1421 = 0.2e1 * t1181;
	t1502 = 4 * t1267;
	t1247 = 6 * t1267;
	t1206 = -t1260 / 0.3e1;
	t1214 = t1263 / 0.3e1;
	t1426 = t1271 + t1273;
	t1342 = t1267 + t1426;
	t1129 = t1206 + t1214 + t1342;
	t1518 = -0.24e2 * t1129;
	t1237 = 10 * t1267;
	t1229 = cos(qJ(2));
	t1193 = t1229 ^ 2;
	t1457 = t1271 * t1193;
	t1228 = cos(qJ(3));
	t1180 = pkin(3) * t1228;
	t1408 = pkin(1) * t1180;
	t1163 = 0.2e1 * t1408;
	t1175 = -t1267 / 0.3e1 + t1273;
	t1190 = t1228 ^ 2;
	t1458 = t1267 * t1190;
	t1107 = 0.4e1 / 0.3e1 * t1458 + t1163 + t1175;
	t1256 = 3 * t1273;
	t1514 = t1256 - t1260 - t1263;
	t1152 = t1514 * t1237;
	t1241 = -0.6e1 * t1260;
	t1278 = pkin(2) * t1271;
	t1268 = t1278 ^ 2;
	t1240 = -0.5e1 * t1260;
	t1433 = t1240 - 0.5e1 * t1263;
	t1191 = t1193 ^ 2;
	t1473 = t1191 * t1279;
	t1178 = t1183 ^ 2;
	t1341 = -t1260 + t1183;
	t1475 = t1178 * (-t1263 + t1341);
	t1517 = 0.7e1 * t1268 + ((35 * t1267) + (15 * t1273) + t1433) * t1279 + ((21 * t1265) + t1152 + (9 * t1272) + (t1241 - 0.6e1 * t1263) * t1273) * t1271 + t1475 - 0.24e2 * t1107 * t1473;
	t1185 = -3 * t1267 + t1273;
	t1398 = 0.4e1 * t1458;
	t1516 = t1185 + t1398;
	t1515 = t1206 - t1263 / 0.3e1;
	t1140 = t1273 + t1271 / 0.4e1 + t1267 / 0.4e1 - t1260 / 0.8e1;
	t1225 = sin(qJ(3));
	t1469 = t1225 * t1226;
	t1155 = pkin(2) * t1469;
	t1334 = pkin(3) * t1155;
	t1437 = 0.4e1 / 0.7e1 * t1273 - t1260 / 0.7e1;
	t1057 = -0.32e2 / 0.21e2 * t1140 * t1334 + t1279 / 0.7e1 + (0.16e2 / 0.21e2 * t1267 + t1437) * t1271 + t1265 / 0.7e1 + t1437 * t1267 + t1272 - 0.3e1 / 0.7e1 * t1455 + t1431 / 0.42e2;
	t1205 = -t1260 / 0.4e1;
	t1220 = t1267 / 0.3e1;
	t1223 = t1271 / 0.2e1;
	t1438 = t1223 + t1273;
	t1141 = t1205 + t1220 + t1438;
	t1219 = 0.4e1 / 0.3e1 * t1267;
	t1494 = 0.4e1 / 0.3e1 * t1271;
	t1058 = -0.8e1 / 0.3e1 * t1141 * t1334 + t1279 / 0.3e1 + (t1219 + t1206) * t1271 + t1272 - t1265 / 0.3e1 + (t1494 + 0.2e1 / 0.3e1 * t1267 + t1208) * t1273 + t1431 / 0.18e2;
	t1221 = t1267 / 0.2e1;
	t1106 = -0.2e1 / 0.3e1 * t1334 + t1273 + t1221 + t1205;
	t1255 = 4 * t1273;
	t1172 = (t1255 + t1260) * t1267;
	t1177 = t1273 - 0.2e1 / 0.3e1 * t1271;
	t1184 = -t1267 + t1273;
	t1207 = -t1260 / 0.2e1;
	t1151 = t1207 + t1342;
	t1319 = -0.4e1 * t1334;
	t1306 = t1151 * t1319;
	t1189 = t1228 * t1190;
	t1282 = pkin(3) * t1267;
	t1474 = t1189 * t1282;
	t1379 = 0.16e2 * t1474;
	t1188 = t1190 ^ 2;
	t1460 = t1265 * t1188;
	t1401 = 0.8e1 * t1460;
	t1463 = (pkin(1) + pkin(3)) * (pkin(1) - pkin(3));
	t1038 = t1177 * t1401 + 0.14e2 * t1057 * t1458 + t1175 * t1306 + t1184 * t1279 + (t1172 - 0.10e2 / 0.3e1 * t1265 + (2 * t1272) - t1455) * t1271 + t1103 * t1463 + (0.6e1 * t1058 * t1180 + t1106 * t1379) * pkin(1);
	t1209 = -0.3e1 / 0.2e1 * t1260;
	t1235 = 15 * t1265;
	t1238 = 18 * t1273;
	t1252 = 3 * t1272;
	t1441 = t1259 / 0.2e1 - t1262 / 0.2e1;
	t1314 = -0.3e1 * t1455 + t1252 + t1441;
	t1436 = 15 * t1267 + t1256;
	t1446 = t1183 * ((t1209 + t1257) * t1267 - 0.3e1 / 0.2e1 * t1455 + t1428 + t1441) + t1268;
	t1047 = t1334 * t1519 + (t1235 + (t1238 - 0.9e1 * t1260) * t1267 + t1314) * t1271 + (t1209 + t1436) * t1279 + t1446;
	t1062 = t1306 + (t1247 + t1432) * t1271 + t1291;
	t1148 = -0.2e1 * t1334;
	t1176 = t1273 - t1271 / 0.3e1;
	t1114 = t1176 * t1148;
	t1462 = (pkin(1) + pkin(2)) * (pkin(1) - pkin(2));
	t1076 = t1151 * t1462 + t1114;
	t1186 = -0.3e1 * t1271 + t1273;
	t1393 = pkin(1) * t1474;
	t1339 = 0.8e1 * t1393;
	t1134 = t1186 * t1339;
	t1369 = 0.6e1 * t1408;
	t1375 = 0.12e2 * t1458;
	t1039 = t1062 * t1369 + t1076 * t1375 + t1047 + t1134;
	t1194 = t1271 * t1502;
	t1239 = -0.2e1 * t1260;
	t1253 = 8 * t1273;
	t1503 = 4 * t1265;
	t1098 = -0.4e1 * t1282 * t1155 + t1194 + t1503 + (t1239 + t1253) * t1267;
	t1298 = -t1334 + t1438;
	t1104 = t1205 - t1267 + t1298;
	t1406 = 0.8e1 * t1474;
	t1410 = 0.4e1 * t1180;
	t1050 = t1148 * t1463 + t1098 * t1190 + t1151 * t1185 + (t1104 * t1410 + t1406) * pkin(1);
	t1425 = t1272 - t1265;
	t1429 = t1260 - t1273;
	t1051 = t1176 * t1306 - t1268 + (-t1196 + t1429) * t1279 + (t1172 + t1425 + t1513) * t1271 + t1103 * t1273;
	t1245 = 7 * t1265;
	t1056 = (t1209 + t1256 + (7 * t1267)) * t1279 + (t1245 + (t1240 + (10 * t1273)) * t1267 + t1314) * t1271 + t1446;
	t1275 = pkin(1) * t1273;
	t1159 = -12 * pkin(1) * t1282 + t1275 * t1521;
	t1454 = t1273 * t1267;
	t1174 = -8 * t1265 + 12 * t1454;
	t1328 = pkin(1) * t1379;
	t1068 = t1159 * t1228 + t1174 * t1190 + t1328 + t1401 + t1428 - (6 * t1454);
	t1080 = t1148 * t1462 + t1151 * t1186;
	t1424 = t1272 + t1279;
	t1456 = t1271 * t1273;
	t1136 = 0.16e2 * (t1424 - 0.6e1 * t1456) * t1265;
	t1153 = t1263 + t1341;
	t1179 = -0.30e2 * t1260 + (60 * t1273);
	t1300 = (6 * t1272) + t1431 - 0.6e1 * t1455;
	t1161 = pkin(1) + t1180;
	t1192 = t1229 * t1193;
	t1472 = t1192 * t1278;
	t1366 = t1161 * t1472;
	t1321 = -0.32e2 * t1366;
	t1381 = pkin(3) * t1469;
	t1477 = t1161 * t1229;
	t1025 = t1050 * t1321 + t1136 * t1188 + 0.24e2 * t1051 * t1458 + (t1239 + t1255 + (28 * t1267)) * t1268 + t1153 * t1475 + (0.24e2 * t1038 * t1193 + t1179 * t1265 + t1272 * t1241 + t1300 * t1247 + t1431 * t1257 + (4 * t1275 ^ 2) + (28 * t1282 ^ 2)) * t1271 + 0.8e1 * (-t1039 * t1477 - t1056 * t1381) * pkin(2) + (0.8e1 * t1047 * t1180 + 0.32e2 * t1080 * t1474) * pkin(1) + (0.16e2 * t1068 * t1191 + t1179 * t1267 + (70 * t1265) + t1279 + t1300) * t1279;
	t1204 = -t1260 / 0.6e1;
	t1440 = t1204 - t1263 / 0.6e1;
	t1348 = t1273 + t1440;
	t1122 = t1494 + t1221 + t1348;
	t1313 = t1223 + t1348;
	t1123 = t1219 + t1313;
	t1484 = pkin(3) * t1225;
	t1069 = -t1122 * t1484 + t1123 * t1181;
	t1125 = t1267 + t1313;
	t1170 = 0.2e1 * t1271 + t1184;
	t1380 = -t1484 / 0.2e1;
	t1078 = t1125 * t1181 + t1170 * t1380;
	t1197 = -0.20e2 / 0.3e1 * t1267;
	t1350 = 0.2e1 / 0.3e1 * t1260 + t1213 + t1255;
	t1258 = -2 * t1273;
	t1351 = 0.4e1 / 0.3e1 * t1260 + 0.4e1 / 0.3e1 * t1263 + t1258;
	t1082 = -t1279 + (t1197 + t1350) * t1271 - (3 * t1265) + t1351 * t1267 + t1272;
	t1347 = t1273 + t1515;
	t1349 = t1260 / 0.3e1 + t1214 + t1257;
	t1315 = -0.8e1 / 0.3e1 * t1460 + t1271 * t1184 - 0.5e1 / 0.3e1 * t1265 + t1349 * t1267 + t1273 * t1347;
	t1459 = t1265 * t1189;
	t1481 = 4 * pkin(1);
	t1040 = t1069 * t1398 + t1082 * t1380 + t1315 * t1181 + (t1078 * t1180 - t1225 * t1459) * t1481;
	t1246 = 5 * t1265;
	t1254 = 6 * t1273;
	t1434 = t1239 - 0.2e1 * t1263;
	t1343 = t1254 + t1434;
	t1435 = t1237 + t1257;
	t1218 = -0.2e1 / 0.3e1 * t1263;
	t1439 = t1208 + t1218;
	t1070 = t1279 + (t1435 + t1439) * t1271 + t1246 + t1343 * t1267 + t1273 * (t1273 + t1439);
	t1250 = 0.5e1 * t1279;
	t1085 = t1250 + (t1237 + t1343) * t1271 + t1183 * (t1218 + t1344);
	t1052 = t1070 * t1181 - t1085 * t1484;
	t1251 = 0.3e1 * t1271;
	t1312 = t1267 + t1347;
	t1127 = t1251 + t1312;
	t1248 = 3 * t1267;
	t1171 = t1248 + t1426;
	t1128 = t1171 + t1515;
	t1071 = -t1127 * t1484 + t1128 * t1181;
	t1139 = t1221 + t1271 + t1440;
	t1086 = t1139 * t1421 + t1462 * t1484;
	t1386 = t1282 * t1181;
	t1324 = t1189 * t1386;
	t1399 = -0.4e1 * t1458;
	t1041 = t1086 * t1399 + (t1071 * t1410 - 0.8e1 * t1324) * pkin(1) + t1052;
	t1083 = -0.3e1 * t1279 + (t1197 + t1351) * t1271 + t1350 * t1267 + t1425;
	t1087 = -0.5e1 / 0.3e1 * t1279 + (-t1267 + t1349) * t1271 + t1273 * t1312;
	t1412 = -0.2e1 * t1484;
	t1053 = t1083 * t1181 + t1087 * t1412;
	t1346 = t1207 - t1263 / 0.2e1 + t1273;
	t1124 = 0.3e1 / 0.2e1 * t1271 + t1248 + t1346;
	t1387 = t1267 * t1181;
	t1299 = -t1225 * t1282 + t1387;
	t1131 = 0.4e1 * t1299;
	t1143 = t1181 + 0.2e1 * t1484;
	t1491 = pkin(1) * t1228;
	t1054 = t1185 * t1181 + t1131 * t1190 + (t1124 * t1225 + t1143 * t1491) * t1480;
	t1126 = t1251 + 0.3e1 / 0.2e1 * t1267 + t1346;
	t1084 = t1126 * t1181 + t1186 * t1484 / 0.2e1;
	t1307 = 0.24e2 * t1176 * t1460 - t1268 - ((21 * t1267) + t1514) * t1279 - (t1434 * t1273 + t1152 + t1252 + (35 * t1265)) * t1271 - t1183 * (t1245 + (t1253 + t1433) * t1267 + t1273 * (-t1263 - t1429));
	t1326 = 0.8e1 * t1366;
	t1374 = -0.12e2 * t1457;
	t1400 = -0.6e1 * t1458;
	t1029 = t1084 * t1328 + t1054 * t1326 + t1040 * t1374 + t1053 * t1400 + (-0.6e1 * t1052 * t1491 + t1517 * t1225) * pkin(3) + (0.6e1 * t1041 * t1477 + t1307 * t1226) * pkin(2);
	t1488 = pkin(2) * t1229;
	t1160 = pkin(1) - t1488;
	t1130 = t1160 + t1180;
	t1340 = -t1260 + t1426;
	t1311 = t1267 + t1340;
	t1146 = -t1263 + t1311;
	t1409 = pkin(1) * t1488;
	t1165 = -0.2e1 * t1409;
	t1109 = t1165 + t1146;
	t1089 = t1148 + t1109;
	t1144 = t1160 * t1228;
	t1166 = t1194 - 0.4e1 * t1456;
	t1242 = 0.2e1 * t1263;
	t1396 = 0.2e1 * t1457;
	t1427 = -t1271 + t1273;
	t1112 = t1165 + t1396 + t1427;
	t1478 = t1112 * t1190;
	t1498 = -pkin(4) + pkin(5);
	t1499 = -pkin(4) - pkin(5);
	t1274 = sqrt(t1166 * t1193 + 0.4e1 * t1146 * t1409 - t1265 - (t1273 + (pkin(2) - t1499) * (pkin(2) + t1499)) * (t1273 + (pkin(2) - t1498) * (pkin(2) + t1498)) + (t1242 + t1258 + 0.2e1 * t1260 - 0.6e1 * t1271 - 0.4e1 * t1478) * t1267 + (-t1089 * t1144 + t1109 * t1155) * t1521);
	t1023 = t1025 * t1130 + t1029 * t1274;
	t1108 = t1165 + t1263 + t1311;
	t1384 = t1112 * t1180;
	t1064 = t1108 * t1160 + 0.2e1 * t1384;
	t1487 = pkin(3) * t1160;
	t1065 = t1108 * t1228 + (0.4e1 * t1190 - 0.2e1) * t1487;
	t1442 = -t1155 + t1144;
	t1100 = pkin(3) + t1442;
	t1036 = t1064 * t1225 + t1065 * t1181 + t1100 * t1274;
	t1145 = t1248 + t1263 + t1340;
	t1090 = t1145 + t1165 + t1319;
	t1147 = t1155 - pkin(3);
	t1504 = -0.2e1 * t1229;
	t1423 = pkin(1) * t1504;
	t1467 = t1228 * t1226;
	t1388 = pkin(2) * t1467;
	t1102 = t1160 * t1225 + t1388;
	t1479 = t1102 * t1274;
	t1035 = -t1090 * t1144 + t1479 + (t1145 * t1469 + t1147 * t1423) * pkin(2) + (-t1153 - t1251 + t1396 - 0.2e1 * t1478) * pkin(3);
	t1093 = -0.4e1 / 0.9e1 * t1334 + t1273 + t1271 / 0.3e1 + t1220 + t1263 / 0.9e1 - t1260 / 0.9e1;
	t1101 = t1263 / 0.6e1 + t1204 + t1298;
	t1048 = t1175 * t1148 + 0.6e1 * t1093 * t1458 + t1129 * t1463 + (t1101 * t1180 + t1474) * t1481;
	t1059 = t1129 * t1319 + (t1247 + t1345) * t1271 + t1444;
	t1099 = t1148 + t1129;
	t1167 = t1427 * t1502;
	t1370 = 0.4e1 * t1408;
	t1049 = t1099 * t1370 + t1167 * t1190 + t1059;
	t1074 = t1129 * t1462 + t1114;
	t1111 = t1163 + t1516;
	t1034 = -0.8e1 * t1111 * t1366 + t1134 + t1074 * t1375 + t1059 * t1369 + t1268 + (-t1260 + t1263 + t1436) * t1279 + t1178 * t1153 + (0.12e2 * t1048 * t1193 + t1235 + (t1238 + t1241 + 0.6e1 * t1263) * t1267 + t1252 + (t1239 + t1242) * t1273) * t1271 + 0.6e1 * (-t1049 * t1477 - t1077 * t1381) * pkin(2);
	t1135 = t1171 * t1181;
	t1142 = t1181 - t1484;
	t1325 = t1190 * t1387;
	t1169 = t1251 + t1183;
	t1476 = t1169 * t1225;
	t1060 = -0.2e1 * t1325 + t1135 + (0.2e1 * t1142 * t1491 - t1476) * pkin(3);
	t1132 = 0.2e1 * t1299;
	t1182 = (2 * t1267) + t1271;
	t1063 = t1182 * t1484 + t1132 * t1190 + (t1184 + t1163) * t1181;
	t1092 = -pkin(3) * t1476 + t1135;
	t1168 = pkin(2) * t1503 + 0.8e1 * t1267 * t1278;
	t1364 = t1282 * t1462;
	t1094 = t1168 * t1226 + 0.4e1 * t1225 * t1364;
	t1110 = t1435 * t1271 + t1246 + t1424 + (6 * t1454);
	t1119 = t1250 + (t1237 + t1254) * t1271 + t1178;
	t1397 = -0.4e1 * t1457;
	t1037 = t1063 * t1397 + t1094 * t1190 + (-0.4e1 * t1092 * t1491 + (t1119 + t1326) * t1225) * pkin(3) + (0.4e1 * t1060 * t1477 + (-t1110 + t1339) * t1226) * pkin(2);
	t1028 = t1034 * t1130 + t1037 * t1274;
	t1497 = 0.1e1 / t1028 / 0.4e1;
	t1361 = t1035 * t1497;
	t1493 = -t1274 / 0.4e1;
	t1296 = t1023 * t1361 + t1036 * t1493;
	t1383 = pkin(3) * t1144;
	t1075 = t1148 + t1165 + t1342 + 0.2e1 * t1383;
	t1072 = 0.1e1 / t1075;
	t1461 = 0.1e1 / pkin(5) / pkin(4) ^ 2;
	t1367 = t1072 * t1461;
	t1020 = t1296 * t1367;
	t1360 = t1036 * t1497;
	t1492 = t1274 / 0.4e1;
	t1297 = t1023 * t1360 + t1035 * t1492;
	t1021 = t1297 * t1367;
	t1466 = t1228 * t1229;
	t1117 = -t1466 - t1469;
	t1468 = t1225 * t1229;
	t1118 = -t1467 + t1468;
	t1016 = t1020 * t1118 - t1021 * t1117;
	t1453 = t1282 * t1190;
	t1371 = -0.24e2 * t1453;
	t1320 = t1225 * t1371;
	t1105 = t1176 * t1320 * t1488;
	t1385 = pkin(2) * t1466;
	t1335 = pkin(1) * t1385;
	t1301 = t1267 * t1225 * t1335;
	t1121 = -0.4e1 * t1301;
	t1138 = t1335 * t1480;
	t1490 = pkin(1) * t1265;
	t1308 = -0.64e2 * t1462 * t1490;
	t1368 = 0.32e2 / 0.3e1 * t1265;
	t1317 = t1189 * t1368;
	t1318 = 0.64e2 / 0.3e1 * t1140 * t1282;
	t1501 = -0.96e2 * t1176;
	t1322 = t1151 * t1282 * t1501;
	t1489 = pkin(1) * t1267;
	t1329 = -0.24e2 * t1151 * t1489;
	t1330 = -0.16e2 * t1141 * t1489;
	t1331 = -0.48e2 * t1079 * t1489;
	t1508 = -2 * pkin(3);
	t1336 = t1463 * t1508;
	t1486 = pkin(3) * t1175;
	t1337 = -0.4e1 * t1151 * t1486;
	t1164 = pkin(1) * t1421;
	t1464 = t1229 * t1271;
	t1362 = t1226 * t1464;
	t1116 = t1164 - 0.4e1 * t1362;
	t1390 = pkin(1) * t1225 * t1271;
	t1389 = pkin(2) * t1468;
	t1333 = pkin(3) * t1389;
	t1443 = -0.2e1 * t1333 + t1164;
	t1510 = -0.4e1 * pkin(2);
	t1042 = t1116 * t1399 + (pkin(1) * t1146 * t1510 + t1166 * t1504) * t1226 + (-t1443 * t1144 + 0.2e1 * t1226 ^ 2 * t1390 + (-t1089 * t1467 + t1109 * t1468) * pkin(2)) * t1521;
	t1044 = 0.1e1 / t1274;
	t1495 = t1044 / 0.2e1;
	t1355 = t1042 * t1495;
	t1470 = t1193 * t1278;
	t1365 = t1161 * t1470;
	t1372 = 0.24e2 * t1457;
	t1378 = -0.32e2 * t1472;
	t1404 = 0.8e1 * t1472;
	t1415 = pkin(3) * t1519;
	t1416 = -0.8e1 * pkin(3) * t1056;
	t1417 = 0.6e1 * t1488;
	t1420 = -0.8e1 * t1488;
	t1471 = t1192 * t1279;
	t1506 = -0.8e1 * t1130;
	t1507 = 0.8e1 * t1039;
	t1019 = t1029 * t1355 + (-0.32e2 * t1121 * t1130 + 0.8e1 * t1138 * t1274) * t1366 + (0.24e2 * (0.4e1 * t1107 * t1471 * t1484 + t1040 * t1464 - t1054 * t1365) * t1274 + t1130 * (-0.48e2 * t1038 * t1464 + 0.96e2 * t1050 * t1365 - 0.64e2 * t1068 * t1471)) * t1226 + ((t1025 + (-0.6e1 * t1041 * t1274 + t1130 * t1507) * t1161) * t1226 + (t1105 * t1161 * t1506 + ((t1123 * t1398 + t1125 * t1370 + t1315) * t1374 + t1126 * t1328 + t1083 * t1400 - 0.6e1 * t1070 * t1408 + (t1516 * t1404 + (t1128 * t1370 - 0.8e1 * t1139 * t1458 + t1070 - 0.8e1 * t1393) * t1417) * t1161 + t1307) * t1274 + ((-pkin(1) * t1317 - t1190 * t1318 + t1228 * t1330 + t1337) * t1372 + t1189 * t1308 + t1190 * t1322 + t1228 * t1331 + t1416 + ((t1336 - 0.4e1 * t1453) * t1378 + (t1228 * t1329 + t1415) * t1420) * t1161) * t1130 * t1225) * t1229) * pkin(2);
	t1373 = 0.12e2 * t1457;
	t1465 = t1228 * t1267;
	t1403 = -0.8e1 * t1465;
	t1509 = -4 * pkin(3);
	t1414 = t1129 * t1509;
	t1418 = 0.4e1 * t1488;
	t1422 = t1060 * t1510;
	t1024 = (t1138 * t1397 + (0.8e1 * t1063 * t1271 * t1226 + t1168 * t1190 + ((t1184 + 0.2e1 * t1458) * t1397 - t1110 + (-0.4e1 * t1171 * t1180 + t1406) * pkin(1)) * pkin(2)) * t1229 + ((t1138 + (t1171 - 0.2e1 * t1458) * t1488) * t1418 + (-0.24e2 * t1470 * t1484 + t1422) * t1226) * t1161) * t1274 + t1037 * t1355 + t1034 * t1181 + t1130 * (0.24e2 * t1111 * t1226 * t1365 + (t1121 + (-0.8e1 / 0.3e1 * t1453 - 0.2e1 * t1486) * t1389) * t1373 - 0.24e2 * t1048 * t1362 + t1105 + t1301 * t1518 + t1333 * t1520 + 0.6e1 * (-(pkin(1) * t1403 + t1414) * t1225 * t1457 + t1049 * t1181) * t1161);
	t1353 = t1100 * t1495;
	t1411 = 0.2e1 * t1180;
	t1485 = pkin(3) * t1190;
	t1030 = t1042 * t1353 + t1116 * t1225 * t1411 + ((-t1225 * t1274 + t1065) * t1229 + (t1228 * t1274 + (t1160 * t1511 + t1108) * t1225 + (-pkin(3) + 0.2e1 * t1485 + t1491) * t1421) * t1226) * pkin(2);
	t1352 = t1102 * t1495;
	t1031 = (t1155 + t1385) * t1274 + t1042 * t1352 - 0.2e1 * t1116 * t1485 - (t1164 - 0.4e1 * t1333) * t1144 - 0.2e1 * t1193 * t1390 + t1145 * t1389 + (t1464 * t1509 + (-t1090 * t1228 + t1147 * t1511) * pkin(2)) * t1226;
	t1332 = pkin(3) * t1388;
	t1091 = 0.2e1 * t1332 + t1443;
	t1073 = 0.1e1 / t1075 ^ 2;
	t1293 = t1073 * t1297;
	t1357 = t1035 * t1044 / 0.8e1;
	t1496 = -0.1e1 / t1028 ^ 2 / 0.4e1;
	t1358 = t1036 * t1496;
	t1447 = (-t1091 * t1293 + (t1031 * t1492 + t1042 * t1357 + t1019 * t1360 + (t1024 * t1358 + t1030 * t1497) * t1023) * t1072) * t1461 - t1020;
	t1292 = t1073 * t1296;
	t1356 = -t1036 * t1044 / 0.8e1;
	t1359 = t1035 * t1496;
	t1448 = (-t1091 * t1292 + (t1019 * t1361 + t1030 * t1493 + t1042 * t1356 + (t1024 * t1359 + t1031 * t1497) * t1023) * t1072) * t1461 + t1021;
	t1451 = t1448 * t1117 + t1447 * t1118 + t1016;
	t1017 = t1020 * t1117 + t1021 * t1118;
	t1452 = -t1447 * t1117 + t1448 * t1118 - t1017;
	t1512 = t1451 * t1226 - t1452 * t1229;
	t1505 = -0.2e1 * t1228;
	t1500 = pkin(1) * pkin(3);
	t1483 = -6 * t1500;
	t1482 = -4 * t1500;
	t1309 = pkin(1) * t1325;
	t1137 = -0.4e1 * t1309;
	t1162 = pkin(1) * t1412;
	t1187 = t1225 ^ 2;
	t1310 = pkin(1) * t1190 * t1386;
	t1316 = t1189 * t1364;
	t1391 = pkin(1) * t1453;
	t1327 = -0.48e2 * t1391;
	t1392 = pkin(1) * t1458;
	t1338 = 0.4e1 * t1392;
	t1402 = 0.8e1 * t1465;
	t1413 = 0.4e1 * t1487;
	t1046 = (t1089 * t1413 + t1112 * t1402) * t1225 + (t1109 * t1410 + 0.8e1 * t1160 * t1458) * t1181;
	t1354 = t1046 * t1495;
	t1363 = t1225 * t1465;
	t1376 = -0.32e2 * t1459;
	t1377 = -0.24e2 * t1465;
	t1382 = pkin(3) * t1472;
	t1394 = pkin(1) * t1460;
	t1405 = -0.8e1 * t1472;
	t1407 = -0.4e1 * t1474;
	t1419 = -0.6e1 * t1488;
	t1445 = pkin(1) * t1186 * t1320 - 0.24e2 * t1176 * t1324;
	t1018 = ((t1124 * t1411 + t1338 + t1407) * t1326 + (0.12e2 * t1187 * t1190 * t1490 + t1122 * t1407 - 0.2e1 * t1170 * t1392 - 0.4e1 * t1394) * t1374 + 0.8e1 * t1186 * t1394 + 0.12e2 * t1087 * t1474 + 0.6e1 * t1085 * t1392 + (-t1082 * t1374 / 0.2e1 + t1517) * t1180) * t1274 + t1029 * t1354 + t1130 * t1137 * t1321 + ((0.6e1 * (-t1085 * t1180 - 0.4e1 * t1127 * t1392 - 0.4e1 * t1316) * t1274 + t1445 * t1506) * t1477 + ((-pkin(1) * t1188 * t1368 - t1189 * t1318 + t1190 * t1330 + t1228 * t1337) * t1372 + t1188 * t1308 + t1189 * t1322 + t1190 * t1331 + t1228 * t1416 + ((t1228 * t1336 + t1407) * t1378 + (t1190 * t1329 + t1228 * t1415) * t1420) * t1161) * t1130 * t1226) * pkin(2) + (-pkin(3) * t1025 + t1130 * (0.16e2 * (t1174 * t1505 - t1159 + t1327 + t1376) * t1473 + (pkin(1) * t1371 + t1098 * t1505 + t1104 * t1482) * t1321 + 0.32e2 * t1050 * t1382 + (-0.28e2 * t1057 * t1465 + t1058 * t1483 + t1106 * t1327 + t1177 * t1376) * t1372 + (t1062 * t1483 + t1076 * t1377) * t1161 * t1420 + pkin(3) * t1488 * t1507 - 0.4e1 * t1136 * t1189 - 0.96e2 * t1080 * t1391 - 0.48e2 * t1051 * t1465 - 0.8e1 * t1047 * t1500) + ((t1069 * t1403 + t1317 * t1181) * t1374 + t1459 * t1181 * t1501 + t1084 * t1327 + 0.12e2 * t1053 * t1465 + (t1041 * t1419 + t1054 * t1405 + (-0.24e2 * t1162 + 0.64e2 * t1363) * t1473 + (0.48e2 * t1078 * t1457 + 0.6e1 * t1052) * pkin(1)) * pkin(3) + (0.2e1 * (-t1131 * t1228 - t1143 * t1500) * t1404 + (t1071 * t1482 + t1086 * t1402 + 0.24e2 * t1310) * t1417) * t1161) * t1274) * t1225;
	t1395 = 0.8e1 * t1457;
	t1022 = (t1187 * t1267 * t1405 + (t1182 * t1180 - 0.2e1 * t1474) * t1397 + 0.4e1 * t1316 + t1169 * t1338 + t1119 * t1180) * t1274 + t1037 * t1354 + t1130 * ((-0.8e1 / 0.3e1 * t1324 + t1137 - 0.2e1 * t1175 * t1332) * t1373 + t1309 * t1518 + t1332 * t1520 + t1445) + ((t1132 * t1228 * t1395 + t1094 * t1505 - 0.24e2 * t1310) * t1274 + t1130 * (0.12e2 * (-t1093 * t1465 - t1391) * t1373 + t1074 * t1377) + (t1229 * t1274 * t1422 - t1034 + t1130 * (t1049 * t1417 + t1111 * t1404) + ((t1395 * t1181 + 0.4e1 * t1092) * t1274 + t1130 * (-0.48e2 * t1101 * t1457 - 0.6e1 * t1059)) * pkin(1)) * pkin(3)) * t1225 + ((0.8e1 * t1228 * t1382 + ((-pkin(3) * t1169 + t1155 * t1502) * t1228 + (-t1142 * t1484 - t1458) * t1511) * t1418) * t1274 + t1130 * ((t1162 - 0.8e1 * t1363) * t1405 + ((-0.2e1 * t1167 * t1225 + t1414 * t1181) * t1228 + (-0.4e1 * t1099 * t1484 - 0.8e1 * t1325) * pkin(1)) * t1419)) * t1161;
	t1032 = -t1479 + t1046 * t1353 + t1112 * t1187 * t1508 + t1064 * t1228 + (-t1108 - 0.8e1 * t1383) * t1155;
	t1033 = t1442 * t1274 + t1046 * t1352 + (t1160 * t1090 + 0.4e1 * t1384) * t1225 + (t1271 * t1228 * t1423 + (t1145 * t1228 + t1190 * t1413) * pkin(2)) * t1226;
	t1095 = t1102 * t1480;
	t1450 = (t1095 * t1292 + (t1018 * t1361 + t1032 * t1493 + t1046 * t1356 + (t1022 * t1359 + t1033 * t1497) * t1023) * t1072) * t1461 - t1021;
	t1449 = (t1095 * t1293 + (t1033 * t1492 + t1046 * t1357 + t1018 * t1360 + (t1022 * t1358 + t1032 * t1497) * t1023) * t1072) * t1461 + t1020;
	t1008 = -t1449 * t1117 + t1450 * t1118;
	t1009 = t1450 * t1117 + t1449 * t1118;
	t1305 = t1008 * t1229 - t1009 * t1226;
	t1304 = t1008 * t1226 + t1009 * t1229;
	t1303 = t1016 * t1229 - t1017 * t1226;
	t1302 = t1016 * t1226 + t1017 * t1229;
	t1294 = t1452 * t1226 + t1451 * t1229;
	t1230 = cos(qJ(1));
	t1227 = sin(qJ(1));
	t1 = [-t1302 * t1227, t1294 * t1230, t1304 * t1230, 0, 0, 0; t1302 * t1230, t1294 * t1227, t1304 * t1227, 0, 0, 0; 0, t1512, -t1305, 0, 0, 0; -t1303 * t1227, -t1512 * t1230, t1305 * t1230, 0, 0, 0; t1303 * t1230, -t1512 * t1227, t1305 * t1227, 0, 0, 0; 0, t1294, t1304, 0, 0, 0; t1230, 0, 0, 0, 0, 0; t1227, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0;];
	JR_rot = t1;
elseif link_index == 4
	%% Symbolic Calculation
	% From jacobiR_rot_4_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-11 19:22:49
	% EndTime: 2020-04-11 19:22:49
	% DurationCPUTime: 0.02s
	% Computational Cost: add. (7->7), mult. (8->4), div. (0->0), fcn. (20->4), ass. (0->9)
	t8 = sin(qJ(3));
	t9 = sin(qJ(1));
	t15 = t9 * t8;
	t11 = cos(qJ(1));
	t14 = t11 * t8;
	t10 = cos(qJ(3));
	t13 = t9 * t10;
	t12 = t11 * t10;
	t1 = [-t13, 0, -t14, 0, 0, 0; t12, 0, -t15, 0, 0, 0; 0, 0, t10, 0, 0, 0; t15, 0, -t12, 0, 0, 0; -t14, 0, -t13, 0, 0, 0; 0, 0, -t8, 0, 0, 0; t11, 0, 0, 0, 0, 0; t9, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0;];
	JR_rot = t1;
elseif link_index == 5
	%% Symbolic Calculation
	% From jacobiR_rot_5_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-11 19:22:52
	% EndTime: 2020-04-11 19:22:54
	% DurationCPUTime: 0.83s
	% Computational Cost: add. (6480->119), mult. (14566->224), div. (136->4), fcn. (3786->8), ass. (0->110)
	t263 = sin(qJ(3));
	t264 = sin(qJ(2));
	t317 = t263 * t264;
	t255 = pkin(2) * t317;
	t293 = pkin(3) * t255;
	t254 = -0.2e1 * t293;
	t273 = pkin(3) ^ 2;
	t274 = pkin(2) ^ 2;
	t267 = cos(qJ(2));
	t325 = pkin(2) * t267;
	t256 = pkin(1) - t325;
	t266 = cos(qJ(3));
	t250 = t256 * t266;
	t300 = pkin(3) * t250;
	t305 = pkin(1) * t325;
	t258 = -0.2e1 * t305;
	t275 = pkin(1) ^ 2;
	t308 = t258 + t275;
	t239 = t254 + t273 + t274 + 0.2e1 * t300 + t308;
	t237 = 0.1e1 / t239;
	t271 = pkin(4) ^ 2;
	t307 = -pkin(5) ^ 2 + t275;
	t298 = t274 + t307;
	t251 = 0.3e1 * t273 + t271 + t298;
	t241 = t251 + t258 - 0.4e1 * t293;
	t315 = t264 * t266;
	t245 = pkin(2) * t315 + t256 * t263;
	t291 = t273 + t298;
	t252 = -t271 + t291;
	t247 = t258 + t252;
	t240 = t254 + t247;
	t259 = (t273 - t275) * t274;
	t262 = t267 ^ 2;
	t261 = t266 ^ 2;
	t335 = 0.2e1 * t262;
	t248 = t274 * t335 - t274 + t308;
	t337 = -0.2e1 * t248;
	t289 = t261 * t337 - t307;
	t333 = -pkin(4) + pkin(5);
	t334 = -pkin(4) - pkin(5);
	t276 = sqrt(0.4e1 * t259 * t262 + 0.4e1 * t252 * t305 - (t275 + (pkin(2) - t334) * (pkin(2) + t334)) * (t275 + (pkin(2) - t333) * (pkin(2) + t333)) + 0.4e1 * (-t240 * t250 + t247 * t255) * pkin(3) + (0.2e1 * t271 - 0.6e1 * t274 + 0.2e1 * t289 - t273) * t273);
	t319 = t248 * t266;
	t301 = pkin(3) * t319;
	t232 = 0.1e1 / t276;
	t318 = t261 * t273;
	t322 = pkin(3) * t266;
	t324 = pkin(3) * t256;
	t326 = pkin(2) * t264;
	t336 = 0.2e1 * t256;
	t304 = 0.2e1 * t232 * ((t240 * t324 + 0.2e1 * t273 * t319) * t263 + (t247 * t322 + t318 * t336) * t326);
	t306 = -0.2e1 * pkin(1) * t274;
	t309 = -t255 + t250;
	t313 = t266 * t267;
	t323 = pkin(3) * t261;
	t223 = t309 * t276 + t245 * t304 + (t256 * t241 + 0.4e1 * t301) * t263 + (t306 * t313 + (t251 * t266 + 0.4e1 * t256 * t323) * pkin(2)) * t264;
	t246 = t258 + t271 + t291;
	t235 = t246 * t256 + 0.2e1 * t301;
	t236 = t246 * t266 + (0.4e1 * t261 - 0.2e1) * t324;
	t244 = pkin(3) + t309;
	t229 = t235 * t263 + t236 * t326 + t244 * t276;
	t331 = -t229 / 0.2e1;
	t295 = t331 + t223 / 0.2e1;
	t294 = -0.8e1 * t300;
	t320 = t245 * t276;
	t222 = -t320 + t244 * t304 + t235 * t266 + ((-t246 + t294) * t326 + pkin(3) * t263 * t337) * t263;
	t327 = pkin(1) * (t255 - pkin(3));
	t228 = -t241 * t250 + t320 + (t251 * t317 - 0.2e1 * t267 * t327) * pkin(2) + (-t271 - t273 + (t335 - 0.3e1) * t274 + t289) * pkin(3);
	t332 = -t228 / 0.2e1;
	t296 = t332 - t222 / 0.2e1;
	t342 = (t295 * t263 - t296 * t266) * t237;
	t238 = 0.1e1 / t239 ^ 2;
	t329 = -t266 / 0.2e1;
	t286 = t229 * t329 + t263 * t332;
	t341 = t238 * t286;
	t260 = pkin(1) * t326;
	t257 = 0.2e1 * t260;
	t303 = -0.4e1 * t267 * t274;
	t249 = t264 * t303 + t257;
	t316 = t263 * t267;
	t302 = pkin(2) * t316;
	t292 = pkin(3) * t302;
	t338 = -0.4e1 * pkin(2);
	t297 = (-0.4e1 * t249 * t318 + (t260 - t292) * t294 + 0.4e1 * t247 * t292 + (t240 * t322 * t338 - 0.8e1 * t259 * t267 + (0.8e1 * pkin(3) * t274 * t317 + t252 * t338) * pkin(1)) * t264) * t232 / 0.2e1;
	t220 = t244 * t297 + 0.2e1 * t249 * t263 * t322 + ((-t263 * t276 + t236) * t267 + (t266 * t276 + (pkin(1) * t336 + t246) * t263 + 0.2e1 * (pkin(1) * t266 - pkin(3) + 0.2e1 * t323) * t326) * t264) * pkin(2);
	t221 = (pkin(2) * t313 + t255) * t276 + t245 * t297 - 0.2e1 * t249 * t323 - (t257 - 0.4e1 * t292) * t250 + t262 * t263 * t306 + t251 * t302 + (pkin(3) * t303 + (-t241 * t266 + 0.2e1 * t327) * pkin(2)) * t264;
	t328 = t266 / 0.2e1;
	t330 = t263 / 0.2e1;
	t340 = (t220 * t328 + t221 * t330) * t237;
	t272 = 0.1e1 / pkin(4);
	t321 = t237 * t272;
	t265 = sin(qJ(1));
	t314 = t265 * t272;
	t268 = cos(qJ(1));
	t312 = t268 * t272;
	t290 = t321 * t328;
	t299 = t263 * t321;
	t311 = (t228 * t290 + t299 * t331) * t265;
	t310 = (t229 * t290 + t228 * t299 / 0.2e1) * t268;
	t287 = t228 * t329 + t229 * t330;
	t285 = -0.2e1 * t341;
	t284 = -0.2e1 * t238 * t287;
	t283 = 0.2e1 * t341;
	t243 = t245 * pkin(3);
	t282 = t243 * t284;
	t281 = t243 * t283;
	t242 = t260 + (t315 - t316) * pkin(3) * pkin(2);
	t280 = t272 * (t242 * t283 + t340);
	t279 = ((t220 * t330 + t221 * t329) * t237 + t242 * t284) * t272;
	t278 = (-t282 + (-t296 * t263 - t295 * t266) * t237) * t272;
	t1 = [t311, t268 * t279, ((t222 * t330 + t223 * t329) * t237 - t282) * t312 + t310, 0, 0, 0; t287 * t237 * t312, t265 * t279, t265 * t278, 0, 0, 0; 0, (t242 * t285 - t340) * t272, (-t243 * t285 - t342) * t272, 0, 0, 0; t286 * t237 * t314, t268 * t280, (-t281 + t342) * t312, 0, 0, 0; t310, t265 * t280, ((t222 * t328 + t223 * t330) * t237 - t281) * t314 + t311, 0, 0, 0; 0, t279, t278, 0, 0, 0; t268, 0, 0, 0, 0, 0; t265, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0;];
	JR_rot = t1;
elseif link_index == 6
	%% Symbolic Calculation
	% From jacobiR_rot_6_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-11 19:22:53
	% EndTime: 2020-04-11 19:22:55
	% DurationCPUTime: 1.38s
	% Computational Cost: add. (14710->138), mult. (32840->262), div. (320->4), fcn. (8542->10), ass. (0->130)
	t320 = cos(qJ(2));
	t378 = pkin(2) * t320;
	t360 = pkin(1) * t378;
	t309 = -0.2e1 * t360;
	t324 = pkin(4) ^ 2;
	t326 = pkin(3) ^ 2;
	t327 = pkin(2) ^ 2;
	t328 = pkin(1) ^ 2;
	t362 = -pkin(5) ^ 2 + t328;
	t352 = t327 + t362;
	t344 = t326 + t352;
	t297 = t309 + t324 + t344;
	t319 = cos(qJ(3));
	t312 = t319 ^ 2;
	t307 = pkin(1) - t378;
	t377 = pkin(3) * t307;
	t287 = t297 * t319 + (0.4e1 * t312 - 0.2e1) * t377;
	t301 = t307 * t319;
	t315 = sin(qJ(3));
	t316 = sin(qJ(2));
	t370 = t315 * t316;
	t306 = pkin(2) * t370;
	t364 = -t306 + t301;
	t295 = pkin(3) + t364;
	t379 = pkin(2) * t316;
	t311 = pkin(1) * t379;
	t308 = 0.2e1 * t311;
	t358 = -0.4e1 * t320 * t327;
	t300 = t316 * t358 + t308;
	t303 = -t324 + t344;
	t298 = t309 + t303;
	t346 = pkin(3) * t306;
	t305 = -0.2e1 * t346;
	t291 = t305 + t298;
	t310 = (t326 - t328) * t327;
	t313 = t320 ^ 2;
	t363 = t309 + t328;
	t387 = 0.2e1 * t313;
	t299 = t327 * t387 - t327 + t363;
	t389 = -0.2e1 * t299;
	t342 = t312 * t389 - t362;
	t385 = -pkin(4) + pkin(5);
	t386 = -pkin(4) - pkin(5);
	t329 = sqrt(0.4e1 * t310 * t313 + 0.4e1 * t303 * t360 - (t328 + (pkin(2) - t386) * (pkin(2) + t386)) * (t328 + (pkin(2) - t385) * (pkin(2) + t385)) + 0.4e1 * (-t291 * t301 + t298 * t306) * pkin(3) + (0.2e1 * t324 - 0.6e1 * t327 + 0.2e1 * t342 - t326) * t326);
	t283 = 0.1e1 / t329;
	t369 = t315 * t320;
	t357 = pkin(2) * t369;
	t345 = pkin(3) * t357;
	t355 = pkin(3) * t301;
	t347 = -0.8e1 * t355;
	t371 = t312 * t326;
	t375 = pkin(3) * t319;
	t391 = -0.4e1 * pkin(2);
	t351 = (-0.4e1 * t300 * t371 + (t311 - t345) * t347 + 0.4e1 * t298 * t345 + (t291 * t375 * t391 - 0.8e1 * t310 * t320 + (0.8e1 * pkin(3) * t327 * t370 + t303 * t391) * pkin(1)) * t316) * t283 / 0.2e1;
	t376 = pkin(3) * t312;
	t388 = 0.2e1 * t307;
	t265 = t295 * t351 + 0.2e1 * t300 * t315 * t375 + ((-t315 * t329 + t287) * t320 + (t319 * t329 + (pkin(1) * t388 + t297) * t315 + 0.2e1 * (pkin(1) * t319 - pkin(3) + 0.2e1 * t376) * t379) * t316) * pkin(2);
	t302 = 0.3e1 * t326 + t324 + t352;
	t292 = t302 + t309 - 0.4e1 * t346;
	t368 = t316 * t319;
	t296 = pkin(2) * t368 + t307 * t315;
	t361 = -0.2e1 * pkin(1) * t327;
	t366 = t319 * t320;
	t380 = pkin(1) * (t306 - pkin(3));
	t268 = (pkin(2) * t366 + t306) * t329 + t296 * t351 - 0.2e1 * t300 * t376 - (t308 - 0.4e1 * t345) * t301 + t313 * t315 * t361 + t302 * t357 + (pkin(3) * t358 + (-t292 * t319 + 0.2e1 * t380) * pkin(2)) * t316;
	t290 = t305 + t326 + t327 + 0.2e1 * t355 + t363;
	t288 = 0.1e1 / t290;
	t381 = t319 / 0.2e1;
	t383 = t315 / 0.2e1;
	t392 = (t265 * t381 + t268 * t383) * t288;
	t289 = 0.1e1 / t290 ^ 2;
	t390 = 0.2e1 * t289;
	t384 = -t315 / 0.2e1;
	t382 = -t319 / 0.2e1;
	t325 = 0.1e1 / pkin(4);
	t374 = t288 * t325;
	t373 = t296 * t329;
	t372 = t299 * t319;
	t279 = -t292 * t301 + t373 + (t302 * t370 - 0.2e1 * t320 * t380) * pkin(2) + (-t324 - t326 + (t387 - 0.3e1) * t327 + t342) * pkin(3);
	t367 = t319 * t279;
	t321 = cos(qJ(1));
	t365 = t321 * t325;
	t343 = t374 * t383;
	t356 = pkin(3) * t372;
	t286 = t297 * t307 + 0.2e1 * t356;
	t280 = t286 * t315 + t287 * t379 + t295 * t329;
	t350 = t280 * t381;
	t353 = t288 * t365;
	t264 = t321 * t279 * t343 + t350 * t353;
	t267 = t280 * t343 - t367 * t374 / 0.2e1;
	t359 = 0.2e1 * t283 * ((t291 * t377 + 0.2e1 * t326 * t372) * t315 + (t298 * t375 + t371 * t388) * t379);
	t317 = sin(qJ(1));
	t354 = t317 * t374;
	t269 = -t373 + t295 * t359 + t286 * t319 + ((-t297 + t347) * t379 + pkin(3) * t315 * t389) * t315;
	t349 = t269 / 0.2e1 + t279 / 0.2e1;
	t270 = t364 * t329 + t296 * t359 + (t292 * t307 + 0.4e1 * t356) * t315 + (t361 * t366 + (t302 * t319 + 0.4e1 * t307 * t376) * pkin(2)) * t316;
	t348 = t280 / 0.2e1 - t270 / 0.2e1;
	t338 = t367 / 0.2e1 + t280 * t384;
	t261 = t338 * t354;
	t337 = t279 * t383 + t350;
	t262 = t337 * t354;
	t314 = sin(qJ(4));
	t318 = cos(qJ(4));
	t341 = t261 * t318 - t262 * t314;
	t340 = t261 * t314 + t262 * t318;
	t336 = -0.2e1 * t289 * t337;
	t335 = t338 * t390;
	t334 = t337 * t390;
	t294 = t296 * pkin(3);
	t333 = t294 * t335;
	t293 = t311 + (t368 - t369) * pkin(3) * pkin(2);
	t332 = t325 * (t293 * t336 + t392);
	t258 = ((t265 * t383 + t268 * t382) * t288 + t293 * t335) * t325;
	t331 = t325 * (-t294 * t336 + (-t348 * t315 + t349 * t319) * t288);
	t252 = (-t333 + (t349 * t315 + t348 * t319) * t288) * t325;
	t266 = t337 * t374;
	t263 = t338 * t353;
	t260 = -t263 * t318 + t264 * t314;
	t259 = t263 * t314 + t264 * t318;
	t257 = (t293 * t334 - t392) * t325;
	t256 = t321 * t332;
	t255 = t321 * t258;
	t254 = t317 * t332;
	t253 = t317 * t258;
	t251 = ((t269 * t382 + t270 * t384) * t288 - t294 * t334) * t325 + t267;
	t250 = t321 * t331;
	t249 = ((t269 * t383 + t270 * t382) * t288 - t333) * t365 + t264;
	t248 = t317 * t331;
	t247 = t317 * t252;
	t1 = [t341, t255 * t318 + t256 * t314, t249 * t318 + t250 * t314, t259, 0, 0; t260, t253 * t318 + t254 * t314, t247 * t318 + t248 * t314, t340, 0, 0; 0, t257 * t318 + t258 * t314, t251 * t318 + t252 * t314, t266 * t314 + t267 * t318, 0, 0; -t340, -t255 * t314 + t256 * t318, -t249 * t314 + t250 * t318, -t260, 0, 0; t259, -t253 * t314 + t254 * t318, -t247 * t314 + t248 * t318, t341, 0, 0; 0, -t257 * t314 + t258 * t318, -t251 * t314 + t252 * t318, t266 * t318 - t267 * t314, 0, 0; t321, 0, 0, 0, 0, 0; t317, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0;];
	JR_rot = t1;
elseif link_index == 7
	%% Symbolic Calculation
	% From jacobiR_rot_7_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-11 19:23:06
	% EndTime: 2020-04-11 19:23:09
	% DurationCPUTime: 2.10s
	% Computational Cost: add. (23818->156), mult. (52972->290), div. (528->4), fcn. (13794->12), ass. (0->144)
	t544 = cos(qJ(2));
	t602 = pkin(2) * t544;
	t582 = pkin(1) * t602;
	t531 = -0.2e1 * t582;
	t548 = pkin(4) ^ 2;
	t550 = pkin(3) ^ 2;
	t551 = pkin(2) ^ 2;
	t552 = pkin(1) ^ 2;
	t584 = -pkin(5) ^ 2 + t552;
	t574 = t551 + t584;
	t566 = t550 + t574;
	t519 = t531 + t548 + t566;
	t529 = pkin(1) - t602;
	t585 = t531 + t552;
	t535 = t544 ^ 2;
	t611 = 0.2e1 * t535;
	t521 = t551 * t611 - t551 + t585;
	t543 = cos(qJ(3));
	t596 = t521 * t543;
	t579 = pkin(3) * t596;
	t508 = t529 * t519 + 0.2e1 * t579;
	t534 = t543 ^ 2;
	t601 = pkin(3) * t529;
	t509 = t519 * t543 + (0.4e1 * t534 - 0.2e1) * t601;
	t523 = t529 * t543;
	t538 = sin(qJ(3));
	t539 = sin(qJ(2));
	t594 = t538 * t539;
	t528 = pkin(2) * t594;
	t586 = -t528 + t523;
	t517 = pkin(3) + t586;
	t525 = -t548 + t566;
	t520 = t531 + t525;
	t568 = pkin(3) * t528;
	t527 = -0.2e1 * t568;
	t513 = t527 + t520;
	t532 = (t550 - t552) * t551;
	t613 = -0.2e1 * t521;
	t564 = t534 * t613 - t584;
	t609 = -pkin(4) + pkin(5);
	t610 = -pkin(4) - pkin(5);
	t553 = sqrt(0.4e1 * t532 * t535 + 0.4e1 * t525 * t582 - (t552 + (pkin(2) - t610) * (pkin(2) + t610)) * (t552 + (pkin(2) - t609) * (pkin(2) + t609)) + 0.4e1 * (-t513 * t523 + t520 * t528) * pkin(3) + (0.2e1 * t548 - 0.6e1 * t551 + 0.2e1 * t564 - t550) * t550);
	t603 = pkin(2) * t539;
	t502 = t508 * t538 + t509 * t603 + t517 * t553;
	t524 = 0.3e1 * t550 + t548 + t574;
	t514 = t524 + t531 - 0.4e1 * t568;
	t592 = t539 * t543;
	t518 = pkin(2) * t592 + t538 * t529;
	t597 = t518 * t553;
	t604 = pkin(1) * (t528 - pkin(3));
	t501 = -t514 * t523 + t597 + (t524 * t594 - 0.2e1 * t544 * t604) * pkin(2) + (-t548 - t550 + (t611 - 0.3e1) * t551 + t564) * pkin(3);
	t591 = t543 * t501;
	t608 = -t538 / 0.2e1;
	t562 = t591 / 0.2e1 + t502 * t608;
	t540 = sin(qJ(1));
	t578 = pkin(3) * t523;
	t512 = t527 + t550 + t551 + 0.2e1 * t578 + t585;
	t510 = 0.1e1 / t512;
	t549 = 0.1e1 / pkin(4);
	t598 = t510 * t549;
	t576 = t540 * t598;
	t483 = t562 * t576;
	t605 = t543 / 0.2e1;
	t572 = t502 * t605;
	t607 = t538 / 0.2e1;
	t561 = t501 * t607 + t572;
	t484 = t561 * t576;
	t537 = sin(qJ(4));
	t542 = cos(qJ(4));
	t476 = t483 * t542 - t484 * t537;
	t536 = sin(qJ(5));
	t541 = cos(qJ(5));
	t545 = cos(qJ(1));
	t618 = t476 * t536 + t545 * t541;
	t617 = t476 * t541 - t545 * t536;
	t533 = pkin(1) * t603;
	t530 = 0.2e1 * t533;
	t580 = -0.4e1 * t544 * t551;
	t522 = t539 * t580 + t530;
	t505 = 0.1e1 / t553;
	t593 = t538 * t544;
	t577 = pkin(2) * t593;
	t567 = pkin(3) * t577;
	t569 = -0.8e1 * t578;
	t595 = t534 * t550;
	t599 = pkin(3) * t543;
	t615 = -0.4e1 * pkin(2);
	t573 = (-0.4e1 * t522 * t595 + (t533 - t567) * t569 + 0.4e1 * t520 * t567 + (t513 * t599 * t615 - 0.8e1 * t532 * t544 + (0.8e1 * pkin(3) * t551 * t594 + t525 * t615) * pkin(1)) * t539) * t505 / 0.2e1;
	t600 = pkin(3) * t534;
	t612 = 0.2e1 * t529;
	t487 = t517 * t573 + 0.2e1 * t522 * t538 * t599 + ((-t538 * t553 + t509) * t544 + (t543 * t553 + (pkin(1) * t612 + t519) * t538 + 0.2e1 * (pkin(1) * t543 - pkin(3) + 0.2e1 * t600) * t603) * t539) * pkin(2);
	t583 = -0.2e1 * pkin(1) * t551;
	t590 = t543 * t544;
	t490 = (pkin(2) * t590 + t528) * t553 + t518 * t573 - 0.2e1 * t522 * t600 - (t530 - 0.4e1 * t567) * t523 + t535 * t538 * t583 + t524 * t577 + (pkin(3) * t580 + (-t514 * t543 + 0.2e1 * t604) * pkin(2)) * t539;
	t616 = (t487 * t605 + t490 * t607) * t510;
	t511 = 0.1e1 / t512 ^ 2;
	t614 = 0.2e1 * t511;
	t606 = -t543 / 0.2e1;
	t587 = t545 * t549;
	t565 = t598 * t607;
	t575 = t510 * t587;
	t486 = t545 * t501 * t565 + t572 * t575;
	t489 = t502 * t565 - t591 * t598 / 0.2e1;
	t581 = 0.2e1 * t505 * ((t513 * t601 + 0.2e1 * t550 * t596) * t538 + (t520 * t599 + t595 * t612) * t603);
	t491 = -t597 + t517 * t581 + t508 * t543 + ((-t519 + t569) * t603 + pkin(3) * t538 * t613) * t538;
	t571 = t491 / 0.2e1 + t501 / 0.2e1;
	t492 = t586 * t553 + t518 * t581 + (t529 * t514 + 0.4e1 * t579) * t538 + (t583 * t590 + (t524 * t543 + 0.4e1 * t529 * t600) * pkin(2)) * t539;
	t570 = t502 / 0.2e1 - t492 / 0.2e1;
	t477 = t483 * t537 + t484 * t542;
	t560 = -0.2e1 * t511 * t561;
	t559 = t562 * t614;
	t558 = t561 * t614;
	t516 = t518 * pkin(3);
	t557 = t516 * t559;
	t515 = t533 + (t592 - t593) * pkin(3) * pkin(2);
	t556 = t549 * (t515 * t560 + t616);
	t473 = ((t487 * t607 + t490 * t606) * t510 + t515 * t559) * t549;
	t555 = t549 * (-t516 * t560 + (-t570 * t538 + t571 * t543) * t510);
	t467 = (-t557 + (t571 * t538 + t570 * t543) * t510) * t549;
	t488 = t561 * t598;
	t485 = t562 * t575;
	t482 = -t488 * t542 + t489 * t537;
	t481 = t488 * t537 + t489 * t542;
	t480 = -t485 * t542 + t486 * t537;
	t479 = t485 * t537 + t486 * t542;
	t475 = t480 * t541 - t540 * t536;
	t474 = -t480 * t536 - t540 * t541;
	t472 = (t515 * t558 - t616) * t549;
	t471 = t545 * t556;
	t470 = t545 * t473;
	t469 = t540 * t556;
	t468 = t540 * t473;
	t466 = ((t491 * t606 + t492 * t608) * t510 - t516 * t558) * t549 + t489;
	t465 = t545 * t555;
	t464 = ((t491 * t607 + t492 * t606) * t510 - t557) * t587 + t486;
	t463 = t540 * t555;
	t462 = t540 * t467;
	t461 = t472 * t542 + t473 * t537;
	t460 = t470 * t542 + t471 * t537;
	t459 = t468 * t542 + t469 * t537;
	t458 = t466 * t542 + t467 * t537;
	t457 = t464 * t542 + t465 * t537;
	t456 = t462 * t542 + t463 * t537;
	t1 = [t617, t460 * t541, t457 * t541, t479 * t541, t474, 0; t475, t459 * t541, t456 * t541, t477 * t541, t618, 0; 0, t461 * t541, t458 * t541, t481 * t541, -t482 * t536, 0; -t618, -t460 * t536, -t457 * t536, -t479 * t536, -t475, 0; t474, -t459 * t536, -t456 * t536, -t477 * t536, t617, 0; 0, -t461 * t536, -t458 * t536, -t481 * t536, -t482 * t541, 0; -t477, -t470 * t537 + t471 * t542, -t464 * t537 + t465 * t542, -t480, 0, 0; t479, -t468 * t537 + t469 * t542, -t462 * t537 + t463 * t542, t476, 0, 0; 0, -t472 * t537 + t473 * t542, -t466 * t537 + t467 * t542, -t482, 0, 0;];
	JR_rot = t1;
elseif link_index == 8
	%% Symbolic Calculation
	% From jacobiR_rot_8_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-11 19:23:11
	% EndTime: 2020-04-11 19:23:19
	% DurationCPUTime: 3.58s
	% Computational Cost: add. (42900->179), mult. (95092->337), div. (968->4), fcn. (24782->14), ass. (0->159)
	t603 = cos(qJ(2));
	t663 = pkin(2) * t603;
	t641 = pkin(1) * t663;
	t588 = -0.2e1 * t641;
	t607 = pkin(4) ^ 2;
	t609 = pkin(3) ^ 2;
	t610 = pkin(2) ^ 2;
	t611 = pkin(1) ^ 2;
	t643 = -pkin(5) ^ 2 + t611;
	t633 = t610 + t643;
	t625 = t609 + t633;
	t575 = t588 + t607 + t625;
	t586 = pkin(1) - t663;
	t644 = t588 + t611;
	t592 = t603 ^ 2;
	t672 = 0.2e1 * t592;
	t577 = t610 * t672 - t610 + t644;
	t602 = cos(qJ(3));
	t656 = t577 * t602;
	t637 = pkin(3) * t656;
	t564 = t586 * t575 + 0.2e1 * t637;
	t591 = t602 ^ 2;
	t662 = pkin(3) * t586;
	t565 = t575 * t602 + (0.4e1 * t591 - 0.2e1) * t662;
	t579 = t586 * t602;
	t596 = sin(qJ(3));
	t597 = sin(qJ(2));
	t652 = t596 * t597;
	t584 = pkin(2) * t652;
	t645 = -t584 + t579;
	t573 = pkin(3) + t645;
	t581 = -t607 + t625;
	t576 = t588 + t581;
	t627 = pkin(3) * t584;
	t583 = -0.2e1 * t627;
	t569 = t583 + t576;
	t589 = (t609 - t611) * t610;
	t674 = -0.2e1 * t577;
	t623 = t591 * t674 - t643;
	t670 = -pkin(4) + pkin(5);
	t671 = -pkin(4) - pkin(5);
	t612 = sqrt(0.4e1 * t589 * t592 + 0.4e1 * t581 * t641 - (t611 + (pkin(2) - t671) * (pkin(2) + t671)) * (t611 + (pkin(2) - t670) * (pkin(2) + t670)) + 0.4e1 * (-t569 * t579 + t576 * t584) * pkin(3) + (0.2e1 * t607 - 0.6e1 * t610 + 0.2e1 * t623 - t609) * t609);
	t664 = pkin(2) * t597;
	t558 = t564 * t596 + t565 * t664 + t573 * t612;
	t580 = 0.3e1 * t609 + t607 + t633;
	t570 = t580 + t588 - 0.4e1 * t627;
	t650 = t597 * t602;
	t574 = pkin(2) * t650 + t596 * t586;
	t657 = t574 * t612;
	t665 = pkin(1) * (t584 - pkin(3));
	t557 = -t570 * t579 + t657 + (t580 * t652 - 0.2e1 * t603 * t665) * pkin(2) + (-t607 - t609 + (t672 - 0.3e1) * t610 + t623) * pkin(3);
	t649 = t602 * t557;
	t669 = -t596 / 0.2e1;
	t621 = t649 / 0.2e1 + t558 * t669;
	t598 = sin(qJ(1));
	t636 = pkin(3) * t579;
	t568 = t583 + t609 + t610 + 0.2e1 * t636 + t644;
	t566 = 0.1e1 / t568;
	t608 = 0.1e1 / pkin(4);
	t658 = t566 * t608;
	t635 = t598 * t658;
	t539 = t621 * t635;
	t666 = t602 / 0.2e1;
	t631 = t558 * t666;
	t668 = t596 / 0.2e1;
	t620 = t557 * t668 + t631;
	t540 = t620 * t635;
	t595 = sin(qJ(4));
	t601 = cos(qJ(4));
	t533 = t539 * t595 + t540 * t601;
	t593 = sin(qJ(6));
	t599 = cos(qJ(6));
	t532 = t539 * t601 - t540 * t595;
	t594 = sin(qJ(5));
	t600 = cos(qJ(5));
	t604 = cos(qJ(1));
	t678 = -t532 * t594 - t604 * t600;
	t682 = -t533 * t599 + t593 * t678;
	t681 = -t533 * t593 - t599 * t678;
	t528 = t532 * t600 - t604 * t594;
	t590 = pkin(1) * t664;
	t587 = 0.2e1 * t590;
	t639 = -0.4e1 * t603 * t610;
	t578 = t597 * t639 + t587;
	t561 = 0.1e1 / t612;
	t651 = t596 * t603;
	t638 = pkin(2) * t651;
	t626 = pkin(3) * t638;
	t628 = -0.8e1 * t636;
	t655 = t591 * t609;
	t660 = pkin(3) * t602;
	t676 = -0.4e1 * pkin(2);
	t632 = (-0.4e1 * t578 * t655 + (t590 - t626) * t628 + 0.4e1 * t576 * t626 + (t569 * t660 * t676 - 0.8e1 * t589 * t603 + (0.8e1 * pkin(3) * t610 * t652 + t581 * t676) * pkin(1)) * t597) * t561 / 0.2e1;
	t661 = pkin(3) * t591;
	t673 = 0.2e1 * t586;
	t543 = t573 * t632 + 0.2e1 * t578 * t596 * t660 + ((-t596 * t612 + t565) * t603 + (t602 * t612 + (pkin(1) * t673 + t575) * t596 + 0.2e1 * (pkin(1) * t602 - pkin(3) + 0.2e1 * t661) * t664) * t597) * pkin(2);
	t642 = -0.2e1 * pkin(1) * t610;
	t648 = t602 * t603;
	t546 = (pkin(2) * t648 + t584) * t612 + t574 * t632 - 0.2e1 * t578 * t661 - (t587 - 0.4e1 * t626) * t579 + t592 * t596 * t642 + t580 * t638 + (pkin(3) * t639 + (-t570 * t602 + 0.2e1 * t665) * pkin(2)) * t597;
	t677 = (t543 * t666 + t546 * t668) * t566;
	t567 = 0.1e1 / t568 ^ 2;
	t675 = 0.2e1 * t567;
	t667 = -t602 / 0.2e1;
	t544 = t620 * t658;
	t624 = t658 * t668;
	t545 = t558 * t624 - t649 * t658 / 0.2e1;
	t538 = -t544 * t601 + t545 * t595;
	t659 = t538 * t600;
	t654 = t593 * t594;
	t653 = t594 * t599;
	t646 = t604 * t608;
	t634 = t566 * t646;
	t542 = t604 * t557 * t624 + t631 * t634;
	t640 = 0.2e1 * t561 * ((t569 * t662 + 0.2e1 * t609 * t656) * t596 + (t576 * t660 + t655 * t673) * t664);
	t547 = -t657 + t573 * t640 + t564 * t602 + ((-t575 + t628) * t664 + pkin(3) * t596 * t674) * t596;
	t630 = t547 / 0.2e1 + t557 / 0.2e1;
	t548 = t645 * t612 + t574 * t640 + (t586 * t570 + 0.4e1 * t637) * t596 + (t642 * t648 + (t580 * t602 + 0.4e1 * t586 * t661) * pkin(2)) * t597;
	t629 = t558 / 0.2e1 - t548 / 0.2e1;
	t619 = -0.2e1 * t567 * t620;
	t618 = t621 * t675;
	t617 = t620 * t675;
	t572 = t574 * pkin(3);
	t616 = t572 * t618;
	t571 = t590 + (t650 - t651) * pkin(3) * pkin(2);
	t615 = t608 * (t571 * t619 + t677);
	t525 = ((t543 * t668 + t546 * t667) * t566 + t571 * t618) * t608;
	t614 = t608 * (-t572 * t619 + (-t629 * t596 + t630 * t602) * t566);
	t519 = (-t616 + (t630 * t596 + t629 * t602) * t566) * t608;
	t541 = t621 * t634;
	t537 = t544 * t595 + t545 * t601;
	t536 = -t541 * t601 + t542 * t595;
	t535 = t541 * t595 + t542 * t601;
	t530 = -t536 * t600 + t598 * t594;
	t529 = t536 * t594 + t598 * t600;
	t524 = (t571 * t617 - t677) * t608;
	t523 = t604 * t615;
	t522 = t604 * t525;
	t521 = t598 * t615;
	t520 = t598 * t525;
	t518 = ((t547 * t667 + t548 * t669) * t566 - t572 * t617) * t608 + t545;
	t517 = t604 * t614;
	t516 = ((t547 * t668 + t548 * t667) * t566 - t616) * t646 + t542;
	t515 = t598 * t614;
	t514 = t598 * t519;
	t513 = -t529 * t599 - t535 * t593;
	t512 = -t529 * t593 + t535 * t599;
	t511 = t524 * t601 + t525 * t595;
	t510 = -t524 * t595 + t525 * t601;
	t509 = t522 * t601 + t523 * t595;
	t508 = -t522 * t595 + t523 * t601;
	t507 = t520 * t601 + t521 * t595;
	t506 = -t520 * t595 + t521 * t601;
	t505 = t518 * t601 + t519 * t595;
	t504 = -t518 * t595 + t519 * t601;
	t503 = t516 * t601 + t517 * t595;
	t502 = -t516 * t595 + t517 * t601;
	t501 = t514 * t601 + t515 * t595;
	t500 = -t514 * t595 + t515 * t601;
	t1 = [t681, t508 * t593 + t509 * t653, t502 * t593 + t503 * t653, t535 * t653 - t536 * t593, -t530 * t599, t512; -t513, t506 * t593 + t507 * t653, t500 * t593 + t501 * t653, t532 * t593 + t533 * t653, -t528 * t599, -t682; 0, t510 * t593 + t511 * t653, t504 * t593 + t505 * t653, t537 * t653 - t538 * t593, t599 * t659, t537 * t599 - t538 * t654; t682, t508 * t599 - t509 * t654, t502 * t599 - t503 * t654, -t535 * t654 - t536 * t599, t530 * t593, t513; t512, t506 * t599 - t507 * t654, t500 * t599 - t501 * t654, t532 * t599 - t533 * t654, t528 * t593, t681; 0, t510 * t599 - t511 * t654, t504 * t599 - t505 * t654, -t537 * t654 - t538 * t599, -t593 * t659, -t537 * t593 - t538 * t653; -t528, -t509 * t600, -t503 * t600, -t535 * t600, t529, 0; t530, -t507 * t600, -t501 * t600, -t533 * t600, t678, 0; 0, -t511 * t600, -t505 * t600, -t537 * t600, t538 * t594, 0;];
	JR_rot = t1;
else
	JR_rot=NaN(9,6);
end