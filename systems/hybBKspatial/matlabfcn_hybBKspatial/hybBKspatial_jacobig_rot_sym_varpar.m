% Rotatorische Teilmatrix der geometrischen Jacobi-Matrix für beliebiges Segment von
% hybBKspatial
% Use Code from Maple symbolic Code Generation
%
% Geometrische Jacobi-Matrix: Differentieller Zusammenhang zwischen
% Endeffektorgeschwindigkeit und Geschw. der verallgemeinerten Koordinaten.
% 
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% link_index [1x1 uint8]
%   Index des Segmentes, auf dem der Punkt C liegt. (0=Basis).
%   Siehe auch: bsp_3T1R_fkine_fixb_rotmat_mdh_sym_varpar.m
% pkin [7x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[AB,AE,BC,CD,ED,L1,L2]';
% 
% Output:
% Jg_rot [3x6]
%   Rotatorische Teilmatrix der geometrischen Jacobi-Matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2020-04-11 19:31
% Revision: 6ae2d958c5b90587a0d08029b131cb7b66342a68 (2020-04-11)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function Jg_rot = hybBKspatial_jacobig_rot_sym_varpar(qJ, link_index, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),uint8(0),zeros(7,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'hybBKspatial_jacobig_rot_sym_varpar: qJ has to be [6x1] (double)');
assert(isa(link_index,'uint8') && all(size(link_index) == [1 1]), ...
	'hybBKspatial_jacobig_rot_sym_varpar: link_index has to be [1x1] uint8');
assert(isreal(pkin) && all(size(pkin) == [7 1]), ...
  'hybBKspatial_jacobig_rot_sym_varpar: pkin has to be [7x1] (double)');
if link_index == 0
	%% Symbolic Calculation
	% From jacobig_rot_0_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-11 19:22:49
	% EndTime: 2020-04-11 19:22:49
	% DurationCPUTime: 0.01s
	% Computational Cost: add. (0->0), mult. (0->0), div. (0->0), fcn. (0->0), ass. (0->1)
	t1 = [0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0;];
	Jg_rot = t1;
elseif link_index == 1
	%% Symbolic Calculation
	% From jacobig_rot_1_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-11 19:22:49
	% EndTime: 2020-04-11 19:22:49
	% DurationCPUTime: 0.01s
	% Computational Cost: add. (0->0), mult. (0->0), div. (0->0), fcn. (0->0), ass. (0->1)
	t1 = [0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0; 1, 0, 0, 0, 0, 0;];
	Jg_rot = t1;
elseif link_index == 2
	%% Symbolic Calculation
	% From jacobig_rot_2_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-11 19:22:49
	% EndTime: 2020-04-11 19:22:49
	% DurationCPUTime: 0.01s
	% Computational Cost: add. (1->1), mult. (0->0), div. (0->0), fcn. (2->2), ass. (0->1)
	t1 = [0, sin(qJ(1)), 0, 0, 0, 0; 0, -cos(qJ(1)), 0, 0, 0, 0; 1, 0, 0, 0, 0, 0;];
	Jg_rot = t1;
elseif link_index == 3
	%% Symbolic Calculation
	% From jacobig_rot_3_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-11 19:23:20
	% EndTime: 2020-04-11 19:23:41
	% DurationCPUTime: 14.10s
	% Computational Cost: add. (130635->623), mult. (393108->969), div. (928->9), fcn. (47326->8), ass. (0->422)
	t777 = (pkin(2) ^ 2);
	t773 = (pkin(3) ^ 2);
	t779 = pkin(1) ^ 2;
	t922 = t773 - t779;
	t673 = t922 * t777;
	t1007 = 2 * pkin(1);
	t1006 = 2 * pkin(3);
	t1005 = 4 * pkin(3);
	t734 = sin(qJ(3));
	t735 = sin(qJ(2));
	t954 = t734 * t735;
	t662 = pkin(2) * t954;
	t827 = pkin(3) * t662;
	t657 = -0.2e1 * t827;
	t738 = cos(qJ(2));
	t977 = pkin(2) * t738;
	t903 = pkin(1) * t977;
	t672 = -0.2e1 * t903;
	t920 = (t777 + t779);
	t845 = t773 + t920;
	t667 = pkin(1) - t977;
	t737 = cos(qJ(3));
	t651 = t667 * t737;
	t874 = pkin(3) * t651;
	t587 = t657 + t672 + t845 + 0.2e1 * t874;
	t1004 = -0.2e1 / t587 ^ 2;
	t690 = pkin(3) * t737;
	t639 = t667 + t690;
	t994 = 0.8e1 * t639;
	t1003 = 2 * t773;
	t1002 = 8 * t777;
	t704 = t738 ^ 2;
	t956 = t704 * t777;
	t902 = pkin(1) * t690;
	t670 = 0.2e1 * t902;
	t684 = -t773 / 0.3e1 + t779;
	t701 = t737 ^ 2;
	t943 = t773 * t701;
	t618 = 0.4e1 / 0.3e1 * t943 + t670 + t684;
	t766 = pkin(5) ^ 2;
	t769 = pkin(4) ^ 2;
	t692 = -t766 - t769;
	t762 = 0.3e1 * t779;
	t676 = t762 + t692;
	t965 = t676 * t773;
	t650 = 0.10e2 * t965;
	t751 = 7 * t773;
	t785 = t777 ^ 2;
	t755 = 5 * t785;
	t771 = t773 ^ 2;
	t784 = pkin(2) * t777;
	t774 = t784 ^ 2;
	t778 = t779 ^ 2;
	t702 = t704 ^ 2;
	t959 = t702 * t785;
	t962 = t692 * t779;
	t694 = t773 + t779;
	t687 = t694 ^ 2;
	t917 = t779 - t766;
	t844 = t773 + t917;
	t963 = t687 * (-t769 + t844);
	t1001 = 0.7e1 * t774 + (t751 + t676) * t755 + (t650 + (21 * t771) + 0.9e1 * t778 + 0.6e1 * t962) * t777 + t963 - 0.24e2 * t618 * t959;
	t696 = -(3 * t773) + t779;
	t886 = 0.4e1 * t943;
	t1000 = t696 + t886;
	t715 = -t766 / 0.3e1;
	t999 = t715 - t769 / 0.3e1;
	t765 = t766 ^ 2;
	t768 = t769 ^ 2;
	t998 = -t765 / 0.6e1 + t768 / 0.6e1;
	t997 = -0.4e1 * pkin(2);
	t688 = 0.10e2 / 0.3e1 * t773;
	t923 = t771 + t778;
	t763 = 0.2e1 * t779;
	t926 = t763 - t766;
	t942 = t779 * t766;
	t615 = t926 * t773 + t923 - t942 - t998;
	t799 = t615 + t785;
	t589 = (t688 + t926) * t777 + t799;
	t996 = -0.6e1 * t589;
	t894 = 0.2e1 * t956;
	t921 = -t777 + t779;
	t623 = t672 + t894 + t921;
	t995 = -0.2e1 * t623;
	t700 = t737 * t701;
	t993 = -0.8e1 * t700;
	t992 = 0.4e1 * t701;
	t991 = 4 * t771;
	t752 = 6 * t773;
	t990 = 2 * t777;
	t989 = pkin(1) * pkin(3);
	t988 = -pkin(4) - pkin(5);
	t987 = -pkin(4) + pkin(5);
	t729 = t773 / 0.3e1;
	t605 = -0.4e1 / 0.9e1 * t827 + t779 + t777 / 0.3e1 + t729 + t769 / 0.9e1 - t766 / 0.9e1;
	t713 = -t766 / 0.6e1;
	t732 = t777 / 0.2e1;
	t929 = t732 + t779;
	t802 = -t827 + t929;
	t613 = t769 / 0.6e1 + t713 + t802;
	t723 = t769 / 0.3e1;
	t638 = t715 + t723 + t845;
	t916 = 4 * pkin(1);
	t947 = (pkin(1) + pkin(3)) * (pkin(1) - pkin(3));
	t788 = pkin(3) * t773;
	t960 = t700 * t788;
	t560 = t684 * t657 + 0.6e1 * t605 * t943 + t638 * t947 + (t613 * t690 + t960) * t916;
	t814 = -0.4e1 * t827;
	t717 = -0.2e1 / 0.3e1 * t766;
	t722 = 0.2e1 / 0.3e1 * t769;
	t848 = t717 + t722 + t763;
	t847 = t717 + t694;
	t935 = t694 * (t722 + t847) + t785;
	t572 = t638 * t814 + (t752 + t848) * t777 + t935;
	t611 = t657 + t638;
	t674 = t921 * t773;
	t856 = 0.4e1 * t902;
	t561 = t611 * t856 + t674 * t992 + t572;
	t685 = t779 - t777 / 0.3e1;
	t624 = t685 * t657;
	t946 = (pkin(1) + pkin(2)) * (pkin(1) - pkin(2));
	t586 = t638 * t946 + t624;
	t588 = (t688 + t848) * t777 + t935;
	t622 = t670 + t1000;
	t757 = -3 * t777;
	t697 = t757 + t779;
	t884 = pkin(1) * t960;
	t835 = 0.8e1 * t884;
	t642 = t697 * t835;
	t660 = t769 + t844;
	t744 = 15 * t771;
	t745 = 15 * t773;
	t759 = 0.3e1 * t778;
	t668 = pkin(1) + t690;
	t703 = t738 * t704;
	t958 = t703 * t784;
	t862 = t668 * t958;
	t821 = -0.8e1 * t862;
	t924 = -t766 + t769;
	t846 = t762 + t924;
	t855 = 0.6e1 * t902;
	t865 = 0.12e2 * t943;
	t872 = pkin(3) * t954;
	t966 = t668 * t738;
	t546 = t622 * t821 + t642 + t586 * t865 + t572 * t855 + t774 + (t745 + t846) * t785 + t687 * t660 + (0.12e2 * t560 * t704 + t846 * t752 + t924 * t763 + t744 + t759) * t777 + 0.6e1 * (-t561 * t966 - t588 * t872) * pkin(2);
	t753 = 3 * t773;
	t679 = t753 + t920;
	t691 = pkin(2) * t735;
	t643 = t679 * t691;
	t973 = pkin(3) * t734;
	t648 = t691 - t973;
	t878 = t773 * t691;
	t817 = t701 * t878;
	t756 = 3 * t777;
	t677 = t756 + t694;
	t964 = t677 * t734;
	t979 = pkin(1) * t737;
	t573 = -0.2e1 * t817 + t643 + (0.2e1 * t648 * t979 - t964) * pkin(3);
	t693 = t1003 + t777;
	t952 = t734 * t788;
	t640 = t878 - t952;
	t967 = t640 * t701;
	t574 = t693 * t973 + 0.2e1 * t967 + (-t922 + t670) * t691;
	t604 = -pkin(3) * t964 + t643;
	t675 = pkin(2) * t991 + 0.8e1 * t773 * t784;
	t859 = t788 * t946;
	t606 = t675 * t735 + 0.4e1 * t734 * t859;
	t750 = 5 * t771;
	t918 = t778 + t785;
	t746 = 10 * t773;
	t927 = t746 + t763;
	t941 = t779 * t773;
	t621 = t927 * t777 + t750 + t918 + 0.6e1 * t941;
	t629 = t755 + (t746 + 0.6e1 * t779) * t777 + t687;
	t820 = 0.8e1 * t862;
	t895 = -0.4e1 * t956;
	t550 = t574 * t895 + t606 * t701 + (-0.4e1 * t604 * t979 + (t629 + t820) * t734) * pkin(3) + (0.4e1 * t573 * t966 + (-t621 + t835) * t735) * pkin(2);
	t843 = t777 + t917;
	t809 = t773 + t843;
	t654 = -t769 + t809;
	t620 = t672 + t654;
	t601 = t657 + t620;
	t805 = t701 * t995 - t917;
	t780 = sqrt(0.4e1 * t673 * t704 + 0.4e1 * t654 * t903 - t771 - (t779 + (pkin(2) - t988) * (pkin(2) + t988)) * (t779 + (pkin(2) - t987) * (pkin(2) + t987)) + (t757 + t769 + t805) * t1003 + (-t601 * t651 + t620 * t662) * t1005);
	t540 = t546 * t639 + t550 * t780;
	t986 = 0.1e1 / t540 / 0.4e1;
	t985 = -0.1e1 / t540 ^ 2 / 0.4e1;
	t984 = 0.4e1 / 0.3e1 * t777;
	t983 = -t780 / 0.4e1;
	t982 = t780 / 0.4e1;
	t646 = t779 + t777 / 0.4e1 + t773 / 0.4e1 - t766 / 0.8e1;
	t928 = 0.4e1 / 0.7e1 * t779 - t766 / 0.7e1;
	t566 = -0.32e2 / 0.21e2 * t646 * t827 + t785 / 0.7e1 + (0.16e2 / 0.21e2 * t773 + t928) * t777 + t771 / 0.7e1 + t928 * t773 + t778 - 0.3e1 / 0.7e1 * t942 + t765 / 0.42e2 - t768 / 0.42e2;
	t714 = -t766 / 0.4e1;
	t647 = t714 + t729 + t929;
	t728 = 0.4e1 / 0.3e1 * t773;
	t570 = -0.8e1 / 0.3e1 * t647 * t827 + t785 / 0.3e1 + (t728 + t715) * t777 + t778 - t771 / 0.3e1 + (t984 + 0.2e1 / 0.3e1 * t773 + t717) * t779 + t765 / 0.18e2 - t768 / 0.18e2;
	t730 = t773 / 0.2e1;
	t617 = -0.2e1 / 0.3e1 * t827 + t779 + t730 + t714;
	t761 = 0.4e1 * t779;
	t680 = (t761 + t766) * t773;
	t686 = t779 - 0.2e1 / 0.3e1 * t777;
	t716 = -t766 / 0.2e1;
	t659 = t716 + t845;
	t803 = t659 * t814;
	t869 = 0.16e2 * t960;
	t699 = t701 ^ 2;
	t944 = t771 * t699;
	t890 = 0.8e1 * t944;
	t549 = t686 * t890 + 0.14e2 * t566 * t943 + t684 * t803 - t922 * t785 + (t680 - 0.10e2 / 0.3e1 * t771 + 0.2e1 * t778 - t942) * t777 + t615 * t947 + (0.6e1 * t570 * t690 + t617 * t869) * pkin(1);
	t933 = t765 / 0.2e1 - t768 / 0.2e1;
	t813 = -0.3e1 * t942 + t759 + t933;
	t718 = -0.3e1 / 0.2e1 * t766;
	t930 = t718 + t762;
	t936 = t694 * ((t718 + t763) * t773 - 0.3e1 / 0.2e1 * t942 + t923 + t933) + t774;
	t559 = t827 * t996 + (t744 + (-0.9e1 * t766 + 0.18e2 * t779) * t773 + t813) * t777 + (t745 + t930) * t785 + t936;
	t575 = t803 + (t752 + t926) * t777 + t799;
	t592 = t659 * t946 + t624;
	t551 = t575 * t855 + t592 * t865 + t559 + t642;
	t747 = -0.2e1 * t766;
	t760 = 0.8e1 * t779;
	t831 = t952 * t997;
	t610 = t735 * t831 + t991 + ((4 * t777) + t747 + t760) * t773;
	t616 = t714 - t773 + t802;
	t898 = 0.8e1 * t960;
	t904 = 0.4e1 * t690;
	t562 = t657 * t947 + t610 * t701 + t659 * t696 + (t616 * t904 + t898) * pkin(1);
	t919 = t778 - t771;
	t564 = t685 * t803 - t774 + (-t688 - t917) * t785 + (t680 + t919 + t998) * t777 + t615 * t779;
	t748 = -0.5e1 * t766;
	t749 = 7 * t771;
	t569 = (t751 + t930) * t785 + (t749 + (t748 + 0.10e2 * t779) * t773 + t813) * t777 + t936;
	t781 = pkin(1) * t779;
	t666 = -(12 * pkin(1) * t788) + t781 * t1005;
	t683 = -(8 * t771) + 0.12e2 * t941;
	t824 = pkin(1) * t869;
	t580 = t666 * t737 + t683 * t701 + t824 + t890 + t923 - 0.6e1 * t941;
	t595 = t657 * t946 + t659 * t697;
	t652 = (-0.6e1 * t777 * t779 + t918) * t771;
	t689 = -0.30e2 * t766 + 0.60e2 * t779;
	t925 = t765 - t768;
	t812 = -0.6e1 * t942 + 0.6e1 * t778 + t925;
	t537 = -0.32e2 * t562 * t862 + 0.16e2 * t652 * t699 + 0.24e2 * t564 * t943 + (t747 + t761 + (28 * t773)) * t774 + t660 * t963 + (0.24e2 * t549 * t704 + t689 * t771 + t812 * t752 + t925 * t763 - 0.6e1 * t778 * t766 + 0.4e1 * t781 ^ 2 + (28 * t788 ^ 2)) * t777 + 0.8e1 * (-t551 * t966 - t569 * t872) * pkin(2) + (0.8e1 * t559 * t690 + 0.32e2 * t595 * t960) * pkin(1) + (0.16e2 * t580 * t702 + t689 * t773 + (70 * t771) + t785 + t812) * t785;
	t932 = t713 - t769 / 0.6e1;
	t851 = t779 + t932;
	t631 = t984 + t730 + t851;
	t811 = t732 + t851;
	t632 = t728 + t811;
	t581 = -t631 * t973 + t632 * t691;
	t836 = 0.20e2 / 0.3e1 * t773;
	t853 = 0.2e1 / 0.3e1 * t766 + t722 + t761;
	t854 = 0.4e1 / 0.3e1 * t766 + 0.4e1 / 0.3e1 * t769 - 0.2e1 * t779;
	t590 = -t785 + (-t836 + t853) * t777 - (3 * t771) + t854 * t773 + t778;
	t634 = t773 + t811;
	t678 = t990 - t922;
	t864 = -t973 / 0.2e1;
	t593 = t634 * t691 + t678 * t864;
	t850 = t779 + t999;
	t852 = t766 / 0.3e1 + t723 + t763;
	t808 = -0.8e1 / 0.3e1 * t944 - t673 - 0.5e1 / 0.3e1 * t771 + t852 * t773 + t779 * t850;
	t961 = t700 * t771;
	t552 = t581 * t886 + t590 * t864 + t808 * t691 + (t593 * t690 - t734 * t961) * t916;
	t727 = -0.2e1 / 0.3e1 * t769;
	t931 = t717 + t727;
	t582 = t785 + (t927 + t931) * t777 + t750 + 0.2e1 * t965 + t779 * (t779 + t931);
	t594 = t755 + ((5 * t773) + t676) * t990 + t694 * (t727 + t847);
	t563 = t582 * t691 - t594 * t973;
	t810 = t773 + t850;
	t636 = t756 + t810;
	t637 = t679 + t999;
	t583 = -t636 * t973 + t637 * t691;
	t645 = t730 + t777 + t932;
	t913 = 0.2e1 * t691;
	t598 = t645 * t913 + t946 * t973;
	t877 = t788 * t691;
	t888 = -0.4e1 * t943;
	t553 = t598 * t888 + (t583 * t904 + t877 * t993) * pkin(1) + t563;
	t591 = -(3 * t785) + (-t836 + t854) * t777 + t853 * t773 + t919;
	t599 = -0.5e1 / 0.3e1 * t785 + (-t773 + t852) * t777 + t779 * t810;
	t907 = -0.2e1 * t973;
	t565 = t591 * t691 + t599 * t907;
	t849 = t716 - t769 / 0.2e1 + t779;
	t633 = 0.3e1 / 0.2e1 * t777 + t753 + t849;
	t649 = t691 + 0.2e1 * t973;
	t568 = t696 * t691 + 0.4e1 * t967 + (t633 * t734 + t649 * t979) * t1006;
	t635 = t756 + 0.3e1 / 0.2e1 * t773 + t849;
	t597 = t635 * t691 + t697 * t973 / 0.2e1;
	t804 = 0.24e2 * t685 * t944 - t774 - ((21 * t773) + t676) * t785 - (t650 + t759 + (35 * t771) + 0.2e1 * t962) * t777 - t694 * (t749 + (t748 + t760 - 0.5e1 * t769) * t773 + t779 * (-t769 + t917));
	t867 = -0.12e2 * t956;
	t889 = -0.6e1 * t943;
	t541 = t597 * t824 + t568 * t820 + t552 * t867 + t565 * t889 + (t1001 * t734 - 0.6e1 * t563 * t979) * pkin(3) + (0.6e1 * t553 * t966 + t804 * t735) * pkin(2);
	t950 = t737 * t738;
	t876 = pkin(2) * t950;
	t828 = pkin(1) * t876;
	t630 = -0.4e1 * t773 * t734 * t828;
	t644 = t828 * t1006;
	t837 = 0.32e2 / 0.3e1 * t771;
	t806 = t700 * t837;
	t807 = 0.64e2 / 0.3e1 * t646 * t788;
	t978 = pkin(1) * t771;
	t818 = t946 * t978;
	t825 = -0.16e2 * pkin(1) * t647 * t773;
	t975 = pkin(3) * t684;
	t830 = -0.4e1 * t659 * t975;
	t556 = 0.1e1 / t780;
	t682 = pkin(1) * t691;
	t671 = 0.2e1 * t682;
	t948 = t738 * t777;
	t891 = -0.4e1 * t948;
	t819 = t735 * t891;
	t626 = t671 + t819;
	t953 = t734 * t738;
	t879 = pkin(2) * t953;
	t826 = pkin(3) * t879;
	t829 = -0.8e1 * t874;
	t906 = -0.4e1 * t690;
	t971 = (t626 * t888 + (t682 - t826) * t829 + 0.4e1 * t620 * t826 + (pkin(2) * t601 * t906 - 0.8e1 * t673 * t738 + (t872 * t1002 + t654 * t997) * pkin(1)) * t735) * t556;
	t838 = t971 / 0.2e1;
	t940 = t788 * t701;
	t860 = t685 * t940;
	t955 = t704 * t784;
	t861 = t668 * t955;
	t871 = pkin(3) * t947;
	t949 = t737 * t773;
	t882 = pkin(1) * t949;
	t893 = 0.3e1 * t956;
	t896 = 0.8e1 * t958;
	t910 = 0.6e1 * t977;
	t957 = t703 * t785;
	t529 = t541 * t838 + (-0.32e2 * t630 * t639 + 0.8e1 * t644 * t780) * t862 + (0.24e2 * (0.4e1 * t618 * t957 * t973 + t552 * t948 - t568 * t861) * t780 + (-0.6e1 * t549 * t948 + 0.12e2 * t562 * t861 - 0.8e1 * t580 * t957) * t994) * t735 + ((t537 + (t551 * t994 - 0.6e1 * t553 * t780) * t668) * t735 + (((t632 * t886 + t634 * t856 + t808) * t867 + t635 * t824 + t591 * t889 - 0.6e1 * t582 * t902 + (t1000 * t896 + (t637 * t856 - 0.8e1 * t645 * t943 + t582 - 0.8e1 * t884) * t910) * t668 + t804) * t780 + ((-pkin(1) * t806 - t701 * t807 + t737 * t825 + t830) * t893 + t818 * t993 - 0.12e2 * t659 * t860 + t882 * t996 - pkin(3) * t569 + (-0.4e1 * (-(2 * t871) - 0.4e1 * t940) * t958 - (pkin(3) * t996 - 0.24e2 * t659 * t882 - 0.24e2 * t860) * t977) * t668) * t734 * t994) * t738) * pkin(2);
	t534 = t537 * t639 + t541 * t780;
	t887 = 0.2e1 * t943;
	t892 = t735 * t1002;
	t908 = -0.2e1 * t975;
	t909 = -0.4e1 * pkin(3) * t638;
	t911 = 0.4e1 * t977;
	t914 = t573 * t997;
	t536 = (t644 * t895 + (t574 * t892 + t675 * t701 + ((-t922 + t887) * t895 - t621 + (t679 * t906 + t898) * pkin(1)) * pkin(2)) * t738 + ((t644 + (t679 - 0.2e1 * t943) * t977) * t911 + (-0.24e2 * t955 * t973 + t914) * t735) * t668) * t780 + t550 * t838 + t546 * t691 + 0.6e1 * t639 * (0.4e1 * t622 * t735 * t861 + (t630 + (-0.8e1 / 0.3e1 * t940 + t908) * t879) * t894 + t560 * t819 + t685 * t738 * t701 * t831 + t638 * t630 - t588 * t826 + (-(-0.8e1 * t882 + t909) * t734 * t956 + t561 * t691) * t668);
	t619 = t672 + t769 + t809;
	t976 = pkin(3) * t667;
	t579 = t619 * t737 + (t992 - 0.2e1) * t976;
	t934 = -t662 + t651;
	t612 = pkin(3) + t934;
	t905 = 0.2e1 * t690;
	t974 = pkin(3) * t701;
	t542 = t612 * t838 + t626 * t734 * t905 + ((-t734 * t780 + t579) * t738 + (t737 * t780 + (t667 * t1007 + t619) * t734 + (-pkin(3) + 0.2e1 * t974 + t979) * t913) * t735) * pkin(2);
	t653 = t753 + t769 + t843;
	t602 = t653 + t672 + t814;
	t951 = t737 * t735;
	t614 = pkin(2) * t951 + t667 * t734;
	t915 = -2 * pkin(1) * t777;
	t980 = pkin(1) * (t662 - pkin(3));
	t543 = (t662 + t876) * t780 + t614 * t838 - 0.2e1 * t626 * t974 - (t671 - 0.4e1 * t826) * t651 + t704 * t734 * t915 + t653 * t879 + (pkin(3) * t891 + (-t602 * t737 + 0.2e1 * t980) * pkin(2)) * t735;
	t969 = t614 * t780;
	t547 = -t602 * t651 + t969 + (t653 * t954 - 0.2e1 * t738 * t980) * pkin(2) + (-t756 - t769 - t773 + t805 + t894) * pkin(3);
	t584 = 0.1e1 / t587;
	t628 = -t951 + t953;
	t603 = -t628 * pkin(3) * pkin(2) + t682;
	t875 = t623 * t690;
	t576 = t619 * t667 + 0.2e1 * t875;
	t548 = t576 * t734 + t579 * t691 + t612 * t780;
	t841 = t548 * t986;
	t801 = t534 * t841 + t547 * t982;
	t798 = t801 * t1004;
	t839 = t548 * t985;
	t945 = 0.1e1 / pkin(5) / pkin(4) ^ 2;
	t522 = (t603 * t798 + (t543 * t982 + t547 * t971 / 0.8e1 + t529 * t841 + (t536 * t839 + t542 * t986) * t534) * t584) * t945;
	t842 = t547 * t986;
	t800 = t534 * t842 + t548 * t983;
	t863 = t584 * t945;
	t532 = t800 * t863;
	t627 = -t950 - t954;
	t531 = t532 * t627;
	t533 = t801 * t863;
	t527 = -t533 * t628 - t531;
	t525 = 0.1e1 / t527 ^ 2;
	t530 = t532 * t628;
	t526 = -t533 * t627 + t530;
	t523 = 0.1e1 / (t525 * t526 ^ 2 + 0.1e1);
	t524 = 0.1e1 / t527;
	t797 = t800 * t1004;
	t840 = t547 * t985;
	t937 = (t603 * t797 + (t529 * t842 + t542 * t983 - t548 * t971 / 0.8e1 + (t536 * t840 + t543 * t986) * t534) * t584) * t945 + t533;
	t972 = t525 * t526;
	t981 = ((t937 * t628 + (-t522 + t532) * t627) * t524 - (-t522 * t628 - t937 * t627 + t530) * t972) * t523 + 0.1e1;
	t970 = t556 * ((t601 * t976 + 0.2e1 * t623 * t949) * t734 + (t620 * t690 + t667 * t887) * t691);
	t883 = pkin(1) * t940;
	t822 = -0.12e2 * t883;
	t968 = t639 * t734 * t822;
	t939 = -2 * t989;
	t669 = pkin(1) * t907;
	t698 = t734 ^ 2;
	t815 = t700 * t859;
	t823 = -0.48e2 * t883;
	t881 = pkin(1) * t943;
	t832 = 0.4e1 * t881;
	t833 = -0.2e1 * t881;
	t834 = -0.4e1 * t881;
	t857 = t685 * t960;
	t858 = t734 * t949;
	t868 = -0.64e2 * t958;
	t870 = -0.32e2 * t961;
	t873 = pkin(3) * t958;
	t880 = t639 * t691;
	t885 = pkin(1) * t944;
	t897 = -0.8e1 * t958;
	t899 = -0.2e1 * t960;
	t900 = -0.4e1 * t960;
	t901 = 0.2e1 * t970;
	t912 = -0.6e1 * t977;
	t528 = ((0.12e2 * t698 * t701 * t978 + t631 * t900 + t678 * t833 - 0.4e1 * t885) * t867 + 0.8e1 * t697 * t885 + 0.12e2 * t599 * t960 + 0.6e1 * t594 * t881 + (-t590 * t867 / 0.2e1 + t1001) * t690) * t780 + t541 * t901 + (((t633 * t905 + t832 + t900) * t896 + (-t594 * t690 + t636 * t834 - 0.4e1 * t815) * t910) * t780 + t868 * t968) * t668 + (0.24e2 * (-pkin(1) * t699 * t837 - t700 * t807 + t701 * t825 + t737 * t830) * t956 - 0.64e2 * t699 * t818 - 0.96e2 * t659 * t857 - 0.48e2 * t589 * t881 - 0.8e1 * t569 * t690 + ((-t737 * t871 + t833 + t899) * t868 - 0.48e2 * (-t589 * t690 + t659 * t834 - 0.4e1 * t857) * t977) * t668) * t880 + (-pkin(3) * t537 + (0.2e1 * (-0.2e1 * t683 * t737 - t666 + t823 + t870) * t959 + (-t610 * t737 + t616 * t939) * t821 + 0.4e1 * t562 * t873 + (-0.28e2 * t566 * t949 - 0.6e1 * t570 * t989 + t617 * t823 + t686 * t870) * t893 + (-t575 * t989 - 0.4e1 * t592 * t949 - 0.4e1 * t697 * t883) * t668 * t912 + t551 * pkin(3) * t977 + t652 * t993 + t595 * t822 - 0.6e1 * t564 * t949 - t559 * t989) * t994 + ((-0.8e1 * t581 * t949 + t806 * t691) * t867 - 0.96e2 * t685 * t961 * t691 + t597 * t823 + 0.12e2 * t565 * t949 + (t553 * t912 + t568 * t897 + (-0.24e2 * t669 + 0.64e2 * t858) * t959 + (0.48e2 * t593 * t956 + 0.6e1 * t563) * pkin(1)) * pkin(3) + ((-0.8e1 * t640 * t737 + t649 * t939) * t896 + (0.24e2 * pkin(1) * t701 * t877 - 0.4e1 * t583 * t989 + 0.8e1 * t598 * t949) * t910) * t668) * t780) * t734;
	t866 = 0.12e2 * t956;
	t535 = (t698 * t773 * t897 + (t693 * t690 + t899) * t895 + 0.4e1 * t815 + t677 * t832 + t629 * t690) * t780 + t550 * t901 + t866 * t968 + ((-0.8e1 / 0.3e1 * t960 + t834 + t737 * t908) * t866 - 0.24e2 * t857 - 0.24e2 * t638 * t881 - 0.6e1 * t588 * t690) * t880 + (0.24e2 * (-t639 * t697 - t780 * t691) * t883 + ((0.16e2 * t640 * t956 - 0.2e1 * t606) * t780 + t639 * (-0.144e3 * t605 * t956 - 0.24e2 * t586) * t773) * t737 + (t738 * t780 * t914 - t546 + t639 * (t561 * t910 + t622 * t896) + ((pkin(2) * t704 * t892 + 0.4e1 * t604) * t780 + t639 * (-0.48e2 * t613 * t956 - 0.6e1 * t572)) * pkin(1)) * pkin(3)) * t734 + ((0.8e1 * t737 * t873 + ((-pkin(3) * t677 + 0.4e1 * t773 * t662) * t737 + (-t648 * t973 - t943) * t1007) * t911) * t780 + t639 * ((t669 - 0.8e1 * t858) * t897 + ((-0.8e1 * t674 * t734 + t909 * t691) * t737 + (-0.4e1 * t611 * t973 - 0.8e1 * t817) * pkin(1)) * t912)) * t668;
	t544 = -t969 + t612 * t901 + pkin(3) * t698 * t995 + t576 * t737 + (-t619 + t829) * t662;
	t545 = t934 * t780 + t614 * t901 + (t602 * t667 + 0.4e1 * t875) * t734 + (t915 * t950 + (t653 * t737 + 0.4e1 * t667 * t974) * pkin(2)) * t735;
	t607 = t614 * pkin(3);
	t938 = (-t607 * t797 + (t528 * t842 + t544 * t983 - t548 * t970 / 0.2e1 + (t535 * t840 + t545 * t986) * t534) * t584) * t945 - t533;
	t739 = cos(qJ(1));
	t736 = sin(qJ(1));
	t520 = (-t607 * t798 + (t545 * t982 + t547 * t970 / 0.2e1 + t528 * t841 + (t535 * t839 + t544 * t986) * t534) * t584) * t945;
	t517 = ((-t520 * t627 + t938 * t628 - t531) * t524 - ((-t520 - t532) * t628 - t938 * t627) * t972) * t523;
	t1 = [0, t981 * t736, t517 * t736, 0, 0, 0; 0, -t981 * t739, -t517 * t739, 0, 0, 0; 1, 0, 0, 0, 0, 0;];
	Jg_rot = t1;
elseif link_index == 4
	%% Symbolic Calculation
	% From jacobig_rot_4_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-11 19:22:49
	% EndTime: 2020-04-11 19:22:49
	% DurationCPUTime: 0.01s
	% Computational Cost: add. (1->1), mult. (0->0), div. (0->0), fcn. (2->2), ass. (0->1)
	t1 = [0, 0, sin(qJ(1)), 0, 0, 0; 0, 0, -cos(qJ(1)), 0, 0, 0; 1, 0, 0, 0, 0, 0;];
	Jg_rot = t1;
elseif link_index == 5
	%% Symbolic Calculation
	% From jacobig_rot_5_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-11 19:22:51
	% EndTime: 2020-04-11 19:22:52
	% DurationCPUTime: 0.65s
	% Computational Cost: add. (3577->107), mult. (7810->185), div. (56->6), fcn. (1922->8), ass. (0->85)
	t219 = -4 * pkin(2);
	t173 = pkin(2) ^ 2;
	t166 = cos(qJ(2));
	t209 = pkin(2) * t166;
	t192 = pkin(1) * t209;
	t157 = -0.2e1 * t192;
	t174 = pkin(1) ^ 2;
	t195 = t157 + t174;
	t161 = t166 ^ 2;
	t216 = 0.2e1 * t161;
	t147 = t173 * t216 - t173 + t195;
	t218 = -0.2e1 * t147;
	t155 = pkin(1) - t209;
	t217 = 0.2e1 * t155;
	t215 = (-pkin(4) - pkin(5));
	t214 = (-pkin(4) + pkin(5));
	t162 = sin(qJ(3));
	t163 = sin(qJ(2));
	t200 = t162 * t163;
	t154 = pkin(2) * t200;
	t183 = pkin(3) * t154;
	t153 = -0.2e1 * t183;
	t172 = pkin(3) ^ 2;
	t165 = cos(qJ(3));
	t149 = t155 * t165;
	t188 = pkin(3) * t149;
	t138 = t153 + t172 + t173 + 0.2e1 * t188 + t195;
	t136 = 0.1e1 / t138;
	t213 = t136 / 0.2e1;
	t170 = pkin(4) ^ 2;
	t194 = -pkin(5) ^ 2 + t174;
	t186 = t173 + t194;
	t150 = 0.3e1 * t172 + t170 + t186;
	t140 = t150 + t157 - 0.4e1 * t183;
	t160 = t165 ^ 2;
	t179 = t160 * t218 - t194;
	t198 = t163 * t165;
	t144 = pkin(2) * t198 + t162 * t155;
	t180 = t172 + t186;
	t151 = -t170 + t180;
	t146 = t157 + t151;
	t139 = t153 + t146;
	t158 = (t172 - t174) * t173;
	t175 = sqrt(0.4e1 * t158 * t161 + 0.4e1 * t151 * t192 - (t174 + ((pkin(2) - t215) * (pkin(2) + t215))) * (t174 + ((pkin(2) - t214) * (pkin(2) + t214))) + 0.4e1 * (-t139 * t149 + t146 * t154) * pkin(3) + (0.2e1 * t170 - (6 * t173) + 0.2e1 * t179 - t172) * t172);
	t203 = t144 * t175;
	t211 = pkin(1) * (t154 - pkin(3));
	t127 = -t140 * t149 + t203 + (t150 * t200 - 0.2e1 * t166 * t211) * pkin(2) + (-t170 - t172 + (t216 - 0.3e1) * t173 + t179) * pkin(3);
	t145 = t157 + t170 + t180;
	t202 = t147 * t165;
	t189 = pkin(3) * t202;
	t134 = t155 * t145 + 0.2e1 * t189;
	t208 = pkin(3) * t155;
	t135 = t145 * t165 + (0.4e1 * t160 - 0.2e1) * t208;
	t196 = -t154 + t149;
	t143 = pkin(3) + t196;
	t210 = pkin(2) * t163;
	t128 = t134 * t162 + t135 * t210 + t143 * t175;
	t126 = 0.1e1 / t127 ^ 2;
	t181 = 0.1e1 / (t126 * t128 ^ 2 + 0.1e1) * t138;
	t177 = t126 * t128 * t181;
	t178 = 0.1e1 / t127 * t181;
	t184 = -0.8e1 * t188;
	t131 = 0.1e1 / t175;
	t201 = t160 * t172;
	t206 = pkin(3) * t165;
	t191 = 0.2e1 * t131 * ((t139 * t208 + 0.2e1 * t172 * t202) * t162 + (t146 * t206 + t201 * t217) * t210);
	t193 = -0.2e1 * pkin(1) * t173;
	t197 = t165 * t166;
	t137 = 0.1e1 / t138 ^ 2;
	t204 = t137 * t144 * pkin(3);
	t207 = pkin(3) * t160;
	t212 = 0.2e1 * ((-t203 + t143 * t191 + t134 * t165 + ((-t145 + t184) * t210 + pkin(3) * t162 * t218) * t162) * t213 + t128 * t204) * t178 - 0.2e1 * ((t196 * t175 + t144 * t191 + (t155 * t140 + 0.4e1 * t189) * t162 + (t193 * t197 + (t150 * t165 + 0.4e1 * t155 * t207) * pkin(2)) * t163) * t213 + t127 * t204) * t177 + 0.1e1;
	t159 = pkin(1) * t210;
	t199 = t162 * t166;
	t205 = t137 * (t159 + (t198 - t199) * pkin(3) * pkin(2));
	t190 = -0.4e1 * t166 * t173;
	t187 = pkin(2) * t199;
	t156 = 0.2e1 * t159;
	t148 = t163 * t190 + t156;
	t182 = pkin(3) * t187;
	t185 = (-0.4e1 * t148 * t201 + (t159 - t182) * t184 + 0.4e1 * t146 * t182 + (t139 * t206 * t219 - 0.8e1 * t158 * t166 + (0.8e1 * pkin(3) * t173 * t200 + t151 * t219) * pkin(1)) * t163) * t131 / 0.2e1;
	t167 = cos(qJ(1));
	t164 = sin(qJ(1));
	t122 = 0.2e1 * ((0.2e1 * t148 * t162 * t206 + t143 * t185) * t213 - t128 * t205 + ((-t162 * t175 + t135) * t166 * t213 + (t165 * t175 / 0.2e1 + (pkin(1) * t217 + t145) * t162 / 0.2e1 + (pkin(1) * t165 - pkin(3) + 0.2e1 * t207) * t210) * t136 * t163) * pkin(2)) * t178 - 0.2e1 * (((pkin(2) * t197 + t154) * t175 + t144 * t185 - 0.2e1 * t148 * t207 - (t156 - 0.4e1 * t182) * t149 + t161 * t162 * t193 + t150 * t187 + (pkin(3) * t190 + (-t140 * t165 + 0.2e1 * t211) * pkin(2)) * t163) * t213 - t127 * t205) * t177;
	t1 = [0, t122 * t164, t212 * t164, 0, 0, 0; 0, -t122 * t167, -t212 * t167, 0, 0, 0; 1, 0, 0, 0, 0, 0;];
	Jg_rot = t1;
elseif link_index == 6
	%% Symbolic Calculation
	% From jacobig_rot_6_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-11 19:22:52
	% EndTime: 2020-04-11 19:22:53
	% DurationCPUTime: 0.66s
	% Computational Cost: add. (3578->108), mult. (7810->185), div. (56->6), fcn. (1924->8), ass. (0->85)
	t246 = -4 * pkin(2);
	t200 = pkin(2) ^ 2;
	t193 = cos(qJ(2));
	t236 = pkin(2) * t193;
	t219 = pkin(1) * t236;
	t184 = -0.2e1 * t219;
	t201 = pkin(1) ^ 2;
	t222 = t184 + t201;
	t188 = t193 ^ 2;
	t243 = 0.2e1 * t188;
	t174 = t200 * t243 - t200 + t222;
	t245 = -0.2e1 * t174;
	t182 = pkin(1) - t236;
	t244 = 0.2e1 * t182;
	t242 = (-pkin(4) - pkin(5));
	t241 = (-pkin(4) + pkin(5));
	t189 = sin(qJ(3));
	t190 = sin(qJ(2));
	t227 = t189 * t190;
	t181 = pkin(2) * t227;
	t210 = pkin(3) * t181;
	t180 = -0.2e1 * t210;
	t199 = pkin(3) ^ 2;
	t192 = cos(qJ(3));
	t176 = t182 * t192;
	t214 = pkin(3) * t176;
	t165 = t180 + t199 + t200 + 0.2e1 * t214 + t222;
	t163 = 0.1e1 / t165;
	t240 = t163 / 0.2e1;
	t197 = pkin(4) ^ 2;
	t221 = -pkin(5) ^ 2 + t201;
	t213 = t200 + t221;
	t177 = 0.3e1 * t199 + t197 + t213;
	t167 = t177 + t184 - 0.4e1 * t210;
	t187 = t192 ^ 2;
	t206 = t187 * t245 - t221;
	t225 = t190 * t192;
	t171 = pkin(2) * t225 + t182 * t189;
	t207 = t199 + t213;
	t178 = -t197 + t207;
	t173 = t184 + t178;
	t166 = t180 + t173;
	t185 = (t199 - t201) * t200;
	t202 = sqrt(0.4e1 * t185 * t188 + 0.4e1 * t178 * t219 - (t201 + ((pkin(2) - t242) * (pkin(2) + t242))) * (t201 + ((pkin(2) - t241) * (pkin(2) + t241))) + 0.4e1 * (-t166 * t176 + t173 * t181) * pkin(3) + (0.2e1 * t197 - (6 * t200) + 0.2e1 * t206 - t199) * t199);
	t230 = t171 * t202;
	t238 = pkin(1) * (t181 - pkin(3));
	t154 = -t167 * t176 + t230 + (t177 * t227 - 0.2e1 * t193 * t238) * pkin(2) + (-t197 - t199 + (t243 - 0.3e1) * t200 + t206) * pkin(3);
	t172 = t184 + t197 + t207;
	t229 = t174 * t192;
	t215 = pkin(3) * t229;
	t161 = t172 * t182 + 0.2e1 * t215;
	t235 = pkin(3) * t182;
	t162 = t172 * t192 + (0.4e1 * t187 - 0.2e1) * t235;
	t223 = -t181 + t176;
	t170 = pkin(3) + t223;
	t237 = pkin(2) * t190;
	t155 = t161 * t189 + t162 * t237 + t170 * t202;
	t153 = 0.1e1 / t154 ^ 2;
	t208 = 0.1e1 / (t153 * t155 ^ 2 + 0.1e1) * t165;
	t204 = t153 * t155 * t208;
	t205 = 0.1e1 / t154 * t208;
	t211 = -0.8e1 * t214;
	t158 = 0.1e1 / t202;
	t228 = t187 * t199;
	t233 = pkin(3) * t192;
	t218 = 0.2e1 * t158 * ((t166 * t235 + 0.2e1 * t199 * t229) * t189 + (t173 * t233 + t228 * t244) * t237);
	t220 = -0.2e1 * pkin(1) * t200;
	t224 = t192 * t193;
	t164 = 0.1e1 / t165 ^ 2;
	t231 = t164 * t171 * pkin(3);
	t234 = pkin(3) * t187;
	t239 = 0.2e1 * ((-t230 + t170 * t218 + t161 * t192 + ((-t172 + t211) * t237 + pkin(3) * t189 * t245) * t189) * t240 + t155 * t231) * t205 - 0.2e1 * ((t223 * t202 + t171 * t218 + (t167 * t182 + 0.4e1 * t215) * t189 + (t220 * t224 + (t177 * t192 + 0.4e1 * t182 * t234) * pkin(2)) * t190) * t240 + t154 * t231) * t204 + 0.1e1;
	t186 = pkin(1) * t237;
	t226 = t189 * t193;
	t232 = t164 * (t186 + (t225 - t226) * pkin(3) * pkin(2));
	t217 = -0.4e1 * t193 * t200;
	t216 = pkin(2) * t226;
	t183 = 0.2e1 * t186;
	t175 = t190 * t217 + t183;
	t209 = pkin(3) * t216;
	t212 = (-0.4e1 * t175 * t228 + (t186 - t209) * t211 + 0.4e1 * t173 * t209 + (t166 * t233 * t246 - 0.8e1 * t185 * t193 + (0.8e1 * pkin(3) * t200 * t227 + t178 * t246) * pkin(1)) * t190) * t158 / 0.2e1;
	t194 = cos(qJ(1));
	t191 = sin(qJ(1));
	t149 = 0.2e1 * ((0.2e1 * t175 * t189 * t233 + t170 * t212) * t240 - t155 * t232 + ((-t189 * t202 + t162) * t193 * t240 + (t192 * t202 / 0.2e1 + (pkin(1) * t244 + t172) * t189 / 0.2e1 + (pkin(1) * t192 - pkin(3) + 0.2e1 * t234) * t237) * t163 * t190) * pkin(2)) * t205 - 0.2e1 * (((pkin(2) * t224 + t181) * t202 + t171 * t212 - 0.2e1 * t175 * t234 - (t183 - 0.4e1 * t209) * t176 + t188 * t189 * t220 + t177 * t216 + (pkin(3) * t217 + (-t167 * t192 + 0.2e1 * t238) * pkin(2)) * t190) * t240 - t154 * t232) * t204;
	t1 = [0, t149 * t191, t239 * t191, t191, 0, 0; 0, -t149 * t194, -t239 * t194, -t194, 0, 0; 1, 0, 0, 0, 0, 0;];
	Jg_rot = t1;
elseif link_index == 7
	%% Symbolic Calculation
	% From jacobig_rot_7_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-11 19:23:04
	% EndTime: 2020-04-11 19:23:05
	% DurationCPUTime: 0.75s
	% Computational Cost: add. (4445->112), mult. (9648->201), div. (80->7), fcn. (2394->10), ass. (0->94)
	t455 = -4 * pkin(2);
	t403 = pkin(2) ^ 2;
	t396 = cos(qJ(2));
	t443 = pkin(2) * t396;
	t425 = pkin(1) * t443;
	t385 = -0.2e1 * t425;
	t404 = pkin(1) ^ 2;
	t428 = t385 + t404;
	t389 = t396 ^ 2;
	t452 = 0.2e1 * t389;
	t375 = t403 * t452 - t403 + t428;
	t454 = -0.2e1 * t375;
	t383 = pkin(1) - t443;
	t453 = 0.2e1 * t383;
	t451 = (-pkin(4) - pkin(5));
	t450 = (-pkin(4) + pkin(5));
	t391 = sin(qJ(3));
	t392 = sin(qJ(2));
	t433 = t391 * t392;
	t382 = pkin(2) * t433;
	t416 = pkin(3) * t382;
	t381 = -0.2e1 * t416;
	t402 = pkin(3) ^ 2;
	t395 = cos(qJ(3));
	t377 = t383 * t395;
	t421 = pkin(3) * t377;
	t366 = t381 + t402 + t403 + 0.2e1 * t421 + t428;
	t364 = 0.1e1 / t366;
	t449 = t364 / 0.2e1;
	t448 = t391 / 0.2e1;
	t447 = t395 / 0.2e1;
	t400 = pkin(4) ^ 2;
	t427 = -pkin(5) ^ 2 + t404;
	t419 = t403 + t427;
	t378 = 0.3e1 * t402 + t400 + t419;
	t368 = t378 + t385 - 0.4e1 * t416;
	t388 = t395 ^ 2;
	t412 = t388 * t454 - t427;
	t431 = t392 * t395;
	t372 = pkin(2) * t431 + t391 * t383;
	t413 = t402 + t419;
	t379 = -t400 + t413;
	t374 = t385 + t379;
	t367 = t381 + t374;
	t386 = (t402 - t404) * t403;
	t405 = sqrt(0.4e1 * t386 * t389 + 0.4e1 * t379 * t425 - (t404 + ((pkin(2) - t451) * (pkin(2) + t451))) * (t404 + ((pkin(2) - t450) * (pkin(2) + t450))) + 0.4e1 * (-t367 * t377 + t374 * t382) * pkin(3) + (0.2e1 * t400 - (6 * t403) + 0.2e1 * t412 - t402) * t402);
	t436 = t372 * t405;
	t445 = pkin(1) * (t382 - pkin(3));
	t355 = -t368 * t377 + t436 + (t378 * t433 - 0.2e1 * t396 * t445) * pkin(2) + (-t400 - t402 + (t452 - 0.3e1) * t403 + t412) * pkin(3);
	t373 = t385 + t400 + t413;
	t435 = t375 * t395;
	t422 = pkin(3) * t435;
	t362 = t383 * t373 + 0.2e1 * t422;
	t442 = pkin(3) * t383;
	t363 = t373 * t395 + (0.4e1 * t388 - 0.2e1) * t442;
	t429 = -t382 + t377;
	t371 = pkin(3) + t429;
	t444 = pkin(2) * t392;
	t356 = t362 * t391 + t363 * t444 + t371 * t405;
	t354 = 0.1e1 / t355 ^ 2;
	t401 = 0.1e1 / pkin(4);
	t414 = pkin(4) / (t356 ^ 2 * t354 + 0.1e1) * t366 * t401;
	t410 = t354 * t356 * t414;
	t411 = 0.1e1 / t355 * t414;
	t417 = -0.8e1 * t421;
	t359 = 0.1e1 / t405;
	t434 = t388 * t402;
	t440 = pkin(3) * t395;
	t424 = 0.2e1 * t359 * ((t367 * t442 + 0.2e1 * t402 * t435) * t391 + (t374 * t440 + t434 * t453) * t444);
	t426 = -0.2e1 * pkin(1) * t403;
	t430 = t395 * t396;
	t365 = 0.1e1 / t366 ^ 2;
	t437 = t365 * t372 * pkin(3);
	t441 = pkin(3) * t388;
	t446 = 0.2e1 * ((-t436 + t371 * t424 + t362 * t395 + ((-t373 + t417) * t444 + pkin(3) * t391 * t454) * t391) * t449 + t356 * t437) * t411 - 0.2e1 * ((t429 * t405 + t372 * t424 + (t383 * t368 + 0.4e1 * t422) * t391 + (t426 * t430 + (t378 * t395 + 0.4e1 * t383 * t441) * pkin(2)) * t392) * t449 + t355 * t437) * t410 + 0.1e1;
	t439 = t364 * t401;
	t387 = pkin(1) * t444;
	t432 = t391 * t396;
	t438 = t365 * (t387 + (t431 - t432) * pkin(3) * pkin(2));
	t423 = -0.4e1 * t396 * t403;
	t420 = pkin(2) * t432;
	t384 = 0.2e1 * t387;
	t376 = t392 * t423 + t384;
	t415 = pkin(3) * t420;
	t418 = (-0.4e1 * t376 * t434 + (t387 - t415) * t417 + 0.4e1 * t374 * t415 + (t367 * t440 * t455 - 0.8e1 * t386 * t396 + (0.8e1 * pkin(3) * t403 * t433 + t379 * t455) * pkin(1)) * t392) * t359 / 0.2e1;
	t409 = t356 * t448 - t395 * t355 / 0.2e1;
	t408 = t355 * t448 + t356 * t447;
	t390 = sin(qJ(4));
	t394 = cos(qJ(4));
	t407 = (-t409 * t390 + t408 * t394) * t439;
	t397 = cos(qJ(1));
	t393 = sin(qJ(1));
	t350 = 0.2e1 * ((0.2e1 * t376 * t391 * t440 + t371 * t418) * t449 - t356 * t438 + ((-t391 * t405 + t363) * t396 * t449 + (t405 * t447 + (pkin(1) * t453 + t373) * t448 + (pkin(1) * t395 - pkin(3) + 0.2e1 * t441) * t444) * t364 * t392) * pkin(2)) * t411 - 0.2e1 * (((pkin(2) * t430 + t382) * t405 + t372 * t418 - 0.2e1 * t376 * t441 - (t384 - 0.4e1 * t415) * t377 + t389 * t391 * t426 + t378 * t420 + (pkin(3) * t423 + (-t368 * t395 + 0.2e1 * t445) * pkin(2)) * t392) * t449 - t355 * t438) * t410;
	t1 = [0, t350 * t393, t446 * t393, t393, t397 * t407, 0; 0, -t350 * t397, -t446 * t397, -t397, t393 * t407, 0; 1, 0, 0, 0, (t408 * t390 + t409 * t394) * t439, 0;];
	Jg_rot = t1;
elseif link_index == 8
	%% Symbolic Calculation
	% From jacobig_rot_8_floatb_twist_matlab.m
	% OptimizationMode: 2
	% StartTime: 2020-04-11 19:23:09
	% EndTime: 2020-04-11 19:23:11
	% DurationCPUTime: 0.89s
	% Computational Cost: add. (5315->119), mult. (11491->216), div. (104->7), fcn. (2871->12), ass. (0->99)
	t444 = (pkin(4) ^ 2);
	t446 = (pkin(3) ^ 2);
	t447 = pkin(2) ^ 2;
	t448 = pkin(1) ^ 2;
	t470 = -pkin(5) ^ 2 + t448;
	t462 = (t447 + t470);
	t420 = 3 * t446 + t444 + t462;
	t440 = cos(qJ(2));
	t486 = pkin(2) * t440;
	t468 = pkin(1) * t486;
	t427 = -0.2e1 * t468;
	t434 = sin(qJ(3));
	t435 = sin(qJ(2));
	t476 = t434 * t435;
	t424 = pkin(2) * t476;
	t459 = pkin(3) * t424;
	t410 = t420 + t427 - 0.4e1 * t459;
	t425 = pkin(1) - t486;
	t439 = cos(qJ(3));
	t419 = t425 * t439;
	t430 = t439 ^ 2;
	t471 = t427 + t448;
	t431 = t440 ^ 2;
	t495 = 0.2e1 * t431;
	t417 = t447 * t495 - t447 + t471;
	t497 = -0.2e1 * t417;
	t455 = t430 * t497 - t470;
	t474 = t435 * t439;
	t414 = pkin(2) * t474 + t434 * t425;
	t456 = t446 + t462;
	t421 = -t444 + t456;
	t416 = t427 + t421;
	t423 = -0.2e1 * t459;
	t409 = t423 + t416;
	t428 = (t446 - t448) * t447;
	t493 = -pkin(4) + pkin(5);
	t494 = -pkin(4) - pkin(5);
	t449 = sqrt(0.4e1 * t428 * t431 + 0.4e1 * t421 * t468 - (t448 + (pkin(2) - t494) * (pkin(2) + t494)) * (t448 + (pkin(2) - t493) * (pkin(2) + t493)) + 0.4e1 * (-t409 * t419 + t416 * t424) * pkin(3) + ((2 * t444) - 0.6e1 * t447 + 0.2e1 * t455 - t446) * t446);
	t479 = t414 * t449;
	t488 = pkin(1) * (t424 - pkin(3));
	t397 = -t410 * t419 + t479 + (t420 * t476 - 0.2e1 * t440 * t488) * pkin(2) + (-t444 - t446 + (t495 - 0.3e1) * t447 + t455) * pkin(3);
	t415 = t427 + t444 + t456;
	t478 = t417 * t439;
	t465 = pkin(3) * t478;
	t404 = t425 * t415 + 0.2e1 * t465;
	t485 = pkin(3) * t425;
	t405 = t415 * t439 + (0.4e1 * t430 - 0.2e1) * t485;
	t472 = -t424 + t419;
	t413 = pkin(3) + t472;
	t487 = pkin(2) * t435;
	t398 = t404 * t434 + t405 * t487 + t413 * t449;
	t464 = pkin(3) * t419;
	t408 = t423 + t446 + t447 + 0.2e1 * t464 + t471;
	t406 = 0.1e1 / t408;
	t445 = 0.1e1 / pkin(4);
	t482 = t406 * t445;
	t490 = t439 / 0.2e1;
	t491 = t434 / 0.2e1;
	t499 = (t397 * t491 + t398 * t490) * t482;
	t498 = -0.4e1 * pkin(2);
	t496 = 0.2e1 * t425;
	t492 = t406 / 0.2e1;
	t396 = 0.1e1 / t397 ^ 2;
	t457 = pkin(4) / (t398 ^ 2 * t396 + 0.1e1) * t408 * t445;
	t453 = t396 * t398 * t457;
	t454 = 0.1e1 / t397 * t457;
	t460 = -0.8e1 * t464;
	t401 = 0.1e1 / t449;
	t477 = t430 * t446;
	t483 = pkin(3) * t439;
	t467 = 0.2e1 * t401 * ((t409 * t485 + 0.2e1 * t446 * t478) * t434 + (t416 * t483 + t477 * t496) * t487);
	t469 = -0.2e1 * pkin(1) * t447;
	t473 = t439 * t440;
	t407 = 0.1e1 / t408 ^ 2;
	t480 = t407 * t414 * pkin(3);
	t484 = pkin(3) * t430;
	t489 = 0.2e1 * ((-t479 + t413 * t467 + t404 * t439 + ((-t415 + t460) * t487 + pkin(3) * t434 * t497) * t434) * t492 + t398 * t480) * t454 - 0.2e1 * ((t472 * t449 + t414 * t467 + (t425 * t410 + 0.4e1 * t465) * t434 + (t469 * t473 + (t420 * t439 + 0.4e1 * t425 * t484) * pkin(2)) * t435) * t492 + t397 * t480) * t453 + 0.1e1;
	t429 = pkin(1) * t487;
	t475 = t434 * t440;
	t481 = t407 * (t429 + (t474 - t475) * pkin(3) * pkin(2));
	t466 = -0.4e1 * t440 * t447;
	t463 = pkin(2) * t475;
	t426 = 0.2e1 * t429;
	t418 = t435 * t466 + t426;
	t458 = pkin(3) * t463;
	t461 = (-0.4e1 * t418 * t477 + (t429 - t458) * t460 + 0.4e1 * t416 * t458 + (t409 * t483 * t498 - 0.8e1 * t428 * t440 + (0.8e1 * pkin(3) * t447 * t476 + t421 * t498) * pkin(1)) * t435) * t401 / 0.2e1;
	t393 = (t398 * t491 - t439 * t397 / 0.2e1) * t482;
	t441 = cos(qJ(1));
	t438 = cos(qJ(4));
	t437 = cos(qJ(5));
	t436 = sin(qJ(1));
	t433 = sin(qJ(4));
	t432 = sin(qJ(5));
	t391 = t441 * t499;
	t390 = t441 * t393;
	t389 = t436 * t499;
	t388 = t436 * t393;
	t386 = 0.2e1 * ((0.2e1 * t418 * t434 * t483 + t413 * t461) * t492 - t398 * t481 + ((-t434 * t449 + t405) * t440 * t492 + (t449 * t490 + (pkin(1) * t496 + t415) * t491 + (pkin(1) * t439 - pkin(3) + 0.2e1 * t484) * t487) * t406 * t435) * pkin(2)) * t454 - 0.2e1 * (((pkin(2) * t473 + t424) * t449 + t414 * t461 - 0.2e1 * t418 * t484 - (t426 - 0.4e1 * t458) * t419 + t431 * t434 * t469 + t420 * t463 + (pkin(3) * t466 + (-t410 * t439 + 0.2e1 * t488) * pkin(2)) * t435) * t492 - t397 * t481) * t453;
	t1 = [0, t386 * t436, t489 * t436, t436, -t390 * t433 + t391 * t438, -(t390 * t438 + t391 * t433) * t437 + t436 * t432; 0, -t386 * t441, -t489 * t441, -t441, -t388 * t433 + t389 * t438, -(t388 * t438 + t389 * t433) * t437 - t441 * t432; 1, 0, 0, 0, t393 * t438 + t433 * t499, -(t393 * t433 - t438 * t499) * t437;];
	Jg_rot = t1;
else
	Jg_rot=NaN(3,6);
end