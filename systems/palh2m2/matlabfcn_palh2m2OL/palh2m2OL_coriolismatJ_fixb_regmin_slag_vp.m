% Calculate minimal parameter regressor of coriolis matrix for
% palh2m2OL
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [5x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[A2Off,A3Off,A4Off,L1,L2]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x38]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2020-06-30 18:09
% Revision: b9e8aa5c608190a7b43c48aaebfd2074f0379b0d (2020-06-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = palh2m2OL_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(5,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'palh2m2OL_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'palh2m2OL_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [5 1]), ...
  'palh2m2OL_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [5x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2020-06-30 18:06:52
% EndTime: 2020-06-30 18:08:39
% DurationCPUTime: 32.17s
% Computational Cost: add. (17409->792), mult. (36357->992), div. (0->0), fcn. (45836->10), ass. (0->631)
t715 = qJD(2) + qJD(3);
t978 = qJD(4) + t715;
t527 = sin(qJ(2));
t529 = cos(qJ(2));
t862 = sin(qJ(3));
t865 = cos(qJ(3));
t483 = t527 * t862 - t529 * t865;
t861 = sin(qJ(4));
t477 = t861 * t483;
t485 = -t527 * t865 - t529 * t862;
t864 = cos(qJ(4));
t479 = t864 * t485;
t414 = -t479 - t477;
t526 = sin(qJ(5));
t863 = cos(qJ(5));
t478 = t861 * t485;
t705 = t864 * t483;
t901 = t478 - t705;
t990 = -t526 * t414 + t863 * t901;
t732 = t990 * qJD(5);
t996 = t715 * t990;
t997 = qJD(4) * t990 + t732 + t996;
t525 = sin(qJ(6));
t522 = qJD(6) * t525;
t928 = -t990 / 0.2e1;
t962 = 0.2e1 * t928;
t970 = t962 * t525;
t981 = t970 * qJD(1);
t93 = t522 - t981;
t931 = qJD(4) + qJD(5);
t618 = t931 + t715;
t917 = t863 * t414;
t921 = t526 * t901;
t933 = t917 + t921;
t820 = t525 * t933;
t868 = t525 / 0.2e1;
t944 = t933 * t868;
t954 = t820 / 0.2e1 + t944;
t528 = cos(qJ(6));
t327 = t933 ^ 2;
t947 = t990 ^ 2 - t327;
t973 = t947 * t528;
t988 = qJD(1) * t973;
t995 = qJD(5) * t954 + t988;
t756 = qJD(6) * t528;
t969 = t962 * t528;
t982 = t969 * qJD(1);
t94 = t982 - t756;
t926 = t933 / 0.2e1;
t927 = -t933 / 0.2e1;
t951 = t926 + t927;
t972 = t951 * t525;
t994 = qJD(4) * t972 - t988;
t974 = t947 * t525;
t987 = qJD(1) * t974;
t993 = -qJD(6) * t970 + t987;
t992 = qJD(5) + t715;
t810 = t528 * t933;
t866 = t528 / 0.2e1;
t945 = t933 * t866;
t953 = t810 / 0.2e1 + t945;
t955 = t525 * t990;
t681 = -t955 / 0.2e1;
t935 = t955 / 0.2e1;
t989 = t935 + t681;
t991 = qJD(5) * t953 + qJD(6) * t989 - t987;
t971 = t951 * t528;
t986 = qJD(4) * t971;
t984 = qJD(6) * t969;
t980 = t971 * qJD(1);
t979 = t972 * qJD(1);
t509 = t525 * t756;
t907 = 0.2e1 * t933;
t284 = t509 * t907;
t892 = t525 ^ 2;
t720 = t892 / 0.2e1;
t524 = t528 ^ 2;
t824 = t524 * t990;
t800 = t990 * t720 - t824 / 0.2e1;
t643 = t720 - t524 / 0.2e1;
t961 = t990 * t643;
t966 = t961 + t800;
t977 = qJD(4) * t966 + t284;
t116 = t643 * t933;
t105 = t116 * qJD(6);
t958 = t990 * t866;
t633 = t525 * t958;
t819 = t525 * t528;
t960 = t819 * t928;
t967 = -t633 + t960;
t976 = qJD(5) * t967 + t105;
t975 = t990 / 0.2e1;
t733 = pkin(3) * t990;
t963 = t947 * qJD(1);
t785 = qJD(1) * t933;
t959 = t990 * t785;
t930 = -t524 * t959 + t105;
t513 = -pkin(4) * t529 - pkin(1);
t446 = pkin(2) * t483 + t513;
t336 = -pkin(5) * t901 + t446;
t834 = t990 * t336;
t789 = pkin(3) * t528;
t295 = t789 * t975;
t790 = pkin(3) * t525;
t292 = t790 * t975;
t647 = -t733 / 0.2e1;
t712 = t865 * pkin(4);
t619 = t712 + pkin(2);
t492 = t861 * t619;
t510 = t864 * t862 * pkin(4);
t474 = t510 + t492;
t447 = t863 * t474;
t494 = t864 * t619;
t629 = t861 * t862;
t473 = pkin(4) * t629 - t494;
t463 = pkin(5) - t473;
t815 = t526 * t463;
t373 = t447 + t815;
t957 = t373 * t944;
t956 = t373 * t945;
t786 = qJD(1) * t990;
t878 = t917 / 0.2e1;
t940 = t921 / 0.2e1 + t878;
t911 = qJD(6) * t940;
t952 = -t786 * t933 - t911;
t948 = t940 * qJD(1);
t161 = t336 - t733;
t839 = t161 * t933;
t836 = t933 * t336;
t939 = pkin(3) * t933;
t908 = -t414 ^ 2 + t901 ^ 2;
t932 = t908 * qJD(1);
t860 = pkin(5) * t414;
t879 = -t917 / 0.2e1;
t914 = -t921 / 0.2e1 + t879;
t897 = -t940 + t914;
t920 = t715 * t897;
t915 = t901 * qJD(1) * t414;
t905 = t618 * t819;
t87 = qJD(1) * t116 + t905;
t900 = t524 - t892;
t906 = t900 * t618;
t641 = t715 * t933;
t605 = t861 * t712;
t568 = t605 + t510;
t896 = qJD(2) * t568;
t368 = t373 * qJD(5);
t814 = t526 * t473;
t376 = t447 - t814;
t370 = t376 * qJD(4);
t466 = t863 * t568;
t632 = t864 * t865;
t482 = (-t629 + t632) * pkin(4);
t812 = t526 * t482;
t399 = t466 + t812;
t384 = t399 * qJD(3);
t895 = -t384 - t370 - t368;
t554 = t526 * t568;
t701 = t863 * t482;
t793 = t554 / 0.2e1 - t701 / 0.2e1;
t779 = qJD(1) * t528;
t893 = -t327 * t525 * t779 + t116 * t618;
t891 = pkin(5) / 0.2e1;
t445 = t863 * t463;
t813 = t526 * t474;
t372 = -t445 + t813;
t369 = pkin(3) - t372;
t886 = -t369 / 0.2e1;
t885 = t369 / 0.2e1;
t884 = -t373 / 0.2e1;
t883 = t373 / 0.2e1;
t702 = t863 * t473;
t377 = -t702 - t813;
t882 = -t377 / 0.2e1;
t400 = t701 - t554;
t881 = -t400 / 0.2e1;
t443 = -t447 / 0.2e1;
t661 = t864 * pkin(2);
t512 = t661 + pkin(5);
t493 = t863 * t512;
t654 = t861 * pkin(2);
t464 = t526 * t654 - t493;
t458 = pkin(3) - t464;
t877 = -t458 / 0.2e1;
t876 = t458 / 0.2e1;
t630 = t863 * t861;
t811 = t526 * t512;
t465 = pkin(2) * t630 + t811;
t875 = t465 / 0.2e1;
t874 = t466 / 0.2e1;
t873 = t473 / 0.2e1;
t625 = t478 / 0.2e1;
t628 = t479 / 0.2e1;
t631 = t863 * t864;
t700 = t861 * t526;
t481 = (t631 - t700) * pkin(2);
t872 = -t481 / 0.2e1;
t711 = t863 * pkin(5);
t511 = t711 + pkin(3);
t871 = t511 / 0.2e1;
t869 = -t525 / 0.2e1;
t867 = -t528 / 0.2e1;
t859 = t526 * pkin(5);
t523 = t527 * pkin(4);
t857 = pkin(3) / 0.2e1;
t533 = t399 * t926 + (t875 + t884) * t933 + (-t881 + t876 + t886) * t990;
t10 = t533 * t528;
t856 = qJD(1) * t10;
t707 = t859 / 0.2e1;
t565 = t707 * t933 + t871 * t990;
t531 = t376 * t926 + t884 * t933 + t565 - (t882 - t886) * t990;
t13 = t531 * t528;
t855 = qJD(1) * t13;
t666 = -t372 / 0.2e1 + t886;
t617 = t666 * t990;
t550 = t647 - t617;
t20 = t550 * t528;
t854 = qJD(1) * t20;
t642 = t161 - t733;
t43 = t642 * t820;
t853 = qJD(1) * t43;
t44 = t642 * t810;
t852 = qJD(1) * t44;
t54 = t892 * t928 + t824 / 0.2e1 + t961;
t851 = qJD(1) * t54;
t667 = t928 + t975;
t56 = t900 * t667;
t850 = qJD(1) * t56;
t58 = t800 - t961;
t849 = qJD(1) * t58;
t97 = t667 * t819;
t841 = qJD(1) * t97;
t99 = t960 + t633;
t840 = qJD(1) * t99;
t723 = t485 * pkin(2);
t350 = -t723 + t860;
t167 = t350 + t939;
t164 = t523 + t167;
t603 = -t164 * t990 + t839;
t31 = t603 * t525;
t838 = t31 * qJD(1);
t32 = t603 * t528;
t837 = t32 * qJD(1);
t602 = -t167 * t990 + t839;
t33 = t602 * t525;
t835 = t33 * qJD(1);
t34 = t602 * t528;
t833 = t34 * qJD(1);
t208 = t860 + t939;
t601 = -t208 * t990 + t839;
t37 = t601 * t525;
t832 = t37 * qJD(1);
t831 = t376 * t525;
t38 = t601 * t528;
t830 = t38 * qJD(1);
t829 = t399 * t525;
t828 = t399 * t528;
t827 = t458 * t990;
t826 = t465 * t933;
t704 = t864 * t526;
t480 = (t630 + t704) * pkin(2);
t825 = t480 * t525;
t339 = t523 + t350;
t74 = -t339 * t990 + t836;
t807 = t74 * qJD(1);
t75 = t339 * t933 + t834;
t806 = t75 * qJD(1);
t76 = -t350 * t990 + t836;
t805 = t76 * qJD(1);
t77 = t350 * t933 + t834;
t804 = t77 * qJD(1);
t80 = t860 * t990 - t836;
t803 = t80 * qJD(1);
t81 = -t860 * t933 - t834;
t802 = t81 * qJD(1);
t364 = t831 / 0.2e1;
t450 = t825 / 0.2e1;
t798 = t364 + t450;
t365 = t376 * t867;
t451 = t480 * t867;
t797 = t365 + t451;
t795 = -t815 / 0.2e1 + t443;
t440 = t813 / 0.2e1;
t794 = -t445 / 0.2e1 + t440;
t792 = -t812 / 0.2e1 - t466 / 0.2e1;
t454 = t465 * qJD(5);
t467 = t480 * qJD(4);
t791 = -t467 - t454;
t138 = t900 * t327;
t787 = qJD(1) * t138;
t784 = qJD(1) * t336;
t782 = qJD(1) * t446;
t781 = qJD(1) * t513;
t780 = qJD(1) * t525;
t778 = qJD(2) * t372;
t777 = qJD(2) * t373;
t776 = qJD(2) * t376;
t775 = qJD(2) * t377;
t774 = qJD(2) * t399;
t773 = qJD(2) * t400;
t772 = qJD(2) * t473;
t771 = qJD(2) * t474;
t770 = qJD(2) * t482;
t769 = qJD(2) * t525;
t768 = qJD(2) * t528;
t767 = qJD(3) * t513;
t766 = qJD(3) * t525;
t765 = qJD(3) * t528;
t764 = qJD(4) * t933;
t763 = qJD(4) * t901;
t762 = qJD(4) * t446;
t761 = qJD(4) * t525;
t760 = qJD(4) * t528;
t759 = qJD(5) * t933;
t758 = qJD(5) * t525;
t757 = qJD(5) * t528;
t679 = -t820 / 0.2e1;
t120 = t944 + t679;
t753 = t120 * qJD(1);
t672 = -t810 / 0.2e1;
t130 = t945 + t672;
t749 = t130 * qJD(1);
t147 = t940 + t914;
t747 = t147 * qJD(1);
t337 = t446 * t414;
t455 = t523 - t723;
t213 = -t455 * t901 + t337;
t742 = t213 * qJD(1);
t338 = t446 * t901;
t214 = t414 * t455 + t338;
t741 = t214 * qJD(1);
t223 = -t723 * t901 - t337;
t740 = t223 * qJD(1);
t224 = t414 * t723 - t338;
t739 = t224 * qJD(1);
t325 = t879 + t878;
t734 = t325 * qJD(1);
t383 = t483 ^ 2 - t485 ^ 2;
t730 = t383 * qJD(1);
t397 = t483 * t523 - t485 * t513;
t729 = t397 * qJD(1);
t398 = -t483 * t513 - t485 * t523;
t728 = t398 * qJD(1);
t410 = t625 - t478 / 0.2e1;
t727 = t410 * qJD(1);
t411 = t628 - t479 / 0.2e1;
t726 = t411 * qJD(1);
t581 = -t605 / 0.2e1;
t623 = t654 / 0.2e1;
t585 = t492 / 0.2e1 + t623;
t424 = t581 + t585;
t725 = t424 * qJD(2);
t624 = -t661 / 0.2e1;
t584 = -t494 / 0.2e1 + t624;
t595 = -t632 / 0.2e1;
t427 = pkin(4) * t595 - t584;
t724 = t427 * qJD(2);
t508 = -t527 ^ 2 + t529 ^ 2;
t722 = t508 * qJD(1);
t721 = t529 * qJD(2);
t719 = pkin(1) * qJD(2);
t718 = pkin(3) * qJD(5);
t717 = pkin(3) * qJD(6);
t716 = qJD(1) * pkin(1);
t710 = qJD(4) * t859;
t709 = qJD(6) * t859;
t708 = qJD(5) * t859;
t699 = t524 * t785;
t698 = t990 * t522;
t697 = t990 * t756;
t694 = t990 * t784;
t693 = t933 * t784;
t691 = t901 * t782;
t690 = t414 * t782;
t689 = t483 * t781;
t688 = t485 * t781;
t687 = t990 * t780;
t686 = t527 * t529 * qJD(1);
t685 = t990 * t779;
t684 = t933 * t779;
t665 = -t464 / 0.2e1 + t877;
t664 = t875 + t883;
t663 = t865 * qJD(2);
t662 = t865 * qJD(3);
t660 = t864 * qJD(3);
t659 = t864 * qJD(4);
t658 = t863 * qJD(4);
t657 = t863 * qJD(5);
t656 = t862 * qJD(2);
t655 = t862 * qJD(3);
t653 = t861 * qJD(3);
t652 = t861 * qJD(4);
t651 = t527 * t716;
t650 = t529 * t716;
t649 = t525 * t718;
t648 = t528 * t718;
t639 = t715 * t901;
t420 = t715 * t485;
t638 = t715 * t525;
t637 = -qJD(6) - t786;
t521 = -t711 / 0.2e1;
t636 = t711 / 0.2e1;
t634 = t525 * t684;
t627 = -t704 / 0.2e1;
t626 = t702 / 0.2e1;
t622 = t707 + t883;
t621 = t707 + t875;
t620 = t931 * t859;
t616 = t665 * t990;
t615 = -0.2e1 * t634;
t614 = 0.2e1 * t634;
t613 = t443 + t814 / 0.2e1;
t611 = t882 + t871 + t885;
t610 = t881 + t876 + t885;
t609 = -t399 / 0.2e1 + t664;
t608 = t872 + t871 + t876;
t607 = t857 - t666;
t606 = t857 - t665;
t604 = t990 * t634;
t209 = t609 * t525;
t549 = t647 - t616;
t28 = t549 * t528;
t599 = qJD(1) * t28 + qJD(2) * t209;
t215 = -t829 / 0.2e1 + t798;
t530 = t465 * t927 + t480 * t926 + t565 - (t872 - t877) * t990;
t22 = t530 * t528;
t598 = -qJD(1) * t22 + qJD(2) * t215;
t597 = t161 * t637;
t596 = t637 * t528;
t594 = -t631 / 0.2e1;
t593 = -t630 / 0.2e1;
t488 = -t493 / 0.2e1;
t553 = t526 * t623 + t488 + t794;
t234 = -t793 + t553;
t592 = -qJD(2) * t234 - qJD(3) * t464;
t486 = -t811 / 0.2e1;
t569 = pkin(2) * t593;
t543 = t486 + t569 + t795;
t236 = t812 / 0.2e1 + t874 + t543;
t591 = -qJD(2) * t236 + qJD(3) * t465;
t246 = t569 + t443 + t874 + (t624 + t873 + t482 / 0.2e1) * t526;
t590 = -qJD(2) * t246 + qJD(3) * t480;
t559 = t440 + t626;
t532 = (t594 + t700 / 0.2e1) * pkin(2) + t559;
t248 = t532 - t793;
t589 = -qJD(2) * t248 + qJD(3) * t481;
t266 = (t873 + t891 + t463 / 0.2e1) * t526;
t423 = (t624 + t891 + t512 / 0.2e1) * t526;
t588 = -qJD(2) * t266 - qJD(3) * t423;
t268 = t626 + t636 + t445 / 0.2e1;
t426 = pkin(2) * t594 + t636 + t493 / 0.2e1;
t587 = -t268 * qJD(2) - t426 * qJD(3);
t586 = t636 - t511 / 0.2e1;
t583 = -t376 / 0.2e1 + t622;
t582 = -t480 / 0.2e1 + t621;
t8 = t533 * t525;
t580 = qJD(1) * t8 + t399 * t768;
t578 = -t883 * t990 + t885 * t933;
t577 = t826 / 0.2e1 + t827 / 0.2e1;
t576 = -t875 * t990 + t876 * t933;
t12 = t531 * t525;
t575 = qJD(1) * t12 + t376 * t768;
t18 = t550 * t525;
t574 = -qJD(1) * t18 + t373 * t768;
t557 = t164 / 0.2e1 + t578;
t40 = t557 * t525;
t573 = qJD(1) * t40 + t369 * t768;
t41 = t557 * t528;
t572 = -qJD(1) * t41 + t369 * t769;
t570 = -t959 - t911;
t567 = qJD(2) * (t369 * t990 + t373 * t933);
t566 = qJD(3) * (t826 + t827);
t564 = -t707 * t990 + t871 * t933;
t563 = t586 * t990;
t560 = t857 - t586;
t558 = qJD(4) * (t511 * t990 + t859 * t933);
t556 = t167 / 0.2e1 + t576;
t232 = t583 * t528;
t354 = t582 * t528;
t542 = -t563 + t647;
t36 = t542 * t525;
t555 = qJD(1) * t36 - qJD(2) * t232 - qJD(3) * t354;
t552 = t565 * t525;
t551 = t565 * t528;
t548 = t208 / 0.2e1 + t564;
t202 = t610 * t525;
t51 = t556 * t528;
t547 = -qJD(1) * t51 + qJD(2) * t202 + t458 * t766;
t203 = t610 * t528;
t50 = t556 * t525;
t546 = qJD(1) * t50 + qJD(2) * t203 + t458 * t765;
t21 = t530 * t525;
t218 = t828 / 0.2e1 + t797;
t545 = qJD(1) * t21 - qJD(2) * t218 + t480 * t765;
t212 = t609 * t528;
t26 = t549 * t525;
t544 = -qJD(1) * t26 + qJD(2) * t212 + t465 * t765;
t541 = t997 * t933;
t219 = t611 * t525;
t340 = t608 * t525;
t72 = t548 * t528;
t540 = -qJD(1) * t72 + qJD(2) * t219 + qJD(3) * t340 + t511 * t761;
t220 = t611 * t528;
t341 = t608 * t528;
t71 = t548 * t525;
t539 = qJD(1) * t71 + qJD(2) * t220 + qJD(3) * t341 + t511 * t760;
t229 = t583 * t525;
t351 = t582 * t525;
t79 = t542 * t528;
t538 = -qJD(1) * t79 - qJD(2) * t229 - qJD(3) * t351 - t525 * t710;
t101 = t933 * t790;
t226 = t607 * t528;
t345 = t606 * t528;
t425 = t560 * t528;
t535 = qJD(1) * t101 + qJD(2) * t226 + qJD(3) * t345 + qJD(4) * t425 + t648;
t102 = t933 * t789;
t225 = t607 * t525;
t344 = t606 * t525;
t422 = t560 * t525;
t534 = -qJD(1) * t102 + qJD(2) * t225 + qJD(3) * t344 + qJD(4) * t422 + t649;
t520 = -t859 / 0.2e1;
t517 = -t789 / 0.2e1;
t516 = -t790 / 0.2e1;
t506 = t525 * t708;
t495 = t900 * qJD(6);
t491 = t511 * t867;
t490 = t511 * t869;
t476 = t482 * qJD(3);
t475 = t568 * qJD(3);
t468 = t481 * qJD(4);
t457 = t474 * qJD(4);
t456 = t473 * qJD(4);
t453 = t464 * qJD(5);
t452 = t528 * t467;
t438 = t528 * t454;
t431 = t458 * t867;
t430 = t458 * t869;
t429 = t521 * t528 + t491 + t517;
t428 = t521 * t525 + t490 + t516;
t421 = t485 * t483 * qJD(1);
t419 = t715 * t483;
t418 = (t629 + t595) * pkin(4) + t584;
t417 = -t510 + t581 - t585;
t416 = t521 + t488 + (t700 + t594) * pkin(2);
t415 = t520 + t486 + (-t630 + t627) * pkin(2);
t405 = t411 * qJD(4);
t402 = t410 * qJD(4);
t385 = t400 * qJD(3);
t382 = t528 * t384;
t381 = -t828 / 0.2e1;
t380 = t829 / 0.2e1;
t371 = t377 * qJD(4);
t367 = t372 * qJD(5);
t366 = t528 * t370;
t361 = t528 * t368;
t356 = t369 * t867;
t355 = t369 * t869;
t353 = -t528 * t621 + t451;
t352 = t525 * t621 + t450;
t349 = 0.2e1 * t628 + t477;
t348 = 0.2e1 * t625 - t705;
t347 = t464 * t866 + t431 + t517;
t346 = t464 * t868 + t430 + t516;
t343 = t481 * t867 + t431 + t491;
t342 = t481 * t869 + t430 + t490;
t269 = t521 + t559 + t794;
t267 = t520 + t613 + t795;
t249 = t532 + t793;
t247 = (t627 + t593) * pkin(2) + t613 + t792;
t237 = t543 + t792;
t235 = t553 + t793;
t231 = -t528 * t622 + t365;
t230 = t525 * t622 + t364;
t228 = t372 * t866 + t356 + t517;
t227 = t372 * t868 + t355 + t516;
t222 = t377 * t867 + t356 + t491;
t221 = t377 * t869 + t355 + t490;
t217 = t381 + t797;
t216 = t380 + t798;
t211 = -t528 * t664 + t381;
t210 = t525 * t664 + t380;
t207 = 0.2e1 * t879 - t921;
t205 = t400 * t867 + t356 + t431;
t204 = t400 * t869 + t355 + t430;
t195 = t615 - t906;
t194 = t614 + t906;
t169 = qJD(4) * t348 + t639;
t168 = t349 * qJD(4) - t414 * t715;
t128 = 0.2e1 * t945;
t118 = 0.2e1 * t944;
t100 = 0.2e1 * t960;
t92 = t509 - t840;
t91 = t509 - t841;
t90 = t509 + t840;
t89 = t509 + t841;
t78 = -t528 * t563 + t295;
t73 = t208 * t867 + t528 * t564;
t70 = t208 * t868 - t525 * t564;
t60 = qJD(4) * t147;
t59 = t618 * t940;
t55 = 0.2e1 * t961;
t52 = t167 * t867 + t528 * t576;
t49 = t167 * t868 - t525 * t576;
t48 = t495 - t849;
t47 = t495 - t850;
t46 = t495 + t849;
t45 = t495 + t850;
t42 = t164 * t867 + t528 * t578;
t39 = t164 * t868 - t525 * t578;
t35 = -t525 * t563 + t292;
t30 = t931 * t990 + t996;
t29 = t897 * t931 - t641;
t27 = -t528 * t616 + t295;
t25 = -t525 * t616 + t292;
t24 = t465 * t945 + t480 * t672 + t551 - (-t458 + t481) * t958;
t23 = t458 * t935 + t465 * t944 + t480 * t679 + t481 * t681 + t552;
t19 = -t528 * t617 + t295;
t17 = -t525 * t617 + t292;
t16 = qJD(4) * t99 + qJD(5) * t97 + t930;
t15 = t956 + t376 * t672 + t551 - (-t369 + t377) * t958;
t14 = t369 * t935 + t376 * t679 + t377 * t681 + t552 + t957;
t11 = t399 * t672 + t528 * t577 + t956 + (t369 - t400) * t958;
t9 = t399 * t679 + t400 * t681 + t525 * t577 + t885 * t955 + t957;
t7 = -qJD(5) * t120 + t984 + t994;
t6 = -qJD(5) * t130 + t986 + t993;
t5 = qJD(4) * t100 + (-t715 * t819 + t699) * t990 + t976;
t4 = qJD(4) * t58 + qJD(5) * t56 + t284 + 0.2e1 * t604;
t3 = qJD(4) * t118 + t638 * t933 + t995;
t2 = qJD(4) * t128 + t528 * t641 + t991;
t1 = qJD(5) * t55 - t900 * t996 - 0.2e1 * t604 + t977;
t53 = [0, 0, 0, t527 * t721, t508 * qJD(2), 0, 0, 0, -t527 * t719, -t529 * t719, t483 * t420, t715 * t383, 0, 0, 0, qJD(2) * t397 - t485 * t767, qJD(2) * t398 - t483 * t767, (t639 + t763) * t414, t978 * t908, 0, 0, 0, qJD(2) * t213 - qJD(3) * t223 + t414 * t762, qJD(2) * t214 - qJD(3) * t224 + t762 * t901, t541, t618 * t947, 0, 0, 0, qJD(2) * t74 + qJD(3) * t76 - qJD(4) * t80 + t336 * t759, qJD(2) * t75 + qJD(3) * t77 - qJD(4) * t81 + t336 * t732, -t327 * t509 + t524 * t541, -0.2e1 * t525 * t810 * t997 - qJD(6) * t138, t618 * t973 - t698 * t933, -t618 * t974 - t697 * t933, -(t641 + t759 + t764) * t990, qJD(2) * t32 + qJD(3) * t34 + qJD(4) * t38 + qJD(5) * t44 + t161 * t698, -qJD(2) * t31 - qJD(3) * t33 - qJD(4) * t37 - qJD(5) * t43 + t161 * t697; 0, 0, 0, t686, t722, t721, -t527 * qJD(2), 0, -t651, -t650, t421, t730, -t419, t420, 0, t729, t728, t915, t932, t169, t168, 0, t742, t741, t959, t963, t30, t29, 0, t807, t806, t5, t1, t3, t2, t952, t9 * qJD(3) + t14 * qJD(4) + t17 * qJD(5) + t42 * qJD(6) + t525 * t567 + t837, t11 * qJD(3) + t15 * qJD(4) + t19 * qJD(5) + t39 * qJD(6) + t528 * t567 - t838; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t421, t730, -t419, t420, 0, -t688, -t689, t915, t932, t169, t168, 0, -t740, -t739, t959, t963, t30, t29, 0, t805, t804, t5, t1, t3, t2, t952, t9 * qJD(2) + t23 * qJD(4) + t25 * qJD(5) + t52 * qJD(6) + t525 * t566 + t833, t11 * qJD(2) + t24 * qJD(4) + t27 * qJD(5) + t49 * qJD(6) + t528 * t566 - t835; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t915, t932, t348 * t715 + t763, -qJD(4) * t414 + t349 * t715, 0, t690, t691, t959, t963, t997, qJD(5) * t207 - t764 + t920, 0, -t803, -t802, (-t525 * t760 + t699) * t990 + t715 * t100 + t976, t284 + (-qJD(4) * t900 + t615) * t990 + t992 * t966, t118 * t715 + t761 * t933 + t995, t128 * t715 + t760 * t933 + t991, t952, t14 * qJD(2) + t23 * qJD(3) + t35 * qJD(5) + t73 * qJD(6) + t525 * t558 + t830, t15 * qJD(2) + t24 * qJD(3) + t78 * qJD(5) + t70 * qJD(6) + t528 * t558 - t832; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t959, t963, t997, qJD(4) * t207 - t759 + t920, 0, t693, t694, t105 - (t525 * t757 - t699) * t990 + t978 * t967, t715 * t55 - (qJD(5) * t900 + t614) * t990 + t977, t758 * t933 + t954 * t978 + t988, t757 * t933 + t953 * t978 - t987, t570, qJD(2) * t17 + qJD(3) * t25 + qJD(4) * t35 + t649 * t990 + t852, qJD(2) * t19 + qJD(3) * t27 + qJD(4) * t78 + t648 * t990 - t853; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t893, t905 * t907 - t787, t637 * t820, t596 * t933 + t978 * t989, -t59, qJD(2) * t42 + qJD(3) * t52 + qJD(4) * t73 - t525 * t597, qJD(2) * t39 + qJD(3) * t49 + qJD(4) * t70 - t528 * t597; 0, 0, 0, -t686, -t722, 0, 0, 0, t651, t650, -t421, -t730, 0, 0, 0, -t729, -t728, -t915, -t932, -t402, -t405, 0, -t742, -t741, -t959, -t963, 0, t60, 0, -t807, -t806, t16, t4, t7, t6, -t952, -qJD(3) * t8 - qJD(4) * t12 + qJD(5) * t18 + qJD(6) * t41 - t837, -qJD(3) * t10 - qJD(4) * t13 + qJD(5) * t20 - qJD(6) * t40 + t838; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -pkin(4) * t655, -pkin(4) * t662, 0, 0, 0, 0, 0, -t475 - t457, -t476 + t456, 0, 0, 0, 0, 0, t895, -t385 - t371 + t367, t509, t495, 0, 0, 0, -t369 * t522 - t361 - t366 - t382, -t369 * t756 - t525 * t895; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, (-t656 - t655) * pkin(4), (-t663 - t662) * pkin(4), 0, 0, 0, 0, 0, qJD(4) * t417 - t475 - t896, qJD(4) * t418 - t476 - t770, 0, 0, 0, 0, 0, qJD(4) * t247 + qJD(5) * t237 - t384 - t774, qJD(4) * t249 + qJD(5) * t235 - t385 - t773, t509, t495, 0, 0, 0, qJD(4) * t217 + qJD(5) * t211 + qJD(6) * t204 - t382 - t580, qJD(4) * t216 + qJD(5) * t210 + qJD(6) * t205 + t399 * t638 - t856; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t727, -t726, 0, qJD(3) * t417 - t457 - t771, qJD(3) * t418 + t456 + t772, 0, 0, 0, t747, 0, qJD(3) * t247 + qJD(5) * t267 - t370 - t776, qJD(3) * t249 + qJD(5) * t269 - t371 - t775, t90, t46, t979, t980, 0, qJD(3) * t217 + qJD(5) * t231 + qJD(6) * t221 - t366 - t575, -t855 + qJD(3) * t216 + qJD(5) * t230 + qJD(6) * t222 + (qJD(2) + qJD(4)) * t831; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t237 + qJD(4) * t267 - t368 - t777, qJD(3) * t235 + qJD(4) * t269 + t367 + t778, t89, t45, -t753, -t749, 0, qJD(3) * t211 + qJD(4) * t231 + qJD(6) * t227 - t361 - t574, t854 + qJD(3) * t210 + qJD(4) * t230 + qJD(6) * t228 + (qJD(2) + qJD(5)) * t525 * t373; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t87, t194, t94, t93, t948, qJD(3) * t204 + qJD(4) * t221 + qJD(5) * t227 - t373 * t756 - t572, qJD(3) * t205 + qJD(4) * t222 + qJD(5) * t228 + t373 * t522 - t573; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t421, -t730, 0, 0, 0, t688, t689, -t915, -t932, -t402, -t405, 0, t740, t739, -t959, -t963, 0, t60, 0, -t805, -t804, t16, t4, t7, t6, -t952, qJD(2) * t8 - qJD(4) * t21 + qJD(5) * t26 + qJD(6) * t51 - t833, qJD(2) * t10 - qJD(4) * t22 + qJD(5) * t28 - qJD(6) * t50 + t835; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, pkin(4) * t656, pkin(4) * t663, 0, 0, 0, 0, 0, -qJD(4) * t424 + t896, -qJD(4) * t427 + t770, 0, 0, 0, 0, 0, qJD(4) * t246 + qJD(5) * t236 + t774, qJD(4) * t248 + qJD(5) * t234 + t773, t509, t495, 0, 0, 0, qJD(4) * t218 - qJD(5) * t212 - qJD(6) * t202 + t580, qJD(4) * t215 + qJD(5) * t209 - qJD(6) * t203 - t399 * t769 + t856; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -pkin(2) * t652, -pkin(2) * t659, 0, 0, 0, 0, 0, t791, -t468 + t453, t509, t495, 0, 0, 0, -t458 * t522 - t438 - t452, -t458 * t756 - t525 * t791; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t727, -t726, 0, -t725 + (-t653 - t652) * pkin(2), -t724 + (-t660 - t659) * pkin(2), 0, 0, 0, t747, 0, qJD(5) * t415 - t467 - t590, qJD(5) * t416 - t468 - t589, t90, t46, t979, t980, 0, qJD(5) * t353 + qJD(6) * t342 - t452 - t545, qJD(5) * t352 + qJD(6) * t343 + (qJD(3) + qJD(4)) * t825 + t598; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t415 - t454 - t591, qJD(4) * t416 + t453 - t592, t89, t45, -t753, -t749, 0, qJD(4) * t353 + qJD(6) * t346 - t438 - t544, qJD(4) * t352 + qJD(6) * t347 + (qJD(3) + qJD(5)) * t525 * t465 + t599; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t87, t194, t94, t93, t948, qJD(4) * t342 + qJD(5) * t346 - t465 * t756 - t547, qJD(4) * t343 + qJD(5) * t347 + t465 * t522 - t546; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t915, -t932, t715 * t410, t715 * t411, 0, -t690, -t691, -t959, -t963, 0, qJD(5) * t325 - t147 * t715, 0, t803, t802, -t715 * t99 + t930, qJD(5) * t54 - t58 * t715 + t614 * t990 + t284, -t972 * t992 + t984 - t988, -t971 * t992 + t993, -t952, qJD(2) * t12 + qJD(3) * t21 + qJD(5) * t36 + qJD(6) * t72 - t830, qJD(2) * t13 + qJD(3) * t22 + qJD(5) * t79 - qJD(6) * t71 + t832; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t727, t726, 0, qJD(3) * t424 + t771, qJD(3) * t427 - t772, 0, 0, 0, -t747, 0, -qJD(3) * t246 - qJD(5) * t266 + t776, -qJD(3) * t248 - qJD(5) * t268 + t775, t92, t48, -t979, -t980, 0, -qJD(3) * t218 - qJD(5) * t232 - qJD(6) * t219 + t575, -qJD(3) * t215 + qJD(5) * t229 - qJD(6) * t220 - t376 * t769 + t855; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t727, t726, 0, pkin(2) * t653 + t725, pkin(2) * t660 + t724, 0, 0, 0, -t747, 0, -qJD(5) * t423 + t590, -qJD(5) * t426 + t589, t92, t48, -t979, -t980, 0, -qJD(5) * t354 - qJD(6) * t340 + t545, qJD(5) * t351 - qJD(6) * t341 - t480 * t766 - t598; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t708, -pkin(5) * t657, t509, t495, 0, 0, 0, -t511 * t522 - t528 * t708, -t511 * t756 + t506; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t734, 0, -t620 + t588, (-t658 - t657) * pkin(5) + t587, t509, t495 + t851, -t979, -t980, 0, qJD(6) * t428 - t528 * t620 + t555, qJD(6) * t429 + t506 - t538; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t87, t194, t94, t93, t948, qJD(5) * t428 - t528 * t709 - t540, qJD(5) * t429 + t525 * t709 - t539; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t959, -t963, 0, -qJD(4) * t325, 0, -t693, -t694, -t715 * t97 + t930, -qJD(4) * t54 - t56 * t715 - t615 * t990 + t284, t120 * t715 - t697 + t994, t130 * t715 + t698 + t986 + t987, -t570, -qJD(2) * t18 - qJD(3) * t26 - qJD(4) * t36 + qJD(6) * t102 - t852, -qJD(2) * t20 - qJD(3) * t28 - qJD(4) * t79 - qJD(6) * t101 + t853; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t236 + qJD(4) * t266 + t777, -qJD(3) * t234 + qJD(4) * t268 - t778, t91, t47, t753, t749, 0, qJD(3) * t212 + qJD(4) * t232 - qJD(6) * t225 + t574, -qJD(3) * t209 - qJD(4) * t229 - qJD(6) * t226 - t373 * t769 - t854; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t423 + t591, qJD(4) * t426 + t592, t91, t47, t753, t749, 0, qJD(4) * t354 - qJD(6) * t344 + t544, -qJD(4) * t351 - qJD(6) * t345 - t465 * t766 - t599; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t734, 0, -t588 + t710, pkin(5) * t658 - t587, t509, t495 - t851, t979, t980, 0, -qJD(6) * t422 + t528 * t710 - t555, -qJD(6) * t425 + t538; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t509, t495, 0, 0, 0, -t525 * t717, -t528 * t717; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t87, t194, t596, t522 + t687, t948, -t534, -t535; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t893, -0.2e1 * t905 * t933 + t787, -(-t780 * t933 - t757) * t990 - t978 * t969, -(-t684 + t758) * t990 + t978 * t970, -t59, -qJD(2) * t41 - qJD(3) * t51 - qJD(4) * t72 - qJD(5) * t102 - t161 * t687, qJD(2) * t40 + qJD(3) * t50 + qJD(4) * t71 + qJD(5) * t101 - t161 * t685; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t87, t195, -t982, t981, -t948, qJD(3) * t202 + qJD(4) * t219 + qJD(5) * t225 + t572, qJD(3) * t203 + qJD(4) * t220 + qJD(5) * t226 + t573; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t87, t195, -t982, t981, -t948, qJD(4) * t340 + qJD(5) * t344 + t547, qJD(4) * t341 + qJD(5) * t345 + t546; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t87, t195, -t982, t981, -t948, qJD(5) * t422 + t540, qJD(5) * t425 + t539; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t87, t195, t685, -t687, -t948, t534, t535; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t53;
