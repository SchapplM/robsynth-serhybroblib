% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% palh2m2OL
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [5x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[A2Off,A3Off,A4Off,L1,L2]';
%
% Output:
% f_new_reg [(3*7)x(7*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2020-05-03 06:35
% Revision: 702b02ffee4f47164fa6a11b998f1d39ead3f7a6 (2020-05-02)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = palh2m2OL_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(5,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'palh2m2OL_invdynf_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'palh2m2OL_invdynf_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'palh2m2OL_invdynf_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'palh2m2OL_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [5 1]), ...
  'palh2m2OL_invdynf_fixb_reg2_snew_vp: pkin has to be [5x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2020-05-03 06:32:24
% EndTime: 2020-05-03 06:34:55
% DurationCPUTime: 147.02s
% Computational Cost: add. (11263->1263), mult. (19056->1640), div. (0->0), fcn. (10394->12), ass. (0->833)
t13331 = qJDD(2) + qJDD(3);
t13349 = sin(qJ(3));
t13355 = cos(qJ(3));
t13366 = qJD(1) ^ 2;
t13637 = t13355 * t13366;
t13256 = t13349 * t13637;
t13356 = cos(qJ(2));
t13341 = t13356 ^ 2;
t13340 = t13355 ^ 2;
t13292 = t13340 - 0.1e1 / 0.2e1;
t13350 = sin(qJ(2));
t13648 = t13350 * t13356;
t13540 = t13292 * t13648;
t13612 = 0.2e1 * t13366;
t13655 = t13349 * t13355;
t13373 = (t13341 * t13655 + t13540) * t13612 - t13256;
t13370 = t13373 - t13331;
t12972 = -qJDD(4) - qJDD(5) + t13370;
t13347 = sin(qJ(5));
t12960 = t13347 * t12972;
t13361 = qJD(6) ^ 2;
t13333 = (qJD(4) + qJD(5));
t13301 = (qJD(3) + t13333);
t13269 = qJD(2) + t13301;
t13267 = t13269 ^ 2;
t13312 = t13340 * t13366;
t13638 = t13355 * t13356;
t13658 = t13349 * t13350;
t13478 = t13638 * t13658;
t13430 = t13366 * t13478;
t13527 = 0.2e1 * t13430 + t13312 - (0.2e1 * t13312 - t13366) * t13341;
t13472 = t13366 - t13527;
t13424 = t13267 + t13472;
t12962 = t13361 + t13424;
t13164 = t13638 - t13658;
t13348 = sin(qJ(4));
t13353 = cos(qJ(5));
t13354 = cos(qJ(4));
t13765 = t12972 * t13353;
t13821 = (qJD(6) * qJD(1));
t13947 = -2 * t13821;
t13990 = (-t12962 * t13353 + t12960) * t13354 + (t12962 * t13347 + t13765) * t13348 + t13164 * t13947;
t13817 = pkin(2) * t13340;
t13801 = 0.2e1 * t13817 - pkin(2);
t13185 = pkin(4) * t13355 + t13801;
t13313 = t13341 * t13366;
t13365 = qJD(2) ^ 2;
t13825 = t13365 * pkin(4);
t13827 = t13350 * g(3);
t13244 = t13825 + t13827;
t13181 = t13244 * t13355;
t13335 = qJD(2) + qJD(3);
t13330 = t13335 ^ 2;
t13264 = t13330 + t13366;
t13230 = pkin(2) * t13264;
t13342 = qJDD(2) * pkin(4);
t13336 = t13366 * pkin(1);
t13351 = sin(qJ(1));
t13357 = cos(qJ(1));
t13615 = -t13357 * g(1) - t13351 * g(2);
t13160 = -t13336 + t13615;
t13650 = t13350 * t13160;
t13625 = t13650 - t13342;
t13967 = t13625 * t13349;
t13002 = t13967 + t13230;
t13528 = pkin(2) * t13312 - t13002;
t13647 = t13350 * t13366;
t13258 = pkin(4) * t13647 - g(3);
t13200 = t13349 * t13258;
t13360 = 0.2e1 * pkin(2);
t13542 = t13349 * t13647;
t13071 = t13542 * t13360 + t13160;
t13739 = t13071 * t13355;
t13890 = t13739 + t13200;
t13392 = -t13356 * t13890 - t13528;
t13429 = -t13181 - t13392;
t12864 = -t13185 * t13313 + t13429;
t13987 = t13353 * t13424 - t12960;
t13180 = t13244 * t13349;
t13282 = t13331 * pkin(2);
t13906 = -t13282 - t13180;
t13074 = t13348 * t13906;
t13334 = (qJD(3) + qJD(4));
t13302 = qJD(2) + t13334;
t13288 = t13302 ^ 2;
t13828 = t13288 * pkin(5);
t13028 = t13828 + t13074;
t13289 = qJDD(4) + t13331;
t13266 = t13289 * pkin(5);
t13667 = t13348 * t13347;
t13215 = t13267 + t13366;
t13805 = t13215 * pkin(3);
t13986 = -t13002 * t13667 + t13028 * t13353 - t13266 * t13347 + t13805;
t13262 = qJDD(5) + t13289;
t13208 = t13347 * t13262;
t13339 = t13354 ^ 2;
t13291 = t13339 - 0.1e1 / 0.2e1;
t13686 = t13291 * t13340;
t13639 = t13355 * t13354;
t13541 = t13349 * t13639;
t13479 = t13348 * t13541;
t13950 = -0.2e1 * t13479;
t13380 = 0.2e1 * t13686 + t13950 - t13291;
t13543 = t13291 * t13655;
t13666 = t13348 * t13354;
t13033 = t13292 * t13666 + t13543;
t13043 = t13686 - t13479 - t13339 / 0.2e1 + 0.1e1 / 0.4e1;
t13311 = t13339 * t13366;
t13636 = t13356 * t13366;
t13537 = t13350 * t13636;
t13948 = 0.4e1 * t13537;
t13428 = t13033 * t13948 - 0.4e1 * t13043 * t13313 + t13366 * t13950 - t13311 + (0.2e1 * t13311 - t13366) * t13340;
t13403 = t13267 - t13428;
t13659 = t13349 * t13348;
t13433 = t13639 - t13659;
t13574 = qJD(1) * t13658;
t13500 = qJD(6) * t13574;
t13468 = 0.2e1 * t13500;
t13654 = t13349 * t13366;
t13841 = 0.2e1 * t13339 - 0.1e1;
t13498 = t13841 * t13654;
t13803 = t13350 * qJD(1);
t13594 = qJD(6) * t13803;
t13518 = -0.2e1 * t13594;
t13664 = t13348 * t13366;
t13533 = t13347 * t13664;
t13547 = t13340 * t13666;
t13573 = t13347 * t13803;
t13806 = qJD(1) * t13356;
t13609 = 0.2e1 * t13806;
t13672 = t13347 * t13366;
t13746 = t13033 * t13341;
t13985 = t13353 * (t13361 + t13403) + (0.2e1 * t13547 - 0.4e1 * t13746) * t13672 + (qJD(6) * t13433 - t13380 * t13573) * t13609 + (t13347 * t13498 + t13348 * t13518) * t13355 - (t13468 + t13533) * t13354 + t13208;
t13822 = (qJD(4) * qJD(5));
t13364 = qJD(3) ^ 2;
t13865 = 2 * qJD(3);
t13866 = 2 * qJD(2);
t13899 = -t13301 * t13866 - t13333 * t13865;
t13363 = qJD(4) ^ 2;
t13903 = -qJD(5) ^ 2 - t13363;
t13883 = t13364 + t13365 - t13903 - t13899;
t13391 = (2 * t13822) + t13883;
t13018 = t13361 + t13391;
t12943 = t13018 * t13353 + t13208;
t13699 = t13262 * t13353;
t13894 = -t13018 * t13347 + t13699;
t12875 = t12943 * t13354 + t13348 * t13894;
t13960 = -t13348 * t12943 + t13354 * t13894;
t13984 = t13356 * (-t12875 * t13349 + t13355 * t13960) - (t12875 * t13355 + t13349 * t13960) * t13350;
t13338 = t13353 ^ 2;
t13290 = t13338 - 0.1e1 / 0.2e1;
t13674 = t13347 * t13353;
t13032 = t13290 * t13666 + t13291 * t13674;
t13310 = t13338 * t13366;
t13640 = t13354 * t13347;
t13643 = t13353 * t13348;
t13480 = t13640 * t13643;
t13687 = t13290 * t13339;
t13800 = -t13338 / 0.2e1 + 0.1e1 / 0.4e1;
t13042 = t13687 - t13480 + t13800;
t13952 = -0.4e1 * t13042;
t13743 = t13042 * t13340;
t13971 = 0.8e1 * t13339;
t13861 = 0.2e1 * t13338;
t13844 = t13861 - 0.1e1;
t13979 = t13844 + 0.4e1 * t13480;
t13953 = -0.8e1 * t13032 * t13655 + t13800 * t13971 + 0.8e1 * t13743 + t13979;
t13530 = t13313 * t13953 + t13312 * t13952 + (0.2e1 * t13310 - t13366) * t13339;
t13949 = -0.2e1 * t13480;
t13554 = t13339 * t13674;
t13747 = t13032 * t13340;
t12885 = t13747 + t13042 * t13655 - t13554 / 0.2e1 + t13800 * t13666 + t13674 / 0.4e1;
t13954 = -0.8e1 * t12885;
t13405 = 0.4e1 * t13032 * t13256 + t13366 * t13949 + t13537 * t13954 + t13530;
t13807 = qJD(1) * t13353;
t12818 = t13405 + (t13269 + t13807) * (t13269 - t13807);
t13352 = cos(qJ(6));
t13337 = t13352 ^ 2;
t13983 = t12818 * t13337;
t13982 = t13288 + t13472;
t13980 = t13405 - t13310;
t13693 = t13269 * t13353;
t13581 = qJD(1) * t13693;
t13798 = qJDD(1) * t13347;
t13113 = 0.2e1 * t13581 + t13798;
t13694 = t13269 * t13347;
t13578 = qJD(1) * t13694;
t13512 = 0.2e1 * t13578;
t13795 = qJDD(1) * t13353;
t13418 = t13512 - t13795;
t13727 = t13354 * t13418;
t13893 = t13113 * t13348 + t13727;
t13728 = t13113 * t13354;
t13930 = t13348 * t13418 - t13728;
t13977 = t13355 * t13930;
t12893 = -t13349 * t13893 - t13977;
t13958 = -t13349 * t13930 + t13355 * t13893;
t12846 = t12893 * t13350 + t13356 * t13958;
t13019 = t13366 + t13391;
t12998 = t13361 + t13019;
t12968 = -t13313 + t12998;
t13461 = qJDD(2) + t13537;
t13175 = qJDD(3) + t13461;
t13156 = qJDD(4) + t13175;
t13133 = qJDD(5) + t13156;
t13100 = t13347 * t13133;
t12919 = t12968 * t13353 + t13100;
t13102 = t13133 * t13353;
t13909 = -t12968 * t13347 + t13102;
t13976 = t13355 * (-t13348 * t12919 + t13354 * t13909);
t13119 = t13160 * t13349;
t13065 = -pkin(2) * t13647 - t13119;
t13046 = t13065 * t13348;
t13201 = t13258 * t13348;
t13092 = 0.2e1 * pkin(5) * t13542 - t13201;
t13066 = t13092 * t13355;
t13975 = -t13046 + t13066;
t13332 = qJDD(1) * pkin(1);
t13325 = t13351 * g(1);
t13326 = t13357 * g(2);
t13616 = t13325 - t13326;
t13523 = t13332 + t13616;
t13809 = qJD(1) * t13302;
t13606 = pkin(5) * t13809;
t13571 = 0.2e1 * t13606;
t13031 = pkin(3) * t13113 + t13571;
t13167 = pkin(3) * t13578;
t13810 = pkin(3) * t13353;
t13272 = pkin(5) + t13810;
t13068 = qJDD(1) * t13272 - 0.2e1 * t13167;
t13808 = qJD(1) * t13335;
t13265 = pkin(2) * t13808;
t13863 = 0.2e1 * t13265;
t12909 = t13031 * t13354 + t13068 * t13348 + t13863;
t13820 = pkin(2) * qJDD(1);
t12914 = -t13031 * t13348 + t13068 * t13354 + t13820;
t13343 = pkin(4) * qJDD(1);
t13789 = (t12909 * t13349 - t12914 * t13355 - t13343) * t13356;
t13974 = t13523 - t13789;
t13471 = t13267 + t13527;
t13369 = t13373 + t13331;
t12983 = qJDD(4) + t13369;
t12971 = qJDD(5) + t12983;
t13766 = t12971 * t13347;
t13973 = t13353 * t13471 + t13766;
t13946 = qJDD(6) / 0.2e1;
t13623 = qJD(6) * t13693 + t13347 * t13946;
t13885 = -qJD(6) * t13694 + t13353 * t13946;
t12955 = t13623 * t13348 - t13354 * t13885;
t13962 = t13885 * t13348 + t13623 * t13354;
t12890 = t12955 * t13355 + t13962 * t13349;
t12944 = t13019 * t13353 + t13208;
t13751 = t13019 * t13347;
t12945 = t13699 - t13751;
t13770 = t12945 * t13348;
t12876 = t12944 * t13354 + t13770;
t13934 = t12944 * t13348 - t12945 * t13354;
t13972 = t13349 * t12876 + t13355 * t13934;
t13970 = 0.2e1 * t13350;
t13614 = t13361 + t13366;
t13966 = -t13310 + t13614 + t13530;
t13584 = pkin(3) * t13667;
t13467 = -pkin(2) + 0.2e1 * t13584;
t13706 = t13354 * t13467;
t13965 = -t13841 * t13272 + t13706;
t13162 = t13640 + t13643;
t13642 = t13353 * t13354;
t13163 = t13642 - t13667;
t13719 = t13163 * t13355;
t13435 = t13162 * t13349 - t13719;
t13720 = t13162 * t13355;
t13008 = t13163 * t13349 + t13720;
t13754 = t13008 * t13356;
t13964 = t13350 * t13435 - t13754;
t13300 = t13365 + t13366;
t13521 = t13364 + t13300;
t13083 = (qJD(4) * t13865) + (t13334 * t13866) + t13363 + t13521;
t13235 = t13348 * t13289;
t13000 = t13083 * t13354 + t13235;
t13688 = t13289 * t13354;
t13001 = -t13083 * t13348 + t13688;
t13963 = t13000 * t13355 + t13001 * t13349;
t13492 = pkin(3) * t13542;
t13457 = t13347 * t13492;
t12985 = 0.8e1 * t13348 * t13457 - t13071;
t13286 = pkin(5) * t13647;
t13501 = t13348 * t13286;
t13459 = t13349 * t13501;
t13097 = -0.4e1 * t13459 + t13258;
t13961 = t13092 * t13353 + (t12985 * t13353 - t13097 * t13347) * t13354;
t13710 = t13215 * t13347;
t13057 = -t13699 + t13710;
t13709 = t13215 * t13353;
t13058 = t13208 + t13709;
t12930 = t13057 * t13354 + t13058 * t13348;
t13898 = t13348 * t13057 - t13058 * t13354;
t13957 = t13349 * t12930 + t13355 * t13898;
t13169 = t13267 + t13614;
t13040 = t13169 * t13347 - t13699;
t13041 = t13169 * t13353 + t13208;
t12918 = t13040 * t13354 + t13041 * t13348;
t13549 = t13349 * t13643;
t13617 = -t13350 * t13262 * t13549 + (2 * t13821);
t13744 = t13041 * t13354;
t13956 = t13356 * (-t12918 * t13349 + t13355 * (-t13040 * t13348 + t13744)) + t13617;
t13550 = t13348 * t13658;
t13482 = t13347 * t13550;
t13159 = qJDD(1) * t13482;
t13633 = qJDD(6) + t13159;
t13106 = t13581 + t13798 / 0.2e1;
t13108 = -t13795 / 0.2e1 + t13578;
t12954 = t13106 * t13354 - t13108 * t13348;
t13661 = t13349 * t12954;
t13731 = t13106 * t13348;
t13955 = -t13356 * (t13355 * (t13727 + 0.2e1 * t13731) + 0.2e1 * t13661) + t13633;
t13558 = t13340 * t13647;
t13511 = 0.2e1 * t13558;
t13656 = t13349 * t13354;
t13649 = t13350 * t13355;
t13915 = t13347 * t13841;
t13944 = t13353 * t13915;
t13943 = t13355 * (-0.4e1 * t13687 + t13979);
t13491 = t13348 * t13581;
t13730 = t13108 * t13354;
t13769 = t12954 * t13355;
t13941 = (t13349 * (t13491 + t13730) - t13769) * t13350;
t13902 = -t12955 * t13349 + t13355 * t13962;
t13580 = t13354 * t13809;
t13797 = qJDD(1) * t13348;
t13122 = 0.2e1 * t13580 + t13797;
t13059 = pkin(5) * t13122 + t13863;
t13576 = t13348 * t13809;
t13794 = qJDD(1) * t13354;
t13123 = -0.2e1 * t13576 + t13794;
t13077 = pkin(5) * t13123 + t13820;
t13774 = (t13059 * t13349 - t13077 * t13355 - t13343) * t13356;
t13940 = t13523 - t13774;
t13400 = t13162 * qJD(6);
t13589 = t13348 * t13844;
t13804 = t13349 * qJD(1);
t13939 = (qJD(1) * t13667 + qJD(6) * t13658) * t13642 + (t13350 * t13400 + (-t13354 * t13589 - t13944) * t13804) * t13355;
t13938 = 0.8e1 * t12885 * t13313 - 0.4e1 * t13032 * t13312;
t13242 = t13288 + t13366;
t13072 = -t13242 * t13348 + t13688;
t13703 = t13242 * t13354;
t13073 = t13235 + t13703;
t13937 = -t13072 * t13355 + t13073 * t13349;
t13389 = (t13349 * t13642 + t13720) * t13350;
t13753 = t13435 * t13356;
t13936 = t13753 + t13389;
t13935 = t13000 * t13349 - t13001 * t13355;
t13799 = -t13340 / 0.2e1 + 0.1e1 / 0.4e1;
t13933 = t13292 * t13341 + t13799;
t13842 = 0.8e1 * t13338 - 0.4e1;
t13932 = t13655 * (t13666 * t13842 + t13674 * (t13971 - 0.4e1)) + 0.1e1;
t13315 = pkin(2) * t13348;
t13023 = pkin(3) * t13915 + 0.2e1 * t13272 * t13666 + t13315;
t13560 = t13350 * t13687;
t13931 = 0.4e1 * (t13350 * t13533 * t13642 + t13042 * t13511 - t13366 * t13560) * t13356 - t13262;
t13462 = -qJDD(2) + t13537;
t13176 = -qJDD(3) + t13462;
t13157 = -qJDD(4) + t13176;
t13134 = -qJDD(5) + t13157;
t13101 = t13347 * t13134;
t13166 = t13313 + t13267;
t12994 = t13166 * t13353 - t13101;
t13103 = t13134 * t13353;
t13439 = t13166 * t13347 + t13103;
t13929 = t12994 * t13348 + t13439 * t13354;
t12961 = t12971 * t13353;
t12969 = t13361 + t13471;
t13161 = t13349 * t13356 + t13649;
t13928 = t13354 * (-t12969 * t13347 + t12961) - (t12969 * t13353 + t13766) * t13348 - t13161 * t13947;
t13129 = t13361 + t13166;
t12977 = t13129 * t13347 + t13103;
t13910 = t13129 * t13353 - t13101;
t13927 = qJD(6) * t13609 + t13355 * (-t12977 * t13348 + t13354 * t13910);
t13725 = t13123 * t13349;
t13116 = t13580 + t13797 / 0.2e1;
t13726 = t13116 * t13355;
t12964 = t13726 + t13725 / 0.2e1;
t13443 = 0.2e1 * t13116 * t13349 - t13123 * t13355;
t12898 = t12964 * t13970 + t13356 * t13443;
t13924 = t12909 * t13355 + t12914 * t13349;
t13922 = 0.2e1 * qJD(1);
t13921 = t13341 - 0.1e1 / 0.2e1;
t13913 = t13349 * t13943;
t13843 = 0.4e1 * t13338 - 0.2e1;
t13912 = t13666 * t13843;
t13575 = t13335 * t13804;
t13793 = qJDD(1) * t13355;
t13138 = -0.2e1 * t13575 + t13793;
t13109 = t13138 * t13356;
t13579 = t13355 * t13808;
t13796 = qJDD(1) * t13349;
t13135 = 0.2e1 * t13579 + t13796;
t13908 = -t13135 * t13350 + t13109;
t13089 = -t13200 + 0.2e1 * t13501;
t13414 = t13160 * t13355 + t13200;
t13695 = t13267 * t13353;
t13079 = t13208 + t13695;
t13099 = t13288 * t13354 + t13235;
t13259 = t13349 * t13331;
t13683 = t13330 * t13355;
t13125 = t13259 + t13683;
t13504 = t13264 * t13355 + t13259;
t13199 = (qJD(2) * t13865) + t13521;
t13505 = t13199 * t13355 + t13259;
t13905 = -t13313 - t13365;
t13904 = t13360 - 0.4e1 * t13584;
t13592 = t13810 / 0.2e1;
t13846 = -qJDD(1) / 0.2e1;
t13900 = -pkin(5) * t13846 + qJDD(1) * t13592 - t13167;
t13306 = t13356 * qJDD(1);
t13597 = qJD(2) * t13803;
t13420 = 0.2e1 * t13597 - t13306;
t13682 = t13331 * t13355;
t13684 = t13330 * t13349;
t13897 = t13682 - t13684;
t13698 = t13264 * t13349;
t13896 = t13682 - t13698;
t13792 = qJDD(2) * t13350;
t13137 = -t13300 * t13356 - t13792;
t13098 = -t13288 * t13348 + t13688;
t13665 = t13348 * t13355;
t13434 = t13656 + t13665;
t13610 = -0.2e1 * t13806;
t13895 = t13699 - (t13353 * t13380 * t13803 + qJD(6) * t13434) * t13610 - (t13353 * t13498 + t13354 * t13518) * t13355;
t13891 = t13072 * t13349 + t13073 * t13355;
t13029 = pkin(3) * t13106 + t13606;
t13864 = pkin(5) / 0.2e1;
t13060 = -t13167 + (t13592 + t13864) * qJDD(1);
t13889 = -t13029 * t13348 + t13060 * t13354;
t13887 = t12994 * t13354 - t13348 * t13439;
t13641 = t13353 * t13366;
t13553 = t13347 * t13641;
t13483 = t13339 * t13553;
t13531 = 0.2e1 * t13483 + t13938;
t13882 = t12977 * t13354 + t13348 * t13910;
t13880 = -t12919 * t13354 - t13348 * t13909;
t13186 = t13313 + t13288;
t13436 = t13157 * t13348 - t13186 * t13354;
t13437 = t13157 * t13354 + t13186 * t13348;
t13877 = t13349 * t13437 + t13436 * t13355;
t13876 = t13349 * (t13169 * t13667 - t13744) - t12918 * t13355;
t12940 = t12998 * t13353 + t13208;
t12941 = t12998 * t13347 - t13699;
t12869 = t12940 * t13348 + t12941 * t13354;
t13773 = t12940 * t13354;
t13875 = t13349 * (t12998 * t13667 - t13773) - t12869 * t13355;
t13152 = t13313 - t13242;
t12999 = t13152 * t13348 + t13156 * t13354;
t13438 = t13152 * t13354 - t13156 * t13348;
t13874 = t12999 * t13355 + t13349 * t13438;
t13651 = t13350 * t13443;
t12901 = t13356 * (t13122 * t13355 + t13725) - t13651;
t13455 = qJD(1) * t13482;
t13456 = t13349 * t13491;
t13862 = -0.2e1 * t13269;
t13869 = (t13512 * t13656 + 0.2e1 * t13456 + t13977) * t13356 + t13893 * t13649 + t13658 * t13728 + t13455 * t13862;
t13868 = -0.2e1 * qJD(1);
t13860 = -0.2e1 * t13339;
t13859 = 0.4e1 * t13339;
t13858 = -0.2e1 * t13340;
t13857 = 0.2e1 * t13340;
t13856 = 0.4e1 * t13340;
t13346 = sin(qJ(6));
t13855 = -0.2e1 * t13346;
t13854 = 0.2e1 * t13346;
t13853 = 0.2e1 * t13347;
t13852 = -0.2e1 * t13349;
t13851 = -0.2e1 * t13350;
t13850 = 0.2e1 * t13351;
t13849 = -0.2e1 * t13352;
t13848 = 0.2e1 * t13352;
t13847 = -0.2e1 * t13357;
t13845 = -t13356 / 0.2e1;
t13840 = t13859 - 0.2e1;
t13838 = t13857 - 0.1e1;
t13837 = t13856 - 0.2e1;
t13836 = pkin(4) * t13300;
t13835 = pkin(5) * t13242;
t13834 = pkin(5) * t13339;
t13833 = pkin(5) * t13340;
t13832 = pkin(5) * t13347;
t13831 = pkin(5) * t13348;
t13830 = pkin(5) * t13353;
t13829 = pkin(5) * t13354;
t13826 = t13356 * g(3);
t13268 = pkin(4) * t13659;
t13241 = t13268 - pkin(5);
t13635 = t13357 * qJDD(1);
t13824 = pkin(1) * t13635 - g(2);
t13819 = pkin(2) * t13199;
t13818 = pkin(2) * t13330;
t13816 = pkin(2) * t13354;
t13815 = pkin(2) * t13355;
t13814 = pkin(3) * t13338;
t13813 = pkin(3) * t13340;
t13812 = pkin(3) * t13347;
t13811 = pkin(3) * t13348;
t13254 = pkin(2) * t13667;
t13217 = t13254 - pkin(3);
t13294 = 0.2e1 * t13814;
t13802 = t13294 - pkin(3);
t13791 = qJDD(2) * t13356;
t13788 = t12869 * t13349;
t13785 = t13934 * t13349;
t13419 = qJD(6) * t13455;
t13126 = 0.2e1 * t13419;
t12886 = t13936 * t13947 + t13126 + t13614;
t13784 = t12886 * t13346;
t13783 = t12886 * t13352;
t13314 = pkin(2) * t13347;
t13211 = t13314 - 0.2e1 * t13811;
t13055 = (0.4e1 * t13814 + 0.2e1 * t13830) * t13348 + t13211;
t13213 = t13315 - 0.2e1 * t13812;
t13143 = t13213 * t13353;
t13263 = t13810 + t13864;
t13777 = (t13055 * t13354 + t13143 + (t13263 * t13859 - pkin(5)) * t13347) * t13340;
t13421 = -t13338 + t13949;
t13776 = (t13163 * t13350 * qJD(6) + (-0.2e1 * t13687 - 0.1e1 / 0.2e1 - t13421) * t13804) * t13355;
t13321 = -2 * t13822;
t13423 = -t13521 + t13899;
t13384 = t13321 + t13423 + t13903;
t12979 = t13313 + t13384;
t12927 = t12979 * t13347 + t13102;
t13775 = t12927 * t13348;
t13772 = t12941 * t13348;
t13756 = (t13161 * t13348 - t13164 * t13354) * qJDD(1);
t13755 = (t13161 * t13354 + t13164 * t13348) * qJDD(1);
t13555 = t13347 * t13655;
t13495 = pkin(3) * t13555;
t13691 = t13272 * t13340;
t13394 = -t13495 + t13691;
t13619 = -t13810 / 0.2e1 - pkin(5) / 0.2e1;
t13030 = t13394 + t13619;
t13748 = t13030 * t13341;
t13742 = (-t13478 + t13933) * t13339;
t13733 = (pkin(2) * t13138 + t13343) * t13356;
t13545 = t13258 * t13659;
t13090 = -t13286 + t13545;
t13732 = t13090 * t13347;
t13285 = pkin(5) * t13654;
t13502 = t13348 * t13285;
t13115 = t13244 + 0.2e1 * t13502;
t13093 = t13115 * t13355;
t13721 = t13161 * qJDD(1);
t13345 = -pkin(3) / 0.2e1;
t13165 = t13814 + t13830 / 0.2e1 + t13345;
t13718 = t13165 * t13339;
t13170 = t13313 - t13264;
t13715 = t13170 * t13349;
t13184 = t13802 + t13830;
t13713 = t13184 * t13339;
t13712 = t13199 * t13349;
t13216 = t13313 + t13330;
t13708 = t13216 * t13355;
t13218 = -pkin(2) + 0.4e1 * t13584;
t13707 = t13218 * t13353;
t13329 = pkin(4) * t13349;
t13229 = t13329 - 0.2e1 * t13831;
t13705 = t13229 * t13347;
t13696 = t13267 * t13347;
t13681 = t13340 * t13348;
t13680 = t13346 * t13349;
t13679 = t13346 * t13350;
t13678 = t13346 * t13352;
t13677 = t13346 * t13366;
t13179 = t13244 * t13348;
t13104 = t13179 + t13285;
t13676 = t13347 * t13104;
t13675 = t13347 * t13263;
t13673 = t13347 * t13355;
t13668 = t13348 * t13338;
t13657 = t13349 * t13352;
t13653 = t13350 * qJDD(1);
t13646 = t13351 * t13366;
t13645 = t13352 * t13366;
t13118 = t13356 * t13160;
t13634 = t13366 * t13272;
t13632 = -qJD(1) * t13337 * t13862 * t13964 + t12818 * t13678;
t12978 = t13002 * t13348;
t13631 = t12978 + t13266;
t13544 = t13272 * t13655;
t13257 = t13340 * t13812;
t13620 = t13257 - t13812 / 0.2e1;
t13048 = t13544 + t13620;
t13630 = 0.2e1 * t13030 * t13537 + 0.2e1 * t13048 * t13313;
t13629 = t13029 * t13354 + t13265;
t13035 = t13071 * t13667;
t13628 = -t13035 + 0.2e1 * t13492;
t13513 = 0.2e1 * pkin(3) * t13647;
t13627 = t13347 * t13513 + t13046;
t13622 = t13292 * t13313 - t13312 / 0.2e1;
t13239 = pkin(2) * t13682;
t13621 = t13239 + t13342;
t13328 = pkin(4) * t13348;
t13228 = pkin(5) * t13852 + t13328;
t13611 = -0.4e1 * t13814;
t13605 = 0.4e1 * t13311;
t13604 = 0.8e1 * t13311;
t13603 = 0.2e1 * t13681;
t13602 = 0.2e1 * t13655;
t13601 = pkin(5) * t13667;
t13600 = pkin(5) * t13681;
t13599 = pkin(5) * t13659;
t13598 = 0.2e1 * t13833 + t13241;
t13588 = t13366 * t13838;
t13587 = t13844 * t13366;
t13586 = pkin(2) * t13643;
t13585 = pkin(3) * t13208;
t13583 = pkin(3) * t13672;
t13582 = pkin(3) * t13664;
t13577 = pkin(3) * t13668;
t13572 = t13796 / 0.2e1;
t13271 = pkin(2) + t13829;
t13570 = qJDD(1) * t13680;
t13569 = qJDD(1) * t13657;
t13565 = t13033 * t13313;
t13562 = t13048 * t13648;
t13559 = t13340 * t13664;
t13557 = t13341 * t13654;
t13556 = t13339 * t13675;
t13047 = -pkin(2) * t13654 - t13625;
t13552 = t13047 * t13665;
t13551 = (pkin(2) + 0.2e1 * t13829) * t13681;
t13548 = t13348 * t13648;
t13546 = t13165 * t13655;
t13538 = t13350 * t13656;
t13255 = t13354 * t13664;
t13534 = t13348 * t13634;
t13532 = t13350 * t13634;
t13525 = t13501 * t13856 - t13089;
t13494 = pkin(3) * t13533;
t13524 = 0.2e1 * t13494 - t13002;
t13061 = pkin(5) * t13664 - t13906;
t13519 = t13118 - t13827;
t13517 = pkin(4) * t13597;
t13516 = pkin(2) * t13602;
t13514 = 0.2e1 * t13582;
t13510 = -0.2e1 * t13256;
t13024 = t13347 * t13047;
t13509 = t13115 * t13353 - t13024;
t13508 = -t13340 - 0.4e1 * t13742;
t13045 = t13347 * t13065;
t13507 = t13089 * t13353 - t13045;
t13497 = t13366 * t13589;
t13496 = t13354 * t13577;
t13493 = t13349 * t13583;
t13490 = -t13555 / 0.2e1;
t13489 = t13348 * t13570;
t13488 = t13348 * t13569;
t13484 = t13269 * t13964 * t13678;
t13475 = t13349 * t13534;
t13474 = -0.2e1 * pkin(5) * t13558;
t13227 = pkin(2) * t13511;
t13465 = pkin(2) * t13715 + t13342;
t13464 = pkin(3) * t13699 + t13266;
t13463 = -0.2e1 * t13713 + t13217;
t13458 = t13348 * t13500;
t13207 = qJDD(1) * t13351 + t13357 * t13366;
t13204 = -t13350 * t13365 + t13791;
t13299 = t13820 / 0.2e1;
t13317 = pkin(4) * qJD(1) * qJD(2);
t13454 = ((t13060 * t13348 + t13629) * t13355 + (t13299 + t13889) * t13349 + t13317) * t13851 - t13789;
t12844 = t12893 * t13356 - t13350 * t13958;
t13453 = (t13265 * t13355 + t13299 * t13349 + t13317 + (t13726 + (t13794 / 0.2e1 - t13576) * t13349) * pkin(5)) * t13851 - t13774;
t13078 = t13699 - t13696;
t12937 = t13078 * t13354 - t13079 * t13348;
t12938 = t13078 * t13348 + t13079 * t13354;
t13452 = t13349 * t12937 + t12938 * t13355;
t13450 = (t13267 / 0.2e1 + (-t13478 + 0.1e1 / 0.2e1) * t13366 + t13622) * t13853 + t13765;
t13446 = t13059 * t13355 + t13077 * t13349;
t13130 = t13572 + t13579;
t13445 = (pkin(2) * t13130 + t13317) * t13851 + t13733;
t13444 = t13098 * t13349 + t13099 * t13355;
t13440 = (-t13793 / 0.2e1 + t13575) * t13970 - t13135 * t13356;
t13426 = t13043 * t13948 + t13255 * t13858 + t13291 * t13510 + t13255 + 0.4e1 * t13565;
t13026 = t13047 * t13355;
t13202 = t13258 * t13355;
t12863 = (pkin(4) + 0.2e1 * t13815) * t13557 + (t13065 + t13202 + t13227) * t13356 + t13026 - t13906;
t12997 = -pkin(3) * t13710 + t13464;
t13021 = -pkin(3) * t13696 + t13464;
t13416 = pkin(4) * t13306 + t13332 - 0.2e1 * t13517;
t13415 = t13350 * t13456;
t12973 = pkin(3) * t13058 + t13835;
t13409 = t12973 * t13354 + t12997 * t13348 + t13230;
t13022 = pkin(3) * t13079 + t13828;
t13408 = t13021 * t13354 - t13022 * t13348 + t13282;
t12840 = 0.2e1 * t12954 * t13649 - 0.2e1 * t13108 * t13538 - 0.2e1 * t13415 - t13955;
t13404 = -t13366 - t13428;
t13396 = -0.2e1 * t13674 + t13912;
t13395 = -t13544 - t13257;
t12866 = -t13267 + t13404;
t12907 = pkin(3) * t12944 + pkin(5) * t13083;
t12932 = -pkin(3) * t13751 + t13464;
t13390 = t12907 * t13354 + t12932 * t13348 + t13819;
t13094 = pkin(4) * t13137 - t13336;
t13082 = -0.2e1 * t13601 - t13707;
t13220 = t13360 - 0.8e1 * t13584;
t13240 = pkin(4) - 0.4e1 * t13599;
t13388 = -((0.4e1 * t13713 + (t13220 * t13353 - 0.4e1 * t13601) * t13354 - 0.2e1 * t13254 - 0.2e1 * t13830 - t13843 * pkin(3)) * t13340 + (t13240 * t13642 - t13347 * t13228 + (-0.8e1 * t13556 + (-0.2e1 * t13211 - 0.8e1 * t13577) * t13354 - 0.2e1 * t13143) * t13349) * t13355 + (-t13705 + t13707) * t13354 + t13294 - t13241 * t13353 + t13463) * t13341 + (t13082 * t13354 - t13463 - 0.2e1 * t13814 - t13830) * t13340 - 0.2e1 * t13718;
t13386 = pkin(4) * t13905 + t13519;
t13297 = 0.2e1 * t13317;
t12917 = (pkin(2) * t13135 + t13297) * t13350 - t13523 - t13733;
t13385 = t13426 + t13289;
t13381 = -pkin(3) * t13695 - t13585 - t13828;
t13378 = -(t13347 * t13468 - t13497) * t13354 - (0.2e1 * t13458 + t13672) * t13353 + t13262;
t13376 = 0.2e1 * t13290 * t13255 + t13256 * t13952 + t13537 * t13953 + t13531 - t13553;
t12851 = -t13435 * qJD(6) + (-0.4e1 * t13747 + (-t13348 + 0.2e1 * t13668) * t13354 + t13944 + t13913) * t13803;
t13127 = -0.2e1 * t13419;
t13374 = t12851 * t13610 + t13939 * t13922 + t13127 - t13966;
t12896 = -qJDD(1) * t13389 - t13306 * t13435 + t13633;
t13371 = -t13394 - 0.2e1 * t13562 + 0.2e1 * t13748;
t13358 = pkin(5) / 0.4e1;
t13344 = pkin(3) / 0.4e1;
t13298 = -0.2e1 * t13317;
t13273 = pkin(4) + t13815;
t13224 = t13348 * t13513;
t13222 = t13349 * t13514;
t13212 = t13315 - t13812;
t13206 = -t13356 * t13365 - t13792;
t13205 = -t13635 + t13646;
t13203 = t13258 * t13356;
t13173 = t13240 * t13355;
t13172 = qJD(2) * t13609 + t13653;
t13155 = pkin(4) * t13204 - g(3);
t13151 = pkin(2) * t13176;
t13150 = pkin(2) * t13175;
t13136 = t13300 * t13350 - t13791;
t13124 = t13164 * qJDD(1);
t13095 = t13173 + t13801;
t13070 = -t13682 + t13712;
t13067 = t13348 * t13516 + t13598;
t13052 = t13348 * t13071;
t13051 = -pkin(5) * t13099 - t13818;
t13050 = pkin(5) * t13098 + t13282;
t13049 = -t13416 - t13616;
t13038 = t13061 * t13347;
t13034 = t13921 * t13655 + t13540;
t13027 = -pkin(5) * t13072 - t13282;
t13025 = t13047 * t13348;
t13012 = pkin(5) * t13073 + t13230;
t13011 = -(t13333 ^ 2) + t13313 + t13423;
t12992 = -t13288 - t13527;
t12984 = -0.2e1 * t13292 * t13537 + t13341 * t13510 + t13256 + t13289;
t12982 = t13130 * t13851 + t13109;
t12976 = t13130 * t13356 + t13350 * t13138 / 0.2e1;
t12975 = -t13125 * t13356 - t13350 * t13897;
t12974 = -t13350 * t13125 + t13356 * t13897;
t12966 = t13025 + 0.2e1 * t13493;
t12957 = -pkin(5) * t13001 - t13282;
t12956 = t13730 + t13731;
t12952 = t13098 * t13355 - t13099 * t13349;
t12951 = t13504 * t13350 - t13356 * t13896;
t12950 = -t13350 * t13896 - t13504 * t13356;
t12942 = pkin(5) * t13000 + t13819;
t12936 = (-pkin(2) * t13684 + t13621) * t13356 + (-pkin(2) * t13125 - t13825) * t13350 - g(3);
t12935 = t12994 * pkin(3) + pkin(5) * t13186;
t12934 = pkin(3) * t13439 + pkin(5) * t13157;
t12929 = (t13434 * t13845 + (-t13639 / 0.2e1 + t13659 / 0.2e1) * t13350) * qJDD(1) + t13623;
t12928 = (t13433 * t13845 + (t13665 / 0.2e1 + t13656 / 0.2e1) * t13350) * qJDD(1) - t13885;
t12926 = (-t13313 + t13019) * t13353 + t13100;
t12922 = -t13124 / 0.2e1 + t12955;
t12921 = -t13721 / 0.2e1 + t13962;
t12911 = (-pkin(2) * t13504 - t13836) * t13356 + (pkin(2) * t13698 - t13621) * t13350 - t13336;
t12906 = pkin(5) * t13156 + (t13011 * t13347 + t13102) * pkin(3);
t12904 = -t13021 * t13348 - t13022 * t13354 - t13818;
t12903 = t12961 + (-t13430 - t13267 / 0.2e1 + t13622) * t13853;
t12902 = pkin(5) * (t13313 - t13083) + (t13011 * t13353 - t13100) * pkin(3);
t12899 = t12973 * t13348 - t12997 * t13354 - t13282;
t12895 = t12964 * t13356 - t13651 / 0.2e1;
t12891 = t12956 * t13355 + t13661;
t12889 = -t12956 * t13349 + t13769;
t12888 = -t12952 * t13350 - t13356 * t13444;
t12887 = t12952 * t13356 - t13350 * t13444;
t12883 = t12891 * t13356;
t12882 = qJD(6) * t13269 + (-t13754 / 0.2e1 + (-t13719 / 0.2e1 + (t13640 / 0.2e1 + t13643 / 0.2e1) * t13349) * t13350) * qJDD(1);
t12871 = -t13306 / 0.2e1 + t12890;
t12870 = -t13653 / 0.2e1 + t13902;
t12868 = -t13255 + (-0.2e1 * t13043 * t13648 + t13543 + t13547 - 0.2e1 * t13746) * t13612 + t13262;
t12867 = qJDD(5) + t13385;
t12865 = t12937 * t13355 - t12938 * t13349;
t12862 = t13350 * t13937 - t13891 * t13356;
t12861 = t13891 * t13350 + t13356 * t13937;
t12860 = t12930 * t13355 - t13349 * t13898;
t12859 = -t12926 * t13348 + t12927 * t13354;
t12858 = (t13050 * t13355 + t13051 * t13349 + t13342) * t13356 + (-t13050 * t13349 + t13051 * t13355 - t13825) * t13350 - g(3);
t12857 = (t13297 + t13446) * t13350 - t13940;
t12855 = t12907 * t13348 - t12932 * t13354 - t13282;
t12853 = (-t13012 * t13355 + t13027 * t13349 - t13836) * t13356 + (t13012 * t13349 + t13027 * t13355 - t13342) * t13350 - t13336;
t12852 = t13349 * t13887 + t13355 * t13929;
t12850 = (t13400 + (-t13840 * t13674 - t13912) * t13574) * t13355 + t13560 * t13868 + (qJD(6) * t13349 + 0.2e1 * t13348 * t13573) * t13642 - t13347 * qJD(6) * t13659 + (0.4e1 * t13743 + t13290) * t13803;
t12848 = -t12903 * t13348 - t13973 * t13354;
t12847 = t13348 * t13987 + t13450 * t13354;
t12843 = t12889 * t13350 + t12883;
t12842 = t12889 * t13356 - t12891 * t13350;
t12841 = -t12890 * t13350 + t13356 * t13902;
t12839 = 0.2e1 * t13941 + t13955;
t12838 = t12883 - qJDD(6) / 0.2e1 - t13159 / 0.2e1 - t13941;
t12837 = t12890 * t13356 + t13350 * t13902 + t13846;
t12835 = t12837 * t13848;
t12834 = t12837 * t13854;
t12833 = -t13353 * t12868 + t13347 * t13403;
t12832 = t12866 * t13353 - t12867 * t13347;
t12831 = -t13350 * t12865 - t13356 * t13452;
t12830 = t12865 * t13356 - t13350 * t13452;
t12828 = t12860 * t13350 + t13356 * t13957;
t12827 = t12860 * t13356 - t13350 * t13957;
t12826 = ((t12979 * t13353 - t13100) * t13354 - t13775) * t13355 - t13349 * t12859;
t12825 = -t13876 * t13350 - t13956;
t12824 = (t13297 + t13924) * t13350 - t13974;
t12823 = -t13267 + t13980;
t12822 = t13376 - t13262;
t12821 = t12840 * t13352 + t13784;
t12820 = t12839 * t13346 + t13783;
t12819 = t12838 * t13346 - t13783 / 0.2e1;
t12816 = (t12904 * t13349 + t13355 * t13408 + t13342) * t13356 + (t12904 * t13355 - t13349 * t13408 - t13825) * t13350 - g(3);
t12815 = (-t13095 * t13313 + (t13739 + t13525) * t13356 - t13093 + t13528) * t13354 + t13067 * t13313 + (t13227 * t13348 - t13975) * t13356 + t13552 - t13074 + (t13366 * t13508 - t13288) * pkin(5);
t12814 = ((-t13820 / 0.2e1 - t13889) * t13355 + t13029 * t13656 + pkin(2) * t13575 - t13343 / 0.2e1 + t13900 * t13659) * t13356 + (t13348 * t13900 + t13629) * t13649 + t13060 * t13538 - pkin(3) * t13415 - (pkin(3) * t13798 + t13571) * t13550 / 0.2e1 + pkin(2) * t13350 * t13572 + t13517 - t13332 / 0.2e1 + t13326 / 0.2e1 - t13325 / 0.2e1;
t12813 = pkin(5) * t13034 * t13605 + ((t13097 * t13355 - t13119 + t13227) * t13356 + t13026 + ((t13516 + 0.4e1 * t13600 + t13229) * t13341 - pkin(2) * t13648 - 0.2e1 * t13600) * t13366 + t13061) * t13354 + (pkin(2) * t13603 + t13228 * t13355 - t13315) * t13313 + (-t13348 * t13890 + t13286 + t13474) * t13356 - pkin(2) * t13559 + t13104 * t13355 + t13631;
t12812 = (t12899 * t13349 - t13355 * t13409 - t13836) * t13356 + (t12899 * t13355 + t13349 * t13409 - t13342) * t13350 - t13336;
t12811 = t13972 * t13356 + t13350 * (t12876 * t13355 - t13785);
t12810 = t12827 * t13357 + t12842 * t13850;
t12809 = t12827 * t13351 + t12842 * t13847;
t12808 = t13346 * t13956 + t13876 * t13679 + t12835;
t12807 = (t12850 * t13610 + t13776 * t13868 - t13378) * t13346 + t12882 * t13849 + (t13341 * t13954 - 0.2e1 * t13554 + 0.4e1 * t13747) * t13677;
t12806 = ((t12850 * t13356 + t13776) * t13922 + t13378 + t13531) * t13352 + t12882 * t13855;
t12805 = t12841 * t13849 - t13346 * t13984;
t12804 = t12841 * t13855 + t13352 * t13984;
t12803 = ((t13165 * t13340 - t13263 * t13555 - t13814 / 0.2e1 - t13830 / 0.4e1 + t13344) * t13648 + t13921 * t13546 + t13933 * t13675) * t13604 + ((t13314 * t13857 + (t13240 * t13347 + t13707 * t13852) * t13355 + t13229 * t13353 - t13314 + (t13830 * t13856 + (t13340 * t13842 - t13843) * pkin(3)) * t13348) * t13313 + ((-t13071 * t13347 + t13097 * t13353) * t13355 - t13119 * t13353 + t13347 * t13089 + (-pkin(2) * t13353 + t13082 * t13857 + (-t13655 * t13842 + 0.4e1 * t13674) * t13811) * t13647) * t13356 - t13055 * t13312 + ((t13218 * t13654 - t13625) * t13353 + t13347 * t13115) * t13355 + t13338 * t13514 + t13061 * t13353 + t13002 * t13347 - t13582) * t13354 + (((0.2e1 * t13315 - 0.4e1 * t13812) * t13353 - 0.2e1 * t13832) * t13340 + (t13228 * t13353 + (-0.2e1 * t13217 + t13611) * t13349) * t13355 - t13143 - t13241 * t13347) * t13313 + ((-t13052 * t13353 + t13092 * t13347) * t13355 - t13090 * t13353 - t13065 * t13667 + ((t13184 + t13254) * t13858 + 0.4e1 * t13353 * t13495 + t13802) * t13647) * t13356 - (t13143 - t13832) * t13312 + (pkin(3) * t13349 * t13587 - t13047 * t13667 + t13104 * t13353) * t13355 + (-t13583 + t13631) * t13353 + t13028 * t13347 + t13262 * pkin(3);
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, -t13207, t13205, 0, -g(1), 0, 0, 0, 0, 0, 0, t13137 * t13357 + t13351 * t13420, t13136 * t13357 + t13172 * t13351, -t13205, -pkin(1) * t13207 - g(1), 0, 0, 0, 0, 0, 0, t12950 * t13357 - t12982 * t13351, t12951 * t13357 + t12976 * t13850, -t13205, t13094 * t13357 - g(1) + (pkin(4) * t13420 - t13332) * t13351, 0, 0, 0, 0, 0, 0, t12862 * t13357 + t12898 * t13351, t12861 * t13357 + t12895 * t13850, -t13205, t12911 * t13357 - g(1) + (-t13445 - t13332) * t13351, 0, 0, 0, 0, 0, 0, t12828 * t13357 + t12843 * t13850, t12810, -t13205, t12853 * t13357 - g(1) + (-t13453 - t13332) * t13351, 0, 0, 0, 0, 0, 0, (t12825 * t13352 + t12834) * t13357 + (t12838 * t13352 + t13784 / 0.2e1) * t13850, t12808 * t13357 - 0.2e1 * t12819 * t13351, t12810, t12812 * t13357 - g(1) + (-t13454 - t13332) * t13351; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, -t13205, -t13207, 0, -g(2), 0, 0, 0, 0, 0, 0, t13137 * t13351 - t13357 * t13420, t13136 * t13351 - t13172 * t13357, t13207, -pkin(1) * t13646 + t13824, 0, 0, 0, 0, 0, 0, t12950 * t13351 + t12982 * t13357, t12951 * t13351 + t12976 * t13847, t13207, t13094 * t13351 + t13357 * t13416 - g(2), 0, 0, 0, 0, 0, 0, t12862 * t13351 - t12898 * t13357, t12861 * t13351 + t12895 * t13847, t13207, t12911 * t13351 + t13357 * t13445 + t13824, 0, 0, 0, 0, 0, 0, t12828 * t13351 + t12843 * t13847, t12809, t13207, t12853 * t13351 + t13357 * t13453 + t13824, 0, 0, 0, 0, 0, 0, (t12825 * t13351 + t12838 * t13847) * t13352 + (t12837 * t13351 - t12886 * t13357 / 0.2e1) * t13854, t12808 * t13351 + 0.2e1 * t12819 * t13357, t12809, t12812 * t13351 + t13357 * t13454 + t13824; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t13204, t13206, 0, -g(3), 0, 0, 0, 0, 0, 0, t12974, t12975, 0, t13155, 0, 0, 0, 0, 0, 0, t12887, t12888, 0, t12936, 0, 0, 0, 0, 0, 0, t12830, t12831, 0, t12858, 0, 0, 0, 0, 0, 0, t12804, t12805, t12831, t12816; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t13366, -qJDD(1), 0, t13615, 0, 0, 0, 0, 0, 0, t13137, t13136, qJDD(1), t13160, 0, 0, 0, 0, 0, 0, t13070 * t13350 - t13356 * t13505, t13070 * t13356 + t13350 * t13505, qJDD(1), t13094 + t13615, 0, 0, 0, 0, 0, 0, t13350 * t13935 - t13356 * t13963, t13350 * t13963 + t13935 * t13356, qJDD(1), (-pkin(2) * t13505 - t13836) * t13356 + (pkin(2) * t13712 - t13621) * t13350 + t13160, 0, 0, 0, 0, 0, 0, (((t13353 * t13384 - t13208) * t13354 - t13770) * t13355 + t13785) * t13356 + t13350 * t13972, t12811, qJDD(1), (-t12942 * t13355 + t12957 * t13349 - t13836) * t13356 + (t12942 * t13349 + t12957 * t13355 - t13342) * t13350 + t13160, 0, 0, 0, 0, 0, 0, t12834 + (((((-t13361 + t13384) * t13353 - t13208) * t13354 + t13772) * t13355 + t13788) * t13356 - t13617 - t13875 * t13350) * t13352, (((-t13772 + t13773) * t13355 - t13788) * t13356 + t13617) * t13346 + t12835 + t13875 * t13679, t12811, (t12855 * t13349 - t13355 * t13390 - t13836) * t13356 + (t12855 * t13355 + t13349 * t13390 - t13342) * t13350 + t13160; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t13366, 0, t13616, 0, 0, 0, 0, 0, 0, -t13420, -t13172, t13366, t13523, 0, 0, 0, 0, 0, 0, t13908, t13440, t13366, -t13049, 0, 0, 0, 0, 0, 0, -t12898, -t12901, t13366, -t12917, 0, 0, 0, 0, 0, 0, -t12846, -t12844, t13366, (t13298 - t13446) * t13350 + t13940, 0, 0, 0, 0, 0, 0, t12839 * t13352 - t13784, t12840 * t13346 - t13783, -t12844, (t13298 - t13924) * t13350 + t13974; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t13204, t13206, 0, -g(3), 0, 0, 0, 0, 0, 0, t12974, t12975, 0, t13155, 0, 0, 0, 0, 0, 0, t12887, t12888, 0, t12936, 0, 0, 0, 0, 0, 0, t12830, t12831, 0, t12858, 0, 0, 0, 0, 0, 0, t12804, t12805, t12831, t12816; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t13905, t13462, t13306, t13519, 0, 0, 0, 0, 0, 0, t13176 * t13349 - t13708, t13176 * t13355 + t13216 * t13349, t13306, t13386, 0, 0, 0, 0, 0, 0, t13877, -t13349 * t13436 + t13355 * t13437, t13306, -t13273 * t13313 + t13118 + (-t13683 + (-t13331 + t13537) * t13349) * pkin(2) - t13244, 0, 0, 0, 0, 0, 0, t13349 * t13929 - t13887 * t13355, t12852, t13306, -pkin(2) * t13708 + pkin(5) * t13877 + t13151 * t13349 + t13386, 0, 0, 0, 0, 0, 0, t12871 * t13854 - t13352 * t13927 + t13882 * t13657, t12871 * t13848 + t13346 * t13927 - t13882 * t13680, t12852, (-pkin(2) * t13216 + t12934 * t13348 - t12935 * t13354) * t13355 + (t12934 * t13354 + t12935 * t13348 + t13151) * t13349 + t13386; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t13461, t13313 - t13300, -t13653, -t13650 - t13826, 0, 0, 0, 0, 0, 0, t13175 * t13355 + t13715, t13170 * t13355 - t13175 * t13349, -t13653, (pkin(4) * t13636 - t13160) * t13350 + t13342 - t13826, 0, 0, 0, 0, 0, 0, t13874, -t13349 * t12999 + t13355 * t13438, -t13653, (t13273 * t13636 - t13160) * t13350 - t13826 + t13239 + t13465, 0, 0, 0, 0, 0, 0, t12859 * t13355 - (t12926 * t13354 + t13775) * t13349, t12826, -t13653, pkin(5) * t13874 + t13150 * t13355 + t13203 + t13465 - t13650, 0, 0, 0, 0, 0, 0, (0.2e1 * t13594 + t13976) * t13352 + t12870 * t13855 + t13880 * t13657, (t13518 - t13976) * t13346 + t12870 * t13849 - t13880 * t13680, t12826, (t12902 * t13354 - t12906 * t13348 + pkin(2) * (-t13199 + t13313)) * t13349 + (t12902 * t13348 + t12906 * t13354 + t13150) * t13355 + t13203 - t13625; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t13420, t13172, -t13366, -t13523, 0, 0, 0, 0, 0, 0, -t13908, -t13440, -t13366, t13049, 0, 0, 0, 0, 0, 0, t12898, t12901, -t13366, t12917, 0, 0, 0, 0, 0, 0, t12846, t12844, -t13366, t12857, 0, 0, 0, 0, 0, 0, t12821, t12820, t12844, t12824; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t13330 - t13472, t13370, t13124, -pkin(4) * t13341 * t13637 + t13414 * t13356 - t13181 - t13967, 0, 0, 0, 0, 0, 0, -t12984 * t13348 - t13354 * t13982, -t12984 * t13354 + t13348 * t13982, t13124, t12864, 0, 0, 0, 0, 0, 0, t13450 * t13348 - t13354 * t13987, t12847, t13124, -(t13271 * t13857 + (pkin(4) - 0.2e1 * t13599) * t13355 - t13271) * t13313 + ((t13516 + (-t13348 + 0.2e1 * t13541 + t13603) * pkin(5)) * t13647 + t13414) * t13356 + t13271 * t13312 + (-t13244 - t13502) * t13355 - pkin(5) * t13703 - pkin(5) * t13235 - t13002, 0, 0, 0, 0, 0, 0, t12922 * t13854 + t13990 * t13352, t12922 * t13848 - t13990 * t13346, t12847, (-pkin(3) * t13709 - t13585 - t13835) * t13354 + (-t12997 + t13630) * t13348 + (-t13185 * t13341 + t13348 * t13395 - t13354 * t13371) * t13366 + t13429; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t13369, -t13330 - t13527, -t13721, pkin(4) * t13557 + (t13202 - t13119) * t13356 - t13625 * t13355 + t13180, 0, 0, 0, 0, 0, 0, t12983 * t13354 + t12992 * t13348, -t12983 * t13348 + t12992 * t13354, -t13721, t12863, 0, 0, 0, 0, 0, 0, t12903 * t13354 - t13348 * t13973, t12848, -t13721, (t13271 * t13602 + t13831 * t13838 + t13329) * t13313 + ((-0.2e1 * t13459 + t13258) * t13355 - t13119 + t13350 * t13271 * t13588) * t13356 + (-t13271 * t13654 - t13625) * t13355 - t13906 + (-t13559 + t13098) * pkin(5), 0, 0, 0, 0, 0, 0, t12921 * t13855 + t13352 * t13928, t12921 * t13849 - t13346 * t13928, t12848, t13381 * t13348 + (t13021 + t13630) * t13354 + (t13348 * t13371 + t13354 * t13395) * t13366 + t12863; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t13908, -t13440, -t13366, t13049, 0, 0, 0, 0, 0, 0, t12898, t12901, -t13366, t12917, 0, 0, 0, 0, 0, 0, t12846, t12844, -t13366, t12857, 0, 0, 0, 0, 0, 0, t12821, t12820, t12844, t12824; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t13288 + t13428, t13426 - t13289, -t13756, t12863 * t13348 + t12864 * t13354, 0, 0, 0, 0, 0, 0, -t13347 * t12868 - t13353 * t13403, t12833, -t13756, t12815, 0, 0, 0, 0, 0, 0, t12928 * t13854 - t13352 * t13985, t12928 * t13848 + t13346 * t13985, t12833, -0.4e1 * (t13748 - t13562 + t13619 * t13340 + t13358 + (t13555 / 0.2e1 + t13353 / 0.4e1) * pkin(3)) * t13311 + (-(t13904 * t13340 + (-0.4e1 * t13272 * t13659 + pkin(4)) * t13355 + t13467) * t13313 + ((t13837 * t13348 * t13272 + t13655 * t13904) * t13647 + t13414) * t13356 - t13467 * t13312 + (-t13244 - 0.2e1 * t13475) * t13355 + t13494 - t13002) * t13354 + (t13212 * t13602 + t13268 - t13272 + 0.2e1 * t13691) * t13313 + (t13201 * t13355 + t13046 + (t13212 * t13857 - 0.2e1 * t13544 + t13812) * t13647) * t13356 - t13340 * t13634 + (t13025 + t13493) * t13355 - t13074 + t13381; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t13385, -t13288 + t13404, -t13755, t12863 * t13354 - t12864 * t13348, 0, 0, 0, 0, 0, 0, t12866 * t13347 + t12867 * t13353, t12832, -t13755, (0.2e1 * t13551 + ((0.2e1 * t13816 + 0.4e1 * t13834) * t13349 + t13228) * t13355 + t13229 * t13354 - t13315) * t13313 + ((t13097 * t13354 - t13052) * t13355 + t13065 * t13354 + ((-pkin(5) + t13816 + 0.2e1 * t13834) * t13340 - t13834) * t13350 * t13612 - t13090) * t13356 - t13366 * t13551 + (t13047 * t13354 + t13285 * t13860 + t13104) * t13355 + t13061 * t13354 + t13631, 0, 0, 0, 0, 0, 0, t12929 * t13855 + ((-t13361 + t12866) * t13347 - 0.2e1 * t13458 + (-t13666 * t13838 + 0.4e1 * t13746) * t13641 + t13895) * t13352, t12929 * t13849 + ((t13428 + t13169) * t13347 - 0.4e1 * t13353 * t13565 + (t13588 * t13642 + t13468) * t13348 - t13895) * t13346, t12832, (t13328 * t13355 + t13329 * t13354 + t13023 * t13857 + (t13272 * t13840 - 0.2e1 * t13706) * t13655 - t13023) * t13313 + (-t13965 * t13511 + ((-0.4e1 * t13350 * t13475 + t13258) * t13354 - t13052 - t13840 * t13457) * t13355 + t13532 * t13860 + (t13467 * t13647 - t13119) * t13354 - t13545 + t13532) * t13356 - t13023 * t13312 + (-t13625 * t13354 + t13654 * t13965 + t13179) * t13355 + t13339 * t13583 + (t13534 - t13906) * t13354 + t12978 + t12997; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t12898, t12901, -t13366, t12917, 0, 0, 0, 0, 0, 0, t12846, t12844, -t13366, t12857, 0, 0, 0, 0, 0, 0, t12821, t12820, t12844, t12824; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t13215 - t13980, t12822, qJDD(1) * (-t13008 * t13350 - t13753), t12813 * t13347 + t12815 * t13353, 0, 0, 0, 0, 0, 0, (-t13267 + t13374) * t13352 - t13346 * t12896, -t13352 * t12896 + (t13126 + t13267 + (t12851 * t13356 - t13939) * t13922 + t13966) * t13346, t12822, -0.8e1 * pkin(3) * (t13742 - t13034 * t13666 + t13799 * t13341 + t13478 / 0.2e1 + t13340 / 0.4e1 - 0.1e1 / 0.8e1) * t13310 + (((t13495 - t13833 / 0.2e1 + t13358) * t13341 + (t13655 * t13864 + t13620) * t13648 + pkin(3) * t13490 + t13833 / 0.4e1 - pkin(5) / 0.8e1) * t13604 + ((-t12985 * t13355 + t13525) * t13356 - t13093 + (-(t13220 * t13340 + t13173 + t13218) * t13341 - t13218 * t13340) * t13366 + t13524) * t13354 + (t13213 * t13602 + t13598) * t13313 + (t13213 * t13511 - t13066 + t13627) * t13356 - pkin(5) * t13312 + t12966 * t13355 - t13028) * t13353 + ((pkin(5) * t13555 + t13345 + t13813) * t13341 - (pkin(3) * t13655 - t13292 * t13832) * t13648 + pkin(5) * t13490 - t13813 / 0.2e1 + t13344) * t13605 + ((t13097 * t13673 + t13045 + t13224) * t13356 + (t13024 + t13222) * t13355 + t13038 + ((t13211 * t13602 + t13705) * t13341 + (0.2e1 * t13211 * t13648 + (0.4e1 * t13341 - 0.2e1) * t13601) * t13340) * t13366) * t13354 + (t13217 * t13857 + t13228 * t13673 - t13217) * t13313 + (t13628 * t13355 + (-t13090 + t13474) * t13347) * t13356 - t13217 * t13312 + t13104 * t13673 + t13631 * t13347 - t13805; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t13376 + t13262, t12823, t13964 * qJDD(1), ((t13392 + t13093) * t13354 + t13975 * t13356 - t13552 + t13028) * t13347 + t12813 * t13353 + (-0.2e1 * t13548 * t13817 + (t13095 * t13354 - t13067) * t13341 + (-t13354 * t13548 * t13837 - t13508) * pkin(5)) * t13672, 0, 0, 0, 0, 0, 0, t12806, t12807, t12823, t12803; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t12846, t12844, -t13366, t12857, 0, 0, 0, 0, 0, 0, t12821, t12820, t12844, t12824; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t13983 + t13127 + 0.2e1 * (qJD(6) * t13936 + t13484) * qJD(1) - t13614, t12840 + t13632, (t13347 * t13489 - t13570 * t13642 + (t13861 - t13932) * t13350 * t13645) * t13356 + t13645 * t13913 + (-t13347 * t13645 + t13350 * t13489) * t13353 + t13869 * t13346 + (t13587 * t13666 + t13531 + t13931) * t13352, (((t13628 - t13961) * t13355 + (t13224 - t13507) * t13354 + t13627 * t13353 - t13732) * t13356 + ((t13222 - t13509) * t13354 + t12966 * t13353 + t13676) * t13355 + (t13353 * t13524 + t13038) * t13354 - t13986) * t13352 + t12814 * t13855 + (t13814 + 0.4e1 * (-t13496 - t13556) * t13655 + (-0.4e1 * t13496 - 0.4e1 * t13556 + 0.2e1 * t13777 + (t13611 + 0.8e1 * t13718) * t13655) * t13648 + t13388) * t13645; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t12896 + t13632, -t13484 * t13922 + t13321 + t13374 - t13883 + t13983, (t13347 * t13488 - t13569 * t13642 + (-0.2e1 * t13338 + t13932) * t13346 * t13647) * t13356 + t13483 * t13855 + t13350 * t13488 * t13353 + t13869 * t13352 + (t13672 * t13353 - t13497 * t13354 - t13654 * t13943 - t13931 - t13938) * t13346, (((t13035 + t13961) * t13355 + t13507 * t13354 + t13160 * t13549 + t13732) * t13356 + (t13354 * t13509 + t13625 * t13643 - t13676) * t13355 + (t13002 * t13353 - t13038) * t13354 + t13986) * t13346 + t12814 * t13849 + (t13421 * pkin(3) + (pkin(3) * t13396 + 0.4e1 * t13556 + t13586) * t13655 + (t13586 - 0.2e1 * t13777 + (-0.8e1 * t13546 + 0.4e1 * t13675) * t13339 + (t13655 * t13843 + t13396) * pkin(3)) * t13648 - t13388) * t13677; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t12806, t12807, t12823, t12803;];
f_new_reg = t1;
