% Calculate inertial parameters regressor of coriolis joint torque vector for
% palh2m2OL
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [5x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[A2Off,A3Off,A4Off,L1,L2]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2020-05-03 06:35
% Revision: 702b02ffee4f47164fa6a11b998f1d39ead3f7a6 (2020-05-02)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = palh2m2OL_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(5,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'palh2m2OL_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'palh2m2OL_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [5 1]), ...
  'palh2m2OL_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [5x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2020-05-03 02:57:01
% EndTime: 2020-05-03 02:57:52
% DurationCPUTime: 11.10s
% Computational Cost: add. (14756->506), mult. (37164->724), div. (0->0), fcn. (32141->10), ass. (0->278)
t157 = sin(qJ(6));
t294 = qJD(6) * t157;
t158 = sin(qJ(5));
t159 = sin(qJ(2));
t161 = cos(qJ(2));
t356 = sin(qJ(3));
t359 = cos(qJ(3));
t218 = t356 * t159 - t359 * t161;
t133 = t218 * qJD(1);
t220 = t359 * t159 + t356 * t161;
t134 = t220 * qJD(1);
t355 = sin(qJ(4));
t358 = cos(qJ(4));
t217 = t355 * t133 - t358 * t134;
t219 = -t358 * t133 - t355 * t134;
t357 = cos(qJ(5));
t67 = t158 * t217 + t219 * t357;
t409 = t157 * t67;
t415 = t294 + t409;
t160 = cos(qJ(6));
t379 = t158 * t219 - t357 * t217;
t202 = t217 * qJD(4);
t203 = t218 * qJD(2);
t204 = t218 * qJD(3);
t186 = -t204 - t203;
t206 = t220 * qJD(2);
t365 = t220 * qJD(3);
t383 = t365 + t206;
t172 = t355 * t186 + t358 * t383;
t171 = qJD(1) * t172;
t264 = qJD(5) * t357;
t295 = qJD(5) * t158;
t173 = t358 * t186 - t355 * t383;
t265 = qJD(4) * t355;
t266 = qJD(4) * t358;
t50 = -t173 * qJD(1) + t133 * t266 + t134 * t265;
t201 = t217 * t295 + t219 * t264 - t357 * t50;
t384 = -t158 * t171 + t201;
t167 = t158 * t202 + t384;
t286 = -qJD(4) - qJD(5);
t251 = -qJD(3) + t286;
t232 = qJD(2) - t251;
t385 = qJD(6) * t232 - t167;
t10 = t385 * t160 + t294 * t379;
t59 = -t157 * t232 + t160 * t379;
t11 = qJD(6) * t59 + t157 * t167;
t407 = qJD(6) + t67;
t57 = t157 * t379 + t160 * t232;
t389 = t407 * t57;
t56 = t59 * t294;
t414 = (t10 + t389) * t160 + t56 + (t59 * t67 + t11) * t157;
t336 = t11 * t160;
t413 = -t415 * t57 + t336;
t233 = qJD(4) * t264;
t225 = pkin(5) * t233;
t260 = t358 * pkin(2);
t147 = t260 + pkin(5);
t270 = t355 * t158;
t213 = t358 * t357 - t270;
t102 = t147 * t264 + (qJD(4) * t213 - qJD(5) * t270) * pkin(2);
t292 = t102 * qJD(3);
t214 = t225 + t292;
t283 = t359 * pkin(4);
t148 = t283 + pkin(2);
t238 = t355 * t356;
t198 = t359 * t358 - t238;
t106 = t148 * t266 + (qJD(3) * t198 - qJD(4) * t238) * pkin(4);
t240 = t355 * t359;
t241 = t356 * t358;
t199 = t240 + t241;
t107 = -t148 * t265 + (-qJD(3) * t199 - qJD(4) * t241) * pkin(4);
t132 = -pkin(4) * t238 + t148 * t358;
t126 = pkin(5) + t132;
t131 = pkin(4) * t241 + t148 * t355;
t311 = t131 * t158;
t88 = t126 * t357 - t311;
t46 = qJD(5) * t88 + t357 * t106 + t107 * t158;
t306 = t46 * qJD(2);
t32 = t214 + t306;
t146 = t358 * pkin(5) + pkin(2);
t200 = -pkin(5) * t238 + t359 * t146;
t125 = -pkin(4) - t200;
t145 = pkin(5) * t240;
t130 = t356 * t146 + t145;
t83 = t125 * t161 + t130 * t159 - pkin(1);
t317 = qJD(1) * t83;
t41 = -pkin(3) * t67 + t317;
t239 = t355 * t357;
t127 = pkin(2) * t239 + t147 * t158;
t273 = t357 * t131;
t221 = -t126 * t158 - t273;
t354 = pkin(5) * t158;
t72 = -qJD(2) * t221 + qJD(3) * t127 + qJD(4) * t354;
t258 = t356 * qJD(2);
t237 = t161 * t258;
t257 = t356 * qJD(3);
t261 = t359 * qJD(3);
t262 = t359 * qJD(2);
t367 = t261 + t262;
t169 = t202 + (-t358 * t237 + (-t358 * t257 - t355 * t367) * t161 + (-t355 * (-t257 - t258) - t358 * t367) * t159) * qJD(1);
t254 = t158 * t50 + t357 * t169;
t18 = qJD(5) * t379 - t254;
t296 = qJD(2) * t159;
t312 = t130 * t161;
t45 = -t125 * t296 + qJD(2) * t312 + (t146 * t257 + (qJD(3) * t240 + qJD(4) * t199) * pkin(5)) * t161 + (t146 * t261 + (-qJD(3) * t238 + qJD(4) * t198) * pkin(5)) * t159;
t318 = qJD(1) * t45;
t9 = pkin(3) * t18 + t318;
t4 = -t157 * t32 + t41 * t294 + (-qJD(6) * t72 - t9) * t160;
t2 = t4 * t157;
t226 = t157 * t72 + t160 * t41;
t26 = -t157 * t41 + t160 * t72;
t293 = qJD(6) * t160;
t412 = -t226 * t293 + t415 * t26 + t2;
t334 = t157 * t18;
t399 = t160 * t407;
t411 = t379 * t59 - t399 * t407 + t334;
t60 = t407 * t294;
t253 = t160 * t18 + t60;
t410 = -t379 * t57 + t407 * t409 + t253;
t346 = t67 * t83;
t408 = t379 * t67;
t406 = t379 ^ 2 - t67 ^ 2;
t405 = t158 * t169 - t232 * t67 + t201;
t338 = t10 * t157;
t404 = -t399 * t59 + t338;
t280 = pkin(5) * t295;
t212 = -t358 * t158 - t239;
t103 = -t147 * t295 + (qJD(4) * t212 - qJD(5) * t239) * pkin(2);
t47 = t221 * qJD(5) - t106 * t158 + t107 * t357;
t341 = t47 * qJD(2) + t103 * qJD(3);
t33 = -qJD(4) * t280 + t341;
t353 = t26 * t379;
t267 = pkin(2) * t355;
t128 = t147 * t357 - t158 * t267;
t284 = pkin(5) * t357;
t74 = t88 * qJD(2) + t128 * qJD(3) + qJD(4) * t284;
t69 = pkin(3) * t232 + t74;
t403 = -t33 * t157 - t69 * t399 - t353;
t348 = t379 * t83;
t398 = t407 * t379;
t397 = pkin(3) * t379;
t396 = t33 * t160 - t226 * t379;
t3 = -qJD(6) * t226 - t157 * t9 + t160 * t32;
t394 = (-t226 * t67 - t3) * t160 + t412;
t154 = qJD(2) + qJD(3);
t153 = qJD(4) + t154;
t393 = t379 * t153 + t254;
t387 = t219 * t217;
t112 = -t355 * t218 + t358 * t220;
t382 = qJD(4) * t112;
t38 = t217 ^ 2 - t219 ^ 2;
t197 = t133 * t265 - t134 * t266;
t37 = -t153 * t217 - t171 + t197;
t151 = -pkin(4) * t161 - pkin(1);
t139 = qJD(1) * t151;
t374 = 0.2e1 * t139;
t287 = qJD(1) * qJD(2);
t373 = -0.2e1 * t287;
t136 = t198 * pkin(4);
t137 = t199 * pkin(4);
t109 = -t136 * t158 - t137 * t357;
t247 = -t109 * qJD(2) + t103;
t368 = -pkin(4) * t356 * t383 - t186 * t283;
t182 = t358 * t218 + t355 * t220;
t366 = qJD(4) * t219;
t36 = -t153 * t219 - t50;
t352 = t3 * t160;
t175 = t158 * t182;
t71 = t357 * t112 - t175;
t351 = t33 * t71;
t350 = t59 * t57;
t343 = t71 * t18;
t342 = t221 * t18;
t339 = pkin(4) * qJD(2);
t335 = t127 * t18;
t333 = t157 * t57;
t332 = t157 * t59;
t328 = t157 * t69;
t326 = t160 * t226;
t325 = t160 * t57;
t324 = t160 * t59;
t163 = qJD(1) ^ 2;
t322 = t163 * t83;
t316 = qJD(6) * t407;
t263 = t359 * pkin(2);
t149 = -t263 - pkin(4);
t268 = pkin(2) * t356;
t123 = t149 * t161 + t159 * t268 - pkin(1);
t315 = t219 * t123;
t313 = t123 * t163;
t310 = t134 * t133;
t309 = t139 * t133;
t308 = t139 * t134;
t307 = t159 * t161;
t301 = t159 ^ 2 - t161 ^ 2;
t300 = pkin(1) * t163;
t299 = qJD(1) * t123;
t298 = qJD(1) * t159;
t297 = qJD(2) * t137;
t108 = t357 * t136 - t137 * t158;
t291 = t108 * qJD(2);
t289 = pkin(2) * qJD(3);
t288 = pkin(2) * qJD(4);
t282 = pkin(4) * t298;
t281 = pkin(4) * t296;
t279 = t71 * t293;
t278 = t163 * t307;
t277 = t157 * t357;
t276 = t160 * t357;
t275 = t359 * t154;
t272 = t356 * t154;
t259 = t358 * qJD(3);
t256 = t355 * qJD(3);
t252 = t407 * t69;
t86 = -t125 * t159 + t312;
t250 = -qJD(1) * t86 - qJD(6) * t221 - t397;
t246 = pkin(4) * t262;
t245 = pkin(4) * t258;
t244 = pkin(1) * t373;
t243 = t407 * t264;
t242 = -t67 * t326 + t412;
t236 = t287 * t307;
t235 = pkin(2) * t259;
t234 = pkin(2) * t256;
t164 = -qJD(4) * t182 + t173;
t165 = t172 + t382;
t174 = t357 * t182;
t21 = qJD(5) * t174 + t112 * t295 + t158 * t165 - t357 * t164;
t231 = t21 * t407 + t343;
t230 = t379 * t72 + t74 * t67;
t228 = -t157 * t26 + t326;
t227 = -t157 * t226 - t160 * t26;
t224 = qJD(4) * t235;
t98 = t107 * qJD(2);
t81 = -qJD(4) * t234 + t98;
t113 = t131 * qJD(2) + t234;
t22 = -qJD(5) * t175 + t112 * t264 + t158 * t164 + t357 * t165;
t14 = pkin(3) * t22 + t45;
t70 = t112 * t158 + t174;
t51 = pkin(3) * t70 + t83;
t216 = qJD(6) * t69 * t71 - t14 * t407 + t18 * t51;
t215 = -t21 * t69 + t51 * t316 + t351;
t211 = -t407 * t46 - t252 - t342;
t80 = t106 * qJD(2) + t224;
t209 = -t102 * t407 - t252 + t335;
t208 = t123 * t217;
t192 = qJD(6) * t228 - t2 + t352;
t191 = -t338 - t336 + (t324 + t333) * qJD(6);
t115 = t132 * qJD(2) + t235;
t190 = -t113 * t217 + t115 * t219;
t184 = t383 * qJD(1);
t183 = t186 * qJD(1);
t162 = qJD(2) ^ 2;
t150 = t284 + pkin(3);
t144 = t161 * t268;
t135 = t159 * t263 + t144;
t129 = -t149 * t159 + t144;
t122 = pkin(3) + t128;
t110 = t145 * t161 + (t159 * t198 + t161 * t241) * pkin(5);
t104 = -t149 * t296 + (t237 + t365) * pkin(2);
t89 = t159 * t200 + t312;
t84 = pkin(3) + t88;
t79 = -t133 ^ 2 + t134 ^ 2;
t78 = t134 * t154 - t184;
t77 = t133 * t154 + t183;
t76 = (-t132 * t158 - t273) * qJD(2) + t212 * t289;
t75 = (t357 * t132 - t311) * qJD(2) + t213 * t289;
t48 = qJD(1) * t110 + t397;
t43 = qJD(1) * t89 + t397;
t35 = -t157 * t397 + t160 * t74;
t34 = -t157 * t74 - t160 * t397;
t31 = -t157 * t43 + t160 * t291;
t30 = -t157 * t291 - t160 * t43;
t28 = -t157 * t48 + t160 * t75;
t27 = -t157 * t75 - t160 * t48;
t15 = t18 * t70;
t7 = -t324 * t407 + t338;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t236, t301 * t373, t162 * t161, -0.2e1 * t236, -t162 * t159, 0, t159 * t244, t161 * t244, 0, 0, t134 * t186 + t183 * t220, (-t186 * t218 - t220 * t383) * qJD(1) + t154 * (t133 * t218 - t134 * t220), t186 * t154, t133 * t383 + t184 * t218, -t383 * t154, 0, t133 * t281 + t203 * t282 + t383 * t374, t134 * t281 + t139 * t186 + t151 * t183 + t206 * t282, qJD(2) * t368 - t204 * t246 + t245 * t365, t281 * t374, -t50 * t112 - t164 * t217, t217 * t172 + t173 * t219 + (t50 - t366) * t182 + (-t171 + 0.2e1 * t202) * t112, t164 * t153, -t165 * t219 - t169 * t182, -t165 * t153, 0, -t104 * t219 - qJD(4) * t208 + (t104 * t182 + (0.2e1 * t172 + t382) * t123) * qJD(1), -t104 * t217 - t123 * t50 + (t104 * t112 + t123 * t164) * qJD(1), -t80 * t182 - t113 * t172 - t81 * t112 - t115 * t173 + (-t112 * t113 + t115 * t182) * qJD(4), 0.2e1 * t104 * t299, -t379 * t21 + (t158 * t197 + t384) * t71, -t167 * t70 - t21 * t67 - t22 * t379 - t343, -t21 * t232, -t22 * t67 + t15, -t22 * t232, 0, t18 * t83 - t45 * t67 + (t22 * t83 + t45 * t70) * qJD(1), t167 * t83 - t21 * t317 + t318 * t71 + t379 * t45, t21 * t74 - t22 * t72 - t32 * t70 - t351, 0.2e1 * t45 * t317, -t71 * t56 + (-t10 * t71 - t21 * t59) * t160, (t325 + t332) * t21 + (t338 - t336 + (-t324 + t333) * qJD(6)) * t71, t10 * t70 - t160 * t231 - t22 * t59 - t60 * t71, t57 * t279 + (t11 * t71 - t21 * t57) * t157, t11 * t70 + t157 * t231 + t22 * t57 - t279 * t407, -t22 * t407 + t15, t157 * t215 + t160 * t216 + t22 * t226 - t4 * t70, -t157 * t216 + t160 * t215 + t22 * t26 + t3 * t70, (-t10 * t51 + t14 * t59 - t21 * t226 - t4 * t71 + (-t26 * t71 + t51 * t57) * qJD(6)) * t160 + (t11 * t51 + t14 * t57 + t21 * t26 - t3 * t71 + (-t226 * t71 - t51 * t59) * qJD(6)) * t157, t228 * t14 + (qJD(6) * t227 - t157 * t3 - t160 * t4) * t51; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t278, t301 * t163, 0, t278, 0, 0, t159 * t300, t161 * t300, 0, 0, t310, t79, t77, -t310, t78, 0, -t308 + (-t133 * t298 + (-t258 - t272) * qJD(3)) * pkin(4), t309 + (-t134 * t298 + (-t262 - t275) * qJD(3)) * pkin(4), -t133 * t246 + t134 * t245 + t368 * qJD(1) + (-t133 * t261 + t134 * t257) * pkin(4), -t139 * t282, t387, t38, t36, -t387, t37, 0, t107 * t153 + (t129 * t219 + t208) * qJD(1) + t81, -t224 + (-qJD(2) - t153) * t106 + (t129 * t217 - t315) * qJD(1), t106 * t219 + t107 * t217 + t131 * t169 + t132 * t50 + t190, t106 * t113 + t107 * t115 - t129 * t313 + t131 * t80 + t132 * t81, -t408, t406, t405, t408, t393, 0, t47 * t232 + (t67 * t86 - t348) * qJD(1) + t33, (-0.2e1 * qJD(2) + t251) * t46 + (-t379 * t86 - t346) * qJD(1) - t214, -t167 * t88 - t379 * t47 + t46 * t67 + t230 + t342, -t221 * t32 - t322 * t86 + t33 * t88 + t46 * t72 + t47 * t74, t7, t414, t411, t413, t410, t398, t11 * t84 + t157 * t211 - t250 * t399 + t47 * t57 + t396, -t10 * t84 - t353 + t47 * t59 + (t250 * t407 - t33) * t157 + t211 * t160, (t10 * t221 + t250 * t57 + t46 * t59) * t157 + (t11 * t221 + t250 * t59 - t46 * t57 - t3) * t160 + t242, t33 * t84 + t47 * t69 + (-t221 * t3 + t226 * t250 + t26 * t46) * t160 + (t221 * t4 + t226 * t46 - t250 * t26) * t157; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t310, t79, t77, -t310, t78, 0, -t308 + (-t257 + t272) * t339, t309 + (-t261 + t275) * t339, 0, 0, t387, t38, t36, -t387, t37, 0, t153 * t297 + t98 + (t135 * t219 + t208) * qJD(1) + (-t355 * t153 - t256) * t288, (t136 * t153 - t106) * qJD(2) + (t135 * t217 - t315) * qJD(1) + (-t358 * t153 - t259) * t288, -t136 * qJD(2) * t219 + t169 * t267 + t190 + (t50 + t366) * t260 - (pkin(2) * t265 - t297) * t217, -t135 * t313 + (-t113 * t136 + t115 * t137) * qJD(2) + (t355 * t80 + t358 * t81 + (t113 * t358 - t355 * t115) * qJD(4)) * pkin(2), -t408, t406, t405, t408, t393, 0, (t67 * t89 - t348) * qJD(1) + t33 + t247 * t232, -t306 - t225 + t232 * t291 + (-qJD(2) - 0.2e1 * qJD(3) + t286) * t102 + (-t379 * t89 - t346) * qJD(1), -t128 * t167 + t230 - t335 - t247 * t379 - (-t102 + t291) * t67, -t89 * t322 + t102 * t72 + t103 * t74 + t127 * t32 + t128 * t33 + (-t108 * t72 - t109 * t74) * qJD(2), t7, t414, t411, t413, t410, t398, t11 * t122 - (t127 * t293 + t30) * t407 + t247 * t57 + t209 * t157 + t396, -t10 * t122 - t353 + t31 * t407 + t247 * t59 + (t127 * t316 - t33) * t157 + t209 * t160, -t352 + t30 * t59 + t31 * t57 + (-t325 + t332) * t102 + t191 * t127 + t242, -t102 * t227 + t122 * t33 + t127 * t192 + t226 * t30 + t247 * t69 - t26 * t31; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t387, t38, t36, -t387, t37, 0, t113 * t153 + t217 * t299 + t81, t115 * t153 - t219 * t299 - t80, 0, 0, -t408, t406, t405, t408, t393, 0, -t76 * t232 + (t110 * t67 - t348) * qJD(1) + (-0.2e1 * qJD(4) - qJD(5) - t154) * t280 + t341, -t306 - t292 + t75 * t232 + (-t110 * t379 - t346) * qJD(1) + (-t232 * t264 - t233) * pkin(5), -t167 * t284 - t18 * t354 + (t72 + t280 + t76) * t379 - (-t264 * pkin(5) - t74 + t75) * t67, -t110 * t322 - t72 * t75 - t74 * t76 + (t357 * t33 + t158 * t32 + (-t158 * t74 + t357 * t72) * qJD(5)) * pkin(5), t404, t414, t411, t413, t410, t398, t150 * t11 - t27 * t407 - t76 * t57 - t407 * t328 + (-t157 * t243 + (-qJD(5) * t57 - t293 * t407 + t334) * t158) * pkin(5) + t396, -t150 * t10 + t28 * t407 - t76 * t59 + (-t160 * t243 + (-qJD(5) * t59 + t253) * t158) * pkin(5) + t403, t27 * t59 + t28 * t57 + ((-t276 * t57 + t277 * t59) * qJD(5) + t191 * t158) * pkin(5) + t394, t33 * t150 + t226 * t27 - t26 * t28 - t69 * t76 + ((t226 * t277 + t26 * t276) * qJD(5) + (-qJD(5) * t69 + t192) * t158) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t408, t406, t405, t408, t393, 0, t232 * t72 - t317 * t379 + t33, t232 * t74 - t317 * t67 - t32, 0, 0, t404, t414, t411, t413, t410, t398, pkin(3) * t11 + t57 * t72 + t396 + (-t328 - t34) * t407, -pkin(3) * t10 + t35 * t407 + t59 * t72 + t403, t34 * t59 + t35 * t57 + t394, pkin(3) * t33 + t226 * t34 - t26 * t35 + t69 * t72; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t350, -t57 ^ 2 + t59 ^ 2, -t10 + t389, -t350, t385 * t157 - t293 * t379 + t407 * t59, -t18, t26 * t407 - t59 * t69 + t4, -t226 * t407 + t57 * t69 - t3, 0, 0;];
tauc_reg = t1;
