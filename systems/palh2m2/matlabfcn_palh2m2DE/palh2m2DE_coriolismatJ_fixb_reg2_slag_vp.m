% Calculate inertial parameters regressor of coriolis matrix for
% palh2m2DE
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [4x1]
%   Generalized joint coordinates (joint angles)
% qJD [4x1]
%   Generalized joint velocities
% pkin [5x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[A2Off,A3Off,A4Off,L1,L2]';
% 
% Output:
% cmat_reg [(4*4)x(4*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2020-05-03 01:06
% Revision: 702b02ffee4f47164fa6a11b998f1d39ead3f7a6 (2020-05-02)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = palh2m2DE_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(4,1),zeros(4,1),zeros(5,1)}
assert(isreal(qJ) && all(size(qJ) == [4 1]), ...
  'palh2m2DE_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [4x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [4 1]), ...
  'palh2m2DE_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [4x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [5 1]), ...
  'palh2m2DE_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [5x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2020-05-03 01:06:50
% EndTime: 2020-05-03 01:06:51
% DurationCPUTime: 0.62s
% Computational Cost: add. (165->67), mult. (342->93), div. (0->0), fcn. (231->6), ass. (0->69)
t32 = cos(qJ(3));
t73 = 0.2e1 * t32 ^ 2 - 0.1e1;
t33 = cos(qJ(2));
t72 = 0.2e1 * t33 ^ 2 - 0.1e1;
t28 = sin(qJ(4));
t20 = t33 * pkin(4) + pkin(1);
t15 = pkin(2) + t20;
t11 = t32 * pkin(5) + t15;
t8 = pkin(3) + t11;
t71 = t28 * t8;
t30 = sin(qJ(2));
t62 = qJD(2) * t30;
t54 = pkin(4) * t62;
t29 = sin(qJ(3));
t60 = qJD(3) * t29;
t12 = pkin(5) * t60 + t54;
t31 = cos(qJ(4));
t70 = t31 * t12;
t69 = pkin(4) * qJD(2);
t68 = pkin(4) * qJD(3);
t67 = qJD(4) * t8;
t66 = qJD(1) * t29;
t65 = qJD(1) * t30;
t64 = qJD(1) * t31;
t63 = qJD(1) * t32;
t61 = qJD(2) * t33;
t59 = qJD(3) * t32;
t58 = pkin(1) * qJD(1);
t57 = pkin(1) * qJD(2);
t25 = qJD(1) + qJD(4);
t56 = pkin(4) * t25 * t30;
t55 = pkin(5) * t25 * t29;
t10 = -t29 * t33 + t32 * t30;
t53 = t10 * t69;
t52 = t10 * t68;
t51 = pkin(4) * t61;
t50 = pkin(5) * t66;
t22 = pkin(4) * t65;
t49 = t29 * t59;
t48 = t15 * t66;
t47 = t30 * t61;
t46 = t15 * t63;
t45 = t30 * t58;
t44 = t33 * t58;
t43 = t28 * t56;
t42 = t28 * t55;
t41 = t8 * t50;
t40 = t8 * t22;
t39 = t11 * t50;
t38 = t11 * t22;
t37 = t15 * t22;
t36 = t20 * t22;
t35 = t29 * t22;
t34 = t32 * t22;
t19 = t72 * qJD(1);
t18 = t73 * qJD(1);
t17 = t33 * t65;
t16 = t29 * t63;
t14 = t31 * t56;
t13 = t31 * t55;
t9 = -t29 * t30 - t32 * t33;
t7 = t28 * t12;
t6 = pkin(5) * t53;
t5 = pkin(5) * t52;
t4 = pkin(4) * (t28 * t61 - t30 * t64);
t3 = pkin(4) * (t28 * t65 + t31 * t61);
t2 = pkin(5) * (t28 * t59 - t29 * t64);
t1 = pkin(5) * (t28 * t66 + t31 * t59);
t21 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t47, t72 * qJD(2), 0, -t47, 0, 0, -t30 * t57, -t33 * t57, 0, 0, 0, 0, 0, 0, 0, 0, -t54, 0, 0, -t20 * t54, t49, t73 * qJD(3), 0, -t49, 0, 0, -t15 * t60 - t32 * t54, -t15 * t59 + t29 * t54, 0, -t15 * t54, 0, 0, 0, 0, 0, 0, -t12, 0, 0, -t11 * t12, 0, 0, 0, 0, 0, 0, -t28 * t67 - t70, -t31 * t67 + t7, 0, -t8 * t12; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t17, t19, t61, -t17, -t62, 0, -t45, -t44, 0, 0, 0, 0, 0, 0, 0, 0, -t22, 0, -t51, -t36, 0, 0, 0, 0, 0, 0, -t34, t35, -t51, -t37, 0, 0, 0, 0, 0, 0, -t22, 0, -t51, -t38, 0, 0, 0, 0, 0, 0, t4, t3, 0, -t40; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t16, t18, t59, -t16, -t60, 0, -t48, -t46, 0, 0, 0, 0, 0, 0, 0, 0, -t50, 0, -pkin(5) * t59, -t39, 0, 0, 0, 0, 0, 0, t2, t1, 0, -t41; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t25 * t71, -t31 * t8 * t25, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t17, -t19, 0, t17, 0, 0, t45, t44, 0, 0, 0, 0, 0, 0, 0, 0, t22, 0, 0, t36, 0, 0, 0, 0, 0, 0, t34, -t35, 0, t37, 0, 0, 0, 0, 0, 0, t22, 0, 0, t38, 0, 0, 0, 0, 0, 0, t14, -t43, 0, t40; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t52, t9 * t68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t5, 0, 0, 0, 0, 0, 0, 0, 0, 0, t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t14, -t43, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t16, -t18, 0, t16, 0, 0, t48, t46, 0, 0, 0, 0, 0, 0, 0, 0, t50, 0, 0, t39, 0, 0, 0, 0, 0, 0, t13, -t42, 0, t41; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t53, -t9 * t69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t6, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t13, -t42, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(1) * t71 - t70, t8 * t64 + t7, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t4, t3, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2, t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t21;
