% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% palh2m2
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [4x1]
%   Generalized joint coordinates (joint angles)
% qJD [4x1]
%   Generalized joint velocities
% qJDD [4x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [5x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[A2Off,A3Off,A4Off,L1,L2]';
%
% Output:
% f_new_reg [(3*7)x(7*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-06-06 14:46
% Revision: 7254ec7b167830f9592b38d39d95d449e6fd98ef (2019-06-02)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = palh2m2_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(4,1),zeros(4,1),zeros(4,1),zeros(3,1),zeros(5,1)}
assert(isreal(qJ) && all(size(qJ) == [4 1]), ...
  'palh2m2_invdynf_fixb_reg2_snew_vp: qJ has to be [4x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [4 1]), ...
  'palh2m2_invdynf_fixb_reg2_snew_vp: qJD has to be [4x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [4 1]), ...
  'palh2m2_invdynf_fixb_reg2_snew_vp: qJDD has to be [4x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'palh2m2_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [5 1]), ...
  'palh2m2_invdynf_fixb_reg2_snew_vp: pkin has to be [5x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-06-06 14:46:04
% EndTime: 2019-06-06 14:46:09
% DurationCPUTime: 5.58s
% Computational Cost: add. (37320->248), mult. (93530->343), div. (0->0), fcn. (53774->8), ass. (0->181)
t1396 = sin(qJ(3));
t1391 = t1396 ^ 2;
t1400 = cos(qJ(3));
t1393 = t1400 ^ 2;
t1416 = t1391 + t1393;
t1401 = cos(qJ(2));
t1421 = qJD(1) * qJD(2);
t1412 = t1401 * t1421;
t1397 = sin(qJ(2));
t1414 = t1397 * qJDD(1);
t1372 = t1412 + t1414;
t1392 = t1397 ^ 2;
t1394 = t1401 ^ 2;
t1415 = t1392 + t1394;
t1379 = t1415 * qJD(1);
t1389 = t1401 * qJDD(1);
t1413 = t1397 * t1421;
t1408 = -t1389 + t1413;
t1331 = -t1379 * qJD(2) + t1401 * t1372 + t1397 * t1408;
t1420 = qJD(3) * t1379;
t1411 = t1331 + t1420;
t1422 = t1411 * t1400;
t1341 = t1397 * t1372 - t1401 * t1408;
t1418 = t1396 * t1341;
t1312 = t1418 + t1422;
t1348 = t1416 * t1379;
t1336 = t1400 * t1341;
t1406 = -t1411 * t1396 + t1336;
t1288 = -t1348 * qJD(3) + t1400 * t1312 - t1396 * t1406;
t1419 = t1396 * t1288;
t1399 = cos(qJ(4));
t1287 = t1399 * t1288;
t1417 = t1400 * t1288;
t1398 = sin(qJ(1));
t1402 = cos(qJ(1));
t1383 = -t1402 * g(1) - t1398 * g(2);
t1405 = qJD(1) ^ 2;
t1369 = -t1405 * pkin(1) + t1383;
t1354 = -t1401 * g(3) - t1397 * t1369;
t1386 = t1401 * t1405 * t1397;
t1380 = qJDD(2) + t1386;
t1340 = t1380 * pkin(4) + t1354;
t1355 = -t1397 * g(3) + t1401 * t1369;
t1404 = qJD(2) ^ 2;
t1385 = -t1394 * t1405 - t1404;
t1344 = t1385 * pkin(4) + t1355;
t1326 = -t1397 * t1340 + t1401 * t1344;
t1374 = t1379 ^ 2;
t1318 = -t1374 * pkin(2) + t1326;
t1325 = t1401 * t1340 + t1397 * t1344;
t1305 = t1400 * t1318 + t1396 * t1325;
t1360 = t1400 * t1374 * t1396;
t1356 = qJDD(3) + t1360;
t1382 = t1398 * g(1) - t1402 * g(2);
t1410 = t1331 + 0.2e1 * t1420;
t1291 = t1400 * t1336 + (t1312 - t1422) * t1396;
t1290 = qJDD(4) + t1291;
t1345 = qJD(4) + t1348;
t1343 = t1345 ^ 2;
t1395 = sin(qJ(4));
t1409 = -t1395 * t1290 - t1399 * t1343;
t1304 = -t1396 * t1318 + t1400 * t1325;
t1298 = t1356 * pkin(5) + t1304;
t1403 = qJD(3) ^ 2;
t1359 = -t1393 * t1374 - t1403;
t1299 = t1359 * pkin(5) + t1305;
t1275 = -t1396 * t1298 + t1400 * t1299;
t1407 = -t1399 * t1290 + t1395 * t1343;
t1368 = qJDD(1) * pkin(1) + t1382;
t1337 = t1368 + (-t1408 - t1413) * pkin(4);
t1327 = t1341 * pkin(2) + t1337;
t1296 = t1327 + (-t1396 * t1420 + t1406) * pkin(5);
t1384 = -t1392 * t1405 - t1404;
t1381 = -qJDD(2) + t1386;
t1378 = t1415 * t1405;
t1377 = -t1398 * qJDD(1) - t1402 * t1405;
t1376 = t1402 * qJDD(1) - t1398 * t1405;
t1375 = t1415 * qJDD(1);
t1373 = t1389 - 0.2e1 * t1413;
t1371 = 0.2e1 * t1412 + t1414;
t1358 = -t1391 * t1374 - t1403;
t1357 = -qJDD(3) + t1360;
t1353 = t1401 * t1381 - t1397 * t1384;
t1352 = -t1397 * t1380 + t1401 * t1385;
t1351 = t1397 * t1381 + t1401 * t1384;
t1350 = t1401 * t1380 + t1397 * t1385;
t1349 = t1415 * t1374;
t1347 = t1416 * t1374;
t1346 = t1348 ^ 2;
t1335 = t1400 * t1357 - t1396 * t1358;
t1334 = -t1396 * t1356 + t1400 * t1359;
t1333 = t1396 * t1357 + t1400 * t1358;
t1332 = t1400 * t1356 + t1396 * t1359;
t1330 = -t1397 * t1354 + t1401 * t1355;
t1329 = t1401 * t1354 + t1397 * t1355;
t1328 = t1416 * t1346;
t1322 = -t1397 * t1331 + t1401 * t1341;
t1321 = -t1400 * t1331 - t1418;
t1320 = -t1401 * t1331 - t1397 * t1341;
t1319 = -t1396 * t1331 + t1336;
t1316 = t1397 * t1333 + t1401 * t1335;
t1315 = t1397 * t1332 + t1401 * t1334;
t1314 = t1401 * t1333 - t1397 * t1335;
t1313 = t1401 * t1332 - t1397 * t1334;
t1311 = t1410 * t1400 + t1418;
t1310 = t1410 * t1396 - t1336;
t1308 = t1415 * t1328;
t1307 = t1397 * t1325 + t1401 * t1326;
t1306 = t1401 * t1325 - t1397 * t1326;
t1303 = -t1397 * t1320 + t1401 * t1322;
t1302 = t1400 * t1319 - t1396 * t1321;
t1301 = t1401 * t1320 + t1397 * t1322;
t1300 = t1396 * t1319 + t1400 * t1321;
t1295 = -t1397 * t1314 + t1401 * t1316;
t1294 = -t1397 * t1313 + t1401 * t1315;
t1293 = t1401 * t1314 + t1397 * t1316;
t1292 = t1401 * t1313 + t1397 * t1315;
t1286 = t1395 * t1288;
t1281 = -t1397 * t1306 + t1401 * t1307;
t1280 = t1401 * t1306 + t1397 * t1307;
t1279 = -t1396 * t1304 + t1400 * t1305;
t1278 = t1400 * t1304 + t1396 * t1305;
t1277 = t1397 * t1300 + t1401 * t1302;
t1276 = t1401 * t1300 - t1397 * t1302;
t1274 = t1400 * t1298 + t1396 * t1299;
t1273 = t1400 * t1274;
t1272 = t1396 * t1274;
t1271 = -t1291 * pkin(3) - t1296;
t1270 = -t1346 * pkin(3) + t1275;
t1269 = t1400 * t1291 - t1419;
t1268 = -t1396 * t1291 - t1417;
t1267 = (t1395 ^ 2 + t1399 ^ 2) * t1288;
t1266 = t1396 * t1287 + t1400 * t1407;
t1265 = t1395 * t1419 + t1400 * t1409;
t1264 = -t1396 * t1407 + t1399 * t1417;
t1263 = t1395 * t1417 - t1396 * t1409;
t1262 = t1397 * t1278 + t1401 * t1279;
t1261 = t1401 * t1278 - t1397 * t1279;
t1260 = -t1397 * t1276 + t1401 * t1277;
t1259 = t1401 * t1276 + t1397 * t1277;
t1258 = t1400 * t1275 + t1272;
t1257 = -t1396 * t1275 + t1273;
t1256 = t1399 * t1270 - t1395 * t1271;
t1255 = -t1395 * t1270 - t1399 * t1271;
t1254 = -t1396 * t1268 + t1400 * t1269;
t1253 = t1400 * t1268 + t1396 * t1269;
t1252 = -t1396 * t1264 + t1400 * t1266;
t1251 = -t1396 * t1263 + t1400 * t1265;
t1250 = t1400 * t1264 + t1396 * t1266;
t1249 = t1400 * t1263 + t1396 * t1265;
t1248 = -t1397 * t1261 + t1401 * t1262;
t1247 = t1401 * t1261 + t1397 * t1262;
t1246 = -t1396 * t1257 + t1400 * t1258;
t1245 = t1400 * t1257 + t1396 * t1258;
t1244 = -t1395 * t1255 + t1399 * t1256;
t1243 = t1399 * t1255 + t1395 * t1256;
t1242 = t1397 * t1253 + t1401 * t1254;
t1241 = t1401 * t1253 - t1397 * t1254;
t1240 = t1397 * t1250 + t1401 * t1252;
t1239 = t1397 * t1249 + t1401 * t1251;
t1238 = t1401 * t1250 - t1397 * t1252;
t1237 = t1401 * t1249 - t1397 * t1251;
t1236 = t1400 * t1244 + t1272;
t1235 = -t1396 * t1244 + t1273;
t1234 = t1397 * t1245 + t1401 * t1246;
t1233 = t1401 * t1245 - t1397 * t1246;
t1232 = -t1397 * t1241 + t1401 * t1242;
t1231 = t1401 * t1241 + t1397 * t1242;
t1230 = -t1397 * t1238 + t1401 * t1240;
t1229 = -t1397 * t1237 + t1401 * t1239;
t1228 = t1401 * t1238 + t1397 * t1240;
t1227 = t1401 * t1237 + t1397 * t1239;
t1226 = -t1396 * t1235 + t1400 * t1236;
t1225 = t1400 * t1235 + t1396 * t1236;
t1224 = -t1397 * t1233 + t1401 * t1234;
t1223 = t1401 * t1233 + t1397 * t1234;
t1222 = t1397 * t1225 + t1401 * t1226;
t1221 = t1401 * t1225 - t1397 * t1226;
t1220 = -t1397 * t1221 + t1401 * t1222;
t1219 = t1401 * t1221 + t1397 * t1222;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t1377, -t1376, 0, -t1398 * t1382 + t1402 * t1383, 0, 0, 0, 0, 0, 0, t1402 * t1352 - t1398 * t1373, t1402 * t1353 + t1398 * t1371, t1402 * t1375 - t1398 * t1378, t1402 * t1330 - t1398 * t1368, 0, 0, 0, 0, 0, 0, -t1398 * t1341 - t1402 * t1349, t1398 * t1331, t1402 * t1303 - t1398 * t1374, t1402 * t1281 - t1398 * t1337, 0, 0, 0, 0, 0, 0, t1402 * t1294 + t1398 * t1310, t1402 * t1295 + t1398 * t1311, t1402 * t1260 - t1398 * t1347, t1402 * t1248 - t1398 * t1327, 0, 0, 0, 0, 0, 0, -t1398 * t1291 - t1402 * t1308, t1398 * t1288, t1402 * t1232 - t1398 * t1346, t1402 * t1224 - t1398 * t1296, 0, 0, 0, 0, 0, 0, t1402 * t1229 + t1398 * t1407, t1402 * t1230 - t1398 * t1409, t1398 * t1267, t1402 * t1220 - t1398 * t1243; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1376, t1377, 0, t1402 * t1382 + t1398 * t1383, 0, 0, 0, 0, 0, 0, t1398 * t1352 + t1402 * t1373, t1398 * t1353 - t1402 * t1371, t1398 * t1375 + t1402 * t1378, t1398 * t1330 + t1402 * t1368, 0, 0, 0, 0, 0, 0, t1402 * t1341 - t1398 * t1349, -t1402 * t1331, t1398 * t1303 + t1402 * t1374, t1398 * t1281 + t1402 * t1337, 0, 0, 0, 0, 0, 0, t1398 * t1294 - t1402 * t1310, t1398 * t1295 - t1402 * t1311, t1398 * t1260 + t1402 * t1347, t1398 * t1248 + t1402 * t1327, 0, 0, 0, 0, 0, 0, t1402 * t1291 - t1398 * t1308, -t1402 * t1288, t1398 * t1232 + t1402 * t1346, t1398 * t1224 + t1402 * t1296, 0, 0, 0, 0, 0, 0, t1398 * t1229 - t1402 * t1407, t1398 * t1230 + t1402 * t1409, -t1402 * t1267, t1398 * t1220 + t1402 * t1243; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1350, t1351, 0, t1329, 0, 0, 0, 0, 0, 0, 0, 0, t1301, t1280, 0, 0, 0, 0, 0, 0, t1292, t1293, t1259, t1247, 0, 0, 0, 0, 0, 0, 0, 0, t1231, t1223, 0, 0, 0, 0, 0, 0, t1227, t1228, 0, t1219; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1405, -qJDD(1), 0, t1383, 0, 0, 0, 0, 0, 0, t1352, t1353, t1375, t1330, 0, 0, 0, 0, 0, 0, -t1349, 0, t1303, t1281, 0, 0, 0, 0, 0, 0, t1294, t1295, t1260, t1248, 0, 0, 0, 0, 0, 0, -t1308, 0, t1232, t1224, 0, 0, 0, 0, 0, 0, t1229, t1230, 0, t1220; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1405, 0, t1382, 0, 0, 0, 0, 0, 0, t1373, -t1371, t1378, t1368, 0, 0, 0, 0, 0, 0, t1341, -t1331, t1374, t1337, 0, 0, 0, 0, 0, 0, -t1310, -t1311, t1347, t1327, 0, 0, 0, 0, 0, 0, t1291, -t1288, t1346, t1296, 0, 0, 0, 0, 0, 0, -t1407, t1409, -t1267, t1243; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1350, t1351, 0, t1329, 0, 0, 0, 0, 0, 0, 0, 0, t1301, t1280, 0, 0, 0, 0, 0, 0, t1292, t1293, t1259, t1247, 0, 0, 0, 0, 0, 0, 0, 0, t1231, t1223, 0, 0, 0, 0, 0, 0, t1227, t1228, 0, t1219; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1385, t1381, t1389, t1355, 0, 0, 0, 0, 0, 0, -t1401 * t1374, 0, t1322, t1307, 0, 0, 0, 0, 0, 0, t1315, t1316, t1277, t1262, 0, 0, 0, 0, 0, 0, -t1401 * t1328, 0, t1242, t1234, 0, 0, 0, 0, 0, 0, t1239, t1240, 0, t1222; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1380, t1384, -t1414, t1354, 0, 0, 0, 0, 0, 0, t1397 * t1374, 0, t1320, t1306, 0, 0, 0, 0, 0, 0, t1313, t1314, t1276, t1261, 0, 0, 0, 0, 0, 0, t1397 * t1328, 0, t1241, t1233, 0, 0, 0, 0, 0, 0, t1237, t1238, 0, t1221; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1373, t1371, -t1378, -t1368, 0, 0, 0, 0, 0, 0, -t1341, t1331, -t1374, -t1337, 0, 0, 0, 0, 0, 0, t1310, t1311, -t1347, -t1327, 0, 0, 0, 0, 0, 0, -t1291, t1288, -t1346, -t1296, 0, 0, 0, 0, 0, 0, t1407, -t1409, t1267, -t1243; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1374, 0, t1341, t1326, 0, 0, 0, 0, 0, 0, t1334, t1335, t1302, t1279, 0, 0, 0, 0, 0, 0, -t1328, 0, t1254, t1246, 0, 0, 0, 0, 0, 0, t1251, t1252, 0, t1226; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1331, t1325, 0, 0, 0, 0, 0, 0, t1332, t1333, t1300, t1278, 0, 0, 0, 0, 0, 0, 0, 0, t1253, t1245, 0, 0, 0, 0, 0, 0, t1249, t1250, 0, t1225; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1341, t1331, -t1374, -t1337, 0, 0, 0, 0, 0, 0, t1310, t1311, -t1347, -t1327, 0, 0, 0, 0, 0, 0, -t1291, t1288, -t1346, -t1296, 0, 0, 0, 0, 0, 0, t1407, -t1409, t1267, -t1243; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1359, t1357, t1319, t1305, 0, 0, 0, 0, 0, 0, -t1400 * t1346, 0, t1269, t1258, 0, 0, 0, 0, 0, 0, t1265, t1266, 0, t1236; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1356, t1358, t1321, t1304, 0, 0, 0, 0, 0, 0, t1396 * t1346, 0, t1268, t1257, 0, 0, 0, 0, 0, 0, t1263, t1264, 0, t1235; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1310, t1311, -t1347, -t1327, 0, 0, 0, 0, 0, 0, -t1291, t1288, -t1346, -t1296, 0, 0, 0, 0, 0, 0, t1407, -t1409, t1267, -t1243; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1346, 0, t1291, t1275, 0, 0, 0, 0, 0, 0, t1409, t1407, 0, t1244; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1288, t1274, 0, 0, 0, 0, 0, 0, t1286, t1287, 0, t1274; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1291, t1288, -t1346, -t1296, 0, 0, 0, 0, 0, 0, t1407, -t1409, t1267, -t1243; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1343, -t1290, -t1286, t1256; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1290, -t1343, -t1287, t1255; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1286, t1287, 0, t1274;];
f_new_reg  = t1;
